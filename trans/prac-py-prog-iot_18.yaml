- en: Assessments
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To keep your project-specific Python packages and dependencies isolated from
    other projects and the system-level Python packages.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No. You can always regenerate a virtual environment and reinstall packages.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To keep a list of all the Python packages (and versions) that your Python projects
    rely on. Having a maintained `requirements.txt` file allows you to reinstall all
    packages easily with the command `pip install -r requirements.txt`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure you are using the absolute path to the Python interpreter that is
    in the `bin` folder of your virtual environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It activates a virtual environment so that all users of Python and pip are sandboxed
    to the virtual environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`deactivate`. If you type `exit` (and we all do it sometimes!), it exits the
    Terminal window or closes your remote SSH session! Grrrrr.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, just change into the `projects` folder and activate the virtual environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python IDLE, but remember you need to use `python -m idlelib.idle [filename]
    &` in a virtual environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check that the I2C interface has been enabled in Raspbian.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sort by answer number so that you do not damage other components or the resistor...
    unless you understand how the different values will affect the electronic circuit
    and it's safe to do so.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. GPIO Zero is a wrapper on top of other GPIO libraries. It's designed
    to be easy to use for beginners by hiding away lower-level GPIO interfacing details.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. In many scenarios, you are better off using mature higher-level packages
    as they will help speed up development. The Python API documentation also recommends
    this approach.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No. An LED has positive (anode) and negative (cathode) terminals (legs) and
    must be connected the correct way around.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There's a chance that there is a mismatch between the devices' time zone handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`signal.pause()`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can create and configure an instance of `RequestParser`. We use this instance
    in our controller's handler methods such as `.get()` or `.post()` to validate
    the client's request.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: WebSockets – a client and server built using Web Sockets can initiate a request
    to one another in either direction. This is in contrast to a RESTful API service
    where only the client can initiate a request to the server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Flask-SocketIO does not include an in-built validation class like Flask-RESTful.
    You have to perform input validation manually. Alternatively, you could also find
    a suitable third-party Python module to use from PyPi.org.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `templates` folder is the default location where the Flask framework looks
    for template files. It's in this location where we store our HTML pages and templates.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We should initialize event listeners and the web page content in the document
    ready function, which is called once the web page has been completely loaded.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The command is `curl`. It is installed by default on most Unix-based operating
    systems.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Changing the value property changes the PWM duty cycle for the LED. We visualize
    this as changing the brightness of the LED.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**MQTT**, or **Message Queue Telemetry Protocol**, is a lightweight messaging
    protocol frequently used in distributed IoT networks.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the QoS levels, making sure they are either level 1 or 2.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A `Will` message will be published on behalf of a client if that client abruptly
    disconnects from the broker without cleanly closing the connection first.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Both the published message and subscribing clients must use at least QoS level
    1, which ensures messages are delivered one or more times.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ideally, nothing should need to change in your Python code other than perhaps
    the broker host and port because MQTT is an open standard. The proviso is that
    the new broker is configured similarly to the broker being replaced – for example,
    both brokers are configured similarly to provide message retention or durable
    connection features to clients.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should subscribe to topics in an on successful connection-type handler.
    This way, if the client loses its broker connection, it can automatically reestablish
    topic subscriptions when it reconnects.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**SPI** (**Serial Peripheral Interface Circuit**). LED strips and matrices
    are common examples.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can refer to the device's official datasheet, or use the command-line tool
    i2cdetect, which lists the addresses of all connected I2C devices.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure you are using the correct pin numbering scheme expected by the library,
    and/or make sure you have configured the library to use the scheme you prefer
    if the library provides this option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The driver library is not built upon PiGPIO and therefore does not support remote
    GPIO.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. All GPIO pins are rated for 3.3 volts. Connecting any voltage higher
    than this can damage your Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The library you are using to drive the servo is most likely using software PWM
    to generate the PWM signals for the servo. Software PWM signals can be distorted
    when the Raspberry Pi's CPU gets busy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you are powering the servos from the 5-volt pin of your Raspberry Pi, it'll
    indicate that you are drawing too much power, effectively robbing the power from
    the Raspberry Pi. Ideally, the servos should be powered from an external power
    source.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Generally speaking, yes. It's safe to try because a higher resistance results
    in a lower current in the circuit (Ohm's law) and 330Ω is relatively close to
    the desired 200Ω resistor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The higher resistance has resulted in less current to the point that there is
    not enough current for the circuit to operate reliably.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The amount of power to be dissipated by the resistor exceeds the resistor's
    power rating. In addition to using Ohm's law to determine a resistor value, you
    also need to calculate the expected power dissipation of the resistor and ensure
    that the resistor's power rating (in watts) exceeds your calculated value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 1 (one). An input GPIO pin connected to +3.3 volts is a logical high.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: GPIO 21 is floating. It's not pulled up to +3.3 volts by a physical resistor
    or via code using a function call such as `pi.set_pull_up_down(21, pigpio.PUD_UP)`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You must use a logic level converter. This could be a simple resistor-based
    voltage divider, a dedicated logic level converter IC or module, or any other
    form that can appropriately shift down 5 volts to 3.3 volts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. A resistor voltage divider can only step down a voltage. However, remember
    that it may be possible to drive a 5-volt logic device using 3.3 volts as long
    as the 5-volt device registers 3.3 volts as a logical high.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MOSFETs are voltage-controlled components, while BJTs are current-controlled
    components.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You do not have a pull-down resistor on the MOSFET's gate leg, so it's left
    floating. The MOSFET discharges slowly and this is reflected as the motor is spinning
    down. Using a pull-down resistor ensures the MOSFET discharges promptly and becomes
    off.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: (a) Make sure the G, S, and D legs are connected correctly because different
    package styles (for example, T092 versus TP220) have their legs ordered differently.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: (b) You also want to make sure that the MOSFET is logic-level compatible so
    that it can be controlled using a 3.3-volt voltage source.
  prefs: []
  type: TYPE_NORMAL
- en: (c) Ensure that the voltage divider created between the pull-down resistor and
    the current limiting resistor allows >~3 volts into the MOSFET's gate leg.
  prefs: []
  type: TYPE_NORMAL
- en: Optocouplers and relays electrically isolate the input and output sides of a
    circuit. Transistors are in-circuit, and while they allow a low-current device
    to control a larger current device, both devices are still both electrically connected
    (for example, you will see a common ground connection).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Active low is where you make a GPIO low to turn on or activate the connected
    circuit. Active high is the opposite, in that we make the GPIO pin high to activate
    the connected circuit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Code activated pull-down only becomes pull-down when the code is run, so the
    MOSFET gate is basically left floating until the code is run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The stall current is the current used by the motor when its staff has been,
    well, stalled – for example, forcefully stopped from turning. This is the maximum
    current that a motor will draw.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There is no difference – they are two terms used interchangeably to describe
    the current a motor uses when it is spinning freely with no load attached to the
    motor's shaft.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Check that your power supply can deliver enough current (and voltage) to your
    LED strip. Current requirements increase in proportion with the number of LEDs
    you want to illuminate, and the color and brightness they are set to. An insufficient
    current can mean that the internal red/green/blue LEDs are not illuminated correctly
    and thus the colors are not as you expected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The absence of a Slave Select or Client Enable pin means that the APA102 takes
    full control of the SPI interface. This means that you cannot connect more than
    one SPI slave to an SPI pin (unless you employ additional electronics).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First, check that your logic level converter is connected correctly. Secondly,
    it's possible that the logic level converter cannot convert logic levels fast
    enough to keep up with the SPI interface. Try lowering the SPI bus speed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We use the **PIL** (**Python Imaging Library**) to create an in-memory image
    representing what we want to display. We then send this image to the OLED display
    for rendering.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**RTTTL** means **Ring Tone Text Transfer Language**, which is a ring-tone
    music format created by Nokia.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The DHT22 is a more accurate sensor, and it is capable of sensing a greater
    range of temperatures and humanities.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The external pull-up resistor is optional because our Raspberry Pi can use its
    internal embedded pull-up resistor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: An LDR is a light-sensitive resistor. When used as part of a voltage-divider
    circuit, we turn the varying resistance into a varying voltage. This voltage can
    then be detected by an analog-to-digital converter such as the ADS1115, which
    is connected to your Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Try varying the resistance of the fixed resistor in the voltage-divider circuit.
    Try higher-value resistances to make the LDR more sensitive in darker conditions.
    Try lower-resistance values to make the LDR more sensitive to brighter conditions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No two LDRs are identical when it comes to the resistances they measure. If
    you swap out an LDR in a circuit, re-calibrate the code just to be sure.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Water conducts electricity. It acts as a resistor between the two probe wires.
    This resistance is converted to a voltage by the voltage divider, and this is
    detectable by the ADS1115 ADC.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We typically find default reference pulse widths of 1 ms for left, and 2 ms
    for rights used for the servos. In reality, the servos may need slightly adjusted
    pulse widths to reach their extreme rotation positions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You are applying a pulse width that is trying to rotate your servo beyond its
    physical limits.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: An H-bridge allows us to also change the rotation of a motor and apply a brake
    to quickly stop the motor spinning.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Many factors affect the reliability of braking, including the IC and your motor.
    You can adopt PWM-style braking as an alternative braking technique.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Vibrating but not turning is often the symptom of a mismatch between the coil
    energizing order and the coil stepping sequence. You need to identify and ensure
    the stepper motor's coils are connected correctly and match the stepping sequence.
    Consulting your stepper motor's datasheet is the best place to start.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The L293D has a voltage drop of around 2 volts, so your motor is only getting
    around 3 volts. To compensate for this voltage drop, you would need a power source
    of 7 volts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No. The GPIO pins only supply 3.3 volts. While this might be just enough to
    rotate a 5-volt stepper motor, the current requirements of a stepper motor will
    exceed the safe limits of the Raspberry Pi GPIO pins.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: No. A **passive infrared** (**PIR**) sensor can only detect abstract movement.
    You will need an active-type infrared sensor or a device like a thermal camera
    (and a lot more complex code) to extract richer movement information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: An ultrasonic sensor measures the round-trip timing of ultrasonic pulses, which
    is then used to calculate distance. Factors that affect the ultrasonic pulse timing
    or the speed-of-sound constant used therefore affect the calculated distance.
    Some examples include temperature since this affects the speed of sound, the material
    of the detected object (for example, does it absorb sound?), the size of the object,
    and its angle relative to the sensor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Both latching and non-latching Hall effect sensors output a digital signal –
    their output pin is either HIGH or LOW. In contrast, ratiometric Hall effect sensors
    output an analog signal (varying voltage) relative to how close they are to a
    magnetic field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `callback_handler` function will be called whenever GPIO transitions to either a
    HIGH or LOW state.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: So that the relative voltage drop across the resistor that sits between the
    5-volt source and the voltage-divider output (between the two resistors) is 3.3
    volts, that is, 5 volts * 2kΩ/(1kΩ + 2kΩ) = ~3.3 volts. If you reversed the resistor
    values in the circuit, the voltage-divider output would be ~1.7 volts, that is,
    5 volts * 1kΩ/(1kΩ + 2kΩ) = ~1.7 volts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After consulting the datasheet for the HC-SR501 PIR sensor, we learn that its
    output pin always works at 3.3 volts even though it's powered from 5 volts, thus
    we did not need a voltage divider. (Note that, in practice, we ideally would also
    confirm this by our measurement.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A publish-subscribe approach promotes a highly decoupled approach to programming.
    This can be beneficial when you have many components (for example, sensors) publishing
    data that simply needs to be consumed elsewhere in your program.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**GIL** stands for **Global Interpreter Lock**. It''s a design aspect of the
    Python programming language that means only one thread ever has access to the
    Python interpreter at a time.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A pure event loop (for example, one long while loop) can get complex as your
    program grows. The need for many state variables and non-trivial and intervening
    conditional tests (for example, if statements) can make the program logic hard
    to follow and debug.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No. Every approach has its purpose. Event loops are fine when they are small
    and focused. It's only when they become large and are performing multiple actions
    that they become complex.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you are programming with threads, calling `join()` on another thread joins
    that thread to your current thread. Your current thread then blocks until all
    joined threads run methods complete. This is a simple way of synchronizing the
    completion of multiple threads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Perhaps you are using a `sleep` statement (from the time library), such as `sleep(duration)`,
    which blocks for the full duration. Try using the approach in the following example,
    which will allow your program to remain responsive to a change in the value of `duration`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: No approach is superior. There is always more than one way to reach your programming
    goal in Python. The best approach, or combination of approaches, all depends on
    your project and what you are trying to achieve. The best approach can also be
    the one that is best for you based on your personal preferences and preferred
    programming style.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We used different temperatures to create a buffer so that we would not generate
    multiple triggers (and multiple emails) if the temperature hovered around a single
    temperature value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using an intermediary meant we did not need to worry about a firewall, port
    forwarding, and other configurations necessary to expose your Raspberry Pi to
    the public internet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: IFTTT is more consumer-focused, while Zapper is more business-focused in terms
    of the integrations it provides. Zapper will also allow you to create a more complex
    workflow, trigger, and action scenarios.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No. ThingSpeak only consumes data to display on a dashboard. Some platforms,
    such as ThingBoard, will allow you to send data back to a device for the purposes
    of controlling that device.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There is a maximum of three JSON properties available `– Value1`, `Value2`,
    and `Value3`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From ease and speed of development perspectives, IFTTT or Zapper would be a
    good choice, but you could certainly use AWS or one of the other major IoT platforms,
    or even Home Assistant.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The use of PyPubSub was a design decision to decouple MQTT-related code and
    logic from hardware control code and logic, with the goal of making the code cleaner
    and easier to maintain.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The commands you speak when using the Google Assistant app are shown on your
    device as text, so it's easy to see how Google Assistant heard your spoken commands,
    and what was sent as textual commands to your IFTTT Applet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will need to build an integration service that marshals data between MQTT
    and the RESTful APIs (or, alternatively, identify a thirty-party service that
    does this – for example, check out [https://io.adafruit.com](https://io.adafruit.com) and
    their IFTTT service). IFTTT offers RESTful webhooks as an option to build custom
    integrations, however, it does not offer an MQTT option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One option is to use MQTT, just like the example we covered in this chapter.
    If you connect multiple IoTrees using MQTT to a central MQTT broker, they all
    receive instructions together. A second option could be to build a WebSockets-based
    service and application (we covered this approach in [Chapter 3](b9f3d19f-a490-4752-ac4a-5607496dc3d9.xhtml),
    *Networking with RESTful APIs and Web Sockets Using Flask*).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We used the free [dweet.io](http://dweet.io) service for practical convenience
    so what we did not have to worry about firewalls, port forwarding, and router
    configurations at your place (just in case this is something you are not experienced
    with). The free [dweet.io](http://dweet.io) service offers no security or privacy,
    so it is undesirable for many projects. If you like the idea of [dweet.io](http://dweet.io),
    there is [dweetpro.io](https://dweetpro.io), a paid alternative that offers security
    and many other features that are not available in the free version.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`CURL` is a popular command-line tool that can be used to test RESTful APIs.
    Postman ([getpostman.com](https://getpostman.com)) is a popular GUI tool that
    can also be used for the same purpose.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you use the retained message features of the MQTT broker, each IoTree will
    receive the last message (for example, what color pattern to show) when it connects
    and therefore can initialize itself. We covered retained messages in [Chapter
    4](6947b564-6182-4ec9-998a-37f636c0bce6.xhtml), *Networking with MQTT, Python,
    and the Mosquitto MQTT Broker*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If your MQTT broker is running on the same Raspberry Pi as an IoTree and you
    restart this Raspberry Pi, all retained messages will be lost unless the Mosquitto
    MQTT broker has persistence enabled in its configuration. (Our configuration from [Chapter
    4](6947b564-6182-4ec9-998a-37f636c0bce6.xhtml), *Networking with MQTT, Python,
    and the Mosquitto MQTT Broker*, ensured persistence is enabled).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
