- en: Chapter 2. Docker Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Docker installation is pretty smooth in most of the operating systems, and there
    are very few chances of things going wrong. Docker Engine installation is supported
    mostly on all the Linux, Cloud, Windows, and Mac OS X environments. If the Linux
    version is not supported, then Docker Engine can be installed using binaries.
    Docker binary installation is mostly oriented for hackers who want to try out
    Docker on a variety of OS. It usually involves checking runtime dependencies,
    kernel dependencies, and using Docker platform-specific binaries in order to move
    ahead with installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Docker Toolbox is an installer, which can be used to quickly install and set
    up a Docker environment on your Windows or Mac machine. Docker toolbox also installs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Docker client**: It executes commands, such as build and run, and ship containers
    by communicating with the Docker daemon'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Docker Machine**: It is a tool used to install Docker Engine on virtual hosts
    and manages them with the help of Docker Machine commands'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Docker Compose**: It is a tool used to define and run multicontainer Docker
    applications'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kitematic**: The Docker GUI that runs on Mac OS X and Windows operating system'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The installation for Docker with toolbox as well as on various supported OSes
    is quite straightforward, but nevertheless we have listed potential pitfalls and
    troubleshooting steps involved.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we explore how to install Docker on various Linux distributions,
    such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Ubuntu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red Hat Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CentOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CoreOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fedora
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SUSE Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All of the above OSes can be deployed on the bare-metal machines, but we have
    used AWS to deploy in some of the cases, as it's an ideal situation for a production
    environment. Also, it'll be faster to get the environment up and running in AWS.
    We have explained the steps for the same in the respective sections in this chapter,
    which will help you to troubleshoot and speed up the deployment on AWS.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Docker on Ubuntu
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s get started with installing Docker on Ubuntu 14.04 LTS 64-bit. We can
    use AWS AMI in order to create our setup. The image can be launched on AMI directly
    with the help of following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://thecloudmarket.com/image/ami-a21529cc--ubuntu-images-hvm-ssd-ubuntu-trusty-14-04-amd64-server-20160114-5](http://thecloudmarket.com/image/ami-a21529cc--ubuntu-images-hvm-ssd-ubuntu-trusty-14-04-amd64-server-20160114-5)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram illustrates the installation steps required to install
    Docker on Ubuntu 14.04 LTS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker on Ubuntu](graphics/image_02_001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Prerequisites
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Docker requires a 64-bit installation, regardless of the Ubuntu version. The
    kernel must be 3.10 at minimum.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s check our kernel version, using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is a kernel version of 3.13.x, which is fine:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Updating package information
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to update the APT repository and have necessary
    certificates installed:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Docker''s APT repository contains Docker 1.7.x or higher. To set APT to use
    packages from the new repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Run the following command to ensure that APT works with the HTTPS method and
    CA certificates are installed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The `apt-transport-https` package enables us to use `deb https://foo distro
    main` lines in the `/etc/apt/sources.list` so that package managers, which use
    the `libapt-pkg` library, can access metadata and packages available in sources
    accessible over HTTPS.
  prefs: []
  type: TYPE_NORMAL
- en: The `ca-certificates` are container's PEM files of CA certificates, which allow
    SSL-based applications to check for the authenticity of SSL connections.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a new GPG key
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**GNU Privacy Guard** (known as **GPG** or **GnuPG)** is a free encryption
    software that''s compliant with the OpenPGP (RFC4880) standard:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will be similar to the following listing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Troubleshooting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you find the `sks-keyservers` to be unavailable, you can try the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Adding a new package source for Docker
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Docker repository can be added in the following way to the APT repository:'
  prefs: []
  type: TYPE_NORMAL
- en: Update `/etc/apt/sources.list.d` with a new source as Docker repository.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the `/etc/apt/sources.list.d/docker.list` file and update it with the
    following entry:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Updating Ubuntu packages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Ubuntu packages after adding Docker repository can be updated, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Install linux-image-extra
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For Ubuntu Trusty, it''s recommended to install the `linux-image-extra` kernel
    package; the `linux-image-extra` package allows the AUFS storage driver to be
    used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will be similar to the following listing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Optional - installing AppArmor
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If it is not already installed, install AppArmor using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will be similar to the following listing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Docker installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s get started with installing Docker Engine on Ubuntu using the official
    APT package:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Update APT package index:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Install Docker Engine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Start the Docker daemon:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify that Docker is installed correctly:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'This is how the output would look like:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Installing Docker on Red Hat Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Docker is supported on Red Hat Enterprise Linux 7.x. This section provides an
    overview of installation of Docker using Docker-managed release packages and installation
    mechanisms. Using these packages ensures that you will be able get the latest
    release of Docker.
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker on Red Hat Linux](graphics/image_02_002.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Checking kernel version
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Linux kernel version can be checked with the help of the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'The output, in our case, is kernel version 3.10.x, which will work fine:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Updating the YUM packages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The YUM repository can be updated, using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Output listing is given; ensure that it shows `Complete!` at the end, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Adding the YUM repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s add the Docker repository to the YUM repository list:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Installing the Docker package
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Docker Engine can be installed using YUM repository, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Starting the Docker service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Docker service can be started with help of the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Testing the Docker installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Listing all the processes in the Docker Engine with help of the following command
    can validate whether the installation of the Docker service is successful or not:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is the output for the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Check the Docker version to make sure that it is the latest:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Checking the installation parameters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s run Docker information to see the default installation parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'The output listing is given here; note that the `Storage Driver` is `devicemapper`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Troubleshooting tips
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that you are using the latest version of Red Hat Linux to be able to
    deploy Docker 1.11\. Another important thing to remember is that the kernel version
    has to be 3.10 or higher. Rest of the installation was pretty uneventful.
  prefs: []
  type: TYPE_NORMAL
- en: Deploy CentOS VM on AWS to run Docker containers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We are using AWS as an environment to showcase Docker installation from a convenience
    perspective. If an OS needs to be tested for support of its Docker version, AWS
    is the easiest and quickest way to deploy and test it.
  prefs: []
  type: TYPE_NORMAL
- en: If you are not using AWS as an environment, feel free to skip the steps involving
    spinning a VM on AWS.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we''ll take a look at deploying CentOS VM on AWS to get the
    environment up and running fast and deploy Docker containers. CentOS is similar
    to Red Hat''s distribution and uses the same packaging tools like YUM. We will
    use CentOS 7.x, on which Docker is officially supported:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let''s launch a CentOS-based VM on AWS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploy CentOS VM on AWS to run Docker containers](graphics/image_02_003.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We are launching with a **1-Click Launch** and pre-existing keypair. SSH is
    enabled by default:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploy CentOS VM on AWS to run Docker containers](graphics/image_02_004.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the instance is up, get the public IP address from the AWS EC2 console.
  prefs: []
  type: TYPE_NORMAL
- en: 'SSH into the instance and follow the following steps for installation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '![Deploy CentOS VM on AWS to run Docker containers](graphics/image_02_005.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Checking kernel version
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The kernel version of the Linux OS can be checked with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'The output, in our case, is kernel version 3.10.x, which will work fine:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Note how similar it is to the Red Hat kernel version 3.10.0-327.el7.x86_64.
  prefs: []
  type: TYPE_NORMAL
- en: Updating the YUM packages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The YUM packages and repository can be updated, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Adding the YUM repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s add the Docker repository to the YUM repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Installing the Docker package
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following command can be used to install Docker Engine using the YUM repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Starting the Docker service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Docker service can be started in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Testing the Docker installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Check the Docker version to make sure it is the latest:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Checking the installation parameters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s run Docker information to see the default installation parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is listed here; note that the `Storage Driver` is `devicemapper`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Installing Docker on CoreOS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: CoreOS is a lightweight OS built for the cloud. It comes prepackaged with Docker,
    which is a few releases behind the latest version. Since it comes prebuilt with
    Docker there is little troubleshooting required. We just need to make sure that
    the right version of CoreOS is picked.
  prefs: []
  type: TYPE_NORMAL
- en: CoreOS runs on a variety of platforms, including Vagrant, Amazon EC2, QEMU/KVM,
    VMware and OpenStack, and custom hardware. CoreOS uses fleet to manage clusters
    of containers along with etcd (key value data store).
  prefs: []
  type: TYPE_NORMAL
- en: Installation channels of CoreOS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In our case, we will use stable  **Release Channels**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installation channels of CoreOS](graphics/image_02_006.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'First, we will install CoreOS on AWS using the CloudFormation templates. You
    can find this template at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://s3.amazonaws.com/coreos.com/dist/aws/coreos-stable-pv.template](https://s3.amazonaws.com/coreos.com/dist/aws/coreos-stable-pv.template)'
  prefs: []
  type: TYPE_NORMAL
- en: 'This template provides the following parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: Instance type
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cluster size
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discovery URL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advertised IP address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow SSH From
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keypair
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These mentioned parameters can be set in the default template, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'The following steps will provide the complete walk-through for CoreOS installation
    on AWS with help of screenshots:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the S3 template to launch:![Installation channels of CoreOS](graphics/image_02_007.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Specify the **Stack name**, **KeyPair**, and cluster 3:![Installation channels
    of CoreOS](graphics/image_02_008.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Troubleshooting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are some troubleshooting tips and guidelines, which should be followed
    during the preceding installation:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stack name** should not be duplicate'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ClusterSize** cannot be lower than 3 and should be a maximum of 12'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**InstanceType** recommended is `m3.medium`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**KeyPair** should exist; if it doesn''t, the cluster will not launch'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'SSH into the instance and check the Docker version:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Installing Docker on Fedora
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Docker is supported on Fedora version 22 and 23\. The following are the steps
    to be performed in order to install Docker on Fedora 23\. It can be deployed on
    bare-metal or as a VM.
  prefs: []
  type: TYPE_NORMAL
- en: Checking Linux kernel Version
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Docker requires 64-bit installation, regardless of the Fedora version. Also,
    the kernel version should be at least 3.10\. Check the kernel version before going
    ahead with installation using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: Installing with DNF
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Update the existing DNF package by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Adding to the YUM repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s add the Docker repository to the YUM repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: Installing the Docker package
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Docker Engine can be installed using the DNF package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will be similar to the following listing (this listing is truncated):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'Start the Docker service using `systemctl`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify with a Docker hello-world example in order to check whether Docker is
    installed successfully:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will be similar to the following listing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'To generate this message, Docker took the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: The Docker client contacted the Docker daemon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Docker daemon pulled the `hello-world` image from the Docker Hub.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Docker daemon created a new container from that image, which runs the executable
    that produces the output you are currently reading.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Docker daemon streamed that output to the Docker client, which sent it to
    your terminal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To try something more ambitious, you can run an Ubuntu container with the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Share images, automate workflows, and more with a free Docker Hub account, [https://hub.docker.com](https://hub.docker.com).
  prefs: []
  type: TYPE_NORMAL
- en: For more examples and ideas, visit [https://docs.docker.com/userguide/md64-server-20160114.5
    (ami-a21529cc)](https://docs.docker.com/engine/userguide/).
  prefs: []
  type: TYPE_NORMAL
- en: Installing Docker with script
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Update your DNF package, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: Running the Docker installation script
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Docker installation can also be done in a quick and easy way by executing
    the shell script and getting it from the official Docker website:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'Start the Docker daemon:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'Docker run `hello-world`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: 'To create a Docker group and add a user, follow the steps mentioned, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'Log out and log in with the user to make sure that your user is created successfully:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 'In order to uninstall Docker, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'The truncated output of the preceding command is listed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: Installing Docker on SUSE Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will install Docker on SUSE Linux Enterprise Server 12 SP1
    x86_64 (64-bit). We will also look at some of the problems we came across during
    the installation process.
  prefs: []
  type: TYPE_NORMAL
- en: Launching the SUSE Linux VM on AWS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Choose the appropriate AMI and launch the instance from the EC2 console:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Launching the SUSE Linux VM on AWS](graphics/image_02_009.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The following parameters are shown in the next step; review and then launch
    them:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Launching the SUSE Linux VM on AWS](graphics/image_02_010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We chose an existing keypair to SSH into the instance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Launching the SUSE Linux VM on AWS](graphics/image_02_011.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the VM is up, log in to the VM from a terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'The truncated output is listed here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: 'Since we have launched the VM, let''s focus on getting docker installed. The
    following diagram outlines the steps for installing docker on SUSE Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Launching the SUSE Linux VM on AWS](graphics/image_02_012.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Checking Linux kernel version
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Kernel version should be at least 3.10\. Check the kernel version before going
    ahead with its installation, using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: Adding Containers-Module
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following Containers-Module needs to be updated in the local packages before
    docker can be installed. You can find more details about the Containers-Module
    at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.suse.com/support/update/announcement/2015/suse-ru-20151158-1.html](https://www.suse.com/support/update/announcement/2015/suse-ru-20151158-1.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will be similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: Installing Docker
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: 'The truncated output is listed here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: Starting Docker service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Docker service can be started, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: Checking the Docker installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Execute Docker run, as follows, to test the installation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will be similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: Troubleshooting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Please note, the Docker installation on SUSE Linux 11 is not a smooth experience,
    as SUSE Connect is not available.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we went over steps on how to install Docker on various Linux
    distributions-Ubuntu, CoreOS, CentOS, Red Hat Linux , Fedora, and SUSE Linux.
    We noticed similarities in the steps and common prerequisites across Linux, while
    the actual remote repository from where the Docker module needs to be downloaded
    and the package management for the Docker modules, various for each Linux operating
    system. In the next chapter, we'll explore the mission-critical task of image
    building, understanding base and layered images, and exploring the troubleshooting
    aspect of it.
  prefs: []
  type: TYPE_NORMAL
