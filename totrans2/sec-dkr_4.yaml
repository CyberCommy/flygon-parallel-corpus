- en: Chapter 4. Docker Bench for Security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will be looking at the **Docker Bench for Security**. This
    is a tool that can be utilized to scan your Docker environments, start the host
    level and inspect all the aspects of this host, inspect the Docker daemon and
    its configuration, inspect the containers running on the Docker host, and review
    the Docker security operations and give you recommendations across the board of
    a threat or concern that you might want to look at in order to address it. In
    this chapter, we will be looking at the following items:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Docker security** – best practices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Docker** – best practices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Center for Internet Security** (**CIS**) guide'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Host configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker daemon configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker daemon configuration files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Container images/runtime
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker security operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Docker Bench Security application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running the tool
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the output
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker security – best practices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will take a look at the best practices when it comes to
    Docker as well as the CIS guide to properly secure all the aspects of your Docker
    environment. You will be referring to this guide when you actually run the scan
    (in the next section of this chapter) and get results of what needs to or should
    be fixed. The guide is broken down into the following sections:'
  prefs: []
  type: TYPE_NORMAL
- en: The host configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Docker daemon configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Docker daemon configuration files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Container images/runtime
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker security operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker – best practices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we dive into the CIS guide, let''s go over some of the following best
    practices when using Docker:'
  prefs: []
  type: TYPE_NORMAL
- en: '**One application per container**: Spread your applications to one per container.
    Docker was built for this and it makes everything easy at the end of the day.
    The isolation that we talked about earlier is where this is the key.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Review who has access to your Docker hosts**: Remember that whoever has the
    access to your Docker hosts has the access to manipulate all your images and containers
    on the host.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Use the latest version**: Always use the latest version of Docker. This will
    ensure that all the security holes have been patched and you have the latest features
    as well.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Use the resources**: Use the resources available if you need help. The community
    within Docker is huge and immensely helpful. Use their website, documentation,
    and the **Internet Relay Chat** (**IRC**) chat rooms to your advantage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CIS guide
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The CIS guide is a document ([https://benchmarks.cisecurity.org/tools2/docker/cis_docker_1.6_benchmark_v1.0.0.pdf](https://benchmarks.cisecurity.org/tools2/docker/cis_docker_1.6_benchmark_v1.0.0.pdf))
    that goes over the aspects of the Docker pieces to help you securely configure
    the various pieces of your Docker environment. We will cover these in the following
    sections.
  prefs: []
  type: TYPE_NORMAL
- en: Host configuration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This part of the guide is about the configuration of your Docker hosts. This
    is that part of the Docker environment where all your containers run. Thus, keeping
    it secure is of the utmost importance. This is the first line of defense against
    the attackers.
  prefs: []
  type: TYPE_NORMAL
- en: Docker daemon configuration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This part of the guide recommends securing the running Docker daemon. Everything
    you do to the Docker daemon configuration affects each and every container. These
    are the switches you can attach to the Docker daemon that we saw previously and
    items you will see in the following section when we run through the tool.
  prefs: []
  type: TYPE_NORMAL
- en: Docker daemon configuration files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This part of the guide deals with the files and directories that the Docker
    daemon uses. This ranges from permissions to ownerships. Sometimes, these areas
    may contain information you don't want others to know about, which could be in
    a plain text format.
  prefs: []
  type: TYPE_NORMAL
- en: Container images/runtime
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This part of the guide contains both the information for securing the container
    images as well as the container runtime.
  prefs: []
  type: TYPE_NORMAL
- en: The first part contains images, cover base images, and build files that were
    used. You need to be sure about the images you are using not only for your base
    images, but also for any aspect of your Docker experience. This section of the
    guide covers the items you should follow while creating your own base images to
    ensure they are secure.
  prefs: []
  type: TYPE_NORMAL
- en: The second part, the container runtime, covers a lot of security-related items.
    You have to take care of the runtime variables that you are providing. In some
    cases, attackers can use them to their advantage, while you think you are using
    them to your own advantage. Exposing too much in your container can compromise
    the security of not only that container, but also the Docker host and other containers
    running on this host.
  prefs: []
  type: TYPE_NORMAL
- en: Docker security operations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This part of the guide covers the security areas that involve deployment. These
    items are more closely tied to the best practices and recommendations of items
    that are to be followed.
  prefs: []
  type: TYPE_NORMAL
- en: The Docker Bench Security application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will cover the Docker Benchmark Security application that
    you can install and run. The tool will inspect the following components:'
  prefs: []
  type: TYPE_NORMAL
- en: The host configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Docker daemon configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Docker daemon configuration files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Container images and build files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Container runtime
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker security operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looks familiar? It should, as these are the same items that we reviewed in the
    previous section, only built into an application that will do a lot of heavy lifting
    for you. It will show you what warnings arise with your configurations and provide
    information on other configuration items and even the items that have passed the
    test.
  prefs: []
  type: TYPE_NORMAL
- en: We will look at how to run the tool, a live example, and what the output of
    the process will mean.
  prefs: []
  type: TYPE_NORMAL
- en: Running the tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Running the tool is simple. It's already been packaged for us inside a Docker
    container. While you can get the source code and customize the output or manipulate
    it in some way (say, e-mail the output), the default may be all that you need.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code is found here: [https://github.com/docker/docker-bench-security](https://github.com/docker/docker-bench-security)'
  prefs: []
  type: TYPE_NORMAL
- en: 'To run the tool, we will simply copy and paste the following into our Docker
    host:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you don't already have the image, it will first download the image and then
    start the process for you. Now that we've seen how easy it is to install and run
    it, let's take a look at an example on a Docker host to see what it actually does.
    We will then take a look at the output and take a dive into dissecting it.
  prefs: []
  type: TYPE_NORMAL
- en: There is also an option to clone the Git repository, enter the directory from
    the `git clone` command, and run the provided shell script. So, we have multiple
    options!
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at an example and break down each section, as shown in the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Running the tool – host configuration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the output of the host configuration runtime:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Running the tool – Docker daemon configuration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the output for the Docker daemon configuration runtime,
    as shown in the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Running the tool – Docker daemon configuration files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the output for the Docker daemon configuration files
    runtime, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Running the tool – container images and build files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the output for the container images and build files runtime,
    as shown in the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Running the tool – container runtime
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the output for the container runtime, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Running the tool – Docker security operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the output for the Docker security operations runtime,
    as shown in the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Wow! A lot of output and tons to digest; but what does all this mean? Let's
    take a look and break down each section.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the output
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are three types of output that we will see, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`[PASS]`: These items are solid and good to go. They don''t need any attention,
    but they are good to read to make you feel warm inside. The more of these, the
    better!'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`[INFO]`: These are items that you should review and fix if you feel that they
    are pertinent to your setup and security needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`[WARN]`: These are items that need to be fixed. These are the items we don''t
    want to be seeing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Remember, we had the six main topics that were covered in the scan, as shown
    in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The host configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Docker daemon configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Docker daemon configuration files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Container images and build files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Container runtime
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Docker security operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's take a look at what we are seeing in each section of the scan. These scan
    results are from a default Ubuntu Docker host, with no tweaks made to the system
    at this point. We want to again focus on the `[WARN]` items in each section. Other
    warnings may come up when you run yours, but these will be the ones that come
    up the most, if not for everyone at first.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the output – host configuration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the following output for the host configuration runtime
    output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: For this one, you will want to map `/var/lib/docker` to a separate partition.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Understanding the output – the Docker daemon configuration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the following output for the Docker daemon configuration
    output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'By default, all the containers running on the same Docker host have access
    to each other''s network traffic. To prevent this, you would need to add the `--icc=false`
    flag to the Docker daemon''s start up process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Again, you can add a flag to your Docker daemon start up process that will prevent
    Docker from using the `aufs` storage driver. Using `-s <storage_driver>` on your
    Docker daemon startup, you can tell Docker not to use `aufs` for storage. It is
    recommended that you use the best storage driver for the OS on the Docker host
    that you are using.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the output – the Docker daemon configuration files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you are using the stock Docker daemon, you should not see any warnings. If
    you have customized the code in some way, you may get a few warnings here. This
    is one area where you should hope to never see any warnings.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the output – container images and build files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the following output for the container images and build
    files runtime output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: This states that the `suspicious_mccarthy` container is running as the root
    user and it is recommended to create another user to run your containers.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the output – container runtime
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s take a look at the output for the container runtime output, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: This states that the `suspicious_mccarthy` container does not have `AppArmorProfile`,
    which is the additional security provided in Ubuntu in this case.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'This error is pretty straightforward. You will want to make sure that you are
    only running one process per container. If you are running more than one process,
    you will want to spread them out across multiple containers and use container
    linking, as shown in the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'This states that the `audit_control` capability has been added to this running
    container. You can use `--cap-drop={}` from your `docker run` command to remove
    the additional capabilities from a container, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'This is straight to the point. No need to run SSH inside your containers. You
    can do everything you want to with your containers using the tools provided by
    Docker. Ensure that SSH is not running in any container. You can utilize the `docker
    exec` command to execute the items against your containers (see more information
    here: [https://docs.docker.com/engine/reference/commandline/exec/](https://docs.docker.com/engine/reference/commandline/exec/)),
    as shown in the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The issue with this one is that, when the container was started, the `--net=host`
    switch was passed along. It is not recommended to use this as it allows the container
    to modify the network configuration and open low port numbers as well as access
    networking services on the Docker host, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'By default, the containers don''t have memory restrictions. This can be dangerous
    if you are running multiple containers per Docker host. You can use the `-m` switch
    while issuing your `docker run` commands to limit the containers to a certain
    amount of memory. Values are set in megabytes (that is, 512 MB or 1024 MB), as
    shown in the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Like the memory option, you can also set the CPU priority on a per-container
    basis. This can be done using the `--cpu-`shares switch while issuing your `docker
    run` command. The CPU share is based off of the number 1,024\. Therefore, half
    would be 512 and 25% would be 256\. Use 1,024 as the base number to determine
    the CPU share, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'You really want to be using your containers as immutable environments, meaning
    that they don''t write any data inside them. Data should be written out to volumes.
    Again, you can use the `--read-`only switch, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: This error arises when you use the `--pid=host` switch. It is not recommended
    to use this switch as it breaks the isolation of processes between the container
    and Docker host.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the output – Docker security operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Again, another section you should hope to never see are the warnings if you
    are using stock Docker. Mostly, here you will see the information and should review
    this to make sure it's all kosher.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we took a look at the CIS guidelines for Docker. This guide
    will assist you in setting up multiple aspects of your Docker environment. Lastly,
    we looked at the Docker Bench for Security. We looked at how to get it up and
    running and went through an example of what the output would look like once it
    has been run. We then took a look at the output to see what all it meant. Remember
    the six items that the application covered: host configuration, Docker daemon
    configuration, Docker daemon configuration files, container images and build files,
    container runtime, and Docker security operations.'
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will be taking a look at how to monitor as well as report
    any Docker security issues that you come across. This will help you know where
    to look for anything related to the security that may pertain to your existing
    environment. If you are to come across security-related issues that you find yourself,
    there are best practices for reporting these issues to give time to Docker to
    fix them before allowing the public community time to know about the issue, which
    will allow the hackers to use these vulnerabilities to their advantage.
  prefs: []
  type: TYPE_NORMAL
