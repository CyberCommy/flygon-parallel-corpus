- en: Chapter 5. Monitoring and Reporting Docker Security Incidents
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will take a look at how to stay on top of the items that
    Docker has released, regarding the security findings in order to be aware of your
    environments. Also, we will take a look at how to safely report any security findings
    that you come across in order to ensure that Docker has a chance to alleviate
    the concern before it becomes public and widespread. In this chapter, we will
    be covering the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Docker security monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker **Common Vulnerabilities and Exposures** (**CVE**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mailing lists
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker security reporting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Responsible disclosure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security reporting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additional Docker resources
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker Notary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hardware signing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading materials
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker security monitoring
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will take a look at some ways of monitoring security issues
    that relate to any Docker products you may be using. While you are using the various
    products, you need to be able to be aware of, if any, security issues that arise
    so that you can mitigate these risks to keep your environments and data safe.
  prefs: []
  type: TYPE_NORMAL
- en: Docker CVE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To understand what a Docker CVE is, you need to first know what is CVE. CVEs
    are actually a system that is maintained by the MITRE Corporation. These are used
    as a public way of providing information based on a CVE number that is dedicated
    to each vulnerability for easy reference. This allows a national database of all
    the vulnerabilities that are given a CVE number from the MITRE Corporation. To
    learn more about CVEs, you can find it on the Wikipedia article here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures](https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures)'
  prefs: []
  type: TYPE_NORMAL
- en: The Wikipedia article explains things such as how they go about giving CVE numbers
    and the format that they all follow.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know what CVEs are, you probably have already pieced together what
    Docker CVEs are. They are CVEs that are directly related to Docker security incidents
    or issues. To learn more about Docker CVEs or see a list of current Docker CVEs,
    visit [https://www.docker.com/docker-cve-database](https://www.docker.com/docker-cve-database).
  prefs: []
  type: TYPE_NORMAL
- en: This listing will be updated anytime a CVE is created for a Docker product.
    As you can see, the list is very small, therefore, this is probably a list that
    will not grow on a day-to-day, or even a month-to-month, basis frequency.
  prefs: []
  type: TYPE_NORMAL
- en: Mailing lists
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another method for following or discussing security-related issues of any Docker
    products in the ecosystem is to join their mailing lists. Currently, they have
    two mailing lists that you can either join or follow along with.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first is a developer list that you can join or follow along with. This
    is a list for those who are either helping in assisting with contributing the
    code to the Docker products or developing products using the Docker code base
    provided in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://groups.google.com/forum/#!forum/docker-dev](https://groups.google.com/forum/#!forum/docker-dev)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The second list is a user list. This list is for those who, you guessed it,
    are the users of the various Docker products that might have security-related
    questions. You can search from the already submitted discussions, join existing
    conversations, or ask new questions that will be answered by those who are also
    on the mailing lists at the following forum:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://groups.google.com/forum/#!forum/docker-user](https://groups.google.com/forum/#!forum/docker-user)'
  prefs: []
  type: TYPE_NORMAL
- en: Before asking some security-related questions, you will want to read the following
    section to ensure that you are not exposing any existing security issues that
    might tempt an attacker out there.
  prefs: []
  type: TYPE_NORMAL
- en: Docker security reporting
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Reporting Docker security issues is just as important as monitoring security
    issues with regards to Docker. While it is important to report these issues, there
    are certain standards that you should follow when you find security issues and
    are going to, hopefully, report them.
  prefs: []
  type: TYPE_NORMAL
- en: Responsible disclosure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When disclosing security-related issues, not only for Docker, but for any product
    out there, there is a term called **responsible disclosure** that everyone should
    follow. Responsible disclosure is an agreement that allows the developer or maintainer
    of the product ample time to provide a fix for the security issue before disclosing
    the issue to the general public.
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about responsible disclosure, you can visit [https://en.wikipedia.org/wiki/Responsible_disclosure](https://en.wikipedia.org/wiki/Responsible_disclosure).
  prefs: []
  type: TYPE_NORMAL
- en: Remember to put yourself in the shoes of the group that is responsible for the
    code. If it were your code, wouldn't you want someone to give you a notice of
    a vulnerability so that you had ample time to fix the issue before it was disclosed,
    causing widespread panic and flooding the inbox with e-mails from the masses.
  prefs: []
  type: TYPE_NORMAL
- en: Security reporting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Currently, the method for reporting security issues is to e-mail the Docker
    security team and give them as much information as you can provide about the security
    issue. While these are not the exact items that Docker might recommend, there
    are general guidelines that most other security professionals like to see when
    reporting security issues, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Product and version, where the security issue was discovered
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Method to reproduce the issue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operating system that was being used at the time, plus the version
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any additional information you can provide
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remember, the more information you provide from the beginning, the quicker the
    team has to react from their end by being on top of the issue and attack it more
    aggressively from the start.
  prefs: []
  type: TYPE_NORMAL
- en: To report a security issue for any Docker-related product, make sure to e-mail
    any information to `<[security@docker.com](mailto:security@docker.com)>`
  prefs: []
  type: TYPE_NORMAL
- en: Additional Docker security resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are looking for some other items to look into, there are some additional
    items that we have covered in [Chapter 1](part0012_split_000.html#BE6O1-1dd319b8496b413ab834c68b79a4b65a
    "Chapter 1. Securing Docker Hosts"), *Securing Docker Hosts* that are worthwhile
    to conduct a quick review. Make sure to look back at [Chapter 1](part0012_split_000.html#BE6O1-1dd319b8496b413ab834c68b79a4b65a
    "Chapter 1. Securing Docker Hosts"), *Securing Docker Hosts* to get more details
    on the next couple of items or links that will be provided in each section.
  prefs: []
  type: TYPE_NORMAL
- en: Docker Notary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s take a quick look at **Docker Notary**, but for more information about
    Docker Notary, you can look back at the information in [Chapter 2](part0021_split_000.html#K0RQ2-1dd319b8496b413ab834c68b79a4b65a
    "Chapter 2. Securing Docker Components"), *Securing Docker Components* or the
    following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/docker/notary](https://github.com/docker/notary)'
  prefs: []
  type: TYPE_NORMAL
- en: Docker Notary allows you to publish your content by signing it with private
    keys that you are recommended to keep offline. Using these keys to sign your content
    helps in ensuring others to know that the content they are using is, in fact,
    from who it says it is—you—and that the content can be trusted, assuming the users
    trust you.
  prefs: []
  type: TYPE_NORMAL
- en: 'Docker Notary has a few key goals that I believe are important to point out
    in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Survivable key compromise
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Freshness guarantee
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configurable trust thresholds
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Signing delegation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use of existing distribution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Untrusted mirrors and transport
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is important to know that Docker Notary has a server and client component
    as well. To use Notary, you will have to be familiar with the command-line environment.
    The preceding link will break it down for you and give you walkthroughs on setting
    up and using each component.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware signing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Similar to the previous *Docker Notary* section, let's take a quick look at
    the hardware signing as it's a very important feature that must be understood
    fully.
  prefs: []
  type: TYPE_NORMAL
- en: Docker also allows hardware signing. What does this mean? From the previous
    section, we saw that you can use highly secure keys to sign your content, allowing
    others to verify that the information is from who it says it is, which ultimately
    provides everyone great peace of mind.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware signing takes this to a whole new level by allowing you to add yet
    another layer of code signing. By introducing a hardware device, Yubikey—a USB
    piece of hardware—you can use your private keys (remember to keep them secure
    and offline somewhere) as well as a piece of hardware that requires you to tap
    it when you sign your code. This proves that you are a human by the fact of having
    to physically touch the YubiKey when you are signing your code.
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information about the hardware signing part of Notary, it is worthwhile
    to read their announcement when they released this feature from the following
    URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://blog.docker.com/2015/11/docker-content-trust-yubikey/](https://blog.docker.com/2015/11/docker-content-trust-yubikey/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'For a video demonstration of using **YubiKeys** and Docker Notary, please visit
    the following YouTube URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://youtu.be/fLfFFtOHRZQ?t=1h21m23s](https://youtu.be/fLfFFtOHRZQ?t=1h21m23s)'
  prefs: []
  type: TYPE_NORMAL
- en: 'To find out more information about YubiKeys, visit their website at the following
    URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.yubico.com](https://www.yubico.com)'
  prefs: []
  type: TYPE_NORMAL
- en: Reading materials
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are also some additional reading materials that can assist with ensuring
    your focus is on monitoring the security aspect of the entire Docker ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: Looking back at [Chapter 4](part0029_split_000.html#RL0A1-1dd319b8496b413ab834c68b79a4b65a
    "Chapter 4. Docker Bench for Security"), *Docker Bench for Security*, we covered
    the Docker Bench, which is a scanning application for your entire Docker environment.
    This is highly useful to help in pointing out any security risks that you might
    have.
  prefs: []
  type: TYPE_NORMAL
- en: 'There is also a great free Docker security eBook that I found. This book will
    cover potential security issues along with tools and techniques that you can utilize
    to secure your container environments. Not bad for free, right?! You can find
    this book at the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.openshift.com/promotions/docker-security.html](https://www.openshift.com/promotions/docker-security.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can refer to the following *Introduction to Container Security* whitepaper
    for more information:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://d3oypxn00j2a10.cloudfront.net/assets/img/Docker%20Security/WP_Intro_to_container_security_03.20.2015.pdf](https://d3oypxn00j2a10.cloudfront.net/assets/img/Docker%20Security/WP_Intro_to_container_security_03.20.2015.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also refer to *The Definitive Guide To Docker Containers* whitepaper,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.docker.com/sites/default/files/WP-%20Definitive%20Guide%20To%20Containers.pdf](https://www.docker.com/sites/default/files/WP-%20Definitive%20Guide%20To%20Containers.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: The last two items—*Introduction to Container Security* whitepaper and *The
    Definitive Guide To Docker Containers*—are directly created from Docker, therefore,
    they contain information that is directly related to understanding how containers
    are structured and they breakdown a lot of the Docker information into a central
    location, which you can download or print out and have at hand at any point of
    time. They also help you to understand the various layers of containers and how
    they help keep your environment and applications secure from each other.
  prefs: []
  type: TYPE_NORMAL
- en: Awesome Docker
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'While this is not a security-related tool, it is a Docker tool that is very
    useful and is updated quite frequently. Awesome Docker is a curated list of any
    and all Docker projects. It allows others to contribute with pull requests to
    the curated list. The list includes topics for those who are looking to get started
    with Docker; useful articles; deep-dive articles; networking articles; and articles
    on using multi-server Docker environments, cloud infrastructure, tips, and newsletters,
    the list just keeps going on. To view the project as well as the *awesomeness*
    of everything that it includes, visit the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/veggiemonk/awesome-docker](https://github.com/veggiemonk/awesome-docker)'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at a number of ways to monitor and report Docker
    security issues. We looked at some mailing lists that you can join monitoring
    the Docker CVE list. We also reviewed using both Docker Notary to sign your images
    as well as hardware signing to utilize hardware items such as YubiKeys. We also
    looked at using responsible disclosure, which is giving Docker a chance to fix
    any security-related issue prior to releasing them to the public.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will be looking at working with some Docker tools. These
    tools can be used to secure the Docker environment. We will look at both command-line
    tools as well as GUI tools that you can use to your advantage. We will be looking
    at utilizing TLS in your environments using read-only containers, utilizing kernel
    namespaces and control groups, and mitigating against the risk, while being aware
    of the Docker daemon attack surface.
  prefs: []
  type: TYPE_NORMAL
