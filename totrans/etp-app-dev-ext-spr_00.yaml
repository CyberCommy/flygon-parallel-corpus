- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Enterprise application development is an art form rarely acknowledged in this
    fast-paced technical world. This book describes the patterns and strategies that
    will simplify large-scale development projects using two of the most popular technologies
    available: the Spring Framework and Sencha Ext JS. Each chapter defines and builds
    a concise layer in the enterprise application stack, condensing an approach to
    web development that was gained from many years of developing real-world projects.
    We cover quite an extensive conceptual ground, so be prepared for an interesting
    journey!'
  prefs: []
  type: TYPE_NORMAL
- en: This book is not an introduction to Java, JavaScript, or any web development
    concepts. There are significant amounts of practical code in both Java and JavaScript
    languages, so an understanding of these technologies is required. If you are not
    familiar with Java and associated concepts such as object-oriented programming,
    you may be challenged when following the examples and explanations. The same can
    be said for Ext JS development; you need to have some experience with the fundamental
    concepts, including the framework APIs, to follow most examples.
  prefs: []
  type: TYPE_NORMAL
- en: You do not need to be an expert, but beginners may wish to start their journey
    elsewhere.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of your experience and background, the practical examples provided
    in this book are written in a way to thoroughly cover each concept before moving
    on to the next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: What the book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Preparing Your Development Environment"),
    *Preparing Your Development Environment*, discusses the installation and configuration
    for the development environment, including the Java Development Kit, NetBeans,
    and MySQL. We will also introduce Maven, create a new NetBeans project, and deploy
    the project to the GlassFish 4 application server.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. The Task Time Tracker Database"), *The Task
    Time Tracker Database*, defines the Task Time Tracker (3T) database design and
    helps configure NetBeans as a client of the MySQL server. We create and populate
    all the tables and identify the possible enhancements that could be appropriate
    for enterprise use.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Reverse Engineering the Domain Layer with
    JPA"), *Reverse Engineering the Domain Layer with JPA*, helps us reverse engineer
    the 3T database using the NetBeans IDE to create a domain layer of JPA entities.
    These entities are explored and refactored as we examine and define core JPA concepts.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Data Access Made Easy"), *Data Access Made
    Easy*, introduces the Data Access Object (DAO) design pattern and helps implement
    a robust data access layer using the domain classes we defined in the previous
    chapter. Java generics and interfaces, the Simple Logging Facade for Java (SLF4J),
    the JPA EntityManager, and transactional semantics are also introduced.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Testing the DAO Layer with Spring and JUnit"),
    *Testing the DAO Layer with Spring and JUnit*, introduces the configuration of
    a JUnit testing environment and the development of test cases for several of our
    DAO implementations. We introduce the Spring Inversion of Control (IoC) container
    and explore the Spring configuration to integrate Spring-managed JUnit testing
    with Maven.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Back to Business – The Service Layer"), *Back
    to Business – The Service Layer*, examines the role of the service layer in enterprise
    application development. Our 3T business logic is then implemented by the Data
    Transfer Objects (DTO) design pattern using Value Objects (VO). We also examine
    writing test cases prior to coding the implementation—a core principle of test-driven
    development and extreme programming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. The Web Request Handling Layer"), *The Web
    Request Handling Layer*, defines a request handling layer for web clients that
    generates JSON data using the Java API for JSON processing, which is a new API
    introduced in Java EE 7\. We implement the lightweight Spring controllers, introduce
    Spring handler interceptors, and configure Spring MVC using Java classes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Running 3T on GlassFish"), *Running 3T on
    GlassFish*, completes our Spring configuration and allows us to deploy the 3T
    application to the GlassFish 4 server. We also configure the GlassFish 4 server
    to run independently of the NetBeans IDE, as would be the case in enterprise environments.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Getting Started with Ext JS 4"), *Getting
    Started with Ext JS 4*, introduces the powerful Ext JS 4 framework and discusses
    the core Ext JS 4 MVC concepts and practical design conventions. We install and
    configure our Ext JS development environment using Sencha Cmd and the Ext JS 4
    SDK to generate our 3T application skeleton.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Logging On and Maintaining Users"), *Logging
    On and Maintaining Users*, helps us develop the Ext JS 4 components that are required
    for logging on to the 3T application and maintaining users. We will discuss the
    Ext JS 4 model persistence, build a variety of views, examine application concepts,
    and develop two Ext JS controllers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.html "Chapter 11. Building the Task Log User Interface"),
    *Building the Task Log User Interface*, continues to enhance our understanding
    of the Ext JS 4 components as we implement the task log user interface.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.html "Chapter 12. 3T Administration Made Easy"), *3T Administration
    Made Easy*, enables us to develop the 3T Administration interface and introduces
    the Ext JS 4 tree component. We examine dynamic tree loading and implement drag-and-drop
    tree actions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](ch13.html "Chapter 13. Moving Your Application to Production"),
    *Moving Your Application to Production*, will help us prepare, build, and deploy
    our 3T project to the GlassFish server. We introduce Ext JS theming, integrate
    Sencha Cmd compiling with Maven to automate the Ext JS 4 app-all.js file generation
    process, and learn how to deploy our production build on the GlassFish server.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix](apa.html "Appendix A. Introducing Spring Data JPA"), *Introducing
    Spring Data JPA*, provides a very brief introduction to Spring Data JPA as an
    alternative to the implementation discussed in [Chapter 4](ch04.html "Chapter 4. Data
    Access Made Easy"), *Data Access Made Easy*.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The examples in this book can be run on any Windows, Mac, or Linux platform
    that supports the following software:'
  prefs: []
  type: TYPE_NORMAL
- en: Java Development Kit (JDK) 1.7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NetBeans 7.4+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MySQL 5+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sencha Cmd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All of the software are available for free download at the websites listed in
    the appropriate chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is particularly relevant to those working in large-scale web application
    development projects, including application architects, Java developers, and Ext
    JS developers.
  prefs: []
  type: TYPE_NORMAL
- en: Application architects
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Architects understand the big picture from a technical perspective and are responsible
    for laying out a blueprint for development standards. This book will introduce
    you to the power of the Spring Framework and Sencha Ext JS and how you can best
    leverage these technologies when designing your next project.
  prefs: []
  type: TYPE_NORMAL
- en: Java developers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Regardless of your level of understanding, you will learn how the Spring Framework
    encourages good programming practices. This includes a clean, layered structure
    that is easy to enhance and maintain. Those new to Spring will be surprised at
    how little effort is required to achieve significant results. For both new and
    experienced Spring developers, the focus will be best practices for enterprise
    web development to allow seamless integration with Sencha Ext JS clients. If you
    have never worked with Sencha Ext JS, you will be surprised at how quickly powerful
    UIs can bring backend data to life.
  prefs: []
  type: TYPE_NORMAL
- en: Ext JS developers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sencha Ext JS is a powerful framework that is used to build enterprise applications
    that are cross-browser compliant. This book will solve real-world problems right
    from analysis to providing fully functional solutions. You will see the many stages
    of development that are usually hidden from Ext JS developers; you will also get
    introduced to the steps required to produce JSON data for client consumption.
    The chapters focusing on the Ext JS components will introduce simple strategies
    for maintainable development based on the latest MVC design patterns.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, folder names, filenames, file extensions, pathnames, dummy
    URLs, and user input are shown as follows: "The `ManageTaskLogs` definition is
    as follows:"'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Adding a new task log will preserve the currently selected **Date** and **Project**,
    if present:".'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
