- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Reactive programming has been around for decades. There has been a few implementations
    of reactive programming from the time Smalltalk was a young language. However,
    it has only become popular recently and it is now becoming a trend. Why now you
    ask? Because it is good for writing fast, real-time applications and current technologies
    and the Web demand this.
  prefs: []
  type: TYPE_NORMAL
- en: I got involved in it back in 2008, when the team I was part of was developing
    a multimedia book creator called Sophie 2\. It had to be fast and responsive so
    we created a framework called Prolib, which provided objects with properties which
    could depend on each other (in other words, we implemented bindings for Swing
    and much more—transformations, filtering, and so on). It felt natural to wire
    the model data to the GUI like this.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, this was far away from the functional-like approach that comes with
    RX. In 2010, Microsoft released RX and, after that, Netflix ported it to Java—RxJava.
    However, Netflix released RxJava to the open source community and the project
    became a huge success. Many other languages have their port of RX and many alternatives
    to it. Now, you can code using reactive programming on your Java backend and wire
    it to your RxJava's frontend.
  prefs: []
  type: TYPE_NORMAL
- en: This book tries to explain to you what reactive programming is all about and
    how to use it with RxJava. It has many small examples and it explains concepts
    and API details in small steps. After reading this book, you will have an idea
    of RxJava, functional programming, and the reactive paradigm.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. An Introduction to Reactive Programming"),
    *An Introduction to Reactive Programming*, will introduce you to the concept of
    reactive programming and will tell you why you should learn about it. This chapter
    contains examples that demonstrate how RxJava incorporates the reactive programming
    concept.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Using the Functional Constructions of Java
    8"), *Using the Functional Constructions of Java 8*, will teach you how to use
    the new lambda constructions of Java 8\. It will explain some functional programming
    concepts and will show you how to use them with RxJava in your reactive programs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Creating and Connecting Observables, Observers,
    and Subjects"), *Creating and Connecting Observables, Observers, and Subjects*,
    will show you the basic building blocks of the RxJava library called the Observables.
    You will learn the difference between ''hot'' and ''cold'' Observables and how
    to subscribe to and unsubscribe from them using a subscription instance.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Transforming, Filtering, and Accumulating
    Your Data"), *Transforming, Filtering, and Accumulating Your Data*, will walk
    you through the basic reactive operators, which you will learn how to use to achieve
    step-by-step computations. This chapter will give you an idea of how to transform
    the events the Observables emit, how to filter only the data we need, and how
    to group, accumulate, and process it.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Combinators, Conditionals, and Error Handling"),
    *Combinators, Conditionals, and Error Handling*, will present you with more complex
    reactive operators, which will allow you to master observable chaining. You will
    learn about the combining and conditional operators and how the Observables interact
    with each other. This chapter demonstrates the different approaches to error handling.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Using Concurrency and Parallelism with Schedulers"),
    *Using Concurrency and Parallelism with Schedulers*, will guide you through the
    process of writing concurrent and parallel programs with RxJava. This will be
    accomplished by the RxJava Schedulers. The types of Schedulers will be introduced
    and you will come to know when and why to use each one of them. This chapter will
    present you with a mechanism that will show you how to avoid and apply backpressure.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Testing Your RxJava Application"), *Testing
    Your RxJava Application*, will show you how to unit test your RxJava applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Resource Management and Extending RxJava"),
    *Resource Management and Extending RxJava*, will teach you how to manage the resources
    used as data sources by your RxJava applications. We will write our own Observable
    operators here.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to run the examples, you will need:'
  prefs: []
  type: TYPE_NORMAL
- en: Java 8 installed, which you can download from Oracle's site [http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gradle to build the project—2.x, which you can download from [https://gradle.org/downloads](https://gradle.org/downloads)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eclipse to open the project. You will also need the Gradle plugin for Eclipse,
    which can be downloaded from the Eclipse MarketPlace. Of course, you can use Gradle
    from the command line and go through the code with Vim or any other arbitrary
    text editor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a Java developer who knows how to write software and would like to
    learn how to apply your existing skills to reactive programming, this book is
    for you.
  prefs: []
  type: TYPE_NORMAL
- en: This book can be helpful to anybody no matter if they are beginners, advanced
    programmers, or even experts. You don't need to have any experience with either
    Java 8's lambdas and streams or with RxJava.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Interfaces of this type are called **functional interfaces**."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
