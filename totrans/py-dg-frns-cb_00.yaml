- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At the outset of this book, we strove to demonstrate a nearly endless corpus
    of use cases for Python in today’s digital investigations. Technology plays an
    increasingly large role in our daily life and shows no signs of stopping. Now,
    more than ever, it is paramount that an investigator develop programming expertise
    to work with increasingly large datasets. By leveraging the Python recipes explored
    throughout this book, we make the complex simple, efficiently extracting relevant
    information from large data sets. You will explore, develop, and deploy Python
    code and libraries to provide meaningful results that can be immediately applied
    to your investigations.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the book, recipes include topics such as working with forensic evidence
    containers, parsing mobile and desktop operating system artifacts, extracting
    embedded metadata from documents and executables, and identifying indicators of
    compromise. You will also learn how to integrate scripts with Application Program
    Interfaces (APIs) such as VirusTotal and PassiveTotal, and tools, such as Axiom,
    Cellebrite, and EnCase. By the end of the book, you will have a sound understanding
    of Python and will know how you can use it to process artifacts in your investigations.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0029.html#RL0A0-260f9401d2714cb9ab693c4692308abe), *Essential
    Scripting and File Information Recipes*, introduces you to the conventions and
    basic features of Python used throughout the book. By the end of the chapter,
    you will create a robust and useful data and metadata preservation script.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0071.html#23MNU0-260f9401d2714cb9ab693c4692308abe), *Creating
    Artifact Report Recipes*, demonstrates practical methods of creating reports with
    forensic artifacts. From spreadsheets to web-based dashboards, we show the flexibility
    and utility of various reporting formats.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0097.html#2SG6I0-260f9401d2714cb9ab693c4692308abe), *A Deep
    Dive into Mobile Forensic Recipes*, features iTunes'' backup processing, deleted
    SQLite database record recovery, and mapping Wi-Fi access point MAC addresses
    from Cellebrite XML reports.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0127.html#3P3NE0-260f9401d2714cb9ab693c4692308abe), *Extracting
    Embedded Metadata Recipes*, exposes common file types containing embedded metadata
    and how to extract it. We also provide you with knowledge of how to integrate
    Python scripts with the popular forensic software, EnCase.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0158.html#4MLOS0-260f9401d2714cb9ab693c4692308abe), *Networking
    and Indicators of Compromise Recipes*, focuses on network and web-based artifacts
    and how to extract more information from them. You will learn how to preserve
    data from websites, interact with processed IEF results, create hash sets for
    X-Ways, and identify bad domains or IP addresses.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0185.html#5GDO20-260f9401d2714cb9ab693c4692308abe), *Reading
    Emails and Taking Names Recipes*, explores the many file types for both individual
    e-mail messages and entire mailboxes, including Google Takeout MBox, and how to
    use Python for extraction and analysis.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0212.html#6A5N80-260f9401d2714cb9ab693c4692308abe), *Log-Based
    Artifact Recipes*, illustrates how to process artifacts from several log formats,
    such as IIS, and ingest them with Python info reports or other industry tools,
    such as Splunk. You will also learn how to develop and use Python recipes to parse
    files and create artifacts within Axiom.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0241.html#75QNI0-260f9401d2714cb9ab693c4692308abe),* Working
    with Forensic Evidence Container Recipes*, shows off the basic forensic libraries
    required to interact and process forensic evidence containers, including EWF and
    raw formats. You will learn how to access data from forensic containers, identify
    disk partition information, and iterate through filesystems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0265.html#7SN520-260f9401d2714cb9ab693c4692308abe), *Exploring
    Windows Forensic Artifacts Recipes Part I*, leverages the framework developed
    in [Chapter 8](part0241.html#75QNI0-260f9401d2714cb9ab693c4692308abe), *Working
    with Forensic Evidence Container Recipes,* to process various Windows artifacts
    within forensic evidence containers. These artifacts include `$I` Recycle Bin
    files, various Registry artifacts, LNK files, and the Windows.edb index.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](part0295.html#8PALU0-260f9401d2714cb9ab693c4692308abe), *Exploring
    Windows Forensic Artifacts Recipes Part II*, continues to leverage the framework
    developed in [Chapter 8](part0241.html#75QNI0-260f9401d2714cb9ab693c4692308abe), *Working
    with Forensic Evidence Container Recipes,* to process more Windows artifacts within
    forensic evidence containers. These artifacts include Prefetch files, Event logs,
    `Index.dat`, Volume Shadow Copies, and the Windows 10 SRUM database.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to follow along with and execute the recipes within this cookbook,
    use a computer with an Internet connection and the latest Python 2.7 and Python
    3.5 installations. Recipes may require additional third-party libraries to be
    installed; instructions for doing that are provided in the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: For ease of development and implementation of these recipes, it is recommended
    that you set up and configure an Ubuntu virtual machine for development. These
    recipes, unless otherwise noted, were built and tested within an Ubuntu 16.04
    environment with both Python 2.7 and 3.5\. Several recipes will require the use
    of a Windows operating system, as many forensic tools operate only on this platform.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a digital forensics examiner, cyber security specialist, or analyst
    at heart that understands the basics of Python and want to take it to the next
    level, this is the book for you. Along the way, you will be introduced to a number
    of libraries suited for parsing forensic artifacts. You will be able to use and
    build upon the scripts we develop in order to elevate their analysis
  prefs: []
  type: TYPE_NORMAL
- en: Sections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find several headings that appear frequently (Getting
    ready, How to do it…, How it works…, There's more…, and See also).
  prefs: []
  type: TYPE_NORMAL
- en: 'To give clear instructions on how to complete a recipe, we use these sections
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section tells you what to expect in the recipe, and describes how to set
    up any software or any preliminary settings required for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section contains the steps required to follow the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section usually consists of a detailed explanation of what happened in
    the previous section.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section consists of additional information about the recipe in order to
    make the reader more knowledgeable about the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section provides helpful links to other useful information for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can gather the required information by calling the `get_data()` function."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
