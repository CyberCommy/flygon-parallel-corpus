- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vue.js is a JavaScript framework that allows you to create performant web applications.
    It boasts a smaller learning curve than its competitors and has detailed documentation
    with a variety of examples and use cases. Vue.js applications can be created with
    the Vue CLI or by including it in your page via a `script` tag, making it super-easy
    to use in projects without build systems.
  prefs: []
  type: TYPE_NORMAL
- en: In a similar way to other modern web frameworks/libraries, Vue.js is component
    driven, and this means that you can create self-contained units with their own
    view/data logic. This allows our application to scale as it gets larger because
    any changes can be encapsulated away from each other.
  prefs: []
  type: TYPE_NORMAL
- en: When scaling your application, state management is a hot topic in the frontend
    space, and Vue.js solves this with the `Vuex` library. This allows us to define actions
    within our application and act accordingly, giving us predictable state that can
    be used to form the basis of our user interface and other interactions.
  prefs: []
  type: TYPE_NORMAL
- en: This book explores all this and more, and it provides examples of how these
    principles can be implemented into new and old Vue.js applications.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for people interested in creating web and mobile applications with
    JavaScript.  Prior experience with HTML5/ES2015 will be helpful, as modern JavaScript
    concepts are used within the book. You'll likely be looking to make use of this
    knowledge to create interactive web-based experiences within your personal projects
    or job role.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](94bdf687-2b50-4654-8a72-35c37a53ffe6.xhtml), *Vue.js Principles
    and Comparisons*, introduces the readers to Vue.js and motivates them to use it
    as a framework to create web applications. The reader will gain an understanding
    of the differences between Vue.js in comparison to other popular frameworks, such
    as React and Angular.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](238a1f48-501e-4512-8331-1dbe6d7bc0fa.xhtml), *Proper Creation of
    Vue Projects*, looks at the appropriate way to create a Vue project. This includes
    the use of Webpack, Babel/TypeScript (for ES6), `.vue` files, linting, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](b1e97ad4-c1f8-4868-b9df-c708d5a1b233.xhtml), *Writing Clean and
    Lean Code with Vue*, takes a deeper look at the Vue.js instance and different
    reserved properties, such as `data`, `computed`, and `watch`, as well as creating
    getters and setters. This chapter especially considers when to use computed properties
    and when to use watched properties. It also outlines why templates should be kept
    especially lean for easier maintenance.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](5293b70a-2322-4da9-bd9e-244bdec437bf.xhtml), *Vue.js Directives*,
    introduces the fact that the developers have access to a powerful set of directives,
    such as `v-for`, `v-if`, `v-model`, and others when writing reactive Vue applications.
    This chapter looks at each directive in detail, as well as best practices and
    patterns. Furthermore, the reader is introduced to using shorthand syntax for
    event binding.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](a17a6f03-db80-4452-9615-642045240c5d.xhtml), *Secured Communication
    with Vue.js Components*, takes a more advanced look at Vue components, with a
    look at component communication. We’ll take a look at passing properties, as well
    as validating for prop types and considering the different types of properties
    and data flows.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](1f9f8801-3f6c-47d4-8299-c96ab5d70567.xhtml), *Creating Better UI*,
    focuses on the common UI patterns of Vue. It takes another look at how `v-model`
    can be used to gain input from the user, along with a glance at binding to inputs
    such as text, checkbox, radio buttons, and so on. It also looks at drop-down and
    dynamic inputs. Finally, the chapter covers form submission and various modifiers,
    such as lazy binding, number typecasting, and string trimming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](51ca3870-efc3-4172-8946-9e8575c12a3d.xhtml), *HTTP and WebSocket
    Communication*, covers the best practices for integrating HTTP into Vue.js applications.
    It takes a look at `Axios` and a variety of methods for sending HTTP requests
    (that is, `root instance/component/ nav guards`). This chapter also takes a look
    at using `socket.io`, along with the creation of a basic Node/ Express API for
    real-time integration.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](61c86269-6d1e-4b78-809a-8b8b354531d0.xhtml), *Vue Router Patterns*,
    describes how routing is a vitally important part of any SPA. This chapter focuses
    on the Vue route and looks at routing a user between multiple pages. It goes through
    everything from matching paths and components to dynamic matching with navigation
    parameters, regular expressions, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](04ceb513-af44-47aa-aee3-889e30305e10.xhtml), *State Management
    with Vuex*, demonstrates state management with Vuex. It starts by looking at the
    Flux architecture and unidirectional data flow. Then, it takes a look at Vuex,
    a state management system for Vue. The chapter also looks at implementing this
    in an application, as well as common pitfalls and usage patterns. It goes on to
    the `Vue-devtools` to capture actions and Vue instance data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](c8572b24-4513-4489-8899-473bf73b2a06.xhtml), *Testing Vue.js Applications*,
    demonstrates that testing is a vital part of any project, regardless of the framework
    or language. This chapter looks at testing our application and how to write testable
    code. We''ll then look at testing our application with Jasmine and Karma, as well
    as testing our Vuex code when testing mutations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](c0ae90fd-a8c1-48ba-bd17-7555c5288be5.xhtml), *Optimization*, outlines
    deploying a Vue application and any potential performance optimizations. It then
    looks at converting an application to a **Progressive Web App** (**PWA**) and
    adding `ServiceWorkers`, offline support, and more. It also looks at ways in which
    the overall bundle size can be reduced, and at performance wins with SVG.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](338ce5bb-e854-4645-960c-1eb7ea0e6120.xhtml), *Server-Side Rendering
    with Nuxt*, showcases using Nuxt to create Vue applications that are server-side
    rendered. The project will be created by using the Vue CLI, and we’ll look at
    everything from configuration to routing, middleware, and testing Nuxt, all the
    way through to deployment.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](c1d020ff-fae2-4bfe-b71f-802f44506be0.xhtml), *Patterns,* assists
    the reader with common anti-patterns and allows them to avoid these principles
    when writing Vue.js applications. A style guide is proposed, as well as key issues
    such as the use of `$parent`, `$ref` coupling issues, inline expressions, and
    others.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You should already have an understanding and knowledge of JavaScript (ES2015+),
    as well as HTML5 and CSS3.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Experience with Vue.js is not required for this book, although experience with other
    JavaScript frameworks will assist with comparisons and similar features.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Vue.js-2-Design-Patterns-and-Best-Practices](https://github.com/PacktPublishing/Vue.js-2-Design-Patterns-and-Best-Practices).
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/Vuejs2DesignPatternsandBestPractices_ColorImages.pdf.](https://www.packtpub.com/sites/default/files/downloads/Vuejs2DesignPatternsandBestPractices_ColorImages.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in the text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image
    file as another disk in your system."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
