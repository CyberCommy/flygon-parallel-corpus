- en: Networking and Services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 95\. Finding the IP address of a host
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Write a program that can retrieve and print the IPv4 address of a host. If multiple
    addresses are found, then all of them should be printed. The program should work
    on all platforms.
  prefs: []
  type: TYPE_NORMAL
- en: 96\. Client-server Fizz-Buzz
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Write a client-server application that can be used for playing the F*izz-Buzz*
    game. The client sends numbers to the server that answer back with fizz, buzz,
    fizz-buzz, or the number itself, according to the game rules. Communication between
    the client and the server must be done over TCP. The server should run indefinitely.
    The client should run as long as the user enters numbers between 1 and 99.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fizz-Buzz is a game for children, intended to teach them arithmetic division.
    A player must say a number and another player should answer with:'
  prefs: []
  type: TYPE_NORMAL
- en: Fizz, if the number is divisible by 3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Buzz, if the number is divisible by 5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fizz-buzz, if the number is divisible by both 3 and 5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The number itself in all other cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 97\. Bitcoin exchange rates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Write a program that displays Bitcoin exchange rates for the most important
    currencies (such as USD, EUR, or GBP). The exchange rates must be fetched from
    an online service, such as: [https://blockchain.info](https://blockchain.info).
  prefs: []
  type: TYPE_NORMAL
- en: 98\. Fetching emails using IMAP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Write a program that can get information from an email server using IMAP. The
    program should be able to:'
  prefs: []
  type: TYPE_NORMAL
- en: Get a list of folders from the mailbox
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get unread emails from a particular folder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 99\. Translating text to any language
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Write a program that can translate text from one language to another using an
    online service. It should be possible to specify the text that you wish to translate,
    the language of the text, and the language to translate to.
  prefs: []
  type: TYPE_NORMAL
- en: 100\. Detecting faces in a picture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Write a program that can identify people's faces from pictures. At a minimum,
    the program must detect the face area and the gender of the person. This information
    should be printed to the console. The pictures must be loaded from the disk.
  prefs: []
  type: TYPE_NORMAL
- en: Solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 95\. Finding the IP address of a host
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Host information, including IP addresses, can be retrieved with system-specific
    network utilities, such as `gethostbyname()`. Although this is available on all
    platforms, the way it is used is different and the requirement is to write a program
    that works on all platforms. There are various open source cross-platform libraries
    for networking, such as *POCO* and *Asio*/*Boost.Asio*. *POCO* is a more complex
    library, with support for not only networking but also data access, cryptography,
    XML, JSON, Zip, and others. *Asio* is a stand-alone, header-only library with
    a consistent asynchronous I/O model for network programming. It is also available
    as part of the Boost library, and a standardization proposal based on it ...
  prefs: []
  type: TYPE_NORMAL
- en: 96\. Client-server Fizz-Buzz
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to solve this problem, we will use the *Asio* library again. However,
    this time we need to write two programs: a server and a client. The server accepts
    TCP connections on a particular port, opens a connected socket, and starts reading
    on the socket. When it reads something from the socket, it interprets it as a
    number for the Fizz-Buzz game, writes back the answer, and continues to wait for
    another input. The client connects to a host on a particular port, sends a number
    read from the console, and then waits to receive an answer from the server before
    printing it to the console.'
  prefs: []
  type: TYPE_NORMAL
- en: On the server side, the implementation of the Fizz-Buzz game is rather straightforward
    and should not require additional explanations. ...
  prefs: []
  type: TYPE_NORMAL
- en: 97\. Bitcoin exchange rates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Various online services provide APIs for checking bitcoin market prices and
    exchange rates. A service that you can use for free is available at `https://blockchain.info/ticker`.
    A `GET` HTTP request returns a JSON object with the market price for various currencies.
    Documentation for the API can be found at: [https://blockchain.info/api/exchange_rates_api](https://blockchain.info/api/exchange_rates_api).
    An excerpt from such a JSON object is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: There are various libraries that you can use for transferring ...
  prefs: []
  type: TYPE_NORMAL
- en: 98\. Fetching emails using IMAP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **Internet Message Access Protocol** (**IMAP**) is an internet protocol
    for retrieving email messages from an email server using TCP/IP. Most email server
    providers, including major ones like Gmail, Outlook.com, and Yahoo! Mail offer
    support for it. There are some C++ libraries for working with IMAP, such as *VMIME,*
    that is open source and cross-platform and supports IMAP, POP, and SMTP. However,
    in this book, I will use *cURL* (or more specifically, *libcurl*) to make HTTP
    requests to an email server using IMAPS.
  prefs: []
  type: TYPE_NORMAL
- en: 'The required operations can be achieved with several IMAP commands. In the
    following list, `imap.domain.com` is an example domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '`GET imaps://imap.domain.com` retrieves all of the folders in the mailbox.
    If ...'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 99\. Translating text to any language
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Text translation capabilities are available on many cloud computing services,
    including Microsoft Cognitive Services, Google Cloud Translation API, and Amazon
    Translate. In this book, I will be using Cognitive Services in Microsoft Azure.
    Azure Cognitive Services is a collection of machine learning and artificial intelligence
    algorithms that can be used to easily add intelligent functionalities to applications.
    One of the included services is *Text Translate API*, which provides capabilities
    such as language detection, translation from one language to another, and converting
    text to speech. We will also use *libcurl* for making HTTP requests.
  prefs: []
  type: TYPE_NORMAL
- en: Although there are various pricing plans for using the Text Translate ...
  prefs: []
  type: TYPE_NORMAL
- en: 100\. Detecting faces in a picture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is yet another problem that can be solved using Microsoft Cognitive Services.
    One of the services available in this group, called *Face API*, provides algorithms
    for detecting faces, gender, age, emotion, and various face landmarks and attributes,
    as well as the ability to find face similarities, identify people, group pictures
    based on visual faces similarities, and others.
  prefs: []
  type: TYPE_NORMAL
- en: Similar to the Text Translate API, there is a free plan that allows up to 30,000
    transactions per month, but only 20 every minute. A transaction is basically an
    API call. There are several paid plans that allow for more transactions per month
    and per minute, but for the purpose of this problem, you can use the free tier.
    There is also ...
  prefs: []
  type: TYPE_NORMAL
