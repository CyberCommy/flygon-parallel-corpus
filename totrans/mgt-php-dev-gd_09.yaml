- en: Appendix A. Hello Magento
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following example will give you a quick and easy introduction into the world
    of creating Magento extensions. We will create a simple Hello World module that
    will allow us to display a Hello World! message when we visit a specific URL in
    our store.
  prefs: []
  type: TYPE_NORMAL
- en: The configuration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Creating a bare bones extension in Magento requires at least two files: `config.xml`
    and the module declaration file. Let’s go ahead and create each one of our files.'
  prefs: []
  type: TYPE_NORMAL
- en: The first file is used to declare the module to Magento; without this file,
    Magento will not be aware of any extension files.
  prefs: []
  type: TYPE_NORMAL
- en: 'The file location is `app/etc/modules/Mdg_Hello.xml`. Refer to the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The second XML file is called `config.xml`; it is used to specify all the extension
    configurations, such as routes, blocks, models, and helper class names. For our
    example, we are only going to be working with the controllers and the routes.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s create the configuration file with the following code.
  prefs: []
  type: TYPE_NORMAL
- en: 'The file location is `app/code/local/Mdg/Hello/etc/config.xml`. Refer to the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Our extension can now be loaded by Magento, and you can enable or disable our
    extension in the Magento Backend at **System** | **Configuration** | **Advanced**.
  prefs: []
  type: TYPE_NORMAL
- en: The controller
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Magento at its core is a **Model-View-Controller** (**MVC**) framework. So,
    in order to make our new route functional, we have to create a new controller
    that will respond to this specific route. To do so, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the extension root directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new folder called `controllers`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Inside the `controllers` folder, create a file called `IndexController.php`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Copy the following code (the file location is `app/code/local/Mdg/Hello/controllers/IndexController.php`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Testing the route
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have created our router and controller, we can test it out by opening
    `http://magento.localhost.com/hello/index/index`, for which we should see the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing the route](graphics/3060OS_AppendixA_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: By default, Magento will use both the index controller and the index action
    as defaults for each extension. So, if we go to `http://magento.localhost.com/hello/`,
    we should see the same screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'To conclude our introduction to Magento Module, let’s add a new route to our
    controller:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the extension root directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open `IndexController.php`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Copy the following code (the file location is `app/code/local/Mdg/Hello/controllers/IndexController.php`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, let’s test it out and load the new action route by going to `http://magento.localhost.com/hello/index/developer`
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing the route](graphics/3060OS_AppendixA_02.jpg)'
  prefs: []
  type: TYPE_IMG
