- en: Chapter 6. Auditing Mail Servers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This chapter shows you how to do some things that in many situations might be
    illegal, unethical, a violation of the terms of service, or just not a good idea.
    It is provided here to give you information that may be of use to protect yourself
    against threats and make your own system more secure. Before following these instructions,
    be sure you are on the right side of the legal and ethical line... use your powers
    for good!
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Discovering valid e-mail accounts using Google Search
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detecting open relays
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute forcing SMTP passwords
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enumerating users in an SMTP server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detecting backdoor SMTP servers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute forcing IMAP passwords
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrieving the capabilities of an IMAP mail server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute forcing POP3 passwords
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrieving the capabilities of a POP3 mail server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detecting vulnerable Exim SMTP servers version 4.70 through 4.75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mail servers are available in almost any organization because e-mail has taken
    over as the preferred communication channel for obvious reasons. The importance
    of mail servers depends on the information stored in them. Attackers often compromise
    an e-mail account and proceed to take over all other accounts found by using the
    "Forgot password" functionality available in almost every web application. Sometimes
    compromised accounts are simply eavesdropped for months without anyone noticing,
    and may even be abused by spammers. Therefore, any good system administrator knows
    it is essential to have a secure mail server.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter I will go through different NSE tasks for administering and
    monitoring mail servers. I will also show the offensive side available to penetration
    testers. We will cover the most popular mail protocols such as SMTP, POP3, and
    IMAP.
  prefs: []
  type: TYPE_NORMAL
- en: We will review tasks such as retrieving capabilities, enumerating users, brute
    forcing passwords, and even exploiting vulnerable Exim servers. Finally, you will
    also learn how to use Nmap to automatically scrape the e-mail accounts of search
    engines such as Google Web and Google Groups to collect valid e-mail accounts
    we can use in brute force attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering valid e-mail accounts using Google Search
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finding valid e-mail accounts is an important task during a penetration test.
    E-mail accounts are often used as usernames in some systems and web applications.
    Attackers often target the highly sensitive information that is stored in them.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe shows you how to use Nmap to discover valid e-mail accounts that
    could be used as usernames in some web applications or during brute force password
    auditing, to find weak credentials.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For this task we need an NSE script that is not distributed with Nmap officially.
    Download the NSE script `http-google-search.nse` from [http://seclists.org/nmap-dev/2011/q3/att-401/http-google-email.nse](http://seclists.org/nmap-dev/2011/q3/att-401/http-google-email.nse).
  prefs: []
  type: TYPE_NORMAL
- en: 'Update your NSE script database by executing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The following message will be displayed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To find valid e-mail accounts using Google Search and Google Groups by using
    Nmap, enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'All of the e-mail accounts found will be included under the script output section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The NSE script `http-google-email` was written by Shinook. It uses the search
    engines Google Web and Google Groups to find public e-mail accounts cached by
    these services.
  prefs: []
  type: TYPE_NORMAL
- en: 'The script queries the following URIs to obtain the results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.google.com/search](http://www.google.com/search)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://groups.google.com/groups](http://groups.google.com/groups)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The argument `-p80 --script http-google-email` tells Nmap to launch the NSE
    script `http-google-email` if a web server is found on port 80.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To only show results belonging to certain a hostname, use the script argument
    `http-google-email.domain`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'To increase the number of pages to be crawled, use the script argument `http-google-email.pages`.
    By default, this script only requests five pages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Debugging NSE scripts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If something unexpected happens when you run any of the NSE scripts, turn on
    debugging to get additional information. Nmap uses the flag `-d` for debugging
    and you can set any integer between 0 and 9:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Brute forcing SMTP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Enumerating users in an SMTP server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing IMAP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing POP3 passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detecting open relays
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open relays are insecure mail servers that allow third-party domains to use
    them without authorization. They are abused by spammers and phishers and they
    present a serious risk to organizations because public spam blacklists may add
    them and affect the entire organization, which depends on e-mails reaching its
    destination.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe shows how to detect open relays by using Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Open your terminal and enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The output returns the number of tests that passed, and the command combination
    used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `smtp-open-relay` was submitted by Arturo 'Buanzo' Busleiman, and
    it attempts 16 different tests to determine if an SMTP server allows open relaying.
    If verbose mode is on, it also returns the commands that successfully relayed
    e-mails.
  prefs: []
  type: TYPE_NORMAL
- en: 'The command combination is hardcoded in the script and the tests consist of
    different string formats for the destination and source address:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: If a 503 response is received, the script exits, because this means that this
    server is protected by authentication and is not an open relay.
  prefs: []
  type: TYPE_NORMAL
- en: The script `smtp-open-relay` executes if ports 25, 465, and 587 are open, or
    if the services `smtp`, `smtps`, or `submission` are found in the target host
    (`-sV --script smtp-open-relay`).
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can specify an alternate IP address or domain name by specifying the script
    arguments `smtp-open-relay.ip` and `smtp-open-relay.domain`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Specify the source and destination e-mail address used in the tests by specifying
    the script arguments `smtp-open-relay.to` and `smtp-open-relay.from`, respectively:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '**Debugging NSE scripts**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If something unexpected happens when you run any of the NSE scripts, turn on
    debugging to get additional information. Nmap uses the flag `-d` for debugging
    and you can set any integer between 0 and 9:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Discovering valid e-mail accounts using Google Search* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Enumerating users in an SMTP server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting backdoor SMTP servers* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of an IMAP mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of a POP3 mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting vulnerable Exim SMTP servers version 4.70 through 4.75* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute forcing SMTP passwords
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mail servers often store very sensitive information, and penetration testers
    need to perform brute force password auditing against them to check for weak passwords.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe will show you how to launch dictionary attacks against SMTP servers
    by using Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To launch a dictionary attack against an SMTP server by using Nmap, enter the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'If any valid credentials are found, they will be included in the script output
    section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The NSE script `smtp-brute` was submitted by Patrik Karlsson. It performs brute
    force password auditing against SMTP servers. It supports the following authentication
    methods: `LOGIN`, `PLAIN`, `CRAM-MD5`, `DIGEST-MD5`, and `NTLM`.'
  prefs: []
  type: TYPE_NORMAL
- en: By default the script uses the wordlists `/nselib/data/usernames.lst` and `/nselib/data/passwords.lst`
    but it can easily be changed to use alternate wordlists.
  prefs: []
  type: TYPE_NORMAL
- en: The argument `-p25 --script smtp-brute` makes Nmap initiate the NSE script `smtp-brute`
    if an SMTP server is found running on port 25.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `smtp-brute` depends on the NSE libraries `unpwdb` and `brute`. These
    libraries have several script arguments that can be used to tune your brute force
    password auditing.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use different username and password lists, set the arguments `userdb` and
    `passdb`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'To quit after finding one valid account, use the argument `brute.firstOnly`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'To set a different timeout limit, use the argument `unpwd.timelimit`. To run
    it indefinitely, set it to `0`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Brute modes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The brute library supports different modes that alter the username/password
    combinations used in the attack. The available modes are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`user`: For each user listed in `userdb`, every password in `passdb` will be
    tried'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '`pass`: For each password listed in `passdb`, every user in `userdb` will be
    tried'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '`creds`: This requires the additional argument `brute.credfile`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Debugging NSE scripts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If something unexpected happens when you run any of the NSE scripts, turn on
    debugging to get additional information. Nmap uses the flag `-d` for debugging
    and you can set any integer between 0 and 9:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Discovering valid e-mail accounts using Google Search* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Enumerating users in an SMTP server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing IMAP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of an IMAP mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing POP3 passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of a POP3 mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enumerating users in an SMTP server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: E-mail accounts used as usernames are very common in web applications, and finding
    them is a necessary task when auditing mail servers. Enumerating users via SMTP
    commands can obtain excellent results, and thanks to the Nmap Scripting Engine
    we can automate this task.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe shows how to enumerate users on an SMTP server by using Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To enumerate users of an SMTP server by using Nmap, enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Any usernames found will be included in the script output section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `smtp-enum-users` was written by Duarte Silva, and it attempts to
    enumerate users in SMTP servers by using the SMTP commands `RCPT`, `VRFY`, and
    `EXPN`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The SMTP commands `RCPT`, `VRFY`, and `EXPN` can be used to determine if an
    account exists or not on the mail server. Let''s take a look at the `VRFY` command
    only, as they all work in a similar way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that this script only works on SMTP servers that do not require authentication.
    You will see the following message if that is the case:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can choose which methods to try (`RCPT`, `VRFY`, and `EXPN`), and the order
    in which to try them, with the script argument `smtp-enum-users.methods`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'To set a different domain in the SMTP commands, use the script argument `smtp-enum-users.domain`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: The script `smtp-enum-users` depends on the NSE libraries `unpwdb` and `brute`.
    These libraries have several script arguments that can be used to tune your brute
    force password auditing.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use a different username list, set the argument `userdb`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'To quit after finding one valid account, use the argument `brute.firstOnly`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'To set a different timeout limit, use the argument `unpwd.timelimit`. To run
    it indefinitely, set it to `0`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Debugging NSE scripts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If something unexpected happens when you run any of the NSE scripts, turn on
    debugging to get additional information. Nmap uses the flag `-d` for debugging
    and you can set any integer between 0 and 9:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Discovering valid e-mail accounts using Google Search* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing SMTP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Enumerating users in an SMTP server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting backdoor SMTP servers* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing IMAP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of an IMAP mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing POP3 passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of a POP3 mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detecting backdoor SMTP servers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Compromised servers might have rogue SMTP servers installed and abused by spammers.
    System administrators can use Nmap to help them monitor mail servers in their
    network.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe shows how to detect rogue SMTP servers by using Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Open your terminal and enter the following Nmap command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'If a mail server is found on a non-standard port, it will be reported in the
    script output section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `smtp-strangeport` was submitted by Diman Todorov. It detects SMTP
    servers running on non-standard ports, which is an indicator of rogue mail servers.
    If an SMTP server is found running on a port other than 25, 465, and 587, this
    script will notify you.
  prefs: []
  type: TYPE_NORMAL
- en: The argument `-sV --script smtp-strangeport` makes Nmap start service detection
    and launch the NSE script `smtp-strangeport`, which will compare the port numbers
    on which SMTP servers were found against the known port numbers 25, 465, and 587.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can use this script to set up a monitoring system for your mail server that
    will notify you if a rogue SMTP server is found. First, create the folder `/usr/local/share/nmap-mailmon/`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Scan your host and save the results in the `mailmon` directory we just created:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting file will be used to compare results, and it should reflect your
    known list of services. Now, create the file `nmap-mailmon.sh`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Don''t forget to update the following configuration values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'Make the script `nmap-mailmon.sh` executable with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'You can now add the following `crontab` entry to run this script automatically:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Restart cron and you should have successfully installed a monitoring system
    for your mail server that will notify you if a rogue SMTP server is found.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Detecting open relays* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting vulnerable Exim SMTP servers version 4.70 through 4.75* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute forcing IMAP passwords
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: E-mail accounts store very sensitive information and penetration testers auditing
    a mail server must detect weak passwords that could compromise e-mail accounts
    and the information accessible through them.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe we will brute force IMAP passwords by using Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To perform brute force password auditing against IMAP, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'All of the valid accounts found will be listed under the script output section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `imap-brute` was submitted by Patrik Karlsson, and it performs brute
    force password auditing against IMAP servers. It supports `LOGIN`, `PLAIN`, `CRAM-MD5`,
    `DIGEST-MD5`, and `NTLM` authentication.
  prefs: []
  type: TYPE_NORMAL
- en: By default this script uses the wordlists `/nselib/data/usernames.lst` and `/nselib/data/passwords.lst`,
    but you can change this by configuring the brute library.
  prefs: []
  type: TYPE_NORMAL
- en: The argument `-p143 --script imap-brute` tells Nmap to launch the script `imap-brute`
    if IMAP is found running on port 143.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `imap-brute` depends on the NSE libraries `unpwdb` and `brute`. These
    libraries have several script arguments that can be used to tune your brute force
    password auditing.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use different username and password lists, set the arguments `userdb` and
    `passdb`, respectively:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'To quit after finding one valid account, use the argument `brute.firstOnly`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'To set a different timeout limit, use the argument `unpwd.timelimit`. To run
    it indefinetly, set it to 0:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Brute modes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The brute library supports different modes that alter the username/password
    combinations used in the attack. The available modes are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`user`: For each user listed in `userdb`, every password in `passdb` will be
    tried'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '`pass`: For each password listed in `passdb`, every user in `userdb` will be
    tried'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '`creds`: This requires the additional argument `brute.credfile`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: Debugging NSE scripts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If something unexpected happens when you run any of the NSE scripts, turn on
    debugging to get additional information. Nmap uses the flag `-d` for debugging
    and you can set any integer between 0 and 9:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Discovering valid e-mail accounts using Google Search* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing SMTP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Enumerating users in an SMTP server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of an IMAP mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing POP3 passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of a POP3 mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrieving the capabilities of an IMAP mail server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: IMAP servers may support different capabilities. There is a command named `CAPABILITY`
    that allows clients to list these supported mail server capabilities, and we can
    use Nmap to automate this task.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe shows you how to list the capabilities of an IMAP server by using
    Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Open your favorite terminal and enter the following Nmap command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'The results will be included under the script output section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `imap-capabilities` was submitted by Brandon Enright, and it attempts
    to list the supported functionality of IMAP servers by using the command `CAPABILITY`
    defined in the RFC 3501.
  prefs: []
  type: TYPE_NORMAL
- en: The argument `-p143,993 --script imap-capabilities` tells Nmap to launch the
    NSE script `imap-capabilities` if an IMAP server is found running on port 143
    or 993.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For cases where the IMAP server is running on a non-standard port you can use
    the port selection flag `-p`, or enable Nmap''s service detection:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: Debugging NSE scripts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If something unexpected happens when you run any of the NSE scripts, turn on
    debugging to get additional information. Nmap uses the flag `-d` for debugging
    and you can set any integer between 0 and 9:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Brute forcing SMTP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Enumerating users in an SMTP server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting backdoor SMTP servers* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing IMAP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of an IMAP mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing POP3 passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of a POP3 mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting vulnerable Exim SMTP servers version 4.70 through 4.75* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute forcing POP3 passwords
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: E-mail accounts store sensitive information. Penetration testers auditing mail
    servers must test for weak passwords that could help attackers compromise important
    accounts.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe shows you how to perform brute force password auditing against POP3
    mail servers by using Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To launch a dictionary attack against POP3 by using Nmap, enter the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'Any valid accounts will be listed under the script output section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`pop3-brute` was submitted by Philip Pickering and it performs brute force
    password auditing against POP3 mail servers. By default, it uses the wordlists
    `/nselib/data/usernames.lst` and `/nselib/data/passwords.lst` as username and
    password combinations.'
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `pop3-brute` depends on the NSE library `unpwdb`. This library has
    several script arguments that can be used to tune your brute force password auditing.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use different username and password lists, set the arguments `userdb` and
    `passdb`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'To set a different timeout limit, use the argument `unpwd.timelimit`. To run
    it indefinitely, set it to `0`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: Debugging NSE scripts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If something unexpected happens when you run any of the NSE scripts, turn on
    debugging to get additional information. Nmap uses the flag `-d` for debugging
    and you can set any integer between 0 and 9:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Discovering valid e-mail accounts using Google Search* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing SMTP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Enumerating users in an SMTP server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting backdoor SMTP servers* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing IMAP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of an IMAP mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing POP3 passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of a POP3 mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrieving the capabilities of a POP3 mail server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: POP3 mail servers may support different capabilities defined in RFC 2449\. By
    using a POP3 command we can list them, and thanks to Nmap, we can automate this
    task and include this service information in our scan results.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe will teach you how to list the capabilities of a POP3 mail server
    by using Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Open your favorite terminal and enter the following Nmap command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'A list of server capabilities will be included in the script output section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `pop3-capabilities` was submitted by Philip Pickering, and it attempts
    to retrieve the capabilities of POP3 and POP3S servers. It uses the POP3 command
    `CAPA` to ask the server for a list of supported commands. This script also attempts
    to retrieve the version string via the `IMPLEMENTATION` string, and any other
    site-specific policy.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The script `pop3-capabilities` works with POP3 and POP3S. Mail servers running
    on a non-standard port can be detected with Nmap''s service scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: Debugging NSE scripts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If something unexpected happens when you run any of the NSE scripts, turn on
    debugging to get additional information. Nmap uses the flag `-d` for debugging
    and you can set any integer between 0 and 9:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Detecting open relays* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing SMTP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Enumerating users in an SMTP server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting backdoor SMTP servers* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing IMAP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of an IMAP mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing POP3 passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting vulnerable Exim SMTP servers version 4.70 through 4.75* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detecting vulnerable Exim SMTP servers version 4.70 through 4.75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Exim SMTP servers 4.70 through 4.75 with DKIM enabled are vulnerable to a format
    string bug that allows remote attackers to execute code. Nmap NSE can help penetration
    testers to detect this vulnerability remotely.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe illustrates the process of exploiting an Exim SMTP server with Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Open your terminal and type the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'If the Exim server is vulnerable, more information will be included in the
    script output section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script `smtp-vuln-cve2011-1764` was written by Djalal Harouni. It detects
    vulnerable Exim SMTP servers 4.70-4.75 with **Domain Keys Identified Mail** (**DKIM**)
    by sending a malformed DKIM header and checking if the connection closes or an
    error is returned.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'By default the script `smtp-vuln-cve2011-1764` uses `nmap.scanme.org` as the
    domain in the initial handshake but you can change this by specifying the script
    argument `smtp-vuln-cve2011-1764.domain`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: 'To change the default values `root@<domain>` and `postmaster@<target>` corresponding
    to the source and destination address, use the arguments `smtp-vuln-cve2011-1764.mailfrom`
    and `smtp-vuln-cve2011-1764.mailto`, respectively:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: Debugging NSE scripts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If something unexpected happens when you run any of the NSE scripts, turn on
    debugging to get additional information. Nmap uses the flag `-d` for debugging
    and you can set any integer between 0 and 9:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Detecting open relays* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing SMTP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Enumerating users in an SMTP server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Detecting backdoor SMTP servers* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing IMAP passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of an IMAP mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Brute forcing POP3 passwords* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Retrieving the capabilities of a POP3 mail server* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
