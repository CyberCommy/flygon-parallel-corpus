- en: Chapter 1. Setting Up the Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: PHP 7 has finally been released. For a long time, the PHP community was talking
    about it and has still not stopped. The main improvement in PHP 7 is its performance.
    For a long time, the PHP community faced performance issues in large-scale applications.
    Even some small applications with high traffic faced performance issues. Server
    resources were increased, but it did not help much because in the end the bottleneck
    was PHP itself. Different caching techniques were used, such as APC, and this
    helped a little. However, the community still needed a version of PHP that could
    boost the application's performance at its peak. And this is where PHPNG comes
    in.
  prefs: []
  type: TYPE_NORMAL
- en: '**PHPNG** stands for **PHP next generation**. It is a completely separate branch
    and is mainly targeted for performance. Some people thought that PHPNG is **JIT**
    (**Just In Time**) compilation, but in reality, PHPNG is based on a refactored
    **Zend Engine**, which was highly optimized for performance. PHPNG is used as
    a base for PHP 7 development, and according to the official PHP wiki page, the
    PHPNG branch is now merged into the master branch.'
  prefs: []
  type: TYPE_NORMAL
- en: Before starting to build an application, the development environment should
    be finalized and configured. In this chapter, we will discuss setting up the development
    environment on different systems, such as Windows and different flavors of Linux.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up Ubuntu or Debian
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up CentOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up Vagrant
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All other environments can be skipped, and we can set up the environment that
    we will use.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many tools available that have Apache, PHP, and MySQL bundled for
    Windows, provide easy installation, and are very easy to use. Most of these tools
    already provide support for PHP 7 with Apache, such as through XAMPP, WAMPP, and
    EasyPHP. EasyPHP is the only one that also provides support for **NGINX** and
    provides easy steps to changes webserver from NGINX to Apache or Apache to Nginx.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: XAMPP is also available for Linux and Mac OS X. However, WAMP and EasyPHP are
    only available for Windows. Any of these three can be used for this book, but
    we recommend EasyPHP as it supports NGINX, and for this book, we mostly use NGINX.
  prefs: []
  type: TYPE_NORMAL
- en: Any of the three tools can be used, but we require more control over every element
    of our web server tools, so we will also install NGINX, PHP 7, and MySQL individually
    and then connect them together.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: NGINX Windows binaries can be downloaded from [http://nginx.org/en/download.html](http://nginx.org/en/download.html).
    We recommend using a stable version, though there is no problem with using a mainline
    version. PHP Windows binaries can be downloaded from [http://windows.php.net/download/](http://windows.php.net/download/).
    Download either 32-bit or 64-bit binaries of the *non-thread safe* version according
    to your system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Download NGINX and PHP Windows binaries mentioned in the information box. Copy
    NGINX to a suitable directory. For example, we have a completely separate D drive
    for development purposes. Copy NGINX to this development drive or any other directory.
    Now, copy PHP either to the NGINX directory or to any other secure folder location.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the PHP directory, there will be two `.ini` files, `php.ini-development`
    and `php.ini-production`. Rename either one of them to `php.ini`. PHP will be
    using this configuration file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Hold the *Shift* key and right click in the PHP directory to open the command-line
    window. The command-line window will be opened in the same location path. Issue
    the following command to start PHP:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The `–b` option starts PHP and binds to the path for external **FastCGI** servers.
    The preceding command binds PHP to loop back the `127.0.0.1` IP on port `9000`.
    Now, PHP is accessible on this path.
  prefs: []
  type: TYPE_NORMAL
- en: 'To configure NGINX, open the `nginx_folder/conf/nginx.conf` file. The first
    thing to do is to add root and index to the server block, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at http://www.packtpub.com.
    If you purchased this book elsewhere, you can visit http://www.packtpub.com/support
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the SUPPORT tab at the top.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click on Code Download.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now, we need to configure NGINX to use PHP as FastCGI on the path mentioned
    before on which it is started. In the `nginx.conf` file, uncomment the following
    location block for PHP:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Note the `fastcgi_param` option. The highlighted `complete_path_webroot_folder`
    path should be the absolute path to the HTML directory inside the `nginx` folder.
    Let's say that your NGINX is placed at the `D:\nginx` path; then, the absolute
    path to the `HTML` folder will be `D:\nginx\html`. However, for the preceding
    `fastcgi_param` option, `\` should be replaced by `/`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, restart NGINX by issuing the following command in the root of the NGINX
    folder:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: After NGINX is restarted, open your browser and enter the IP or hostname of
    your Windows server or machine, and we will see the NGINX welcome message.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, to verify the PHP installation and its working with NGINX, create an `info.php`
    file in webroot and enter the following code in it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now, in the browser, access [your_ip/info.php](http://your_ip/info.php), and
    we will be presented with a page full of PHP and server information. Congratulations!
    We configured NGINX and PHP to work perfectly together.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: On Windows and Mac OS X, we recommend that you use a virtual machine installed
    with all the tools on a Linux flavor to get the best performance out of the server.
    It is easy to manage everything in Linux. There are vagrant boxes available that
    have everything ready to use. Also, a custom virtual machine configuration with
    all the tools, including NGINX, Apache, PHP 7, Ubuntu, Debian, or CentOS, and
    other great ones, can be made at [https://puphpet.com](https://puphpet.com), which
    is an easy-to-use GUI. Another nice tool is Laravel Homestead, which is a **Vagrant**
    box with great tools.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Debian or Ubuntu
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ubuntu is derived from Debian, so the process is the same for both Ubuntu and
    Debian. We will use Debian 8 Jessie and Ubuntu 14.04 Server LTS. The same process
    can be applied to desktop versions for both.
  prefs: []
  type: TYPE_NORMAL
- en: First, add the repositories for both Debian and Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: Debian
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As of the time we''re writing this book, Debian does not provide an official
    repository for PHP 7\. So, for Debian, we will use `dotdeb` repositories to install
    NGINX and PHP 7\. Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the `/etc/apt/sources.list` file and add the following two lines at the
    end of the file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, execute the following commands in the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The first two commands will add `dotdeb` repo to Debian and the last command
    will refresh the cache for sources.
  prefs: []
  type: TYPE_NORMAL
- en: Ubuntu
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As of the time of writing this book, Ubuntu also does not provide PHP 7 in
    their official repos, so we will use a third-party repo for the PHP 7 installation.
    Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the following commands in the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Now, the repositories are added. Let's install NGINX and PHP 7.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The rest of the process is mostly the same for both Debian and Ubuntu, so we
    wont list them separately, as we did for the adding repositories section.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install NGINX, run the following command in the terminal (Debian and Ubuntu):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: After the installation is successful, it can be verified by entering the hostname
    and IP of the Debian or Ubuntu server. If we see something similar to the following
    screenshot, then our installation is successful:![Ubuntu](graphics/B05225_01_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following is a list of three useful NGINX commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`service nginx start`: This starts the NGINX server'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`service nginx restart`: This restarts the NGINX server'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`service nginx stop`: This stops the NGINX server'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now, it''s time to install PHP 7 by issuing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'This will install PHP 7 along with the other modules mentioned. Also, we installed
    PHP Cli for the command-line purpose. To verify whether PHP 7 is properly installed,
    issue the following command in the terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: If it displays the PHP version along with some other details, as shown in the
    following screenshot, then PHP is properly installed:![Ubuntu](graphics/B05225_01_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, we need to configure NGINX to work with PHP 7\. First, copy the NGINX
    default config file `/etc/nginx/sites-available/default` to `/etc/nginx/sites-available/www.packt.com.conf`
    using the following command in the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: First, we copied the default configuration file, created another virtual host
    configuration file, `www.packt.com.conf`, and then created a symbolic link file
    to this virtual host file in the sites-enabled folder.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is good practice to create a configuration file for each virtual host by
    the same name as of the domain so that it can easily be recognized by any other
    person.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, open the `/etc/nginx/sites-available/www.packt.com.conf` file and add
    or edit the highlighted code, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The preceding configuration is not a complete configuration file. We copied
    only those configuration options that are important and that we may want to change.
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding code, our webroot path is `/var/www/html`, where our PHP files
    and other application files will be placed. In the index config option, add `index.php`
    so that if no file is provided in the URL, NGINX can look for and parse `index.php`.
  prefs: []
  type: TYPE_NORMAL
- en: We added a location block for PHP that includes a `fastcgi_pass` option, which
    has a path to the PHP7 FPM socket. Here, our PHP runs on a Unix socket, which
    is faster than that of TCP/IP.
  prefs: []
  type: TYPE_NORMAL
- en: 'After making these changes, restart NGINX. Now, to test whether PHP and NGINX
    are properly configured, create an `info.php` file at the root of the `webroot`
    folder and place the following code in it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Now, in the browser, type `server_ip/info.php`, and if you see a PHP configuration
    page, then congratulations! PHP and NGINX are both properly configured.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If PHP and NGINX run on the same system, then PHP listens to the loopback IP
    at port `9000`. The port can be changed to any other port. In case, we want to
    run PHP on the TCP/IP port, then in `fastcgi_pass`, we will enter `127.0.0.1:9000`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s install **Percona Server**. Percona Server is a fork of MySQL and
    is optimized for high performance. We will read more about Percona Server in [Chapter
    3](ch03.html "Chapter 3. Improving PHP 7 Application Performance"), *Increasing
    PHP 7 Application Performance*. Now, let''s install Percona Server on Debian/Ubuntu
    via the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let''s add the Percona Server repository to our system by running the
    following command in the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: The first command will download the repo packages from the Percona repo. The
    second command will install the downloaded packages and will create a `percona-release.list`
    file at `/etc/apt/sources.list.d/percona-release.list`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, install Percona Server by executing the following command in the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, issue the following command to install Percona Server:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: The installation process will start. It will take a while to download it.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For the purpose of this book, we will install Percona Server 5.5\. Percona Server
    5.6 is also available, which can be installed without any issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'During the installation, the password for the `root` user will be asked, as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Ubuntu](graphics/B05225_01_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It is optional but recommended to enter the password. After entering the password,
    re-enter the password on the next screen. The installation process will continue.
  prefs: []
  type: TYPE_NORMAL
- en: 'After the installation is complete, the Percona Server installation can be
    verified by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: It will display the version of Percona Server. As mentioned before, Percona
    Server is a fork of MySQL, so all the same MySQL commands, queries, and settings
    can be used.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up CentOS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: CentOS is a fork of **Red Hat Enterprise Linux** (**RHEL**) and stands for **Community
    Enterprise Operating System**. It is a widely used OS on servers specially used
    by hosting companies to provide shared hosting.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start by configuring CentOS for our development environment. Perform
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing NGINX
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, we need to add NGINX RPM to our CentOS installation because CentOS does
    not provide any default repository for NGINX. Issue the following command in your
    terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: This will add the NGINX repo to CentOS.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, issue the following command to see which versions of NGINX are available
    to install:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: This will show you the latest stable releases. In our case, it displays NGINX
    1.8.0 and NGINX 1.8.1.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s install NGINX using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: This will install NGINX.
  prefs: []
  type: TYPE_NORMAL
- en: 'On CentOS, NGINX won''t start automatically after installation or restarting.
    So, first, we will enable NGINX to autostart after a system restarts using the
    following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s start NGINX by issuing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Then, open your browser and enter the IP of the CentOS server or host name.
    If you see the same welcome screen as we saw in the figure earlier in the chapter
    for Debian, then NGINX is installed successfully.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To check which version of NGINX is installed, issue the following command in
    the terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: On our server, the NGINX version installed is 1.8.1.
  prefs: []
  type: TYPE_NORMAL
- en: Now, our web server is ready.
  prefs: []
  type: TYPE_NORMAL
- en: Installing PHP 7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The next step is to install PHP 7 FPM and configure both NGINX and PHP 7 to
    work together. As of the time of writing this book, PHP 7 is not packaged in official
    CentOS repositories. So, we have two choices to install PHP 7: either we build
    it from source, or we use third-party repositories. Building from source is a
    little bit difficult, so let''s go the easy way and use third-party repositories.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For this book, we will use webtatic repos for the PHP 7 installation as they
    provide quick updates for the new versions. There are some more repositories,
    and it is just the reader's choice to use any repository as long as it works.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s add a webtatic repository to our CentOS repo by issuing the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'After the repos are added successfully, issue the following command to see
    which version is available for installation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: In our case, PHP 7.0.3 is available to install.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, issue the following command to install PHP 7 along with some modules that
    may be required:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'This will install core PHP 7 and some modules available for PHP 7\. If any
    other module is required, it can be installed easily; however, first, search to
    check whether it is available or not. Issue the following command in the terminal
    to see all the available modules for PHP 7:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: We will see a long list of all the available modules for PHP 7.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s say that we want to install the PHP 7 gd module; issue the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: This will install the gd module. Multiple modules can be installed using the
    same command and separating each module by a space, as we did in the initial installation
    of PHP.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, to check which version of PHP is installed, issue the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: In our case, PHP 7.0.3 is installed.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start, stop, and restart PHP, issue the following commands in the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s configure NGINX to use PHP FPM. Open the default NGINX virtual
    host file located at `/etc/Nginx/conf.d/default.conf` using either `vi`, `nano`,
    or any other editor of your choice. Now, make sure that two options are set in
    the server block, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: The `root` option indicates the web document root where our website source code
    files will be placed. Index indicates the default files that will be loaded along
    with extensions. If any of these files are found, they will be executed by default,
    regardless of any file mentioned in the URLs.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next configuration in NGINX is a location block for PHP. The following
    is the configuration for PHP:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: The preceding block is the most important configuration as it enables NGINX
    to communicate with PHP. The line `fastcgi_pass 127.0.0.1:9000` tells NGINX that
    PHP FPM can be accessed on the `127.0.0.1` loopback IP on port `9000`. The rest
    of the details are the same as those we discussed for Debian and Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, to test our installation, we will create a file named `info.php` with
    the following contents:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: After saving the file, type `http://server_ip/info.php` or `http://hostname/info.php`,
    and we will get a page with complete information about PHP. If you see this page,
    congratulations! PHP runs alongside NGINX.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Percona Server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, we will install Percona Server on CentOS. The installation process is
    the same, except that it has a separate repository. To add the Percona Server
    repo to CentOS, execute the following command in the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: After the repo installation is completed, a message will be displayed stating
    the completion of the installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, to test the repo, issue the following command, and it will list all the
    available Percona packages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'To install Percona Server 5.5, issue the following command in the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: The installation process will start. The rest of the process is the same as
    for Debian/Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: After the installation is completed, we will see a completion message.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Setting up Vagrant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vagrant is a tool used by developers for development environments. Vagrant provides
    an easy command-line interface to set up virtual machines with all the tools required.
    Vagrant uses boxes called Vagrant Boxes that can have a Linux operating system
    and other tools according to this box. Vagrant supports both Oracle VM VirtualBox
    and VMware. For the purpose of this book, we will use VirtualBox, which we assume
    is installed on your machine as well.
  prefs: []
  type: TYPE_NORMAL
- en: Vagrant has several boxes for PHP 7, including Laravel Homestead and Rasmus
    PHP7dev. So, let's get started by configuring the Rasmus PHP7dev box on Windows
    and Mac OS X.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We assume that both VirutalBox and Vagrant are installed on our machine. VirtualBox
    can be downloaded from [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads),
    and Vagrant can be downloaded from [https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)
    for different platforms. Details about Rasmus PHP7dev VagrantBox can be found
    at [https://github.com/rlerdorf/php7dev](https://github.com/rlerdorf/php7dev).
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Make a directory in one of the drives. For example, we made a `php7` directory
    in our `D` drive. Then, open the command line in this specific folder directly
    by holding the *Shift* key, right-clicking, and then selecting **Open command
    window here**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, issue the following command in the command window:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'It will start downloading the Vagrant box, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up Vagrant](graphics/B05225_01_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, when the download is completed, we need to initialize it so that the box
    is configured and added to VirtualBox for us. Issue the following command in the
    command window:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'This will start adding the box to VirtualBox and configuring it. When the process
    is completed, it will display a message, as in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up Vagrant](graphics/B05225_01_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, issue the following command, which will completely set up the Vagrant
    box and start it up and running:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: This process will take a little bit of time. When it is completed, your box
    is ready and running and can be used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, the first thing to do after it is up is to update everything. This box
    uses Ubuntu, so open the command window in the same `php7dev` directory and issue
    the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: It will connect us with the virtual machines through SSH.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Windows, if SSH in not installed or not configured in the `PATH` variable,
    PuTTY can be used. It can be downloaded from [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html).
    For PuTTY, the host will be `127.0.0.1`, and the port will be `2222`. `Vagrant`
    is both the username and password for SSH.
  prefs: []
  type: TYPE_NORMAL
- en: 'When we are logged in to the box OS, issue the following commands to update
    the system:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: This will update the core system, NGINX, MySQL, PHP 7, and other installed tools
    if new versions are available.
  prefs: []
  type: TYPE_NORMAL
- en: 'The box is now ready to use for development purposes. The box can be accessed
    in the browser by typing its IP address in the browser window. To find the IP
    address of the box, issue the following command in the SSH-connected command window:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: This will display some details. Find out the IPv4 details there and take the
    IP of the box.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we configured different environments for the purpose of development.
    We installed NGINX and PHP 7 on the windows machine. We also configured Debian/Ubuntu
    and installed NGINX, PHP, and Percona Server 5.5\. Then, we configured CentOS
    and installed NGINX, PHP, and Percona Server 5.5\. Lastly, we discussed how to
    configure Vagrant Box on a Windows machine.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will study new features in PHP 7, such as type hints,
    namespace groupings and declarations, the Spaceship operator, and other features.
  prefs: []
  type: TYPE_NORMAL
