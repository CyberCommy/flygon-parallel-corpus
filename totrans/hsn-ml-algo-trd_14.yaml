- en: Topic Modeling
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the last chapter, we converted unstructured text data into a numerical format
    using the bag-of-words model. This model abstracts from word order and represents
    documents as word vectors, where each entry represents the relevance of a token
    to the document.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: The resulting **document-term matrix** (**DTM**), (you may also come across
    the transposed term-document matrix) is useful to compare documents to each other
    or to a query vector based on their token content, and quickly find a needle in
    a haystack or classify documents accordingly.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: However, this document model is both high-dimensional and very sparse. As a
    result, it does little to summarize the content or get closer to understanding
    what it is about. In this chapter, we will use unsupervised machine learning in
    the form of topic modeling to extract hidden themes from documents. These themes
    can produce detailed insights into a large body of documents in an automated way.
    They are very useful to understand the haystack itself and permit the concise
    tagging of documents because using the degree of association of topics and documents.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Topic models permit the extraction of sophisticated, interpretable text features
    that can be used in various ways to extract trading signals from large collections
    of documents. They speed up the review of documents, help identify and cluster
    similar documents, and can be annotated as a basis for predictive modeling. Applications
    include the identification of key themes in company disclosures, or earnings call
    transcripts, customer reviews or contracts, annotated using, for example, sentiment
    analysis or direct labeling with subsequent asset returns.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: 'More specifically, in this chapter, we will cover these topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: What topic modeling achieves, why it matters, and how it has evolved
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How **Latent Semantic Indexing** (**LSI**) reduces the dimensionality of the
    DTM
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How **probabilistic Latent Semantic Analysis** (**pLSA**) uses a generative
    model to extract topics
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How **Latent Dirichlet Allocation** (**LDA**) refines pLSA and why it is the
    most popular topic model
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to visualize and evaluate topic modeling results
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to implement LDA using sklearn and gensim
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to apply topic modeling to collections of earnings calls and Yelp business
    reviews
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code samples for the following sections are in the directory of the GitHub
    repository for this chapter, and references are listed in the main README file.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'Learning latent topics: goals and approaches'
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Topic modeling aims to discover hidden topics or themes across documents that
    capture semantic information beyond individual words. It aims to address a key
    challenge in building a machine learning algorithm that learns from text data
    by going beyond the lexical level of what has been written to the semantic level
    of what was intended. The resulting topics can be used to annotate documents based
    on their association with various topics.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: In other words, topic modeling aims to automatically summarize large collections
    of documents to facilitate organization and management, as well as search and
    recommendations. At the same time, it can enable the understanding of documents
    to the extent that humans can interpret the descriptions of topics.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Topic models aim to address the curse of dimensionality that can plague the
    bag-of-words model. The document representation based on high-dimensional sparse
    vectors can make similarity measures noisy, leading to inaccurate distance measurement
    and overfitting of text classification models.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, the bag of words model ignores word order and loses context as well
    as semantic information because it is not able to capture synonymy (several words
    have the same meaning) and polysemy (one word has several meanings). As a result,
    document retrieval or similarity search may miss the point when the documents
    are not indexed by the terms used to search or compare.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'These shortcoming prompt this question: how do we model and learn meaning topics
    that facilitate a more productive interaction with text data?'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: From linear algebra to hierarchical probabilistic models
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Initial attempts by topic models to improve on the vector space model (developed
    in the mid-1970s) applied linear algebra to reduce the dimensionality of the document-term
    matrix. This approach is similar to the algorithm we discussed as principal component
    analysis in [Chapter 12](c187906e-9fde-4f85-b709-df88dd0f7e88.xhtml), *Unsupervised
    Learning*, on unsupervised learning. While effective, it is difficult to evaluate
    the results of these models absent a benchmark model.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: In response, probabilistic models emerged that assume an explicit document generation
    process and provide algorithms to reverse engineer this process and recover the
    underlying topics.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: 'This table highlights key milestones in the model evolution that we will address
    in more detail in the following sections:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '| **Model** | **Year** | **Description** |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
- en: '| **Latent Semantic Indexing** (**LSI**) | 1988 | Reduces the word space dimensionality
    to capture semantic document-term relationships by  |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
- en: '| **Probabilistic Latent Semantic Analysis** (**pLSA**) | 1999 | Reverse-engineers
    a process that assumes words generate a topic and documents are a mix of topics
    |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
- en: '| **Latent Dirichlet Allocation** (**LDA**) | 2003 | Adds a generative process
    for documents: a three-level hierarchical Bayesian model |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
- en: Latent semantic indexing
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Latent Semantic Indexing (LSI, also called Latent Semantic Analysis) sets out
    to improve the results of queries that omitted relevant documents containing synonyms
    of query terms. It aims to model the relationships between documents and terms
    to be able to predict that a term should be associated with a document, even though,
    because of variability in word use, no such association was observed.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: LSI uses linear algebra to find a given number, *k*, of latent topics by decomposing
    the DTM. More specifically, it uses **Singular Value Decomposition** (**SVD**)
    to find the best lower-rank DTM approximation using k singular values and vectors.
    In other words, LSI is an application of the unsupervised learning techniques
    of dimensionality reduction we encountered in [Chapter 12](c187906e-9fde-4f85-b709-df88dd0f7e88.xhtml), *Unsupervised
    Learning* to the text representation that we covered in [Chapter 13](461c4d2b-9349-4b77-baf9-7b4e60926c93.xhtml), *Working
    with Text Data*. The authors experimented with hierarchical clustering but found
    it too restrictive to explicitly model the document-topic and topic-term relationships,
    or capture associations of documents or terms with several topics.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: In this context, SVD serves the purpose of identifying a set of uncorrelated
    indexing variables or factors that permit us to represent each term and document
    by its vector of factor values.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: The following figure illustrates how SVD decomposes the DTM into three matrices,
    two containing orthogonal singular vectors and a diagonal matrix with singular
    values that serve as scaling factors. Assuming some correlation in the original
    data, singular values decay in value so that selecting only the largest *T* singular
    values produces a lower-dimensional approximation of the original DTM that loses
    relatively little information. Hence, in the reduced version the rows or columns
    that had *N* items only have *T<N* entries.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 'This reduced decomposition can be interpreted as illustrated next, where the
    first *M x T* matrix represents the relationships between documents and topics,
    the diagonal matrix scales the topics by their corpus strength, and the third
    matrix models the term-topic relationship:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4db67058-1bed-4104-8f63-b7d8e3b16fbe.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: The rows of the matrix that results from the product of the first two matrices, *U[T]Σ[T]*[,]corresponds
    to the locations of the original documents projected into the latent topic space.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: How to implement LSI using sklearn
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will illustrate the application of LSI using the BBC article data that we
    introduced in the last chapter because it is small enough to permit quick training
    and allow us to compare topic assignments to category labels. See the `latent_semantic_indexing` notebook for
    additional implementation details:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: We begin by loading the documents and creating a train and (stratified) test
    set with 50 articles.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Then, we vectorize the data using `TfidfVectorizer` to obtain weighted DTM
    counts and filter out words that appear in less than 1% or more than 25% of the
    documents, as well as generic stopwords, to obtain a vocabulary of around 2,900
    words:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We use `sklearn`'s `TruncatedSVD` class, which only computes the *k* largest
    singular values to reduce the dimensionality of the document-term matrix. The
    deterministic arpack algorithm delivers an exact solution, but the default randomized
    implementation is more efficient for large matrices.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We compute five topics to match the five categories, which explain only 5.4%
    of the total DTM variance so higher values would be reasonable:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: LSI identifies a new orthogonal basis for the document-term matrix that reduces
    the rank to the number of desired topics.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The `.transform()` method of the trained `svd` object projects the documents
    into the new topic space that is the result of reducing the dimensionality of
    the document vectors and corresponds to the *U[T]Σ[T]* transformation illustrated
    before:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can sample an article to view its location in the topic space. We draw a
    `Politics` article that is most (positively) associated with topics 1 and 2:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The topic assignments for this sample align with the average topic weights for
    each category illustrated next (`Politics` is the leftmost). They illustrate how
    LSI expresses the k topics as directions in a k-dimensional space (the notebook
    includes a projection of the average topic assignments per category into two-dimensional
    space).
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Each category is clearly defined, and the test assignments match with train
    assignments. However, the weights are both positive and negative, making it more
    difficult to interpret the topics:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7cf3ba3c-4536-43d5-b1cd-c06c097c0fd3.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
- en: 'We can also display the words that are most closely associated with each topic
    (in absolute terms). The topics appear to capture some semantic information but
    are not differentiated:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e4d2bd25-5950-44fa-ba6c-6e3d6f7a45d0.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
- en: Pros and cons
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The benefits of LSI include the removal of noise and mitigation of the curse
    of dimensionality, while also capturing some semantics and  clustering both documents
    and terms.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: However, the results of LSI are difficult to interpret because topics are word
    vectors with both positive and negative entries. There is also no underlying model
    that would permit the evaluation of fit and provide guidance when selecting the
    number of dimensions or topics.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Probabilistic latent semantic analysis
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Probabilistic Latent Semantic Analysis (pLSA)** takes a statistical perspective
    on LSA and creates a generative model to address the lack of theoretical underpinnings
    of LSA.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: pLSA explicitly models the probability each co-occurrence of documents *d* and
    words *w* described by the DTM as a mixture of conditionally independent multinomial
    distributions that involve topics *t*.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: 'The symmetric formulation of this generative process of word-document co-occurrences
    assumes both words and documents are generated by the latent topic class, whereas
    the asymmetric model assumes the topics are selected given the document, and words
    result from a second step given the topic:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cfcdc229-8283-4358-b14a-6f50e483799c.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
- en: The number of topics is a hyperparameter chosen before training and is not learned
    from the data.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: 'Probabilistic models often use the following plate notation to express dependencies.
    The following figure encodes the relationships just describe for the asymmetric
    model. Each rectangle represents multiple items, such as M Documents for the outer
    and N Words for each document for the inner block. We only observe the documents
    and their content, and the model infers the hidden or latent topic distribution:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f1ce787d-33f0-4353-9732-b47427cca98e.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: The benefit of using a probability model is that we can now compare models by
    evaluating the probability they assign to new documents given the parameters learned
    during training.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: How to implement pLSA using sklearn
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: pLSA is equivalent to non-negative matrix factorization using a Kullback-Leibler
    Divergence objective (see references on GitHub [https://github.com/PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading](https://github.com/PacktPublishing/Hands-On-Machine-Learning-for-Algorithmic-Trading)).
    Hence, we can use the `sklearn.decomposition.NM` class to implement this model,
    following the LSA example.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the same train-test split of the DTM produced by the `TfidfVectorizer`,
    we fit pLSA as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We get a measure of the reconstruction error, which is a substitute for the
    explained variance measure from before:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Due to its probabilistic nature, pLSA produces only positive topic weights
    that result in more straightforward topic-category relationships for the test
    and training sets:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a505d985-d9a8-407c-be17-56937de08105.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
- en: 'We can also see that the word lists that describe each topic begin to make
    more sense; for example, the Entertainment category is most directly associated
    with Topic 4, which includes the words film, start, and so on:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e6c6fb32-72be-4dba-b9c1-522ad7f38eab.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
- en: Latent Dirichlet allocation
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Latent Dirichlet allocation** (**LDA**) extends pLSA by adding a generative
    process for topics.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: It is the most popular topic model because it tends to produce meaningful topics
    that humans can relate to, can assign topics to new documents, and is extensible.
    Variants of LDA models can include metadata such as authors, or image data, or
    learn hierarchical topics.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: How LDA works
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: LDA is a hierarchical Bayesian model that assumes topics are probability distributions
    over words, and documents are distributions over topics. More specifically, the
    model assumes that topics follow a sparse Dirichlet distribution, which implies
    that documents cover only a small set of topics, and topics use only a small set
    of words frequently.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: The Dirichlet distribution
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Dirichlet distribution produces probability vectors that can be used with
    discrete distributions. That is, it randomly generates a given number of values
    that are positive and sum to one as expected for probabilities. It has a parameter
    of positive, real value that controls the concentration of the probabilities.
    Values closer to zero mean that only a few values will be positive and receive
    most probability mass. The following screenshot illustrates three draws of size
    10 for α *= 0.1* (the `dirichlet_distribution` notebook contains a simulation
    so you can experiment with different parameter values):'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a3806199-b3dc-4b20-83a0-aac2e412bbf8.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
- en: Dirichlet allocation
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: The generative model
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Dirichlet distribution figures prominently in the LDA topic model, which
    assumes the following generative process when an author adds an article to a body
    of documents:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Randomly mix a small subset of shared topics *K* according to the topic probabilities
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For each word, select one of the topics according to the document-topic probabilities
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a word from the topic's word list according to the topic-word probabilities
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As a result, the article content depends on the weights of each topic and on
    the terms that make up each topic. The Dirichlet distribution governs the selection
    of topics for documents and words for topics and encodes the idea that a document
    only covers a few topics, while each topic uses only a small number of words frequently.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'The plate notation for the LDA model summarizes these relationships:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4e8db5eb-6a61-4ea6-9223-43cffa093e01.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
- en: Reverse-engineering the process
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The generative process is fictional but turns out to be useful because it permits
    the recovery of the various distributions. The LDA algorithm reverse-engineers
    the work of the imaginary author and arrives at a summary of the document-topic-word
    relationships that concisely describes the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: The percentage contribution of each topic to a document
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The probabilistic association of each word with a topic
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LDA solves the Bayesian inference problem of recovering the distributions from
    the body of documents and the words they contain by reverse-engineering the assumed
    content generation process. The original paper uses **variational Bayes** (**VB**)
    to approximate the posterior distribution. Alternatives include Gibbs sampling
    and expectation propagation. Later, we will illustrate implementations using the
    sklearn and gensim libraries.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: How to evaluate LDA topics
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unsupervised topic models do not provide a guarantee that the result will be
    meaningful or interpretable, and there is no objective metric to assess the result
    as in supervised learning. Human topic evaluation is considered the gold standard
    but is potentially expensive and not readily available at scale.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Two options to evaluate results more objectively include perplexity, which evaluates
    the model on unseen documents, and topic coherence metrics, which aim to evaluate
    the semantic quality of the uncovered patterns.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Perplexity
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perplexity, when applied to LDA, measures how well the topic-word probability
    distribution recovered by the model predicts a sample, for example, unseen text
    documents. It is based on the entropy *H*(*p*) of this distribution *p* and computed
    with respect to the set of tokens *w*:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/16cbf178-55bd-47de-a8ac-120a74c5c3c0.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
- en: Measures closer to zero imply the distribution is better at predicting the sample.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: Topic coherence
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Topic coherence measures the semantic consistency of the topic model results,
    that is, whether humans would perceive the words and their probabilities associated
    with topics as meaningful.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: To this end, it scores each topic by measuring the degree of semantic similarity
    between the words most relevant to the topic. More specifically, coherence measures
    are based on the probability of observing the set of words *W* that define a topic
    together.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: We use two measures of coherence that have been designed for LDA and shown to
    align with human judgment of topic quality, namely the UMass and the UCI measures.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: 'The UCI metric defines a word pair''s score to be the sum of the **Pointwise
    Mutual Information** (**PMI**) between two distinct pairs of (top) topic words
    *w[i]*, *w[j]* ∈ *w* and a smoothing factor *ε*:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f78a1a8b-6bca-421f-af56-c95b4da9ed1c.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
- en: The probabilities are computed from word co-occurrence frequencies in a sliding
    window over an external corpus such as Wikipedia, so that this metric can be thought
    of as an external comparison to a semantic ground truth.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: 'In contrast, the UMass metric uses the co-occurrences in a number of documents
    *D* from the training corpus to compute a coherence score:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4bedbe9e-42a9-4077-ade1-8045d9f952dd.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
- en: Rather than a comparison to an extrinsic ground truth, this measure reflects
    intrinsic coherence. Both measures have been evaluated to align well with human
    judgment. In both cases, values closer to zero imply that a topic is more coherent.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: How to implement LDA using sklearn
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the BBC data as before, we use `sklearn.decomposition.LatentDirichletAllocation`
    to train an LDA model with five topics (see the sklearn documentation for detail
    on parameters, and the notebook `lda_with_sklearn` for implementation details):'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The model tracks the in-sample perplexity during training and stops iterating
    once this measure stops improving. We can persist and load the result as usual
    with sklearn objects:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How to visualize LDA results using pyLDAvis
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Topic visualization facilitates the evaluation of topic quality using human
    judgment. pyLDAvis is a Python port of LDAvis, developed in R and `D3.js`. We
    will introduce the key concepts; each LDA implementation notebook contains examples.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: pyLDAvis displays the global relationships between topics while also facilitating
    their semantic evaluation by inspecting the terms most closely associated with
    each topic and, inversely, the topics associated with each term. It also addresses
    the challenge that terms that are frequent in a corpus tend to dominate the multinomial
    distribution over words that define a topic. LDAVis introduces the relevance *r*
    of the term *w* to topic *t*, to produce a flexible ranking of key terms using
    a weight parameter *0<=ƛ<=1*.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: 'With ![](img/18742117-194f-4e46-b674-441e4a9fc60d.png) as the model''s probability
    estimate of observing the term w for topic *t*, and as the marginal probability
    of w in the corpus:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/81bc1770-6ae9-40a9-a3ca-e2b982fb5a6c.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
- en: The first term measures the degree of association of term *t* with topic *w*,
    and the second term measures the lift or saliency, that is, how much more likely
    the term is for the topic than in the corpus.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4be55e09-a229-4e9c-bb13-9fc5197a20ef.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
- en: Topic 14
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: The tool allows the user to interactively change *ƛ* to adjust the relevance,
    which updates the ranking of terms. User studies have found that *ƛ=0.6* produces
    the most plausible results.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: How to implement LDA using gensim
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`gensim` is a specialized NLP library with a fast LDA implementation and many
    additional features. We will also use it in the next chapter on word vectors (see
    the `latent_dirichlet_allocation_gensim` notebook for details).'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'It facilitates the conversion of DTM produced by sklearn into gensim data structures
    as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Gensim LDA algorithm includes numerous settings, which are as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Gensim also provides an `LdaMulticore` model for parallel training that may
    speed up training using Python's multiprocessing features for parallel computation.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: 'Model training just requires instantiating the `LdaModel` object as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Topic coherence measures whether the words in a topic tend to co-occur together.
    It adds up a score for each distinct pair of top-ranked words. The score is the
    log of the probability that a document containing at least one instance of the
    higher-ranked word also contains at least one instance of the lower-ranked word.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: 'Large negative values indicate words that don''t co-occur often; values closer
    to zero indicate that words tend to co-occur more often. `gensim` permits topic
    coherence evaluation that produces the topic coherence and shows the most important
    words per topic:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can display the results as follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This shows the following top words for each topic:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '| **Topic 1** |  | **Topic 2** |  | **Topic 3** |  | **Topic 4** |  | **Topic
    5** |  |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
- en: '| Probability | Term | Probability | Term | Probability | Term | Probability
    | Term | Probability | Term |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
- en: '| 0.55% | online | 0.90% | best | 1.04% | mobile | 0.64% | market | 0.94% |
    labour |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
- en: '| 0.51% | site | 0.87% | game | 0.98% | phone | 0.53% | growth | 0.72% | blair
    |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
- en: '| 0.46% | game | 0.62% | play | 0.51% | music | 0.52% | sales | 0.72% | brown
    |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
- en: '| 0.45% | net | 0.61% | won | 0.48% | film | 0.49% | economy | 0.65% | election 
    |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
- en: '| 0.44% | used | 0.56% | win | 0.48% | use | 0.45% | prices | 0.57% | united
    |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
- en: 'And the corresponding coherence scores, which highlight the decay of topic
    quality (at least in part due to the relatively small dataset):'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0605996a-535f-454f-89f1-03720b976200.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
- en: Decay of topic quality
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: Topic modeling for earnings calls
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 3](a7cec22f-095e-49c0-a2bb-e179f6e824a8.xhtml), *Alternative Data
    for Finance*, we learned how to scrape earnings call data from the SeekingAlpha
    site. In this section, we will illustrate topic modeling using this source. I'm
    using a sample of some 500 earnings call transcripts from the second half of 2018\.
    For a practical application, a larger dataset would be highly desirable. The `earnings_calls` directory contains
    several files, with examples mentioned later.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: See the `lda_earnings_calls` notebook for details on loading, exploring, and
    preprocessing the data, as well as training and evaluating individual models,
    and the `run_experiments.py` file for the experiments described here.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Data preprocessing
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The transcripts consist of individual statements by a company representative,
    an operator, and usually a question and answer session with analysts. We will
    treat each of these statements as separate documents, ignoring operator statements,
    to obtain 22,766 items with mean and median word counts of 144 and 64, respectively:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We use `spaCy` to preprocess these documents as illustrated in [Chapter 13](461c4d2b-9349-4b77-baf9-7b4e60926c93.xhtml), *Working
    with Text Data* (see the notebook) and store the cleaned and lemmatized text as
    a new text file.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: Data exploration reveals domain-specific stopwords such as year and quarter
    that we remove in a second step, where we also filter out statements with fewer
    than ten words so that some 16,150 remain.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: Model training and evaluation
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For illustration, we will create a document-term matrix containing terms appearing
    in between 0.5% and 50% of documents for around 1,560 features. Training a 15-topic
    model using 25 passes over the corpus takes a bit over two minutes on a four-core
    i7.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: 'The top 10 words per topic identify several distinct themes that range from
    obvious financial information to clinical trials (topic 4) and supply chain issues
    (12):'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/150ee53e-4193-4353-904e-90552426dbaf.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
- en: 'Using pyLDAvis'' relevance metric with a 0.6 weighting of unconditional frequency
    relative to lift, topic definitions become more intuitive, as illustrated for
    topic 14 about sales performance:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/464ea186-b942-464d-ab11-682ac5225cd4.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
- en: Sales performance for Topic 14
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: The notebook also illustrates how to look up documents by their topic association.
    In this case, an analyst can review relevant statements for nuances, use sentiment
    analysis to further process the topic-specific text data, or assign labels derived
    from market prices.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Running experiments
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To illustrate the impact of different parameter settings, we ran a few hundred
    experiments for different DTM constraints and model parameters. More specifically,
    we let the `min_df` and `max_df` parameters range from 50-500 words and 10% to
    100% of documents, respectively using alternatively binary and absolute counts.
    We then trained LDA models with 3 to 50 topics, using 1 and 25 passes over the
    corpus.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: 'The following chart illustrates the results in terms of topic coherence (higher
    is better), and perplexity (lower is better). Coherence drops after 25-30 topics
    and perplexity similarly increases:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/87e28cac-ffb8-4e2e-8401-a0b466fe4841.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
- en: The notebook includes regression results that quantify the relationships between
    parameters and outcomes. We generally get better results using absolute counts
    and a smaller vocabulary.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: Topic modeling for Yelp business reviews
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `lda_yelp_reviews` notebook contains an example of LDA applied to six million
    business review on Yelp. Reviews are more uniform in length than the statements
    extracted from the earnings call transcripts. After cleaning as before, the 10^(th)
    and 90^(th) percentiles range from 14 to 90 tokens.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: 'We show results for one model using a vocabulary of 3,800 tokens based on *min_df=0.1%*
    and *max_df=25%* with a single pass to avoid a lengthy training time for 20 topics.
    We can use the `pyldavis topic_info` attribute to compute relevance values for
    *lambda=0.6* that produce the following word list (see the notebook for details):'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了一个模型的结果，使用了一个包含3,800个标记的词汇表，基于*min_df=0.1%*和*max_df=25%*，通过一次遍历来避免为20个主题进行漫长的训练时间。我们可以使用`pyldavis
    topic_info`属性来计算*lambda=0.6*的相关性数值，产生以下单词列表（详细信息请参见笔记本）：
- en: '![](img/47ff32ac-676d-40bf-84e2-e429dff10d9b.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/47ff32ac-676d-40bf-84e2-e429dff10d9b.png)'
- en: Gensim provides a `LdaMultiCore` implementation that allows for parallel training
    using Python's multiprocessing module and improves performance by 50% when using
    four workers. More workers do not further reduce training time though, due to
    I/O bottlenecks.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Gensim提供了`LdaMultiCore`实现，允许使用Python的多进程模块进行并行训练，并且当使用四个工作进程时，性能提高了50%。然而，使用更多的工作进程并不能进一步减少训练时间，因为受到I/O瓶颈的限制。
- en: Summary
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored the use of topic modeling to gain insights into
    the content of a large collection of documents. We covered Latent Semantic Analysis,
    which uses dimensionality reduction of the DTM to project documents into a latent
    topic space. While effective in addressing the curse of dimensionality caused
    by high-dimensional word vectors, it does not capture much semantic information.
    Probabilistic models make explicit assumptions about the interplay of documents,
    topics, and words that allow algorithms to reverse engineer the document generation
    process and evaluate the model fit on new documents. We saw that LDA is capable
    of extracting plausible topics that allow us to gain a high-level understanding
    of large amounts of text in an automated way, while also identifying relevant
    documents in a targeted way.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了使用主题建模来深入了解大量文档内容的方法。我们介绍了潜在语义分析，它使用DTM的降维来将文档投影到潜在主题空间中。虽然在解决高维词向量引起的维度灾难方面很有效，但它并没有捕捉到太多的语义信息。概率模型对文档、主题和词语的相互作用做出了明确的假设，这使得算法能够逆向工程文档生成过程，并在新文档上评估模型拟合度。我们看到LDA能够提取出合理的主题，使我们能够以自动化的方式对大量文本进行高层次理解，同时以有针对性的方式识别相关文档。
- en: In the next chapter, we will learn how to train neural networks that embed individual
    words in a high-dimensional vector space that captures important semantic information
    and allows us to use the resulting word vectors as high-quality text features.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何训练神经网络，将单词嵌入到一个捕捉重要语义信息的高维向量空间中，并且可以使用生成的单词向量作为高质量的文本特征。
