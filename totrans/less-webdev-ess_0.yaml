- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After the introduction of HTML 4.01 in 1999, the Web changed fast. Many new
    devices such as tablets and mobile phones saw the light of day. Mobile Internet
    became faster, cheaper, and more stable. The W3C started the HTML5 working group
    in 2007\. In December 2012, W3C designated HTML5 as a candidate recommendation.
    HTML5 works with CSS3\. Today, all major browsers (Chrome, Safari, Firefox, Opera,
    IE) offer HTML5 support.
  prefs: []
  type: TYPE_NORMAL
- en: The impact of CSS3 has been huge. Nowadays, CSS3 is not only used to style your
    HTML documents, but CSS3 also plays an important role in the responsibility of
    your designs. Last but not least, CSS3 extends CSS with features such as animations
    and transitions.
  prefs: []
  type: TYPE_NORMAL
- en: 'We don''t need external flash components for complex animation. Take a look
    at [http://www.hongkiat.com/blog/css3-animation-transition-demos/](http://www.hongkiat.com/blog/css3-animation-transition-demos/)
    or look at the funny owl in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Preface](img/1465OS_Preface_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The owl in the preceding screenshot has been built with HTML5 and CSS3 alone.
    The live version can wink and look by pressing the buttons.
  prefs: []
  type: TYPE_NORMAL
- en: 'Responsive designs allow you to build one version of your website with only
    one code base which functions well and looks good on different devices such as
    mobile phones, tablets, and desktops. There won''t be any technical reason to
    build different mobile and desktop versions, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Preface](img/1465OS_Preface_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: With all this new stuff, the work of the CSS (or web) developer becomes more
    complex. A web developer needs to know about complex CSS3, the difference between
    browsers and devices, animations, and other style effects. Writing correct and
    functional CSS code will be the first thing; keeping this code readable, maintainable,
    and working on all major browsers will be the second thing. CSS files grow and
    become untidy in the development and maintenance processes. CSS doesn't have the
    ability to modify the existing values or reuse common styles. Also, doing math
    or defining variables is not possible in CSS. This is where Less comes into the
    frame.
  prefs: []
  type: TYPE_NORMAL
- en: '**Less** (**Leaner CSS**) is a dynamic stylesheet language designed by Alexis
    Sellier. Started in 2010, it is now maintained and extended by the Less core team.
    Less helps you make your CSS code maintainable, reusable, and prevent code duplications.'
  prefs: []
  type: TYPE_NORMAL
- en: In this book, you will learn how to write, compile, and understand Less. We
    will help you do faster and more cost-effective web development. You will get
    practical tips to integrate Less in your current and new projects. After reading
    this book, you will write clear and readable CSS3 with Less. Instead of spending
    your time on debugging your complex CSS code for a specific device or browser,
    you can pay more attention to your real design tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Your clients will be happy with your advanced and stable designs. This will
    reduce the development and maintenance time and hence the cost of designing.
  prefs: []
  type: TYPE_NORMAL
- en: Less extends CSS with functions and variables. In a semantic sense, valid CSS
    is also valid Less. The initial versions of Less were written in Ruby; now, Less
    is written in JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Less is called a CSS precompiler. This means that the end product will be used
    for production. The end product in this case will be valid, compact, and readable
    CSS code. Besides, the precompiling Less code can also compile in real time. Less
    offers server-side and client-side options to do this. Real-time client-side compilation
    via LESS.js in a modern web browser makes testing easy. Server-side compilations
    offer opportunities to build applications with Less as well as create dynamic
    CSS.
  prefs: []
  type: TYPE_NORMAL
- en: Also, others know the power of Less. Projects such as Twitter's Bootstrap and
    Roots, a WordPress starter theme, both rely on Less. These projects build clear
    and extendable frameworks with Less. You can't ignore this proof. Stop writing
    cumbersome CSS with bugs and browser defects and learn about Less by reading this
    book.
  prefs: []
  type: TYPE_NORMAL
- en: Less is open source and licensed under the Apache license. At the time of writing
    this book, the latest version is 1.7\. The source code of Less will be maintained
    on GitHub. Everybody will be allowed to contribute to it. You can use Less free
    of charge.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Improving Web Development with Less"), *Improving
    Web Development with Less*, shows how CSS3 brought advanced functions such as
    gradients, transitions, and animations to web designers. It also explains how,
    on the other hand, CSS code became more complex and difficult to maintain. Less
    helps you make your CSS maintainable, reusable, and prevent code duplications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Using Variables and Mixins"), *Using Variables
    and Mixins*, explains why variables allow you to specify widely-used values in
    a single place and then reuse them throughout the style sheet, thus making global
    changes as easy as changing one line of code. Mixins allow you to embed all the
    properties of a class into another class by simply including the class name as
    one of its properties. The chapter also explains what parametric mixins are and
    how to use them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Nested Rules, Operations, and Built-in Functions"),
    *Nested Rules, Operations, and Built-in Functions*, explains the use of nested
    rules for making inheritance clear and for making shorter style sheets. The chapter
    also explains how to create complex relationships between properties and how to
    use the built-in functions of Less.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Avoid Reinventing the Wheel"), *Avoid Reinventing
    the Wheel*, teaches you how Less code and mixins can become complex because they
    handle different browsers and devices. The chapter also explains prebuilt mixins
    and other sources that help you (re)use them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Integrate Less in Your Own Projects"), *Integrate
    Less in Your Own Projects*, teaches you how to organize your files for new projects
    or get the projects you maintain ready for using Less.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Bootstrap 3, WordPress, and Other Applications"),
    *Bootstrap 3, WordPress, and Other Applications*, explains what Bootstrap is and
    shows the strength of using Less with Bootstrap. The chapter also teaches you
    how to build web applications with Less or integrate it in your WordPress themes.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To understand and get the full benefit of the contents of this book, we expect
    you to have built a website with CSS previously. A basic understanding of CSS
    will be required. Understanding CSS selectors and CSS precedence will help you
    get the most out of this book. We will introduce these CSS aspects briefly in
    the first chapter as well. Understanding the basics of using functions and parameters
    in functional languages such as JavaScript will be valuable, but it is not required.
    Don't panic if you know nothing about functions and parameters. This book contains
    clear examples. Even without any (functional) programming knowledge you can learn
    how to use Less, and this book will help you do this. The most important skill
    will be the willingness to learn.
  prefs: []
  type: TYPE_NORMAL
- en: All chapters of this book contain examples and example code. Running and testing
    these examples will help you develop your Less skills. You will need a modern
    web browser such as Google Chrome or Mozilla Firefox to run these examples. Use
    any preferred text or CSS editor to write your Less code.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every web designer who works with CSS and who wants to spend more time on real
    designing tasks should read this book. It doesn't matter if you are a beginner
    web designer or have used CSS for years; both will profit from reading this book
    and will learn how to utilize Less. We also recommend this book for teachers and
    students in modern web design and computer science. Less does not depend on a
    platform, language, or CMS. If you use CSS, you can and will benefit from Less.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, and user input are shown as follows: "Note that in this
    case, an ID is a unique selector starting with `#`; the selector `[id=]` for the
    same HTML element counts as an attribute."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Clicking on the **Next** button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
