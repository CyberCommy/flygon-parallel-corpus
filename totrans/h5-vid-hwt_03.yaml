- en: Chapter 3. Styling with CSS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Setting elements to `display:block`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styling a `nav` block element
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using background-size to control background appearance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding rounded corners with `border-radius`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Including multiple background images
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a box shadow to images
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styling for Internet Explorer browsers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '"Thanks for all the good times, IE6\. See you all at @Mix when we show a little
    piece of IE Heaven. - The Internet Explorer Team at Microsoft" - Eulogy from the
    Internet Explorer 6 Funeral seen online at [http://ie6funeral.com](http://ie6funeral.com).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You've risen to the challenge of thinking differently about HTML. Next up, you'll
    be challenged to expand your Cascading Style Sheets knowledge as well. Along with
    that, we're going to challenge some assumptions about cross-browser display. If
    you — and your clients — think websites should look the same in every browser,
    we're going to change some minds. But if you already know the fallacy of cross-browser
    display, you'll be the one helping to change other people's minds.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we do any of those things, we need to ask ourselves and our clients
    a simple question: Do websites need to look exactly the same in every browser?
    *Need?* For the concise, one-word answer, visit [http://dowebsitesneedtolookexactlythesameineverybrowser.com](http://dowebsitesneedtolookexactlythesameineverybrowser.com)
    in a modern browser such as Chrome, Firefox, Opera, or Safari.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction](img/1048_03_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Also check a legacy browser like Internet Explorer 6:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction](img/1048_03_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: That, my friends, is what a dead browser looks like. Watching something die
    isn't very pretty, is it?
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s obvious that site displays differently across browsers. The question
    is: So what? Does that matter? Should it? Why?'
  prefs: []
  type: TYPE_NORMAL
- en: 'Very few of us work in sterile labs where we have 100% creative control over
    the display of what we create. Even fewer of us have the time or inclination to
    create separate bespoke experiences for every browser. Surely there must be a
    middle way. There''s an old phrase this author really likes:'
  prefs: []
  type: TYPE_NORMAL
- en: '"The truth lies somewhere in between." - Avadhoot Patwardhan'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this case, the truth is you're going to have to work with your clients, be
    they business owners, project managers, or anyone who pays you to create a site
    for them. But the days of sitting idly by while those people tell us how to do
    our jobs is over. If you know a better, faster, more efficient way to develop,
    you must speak up. It is your duty. If you don't, no one else will speak up for
    you. That's bad for you, that's bad for your client, and that's bad for the industry.
    Don't be that guy.
  prefs: []
  type: TYPE_NORMAL
- en: 'Instead, you''re going to have to educate your clients why some browsers display
    things slightly differently and why that''s perfectly acceptable. Here are a few
    tactics the author has used in real business situations:'
  prefs: []
  type: TYPE_NORMAL
- en: Demonstrate to the client that accommodating for older browsers (especially
    IE6) will take longer. Be ready to prove that developing for that browser alone
    could easily take one quarter of your time. Hit the client where it hurts (the
    pocketbook), and that person will usually back down.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Emphasize that the user experience can remain exactly the same even if IE doesn't
    have every rounded corner or transition effect that other browsers do.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: User experience *always* trumps eye candy.
  prefs: []
  type: TYPE_NORMAL
- en: CSS is not officially part of the HTML5 specification. In fact, it deserves
    its own book. But in this chapter, the author will show you real-world examples
    of how others have used CSS to apply visual treatments by displaying elements
    as block level, mocking up a navigation bar, working with multiple background
    images, applying rounded corners as well as advanced stylings like adding box
    shadows, and styling for Internet Explorer browsers.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get cooking!
  prefs: []
  type: TYPE_NORMAL
- en: Setting elements to display:block
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By default, modern browsers assign the new HTML5 elements to `display:block`.
    But also by default, older browsers and most versions of Internet Explorer fall
    back to `display:inline` natively. If you've worked with CSS before, you can see
    trouble coming a mile away. First thing we're going to do is fix it before it
    can become a problem.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, let''s identify all the new elements in HTML5\. These include:'
  prefs: []
  type: TYPE_NORMAL
- en: '`<article>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<aside>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<audio>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<canvas>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<command>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<datalist>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<details>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<embed>` - not a new tag, but it finally validates in HTML5'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<figcaption>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<figure>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<footer>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<header>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<hgroup>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<keygen>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<mark>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<meter>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<nav>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<output>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<progress>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<rp>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<rt>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<ruby>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<section>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<source>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<summary>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<time>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<video>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<wbr>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We'll start with our usual page framework and add a style to make all those
    new elements `display:block`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: There. That wasn't so bad. Much better, in fact. Of course, these could also
    be included in a CSS reset file as well.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using CSS, we've set all the new HTML5 elements to display as block-level elements,
    ensuring more predictable browser behavior.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Even though modern browsers already display these new HTML5 tags as block-level
    elements, declaring them `display:block` once again in our stylesheet doesn't
    hurt anything. Better safe than sorry here.
  prefs: []
  type: TYPE_NORMAL
- en: No need to repeat and repeat and repeat and repeat and repeat
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Note: We should include that short bit of style in an external stylesheet referenced
    by every page on our site rather than display it inline at the top of every page.
    Better to declare it once and have it carry through the rest of your site than
    repeat it over and over again.'
  prefs: []
  type: TYPE_NORMAL
- en: Style once
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using that simple style declaration once, we can ensure that our modern, legacy,
    and mobile browsers will behave more predictably when displaying new HTML5 elements.
  prefs: []
  type: TYPE_NORMAL
- en: Echoes of the past
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For some reason, some developers don't want to bother learning HTML5\. You hear
    them spout all sorts of nonsense about how the spec isn't ready, it's not fully
    supported in all browsers, and how you need "hacks" like CSS or JavaScript to
    make it work. That's all just nonsense. Don't pay any attention to their whining.
    What you're really hearing is the sound of dinosaurs going extinct. If a dinosaur
    is bound and determined to will itself into extinction by its own inaction, we
    say let it. Only the strong survive.
  prefs: []
  type: TYPE_NORMAL
- en: It's helpful to remember that evolution occurs in stages. Not all beings suddenly
    evolve at once. Unlike the dinosaurs, you get to decide if you want to evolve
    now, later, or not at all. You can decide on which side of history you want to
    be.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We didn''t start the fire. It was always burning. Since the world''s been turning.
    Jeffrey Zeldman''s *"To Hell With Bad Browsers"* article sent shockwaves through
    the web development world when it was published *in 2001*. In it, Zeldman, now
    widely considered the godfather of the web standards movement, lit a fire under
    a generation of web designers and developers to use CSS for the web presentation
    layer and leave behind broken, legacy browsers. Read this seminal manifesto at:
    [http://alistapart.com/articles/tohell](http://alistapart.com/articles/tohell).'
  prefs: []
  type: TYPE_NORMAL
- en: Styling a nav block element
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When creating the HTML5 spec, analysis was done and determined that one of the
    most used elements was `<div id="nav">` or `<div id="navigation">`. With HTML5
    there's no more need for that. Instead we have the semantically rich `<nav>`.
    Now let's get to work styling it.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's examine how the [http://css3maker.com](http://css3maker.com) site uses
    the new semantically rich `<nav>` element.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready<nav> elementabout](img/1048_03_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If we view the source of the homepage, we''ll find this snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Notice that HTML markup is quite straightforward so far. The team at [http://css3maker.com](http://css3maker.com)
    created a page wrapper and then used the new `<nav>` element to contain the unordered
    list that has all the typical navigation elements. Simple, right? Next let's turn
    our attention to how they styled it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The new `<nav>` element becomes not only a container for our unordered list,
    but it also provides additional meaning to the web browser as well as accessibility
    enhancements. By floating the `<nav>` element and displaying our unordered list
    without a list style, this allows us to display our navigation bar horizontally.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We also saw the use of the new CSS3 `transition` property. Simply put, this
    is a new browser rollover effect that was previously only possible with Flash
    or JavaScript. Now, CSS can do the job of changing an element's appearance when
    the mouse moves over it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since the `transition` property only has experimental support among browser
    makers, you''ll see vendor-specific prefixes that are prefaced by a single dash,
    such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '`-webkit` (for Safari and Chrome)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-moz` (for Firefox)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-o` (for Opera)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, Internet Explorer has its own vendor prefix, which is `-ms`. Inexplicably,
    Chrome can handle both the `-webkit` prefix as well as its own `-chrome` prefix.
  prefs: []
  type: TYPE_NORMAL
- en: Those dashes simply indicate support is a work in progress by the browser manufacturers.
    Remember that HTML5 — and CSS3 — are evolving specifications. We can start using
    elements of them now, but full support isn't there yet. It's like we're cooking
    for the future.
  prefs: []
  type: TYPE_NORMAL
- en: Browser support
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Web browsers that support the new `<nav>` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Browser support](img/1048_03_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Text-shadow is cool
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the previous code sample, you'll also notice the clever use of the new CSS3
    `text-shadow` property that we covered in depth in the previous chapter.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The [http://cSS3maker.com](http://cSS3maker.com) site is a terrific resource
    for any CSS3 developer needing browser-specific prefixes for these new CSS properties:'
  prefs: []
  type: TYPE_NORMAL
- en: border-radius
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gradient
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CSS transform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CSS animation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CSS transition
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RGBA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: text shadow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: box shadow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: text rotation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '@font-face'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using background-size to control background appearance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using CSS3, we now have a way to specify the size of our background images.
    We can specify this size in pixels, width and height, or in percentages. When
    you specify a size as a percentage, the size is relative to the width or height
    of the area that we have designated using background-origin.
  prefs: []
  type: TYPE_NORMAL
- en: '![Using background-size to control background appearance](img/1048_03_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's take a look at a real-world example at [http://miessociety.org](http://miessociety.org),
    a gorgeous website by Simple Honest Work, an agency created by designer Scott
    Thomas and dedicated to preserving the legacy of architect Ludwig Mies van der
    Rohe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If we view the source of the stylesheet, we'll see the authors created one rule
    for the `body` and then specified that any background image used would cover the
    entire `body`.
  prefs: []
  type: TYPE_NORMAL
- en: The authors also specified a background image for each page by attaching an
    `ID` to each `body` element.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here we see how the creators used some simple styling, including the new `background-size`
    property, to stretch a large background image all the way across the page, no
    matter your monitor size or resolution.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The new `background-size` element is typically specified in pixels, width and
    height, or in percentages. In the Mies van der Rohe Society website example, we
    see the author has used the term "cover", which enables the background image to
    stretch to "cover" the entire canvas. Clever.
  prefs: []
  type: TYPE_NORMAL
- en: Browser support
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Web browsers that support the new `background-size` property:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Browser supportbackground-size propertyabout](img/1048_03_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Acceptable in IE
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: So what happens when we view a site using background-size in an unsupported
    browser? Here we can see how versions of Internet Explorer prior to 10 fail to
    stretch the background image and instead simply fills the rest of the canvas with
    black. This is a perfect example of not looking the same in every browser yet
    still providing a completely satisfactory user experience. No website viewer —
    even one using IE6 — could legitimately complain that they weren't experiencing
    the site as the author intended.
  prefs: []
  type: TYPE_NORMAL
- en: '![Acceptable in IE](img/1048_03_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Simple Scott simply rocks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section we used the real-world example of the Mies van der Rohe Society
    website using the new CSS3 `background-size` property and noted how the site authors
    cleverly accommodated for the use of older browsers.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [http://html5rocks.com](http://html5rocks.com) site features interactive
    presentations, a code playground, samples, and step-by-step tutorials to develop
    and hone your new technical skills. The fun part is the site is an open source
    project you can contribute to. Learn it, share it, pay it forward!
  prefs: []
  type: TYPE_NORMAL
- en: Adding rounded corners with border-radius
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Border-radius may very well become the most commonly used new attribute of CSS3\.
    With so many buttons and rounded corners on containing elements used throughout
    the web, `border-radius` makes it easy to accomplish via CSS rather than rely
    on images. Here's how to do it.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's take a look at [http://devinsheaven.com](http://devinsheaven.com), featuring
    the work and writings of iPhone application designer and developer Devin Ross.
    Specifically, we're going to examine how Devin styled his search field.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting readyborder-radiusabout](img/1048_03_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Viewing the source of Devin''s code, we see simple, straightforward form markup
    with all the typical elements: a wrapper, a form, a label, and two inputs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'But it''s what Devin does next in his stylesheet that accomplishes the rounded
    corners in modern browsers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Devin specifies a four pixel `border-radius` to the search-form `ID`, which
    rounds all four of its corners by the same amount. It's also possible to specify
    the `border-radius` of each corner separately.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Interestingly, the Opera browser will support the new CSS3 `border-radius` attribute
    without a browser-specific prefix. Good job, Opera! Thanks!
  prefs: []
  type: TYPE_NORMAL
- en: Browser support
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Web browsers that support the new `border-radius` style:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Browser support](img/1048_03_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Acceptable in IE
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: So what happens when viewing Devin's well-designed site in an unsupported browser?
    Internet Explorer 8 and earlier simply ignore the `border-radius` attribute and
    squares the corners. Once again, this is perfectly acceptable, but will often
    require you educating your clients why pixel perfection is not always a realistic
    goal.
  prefs: []
  type: TYPE_NORMAL
- en: Devin's Heaven website viewed in Internet Explorer 8\. Note square search form
    border.
  prefs: []
  type: TYPE_NORMAL
- en: '![Acceptable in IE](img/1048_03_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Devin's Heaven goes to 11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section we demonstrated how [http://devinsheaven.com](http://devinsheaven.com)
    uses the new CSS3 `border-radius` attribute to round the corners of a search field
    subtly. We also looked at the author's use of browser-specific prefixes and how
    the author chose to deal with legacy browsers like Internet Explorer 8 and before.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For lots more great uses of the new CSS3 `border-radius` attribute, visit [http://houseofbuttons.tumblr.com](http://houseofbuttons.tumblr.com).
    It includes lots of design and development inspiration.
  prefs: []
  type: TYPE_NORMAL
- en: Including multiple background images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[http://benthebodyguard.com](http://benthebodyguard.com) had the Internet all
    abuzz when it debuted in December, 2010\. The authors used a single-page layout
    to tell an interactive story of a fictional French bodyguard named Ben. As viewed
    scrolled down the long page, multiple backgrounds help tell the story of the then-soon-to-be-released
    iPhone application.'
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's check out [http://benthebodyguard.com](http://benthebodyguard.com) and
    scroll through the animation.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1048_03_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's focus on a snippet of the source code and see how the site authors utilized
    multiple backgrounds.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Nothing out of the ordinary so far, except for several empty `divs`. Those are
    containers for the multiple background images the authors used to storytell. Your
    containers can include text, images, video, and more.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By specifying background images for each of those `divs`, the site author has
    used multiple PNG file background images to create a seamlessly interactive online
    experience.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Friends of Mighty created a series of mini sites to demonstrate some of the
    new typographic possibilities we talked about in the last chapter. Frank Chimero
    created a one-page site at [http://lostworldsfairs.com/atlantis](http://lostworldsfairs.com/atlantis)
    that works in much the same way the `http://benthebodyguard.com` site works with
    multiple backgrounds. As you scroll through the long page, your avatar descends
    to the lost city of Atlantis.
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/1048_03_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Where's the content?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Viewing the source of the Atlantis Lost Worlds Fair mini site, we see a similar
    approach with multiple empty `divs`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Let's be Frank
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Chimero uses a similar approach to the [http://benthebodyguard.com](http://benthebodyguard.com)
    site by specifying background images for each of those otherwise empty `divs`
    to create a seamless experience.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are so many new things in HTML5 that it's like the best technology Christmas
    ever. Keep track of which elements your browsers support by visiting [http://html5test.com](http://html5test.com).
    Visiting the site via a host of browsers yields sobering results.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a box shadow to images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Previously, a visual effect like a shadow under or around an image was only
    possible by using a second image for the shadow or making the shadow itself part
    of the image. The problem was that if you ever wanted to adjust the shadow, you
    had to recut it. Let's look at a modern, smart way to do it using CSS3.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Check out the attractive and subtle shadow around the visual elements at [http://thebox.maxvoltar.com](http://thebox.maxvoltar.com).
    Author Tim Van Damme has applied the new CSS3 `box-shadow` attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1048_03_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s examine the styles to see how Tim achieved that beautifully simple effect:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: In addition to other styles, we can clearly see the `box-shadow` attribute specifying
    a color and spread distance for the shadow.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The syntax for the new CSS3 `box-shadow` attribute is the same as the `text-shadow`
    attribute. That is, the site author applied a shadow around the photo that is
    two pixels to the right and ten pixels on the bottom at 50% opacity.
  prefs: []
  type: TYPE_NORMAL
- en: Browser support
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Web browsers that support the new `box-shadow` style.
  prefs: []
  type: TYPE_NORMAL
- en: '![Browser support](img/1048_03_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Ignorance is bliss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Browsers that don't support the new CSS `box-shadow` attribute simply ignore
    the rule and won't display the shadow. The appearance is slightly altered but
    the user experience is not. No harm, no foul.
  prefs: []
  type: TYPE_NORMAL
- en: Box-shadow for The Box
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, we demonstrated how author Tim Van Damme is using the new CSS3
    `box-shadow` attribute to create a subtle shadow effect around his interview website.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When creating stylesheets for your own projects, you have total control to create
    one CSS to rule them all, or create separate bespoke experiences for mobile and/or
    printer friendly pages. But what happens when you don't have that full control?
    Then it's good to know we have tools like [http://printfriendly.com](http://printfriendly.com)
    to do it for us.
  prefs: []
  type: TYPE_NORMAL
- en: Styling for Internet Explorer browsers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It should be obvious by now the author is a strong advocate of serving optimal
    CSS3 experiences to modern browsers and letting old versions of IE do what it
    wants. If an element is missing a rounded corner or shadow in an old browser,
    this author certainly doesn't care. But the fact is your clients might. Let's
    open a can of worms and talk about how to accommodate dead browsers.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We're going to look at a series of specific methods to make IE behave when using
    new CSS3 attributes like `border-radius, box-shadow`, and `text-shadow`.
  prefs: []
  type: TYPE_NORMAL
- en: Border-radius
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It''s possible to achieve rounded corners in old versions of IE. Let''s visit
    [http://htmlremix.com/css/curved-corner-border-radius-cross-browser](http://htmlremix.com/css/curved-corner-border-radius-cross-browser)
    to find out how. There we''ll learn how to include an `.htc` behavior in our stylesheet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Note that `.htc` file is code bloat, and the behavior will cause your CSS to
    not validate.
  prefs: []
  type: TYPE_NORMAL
- en: Box-shadow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can force IE to display `box-shadows` by using a proprietary filter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Unfortunately you'll have to fiddle with that filter to achieve the direction
    and darkness of the shadow. Note this filter is not as powerful as the new CSS3
    `box-shadow` attribute.
  prefs: []
  type: TYPE_NORMAL
- en: Text-shadow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It seems the only way to make `text-shadow` work in versions of Internet Explorer
    before version 9 is to use a jQuery plugin like the one at [http://scriptandstyle.com/submissions/text-shadow-in-ie-with-jquery-2](http://scriptandstyle.com/submissions/text-shadow-in-ie-with-jquery-2)
    to achieve the look through JavaScript. Note that forcing JavaScript to do CSS'
    job is never a good approach, and this technique only leads to code bloat.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While several CSS3-like effects are possible in legacy versions of IE, none
    are recommended. Each one takes additional development type and can have an effect
    on browser performance. Use at your — and your clients — own risk.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Kyle Weems has created a hilariously terrific weekly comic strip lampooning
    the goings on in the web standards world at [http://cssquirrel.com](http://cssquirrel.com).
    HTML5, CSS3, Twitter, accessibility, and the major voices that matter in those
    worlds are ripe for Kyle's often twisted sense of humor.
  prefs: []
  type: TYPE_NORMAL
- en: '![See also](img/1048_03_15.jpg)'
  prefs: []
  type: TYPE_IMG
