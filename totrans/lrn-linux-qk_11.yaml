- en: Let&#x27;s Play Find and Seek
  prefs: []
  type: TYPE_NORMAL
- en: We all forget where we put our stuff sometimes; I always forget where I keep
    my wallet and where I save my files. I am pretty sure that you also forget where
    you keep your files, and so in this chapter, you will learn two different ways
    you can use to search and locate files.
  prefs: []
  type: TYPE_NORMAL
- en: The locate command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you know the name of your file but you are unsure of the file’s location,
    you can use the `locate` command to get the file’s path.
  prefs: []
  type: TYPE_NORMAL
- en: The `locate` command searches for a file location in a prebuilt file database,
    and thus it’s crucial to update the file database before using the `locate` command.
    If you don’t update the database, the `locate` command may fail to retrieve the
    location of newly created files.
  prefs: []
  type: TYPE_NORMAL
- en: Updating the file database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To update the file database, you have to run the `updatedb` command as the
    root user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The `updatedb` command will not display any output.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s say we forgot the location of the file `facts.txt`, and we don’t
    remember where it is; in this case, you can run the `locate` command followed
    by the filename:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: BOOM! It displayed the location of the file `facts.txt`.
  prefs: []
  type: TYPE_NORMAL
- en: Now I will show you what will happen if you search for a newly created file
    without updating the file database.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create an empty file named `ghost.txt` in the `/home` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now try searching for the file `ghost.txt`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The `locate` command couldn’t find it! Why is that?........ That’s because
    you created a new file, and the file database doesn’t know about it yet. You have
    to run the `updatedb` command first to update the file database:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: YES! After you update the file database, the `locate` command can now get the
    location of the file `ghost.txt`.
  prefs: []
  type: TYPE_NORMAL
- en: You can also use wildcards with the `locate` command. For example, `locate *.log` will
    search for all the log files in your system. You can also use the `-r` option
    to enable `regex` in your search.
  prefs: []
  type: TYPE_NORMAL
- en: The find command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `find` command is a much more powerful command you can use to search for
    files in Linux. Unlike the `locate` command, the `find` command runs in real time,
    so you don’t need to update any file database. The general syntax of the `find`
    command is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The `find` command will search under each starting-point (directory) you specify.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, to search for all the `.txt` files under your `/home` directory,
    you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The `-name` option searches for filename; there are many other options you can
    use with the `find` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `-type` option searches for file type; for example, to search for all the
    directories in `/home/elliot/dir1`, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice it only listed the directories in `/home/elliot/dir1`. To list regular
    files instead, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'To search for both regular files and directories, you can use a comma:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Now as the root user create the two files `large.txt` and `LARGE.TXT` in `/root`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Let’s say you forgot where these two files are located; in this case, you can
    use `/` as your starting-point:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice it only listed the location of `large.txt`. What if you wanted the other
    file `LARGE.TXT` as well? In this case, You can use the `-iname` option, which
    makes the search case insensitive:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Let’s append the line "12345" to the file `large.txt`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice the size of the files `large.txt` and `LARGE.txt`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: The file `LARGE.TXT` is zero bytes in size because it’s empty. You can use the
    `-size` option to search for files based on their size.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, to search for empty files under the `/root` directory, you can
    run the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see, it listed `LARGE.TXT` as it has zero characters; `0c` means
    zero characters (or bytes). Now, if you want to search for files of size `6` bytes
    under `/root`, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, it listed the file `large.txt`.
  prefs: []
  type: TYPE_NORMAL
- en: You can even use size ranges in your search; `Table 16` shows you some examples
    of using size ranges with the `find` command.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Command** | **What it does** |'
  prefs: []
  type: TYPE_TB
- en: '| `find / -size +100M` | Will search for all the files that are bigger than
    `100` MB. |'
  prefs: []
  type: TYPE_TB
- en: '| `find / -size -5c` | Will search for all the files that are smaller than
    `5` bytes. |'
  prefs: []
  type: TYPE_TB
- en: '| `find / -size +50M -size -100M` | Will search for all the files that are
    bigger than `50` MB, but smaller than `100` MB. |'
  prefs: []
  type: TYPE_TB
- en: '| `find / -size +1G` | Will search for all the files that are bigger than `1`
    GB. |'
  prefs: []
  type: TYPE_TB
- en: 'Table 16: Using size range'
  prefs: []
  type: TYPE_NORMAL
- en: The `-mtime` and `-atime` options search for files based on modification and
    access times. The `-exec` is also a useful command option that allows you to run
    another command on the `find` results.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, you can do a long-listing on all the empty files in `/root` by
    running the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: A lot of people forget to include `{} +` when using the `-exec` option; `{}
    +` references all the files that are found in the find results.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use any command you want with the `-exec` option. For example, instead of
    long-listing, you may want to remove the files you get from the find results.
    In this case, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Now the file `LARGE.TXT` is removed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: I highly recommend that you read the find `man` pages to explore the numerous
    other options that can be used.
  prefs: []
  type: TYPE_NORMAL
- en: Knowledge check
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the following exercises, open up your Terminal and try to solve the following
    tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: Use the `locate` command to find the path of the file `boot.log`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find all the files that are bigger than `50` MB in size.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find all the files that are between `70` MB and `100` MB in size.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find all the files that are owned by the user `smurf`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find all the files that are owned by the group `developers`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
