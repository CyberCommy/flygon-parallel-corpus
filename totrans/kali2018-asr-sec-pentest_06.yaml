- en: Vulnerability Scanning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vulnerability mapping is the process of identifying and analyzing the critical
    security flaws in a target environment. This is sometimes also referred to as
    a vulnerability assessment. It is one of the key areas of a vulnerability management
    program, through which the security controls of an IT infrastructure can be analyzed
    against known vulnerabilities. Once the operations of information gathering, discovery,
    and enumeration are complete, it is time to investigate the vulnerabilities in
    the target infrastructure that could lead to compromising the target and violating
    the confidentiality, integrity, and availability of a business system.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will discuss two common types of vulnerabilities, present
    various standards for the classification of vulnerabilities, and explain some
    of the well-known vulnerability assessment tools provided under the Kali Linux
    operating system. This chapter explores the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The concepts of two generic types of vulnerabilities: local and remote.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The vulnerability taxonomy that points to the industry standard, which can be
    used to classify any vulnerability according to its unifying commonality pattern.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A number of security tools that can assist us in finding and analyzing the security
    vulnerabilities present in a target environment. The tools presented are categorized
    according to their basic function in a security assessment process. These include
    Nessus, Cisco, fuzzing tools, SMB, SNMP, and web application analysis tools.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that the manual and automated vulnerability assessment procedures should
    be treated equally when handling any type of penetration testing assignment, whether
    internal or external. Relying strictly on automation may sometimes produce false
    positives and false negatives. The degree of the auditor's knowledge of technology-relevant
    assessment tools may be a determining factor when performing penetration tests.
    Both the tools used and the skill of the tester should be continually updated
    to ensure success. Moreover, it is necessary to mention that automated vulnerability
    assessment is not the final solution; there are situations where automated tools
    fail to identify logic errors, undiscovered vulnerabilities, unpublished software
    vulnerabilities, and the human variable that impacts security.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, it is recommended that an integrated approach be used that leverages
    both automated and manual vulnerability assessment methods. This will heighten
    the probability of successful penetration tests, and provide the best possible
    information to correct vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A laptop or desktop with a minimum of 6 GB RAM, quad-core CPU, and 500 GB HDD
    space. For the operating system, we will be using Kali Linux 2018.2 or 2018.3
    (as a virtual machine, or installed on the HDD, SD card, or USB flash drive).
  prefs: []
  type: TYPE_NORMAL
- en: Types of vulnerabilities
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are three main classes of vulnerability by which the distinction for
    the types of flaws, both local and remote, can be made. These classes are generally
    divided into the categories of design, implementation, and operational vulnerabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Design vulnerabilities**: These are discovered owing to the weaknesses found
    in the software specifications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Implementation vulnerabilities**: These are technical security glitches found
    in the code of a system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operational vulnerabilities**: These are vulnerabilities that may arise due
    to the improper configuration and deployment of a system in a specific environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Based on these three classes, we have two generic types of vulnerabilities,
    local and remote, which can appear in any class of the vulnerabilities explained.
  prefs: []
  type: TYPE_NORMAL
- en: Local vulnerability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A condition where the attacker requires local access in order to trigger the
    vulnerability by executing a piece of code is known as a local vulnerability.
    By taking advantage of this type of vulnerability, an attacker can increase their
    access privileges to gain unrestricted access to the computer.
  prefs: []
  type: TYPE_NORMAL
- en: Let's take an example in which Bob has local access to a system running MS Windows
    Server 2008 (32-bit, x86 platform). His access has been restricted by the administrator
    through the implementation of a security policy, which will not allow him to run
    the specific application. Under extreme conditions, he found out that by using
    a malicious piece of code, he could gain system-level or kernel-level access to
    the computer. By exploiting a well known vulnerability (for example, CVE-2013-0232,
    GP Trap Handler nt!KiTrap0D), he gained escalated privileges that allowed him
    to perform all the administrative tasks and gain unrestricted access to the application.
    This shows us clearly how the malicious adversary exploited the vulnerability to
    gain unauthorized access to the system.
  prefs: []
  type: TYPE_NORMAL
- en: More information about CVE-2013-0232 MS Windows privilege escalation vulnerability
    can be found at [http://www.exploit-db.com/exploits/11199/](http://www.exploit-db.com/exploits/11199/).
  prefs: []
  type: TYPE_NORMAL
- en: Remote vulnerability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Remote vulnerability is a condition where the attacker has no prior access,
    but the vulnerability can still be exploited by triggering the malicious piece
    of code over the network. This type of vulnerability allows an attacker to gain
    remote access to a computer without facing any physical or local barriers.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, Bob and Alice are individually connected to the internet. Both
    of them have different IP addresses, and are geographically dispersed in two different
    regions. Let's assume that Alice's computer is running on a Windows XP operating
    system and holds secret biotech information. We also assume that Bob already knows
    the operating system and IP address of Alice's machine. Bob now looks for a solution
    that can allow him to gain remote access to her computer. In time, he finds out
    that the MS08-067 Windows Server Service's vulnerability can easily be exploited
    remotely against a Windows XP machine.
  prefs: []
  type: TYPE_NORMAL
- en: He then triggers the exploit against Alice's computer and gains full access
    to it.
  prefs: []
  type: TYPE_NORMAL
- en: More information about MS08-067 MS Windows Server Service vulnerability can
    be found at [http://www.exploit-db.com/exploits/6841/](http://www.exploit-db.com/exploits/6841/).
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability taxonomy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'With the increase in the available number of technologies over the past few
    years, there have been various attempts to introduce the best taxonomy that could
    categorize all of the common sets of vulnerabilities. However, no single taxonomy
    has been produced to represent all of the common coding mistakes that may affect
    the system''s security. This is owing to the fact that a single vulnerability
    might fall into more than one category or class. Additionally, every system platform
    has its own base for connectivity, complexity, and extensibility, with which it
    interacts with its environment. Thus, the taxonomy standards presented in the
    following table will help you identify most of the common security glitches whenever
    possible. Note that most of these taxonomies have already been implemented in
    a number of security assessment tools to investigate software security problems
    in real time:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Security taxonomy** | **Resource link** |'
  prefs: []
  type: TYPE_TB
- en: '| Seven pernicious kingdoms | [http://www.cigital.com/papers/download/bsi11-taxonomy.pdf](http://www.cigital.com/papers/download/bsi11-taxonomy.pdf)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Common weakness enumeration | [http://cwe.mitre.org/data/index.html](http://cwe.mitre.org/data/index.html)
    |'
  prefs: []
  type: TYPE_TB
- en: '| OWASP Top 10 | [http://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project](http://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Klocwork | [http://www.klocwork.com/products/documentation/Insight-9.1/Taxonomy](http://www.klocwork.com/products/documentation/Insight-9.1/Taxonomy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| WASC threat classification | [http://projects.webappsec.org/Threat-Classification](http://projects.webappsec.org/Threat-Classification)
    |'
  prefs: []
  type: TYPE_TB
- en: The primary function of each of these taxonomies is to organize sets of security
    vulnerabilities that can be used by security practitioners and developers to identify
    the specific errors that may have an impact on the system's security. Thus, no
    single taxonomy should be considered complete and accurate.
  prefs: []
  type: TYPE_NORMAL
- en: Automated vulnerability scanning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The purist penetration testers will often comment that using an automated vulnerability
    scanner is cheating, but in some cases, such as penetration testing with a limited
    amount of time available, vulnerability scanners are critical to gaining a great
    deal of information about a target network in a short amount of time.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability scanning with Nessus 7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tenable's Nessus is a very popular vulnerability assessment tool and has been
    around for almost two decades. Nessus can accessed with an annual subscription;
    however, the good folks at Tenable have made Nessus Professional available as
    a 7-day trial for those that may wish to try it.
  prefs: []
  type: TYPE_NORMAL
- en: Before we install Nessus, you may wish to take note of the version of Kali Linux
    that you are running, to ensure that you download the appropriate version of Nessus.
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, simply type `uname –a` in a Terminal, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/87959570-cf53-44da-bb33-230d2f98bee6.png)'
  prefs: []
  type: TYPE_IMG
- en: In this screenshot, we can see that I am using the 64-bit version (amd64) of
    Kali Linux based on Debian. As such, I will need to download the 64-bit version
    for Debian builds.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Nessus vulnerability scanner
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To install Nessus in Kali Linux, open a browser and navigate to the Nessus evaluation
    page at [https://www.tenable.com/try](https://www.tenable.com/try). The evaluation
    version comes with all the features of the full version, except for a 16-IP limitation
    scan.
  prefs: []
  type: TYPE_NORMAL
- en: You will be required to register with Tenable so that an evaluation code can
    be sent to your email.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have received the email with your evaluation code, you can then download
    the appropriate version of Nessus in Kali Linux, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4d12d21d-1c84-4b8e-8cd9-261499746044.png)'
  prefs: []
  type: TYPE_IMG
- en: Select the version of Nessus to install, click on Accept to agree with the Nessus
    usage terms, and then save the Nessus download by clicking on the Save File option
    when prompted. This will save the file to your Downloads folder in Kali Linux.
    For this instance, I've selected the 64-bit version of Nessus (`Nessus-7.1.3-debian6_amd64.deb`).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the download has completed, open a new Terminal and change to the Downloads
    directory by typing `cd Downloads`. Type `ls` to view the contents of the Downloads
    directory. Doing this will also be useful as we can copy the name of the Nessus
    download file and paste it in the following command. We then install Nessus by
    typing `dpkg –i Nessus-7.1.3-debian6_amd64.deb`, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a1a236f1-5538-4e7d-8e73-d4c32a2804e1.png)'
  prefs: []
  type: TYPE_IMG
- en: If newer versions of Nessus are available, copy the name of your specific download
    file and version when executing the `dpkg -i` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'While still within the Downloads folder, start the Nessus service by typing
    `service nessusd start`. Enter your password for Kali Linux when prompted, as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/aa88c09f-15ba-48af-badf-cf5810947fb5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To use Nessus, open your browser and type the `https://localhost:8834` URL
    in the address bar and press *Enter*. When the insecure warning banner is displayed,
    click on the Advanced button, then click on Add Exception, then lastly click on
    Confirm Security Exception, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1ccb4d49-4cf9-44b8-aad2-4abea278c9bc.png)'
  prefs: []
  type: TYPE_IMG
- en: Follow steps 1-3 as prompted by first creating an account, specifying a username
    and account, and then clicking on Continue.
  prefs: []
  type: TYPE_NORMAL
- en: 'In step 2, leave the default Scanner Type option set to Home, Professional,
    or Manager, and paste the activation code you received via email into the Activation
    Code field. Click on Continue to proceed. If all is well, Nessus will begin initializing
    by downloading and compiling the required plugins, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6225136e-f27c-415d-97dc-805811b2bcff.png)'
  prefs: []
  type: TYPE_IMG
- en: This may take several minutes depending on your internet connection speed. In
    the meantime, feel free to browse Packt Publishing's many titles on penetration
    testing and Kali Linux at [www.packtpub.com](http://www.packtpub.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once all updates have been completed, the Nessus interface will be loaded.
    Click on the New Scan button in the top-right corner to view all scan types available,
    as seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0c72f543-31e0-4bcd-9920-4d9590f09739.png)'
  prefs: []
  type: TYPE_IMG
- en: 'There are a variety of scan templates to choose from, apart from a few that
    are only available with a paid subscription. In addition to performing host discovery
    and advanced scans, Nessus can perform many types of advanced vulnerability scans,
    including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Cloud infrastructure scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Local and remote bad shell detection scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Internal PCI network scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linux and Windows malware scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spectre and Meltdown scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wannacry ransomware scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web vulnerability scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of these are shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/73d7bbe9-94d9-4af9-a8f6-b3eb2b1468e7.png)'
  prefs: []
  type: TYPE_IMG
- en: For this assessment, I'll be using a vulnerable Linux web server for the purpose
    of demonstrating vulnerability disclosure. As mentioned in [Chapter 2](573e3579-5017-4c33-acd8-01e866ed66d8.xhtml),
    *Setting Up Your Test Lab, *you can choose to set up Metasploitable 2, Metasploitable
    3, Damn Vulnerable Linux, or even BadStore.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Advanced Scan template in the scanner window and populate the
    fields in the BASIC section. In the Targets field, specify the host or range of
    hosts to be scanned using the Advanced Scan template, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/994d1e37-16ee-45b9-a34d-59dd42908a69.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Explore the other sections of the left-hand column, as there are a number of
    different settings. Each of these allows you to customize the scan to fit your
    specific requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Discovery: Nessus utilizes a number of different methods for discovering live
    hosts. Here you can set specific parameters for host discovery.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Assessment: This allows you to set the type and depth of scan.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Reporting: When it is time to prepare a penetration testing report, having
    detailed information about the vulnerability scan is important. This feature allows
    you to set the reporting parameters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Advanced: The advanced settings allow you to change the number of hosts scanned
    at once, and other timing parameters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you have configured your scan, you may either select Save or Launch. You
    will now see your scan listed under My Scans.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Play icon to the right of your given scan name. This will run
    the scan. If you click on the scan name while it is running, you will see the
    hosts and general vulnerability information, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/175fc56d-726c-4274-b701-383febd8f80e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on the host brings you to a more detailed list of vulnerabilities
    discovered. The vulnerabilities are color-coded as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Red – critical
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Orange – high
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yellow – medium
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Green – low
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blue – informational
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As seen in the following screenshot, the scan results show a total of 70 vulnerabilities
    discovered, of which 6 are critical and 17 are high, meaning that this machine
    is highly vulnerable:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8bee9fc3-d629-4a2e-85df-91afc34c0bd7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on the colored vulnerability categories displays the vulnerabilities
    in order of most vulnerable (that is, critical), to least vulnerable (informational):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/45e21df9-caa0-4b0d-bb81-46ed80517ef0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on a vulnerability gives the tester more detailed information about
    the vulnerability, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5d3837f8-4a08-4b14-80af-ca6d54fb23cd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This information includes not only information about the vulnerability, but
    also information on whether there is an exploit available. This allows the penetration
    tester the ability to craft additional attacks against these vulnerabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3ecbc0d7-f578-4221-83fa-5ad4f3599232.png)'
  prefs: []
  type: TYPE_IMG
- en: Nessus is a powerful tool to use in any penetration testing engagement. It provides
    a great deal of information and functionality that could not be addressed in this
    section. It is recommended that you spend some time getting to understand the
    features available and how to use them. In addition, Tenable has made the home
    version free of charge for you to test. In the event that you have external IPs,
    or are using Nessus for a client, you will have to use the paid version.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability scanning with OpenVAS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Open Vulnerability Assessment System** (**OpenVAS**) is an open source vulnerability
    scanning framework. OpenVAS is simple to install and has a user-friendly interface
    for performing vulnerability assessments. According to the OpenVAS website ([http://www.openvas.org/about.html](http://www.openvas.org/about.html)),
    there are over 50,000 **Network Vulnerability Tests** (**NVTs**) within the framework,
    which is a part of the Greenbone Networks commercial vulnerability management
    framework.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install OpenVAS, open a new Terminal and type `apt-get install openvas`,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/89942236-5f3f-46cb-ac99-2b7a1b9ebe35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once OpenVAS has been successfully installed, type `openvas-setup` into the
    Terminal to start the setup and configuration. This process may take quite some
    time, depending on your download speeds:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c46cdddc-63bc-4cf9-bfc9-f07757d54d37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'At the end of the setup and configuration process, OpenVAS will generate a
    password key that will be required when starting OpenVAS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/49b48b7d-3ea5-43a2-9f41-bba548476d99.jpg)'
  prefs: []
  type: TYPE_IMG
- en: To start the OpenVAS service, type `openvas-start`, then connect to the web
    interface by typing `https://127.0.0.1:9392` or `https://localhost:9392` in a
    browser window.
  prefs: []
  type: TYPE_NORMAL
- en: When using OpenVAS again, simply open a Terminal and type `openvas-start`, as
    there will be no need to run the setup again.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will also have to click on Advanced, then Add Exception, and then lastly Confirm
    Security Exception after entering the previous URL, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2df559de-a9e0-4247-a86f-c94cefcc913c.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When prompted, log in with the username `admin` and the password generated
    in the setup process. Be sure to keep this login stored securely, as you will
    be required to log in whenever using OpenVAS, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/efa7b472-8fc3-489c-bbd6-73bd5660a301.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To run a scan, click on Scans and then Tasks. An information box will open,
    prompting you to position the mouse over the Task Wizard, the purple icon at the
    top-left of the screen, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4d309c1d-e054-4d43-8cac-8329c5ad5181.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on Advanced Task Wizard. Enter the relevant information into the given
    fields. Note that the Scan Config field has several scan types to choose from,
    including Discovery, Full and Fast, Full and fast ultimate, and Full and very
    deep ultimate (the most time- and resource-consuming option). The Start time option
    allows the penetration tester to schedule the scan. This can be quite useful,
    as scans may be disruptive on the network, so you may wish to run scans after
    working hours or on weekends, if necessary:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/280b4af1-5aa0-498a-abdf-3c4fdbff4ea1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once all relevant fields have been completed, scroll down and click on Create.
    This starts the scan and displays a summary of the scan details and status, as
    seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/aed4ce65-4537-43ec-b0fd-bb0ba2cde7a8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To view more details of the task, click on the task name within the Name field:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/988f92d0-43c4-403d-a705-55384d3c9ec8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When the scan is complete, click on Done. This generates a report listing the
    vulnerabilities found, along with a severity rating for each one:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b76dbf59-51ae-45b5-8cae-8bb9ad2e17fd.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on each of the vulnerabilities listed shows more information, including
    a Summary, Impact, Solution, Affected Software/OS, and other insights, as shown
    in more detail in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/217c2fd1-21e7-41f4-b0b5-153f4176e253.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Linux vulnerability scanning with Lynis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Developed by Cisofy ([www.cisofy.com](http://www.cisofy.com)), Lynis is a command-line
    security auditing tool available within Kali Linux. Lynis is free to use, but
    an enterprise version also available. Lynis can be used to perform automated security
    audit assessments and vulnerability scans on various versions of Linux, macOS
    X, and Unix-based operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: What makes Lynis stand out is its focus on performing various HIPAA, PCIDSS,
    SOX, and GLBA compliance audits, which hold much value in an enterprise that has
    adopted various standards for compliance. Lynis can be downloaded and installed
    on standalone systems, thereby eliminating much of the traffic generated by remote
    auditing and vulnerability assessment tools, although there is the option to perform
    remote assessments.
  prefs: []
  type: TYPE_NORMAL
- en: Lynis is part of the Kali Linux suite, but can can also be cloned from GitHub
    ([https://github.com/CISOfy/lynis](https://github.com/CISOfy/lynis)) or downloaded
    directly from the official website ([https://cisofy.com/documentation/lynis/get-started/#installation](https://cisofy.com/documentation/lynis/get-started/#installation)).
  prefs: []
  type: TYPE_NORMAL
- en: 'To run Lynis in Kali, you can do so via the main menu by clicking on Applications,
    thenVulnerability Analysis, then Lynis, or by typing `lynis` in the Terminal.
    This command displays the installed version of Lynis (in this case, 2.6.2) and
    initializes the program. Helpful command options are also displayed, as seen in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/32b1daa4-4e7b-4c26-af01-cdef0c835606.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You may also type **`lynis show commands`** at any time to view the available
    commands within Lynis:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9ff880ee-5c7e-46b0-a9a4-cfd9cebbcfac.png)'
  prefs: []
  type: TYPE_IMG
- en: 'With Lynis being a fully automated audit assessment tool, there are minimal
    commands to use. To audit your entire Kali Linux machine, simply type `lynis audit
    system`. The timeframe for this assessment depends on the specifications of the
    Kali Linux machine running the assessment, but usually ranges from 15 to 30 minutes.
    The audit is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/868dc2e4-59a5-42d4-92de-611d332ab931.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Some of the testing and audits performed against the system include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Debian tests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boot and services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kernel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Memory and processes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Users, groups, and authentication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shells
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filesystem
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: USB devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Networking and firewalls
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ports and printers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kernel hardening
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/5bdfc838-a44e-4877-a4a8-595836b3085f.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The following screenshot shows a snippet of the Lynis audit results, with 4
    warnings and 40 suggestions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9cdd1abf-63cf-4c0b-9b26-19181ab34a82.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Scrolling to the end of the audit assessment, we can find the summarized details
    of the Lynis audit as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d84ee4f1-1d92-4389-9ff2-93b6e3adf2c1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Vulnerability scanning and enumeration using SPARTA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SPARTA is a GUI network infrastructure penetration testing tool, authored by
    SECFORCE's Antonio Quina and Leonidas Stavliotis, and is available within Kali
    Linux. SPARTA automates the scanning, enumeration, and vulnerability assessment
    processes within one tool. Apart from its scanning and enumeration capabilities,
    SPARTA also has a built-in brute-force tool for cracking passwords.
  prefs: []
  type: TYPE_NORMAL
- en: The latest versions of SPARTA can also be downloaded from GitHub and cloned
    to your local machine using the `git clone https://github.com/secforce/sparta.git`
    command.
  prefs: []
  type: TYPE_NORMAL
- en: To start SPARTA within Kali Linux 2018, click on Applications, then Vulnerability
    Analysis, then select SPARTA.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the SPARTA 1.0.3 GUI, click on the left pane to add your host or hosts to
    the scope. This can also be done by clicking on File, then Add host(s) to scope,
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1337574f-32c9-4c01-a31c-009d8b110d94.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once hosts are added, Nmap host discovery and staged Nmap scans are run against
    the targets, as these options were selected in the previous screenshot. The following
    screenshot shows the scans in progress:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9039c6da-db3a-42db-b06a-0c498fc22a2a.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the Nmap scan is complete, SPARTA provides several tabs in the main window,
    such as Services, Scripts, Information, Notes, Nikto, and Screenshot tabs, all
    with very useful information.
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, we are first presented with a list of open ports and services under
    the Services tab, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ed07fd38-861a-49cd-a96a-3832ec4cac9b.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on the Information tab displays host information gathered, including
    IP information; number of ports open, closed, and filtered (if any); as well as
    the operating system and version with an accuracy rating:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1c6dfb6b-32a6-4dcc-bfba-455a1d217adb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'With the target in this case being a Linux web server, the Nikto web scanning
    tool was also run as part of the process. Clicking the nikto (80/tcp) tab reveals
    a list of vulnerabilities found:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ccf05705-04a8-42fb-ad2f-6ce50fd9dab3.png)'
  prefs: []
  type: TYPE_IMG
- en: Many of the vulnerabilities found have the prefix OSVBD, which indicates that
    they can be searched for in databases such as the **Common Vulnerabilites and
    Exposures** (**CVE**) and **Open Source Vulnerabilities Database** (**OSVDB**) websites.
    A penetration tester could, for example, use a simple Google search for OSVDB-3268,
    which was revealed as a present vulnerability by SPARTA in the previous scan,
    to find more information about this vulnerability. They could then exploit this
    via various tools, such as Metasploit, as discussed in the following chapters
    of this book.
  prefs: []
  type: TYPE_NORMAL
- en: 'Looking at another Windows machine included in the scan (**10.10.22.217**),
    clicking on the Services tab reveals several open ports, as seen in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/170687a0-e2fc-4379-b1d2-989862585584.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As a Windows machine was detected, the `smbenum` tool was run by SPARTA to
    enumerate the Windows machine to check for NULL sessions and perform enumeration
    tasks, including a search for users and shares, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c74d4806-6cd6-4f94-b374-7a65b4856d2d.png)'
  prefs: []
  type: TYPE_IMG
- en: SPARTA takes the scanning, enumeration, and vulnerability assessment another
    step further by allowing the penetration tester to actually perform various network
    penetration testing functions. In the Services tab, we can right-click on any
    of the open ports to perform these tasks.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following screenshot, right-clicking on open port 3306 presents options
    to attempt opening the port with Telnet, Netcat, or with a MySQL client (as root).
    There is also an option to Send to Brute to attempt to crack passwords by brute
    force:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cafa5a47-1764-4c64-9eb1-89decac2edda.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on Send to Brute attempts a brute-force attack via the selected port
    using the THC Hydra password cracking tool. Username and password lists can also
    be used in the attempt, along with various options to try a blank password, try
    the login as a password, and others. After specifying your options, click on Run
    to attempt the attack:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/55fc817f-5279-4366-8990-c852bd05df2d.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'These are by no means the only tools available in Sparta. For example, right-clicking
    on open port 445 on a Windows machine displays many more options available to
    the penetration tester, as seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9b5608f3-603f-4b8a-a29b-feb99a315197.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we discussed the process of identifying and analyzing the
    critical security vulnerabilities based on a selection of tools used in Kali Linux.
    We also mentioned three main classes of vulnerabilities—design, implementation,
    and operational—and discussed how they could fall into two generic types of vulnerabilities:
    local and remote. Afterwards, we discussed several vulnerability taxonomies that
    could be followed by the security auditor to categorize the security flaws according
    to their unifying commonality patterns. In order to carry out a vulnerability
    assessment, we presented you with a number of tools that allow for automated scans
    and vulnerability assessments, including Nessus, OpenVAS, Lynis, and SPARTA.'
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will discuss the art of deception and explain various
    ways to exploit human vulnerabilities in order to acquire the target. Although
    this process is sometimes optional, it is considered vital when there is a lack
    of information available to allow us to exploit the target infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is the relationship between a vulnerability and an exploit?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which class of vulnerability is considered to be the worst to resolve?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What website can be used to get information on the latest vulnerabilities?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the definition of a remote vulnerability?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which tool can perform internal and external PCI DSS scans?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which tool was built specifically for auditing Linux systems?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which tool is integrated into Sparta to perform website scanning?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Exploit and vulnerability information:  [https://www.exploit-db.com/](https://www.exploit-db.com/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Common vulnerabilities and exposures database: [https://cve.mitre.org/](https://cve.mitre.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Rapid7 vulnerability and exploit database: [https://www.rapid7.com/db](https://www.rapid7.com/db)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nessus scanning tutorials:  [https://docs.tenable.com/nessus/Content/Scans.htm](https://docs.tenable.com/nessus/Content/Scans.htm)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'OpenVAS community forum: [https://community.greenbone.net/](https://community.greenbone.net/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
