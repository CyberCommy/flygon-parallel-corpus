- en: Chapter 9. Putting It All Together
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The previous chapters have provided us with the foundation and elements to design
    and put together our entire domestic system, which we will study in this chapter.
    I hope that I've guided you through this journey in a fairly structured and logical
    way, so that you are ready to do that.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: As a guide to building the whole system, in this chapter, we will guide you
    through how to integrate and give you some ideas to put everything together, and
    also give you the final details. You can then make your own projects with the
    ideas that we will mention in this final chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Integrating the system - development projects
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling access with a matrix keyboard
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating the system control with relays and devices
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to set up the power supplies
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating the system - development projects
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we have seen different projects on home automation
    and domestic that is control and monitor home appliances. In this chapter, we
    will give some ideas to develop some projects that they can be done in different
    areas using electronics, controlling and monitoring.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Getting into the details of light sensor
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As its name implies, the **Light Dependent Resistor (LDR)** is made from a piece
    of exposed semiconductor material, such as cadmium sulfide, that changes its electrical
    resistance from several thousand Ohms in the dark to only a few hundred Ohms when
    light falls upon it, by creating hole-electron pairs in the material. The net
    effect is an improvement in its conductivity, with a decrease in resistance for
    an increase in illumination. Also, photosensitive cells have a long response,
    time requiring many seconds to respond to a change in the light intensity.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we will look at how to use a light sensor to control different
    devices:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: On/off lights when needed
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dimming the lamp when the sensor detects if there is light in the room or not
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Getting into the details of light sensor](graphics/B05170_09_01.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
- en: You can dim the lamp with the signal sensor; according to the measurement taken
    by the light sensor you can regulate the intensity of it.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting into the details of light sensor](graphics/B05170_09_02.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
- en: Motion sensor
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A motion sensor detects body heat (infrared energy). Passive infrared sensors
    are the most widely used motion in home security systems. When your system is
    armed, your motion sensors are activated. Once the sensor warms up, it can detect
    heat and movement in the surrounding areas, creating a protective grid.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'If a moving object blocks too many grid zones and the infrared energy levels
    change rapidly, the sensors are tripped. Using this sensor we can control lights
    when we want them turn on or turn off:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '![Motion sensor](graphics/B05170_09_03.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
- en: 'According to the distance the sensor measures, it can detect the object so
    you can control the lamp:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '![Motion sensor](graphics/B05170_09_04.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: Automatic light controller
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Sensors work when you are not home, or when you tell the system you are not
    there. Some security systems can be programmed to record events via a security
    camera when motion is detected. The main purpose of motion detection is to sense
    an intruder and send an alert to your control panel, which alerts your monitoring
    center:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '![Automatic light controller](graphics/B05170_09_05.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
- en: 'The following circuit diagram show the connection for an automatic light control
    where we use all the elements used earlier like the LDR sensor, PIR sensor, and
    the relay module:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '![Automatic light controller](graphics/B05170_09_06.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
- en: Solar power monitor circuit
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here we have another real project that shows a control panel that will monitor
    the energy of the solar panel using the Arduino board. The following diagram shows
    the connection of the sensors and solar panel to Arduino board:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '![Solar power monitor circuit](graphics/B05170_09_07.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
- en: Automatic irrigation system with a soil sensor
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the following figure, we have another project; we are integrating the tools
    that were used before. In this case, we will control the watering when it is present
    or not, using a soil sensor:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '![Automatic irrigation system with a soil sensor](graphics/B05170_09_08.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: Until now you have seen very interesting and valuable projects that can be applied
    to real situations, in different areas, such as domestic, home automation, and
    even in a garden. In the following sections we will look at more projects. Let's
    do it!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: Arduino water-level controller
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this project, we will make an automatic level sensor to control the level
    of water using your Arduino board, as shown in the following diagram:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![Arduino water-level controller](graphics/B05170_09_09.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
- en: Bluetooth based home automation
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will look at a project that can be used in home automation,
    to control the devices in a house, using a Bluetooth module to communicate, and
    a relay module and the integration of the hardware as software tools.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows how to connect the relay module and the HC05 Bluetooth
    module to the Arduino board:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '![Bluetooth based home automation](graphics/B05170_09_10.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
- en: Controlling access with a matrix keyboard
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will look at how to control the access with a code using
    a matrix keyboard. In the following image, we can see the keyboard that we will
    use:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '![Controlling access with a matrix keyboard](graphics/B05170_09_11.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: The keypad
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the following diagram, we see the hardware connections to the Arduino board.
    They are connected to the digital pins:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '![The keypad](graphics/B05170_09_12.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
- en: Connecting an LCD screen to display the code
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the following diagram, we show the hardware connections of the LCD screen
    to the Arduino board:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '![Connecting an LCD screen to display the code](graphics/B05170_09_13.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
- en: We have looked at some interesting projects that you can develop by adding new
    sensor to control other devices. In the next section, we will look at a very interesting
    project. Get ready for the next step, this is a great goal.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Controlling the door lock with a keypad
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the following image, we see a keypad with a lock. This section can be merged
    along with the last project. This device can be controlled from your Raspberry
    Pi Zero or your Arduino board:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '![Controlling the door lock with a keypad](graphics/B05170_09_14.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
- en: Code to access using the keypad
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can now either copy the code inside a file called Project_keyboard_Access_Control.ino,
    or just get the complete code from the folder for this project using the Arduino
    IDE:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This function checks if the code that was typed is correct:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Integrating the system control with relays and devices
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the following figure, we''re integrating important parts of the book. We
    will show the connections in a house using a relay, and how you will apply and
    control the real load using a lamp:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '![Integrating the system control with relays and devices](graphics/B05170_09_15.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
- en: Controlling multiple appliances
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In real life, we will see the devices connected and controlling the real world.
    In the following image, we can see the relay module that can control the loads
    with the electronics part:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '![Controlling multiple appliances](graphics/B05170_09_16.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: The following image shows the final circuit. We see the real connections to
    the Arduino board, and how they control the real world.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '![Controlling multiple appliances](graphics/B05170_09_17.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
- en: The complete system
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the following figure, we see the final circuit for controlling real devices
    in a home automation system. This can be used in all areas of the home, in each
    room we can have a relay module, connected to each module communicating with control
    system:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '![The complete system](graphics/B05170_09_18.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: How to set up the power supplies
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For our system, it is very important to set up the power supply that will be
    used in the system. First we need to ensure that the voltage for the Arduino is
    about *5V*. In the following diagram, we have shown how to configure the voltage
    to about 5 volts:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的系统，设置系统中将使用的电源非常重要。首先，我们需要确保Arduino的电压约为5V。在下图中，我们展示了如何将电压配置为约5伏特：
- en: '![How to set up the power supplies](graphics/B05170_09_19.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![如何设置电源供应](graphics/B05170_09_19.jpg)'
- en: Power supply for AC loads
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交流负载的电源供应
- en: 'If we need to connect AC loads to the Arduino or Raspberry Pi Zero and make
    an industrial control system, we need to use a voltage of 24 V of DC, as you can
    see in the following circuit diagram:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要将交流负载连接到Arduino或树莓派Zero并建立工业控制系统，我们需要使用24V直流电压，如下电路图所示：
- en: '![Power supply for AC loads](graphics/B05170_09_20.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![交流负载的电源供应](graphics/B05170_09_20.jpg)'
- en: Connecting a relay of 24 DC volts to the Arduino board
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将24V直流继电器连接到Arduino板
- en: 'In the following diagram, we have the circuit to control an AC load using a
    relay of 24 volts of DC:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们有了使用24伏特直流继电器控制交流负载的电路：
- en: '![Connecting a relay of 24 DC volts to the Arduino board](graphics/B05170_09_21.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![将24V直流继电器连接到Arduino板](graphics/B05170_09_21.jpg)'
- en: 'We have the final circuit, which represents the interface to control an AC
    load, connected to the output digital pin to the Raspberry Pi Zero or the Arduino
    board: this is not very common to see, but it''s necessary to learn how to connect
    a relay that can be energized with 24 volts of DC to the Arduino board:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有了最终电路，它代表了连接到Raspberry Pi Zero或Arduino板的数字引脚的接口，用于控制交流负载：这并不常见，但有必要学习如何将能够用24伏特直流通电的继电器连接到Arduino板：
- en: '![Connecting a relay of 24 DC volts to the Arduino board](graphics/B05170_09_22.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![将24V直流继电器连接到Arduino板](graphics/B05170_09_22.jpg)'
- en: Finally we have the final circuit in a board. We used a relay that has a coil,
    which has to energize with 24 volts. The digital output of the Arduino or Raspberry
    Pi can be connected to the relay module.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在一个板上有了最终电路。我们使用了一个需要用24伏特通电的线圈的继电器。Arduino或树莓派的数字输出可以连接到继电器模块。
- en: Summary
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This is the last chapter of the book, *Internet of Things Programming with JavaScript*.
    In this chapter, you learned how to integrate all the elements that you need to
    take into consideration when you want to apply the tools of hardware and software
    in the projects that we showed you. This is going to help you to continue developing
    your own projects, following the basics and the knowledge shared in this book.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这是书籍《JavaScript物联网编程》的最后一章。在本章中，您将学习如何整合在项目中需要考虑的所有元素，当您想要将硬件和软件工具应用到我们展示的项目中时。这将帮助您继续开发自己的项目，遵循本书中分享的基础知识。
