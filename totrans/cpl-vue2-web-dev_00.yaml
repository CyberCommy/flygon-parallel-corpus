- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This Learning Path is divided into three sections, with each section bringing
    you closer to developing high-end modern web applications with Vue.js 2\. It starts
    with building example applications to get well versed with the Vue.js ecosystem.
    You will learn to use Vue.js by creating three single page applications that explore
    Vuex and vue-router, the standard Vue tools for caching data and routing URLs
    for your applications. Going further, the Learning Path will address some of the
    challenges in designing web applications with Vue.js.
  prefs: []
  type: TYPE_NORMAL
- en: The Learning Path will have easy-to-follow recipes to help you tackle the challenges
    and craft dynamic front end. You will learn to integrate web utilities like Babel
    and Webpack to enhance your development workflow. Finally, towards the end, the
    course will introduce you to several design patterns to help you write clean,
    maintainable, and reusable codes with Vue framework.
  prefs: []
  type: TYPE_NORMAL
- en: At the end of the Learning Path, you will be confident with expertise in leveraging
    all the components and productivity features of Vue.js and will be on your way
    to design your web applications and execute it by writing clean code.
  prefs: []
  type: TYPE_NORMAL
- en: Who This Book Is For
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Learning Path is intended for JavaScript developers at any level of expertise
    who wants to learn Vue.js and develop productive web applications with the power
    of the latest Vue.js.
  prefs: []
  type: TYPE_NORMAL
- en: What This Book Covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](fd0ac6f2-3c10-44b0-b730-6306806a0fb5.xhtml), *Getting Started
    with Vue.js*, shows how to get started with Vue by including the JavaScript file.
    We then move onto initializing your first Vue instance and looking at the data
    object along with examining computed functions and properties and finally learning
    about Vue methods.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](41024532-304a-4eb3-a0fe-7a07dafcac3c.xhtml), *Displaying, Looping,
    Searching, and Filtering Data*, describes how to display lists and more complex
    data with Vue using `v-if` , `v-else` and `v-for.` It then looks at how to filter
    the lists using form elements, followed by applying conditional CSS classes based
    on the data.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 3*, *Optimizing Our App and Using Components to Display Data*, is
    about optimizing our Vue.js code by reducing the repetition and logically organizing
    our code. Once complete, it looks at how to create Vue components and use them
    with Vue, how to use props and slots with components, and utilizing events to
    transfer data between components.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 4*, *Getting a List of Files Using the Dropbox API*, presents loading
    and querying the Dropbox API and listing the directories and files from your Dropbox
    account. It then looks at adding a load state to your app along with using Vue
    animations.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 5*, *Navigating through the File Tree and Loading Folders from the
    URL*, explains how to create a component for both files and folders, and add links
    to the folder component to update the directory listing. it also covers how to
    add a download button to the file component and create a breadcrumb component
    so the user can easily navigate back up the tree and dynamically update the browser
    URL, so if a folder is bookmarked or a link is shared, the correct folder loads.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 6*, *Caching the Current Folder Structure Using Vuex*, shows how to
    get started with Vuex along with storing and retrieving data from the Vuex Store.
    It then looks at how to integrate Vuex with our Dropbox app, how to cache the
    current Dropbox folder''s contents, and loading data from the store if required.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 7*, *Pre-Caching Other Folders and Files for Faster Navigation*, describes
    the process of pre-caching folders, storing the parent folder''s contents, and
    how to cache the download links for the files.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 8*, *Introducing Vue-Router and Loading URL-Based Components*, explores
    Vue-Router initialization and its options and how to create links with Vue-Router.
    It then looks at how to make dynamic routes to update the View based on the URL.
    From there, it describes how to use props with URLs, nest and name routes, and navigate
    programmatically.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 9*, *Using Vue-Router Dynamic Routes to Load Data*, is about outlining
    our components and routes, loading a product CSV file and creating an individual
    product page with images and product variations.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 10*, *Building an E-Commerce Store, Browsing Products*, describes
    how to create a homepage listing page with specific products, create a category
    page with a reusable component, create an ordering mechanism, create filters dynamically,
    and allow the user to filter the products.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 11*, *Building an E-Commerce Store, Adding a Checkout*, is about building
    the functionality to allow the user to add and remove products to their basket,
    allow a user to check out and add an order confirmation page.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 12*, *Using Vue Dev Tools and Testing Your SPA*, covers the usage
    of the Vue developer tools with the applications we''ve developed and has an overview
    of testing tools and applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 13*, *Transitions and Animations*, where you learn how transitions
    and animations work to bring more life to your apps. You will also integrate with
    external CSS libraries.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 14*, *Vue Communicates with the Internet*, is where you make your
    first AJAX call and create forms and a full-fledged REST client (and server!).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 15*, *Single Page Applications*, is where you use vue-router to create
    static and dynamic routes to create a modern SPA.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 16*, *Organize + Automate + Deploy = Webpack*, is where you actually
    publish your accurately crafted components to npm and learn how Webpack and Vue
    play together in the process.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 17*, *Advanced Vue.js*, is where you explore directives, plugins,
    functional components, and JSX.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 18*, *Large Application Patterns with Vuex*, is where you structure
    your application with tested patterns using Vuex to make sure your apps are maintainable
    and performant.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 19*, *Integrating with Other Frameworks*, is where you build four different
    applications with Vue and Electron, Firebase, Feathers, and Horizon.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 20*, *Vue Router Patterns*, describes how routing is a vitally important
    part of any SPA. This chapter focuses on the Vue route and looks at routing a
    user between multiple pages. It goes through everything from matching paths and
    components to dynamic matching with navigation parameters, regular expressions,
    and more.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 21*, *State Management with Vuex*, demonstrates state management with Vuex.
    It starts by looking at the Flux architecture and unidirectional data flow. Then,
    it takes a look at Vuex, a state management system for Vue. The chapter also looks
    at implementing this in an application, as well as common pitfalls and usage patterns.
    It goes on to the `Vue-devtools` to capture actions and Vue instance data.'
  prefs: []
  type: TYPE_NORMAL
- en: To Get the Most out of This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this book, the reader will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A text editor or IDE to write code. It can be as simple as Notepad or TextEdit,
    but one with syntax highlighting such as Sublime Text, Atom, or Visual Studio
    Code is recommended.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A web browser.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Dropbox user account with files and folders.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the Example Code Files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Complete-Vue.js-2-Web-Development](https://github.com/PacktPublishing/Complete-Vue.js-2-Web-Development). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in the text, database table names, folder names, filenames, file
    extensions, pathnames, dummy URLs, user input, and Twitter handles are shown as
    follows: "Just assign the names of the layers you want to activate to the `VK_INSTANCE_LAYERS` environment
    variable."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: New terms and important words are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
