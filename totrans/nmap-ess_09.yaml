- en: Chapter 9. Vulnerability Assessments and Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After learning all the additional tools that come packaged with the Nmap suite,
    it is a good idea for us to take a look at some third-party tools that can assist
    in conducting a vulnerability assessment. Vulnerability assessments, more than
    just a simple port scan, are comprehensive reports that detail the full range
    of vulnerabilities that may exist on a given target scope.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Some of the tools we'll learn about in this chapter interact very well with
    Nmap, while others are simply follow-up tools to use after the initial Nmap scan.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Conducting a vulnerability scan with Nessus
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assessing web server issues with Nikto
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying sensitive web directories with DirBuster
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting started with intercepting proxies
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting vulnerability scans with Nessus
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the most common pieces of software to use in conjunction with a port
    scanner is a vulnerability scanner. This scanner takes the role of port scanning
    one level higher; rather than identifying open ports and services, it cross-references
    these versions with a (usually proprietary) database of vulnerabilities in order
    to show whether a given service is vulnerable to attack.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: These scanners are the key elements in vulnerability assessments, as they reduce
    the burden of the security engineer; instead of having to manually identify weaknesses,
    a scanner (that is frequently updated) can do much of that work.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Although Nessus was originally started (in 1998) as a free security scanner,
    it has since then been closed off to the public due to Tenable (the company Nessus'
    creator founded) selling the licenses instead. While many security companies pay
    for these licenses, you can try out a fork of the Nessus project (OpenVAS) for
    free.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Nessus is fairly straightforward. Although many security tools run on
    the command line (including some that we''ll review later in this chapter), Nessus
    uses a web-based user interface that is very intuitive to use. The basic usage
    consists of:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Selecting a target list (Nmap can help with this)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Selecting a scan type
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running the scan
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interpreting results
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows the Nessus "templates" page:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting vulnerability scans with Nessus](img/4065OS_09_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
- en: As we can see in the preceding screenshot, logging into Nessus and selecting
    **New Scan** allows us to choose from a variety of premade scan types—while it
    also allows us to select **Policies** for custom scan types. For the purpose of
    this scan, I have created a special scan type that will scan all ports (just like
    Nmap!) and then cross-reference any vulnerabilities it detects.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to launch the scan, we must select the targets we''re looking to scan.
    Just like during our Nmap test scans, we''ll scan `scanme.nmap.org`. Note that
    conducting a vulnerability scan on an unwilling target can be very upsetting to
    system administrators, and is illegal in many parts of the world:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting vulnerability scans with Nessus](img/4065OS_09_02.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
- en: 'The Nessus graphical user interface is very simple to use; simply add the host
    to "targets," and give the scan a name. In large penetration tests, many security
    assessors will specifically parse out online hosts (or hosts with services listening)
    from the Nmap results, in order to not waste Nessus time on hosts that are either
    offline or do not have any services listening. The following screenshot shows
    a vulnerability scan in Nessus:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting vulnerability scans with Nessus](img/4065OS_09_03.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: Once the scan is completed, clicking on **Vulnerabilities** shows the current
    list of vulnerabilities detected on the target scope. As expected, `scanme.nmap.org`
    has very few vulnerabilities (the Nmap team knows a lot about security!), but
    there are still a few "informational" findings that crop up in order to give the
    most information possible to the assessor. In this case, it appears that some
    configurations (such as the Apache web server information) allow information disclosure.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描完成后，单击**漏洞**会显示在目标范围上检测到的漏洞的当前列表。如预期的那样，`scanme.nmap.org`几乎没有漏洞（Nmap团队对安全性了解很多！），但仍然会出现一些“信息”发现，以便向评估人员提供尽可能多的信息。在这种情况下，似乎某些配置（例如Apache
    Web服务器信息）允许信息泄露。
- en: Nessus is a powerful tool, but the NSE is quickly becoming a formidable competitor—by
    being able to script out all of the same checks that Nessus has built-in. The
    advantage Nessus holds, however, is that Tenable has a full team of security engineers
    writing new plugins almost constantly; with Nmap scripts, someone needs to create
    a script, upload it to the web, and distribute it to many users before it can
    be used in practice.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Nessus是一个强大的工具，但NSE很快就成为了一个强大的竞争对手，因为它能够脚本化Nessus内置的所有检查。然而，Nessus的优势在于Tenable拥有一个全职的安全工程师团队，几乎不断地编写新的插件；而对于Nmap脚本，需要有人创建脚本，将其上传到网络，并将其分发给许多用户，然后才能在实践中使用。
- en: Custom checks are another feature that Nessus can support. Much like the NSE,
    Nessus users may use a powerful scripting tool called the **Nessus Attack Scripting
    Language** (**NASL**). NASL scripts can be written by anyone, and provide the
    full power of the Nessus engine—without necessarily running a full Nessus scan
    against a given host. Full NASL documentation can be accessed on the Tenable website.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义检查是Nessus可以支持的另一个功能。与NSE类似，Nessus用户可以使用一个强大的脚本工具，称为**Nessus攻击脚本语言**（**NASL**）。任何人都可以编写NASL脚本，并提供Nessus引擎的全部功能，而不一定要对给定主机运行完整的Nessus扫描。完整的NASL文档可以在Tenable网站上访问。
- en: Assessing web server issues with Nikto
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Nikto评估Web服务器问题
- en: Nikto is an open source tool that allows security assessors to evaluate the
    configuration of web servers. Unlike Nmap or Nessus, Nikto is designed exclusively
    for web-based configuration evaluations. As a general rule, it's a good idea to
    run Nikto (or a similar web scanner) on web services that are identified as part
    of a penetration test or vulnerability assessment. Nikto can be accessed from
    its web page at [https://cirt.net/Nikto2](https://cirt.net/Nikto2).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto是一个开源工具，允许安全评估人员评估Web服务器的配置。与Nmap或Nessus不同，Nikto专门设计用于基于Web的配置评估。通常情况下，建议在渗透测试或漏洞评估的一部分中运行Nikto（或类似的Web扫描程序）以评估Web服务。可以从其网页[https://cirt.net/Nikto2](https://cirt.net/Nikto2)访问Nikto。
- en: 'The installation of Nikto is a fairly straightforward process, similar to the
    other tools we''ve used throughout this book:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto的安装过程非常简单，类似于本书中使用过的其他工具：
- en: '`wget https://github.com/sullo/nikto/archive/master.zip`'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`wget https://github.com/sullo/nikto/archive/master.zip`'
- en: '`unzip master.zip`'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`解压缩master.zip`'
- en: '`cd nikto-master/program`'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`cd nikto-master/program`'
- en: '`Nikto is now ready to use!`'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Nikto现在可以使用了！`'
- en: 'Nikto, like many early security tools, is a Perl script—which means that as
    long as Perl is available on your system, Nikto is good to go! In order to demonstrate
    how Nikto works, we will run a simple scan against our favorite host, `scanme.nmap.org`.
    To run this scan, we invoke Nikto using the `-h` (host) flag: `nikto -h scanme.nmap.org`.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 像许多早期的安全工具一样，Nikto是一个Perl脚本，这意味着只要系统上有Perl，Nikto就可以运行！为了演示Nikto的工作原理，我们将对我们最喜欢的主机`scanme.nmap.org`运行一个简单的扫描。要运行此扫描，我们使用`-h`（主机）标志调用Nikto：`nikto
    -h scanme.nmap.org`。
- en: '![Assessing web server issues with Nikto](img/4065OS_09_04.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![使用Nikto评估Web服务器问题](img/4065OS_09_04.jpg)'
- en: You can see in the preceding screenshot that as Nikto runs, it identifies many
    issues (including some of the issues we identified with Nmap and Nessus), as well
    as a few different configuration options—such as the lack of certain security
    headers, the existence of certain web directories, and so on.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在上面的屏幕截图中看到，随着Nikto的运行，它识别出许多问题（包括我们在Nmap和Nessus中识别出的一些问题），以及一些不同的配置选项，例如缺少某些安全标头，存在某些Web目录等等。
- en: In the event of actual web server vulnerabilities, Nikto can be invaluable to
    detect exploitable attack vectors. As time goes on, the NSE is taking more and
    more of these checks from Nikto and integrating them directly into Nmap—but at
    its core, Nmap is still a port scanner; detecting vulnerabilities is a bonus,
    not the primary purpose.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际Web服务器漏洞的情况下，Nikto可以是无价的，以检测可利用的攻击向量。随着时间的推移，NSE正在从Nikto中获取越来越多的这些检查，并将它们直接集成到Nmap中，但在其核心，Nmap仍然是一个端口扫描程序；检测漏洞只是一个奖励，而不是主要目的。
- en: Identifying sensitive web directories with DirBuster
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用DirBuster识别敏感的Web目录
- en: Although Nikto can identify potentially sensitive directories and web server
    misconfigurations, its primary purpose is not to find hidden files. DirBuster,
    however, exists entirely to find the hidden files and directories on web servers.
    Using Java (so the Java Runtime Environment must be installed), DirBuster can
    send many, many requests to a web server in order to completely enumerate any
    directories that may be interesting to any sort of an assessor. From a self-testing
    perspective, running DirBuster can be very useful to verify that there are no
    sensitive files left on your own web server!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Nikto可以识别潜在的敏感目录和Web服务器配置错误，但其主要目的不是查找隐藏文件。然而，DirBuster完全是为了查找Web服务器上的隐藏文件和目录而存在的。使用Java（因此必须安装Java运行环境），DirBuster可以向Web服务器发送许多请求，以完全枚举可能对任何评估人员感兴趣的任何目录。从自我测试的角度来看，运行DirBuster可以非常有用，以验证自己的Web服务器上没有留下敏感文件！
- en: 'Technically, DirBuster as a stand-alone product is considered as end of life
    by OWASP, the organization that runs the project. The codebase has been ported
    to the OWASP **Zed Attack Proxy** (**ZAP**) project (which we''ll talk about in
    the next section), but DirBuster can still be run in stand-alone mode—which is
    very common in the information security consulting industry. You can download
    DirBuster at the following URL: [http://sourceforge.net/projects/dirbuster/](http://sourceforge.net/projects/dirbuster/).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: In its normal use case, DirBuster is a **Graphical User Interface** (**GUI**)-based
    software—however, the most common usage in the security industry is to use the
    `-H` flag, which runs DirBuster in headless mode. This mode means that the software
    runs on the command line, allowing easier scripting to run the software, as well
    as the ability to run DirBuster from "staging" servers, which are usually only
    accessed over SSH. Fortunately, we've become very comfortable with the command
    line while learning about Nmap, so this shouldn't be a problem!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'Running DirBuster can be a little bit daunting for newcomers, but it''s actually
    very simple: running `java -jar [Dirbuster file].jar -H -u http://scanme.nmap.org`
    will run the software against `scanme.nmap.org`. We invoke it using `java -jar`
    because we''re running a JAR file (a packaged Java program), `-H` for headless
    mode (as we learned above), and `-u` before the URL of the base site we''re looking
    to scan. Although we can scan sites with permission, DirBuster generally takes
    a little while to run—since it has to check many, many potential directories to
    give a comprehensive list. Once DirBuster is finished running or it is stopped
    with the "control-C" stop mechanism, a report is written to a text file in the
    directory DirBuster ran. This automatic log generation is very useful, since DirBuster
    can often find a large amount of sensitive directories.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: It's interesting to note that you can specify the list that DirBuster uses to
    check for directories, and it's a good idea to make sure this list is always up-to-date.
    It's a good idea to check around the Internet for updated lists, especially as
    DirBuster itself is technically no longer actively maintained.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with intercepting proxies
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We've now learned how to conduct full vulnerability scans using Nessus, find
    web server misconfigurations using Nikto, and identify sensitive files and directories
    using DirBuster. However, none of these tools show us how a web application may
    actually be communicating with a potential client browser. In order to see this
    level of communication, we need to use what's called an intercepting proxy.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: You've probably heard of a proxy before—something you can bounce your web traffic
    off, in order to have a different source IP address or to avoid certain types
    of firewalls—but an intercepting proxy is something different altogether. While
    you're still bouncing your traffic somewhere else, in the case of an intercepting
    proxy, you're proxying to yourself and then using a piece of software to potentially
    modify that request.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the most common intercepting proxies in the security industry is Burp
    Suite, which has a "community" edition (free) and a "professional" edition (paid).
    A popular alternative to Burp Suite is OWASP ZAP, but for the purposes of demonstrating
    an intercepting proxy, Burp Suite does the job just fine. You can download the
    free edition of Burp Suite at the following URL:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[http://portswigger.net/burp/download.html](http://portswigger.net/burp/download.html)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: The first step to set up an intercepting proxy is configuring a web browser
    to point at the proxy. Each proxy is different, but Burp Suite uses port 8080
    as the default. This is usually in the web browser's settings, generally under
    the **Network** tab. Once proxying is set up, simply browsing to any page will
    allow the request to be intercepted.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example, we''ve set up Burp Suite to intercept requests, and attempted
    to use Firefox to browse to `scanme.nmap.org`:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们已经设置了Burp Suite来拦截请求，并尝试使用Firefox浏览到`scanme.nmap.org`：
- en: '![Getting started with intercepting proxies](img/4065OS_09_05.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![使用拦截代理开始](img/4065OS_09_05.jpg)'
- en: 'Because we have proxying to Burp Suite configured, we can immediately see that
    our request ("GET /") is being intercepted by Burp Suite. This is useful in and
    of itself, as it allows us to see exactly what our web browser is doing with the
    request, but there are even more functionalities to intercepting proxies. More
    than just seeing the requests, we can actually modify them on the wire! The following
    screenshot shows Burp Suite intercepting a request:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们已经配置了代理到Burp Suite，我们可以立即看到我们的请求（"GET /"）被Burp Suite拦截。这本身就很有用，因为它允许我们准确地看到我们的Web浏览器对请求的处理，但拦截代理还有更多的功能。除了看到请求，我们实际上还可以在传输过程中修改它们！以下屏幕截图显示了Burp
    Suite拦截请求：
- en: '![Getting started with intercepting proxies](img/4065OS_09_06.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![使用拦截代理开始](img/4065OS_09_06.jpg)'
- en: 'In the preceding screenshot, you can see that we changed our request from `GET
    /` to `GET /TEST`, which changes the request to the web server before the server
    receives it. Although this change is just a simple `GET` parameter change, this
    functionality is very useful when assessing web applications. For example, it
    can sometimes be possible to send the `POST` requests for other users'' data by
    changing a variable, where simply browsing to a different URL with a web browser
    would not produce the intended effect. In terms of assessing web applications,
    an intercepting proxy is at the forefront of cutting-edge tools. The following
    screenshot shows a web browser interpreting the request''s result:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，您可以看到我们将请求从`GET /`改为`GET /TEST`，这样在服务器收到请求之前就改变了请求。尽管这个改变只是一个简单的`GET`参数改变，但在评估Web应用程序时，这个功能非常有用。例如，有时候可以通过改变变量来发送其他用户数据的`POST`请求，而仅仅通过Web浏览器浏览到不同的URL不会产生预期的效果。在评估Web应用程序方面，拦截代理是尖端工具的前沿。以下屏幕截图显示了Web浏览器解释请求的结果：
- en: '![Getting started with intercepting proxies](img/4065OS_09_07.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![使用拦截代理开始](img/4065OS_09_07.jpg)'
- en: You can see that once we clicked the **Forward** button in Burp Suite, allowing
    the modified request to continue on to the server, our browser got a response
    that `/TEST` was not found on the server. This 404 error was produced because
    the request was changed on the wire, and the new file does not exist.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到，一旦我们在Burp Suite中点击了**Forward**按钮，允许修改后的请求继续发送到服务器，我们的浏览器就会收到一个`/TEST`在服务器上找不到的响应。这个404错误是因为请求在传输过程中被改变了，新文件并不存在。
- en: Burp Suite is a powerful tool, with many features—and worthy of a whole book
    to itself, which is also available. If you have an interest in web application
    security, I strongly recommend using and learning more about Burp Suite.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite是一个功能强大的工具，具有许多功能，值得一本专门的书来介绍，这本书也是可用的。如果你对Web应用程序安全感兴趣，我强烈建议使用并了解更多关于Burp
    Suite的知识。
- en: Summary
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter took us from understanding how to run port scans, to learning how
    other security tools fit into the security professional's daily life. We have
    learned how to conduct vulnerability scans and assessments with Nessus, evaluate
    web server configurations with Nikto, find hidden files and directories using
    DirBuster, and intercept and modify requests to web applications using Burp Suite.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这一章让我们从了解如何运行端口扫描，到学习其他安全工具如何适应安全专业人员的日常生活。我们已经学会了如何使用Nessus进行漏洞扫描和评估，使用Nikto评估Web服务器配置，使用DirBuster查找隐藏的文件和目录，并使用Burp
    Suite拦截和修改Web应用程序的请求。
- en: Although there is still a lot to learn about the security world, we have now
    gotten to the point where conducting a vulnerability assessment is within our
    reach!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然关于安全世界还有很多要学习的，但我们现在已经达到了进行漏洞评估的阶段！
- en: In the next chapter, we will learn the basics of conducting a penetration test
    using Metasploit, and how Nmap and Metasploit can be used in conjunction to produce
    an excellent attack platform.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习使用Metasploit进行渗透测试的基础知识，以及如何结合使用Nmap和Metasploit来生成一个出色的攻击平台。
