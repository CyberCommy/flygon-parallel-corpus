- en: Chapter 7. Cloud Computing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The new generation of services provided via the Internet is known as cloud computing.
    In the computer industry, many organizations use cloud computing as they don't
    like to purchase the equipment that can resolve their resource solutions, or hire
    what is required to manage and maintain it. Cloud computing is like a third-party
    data source that offers various capabilities to store and process data.
  prefs: []
  type: TYPE_NORMAL
- en: Within the list of the best solutions for establishing a cloud-computing environment,
    we have chosen OpenStack. In this chapter, we will cover in brief what cloud computing
    is and how to set up a single node using OpenStack.
  prefs: []
  type: TYPE_NORMAL
- en: 'Over the course of this chapter, we will go through the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Overview of cloud computing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud-computing services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introducing OpenStack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Components of OpenStack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and setting up of OpenStack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An overview of cloud computing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cloud computing is the capacity to perform computing outside the usual way of
    relying on local machines. Cloud computing relies on shared resources to handle
    the needed calculation or treatment. It shares the same aspects as Grid computing
    where both technologies have its processing power gathered to resolve or treat
    problems too heavy for a standalone machine (server or a personal computer).
  prefs: []
  type: TYPE_NORMAL
- en: The goal of cloud computing is to harness high supercomputing power to perform
    high-level computations in consumer-oriented applications, such as finance, personalized
    information delivery, data storage, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: In order to perform this overwhelming task, cloud computing relies on a gigantic
    number of super powerful servers (blades…) connected through an extremely fast
    connection (InfiniBand (IB)) to share the workload across their computing units.
    This kind of infrastructure runs on specially configured systems, where they are
    linked together to simplify the task. Some infrastructures rely on virtualization
    technology to enhance their cloud computing.
  prefs: []
  type: TYPE_NORMAL
- en: '![An overview of cloud computing](img/B04674_07_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://networksolutionsintl.com](http://networksolutionsintl.com)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Briefly, the most precise reason for many companies to use cloud computing
    is that it enables them to make computer resources look like a utility, which
    they can pay for over time without having the real hardware on site and the burden
    of managing it and sustaining it within their team. Also, cloud computing offers
    many interesting features for enterprises, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Elasticity**: The capacity to scale computing resources up and down as the
    need requires'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Self-service provisioning**: The capacity to provide the required amount
    of resources for the job, on demand'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pay per use**: The capacity to measure the resources used by the users so
    they only get charged for the resources they have used'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cloud computing has hugely evolved over time. However, it has always kept the
    main three board services:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Software as a Service** (**SaaS**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Platform as a Service** (**PaaS**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Infrastructure as a Service** (**IaaS**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software as a Service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SaaS refers to every application running on a machine other than the current
    user machine, where the user has access to some or all of its services through
    their web browser, and sometimes through a thin client application that only works
    as a presentation interface. SaaS applications are generally accessible worldwide
    using any kind of device that can access the Internet (computer, mobile, and so
    on). The thing that makes an SaaS application work well is that it is a kind of
    scalable application where the user can process its treatment over as many virtual
    machines as needed to answer the load demand. Most cloud-computing infrastructures
    use a load-balancing system to organize the load between the virtual machines,
    where the application keeps running without any interruption and perform a better
    execution results.
  prefs: []
  type: TYPE_NORMAL
- en: '![Software as a Service](img/B04674_07_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://icorees.com/](http://icorees.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'SaaS is characterized as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Its services are accessible for any connected device
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Easy-to-use application just after signing in
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Where everything is stored on the cloud over hundreds of machines well configured
    for disasters such as disk crash and so on, plus user data and services are always
    available
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Computing power for applications is always scalable when needed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can distinguish some of the most famous SaaS that we use every day, such
    as e-mail services (Gmail, Yahoo…), social media and communication tools (Facebook,
    Skype…). All we need to use these daily services is an Internet connection and
    a device that has a web browser or a thin client application for mobile.
  prefs: []
  type: TYPE_NORMAL
- en: Platform as a Service (PaaS)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PaaS is a service that offers its clients the capacity to build and deploy applications
    on a cloud-based environment. PaaS acts like SaaS when providing scalability to
    its users. When deploying their applications, they have on-demand access to the
    needed resource to run their application, where it offers all those services without
    the pain of buying, maintaining and managing the hardware needed for the application
    to run, with all the logistics behind it. PaaS has been well developed to offer
    to its clients pre-prepared templates to simplify the initialization on the platform.
  prefs: []
  type: TYPE_NORMAL
- en: '![Platform as a Service (PaaS)](img/B04674_07_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://www.zoho.com/](https://www.zoho.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can distinguish some major benefits of using PaaS from the traditional solution,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Speeds up the development of applications where the environment is already there,
    and makes it ready for marketing where it is already hosted
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removes the complexity of managing the middleware and simplifies the task of
    having it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simplifies the deployment of web applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Infrastructure as a Service (IaaS)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The third service is IaaS, a kind of service that offers its users everything
    needed to establish a fully qualified infrastructure. IaaS provides servers with
    different characteristics, network equipment, and storage space on demand. The
    user of the infrastructure has all the rights to manage his infrastructure as
    desired, with all the rights of a system and network administrator. This service
    offers its users more than just the infrastructure but a pack-kind of resource
    (small, medium, and extra-large computing power and memory) to answer the workload
    requirements. As we said before, users act as system and network administrators
    so as to deploy their applications. They then need to establish their networks,
    install the desired OS, and set up their machines, where the users also maintain,
    manage and update their systems manually, as desired.
  prefs: []
  type: TYPE_NORMAL
- en: '![Infrastructure as a Service (IaaS)](img/B04674_07_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://cloudplus.com/](http://cloudplus.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The benefits of IaaS can be summed up as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: It removes the task of investing in hardware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As with other cloud solutions, IaaS is scalable on demand to answer the user
    need for resources and equipment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A variety of flexible and innovative services are provided as per user requirements![Infrastructure
    as a Service (IaaS)](img/B04674_07_01.jpg)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud computing services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After explaining the different types of cloud computing, we should now have
    a look at how those services are provided. For that, we categorize them into three
    major types: public cloud, private cloud, and hybrid cloud.'
  prefs: []
  type: TYPE_NORMAL
- en: Public cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will start by introducing the public cloud. The public cloud, as its name
    suggests, is a publicly available cloud. Usually, a public cloud service is scalable
    on how much the user is willing to pay, either for resources or special services.
    Since it is on the cloud, users don't have to worry about hardware purchases,
    management, and maintenance. Most services provided as a public cloud are SaaS,
    with a small number as PaaS. Most of those services are available on demand. Usually,
    the users are charged for the resources they are using (CPU, memory, storage,
    Internet bandwidth) more than for the service itself.
  prefs: []
  type: TYPE_NORMAL
- en: '![Public cloud](img/B04674_07_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://nextgenaccess.zserver.co.uk/](http://nextgenaccess.zserver.co.uk/)'
  prefs: []
  type: TYPE_NORMAL
- en: Resources sharing on a public cloud appear when multiple users access the same
    service where it is hosted on one or many servers, and also where those servers
    need to process the tasks sent by the clients. Some infrastructures are better
    than others whereby they can handle really heavy traffic; others may find it a
    bit more difficult. On this stage, clients may experience slowness in their application
    and that is what really affects the service in a bad way.
  prefs: []
  type: TYPE_NORMAL
- en: Private cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In contrast to the public cloud, the private cloud is a kind of dedicated service
    for one user or one organization. Being used by one customer does not make it
    different to any other cloud. It can still be managed and administrated by a third-party
    company or by an internal team.
  prefs: []
  type: TYPE_NORMAL
- en: Most organizations tend to use a private cloud due to its advantages of allocation
    and to be able to control the resources. This is different from the public cloud
    where it is shared between multiple users. Also the public cloud features a self-service
    interface that helps and simplifies the resources management and allocation for
    system administrators with a faster method on demand, more advanced security protocols
    for better security of the user data, and an advanced automated system that helps
    with the resource management to optimize the workload.
  prefs: []
  type: TYPE_NORMAL
- en: '![Private cloud](img/B04674_07_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://blogs.dlt.com](http://blogs.dlt.com)'
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A hybrid cloud is a combination of the public cloud and the private cloud. To
    be more specific, the private cloud can sometimes be very expensive and hard to
    adjust, especially for little applications that do not require the advantages
    that the private cloud is offering. While a public cloud is not that much more
    expensive a solution, and has the advantage of fast deployment of its applications,
    organizations tend to mix the use of both services, depending on their needs,
    and that's what has made the hybrid cloud popular. The hybrid cloud allows organizations
    to keep important data on their private cloud and offer light services such as
    SaaS on a public cloud, with the capacity to switch to the desired service whenever
    needed.
  prefs: []
  type: TYPE_NORMAL
- en: '![Hybrid cloud](img/B04674_07_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://www8.hp.com](http://www8.hp.com)'
  prefs: []
  type: TYPE_NORMAL
- en: Introducing OpenStack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have now thoroughly described cloud computing, its services, and how a customer
    can utilize these services. Now, we need to talk about our role in this. Knowing
    how to use a cloud-computing service, such as an IaaS to deploy an infrastructure
    on it, is not really one of the hardest tasks for a system administrator. But
    the one that every system administrator should know is how to deploy one and how
    to offer those services to their clients. In this section, we are going to explore
    how to have a cloud running within our infrastructure and how to provide those
    services running on our CentOS 7 server. To perform this task we will be using
    one of the most famous open source cloud solutions for Linux, OpenStack, which
    is a free cloud-computing solution that helps initiate, manage, and sustain a
    huge pool of virtual machines with the required resources (CPU, memory, networking,
    and storage). This infrastructure is managed through a user-friendly web interface
    that helps present the status of the nodes to the system administrator, and gives
    them easy access to manage the infrastructure resources. OpenStack provides open
    source and enterprise services as per the user's demands, which make it well used
    by multiple organizations.
  prefs: []
  type: TYPE_NORMAL
- en: Today, OpenStack is used by hundreds of worldwide organizations to maintain
    their cloud infrastructure where they use it to have their cloud solutions up
    and running, and where it is used for both public or private cloud services. Most
    organizations providing cloud services, to either the public or private, use OpenStack
    to deliver an IaaS service.
  prefs: []
  type: TYPE_NORMAL
- en: '![Introducing OpenStack](img/B04674_07_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://www.openstack.org/software/](https://www.openstack.org/software/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'OpenStack manages three major sections under its API: compute, networking and
    storage. Through this API, OpenStack creates a sustainable environment for the
    infrastructures it manages.'
  prefs: []
  type: TYPE_NORMAL
- en: OpenStack compute
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OpenStack compute is the capacity to offer computing resources on demand for
    the customer while managing the resources that have been requested. OpenStack
    compute not only offers what the customers are running on their applications but
    also ensures that the service itself is running well by organizing the resources
    and the applications. OpenStack compute is accessible via both the web interface
    for administration and via the API for developing and building applications. This
    architecture enables economic usage of the physical hardware where it scales it
    horizontally. This technology also manages and automates a huge pool of computing
    resources, while it offers a compatibility with a variety of virtualization technologies.
  prefs: []
  type: TYPE_NORMAL
- en: OpenStack networking
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OpenStack networking is the capacity to manage networking for the cloud resources
    managed by OpenStack. This technology ensures that the network resources connecting
    the cloud infrastructure are always available and do not contain any bottlenecks,
    other that just performing what a network administrator should do to maintain
    its infrastructure network.
  prefs: []
  type: TYPE_NORMAL
- en: OpenStack networking offers a flexible networking model to answer needs such
    as flat networks, VLAN configurations, GRE, and VXLAN. It provides the same services
    that the ordinary physical network hardware provides such as routing, NAT and
    DHCP, and static IP association. IT is also equipped with an intelligent system
    that helps redirect traffic in case of a failure or overload, to help maintain
    a better networking capacity. OpenStack networking not only supports automated
    network management but also offers its users the capacity to manage their network
    manually by adjusting their proper connections, and connect servers and terminals
    to each other as required. Users can also take advantage of **Software-defined
    networking** (**SDN**) technology for a multi-tenancy configuration and massive
    scale such as OpenFlow. It also offers support for advanced networking services
    architecture from multiple common vendors. Finally, it offers an advanced extension
    that integrates common network administration techniques such as VPN for private
    connection, IDS for reinforcing security, load balancing, firewalls for setting
    access rules, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: OpenStack storage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OpenStack storage is the data storage services offered by OpenStack inside its
    architecture. Through its fully distributed API storage platform, cloud applications
    can access storage space through multiple technologies and architectures (archiving,
    backup, data retention). Storage with OpenStack is always scalable, to answer
    the user and application's demands, by allowing block devices to be added to each
    other and assuring a better performance. OpenStack storage has the capacity to
    be integrated with enterprise storage platforms such as SolidFire and NetApp.
  prefs: []
  type: TYPE_NORMAL
- en: Components of OpenStack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OpenStack is a very big platform that has many small components, assuring the
    full functionality of its services. Most of those components are made by the open
    source community to help meet the needs of its users. For this section, we are
    going to talk about the OpenStack community components as part of its core. What
    characterizes those components are that they are maintained by the OpenStack community,
    to be presented as part of the solution.
  prefs: []
  type: TYPE_NORMAL
- en: '![Components of OpenStack](img/B04674_07_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://redhatstackblog.redhat.com/](http://redhatstackblog.redhat.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'These components are described as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Horizon**: This is the component responsible of setting up the OpenStack
    dashboard. It is from where the OpenStack administrator manages the infrastructure.
    It is the only graphical interface OpenStack has, so far. Horizon provides a look
    into what is happening in the cloud infrastructure and gives to the system administrators
    some functionality to manage it. On the other hand, the dashboard does not support
    developer''s access. There is always an **application-programming interface**
    (**API**) where they can access resources and other aspects of the cloud.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Nova**: This is OpenStack''s primary computing engine. It is the main component
    responsible for deploying and managing the virtual machines of the cloud infrastructure,
    rather than just being a small infrastructure or a grid of super computers. It
    also manages and organizes other instances such as handling cloud-computing tasks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Neutron**: This is OpenStack''s networking component. It is basically the
    one essential part to ensure networking between different components of the cloud
    infrastructure. It also supports multiple technologies to make sure that communication
    is reliable.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Keystone**: This is the service responsible for identifying management for
    OpenStack. It organizes the users using the cloud and also organizes their access
    permissions. It organizes the resources which they are using. It is also a great
    help for the developer for tracking user usage and access methods.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Swift**: This is the component responsible of the storage system for OpenStack.
    It stores the data in an advanced method where the developers only specify the
    file as a piece of information, and OpenStack decides where to store that, which
    helps with scaling and resolves storage capacity issues. It makes most of the
    common tasks, such as backup and security, the responsibility of the system more
    than the developer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cinder**: This is a smaller storage component that organizes block storage.
    It helps with the enhancement of data access in the disk drive and organizes in
    traditional ways the speed of data access depending on the need.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Heat**: This is the OpenStack orchestration component. It is a method to
    store information about cloud applications where it has defined the resources
    needed for that application for better organization of the cloud infrastructure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Glance**: This is the component that organizes the virtual copies of the
    hard disks, what are known as images, to be used later as templates for deploying
    new virtual machines.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ceilometer**: This is the component that helps with the billing services
    for cloud usage by individual users. It acts as a meter that reports the system
    usage during the period where the user starts using the cloud.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These components are very important where some of them depend on the other,
    and many basic cloud services won't be available if some of them become disabled
    or excluded. One of the components that is very important is the orchestration
    component where it helps organize a large number of machines and perform high-computer
    processing without any difficulty.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and configuring OpenStack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After a brief explanation of cloud computing and OpenStack, we can now move
    on to OpenStack installation on a CentOS 7 Linux server. First of all, we are
    going to make a few basic environment configurations and then set it up.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this installation, we will have our cloud infrastructure as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The Router/Gateway server as *e*th machine to provide Internet access to the
    external websites, with the IP address: `10.0.1.1`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The cloud server to host OpenStack, with the IP address: `10.0.1.2`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The hosts that will be used for the cloud computing, with their IP addresses
    as follows: `10.0.1.4`, `10.0.1.5`, `10.0.1.6`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To have OpenStack well secured, the community integrated many services to ensure
    that some of those services secure data access and user authentication with encrypted
    data transmission. For this action, we will need to have OpenSSL installed on
    our cloud server so that OpenStack can use it to run its services:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'To have a safe installation without errors, we need to disable the firewall,
    if there is one, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we need to make sure that the server is connected to the local network
    and has Internet access. To do so, we need to ping one machine at the local network
    and a nicely working web server ([https://www.google.co.in/](https://www.google.co.in/)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The result of the test should look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Then we need to add all the nodes involved (controller node, network node,
    compute node, object storage node, and block storage node):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, to have the nodes well synchronized among each other, we need to set
    up a time server to configure a time for all the servers. To do this, we will
    be using the NTP service. First, however, we need to install it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we need to start it and make it run at system startup:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'To verify the installation, we need to use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'To see the output of this command, have a look at the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'To see the output of this command, refer to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We need to see `sys.peer` in the condition column at any line.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We need to do the same for all the involved nodes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we put SELinux into permissive mode:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Then consider this line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Change it to the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Then we should reboot the system so that the change can take effect.
  prefs: []
  type: TYPE_NORMAL
- en: 'After the system starts up, we can move on to the package source configuration.
    First, we need to make sure that our system packages are all updated:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we install the `epel` repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we check whether the additional EPEL repository is enabled:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'We need to make sure that all modules `([epel] [epel-debuginfo] [epel-source]`)
    are enabled:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we proceed to install the YUM plugin priorities to enable assignment of
    relative priorities within repositories:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we can set up the OpenStack repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'To make OpenStack automatically manage security policies for its services,
    we need to install the OpenStack-SELinux package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Just before installing the official package for the OpenStack service, we will
    be installing some tools needed for the SELinux policies for OpenStack of our
    cloud-computing platform. We will first install the database server. For that,
    we will have the Python MySQL library and the MariaDB server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'After having MariaDB installed, we need to go ahead and configure it. First,
    we need to start the database server and add it to the system startup:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: By default, OpenStack is installed with a no password policy for the root. We
    need to change that during the first use, while performing a secure setup.
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, we have properly set all the required tools and configurations.
    We can start the OpenStack package installation. We can install each OpenStack
    component individually, or make it faster by installing and configuring them all
    at the same time. To do so, we will be using the `yum` package manager:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'For a single-node OpenStack deployment, we should use the following command
    to configure it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: We should see a message that starts as follows to conclude that the installation
    is done correctly and the configuration has been started properly. This may take
    some time to finish.
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The following screen appears if the configuration is done properly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After getting the configuration done, there will be two authentication credentials
    generated to be used by the administrator. The first is for the Nagios Server.
    The login and the password will appear on the screen, so we need to save them
    to change the password later. The second one is for the OpenStack dashboard, which
    will be stored in a file at the `root` directory, called `keystonerc_admin`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first of the two web interfaces should look like this as a confirmation
    that the node is running:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The second interface looks like what is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we can move on to the network-bridging configuration. We need to create
    a bridge interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'After creating the file, we need to put the following code into it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we add the following lines to the Neutron configuration file to look like
    the following in the `[ovs]` module:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we restart the network:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: The following part is optional, wherein we are going to show in detail what
    happens if we run the manual way and not the automatic interactive way.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we want to deploy other nodes manually, we should be using `packstack` with
    the `--install-hosts` option and then put the other host IP address:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'If there are many hosts, we can add a comma (,) between the IP addresses:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'While this command is executed, we will be asked to type the root password
    from each system individually to connect to the system, install OpenStack, and
    take control over it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'We know that the installation is done when we see the following message:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'An answer file containing all the chosen configuration options is saved to
    the disk in the system from which we run `packstack`. This file can be used to
    automate future deployments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'A file containing the authentication details of the OpenStack admin user is
    saved to the disk in the system on which the OpenStack client tools were deployed.
    We will need these details to manage the OpenStack environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'We can run `packstack` interactively to create both single-node and multiple-node
    OpenStack deployments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: After running this command, we need to follow the list of steps to have the
    nodes deployed.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, it will ask for the public key to be stored in the server to get automatic
    SSH access, so we need to have one generated already:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we give its location, which is `~/.ssh/id_rsa.pub`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we select the services that we need to deploy. We can choose whatever
    we need:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Each selected service can be deployed on either a local or a remote system.
    Where each service is deployed will be determined based on the IP addresses that
    we provide later in the deployment process.
  prefs: []
  type: TYPE_NORMAL
- en: 'OpenStack includes a number of client tools. Enter `y` to install the client
    tools. A file containing the authentication values of the administrative user
    will also be created:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'Optionally, the `packstack` script will configure all servers in the deployment
    to retrieve date and time information using the **Network Time Protocol** (**NTP**).
    To use this facility, enter a comma-separated pool of NTP servers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'Optionally, the `packstack` script will install and configure Nagios to provide
    advanced facilities for monitoring the nodes in the OpenStack environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: We now move on to the configuration of the MySQL Instance. OpenStack services
    require a MySQL database to store data in. To configure the database, we go through
    the following.
  prefs: []
  type: TYPE_NORMAL
- en: 'We type the IP address of the server to deploy the MySQL database server on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'Enter the password to be used for the MySQL administrative user. If we do not
    enter a value, it will be generated randomly. The generated password will be available
    in both the `~/.my.cnf` file of the current user and the answer file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'OpenStack services use the Qpid messaging system to communicate. Enter the
    IP address of the server to deploy Qpid on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'OpenStack uses keystone (openstack-keystone) for identity, token, catalog,
    and policy services. If the keystone installation has been selected, then enter
    the IP address of the server to deploy keystone on when prompted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'OpenStack uses glance (`openstack-glance-*`) to store, discover, and retrieve
    virtual machine images. If the glance installation has been selected, then enter
    the IP address of the server to deploy glance on when prompted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'To provide volume storage services, OpenStack uses Cinder (`openstack-cinder-*`).
    Enter the IP address of the server to deploy Cinder on. If the installation of
    the volume services was selected, then these additional configuration prompts
    will be presented:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: The `packstack` utility expects the storage for use with Cinder to be available
    in a volume group named cinder-volumes. If this volume group does not exist, then
    we will be asked whether we want it to be created automatically.
  prefs: []
  type: TYPE_NORMAL
- en: 'Answering `yes` means that `packstack` will create a raw disk image in `/var/lib/cinder`
    and mount it for use by Cinder using a loopback device:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'If we chose to have packstack create the cinder-volumes volume group, then
    we will be prompted to enter its size in **gigabytes** (**GB**):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: OpenStack uses Nova to provide compute services. Nova is itself made up of a
    number of complementary services that must be deployed. If the installation of
    the compute services was selected, then these additional configuration prompts
    will be presented.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Nova API service (`openstack-nova-api`) provides web service endpoints
    for authenticating and interacting with the OpenStack environment over HTTP or
    HTTPS. We type the IP address of the server to deploy the Nova API service on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'Nova includes a certificate management service (`openstack-nova-cert`). Enter
    the IP address of the server to deploy the Nova certificate management service
    on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'The Nova VNC proxy provides facilities to connect users of the Nova compute
    service to their instances running in the OpenStack cloud. Enter the IP address
    of the server to deploy the Nova VNC proxy on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'The `packstack` script is able to deploy one or more compute nodes. Enter a
    comma-separated list containing the IP addresses or hostnames of all the nodes
    that you wish to deploy compute services on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'A private interface must be configured to provide DHCP services on the Nova
    compute nodes. Enter the name of the private interface to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'The `Nova` network service (`openstack-nova-network`) provides network services
    for compute instances. Enter the IP address of the server to deploy the `Nova`
    network service on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'A public interface must be configured to allow connections from other nodes
    and clients. Enter the name of the public interface to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: 'A private interface must be configured to provide DHCP services on the Nova
    network server. Enter the name of the private interface to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'All compute instances are automatically assigned a private IP address. Enter
    the range within which these private IP addresses must be assigned:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'Compute instances can optionally be assigned publicly accessible floating IP
    addresses. Enter the range within which floating IP addresses will be assigned:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: 'The Nova scheduler (`openstack-nova-scheduler`) is used to map compute requests
    to compute resources. Enter the IP address of the server on which you want to
    deploy the `Nova` scheduler:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: In the default configuration, Nova allows `overcommitment` of physical CPU and
    memory resources. This means that more of these resources can be made available
    for running instances than actually physically exist on the compute node.
  prefs: []
  type: TYPE_NORMAL
- en: The amount of `overcommitment` that is permitted is configurable.
  prefs: []
  type: TYPE_NORMAL
- en: 'The default level of CPU `overcommitment` allows 16 virtual CPUs to be allocated
    for each physical CPU socket or core that exists on the physical compute node.
    Press *Enter* to accept the default level or enter a different value if desired:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 'The default level of memory over commitment allows up to 50% more virtual memory
    to be allocated than what exists on the physical compute node. Press *Enter* to
    accept the default or enter a different value if desired:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'If installation of the client tools was selected then enter the IP address
    of the server to install the client tools on when prompted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: OpenStack uses Horizon (`openstack-dashboard`) to provide a web-based user interface
    or dashboard for access to OpenStack services, including Cinder, Nova, Swift,
    and Keystone. If the installation of the Horizon dashboard was selected then these
    additional configuration values will be requested.
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter the IP address of the server to deploy Horizon on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'To enable `HTTPS` communication with the dashboard, we enter `y` when prompted.
    Enabling this option ensures that user access to the dashboard is encrypted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: If we have already selected to install `Swift` object storage, then these additional
    configuration values will be requested.
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter the IP address of the server that is to act as the Swift proxy. This
    server will act as the public link between clients and the Swift object storage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: 'Enter a comma-separated list of devices that the Swift object storage will
    use to store objects. Each entry must be specified in HOST/DEVICE format, where
    the Host is replaced by the IP address of the host the device is attached to,
    and Device is replaced by the appropriate path to the device:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: The `Swift` object storage uses zones to ensure that each replica of a given
    object is stored separately. A zone might represent an individual disk drive or
    array, a server, all the servers in a rack, or even an entire data center.
  prefs: []
  type: TYPE_NORMAL
- en: 'When prompted, enter the number of Swift storage zones that must be defined.
    Note that the number provided must not be bigger than the number of individual
    devices specified, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: The Swift object storage relies on replication to maintain the state of objects,
    even in the event of a storage outage in one or more of the configured storage
    zones. Enter the number of replicas that Swift must keep of each object when prompted.
  prefs: []
  type: TYPE_NORMAL
- en: 'A minimum of three replicas is recommended to ensure a reasonable degree of
    fault tolerance in the object store. Note, however, that the number of replicas
    specified must not be greater than the number of storage zones, as it would result
    in one or more of the zones containing multiple replicas of the same object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: 'Currently, `packstack` supports the use of either `Ext4` or `XFS` file systems
    for object storage. The default and recommended choice is `ext4`. Enter the desired
    value when prompted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: 'The `packstack` utility allows us to configure the target servers to retrieve
    software packages from a number of sources. We can leave this part blank to rely
    on the nodes'' default package sources:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: 'At this point, we will be asked to confirm the deployment details that we provided.
    Type yes and press *Enter* to continue with the deployment. Then, it will show
    us all the information already provided during the entire phase. After verifying
    that everything is set properly, we type yes for the following question:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: Now, `packstack` will commence deployment. Note that when `packstack` is setting
    up SSH keys, it will prompt us to enter the root password to connect to machines
    that are not already configured to use key authentication.
  prefs: []
  type: TYPE_NORMAL
- en: 'Applying the Puppet manifests to all machines involved in the deployment takes
    a significant amount of time. The `packstack` utility provides continuous updates,
    indicating which manifests are being deployed as it progresses through the deployment
    process. Once the process completes, a confirmation message will be displayed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: The configuration details that we provided are also recorded in an answer file,
    which can be used to recreate the deployment in future. This answer file is stored
    in `~/answers.txt` by default.
  prefs: []
  type: TYPE_NORMAL
- en: With this step, we can say that we have nicely installed and configured OpenStack
    as a cloud-computing solution to be used inside a little infrastructure of CentOS
    7 Linux servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'The OpenStack dashboard will be our best way to have a better and clean way
    to visualize useful information about the status of the cloud infrastructure.
    It is extremely useful for system administrators to maintain the infrastructure
    and troubleshoot the system for any issues. Here are some screenshots that show
    some of the dashboard overview pages:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://dachary.org/?p=2969](http://dachary.org/?p=2969)'
  prefs: []
  type: TYPE_NORMAL
- en: The following page presents the list of the running machines (nodes) with some
    useful information about the nodes, and also gives us some options to manage them.
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://assist-software.net](http://assist-software.net)'
  prefs: []
  type: TYPE_NORMAL
- en: Then we shall see the network page that shows the topology of the network holding
    the cloud nodes.
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://4.bp.blogspot.com](http://4.bp.blogspot.com)'
  prefs: []
  type: TYPE_NORMAL
- en: 'There is another Nova API dashboard with a better-designed interface to be
    used for presentation and a gigantic dashboard screen used specially for monitoring
    big grid computer infrastructure. The first dashboard screen shows information
    about the API''s in use:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://openstack-in-production.blogspot.com](http://openstack-in-production.blogspot.com)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The second dashboard screen shows the history of execution of those API as
    well presented log:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring OpenStack](img/B04674_07_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://openstack-in-production.blogspot.com](http://openstack-in-production.blogspot.com)'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, let''s have a look at the references used throughout the chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'What is cloud computing?, IBM: [http://www.ibm.com/cloud-computing/what-is-cloud-computing.html](http://www.ibm.com/cloud-computing/what-is-cloud-computing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'OpenStack home page: [https://www.openstack.org/](https://www.openstack.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'OpenStack platform for Redhat: [https://access.redhat.com/documentation/en/](https://access.redhat.com/documentation/en/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter was a description of how to have an open source cloud-computing
    solution within a small or large computer infrastructure. We started by defining
    the concept of cloud computing, and then we introduced OpenStack and described
    its components in brief. We showed a practical way to set up and configure an
    OpenStack node using—by choice—all of its components.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you are going to learn automatic system configuration using
    one of the most recent tools that does this in a well-organized way—Puppet.
  prefs: []
  type: TYPE_NORMAL
