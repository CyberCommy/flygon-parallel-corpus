- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have come a long way since 2010, when AngularJS was first released. Internet
    wasn't really made to be an application platform but one for rendering static
    pages. This has, of course, changed as developers have started treating it more
    and more as their main application platform. The promise of reaching billions
    of people has been too enticing. This meant that the web had to grow up. Different
    approaches have been tried during the years, such as JSP, GWT, Web Forms for .NET,
    and so on—approaches that have been more or less successful. What is clear is
    that when AngularJS showed up, it was greeted as a savior. It made it super easy
    for everyone to quickly create an application with JavaScript, CSS, HTML, and
    even use AJAX. It's still a valid choice for building small to medium applications.
  prefs: []
  type: TYPE_NORMAL
- en: The easier something is to use, the more likely it is that people will treat
    it like ketchup and start adding more and more to it to and use it everywhere.
    AngularJS was never meant for large enterprise applications. The Internet progressed
    and more and more features became available in the browser. There was an idea
    of wanting to incorporate all these new features but also to ensure that AngularJS
    could be used for really large applications. A decision was taken that it would
    be easier to start over from scratch and create Angular, the successor of AngularJS.
    And so, on 14 September 2016, the release version of Angular saw the light of
    day. Since then major versions of Angular have been produced at a furious pace.
  prefs: []
  type: TYPE_NORMAL
- en: We are now on version 5\. This does not mean that Angular core concepts have
    changed, they have been retained. Certain breaking changes have been introduced
    along the way, but every major version has firstly corrected bugs, introduced
    new features, and really aimed at making Angular apps as fast as possible and
    their footprint as small as possible. This is a worthy goal to have in today's
    mobile-first world.
  prefs: []
  type: TYPE_NORMAL
- en: This book aims to introduce the reader to all the major facets of Angular, and
    show you how to build small, medium, and, even, large applications. You don't
    need much knowledge to get started with Angular applications, but there are many
    layers to it. As your app grows in size, you will want to care about making it
    prettier, faster, easier to maintain, and so on. This book is written with that
    in mind. Take your time reading this book. If you want to read a few chapters
    and build some apps, do it. If you want to jump straight into the more advanced
    features, then that is your prerogative.
  prefs: []
  type: TYPE_NORMAL
- en: We hope you will enjoy reading this book as much as we enjoyed writing it
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](17474bca-f7f9-41ec-ab4c-5f7ac741c0c9.xhtml)*, Creating our First
    Component in* *Angular*, covers Semantic versioning. This is an important concept
    to grasp, so you know whether to adopt new releases based on your needs. This
    chapter also introduces the reader to the Angular CLI and the reader will be taking
    their first steps into writing an Angular application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](e5dc9ecb-2ec0-45aa-aa64-52467898b019.xhtml)*, IDEs and Plugins*, introduces
    you to the most popular IDEs. The most common Angular plugins and snippets are
    also described to further boost developer productivity.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](9b3ddd80-6ddf-43e5-92d7-a9260c11ff6d.xhtml)*, Introducing TypeScript*,
    introduces TypeScript, which is the chosen language for coding Angular apps. There
    is more to TypeScript than just adding types. Your code can be made elegant and
    more secure, and using the right features will save you from typing quite a lot.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](41335dde-9066-4998-a0a9-3c42f97cdd9e.xhtml)*, Implementing Properties
    and Events in our Components*, covers how to send data to components and how to
    bind methods to them so that the components have the ability to communicate upstream.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](3df2cad2-baa6-4076-a6ab-d84247af7817.xhtml)*, Enhancing our Component
    with Pipes and Directives*, shows how you can make your component more consistent
    and reusable with the help of pipes and directives.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](93b8f637-859e-4e12-aaa0-4cec5f02c2c3.xhtml)*, Building an Application
    with Angular Components*, dives right into our goal of building a real application.
    We address how to think and how to use the most common structural directives in
    order to control how the data should be displayed and act when being manipulated
    by UI elements.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](113fea8a-41c0-4884-95ad-ac95ee0c4c65.xhtml)*, Asynchronous Data
    Services with Angular*, introduces the RxJS library, which not only helps us with
    AJAX but also facilitates reactive application patterns. All things async become
    one concept under RxJS, the possibilities that this introduces are endless.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](4cc5fdc3-7b34-4de6-8d09-521dc2be94d3.xhtml)*, Firebase*, explains Firebase,
    which is a product by Google that allows you to have backend as a service. Firebase
    lets you focus on building Angular apps while it takes care of almost everything
    else. The best part is Firebase''s reactive nature, which makes chat-like applications
    as well as collaboration apps a breeze to create.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](045e7ed3-be74-493b-8f4c-9be9f9f3f66b.xhtml)*, Routing*, explains
    the concept of routing, so you can scale your application seamlessly.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](19502d3a-f6dd-4811-9a2f-5dcc82f3c03c.xhtml), *Forms in Angular*, covers
    the two main ways of dealing with forms and user input: template-driven and the
    reactive approach.'
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 11*, Angular Material*, takes you through Angular Material, which not
    only offers a beautiful interface but also comes with a bunch of components that
    will make it a piece of cake to quickly assemble an impressive application.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](ab275261-c3eb-4fa2-af33-fe5c09c34246.xhtml)*, Animating Components
    with Angular*,covers how well Angular supports the developer in leveraging and
    controlling quite advanced animations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](a8f48fa6-3778-4737-8d08-ae3bdc1a06f7.xhtml)*, Unit Testing in
    Angular*, explains unit testing in Angular. The Angular team has really added
    first-class support for testing, so you, with a very few lines of code, are able
    to test all the possible constructs your mind can dream up. Everything from component,
    service, and directives to E2E testing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix A](5eb3c7a4-c275-42eb-aba6-0957c32c9a5a.xhtml),* SystemJS*, covers
    SystemJS, which is a module loader and used to be the only way to set up an Angular
    application. It''s still a valid way to set up your project. This Appendix will
    cover the core parts of SystemJS and zoom in on the Angular set up bit in particular.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix B](442be8c1-c292-401e-9c00-d34098ff619e.xhtml),* Webpack with Angular*, aims
    at showing the developer how to set up your Angular project with Webpack. There
    definitely exists a user base that wants complete control of every aspect of a
    web project. If that is you, then this appendix is for you.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To really appreciate this book, we assume that you are familiar with HTML, CSS,
    and JavaScript, to a certain degree, as well as calling services with AJAX. We
    also assume that you have a fair understanding of REST. Modern web application
    development has become quite a daunting task, but it is our hope that you will,
    after having read this book, feel that you understand more about what's going
    on, and that you will also feel more than able to take on your next web development
    project using Angular.
  prefs: []
  type: TYPE_NORMAL
- en: As you will spend most of your time writing JavaScript, HTML, or CSS code, we
    only assume that you have access to a decent text editor. The more accomplished
    editor you use, the more help you will get, which is why we introduce some plugins
    and best practices in this book to make your everyday work less painful.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for web developers with no prior knowledge of Angular
    but who are experienced in JavaScript, Node.js, HTML, and CSS and are reasonably
    familiar with the idea of Single Page Applications.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning. Code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles are shown as follows: "Import the reactive `Forms` module."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "We go to the Database menu option on our left."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
