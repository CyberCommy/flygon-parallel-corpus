- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since CFEngine was first created by Mark Burgess in 1993, configuration management
    tools have been constantly evolving. Followed by the emergence of more modern
    tools such as Puppet and Chef, there are now a large number of choices available
    to a system administrator.
  prefs: []
  type: TYPE_NORMAL
- en: Ansible is one of the newer tools to arrive into the configuration management
    space. Where other tools have focused on completeness and configurability, Ansible
    has bucked the trend and, instead, focused on simplicity and ease of use.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we aim to show you how to use Ansible from the humble beginnings
    of its CLI tool, to writing playbooks, and then managing large and complex environments.
    Finally, we teach you how to build your own modules and extend Ansible by writing
    plugins that add new features.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Getting Started with Ansible"), *Getting
    Started with Ansible*, teaches you the basics of Ansible, how to install it on
    Windows and Linux, how to build an inventory, how to use modules, and, most importantly,
    how to get help.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Simple Playbooks"), *Simple Playbooks*, teaches
    you how to combine multiple modules to create Ansible playbooks to manage your
    hosts, it also covers a few useful modules.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Advanced Playbooks"), *Advanced Playbooks*,
    delves deeper into Ansible''s scripting language and teaches you more complex
    language constructs; here we also explain how to debug playbooks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Larger Projects"), *Larger Projects*, teaches
    you the techniques to scale Ansible''s configurations to large deployments using
    many complicated systems, including how to manage various secrets you may use
    to provision your systems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Custom Modules"), *Custom Modules*, teaches
    you how to expand Ansible beyond its current capabilities by writing both modules
    and plugins.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To use this book, you will need at least the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A text editor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A machine with the Linux operating system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python 2.6.x or Python 2.7.x
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However, to use Ansible to its full effect, you should have several Linux machines
    available to be managed. You can use a virtualization platform to simulate many
    hosts, if required. To use the Windows modules, you will need both a Windows machine
    to be managed and a Linux machine to be the controller.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for people who want to understand the basics of how Ansible
    works. It is expected that you have rudimentary knowledge of how to set up and
    configure Linux machines. In parts of the book, we cover the configuration files
    of BIND, MySQL, and other Linux daemons; a working knowledge of these would be
    helpful, but is certainly not required.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish among
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "This
    is done in a similar way using the `vars_files` directive."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "clicking the **Next** button moves you to the next screen".'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
