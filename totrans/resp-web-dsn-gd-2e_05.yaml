- en: Chapter 5. Developing a Portfolio Website with Bootstrap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Bootstrap ([http://getbootstrap.com/](http://getbootstrap.com/)) is one of
    the sturdiest frontend development frameworks. It ships with amazing features,
    such as a responsive grid, user interface components, and JavaScript libraries
    that let us build responsive websites up and running quickly.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Bootstrap is so popular that the web development community positively supports
    it by developing extensions in a variety of forms to add extra features. In case
    the standard features that come with Bootstrap are not sufficient, there can be
    an extension to cover your particular requirements.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*In this chapter, we will start our second project. We will employ Bootstrap
    to build a responsive portfolio website. So, this chapter apparently would be
    useful for those who work in creative fields such as photography, graphic design,
    and illustrating.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Herein, we will also employ a Bootstrap extension to empower the portfolio
    website with off-canvas navigation. Following Bootstrap, we will turn to LESS
    as the foundation of the website style sheets.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Let''s move on.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The discussion that we are going to cover in this chapter will include the
    following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Explore Bootstrap components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Look into the Bootstrap extension to bring off-canvas navigation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Examine the portfolio website blueprint and design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set up and organize the project directories and assets with Bower and Koala
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Construct the portfolio website HTML structure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Bootstrap components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unlike the Responsive.gs framework that we used in the first project, Bootstrap
    is shipped with extra components, which are commonly used in the Web. Hence, before
    we step further into developing the portfolio website, first let's explore these
    components, mainly those of which we will employ within the website, such as the
    responsive grid, the buttons, and the form elements.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Frankly, the official Bootstrap website ([http://getbootstrap.com/](http://getbootstrap.com/))
    is always the best source to be up-to-date with anything related to Bootstrap.
    So, herein, I would like to point out the key things that are straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: The Bootstrap responsive grid
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Bootstrap comes with a Responsive Grid System, along with the supporting classes
    that form the columns and the rows. In Bootstrap, we build the column using these
    prefix classes: `col-xs-`, `col-sm-`, `col-md-`, and `col-lg-`. This is then followed
    by the column number, ranging from `1` to `12`, to define the column size as well
    as to aim the column for a specific viewport size. See the following table for
    more detail on the prefixes:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Prefix | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `col-xs-` | This specifies the column for the Bootstrap-defined smallest
    (extra small) viewport size, which is equal to or less than 768 px |'
  prefs: []
  type: TYPE_TB
- en: '| `col-sm-` | This specifies the column for the Bootstrap-defined small viewport
    size, which is equal to or greater than 768 px. |'
  prefs: []
  type: TYPE_TB
- en: '| `col-md-` | This specifies the column for the Bootstrap-defined medium viewport
    size, which is equal to or greater than 992 px |'
  prefs: []
  type: TYPE_TB
- en: '| `col-lg-` | This specifies the column for the Bootstrap-defined large viewport
    size, which is equal to or greater than 1,200 px |'
  prefs: []
  type: TYPE_TB
- en: 'In the following example, we set out three columns in a row, with each column
    assigned a `col-sm-4` class:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'So, each column will have the same size, and they will scale down up to the
    Bootstrap-defined small viewport size (≥ 768px). The following screenshot shows
    how the preceding markup turns out in the browser (by adding a few styles):'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Bootstrap responsive grid](img/image00282.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'View the example in the viewport size, which is smaller than 768 px, and all
    these columns will start to stack up—the first column at the top and the third
    column at the very bottom, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Bootstrap responsive grid](img/image00283.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Furthermore, we can add multiple classes to specify the column proportion within
    multiple viewport sizes, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Given the preceding example, the columns will have the same size within the
    Bootstrap-defined large viewport size (≥ 1,200 px), as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Bootstrap responsive grid](img/image00284.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The column proportion then starts to shift when we view it in the medium viewport
    size following the assigned classes on each column. The first column width will
    become smaller, the second column will retain the same proportion, while the third
    column will be larger, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Bootstrap responsive grid](img/image00285.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The column proportion will start to shift again when the website is at the
    threshold of the Bootstrap-defined medium- and small-viewport size, which is approximately
    at 991px, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Bootstrap responsive grid](img/image00286.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For further assistance on constructing a Bootstrap grid, head over to the Grid
    System section of the Bootstrap official website ([http://getbootstrap.com/css/#grid](http://getbootstrap.com/css/#grid)).
  prefs: []
  type: TYPE_NORMAL
- en: Bootstrap buttons and forms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Other components that we will incorporate into the website are buttons and
    forms. We will create an online contact through which users will be able get in
    touch. In Bootstrap, the button is formed with the `btn` class followed by `btn-default`
    to apply Bootstrap default styles, as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Replace the `btn-default` class with `btn-primary`, `btn-success`, or `btn-info`
    to give the buttons the colors specified, as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The code snippet defines the button size with these classes: `btn-lg` to make
    the button large, `btn-sm` to make it small, and `btn-xs` to make the button even
    smaller, as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows how the button-size changes with the look, when
    the preceding classes are added:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bootstrap buttons and forms](img/image00287.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Bootstrap allows us to display buttons in a number of ways, such as displaying
    a series of buttons inline together or adding a dropdown toggle in a button. For
    further assistance and details on constructing these types of buttons, head over
    to the button groups ([http://getbootstrap.com/components/#btn-groups](http://getbootstrap.com/components/#btn-groups))
    and the button dropdown ([http://getbootstrap.com/components/#btn-dropdowns](http://getbootstrap.com/components/#btn-dropdowns))
    sections of Bootstrap's official website.
  prefs: []
  type: TYPE_NORMAL
- en: '![Bootstrap buttons and forms](img/image00288.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Bootstrap buttons groups and buttons with a dropdown toggle
  prefs: []
  type: TYPE_NORMAL
- en: 'Bootstrap also provided a handful of reusable classes to style the form elements,
    such as `<input>` and `<textarea>`. To style the form elements, Bootstrap uses
    the `form-control` class. The style is light and decent, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bootstrap buttons and forms](img/image00289.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: For more information regarding styling and arranging the form element in Bootstrap,
    refer to the form section of the Bootstrap official page ([http://getbootstrap.com/css/#forms](http://getbootstrap.com/css/#forms)).
  prefs: []
  type: TYPE_NORMAL
- en: Bootstrap Jumbotron
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Bootstrap describes Jumbotron as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"A lightweight, flexible component that can optionally extend the entire viewport
    to showcase key content on your site" ([http://getbootstrap.com/components/#jumbotron](http://getbootstrap.com/components/#jumbotron))*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Jumbotron is a special section to display the website''s first-line message,
    such as the marketing copy, catchphrases, or special offers, and additionally
    a button. Jumbotron is typically placed above the fold and below the navigation
    bar. To construct a Jumbotron section in Bootstrap, apply the `jumbotron` class,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'With the Bootstrap default styles, the following is how the Jumbotron looks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bootstrap Jumbotron](img/image00290.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: This is the Jumbotron appearance with the default style
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Further details about Bootstrap Jumbotron can be found in the Bootstrap components
    page at [http://getbootstrap.com/components/#jumbotron](http://getbootstrap.com/components/#jumbotron).
  prefs: []
  type: TYPE_NORMAL
- en: Bootstrap third-party extensions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It's impossible to cater to everyone's needs, and the same thing applies to
    Bootstrap as well. A number of extensions are created in many forms—from CSS,
    JavaScript, icons, starter templates, and themes—to extend Bootstrap. Find the
    full list on this page ([http://bootsnipp.com/resources](http://bootsnipp.com/resources)).
  prefs: []
  type: TYPE_NORMAL
- en: 'In this project, we will include an extension named Jasny Bootstrap ([http://jasny.github.io/bootstrap/](http://jasny.github.io/bootstrap/)),
    developed by Arnold Daniels. We will use it primarily to incorporate off-canvas
    navigation. The off-canvas navigation is a popular pattern in responsive design;
    the menu navigation will first set off the visible area of the website and will
    only slide-in typically by clicking or tapping, as illustrated in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bootstrap third-party extensions](img/image00291.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The off-canvas section slide-in when users click on the three-stripe icon
  prefs: []
  type: TYPE_NORMAL
- en: Jasny Bootstrap off-canvas
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Jasny Bootstrap is an extension that adds extra building blocks to the original
    Bootstrap. Jasny Bootstrap is designed with Bootstrap in mind; it follows Bootstrap
    conventions in almost every aspect of it, including the HTML markups, the class
    naming, and the JavaScript functions as well as the APIs.
  prefs: []
  type: TYPE_NORMAL
- en: 'As mentioned, we will use this extension to include off-canvas navigation in
    the portfolio website. The following is an example code snippet to construct off-canvas
    navigation with Jasny Bootstrap:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: As you can see from the preceding code snippet, constructing off-canvas navigation
    requires a bunch of HTML elements, classes, and attributes in the mix. To begin
    with, we need two elements, `<nav>` and `<div>`, to contain respectively the menu
    and the button to toggle the navigation menu on and off. The `<nav>` element is
    given an ID as a unique reference of which menu to target via the `data-target`
    attribute in `<button>`.
  prefs: []
  type: TYPE_NORMAL
- en: 'A handful of classes and attributes are added within these elements to specify
    the colors, backgrounds, position, and functions:'
  prefs: []
  type: TYPE_NORMAL
- en: '`navmenu`: Jasny Bootstrap has a new type of navigation, called navmenu. The
    `navmenu` class will display the navigation vertically, and placed on the side—right-hand
    or left-hand—of the website content, instead of at the top.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`navmenu-default`: The class that will set the `navmenu` class with the default
    styles, which is dominated by light gray. Use the `navmenu-inverse` class instead
    if you prefer a dark color. Have a look at the following screenshot:![Jasny Bootstrap
    off-canvas](img/image00292.jpeg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Two default colors of off-canvas navigation
  prefs: []
  type: TYPE_NORMAL
- en: The `navmenu-fixed-left` class positions the navmenu on the left-hand side.
    Use the `navmenu-fixed-right` class to set it on the right-hand side instead.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `offcanvas` class is the prime class to set the navigation menu off the
    canvas.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `data-target="#offcanvas-nav"` code in `<button>` acts as a selector that
    refers to a specific navigation menu with the given ID.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `data-toggle="offcanvas"` code tells the button to toggle the off-canvas
    navigation. In addition, the original Bootstrap ships with several types of `data-toggle`
    to hook up different widgets, such as the modal (`data-toggle="modal"`), dropdown
    (`data-toggle="dropdown"`), and tab (`data-toggle="tab"`).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The data-target="body" lets the website body slide along with the off-canvas
    navigation at the same time when being toggled on and off. Jasny Bootstrap calls
    it as push menu; follow this page ([http://jasny.github.io/bootstrap/examples/navmenu-push/](http://jasny.github.io/bootstrap/examples/navmenu-push/))
    to see it in action.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In addition, Jasny Bootstrap provides two extra types of off-canvas navigation,
    named slide-in menu ([http://jasny.github.io/bootstrap/examples/navmenu/](http://jasny.github.io/bootstrap/examples/navmenu/))
    and reveal menu ([http://jasny.github.io/bootstrap/examples/navmenu-reveal/](http://jasny.github.io/bootstrap/examples/navmenu-reveal/))—follow
    the inclusive URL to see them in action.
  prefs: []
  type: TYPE_NORMAL
- en: Digging into Bootstrap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Exploring every inch of Bootstrap component is beyond the capacity of this
    book. Hence, we only discussed a couple of things from Bootstrap that will be
    essential to the project. Aside from the Bootstrap official website ([http://getbootstrap.com/](http://getbootstrap.com/)),
    the following are a couple of dedicated references that dig deep into Bootstrap
    that you can look into:'
  prefs: []
  type: TYPE_NORMAL
- en: Bootstrap tutorials for beginners by Coder's Guide ([http://www.youtube.com/watch?v=YXVoqJEwqoQ](http://www.youtube.com/watch?v=YXVoqJEwqoQ)),
    a series of video tutorials that help beginners to get up and running with Bootstrap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Twitter Bootstrap Web Development How-To*, *David Cochran*, *Packt Publishing*
    ([http://www.packtpub.com/web-development/twitter-bootstrap-web-development-how-instant](http://www.packtpub.com/web-development/twitter-bootstrap-web-development-how-instant))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Mobile First Bootstrap*, *Alexandre Magno*, *Packt Publishing* ([http://www.packtpub.com/web-development/mobile-first-bootstrap](http://www.packtpub.com/web-development/mobile-first-bootstrap))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using font icons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Retina or **high-definition** (**HD**) display makes everything on the screen
    look sharper and more vibrant. But, the problem lies with the legacy images or
    web icons brought before the advent of HD display. These images typically are
    served as a bitmap or a raster image, and they turn blurry on this screen, as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using font icons](img/image00293.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: A series of icons that blur on the edges, as displayed in retina display
  prefs: []
  type: TYPE_NORMAL
- en: We do not want that to happen in our website, so we will have to use a font
    icon that is more scalable and stays sharp in a high-definition screen.
  prefs: []
  type: TYPE_NORMAL
- en: To tell the truth, Bootstrap ships with a font icon set called Glyphicon. Sadly,
    it does not come with the social media icons that we need. After going through
    a number of font-icon sets, I finally opted for Ionicons ([http://ionicons.com/](http://ionicons.com/)).
    Herein, we will use the alternative version that comes with LESS, which is developed
    by Lance Hudson ([https://github.com/lancehudson/ionicons-less](https://github.com/lancehudson/ionicons-less)),
    so we will be able to integrate with Bootstrap seamlessly, which also happens
    to use LESS.
  prefs: []
  type: TYPE_NORMAL
- en: Examining the portfolio website layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we start building the blocks and edges of the website, let's take a look
    the website wireframe. This wireframe will be the reference and give us the picture
    of how the website layout will be organized both in the mobile and desktop view.
  prefs: []
  type: TYPE_NORMAL
- en: '![Examining the portfolio website layout](img/image00294.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows the website layout for the desktop or—technically—the
    wide viewport size.
  prefs: []
  type: TYPE_NORMAL
- en: The website will have a button positioned at the top-left of the website with
    a so-called **hamburger** icon to slide in the off-canvas menu. Then comes the
    website's first line, which says the website name and a line of catchphrase. The
    subsequent section will contain the portfolio images, while the last section will
    contain an online form and social media icons.
  prefs: []
  type: TYPE_NORMAL
- en: 'The mobile view looks more simplified, yet maintaining the same logical structure
    as in the desktop view layout, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Examining the portfolio website layout](img/image00295.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Project directories, assets, and dependencies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's start off the project by organizing the project directories and assets
    that include the dependencies, images, and font icon.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: What is dependency? Dependency herein is a file or a package of files, such
    as CSS and JavaScript library, that is needed to run the project and build the
    website.
  prefs: []
  type: TYPE_NORMAL
- en: In this project, we will put Bower ([http://bower.io/](http://bower.io/)) into
    practice to organize the project dependencies. Bower, as we briefly mentioned
    in [Chapter 1](part0016.xhtml#aid-F8902 "Chapter 1. Responsive Web Design"), *Responsive
    Web Design*, is a frontend package manager that streamlines the way to install,
    remove, and update frontend development libraries, such as jQuery, Normalize,
    and HTML5Shiv.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – organizing project directories, assets, and installing project
    dependencies with Bower
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we are going to add the project dependencies that include the
    Bootstrap, Jasny Bootstrap, Ionicons, and HTML5Shiv. We will install them using
    Bower so that we are able to maintain them—remove and update them—more seamlessly
    in the future.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, since this might be the first time for many of you using Bower,
    I will walk you through the process at a slow pace, bit by bit. Please perform
    the following steps thoroughly:'
  prefs: []
  type: TYPE_NORMAL
- en: In the `htdocs` folder, create a new folder, and name it `portfolio`. This is
    the project directory, where we will add all project files and folders to.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the `portfolio` folder, create a new folder named `assets`. We will put the
    project assets, such as image, JavaScript, and style sheet in this folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the assets folder, create these following folders:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`img` to contain the website images and image-based icons'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`js` to contain the JavaScript files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fonts` to contain the font icon set'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`less` to contain the LESS style sheets'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`css` as the output folder of LESS'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create `index.html` as the website's main page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add the images for the website in the `img` folder; this includes the portfolio
    images and the icons for a mobile device, as shown in the following screenshot:![Time
    for action – organizing project directories, assets, and installing project dependencies
    with Bower](img/image00296.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This website has around 14 images including the icons for mobile devices. I
    would like to thank my friend Yoga Perdana ([https://dribbble.com/yoga](https://dribbble.com/yoga))
    for allowing me to use his wonderful work in this book. You can find these images
    bundled along with this book. But, certainly, you can replace them with your very
    own images.
  prefs: []
  type: TYPE_NORMAL
- en: We will install the dependencies—packages, libraries, JavaScript, or CSS that
    are required to run the project, as well as to build the website—through Bower.
    But, before running any Bower command to install the dependencies, we would like
    to set the project as a Bower project using the `bower init` command to define
    the project specification in `bower.json`, such as the project name, the version,
    and the author.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To begin with, open a terminal or command prompt if you are using Windows.
    Then, navigate to the project directory using the `cd` command, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In Windows: `cd \xampp\htdocs\portfolio`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In OS X: `cd /Applications/XAMPP/htdocs/portfolio`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In Ubuntu: `cd /opt/lampp/htdocs/portfolio`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type `bower init`, as shown in the following screenshot:![Time for action –
    organizing project directories, assets, and installing project dependencies with
    Bower](img/image00297.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This command, `bower init`, initiates our project as a Bower project. This command
    also leads to a number of prompts to fill to describe the project such as the
    project name, the project version, the author, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: First, we specify the project name. In this case, I would like to name the project
    `responsive-portfolio`. Type the name as follows, and press *Enter* to proceed.
    Have a look at the following screenshot:![Time for action – organizing project
    directories, assets, and installing project dependencies with Bower](img/image00298.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Specify the project version. Since the project is new, let's simply set it to
    `1.0.0`, as shown in the following screenshot:![Time for action – organizing project
    directories, assets, and installing project dependencies with Bower](img/image00299.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press *Enter* to proceed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Specify the project description. This prompt is entirely optional. You may leave
    it empty if you think it's not required for your project. In this case, I will
    describe the project as `a responsive portfolio website built with Bootstrap`,
    as shown in the following screenshot:![Time for action – organizing project directories,
    assets, and installing project dependencies with Bower](img/image00300.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Specify the main file of the project. This certainly will vary depending on
    the project. Herein, let's set the main file to `index.html`, the website's home
    page, as shown in the following screenshot:![Time for action – organizing project
    directories, assets, and installing project dependencies with Bower](img/image00301.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This prompts the question, "what types of modules does this package expose?"
    It specifies what the package is used for. In this case, simply select the global
    option, as shown in the following screenshot:![Time for action – organizing project
    directories, assets, and installing project dependencies with Bower](img/image00302.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press the Space Bar key to select it, and press *Enter* to continue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This prompt describes what the module technology in the project (our project)
    is meant for. Our project is not attached to a particular technology or module;
    it's just a plain static website with HTML, CSS, and a few lines of JavaScript.
    We are not building Node, YUI, or AMD modules. Thus, it is best to select the
    `globals` option.
  prefs: []
  type: TYPE_NORMAL
- en: The **keywords** prompt tells the project relation. In this case, I would like
    to fill it as `portfolio`, `responsive`, `bootstrap`, as shown in the following
    screenshot. Press *Enter* to continue:![Time for action – organizing project directories,
    assets, and installing project dependencies with Bower](img/image00303.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The **keywords** prompt is optional. You can leave it empty if you want by pressing
    the *Enter* key with the value left empty.
  prefs: []
  type: TYPE_NORMAL
- en: The **authors** prompt specifies the author of the project. This prompt is prepopulated
    with your computer user name and e-mail that you have registered in the system.
    Yet, you can overwrite it by specifying a new name and pressing *Enter* to continue,
    as shown in the following screenshot:![Time for action – organizing project directories,
    assets, and installing project dependencies with Bower](img/image00304.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If the project has multiple authors, you can specify each author with a comma
    separator, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**authors:** `John Doe, Jane Doe`.'
  prefs: []
  type: TYPE_NORMAL
- en: Specify the project license. Herein, we will simply set it to the `MIT` license.
    The `MIT` license grants anyone to do whatever he or she wants with the code in
    the project, including modification, sublicensing, and commercial use. Have a
    look at the following screenshot:![Time for action – organizing project directories,
    assets, and installing project dependencies with Bower](img/image00305.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Refer to Choose A License ([http://choosealicense.com/](http://choosealicense.com/))
    to find other types of licenses.
  prefs: []
  type: TYPE_NORMAL
- en: Specify the home page of the project. This could be your own website repository.
    In this case, I would like to set it with my personal domain, `creatiface.com`,
    as shown in the following screenshot:![Time for action – organizing project directories,
    assets, and installing project dependencies with Bower](img/image00306.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **set currently installed components as dependencies?:** command, type
    `n` (no), as we haven't installed any dependencies or packages yet, as shown in
    the following screenshot:![Time for action – organizing project directories, assets,
    and installing project dependencies with Bower](img/image00307.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The **Add commonly ignored files to ignore list?** command will create the `.gitignore`
    file containing a list of common files to exclude from the Git repository. Type
    `Y` for yes. Have a look at the following screenshot:![Time for action – organizing
    project directories, assets, and installing project dependencies with Bower](img/image00308.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'I will use Git to manage the code revision and will upload it to a Git repository,
    such as Github or Bitbucket, hence I selected `Y` (yes). If, however, you are
    not familiar with Git yet, and do not plan to host the project in a Git repository,
    you may ignore this prompt and type `n`. Git is beyond the scope of this book''s
    discussion. To learn more about Git, the following is the best reference I recommend:'
  prefs: []
  type: TYPE_NORMAL
- en: Learn Git for beginners by GitTower ([http://www.git-tower.com/learn/](http://www.git-tower.com/learn/)).
  prefs: []
  type: TYPE_NORMAL
- en: For the **would you like to mark this package as private which prevents it from
    being accidentally published to the registry?** command type `Y` as we won't register
    our project to the Bower registry. Have a look at the following screenshot:![Time
    for action – organizing project directories, assets, and installing project dependencies
    with Bower](img/image00309.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Examine the output. If it looks good, type `Y` to generate the output within
    the `bower.json` file, as shown in the following screenshot:![Time for action
    – organizing project directories, assets, and installing project dependencies
    with Bower](img/image00310.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are a number of libraries we want to install. To begin with, let's install
    Bootstrap with the `bower install bootstrap ––save` command, as shown in the following
    screenshot:![Time for action – organizing project directories, assets, and installing
    project dependencies with Bower](img/image00311.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The `--save` parameter following the command will register Bootstrap as the
    project dependency in `bower.json`. If you open it, you should find it recorded
    under the dependencies, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – organizing project directories, assets, and installing
    project dependencies with Bower](img/image00312.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You should also find the Bootstrap package saved in a new folder, `bower_components`,
    along with jQuery, which is a Bootstrap dependency, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – organizing project directories, assets, and installing
    project dependencies with Bower](img/image00313.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Install the Bootstrap extension, Jasny Bootstrap, with the `bower install jasny-bootstrap
    –save` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install Ionicons with the LESS style sheet, with the `bower install ionicons-less
    –save` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Ionicons package ships with the font files. Move them to the `fonts` folder
    of the project directory, as shown in the following screenshot:![Time for action
    – organizing project directories, assets, and installing project dependencies
    with Bower](img/image00314.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, install HTML5Shiv to enable the new elements of HTML5 in Internet Explorer
    8 and below, with the `bower install html5shiv ––save` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We just created folders and the website home page document, `index.html`. Images
    and icons that are going to be displayed on the website are also prepared. We
    also recorded the project specification in `bower.json`. Through this file, we
    can tell that the project is named `responsive-portfolio`, currently at version
    1.0.0, and has a couple of dependencies, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Bootstrap ([https://github.com/twbs/bootstrap](https://github.com/twbs/bootstrap))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jasny Bootstrap ([http://jasny.github.io/bootstrap/](http://jasny.github.io/bootstrap/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ionicons with LESS ([https://github.com/lancehudson/ionicons-less](https://github.com/lancehudson/ionicons-less))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTML5Shiv ([https://github.com/aFarkas/html5shiv](https://github.com/aFarkas/html5shiv))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We have downloaded these libraries via the `bower install` command, which is
    leaner than having to download and extract the `.zip` package. All the libraries
    should have been added within a folder named `bower_components`, as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![What just happened?](img/image00315.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Have a go hero – specifying Bower custom directory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Bower, by default, creates a new folder named `bower_components`. Bower allows
    us to configure the folder name through the Bower configuration file, `.bowerrc`.
    Change the folder name as per your preference by creating `.bowerrc`. Follow this
    reference ([http://bower.io/docs/config/](http://bower.io/docs/config/)) to configure
    bower.
  prefs: []
  type: TYPE_NORMAL
- en: Pop quiz – test your understanding on Bower commands
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Q1\. We have shown you how to install and update libraries with Bower. The
    question now is: how to remove the library that has been installed?'
  prefs: []
  type: TYPE_NORMAL
- en: Run the `bower remove` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the `bower uninstall` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the `bower delete` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Q2\. Besides installing and removing the library, we can also search the availability
    of the library in the Bower registry. How to search a library through the Bower
    registry?
  prefs: []
  type: TYPE_NORMAL
- en: Run `bower search` followed by a keyword.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `bower search` followed by the library name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `bower browse` followed by a keyword.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Q3\. Bower also allows us to look into the detail of the package properties,
    such as the package version, dependencies, author, etc. What command do we perform
    to look into these details?
  prefs: []
  type: TYPE_NORMAL
- en: '`bower info`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`bower detail`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`bower property`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Updating Bower components
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As the dependencies are installed with Bower, maintaining the project will be
    more streamlined. These libraries can be updated to the newer version at a later
    time. With the use of Bower commands, updating the libraries that we have just
    installed is practically leaner than downloading the `.zip` package and manually
    moving the files into the project directory.
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the `bower list` command to see all installed Bower packages, and check
    whether a new version of the packages is available, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Updating Bower components](img/image00316.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Then, install the new version using the `bower install` command and followed
    by the Bower package name along with the version number. To install Bootstrap
    version 3.2.0, for example, run the `bower install bootstrap#3.2.0 ––save` command.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We actually should be able to update packages with the `bower update` command.
    Yet, it seems this command does not work as expected in accordance with a number
    of reports in the following Bower Issue thread ([https://github.com/bower/bower/issues/1054](https://github.com/bower/bower/issues/1054)).
    So, using the `bower install` command, as shown previously, is the way to go at
    the moment.
  prefs: []
  type: TYPE_NORMAL
- en: The portfolio website HTML structure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have put together the essential stuff to build the website. Let's
    start building the website's HTML structure. As in the last project, herein, we
    will be using a couple of new HTML5 elements to build the semantic structure.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – building the website HTML structure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we are going to build the website's HTML structure. You will
    find that a few of the elements that we are going to add herein will be similar
    to the ones we added in the first website, responsive blog. Hence, the following
    steps will be straightforward. If you have followed the first through to the end,
    these steps should also be easy to follow. Let's carry on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open `index.html`. Then, add the basic HTML structure, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Below `<meta charset="UTF-8">`, add a meta tag to address the Internet Explorer
    rendering compatibility:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The preceding meta tag specification will force Internet Explorer to use the
    latest engine's version therein to render the page.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For more in regard to `X-UA-Compatible`, refer to the Modern.IE article, *How
    to Use X-UA-Compatible* ([https://www.modern.ie/en-us/performance/how-to-use-x-ua-compatible](https://www.modern.ie/en-us/performance/how-to-use-x-ua-compatible)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Below the `http-equiv` meta tag, add the meta viewport tag:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: The preceding viewport meta tag specification defines the web page viewport
    width to follow the device viewport size, as well as scale the page at a ratio
    of 1:1 upon opening the web page the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below the viewport meta tag, add the link to the favicon and apple-touch-icon,
    which will display the website''s icon in Apple devices, such as iPhone, iPad,
    and iPod:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Add the website''s meta description below `<title>`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The description specified within this meta tag will be displayed in the **Search
    Engine Result Page** (**SERP**).
  prefs: []
  type: TYPE_NORMAL
- en: You may also specify the author of the page with a meta tag below the meta description
    tag, as follows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Inside `<body>`, add the website off-canvas navigation HTML, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Aside from the essential classes that we have mentioned in the Jasny Bootstrap
    off-canvas section in this chapter, we have also added a new class named `portfolio-menu`
    in the `<nav>` element to apply our very own styles to the off-canvas navigation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the Bootstrap `navbar` structure, along with `<button>` to slide the off-canvas
    in and out:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Below `navbar`, add the `<main>` element, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: As described in W3C ([http://www.w3.org/TR/html-main-element/](http://www.w3.org/TR/html-main-element/)),
    the `<main>` element defines the main content of the website. So, this is where
    we will put the website content including the portfolio images.
  prefs: []
  type: TYPE_NORMAL
- en: 'Add Bootstrap Jumbotron, containing the portfolio website name and a line of
    catchphrase. Since I will display the work of a friend of mine, Yoga Perdana,
    I wish to show off his name, along with his catchphrase that is displayed in his
    Dribbble page profile ([https://dribbble.com/yoga](https://dribbble.com/yoga)),
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: You may freely add your name or company name in this matter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below the Bootstrap Jumbotron section, add a new section with the HTML5 `<section>`
    element, along with a heading that defines this section, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Add a Bootstrap container ([http://getbootstrap.com/css/#overview-container](http://getbootstrap.com/css/#overview-container))
    below the heading that will contain the portfolio images using the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Arrange the portfolio images into columns and rows. We have 12 portfolio images,
    which means we may have four images/columns in a row. The following is the first
    row:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Each column is assigned with a special class to allow us to apply customized
    styles. We also added a class in `<figure>` that wraps the image, as well as the
    `<figcaption>` element that wraps the image caption for the same purpose.
  prefs: []
  type: TYPE_NORMAL
- en: Add the remaining images into columns and rows. Since, in this case, we have
    12 images, there should be three rows displayed in the website. Each row contains
    four images, including one row that we've added in step 13.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Below the portfolio section, add the website message form containing three
    form fields and a button, as shown in the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Herein, we made the website form simple with only three form fields. But, you
    may add extra form fields, as per your own requirement.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we will add the website footer with the HTML5 `<footer>` element. The
    footer, as we have seen from the website wireframe, contains the social media
    icons and the website copyright statement.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following HTML markup below the website''s main content:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We just constructed the portfolio website HTML structure with a couple of HTML5
    elements and Bootstrap reusable classes. You should be able to see the website
    through the following address `http://localhost/portfolio/` or `http://{computer-username}/portfolio/`
    if you are using OS X. No styles have yet been applied to the website at this
    stage; we haven't linked any style sheet in the page. So, the screenshot following
    the upcoming tip is how the website looks currently.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The full code shown in the preceding steps can also be obtained from the following
    Gist [http://git.io/oIh31w](http://git.io/oIh31w).
  prefs: []
  type: TYPE_NORMAL
- en: '![What just happened?](img/image00317.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Have a go hero – extending the portfolio website
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Bootstrap ships a variety of components. Yet, we use only a couple, including
    the grids, Jumbotron, buttons, and forms. Extend the website by adding extra Bootstrap
    components, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Pagination ([http://getbootstrap.com/components/#pagination](http://getbootstrap.com/components/#pagination))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Breadcrumbs ([http://getbootstrap.com/components/#breadcrumbs](http://getbootstrap.com/components/#breadcrumbs))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Responsive embed ([http://getbootstrap.com/components/#responsive-embed](http://getbootstrap.com/components/#responsive-embed))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Panels ([http://getbootstrap.com/components/#panels](http://getbootstrap.com/components/#panels))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wells ([http://getbootstrap.com/components/#wells](http://getbootstrap.com/components/#wells))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, try creating more web pages and link them through the off-canvas
    navigation menus.
  prefs: []
  type: TYPE_NORMAL
- en: Pop quiz – Bootstrap button classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Bootstrap specified a number of reusable classes to quickly shape and form elements
    with the preset styles.
  prefs: []
  type: TYPE_NORMAL
- en: Q1\. Which of the following classes is not used in Bootstrap grid?
  prefs: []
  type: TYPE_NORMAL
- en: '`col-sm-pull-8`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`col-md-push-3`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`col-xs-offset-5`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`col-lg-6`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`col-xl-7`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Q2\. Which of the following classes does Bootstrap use to style a button?
  prefs: []
  type: TYPE_NORMAL
- en: '`btn-link`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`btn-submit`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`btn-send`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`btn-cancel`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`btn-enter`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter starts the second project of this book. We are building a portfolio
    website using one of the most popular frontend development frameworks, Bootstrap.
    We also explored a new enticing tool in web development named Bower, which streamlines
    the website dependencies management.
  prefs: []
  type: TYPE_NORMAL
- en: They both are a great combination of tools. Bootstrap lets us build responsive
    websites quickly with the modular components and reusable classes, while Bower
    makes the project more maintainable—easily.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will deal more with LESS and JavaScript to decorate
    the website.
  prefs: []
  type: TYPE_NORMAL
