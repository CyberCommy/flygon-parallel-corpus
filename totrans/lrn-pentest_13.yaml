- en: Moving Laterally and Escalating Your Privileges
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 横向移动和提升权限
- en: Now that you have exploited the system, you may be wondering what's next. Post-exploitation
    is the next step and is where we want to gain further access to targets within
    the internal network. In this chapter, we will look at how we can obtain higher
    privileges than what we currently have. This might entail further sniffing across
    the network, along with performing lateral movement techniques.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经攻破了系统，您可能想知道接下来该怎么办。后渗透是下一步，我们希望在内部网络中获得进一步的访问。在本章中，我们将看看如何获得比当前更高的权限。这可能需要在网络上进一步嗅探，以及执行横向移动技术。
- en: In this chapter, you will learn about different post-exploitation techniques
    and why post-exploitation forms an integral part of a penetration test. You will
    learn how to build an AD lab that you can use to test your post-exploitation skills
    against. By using the tools that are available, you will understand their purposes
    and how they can be used in a penetration test so that you can ensure you have
    access to the exploited system.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习不同的后渗透技术，以及为什么后渗透形成渗透测试的一个重要部分。您将学习如何建立一个AD实验室，用于测试您的后渗透技能。通过使用可用的工具，您将了解它们的目的以及如何在渗透测试中使用它们，以确保您可以访问被攻击的系统。
- en: 'As you progress through this chapter, you will learn about the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在您阅读本章的过程中，您将学习以下主题：
- en: Discovering post-exploitation techniques
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现后渗透技术
- en: Preparing your environment
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备您的环境
- en: Post-exploitation tools
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后渗透工具
- en: Performing post-exploitation attacks
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行后渗透攻击
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To follow along with the examples and instructions in this chapter, please
    ensure that you have the following technical requirements:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章中的示例和说明，请确保您具备以下技术要求：
- en: Kali Linux 2019.1
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux 2019.1
- en: Metasploitable 3
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploitable 3
- en: Windows Server 2016 (Evaluation)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2016（评估版）
- en: Windows 10 Enterprise (Evaluation)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10企业版（评估版）
- en: Discovering post-exploitation techniques
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发现后渗透技术
- en: When performing post-exploitation, there are a number of techniques that you
    will need to be aware of. These techniques are what you will leverage when you
    are engaged in a penetration test. For example, consider a scenario where you
    might compromise a standard user who doesn't have access to many resources on
    a network. Your goal (as defined in the scope of the penetration test) is to obtain
    domain dominance and create a high privileged user account. How would you progress?
    This is where understanding the different techniques of post-exploitation comes
    in, as you will be able to see gaps that can be leveraged to bring you closer
    to your goal.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行后渗透时，您需要了解一些技术。这些技术是您在进行渗透测试时将利用的。例如，考虑这样一个情景，您可能会攻破一个标准用户，该用户在网络上没有访问许多资源的权限。您的目标（在渗透测试的范围内）是获得域控制权并创建一个高权限用户帐户。您将如何进行？这就是了解后渗透不同技术的重要性，因为您将能够看到可以利用的差距，以使您更接近目标。
- en: We will cover some of these techniques in this section.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本节中涵盖一些这些技术。
- en: Lateral movement
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 横向移动
- en: Once you have compromised the initial host on the target network, you will need
    to start moving laterally within the environment. Lateral movement is the process
    of moving from one host to another in search of higher privileged accounts, pivot
    points, sensitive data, or simply reconnaissance. During this phase, it is a common
    practice to use built-in tools in order to avoid detection. Tools such as PowerShell
    or WMI are usually whitelisted and allowed on endpoints within an environment.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您攻破了目标网络上的初始主机，您将需要开始在环境中进行横向移动。横向移动是从一个主机移动到另一个主机，寻找更高权限的帐户、枢纽点、敏感数据或者简单的侦察的过程。在这个阶段，使用内置工具以避免被检测是一种常见做法。例如，PowerShell或WMI通常被列入白名单，并允许在环境中的端点上使用。
- en: Credential harvesting is usually a main focus point during lateral movement.
    It begins with the host that has been compromised and persists as you move through
    the network. Harvesting credentials can provide you with escalation paths if you
    use techniques such as key logging, memory dumps, or even capturing files that
    store credentials. Most organizations underestimate the built-in local administrator
    account. This account can be used to jump around to different endpoints.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在横向移动过程中，凭证收集通常是一个主要焦点。它始于已被攻破的主机，并随着您在网络中移动而持续。收集凭证可以为您提供升级路径，如果您使用诸如键盘记录、内存转储或者捕获存储凭证的文件等技术。大多数组织低估了内置的本地管理员帐户。这个帐户可以用于在不同的端点之间跳转。
- en: Another way you can move around within a network is by exploiting unpatched
    machines. Some organizations don't use an isolated environment when provisioning
    new workstations for its employees. While the OS is busy updating, you have a
    small window where patches are missing, and this can be exploited.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过利用未打补丁的机器在网络中移动。一些组织在为员工配置新工作站时并不使用隔离环境。当操作系统忙于更新时，您有一个小窗口，补丁缺失，这可以被利用。
- en: Privilege escalation
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 权限提升
- en: Privilege escalation is the process of looking for ways to obtain higher privileged
    access than what you currently have. For example, if you have compromised a normal
    user account, chances are that account doesn't have access to a domain controller.
    Therefore, you will need to look for an account that does have access. A dead
    giveaway is accounts inside the `domain administrators` group.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 权限提升是寻找比您当前拥有的更高权限访问方式的过程。例如，如果您攻破了一个普通用户帐户，那么该帐户很可能没有访问域控制器的权限。因此，您需要寻找一个具有访问权限的帐户。`域管理员`组内的帐户很可能是一个明显的线索。
- en: In order to find that high privileged account, you will need to work your way
    through computers using lateral movement, as discussed in the previous section.
    You will work through files that might contain credentials, misconfigured services,
    excessive user rights, or even security measures that have been made insecure
    deliberately.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了找到高特权帐户，您需要通过横向移动计算机，如前一节所讨论的那样。您将通过可能包含凭据的文件、配置错误的服务、过多的用户权限，甚至故意不安全的安全措施来工作。
- en: Pivoting
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 枢轴
- en: Corporate networks will often have logical boundaries that you need to traverse
    in a penetration test. A logical network boundary is a logical separation within
    the network, which is usually done by segmenting the network into different subnets
    and controlling access to the subnets via routers, switches, or even firewalls.
    For example, a network will contain a trusted segment, server segment, **demilitarized
    segment** (**DMZ**), and an external segment. The trusted zone will be the internal
    network, which is the most trusted network and will probably not have many restrictions
    within it. The server segment will be a subnet that has various servers within
    it. The demilitarized segment holds external facing servers, and the external
    segment will be an untrusted network, such as the internet.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 企业网络通常会有逻辑边界，您需要在渗透测试中穿越。逻辑网络边界是网络内的逻辑分隔，通常是通过将网络分割成不同子网并通过路由器、交换机甚至防火墙控制对子网的访问来实现的。例如，网络将包含受信任区段、服务器区段、**非军事区段**（**DMZ**）和外部区段。受信任区将是内部网络，是最受信任的网络，可能不会有太多限制。服务器区段将是一个包含各种服务器的子网。非军事区段包含外部面向服务器，外部区段将是一个不受信任的网络，如互联网。
- en: Pivoting is the process of accessing resources that you would not have access
    to under normal circumstances. If we consider the various segments we discussed
    in the previous paragraph, you might have gained initial access to the trusted
    segment. You are now looking at accessing a specific server in the server segment,
    but this is not allowed from the general trusted network—it is only allowed from
    a jump host, which will have access to both the server and trusted segment. Gaining
    access to that jump host will give you a pivot point to the server segment.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 枢轴是访问在正常情况下无法访问的资源的过程。如果我们考虑前一段中讨论的各个部分，您可能已经获得了对受信任部分的初始访问权限。您现在正在尝试访问服务器部分中的特定服务器，但是从一般受信任网络是不允许的——只允许从跳转主机访问，该跳转主机将同时访问服务器和受信任部分。获得对该跳转主机的访问权限将为您提供到服务器部分的枢轴点。
- en: Preparing your environment
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备您的环境
- en: 'To demonstrate the various post-exploitation attacks in this chapter, I have
    built a basic **Active Directory** (**AD**) lab. You can build the same one that
    I built by using the following diagram:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示本章中的各种后渗透攻击，我建立了一个基本的**Active Directory**（**AD**）实验室。您可以使用以下图表构建与我相同的实验室：
- en: '![](img/0559212b-d04b-408a-a512-24375715a065.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0559212b-d04b-408a-a512-24375715a065.png)'
- en: 'Figure 1: Lab diagram'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：实验室图表
- en: 'Windows 10 Enterprise Evaluation can be downloaded from the following URL:
    [https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise](https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 10企业评估可以从以下网址下载：[https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise](https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise)。
- en: 'Windows Server 2016 Evaluation can be downloaded from the following URL: [https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2016](https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2016).'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Server 2016评估可以从以下网址下载：[https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2016](https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2016)。
- en: 'The setup steps for creating a domain on the server operating system is as
    follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器操作系统上创建域的设置步骤如下：
- en: Once your server is installed, log in using the local administrator account.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，使用本地管理员帐户登录您的服务器。
- en: Configure a static IP address on the Ethernet adapter. If you are building a
    virtual machine, ensure that you set your network adapter to be a private network
    on the virtualization software.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以太网适配器上配置静态IP地址。如果您正在构建虚拟机，请确保将网络适配器设置为虚拟化软件上的私有网络。
- en: Click on start and search for `PowerShell`. Then, right-click on PowerShell
    and select Run as administrator.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击开始并搜索`PowerShell`。然后，右键单击PowerShell并选择以管理员身份运行。
- en: 'Once PowerShell is open, enter the `Install-WindowsFeatures -Name AD-Domain-Services
    -IncludeManagementTools` command. Once the feature has been installed, you will
    receive a message, as follows:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦PowerShell打开，输入`Install-WindowsFeatures -Name AD-Domain-Services -IncludeManagementTools`命令。安装功能后，您将收到以下消息：
- en: '![](img/d08faddb-2203-43c5-a2cc-8a7c1c93042d.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d08faddb-2203-43c5-a2cc-8a7c1c93042d.png)'
- en: 'Figure 2: Installing AD Domain Services'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：安装AD域服务
- en: 'Next, we need to set up the AD forest configuration. Enter the `Install-ADDSForest
    -DomainName "pentest.lab" -InstallDNS` command. You will be prompted to enter
    a recovery password; this can be anything you desire. Use `A` to say yes to all
    of the questions:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要设置AD林配置。输入`Install-ADDSForest -DomainName "pentest.lab" -InstallDNS`命令。您将被提示输入恢复密码；这可以是您想要的任何内容。使用`A`来回答所有问题都是肯定的：
- en: '![](img/b8abcd85-79e4-4621-acd6-b339fd4258cc.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b8abcd85-79e4-4621-acd6-b339fd4258cc.png)'
- en: 'Figure 3: Installing the AD forest'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：安装AD林
- en: During this time, the installation will install a number of components. After
    a while, the server will reboot. Once rebooted, you will be able to log in with
    the administrator username and password you defined when you first installed the
    server.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此期间，安装将安装多个组件。一段时间后，服务器将重新启动。重新启动后，您将能够使用您在首次安装服务器时定义的管理员用户名和密码登录。
- en: 'You can confirm that the domain has been successfully set up by issuing the
    `Get-ADDomain` command in an administrative PowerShell window:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过在管理PowerShell窗口中发出`Get-ADDomain`命令来确认域是否已成功设置：
- en: '![](img/a8847d33-0f1a-45c2-bf71-dc7d6de7fb12.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8847d33-0f1a-45c2-bf71-dc7d6de7fb12.png)'
- en: 'Figure 4: Verifying Active Directory information'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图4：验证Active Directory信息
- en: 'If you prefer to use the graphical interface, there is a great blog located
    at the following link which tells you all about how to go about this: [https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/](https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更喜欢使用图形界面，可以在以下链接找到一个很棒的博客，告诉您如何操作：[https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/](https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/)。
- en: 'There are some additional tasks that need to be completed, and you can use
    the PowerShell commands defined here to do so. Ensure that you are logged in to
    the domain controller using a domain administrator account and then perform these
    additional steps using PowerShell:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些额外的任务需要完成，您可以使用此处定义的PowerShell命令来完成。确保您使用域管理员帐户登录到域控制器，然后使用PowerShell执行这些额外的步骤：
- en: 'The first thing we will do is create a new organization unit within AD. You
    can call this anything you want. In my environment, I have called this `IT`:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们要做的第一件事是在AD中创建一个新的组织单位。您可以随意命名。在我的环境中，我称之为`IT`：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The next step is to create the user accounts. You can repeat this step to create
    the `helpdeskagent` and `serveradmin` accounts by changing the names marked in
    **bold**:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是创建用户帐户。您可以重复此步骤，通过更改**粗体**标记的名称来创建`helpdeskagent`和`serveradmin`帐户：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, we will create a security group. `helpdeskagent` will be added to this
    group:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个安全组。`helpdeskagent`将被添加到这个组中：
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Finally, we will add the various users to their respective security groups:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将把各种用户添加到各自的安全组中：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once the domain controller has been built, you can join your Metasploitable
    3 and Windows 10 Enterprise virtual machines to the domain. Ensure that you set
    up a static IP and DNS, as per the preceding diagram.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦域控制器建立完成，您可以将您的Metasploitable 3和Windows 10企业虚拟机加入到域中。确保您按照前面的图表设置静态IP和DNS。
- en: 'To simulate the attacks that we''ll be covering later, I have configured the
    following:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了模拟我们将在后面介绍的攻击，我已经配置了以下内容：
- en: '**Windows 10 Enterprise virtual machine**: Here, the logged on user will be `domainadmin`.
    I have configured the `Helpdesk Staff`groupas a local administrator on the PC.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows 10企业虚拟机**：在这里，登录的用户将是`domainadmin`。我已经将`Helpdesk Staff`组配置为PC上的本地管理员。'
- en: '**Metasploitable 3**: Here, I have logged in with both the `serveradmin`and `helpdeskagent`accounts.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Metasploitable 3**：在这里，我已经使用`serveradmin`和`helpdeskagent`帐户登录。'
- en: Post-exploitation tools
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后渗透工具
- en: Post-exploitation forms an important part of a penetration test. There are a
    number of tools that can be leverage for post-exploitation. Understanding when
    and how to use these tools will help you to conduct successful post-exploitation
    activities.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 后渗透是渗透测试的重要部分。有许多工具可以用于后渗透。了解何时以及如何使用这些工具将有助于您进行成功的后渗透活动。
- en: We will discuss a few of these tools in this section.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本节中讨论其中一些工具。
- en: Metasploit Framework
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit框架
- en: Metasploit Framework really has a lot of functionality, and we have used it
    extensively throughout this book. We focused mostly on the exploitation features
    of the framework. Now, we will look at the post-exploitation features. Metasploit
    provides a number of modules that can be used against a variety of systems.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit框架确实具有许多功能，我们在整本书中都广泛使用了它。我们主要关注了框架的利用功能。现在，我们将看看后渗透功能。Metasploit提供了许多可以针对各种系统使用的模块。
- en: To perform these attacks in your lab, I have used the Metasploitable 3 (Windows)
    virtual machine as the target. The exploit I have used is `windows/smb/ms17_010_eternalblue`,
    which we covered in [Chapter 5](8c5306b6-5c1e-4554-a839-5b2422286120.xhtml), *Diving
    into the Metasploit Framework*.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在您的实验室中执行这些攻击，我使用了Metasploitable 3（Windows）虚拟机作为目标。我使用的漏洞是`windows/smb/ms17_010_eternalblue`，我们在[第5章](8c5306b6-5c1e-4554-a839-5b2422286120.xhtml)中介绍过，*深入Metasploit框架*。
- en: Let's look at some of the post-exploitation features that are available and
    what they can be used for.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看可用的后渗透功能以及它们可以用于什么。
- en: Metasploit post modules
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit后模块
- en: 'Within the Metasploit Framework, there are a number of post modules that span
    across different operating systems. These can be viewed by typing in `use post`,
    followed by pressing the *Tab* key twice. Metasploit will prompt you to display
    all of the possibilities. At the time of writing, there are 328 `post` modules
    that can be used:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在Metasploit框架中，有许多跨不同操作系统的后模块。您可以通过键入`use post`，然后按两次*Tab*键来查看。Metasploit将提示您显示所有可能性。在撰写本文时，有328个可以使用的`post`模块：
- en: '![](img/53a4e7e0-57ec-48bc-b309-b89d5f3a8bce.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/53a4e7e0-57ec-48bc-b309-b89d5f3a8bce.png)'
- en: 'Figure 5: Viewing post modules in Metasploit'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图5：查看Metasploit中的后模块
- en: 'Let''s look at some of the modules that you can use. For example, the `post/windows/gather/enum_ad_users`
    and `post/windows/gather/enum_ad_groups` modules would provide you with some insight
    into the users and groups that exist within the AD domain:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看您可以使用的一些模块。例如，`post/windows/gather/enum_ad_users`和`post/windows/gather/enum_ad_groups`模块将为您提供有关AD域中存在的用户和组的一些见解：
- en: '![](img/6173fa01-d8a4-4594-9014-c3e4f4705f07.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6173fa01-d8a4-4594-9014-c3e4f4705f07.png)'
- en: 'Figure 6: Enumerating AD groups'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图6：枚举AD组
- en: 'On the target system that you have exploited, you will need to identify what
    is currently installed. This will help in determining security controls such as
    host intrusion detection or antivirus applications. By using `post/windows/gather/enum_applications`,
    you will be able to see a list of installed applications:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在您已经攻击的目标系统上，您需要确定当前安装了什么。这将有助于确定诸如主机入侵检测或防病毒应用程序之类的安全控制。通过使用`post/windows/gather/enum_applications`，您将能够看到已安装应用程序的列表：
- en: '![](img/fb49c035-8b44-48b6-885b-e96d5d48abef.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fb49c035-8b44-48b6-885b-e96d5d48abef.png)'
- en: 'Figure 7: Listing currently installed applications'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图7：列出当前安装的应用程序
- en: Let's look at options that exist within Meterpreter. Recall from [Chapter 5](8c5306b6-5c1e-4554-a839-5b2422286120.xhtml), *Diving
    into the Metasploit Framework*, that using a Meterpreter shell provides a lot
    more functionality.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看Meterpreter中存在的选项。回想一下[第5章](8c5306b6-5c1e-4554-a839-5b2422286120.xhtml)，*深入了解Metasploit框架*，使用Meterpreter
    shell提供了更多的功能。
- en: 'Once you have compromised a system, you may want to migrate your Meterpreter
    session to another process in order to avoid detection or gain persistence. Process
    migration can be done by using the `run post/windows/manage/migrate` command from
    a Meterpreter session:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您入侵了一个系统，您可能希望将您的Meterpreter会话迁移到另一个进程，以避免被检测或获得持久性。可以通过使用来自Meterpreter会话的`run
    post/windows/manage/migrate`命令来进行进程迁移：
- en: '![](img/b7ab3487-8c6b-485d-82dc-1cbd8764dbd0.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b7ab3487-8c6b-485d-82dc-1cbd8764dbd0.png)'
- en: 'Figure 8: Meterpreter process migration'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图8：Meterpreter进程迁移
- en: 'Meterpreter enables the use of additional extension categories such as `powershell` and `Mimikatz`.
    These can be loaded using the `load` command from a Meterpreter shell:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 'Meterpreter使得可以使用额外的扩展类别，如`powershell`和`Mimikatz`。这些可以通过从Meterpreter shell中使用`load`命令加载： '
- en: '![](img/e09918b6-dcbb-4431-959c-3a5a9b898ecd.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e09918b6-dcbb-4431-959c-3a5a9b898ecd.png)'
- en: 'Figure 9: Loading meterpreter modules'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图9：加载meterpreter模块
- en: Performing privilege escalation to a local system using Meterpreter is possible
    by using the `getsystem` command.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`getsystem`命令可以实现使用Meterpreter进行本地系统的特权升级。
- en: 'This command tells Meterpreter to use any available technique to obtain local
    system privileges. These techniques are **Named Pipe Impersonation** and **Token
    Elevation**:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令告诉Meterpreter使用任何可用的技术来获取本地系统权限。这些技术包括**命名管道模拟**和**令牌提升**：
- en: '![](img/28d746e5-4e45-421c-882e-f9b680346bff.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/28d746e5-4e45-421c-882e-f9b680346bff.png)'
- en: 'Figure 10: Escalating to system privileges using Meterpreter'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图10：使用Meterpreter提升到系统权限
- en: In the upcoming section of this chapter (*Performing post-exploitation attacks),*
    we will look at how we can use some of Meterpreter's features to perform post-exploitation
    activities.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的即将到来的部分（*执行后渗透攻击*）中，我们将看看如何使用Meterpreter的一些功能来执行后渗透活动。
- en: Empire
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Empire
- en: Empire is another great tool that can be used for post-exploitation. It is flexible
    and leverages secure communications. It provides you with the ability to run PowerShell
    agents without the need for `powershell.exe`. The post-exploitation modules range
    from keyloggers to credential extraction tools such as Mimikatz.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Empire是另一个可以用于后渗透的强大工具。它灵活且利用了安全通信。它为您提供了在不需要`powershell.exe`的情况下运行PowerShell代理的能力。后渗透模块范围从键盘记录器到凭证提取工具（如Mimikatz）。
- en: 'Empire can be installed by cloning the repository. You can do this by using
    the following command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Empire可以通过克隆存储库来安装。您可以使用以下命令来执行此操作：
- en: '[PRE4]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Once the repository is cloned, you can install Empire using the `./install.sh` command
    within its directory. Once the installation is completed, you can run Empire using
    the `./empire` command.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦存储库被克隆，您可以在其目录中使用`./install.sh`命令安装Empire。安装完成后，您可以使用`./empire`命令运行Empire。
- en: 'When Empire loads, you will be presented with the main screen, which shows
    the modules that were loaded, listeners, and active agents:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当Empire加载时，您将看到主屏幕，显示加载的模块、监听器和活动代理：
- en: '![](img/6c50e219-521d-4acd-918d-14f32e761c3c.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6c50e219-521d-4acd-918d-14f32e761c3c.png)'
- en: 'Figure 11: Empire main screen'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图11：Empire主屏幕
- en: Before you can have an active agent, we need to create a listener. This is done
    using the `listeners` command and then defining the type of listener we want to
    create using the `uselistener [type]` command. There are various types, such as
    `http`, `meterpreter` and `redirector`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在您拥有活动代理之前，我们需要创建一个监听器。这可以通过使用`listeners`命令来完成，然后使用`uselistener [type]`命令定义我们想要创建的监听器类型。有各种类型，如`http`、`meterpreter`和`redirector`。
- en: 'Let''s set up a simple `http` listener using the `uselistener http` command.
    Once you selected the `listeners` , you can check the available options using
    the `info` command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`uselistener http`命令设置一个简单的`http`监听器。一旦选择了`listeners`，您可以使用`info`命令检查可用的选项：
- en: '![](img/488d8240-2321-49f1-b110-cb9b9e059cf1.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/488d8240-2321-49f1-b110-cb9b9e059cf1.png)'
- en: 'Figure 12: Viewing the listener options'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图12：查看监听器选项
- en: Take note of the fields that are `Required`. By default, the only thing you
    will need to provide is a name for the listener. This can be done using the `set
    Name [name]` command. In my example, I have given my listener a name, that is, `Metasploitable3`.
    Once you have defined a name, enter the `execute` command to start the listener.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 注意`Required`字段。默认情况下，您只需要为监听器提供一个名称。这可以使用`set Name [name]`命令完成。在我的例子中，我给我的监听器起了一个名字，即`Metasploitable3`。一旦定义了一个名称，输入`execute`命令启动监听器。
- en: Empire commands are case-sensitive. Using the `set name` command will not work—you
    must use `set Name`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Empire命令区分大小写。使用`set name`命令将不起作用-您必须使用`set Name`。
- en: Now that you have set up the listener, you will need to link a stager to the
    listener. This can be done by going back to the listeners configuration using
    the `back` command. To define a stager, you will use the `usestager [stager]` command.
    You can view a full list of stagers by pressing the *Tab* button twice.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经设置了监听器，您需要将一个分段器链接到监听器。这可以通过使用`back`命令返回到监听器配置来完成。要定义一个分段器，您将使用`usestager
    [stager]`命令。您可以通过按两次*Tab*按钮查看完整的分段器列表。
- en: 'We will create a simple windows launcher stager by using the `usestager windows/launcher_bat` command.
    This will create a batch file that can be run on the target machine and store
    it in a temporary location:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`usestager windows/launcher_bat`命令创建一个简单的Windows启动器分段器。这将创建一个可以在目标机器上运行的批处理文件，并将其存储在临时位置：
- en: '![](img/d62b743b-5baf-43ce-b8ac-f7423a513b1e.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d62b743b-5baf-43ce-b8ac-f7423a513b1e.png)'
- en: 'Figure 13: Creating a stager using Empire'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图13：使用Empire创建一个分段器
- en: 'Once the stager has been created, all you need to do is run the file on the
    target system. Once you run the stager, it will connect back to Empire and become
    an agent:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0e004694-ce17-43e2-a39e-26437ad65d2b.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14: Active agent in Empire'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: To interact with the agent, we use the `interact [agent name]` command.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the `sysinfo` command, we can confirm that we have administrative integrity.
    This is defined by the value of `1` in the `High Integrity` variable:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8c0c7818-9095-440c-9e08-cbeb715e93db.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15: Obtaining the remote system information'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Once you have access to the agent, you can perform post-exploitation activities
    as you please.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Responder
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The responder is a tool that can be used to quickly gain credentials. It is
    built into Kali Linux and it leverages **LLMNR**, **NBT-NS**, and **MDNS** poisoners,
    which are simple to use against vulnerable networks. The Responder is successful
    purely because network components such as **ARP** (**Address Resolution Protocol**),
    **DHCP** (**Dynamic Host Configuration Protocol**), and **DNS** (**Domain Name
    System**) are not configured securely.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '**Link Local Multicast Name Resolution** (**LLMNR**) and **NetBios-Name Service**
    (**NBT-NS**) are components that are used within Windows operating systems for
    communication and name resolution; they attempt to resolve names when DNS fails.
    MDNS stands for Microsoft DNS.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: The basic syntax for the Responder is `responder -I [interface]`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: 'The Responder has a number of poisoning servers that are available. These are
    configurable via the configuration file that exists in `/usr/share/responder/Responder.conf`:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/409213f6-8e1b-481b-8c26-111142d1b110.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
- en: 'Figure 16: Responder poisoning servers'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: To understand how the Responder works, let's consider the following scenario.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: A user is directed to a non-existent share either using social engineering,
    opening a malicious document that forces the computer to try to access a non-existent
    share, or by making a typo while trying to access a legitimate share.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s follow these steps to see this in action:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'The PC will attempt to connect to the non-existent file share by performing
    name resolution to its configured DNS server:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5a53f53c-5e91-4896-838b-d36dcfab97d0.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
- en: 'Figure 17: User attempting to access a non-existent share'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: The DNS server doesn't have the record that matches what the PC is attempting
    to access, so it will tell the PC that the record does not exist. This is where
    LLMNR and NetBIOS-NS queries takes over.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The PC will then broadcast using LLMNR and NetBIOS-NS, which will be intercepted
    by the attacker running the Responder.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Responder will answer the query and trick the PC into believing it has the
    share. It will then proceed to ask the PC to encrypt a challenge request with
    the user's password hash. Once the hash challenge is completed, the Responder
    will drop the request with an error.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Responder has now captured the hash and displayed it on the console:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/531367db-91aa-4be9-b042-1b72c5608ad7.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
- en: 'Figure 18: NTLMv2 hash captured'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the hash is captured, it can be cracked using a tool such as `hashcat`:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3198ad3b-8c52-4c36-9356-10352b814729.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
- en: 'Figure 19: Using hashcat to crack the NLTMv2 hash'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: The Responder has the ability to create a rogue proxy server, which will answer
    **Web Proxy Auto Discovery** (**WPAD**) requests. This is a protocol and is used
    by clients to download a configuration file that will define proxy settings. With
    the rogue proxy, the Responder is able to force authentication, hence tricking
    the user into entering their credentials, which can be captured.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: Although the Responder is not a post-exploitation tool per se, understanding
    how it works can be helpful in post-exploitation activities if you find yourself
    stuck. There is no harm in leaving it running while performing other post-exploitation
    activities, as chances are that you will collect a good number of hashes, especially
    in big environments where users are prone to make a typo when trying to access
    a share.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Mimikatz
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Mimikatz is a tool that is well-known in the community. It is an open source
    application that allows you to interact with credentials such as NTLM hashes or
    Kerberos tickets. The tool is constantly maintained and its attack vectors are
    kept up to date. The repository for Mimikatz is located here: [https://github.com/gentilkiwi/mimikatz](https://github.com/gentilkiwi/mimikatz).'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Both attackers and penetration testers will commonly use Mimikatz to steal credentials
    and perform activities such as privilege escalation. With the advancements made
    in antivirus technologies, this tool is often detected by antivirus products.
    However, there are a number of articles available on the internet on how to evade
    detection when using Mimikatz.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the main features of Mimikatz are as follows:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '**Pass-the-Hash** (**PtH**): Within Windows, password data is stored in a hash
    format (NTLM). Mimikatz allows you to leverage this hash and pass it to your target,
    hence removing the need to crack the hash. By passing this hash, you can obtain
    access to the target system and have full privileges of the account that belongs
    to the hash.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pass-the-Ticket**: This attack involves authenticating to a system using
    Kerberos tickets; there is no need to have the account''s password. It works by
    capturing the Kerberos tickets of a valid account. Capturing the **Ticket Granting
    Tticket** (**TGT**) can be used to request service tickets from the **Ticket Granting
    Service **(**TGS**) to access any resource that the account has access to.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Overpass-the-Hash** (**Pass-the-Key**): This attack is a combination of both
    pass-the-hash and pass-the-ticket attacks. By using a valid NTLM hash, you will
    be able to obtain a valid user''s Kerberos ticket request.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kerberos Silver Ticket**: A silver ticket attack entails creating a forget
    service ticket. These tickets can provide access to a particular service. For
    example, creating a silver ticket of a SQL service account allows you to access
    a SQL service on a particular host. When performing a silver ticket account, there
    is no communication required with the domain controller. This allows you to avoid
    detection.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kerberos Golden Ticket:** This attack involves an account known as `krbtgt`.
    This account is used to encrypt and sign all Kerberos tickets within an AD domain.
    The golden ticket attack involves stealing the `krbtgt` hash; once this is stolen,
    you are able to create and sign your own Kerberos tickets. This ultimately gives
    you full access to anything within the domain, and the ticket does not expire.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mimikatz is leveraged in a number of post-exploitation tools, such as Empire,
    Metasploit Framework, and Powersploit.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: Performing post-exploitation attacks
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's perform some post-exploitation attacks in the lab environment. We will
    use the Metasploitable 3 virtual machine as an entry point, since we know there
    are vulnerabilities that exist.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: Using the `windows/smb/ms17_010_eternalblue` exploit, we will spawn a Meterpreter
    session. Once we have the session established, we will escalate to system privileges
    using the `getsystem` command.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we have a Meterpreter session, we will confirm the current system''s information
    using the `sysinfo` command:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/66418363-a9f2-4af8-b302-10e65d153faa.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
- en: 'Figure 20: Confirming current system information'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we have some interesting information: we can see that there are three
    users who are logged in. Let''s proceed and perform credential harvesting.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Performing credential harvesting
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we know there are three users logged in, we will attempt to extract
    any credentials. To do this, we will load the `kiwi` extension within Meterpreter
    using the `load kiwi` command*. *Once the extension has loaded, we will dump the
    current logged on user credentials using the `kiwi_cmd sekurlsa::logonpasswords` command:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道有三个用户登录，我们将尝试提取任何凭据。为此，我们将使用`load kiwi`命令在Meterpreter中加载`kiwi`扩展。一旦扩展加载完成，我们将使用`kiwi_cmd
    sekurlsa::logonpasswords`命令转储当前登录用户的凭据：
- en: '![](img/5befff3b-5fd7-463e-85ad-992220e0735c.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5befff3b-5fd7-463e-85ad-992220e0735c.png)'
- en: 'Figure 21: Loading the kiwi extension'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图21：加载kiwi扩展
- en: When we use the `kiwi_cmd sekurlsa::logonpasswords` command, we are telling
    Meterpreter to use a command that we will define by entering `kiwi_cmd`, and then
    we define the command we want to use within Mimikatz. The `sekurlsa::logonpasswords` command
    is responsible for extracting passwords, keys, pin codes, and tickets from the **Local
    Security Authority Subsystem Service** (**lsass**) within memory.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用`kiwi_cmd sekurlsa::logonpasswords`命令时，我们告诉Meterpreter使用我们将在其中定义命令的命令，然后我们定义我们想在Mimikatz中使用的命令。`sekurlsa::logonpasswords`命令负责从内存中的**本地安全性机构子系统服务**（**lsass**）中提取密码、密钥、PIN码和票证。
- en: 'Once the command runs, there will be a lot of output. Take note of the output
    in the following screenshot. Here, we have some valuable information. We can see
    that there is a user account called `serveradmin`who is logged in. We have the
    user account''s LM and NTLM hash, and since the domain is still using `wdigest`,
    we have the cleartext password of `P@ssw0rd!@#$%`:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 命令运行后，将有大量输出。请注意以下截图中的输出。在这里，我们有一些有价值的信息。我们可以看到有一个名为`serveradmin`的用户帐户已登录。我们有用户帐户的LM和NTLM哈希，由于域仍在使用`wdigest`，我们有`P@ssw0rd!@#$%`的明文密码：
- en: '![](img/46097532-b391-4ee6-a257-a603f09b7254.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/46097532-b391-4ee6-a257-a603f09b7254.png)'
- en: 'Figure 22: ServerAdmin credentials dumped with Mimikatz'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图22：使用Mimikatz转储的ServerAdmin凭据
- en: 'Looking deeper into the output, we have another interesting credential, `helpdeskagent`.
    Here, we also have the NTLM hash and cleartext password:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 深入研究输出，我们还有另一个有趣的凭据，`helpdeskagent`。在这里，我们还有NTLM哈希和明文密码：
- en: '![](img/66aeb08c-2a84-42a1-a655-d702d929b5cb.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/66aeb08c-2a84-42a1-a655-d702d929b5cb.png)'
- en: 'Figure 23: helpdeskagent credentials dumped with Mimikatz'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图23：使用Mimikatz转储的helpdeskagent凭据
- en: 'Now, we have two interesting accounts that we have harvested for use. Before
    moving on to lateral movement, we will upload two files using Meterpreter, using
    the following steps:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有两个有趣的帐户可供使用。在进行横向移动之前，我们将使用Meterpreter上传两个文件，使用以下步骤：
- en: View the current working directory by using the `pwd` command.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pwd`命令查看当前工作目录。
- en: You can either upload the files here or create a new folder. I have created
    a new folder called `tools`.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在此处上传文件，也可以创建新文件夹。我创建了一个名为`tools`的新文件夹。
- en: 'Ensure that you have downloaded the Windows version of `mimikatz.exe` from
    the GitHub repository that we mentioned in the *Mimikatz* section. Upload the
    file using the `upload` command:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您已从我们在*Mimikatz*部分提到的GitHub存储库中下载了Windows版本的`mimikatz.exe`。使用`upload`命令上传文件：
- en: '![](img/405cdb1a-6268-4490-956f-7c67578ff0bc.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/405cdb1a-6268-4490-956f-7c67578ff0bc.png)'
- en: 'Figure 24: Uploading mimikatz.exe'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图24：上传mimikatz.exe
- en: The next file that will be uploaded is `PSexec.exe`*.* `PSexec` is used to perform
    remote command execution and can be downloaded from [https://docs.microsoft.com/en-us/sysinternals/downloads/psexec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec).
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来要上传的文件是`PSexec.exe`*.* `PSexec`用于执行远程命令，并可从[https://docs.microsoft.com/en-us/sysinternals/downloads/psexec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec)下载。
- en: In a real penetration test, you would not simply upload files, especially Mimikatz
    and `PSexec`, as they would probably be deleted by the local antivirus or logged
    and the IT staff could be alerted to your presence on the machine. In the case
    of this demo, there is no antivirus or logging software installed on Metasploitable
    3.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在真实的渗透测试中，您不会简单地上传文件，特别是Mimikatz和`PSexec`，因为它们可能会被本地防病毒软件删除或记录，IT人员可能会被警告您在机器上的存在。在这个演示案例中，Metasploitable
    3上没有安装防病毒软件或日志记录软件。
- en: 'Lastly, we will create a local user account that we can use to access the server.
    We can do this from Windows Command Prompt, which can be accessed by using the
    `shell` command in Meterpreter. Once we have shell access, we will use the following
    two commands to create a local user in the built-in administrators group:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将创建一个本地用户帐户，以便访问服务器。我们可以使用Meterpreter中的`shell`命令访问Windows命令提示符。一旦我们获得shell访问权限，我们将使用以下两个命令在内置管理员组中创建一个本地用户：
- en: '[PRE5]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This command creates a local user and adds the user to a specified group:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令创建一个本地用户并将用户添加到指定的组：
- en: '![](img/65aeb61c-6834-497f-a3ae-9c1c90eccaf0.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65aeb61c-6834-497f-a3ae-9c1c90eccaf0.png)'
- en: 'Figure 25: Creating a local administrative user'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图25：创建本地管理员用户
- en: Having this local administrative user account can form a backdoor.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有此本地管理员用户帐户可以形成后门。
- en: Performing Overpass-the-Hash
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行Overpass-the-Hash
- en: Since we have determined that Metasploitable 3 is a server, let's attempt to
    log in using the local account we created in the event that one of the users whose
    hashes we harvested might be logged in. To perform this, we will use the `xfreerdp`
    tool, which is built into Kali.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已确定Metasploitable 3是一个服务器，让我们尝试使用我们在其中创建的本地帐户登录，以防我们收集到哈希的用户之一已登录。为此，我们将使用内置于Kali中的`xfreerdp`工具。
- en: 'The command syntax we will use is as follows:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的命令语法如下：
- en: '[PRE6]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'In this command, we are defining the user (`/u`), the password (`/p`), and
    the server IP (`/v`). Once you have entered the command, you will have a remote
    desktop session:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在此命令中，我们定义了用户（`/u`）、密码（`/p`）和服务器IP（`/v`）。输入命令后，您将拥有远程桌面会话：
- en: '![](img/89a47c5d-67c8-46ba-9284-c45f5d43db11.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89a47c5d-67c8-46ba-9284-c45f5d43db11.png)'
- en: 'Figure 26: Remote desktop session established'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图26：建立远程桌面会话
- en: 'Now that we are logged in to the server, let''s attempt to enumerate the current
    domain users and groups. Remember that we have harvested the credentials for `serveradmin`
    and `helpdeskagent`. Opening Command Prompt and entering the `net user /domain` command
    fails since we are not authenticated to the domain:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/14f0558d-53ec-482e-bcbb-08e32416a1ed.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
- en: 'Figure 27: User enumeration denied'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: 'Since we have the hashes for two domain credentials, let''s use this to perform
    an Overpass-the-Hash attack. We will use the hash of `serveradmin` with the Mimikatz
    tool. The command to do this is as follows:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In this command, we are telling Mimikatz to use the highest privilege (`privilege::debug`)
    by using the Overpass-the-Hash attack (`sekurlsa::pth`) and defining the username
    (`/user`), the NTLM hash (`/ntlm`), and the domain (`/domain`).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the command executes, we will have a new Command Prompt window that will
    open. This window will have the permissions of the `serveradmin` account, hence
    allowing us to perform the user and group enumeration while masquerading as `serveradmin`:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6401a820-27f6-4ef3-aadc-01969bee8e27.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
- en: 'Figure 28: Successful Overpass-the-Hash attack'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s see what we can do with the `helpdeskagent`account. During user
    and group enumeration, we determined that there is a `helpdeskagent`account and
    a `Helpdesk Staff`group within the domain. Let''s assume that the user account
    is a member of this group. We can confirm this by using the `net user helpdeskagent
    /domain` command:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d6d1b129-6a70-4da6-a146-1b1ec98b9cbb.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
- en: 'Figure 29: Verifying the groups of helpdeskagent'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: Sure enough, the account is a member of the group.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: Before proceeding to the next step, we will repeat the Overpass-the-Hash attack,
    but this time using the NTLM hash of the `helpdeskagent` account.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: Performing lateral movement
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using the new command window that was spawned by the Overpass-the-Hash attack
    using the `helpdeskagent` account, we will attempt to access the Windows 10 PC.
    Performing a simple directory listing using the `dir \\192.168.10.9\c$` command
    results in the directory being listed. This tells us that `Helpdesk Staff`probably
    has local admin privileges on that PC.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: 'The first thing we will do is copy Mimikatz to the Windows 10 PC. This can
    be done by using the `xcopy mimikatz.exe \\192.168.10.9\c$\tools` command. As
    per the following screenshot*,* since I didn''t create the directory, I am prompted
    to define whether the destination is a file or directory:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4740813b-7b6c-4011-8221-a5bda59bbedf.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
- en: 'Figure 30: Copying mimikatz.exe to a new target'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: 'Using `PSexec`, we will look at dumping the current logged in user credentials.
    This can be done by using the following command:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In this command, we are telling `PSexec` to run the Mimikatz command on the
    remote system. The `-accepteula` command is extremely important as this will stop
    the EULA prompt from showing up on the remote system:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/48ab34c0-243a-4b49-b876-83da3a361a9a.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
- en: 'Figure 31: Using PSexec to remotely execute the mimikatz command'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we have the output, we will see that there is a high privilege account
    logged in, that is, `domainadmin`:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2c4720ed-0027-4370-9d41-9c7d205896f7.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
- en: 'Figure 32: Harvesting credentials on a remote system'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: Here, we don't have the password in cleartext, but we still have the NTLM hash,
    which we can use. The next thing we will do is perform a Pass-the-Ticket attack.
    We will use the same command-line window that we used in this section.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: Performing a Pass-the-Ticket attack
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to perform this attack, we need to export the current Kerberos tickets
    from the Windows 10 PC. This can be done using the following command:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In this command, we are exporting the current Kerberos tickets so that we can
    copy them and import them into our session. Once you run this command, you will
    have a number of `*.kirbi` files. Since we are only interested in `domainadmin`,
    we will copy those to our Metasploitable 3 server. Copying can be done using the
    normal Windows `copy` command.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have the `.kirbi` files on the Metasploitable 3 server, you can perform
    the Pass-the-Ticket attack by using the following command:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In this command, we are defining the attack (`kerberos:ptt`) and the location
    of the `.kirbi` files:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1e6cad93-e0fd-4825-9a8b-f22ff3e90782.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
- en: 'Figure 33: Importing the domainadmin Kerberos tickets'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: Notice the output in the preceding screenshot.  Before performing the attack,
    I tried to access the DC, which was denied. Remember that this is the same window
    that we spawned using the `helpdeskagent` account. Once the Mimikatz command has
    executed, we will see that the `domainadmin` Kerberos tickets have been imported
    into our session.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: 'We can confirm that the Kerberos tickets has been imported by running the `klist` command,
    which will display the current Kerberos tickets:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2238ba36-f813-468b-bf8f-eeed2d8195ee.png)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
- en: 'Figure 34: Kerberos tickets successfully imported'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice that our session now has the Kerberos tickets for the `domainadmin` account.
    We are now masquerading as the domain admin, so we will be able to access the
    domain controller:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1f93ebce-56e3-4eac-9205-0f4a95f06840.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
- en: 'Figure 35: The domain controller is now accessible'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we have full access to the domain controller, which leads to
    a full compromise of the environment.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Post-exploitation can be performed in many different ways. Sometimes, using
    just one tool, such as the Responder, can lead to you capturing a high privileged
    hash. On other occasions, you need to really work through the environment by using
    various techniques. In this chapter, we focused on just a few tools, but there
    are many more available.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you identified the various techniques that can be utilized
    when performing post-exploitation. You can now build a basic AD lab, which can
    be used to test your skills in post-exploitation. You have the ability to use
    real-world tools that are used by penetration testers and attackers. You have
    also gained practical hands-on skills in regards to performing various post-exploitation
    attacks.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter ([Chapter 12](e4dd2f7e-f929-4877-aef7-e97f1c359784.xhtml)*,
    Maintaining Control within the Environment*), we will discuss persistence and
    how to maintain access to the compromised network.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What techniques can be leveraged during post-exploitation?
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What tools can be used for post-exploitation?
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Name some post-exploitation scripts that exists within Meterpreter.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Explain a Pass-the-Hash attack.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is unique about the `krbtgt` account?
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
