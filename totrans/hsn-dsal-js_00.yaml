- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The main focus of this book is employing data structures and algorithms in real-world
    web applications using JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: With JavaScript making its way onto the server side and with **Single Page Application**
    (SPA) frameworks taking over the client side, a lot, if not all, of the business
    logic, is being ported over to the client side. This makes it crucial to employ
    hand-crafted data structures and algorithms that are tailor-made for a given use
    case.
  prefs: []
  type: TYPE_NORMAL
- en: For example, when working on data visualizations such as charts, graphs, and
    3D or 4D models, there might be tens or even hundreds of thousands of complex
    objects being served from the server, sometimes in near real time. There are more
    ways than one in which this data can be handled and that is what we will be exploring,
    with real-world examples.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for anyone who has an interest in and basic knowledge of HTML,
    CSS, and JavaScript. We will also be using Node.js, Express, and Angular to create
    some of the web apps and APIs that leverage our data structures.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](4928ea27-d6a2-4af4-ae80-95fd912a800d.xhtml), *Building Stacks for
    Application State Management*,  introduces building and using stacks for things
    such as a custom back button for an application and a syntax parser and evaluator
    for an online IDE.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](dc842459-ee37-4570-9340-9b80b08787dc.xhtml), *Creating Queues for
    In-Order Executions*, demonstrates using queues and their variants to create a
    messaging service capable of handling message failures. Then, we perform a quick
    comparison of the different types of queues.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](cac5a6f1-060f-47e1-970a-77f3365a2a1a.xhtml), *Using Sets and Maps
    for Faster Applications*, use sets, and maps to create keyboard shortcuts to navigate
    between your application states. Then, we create a custom application tracker
    for recording the analytics information of a web application. We conclude the
    chapter with a performance comparison of sets and maps with arrays and objects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](9872a10a-7036-48b4-ac93-33ab3d6ca747.xhtml), *Using Trees for Faster
    Lookup and Modifications*, leverages tree data structures to form a typeahead
    component. Then, we create a credit card approval predictor to determine whether
    or not a credit card application would be accepted based on historical data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](63d6d2f9-0645-45f2-8845-24f70f02fa99.xhtml), *Simplify Complex
    Applications Using Graphs*, discusses graphs with examples such as creating a
    reference generator for a job portal and a friend recommendation system on a social
    media website.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](9fdbed1e-bbc6-4563-aaec-919c32464db6.xhtml), *Exploring Types of
    Algorithms*, explores some of the most important algorithms, such as Dijkstra''s,
    knapsack 1/0, greedy algorithms, and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](be2a40a5-bd39-480f-bbb4-d59fb69812e3.xhtml),  *Sorting and its
    Applications*, explores merge sort, insertion sort, and quick sort with examples.
    Then, we run a performance comparison on them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](c274f151-2947-4117-9f8c-4da9e76e749d.xhtml), *Big O notation, Space,
    and Time Complexity*, discusses the notations denoting complexities and then,
    moves on to discuss what space and time complexities are and how they impact our
    application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](397a9901-2278-4c56-9d2b-25ca3c75aa13.xhtml), *Micro-optimizations
    and Memory Management*, explores the best practices for HTML, CSS, JavaScript
    and then, moves on to discuss some of the internal workings of Google Chrome and
    how we can leverage it to render our applications better and more quickly.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Basic knowledge of JavaScript, HTML, and CSS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Have Node.js installed ([https://nodejs.org/en/download/](https://nodejs.org/en/download/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Install WebStorm IDE ([https://www.jetbrains.com/webstorm/download](https://www.jetbrains.com/webstorm/download))
    or similar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A next-generation browser such as Google Chrome ([https://www.google.com/chrome/browser/desktop/](https://www.google.com/chrome/browser/desktop/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Familiarity with Angular 2.0 or greater is a plus but is not required
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The screenshots in this book are taken on a macOS. There would be little difference
    (if any) for users of any other OS. The code samples, however, would run without
    any discrepancies irrespective of the OS. Anywhere we have `CMD/cmd/command` specified,
    please use `CTRL/ctrl/control` key on the windows counterpart. If you see `return`,
    please use *Enter* and if you see the term `terminal/Terminal` please use its
    equivalent `command prompt` on windows.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this book, the code base is built incrementally as the topic progresses.
    So, when you compare the beginning of a code sample with the code base in GitHub,
    be aware that the GitHub code is the final form of the topic or the example that
    you are referring to.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Practical-JavaScript-Data-Structures-and-Algorithms](https://github.com/PacktPublishing/Hands-On-Data-Structures-and-Algorithms-with-JavaScript).
    We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.packtpub.com/sites/default/files/downloads/HandsOnDataStructuresandAlgorithmswithJavaScript_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/HandsOnDataStructuresandAlgorithmswithJavaScript_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "The native array operations have varying time complexities.
    Let''s take `Array.prototype.splice` and `Array.prototype.push`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "When the user clicks on the back button, we will navigate to the
    previous state of the application from the stack."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
