- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: PrimeNG is a leading UI component library for Angular single page applications
    with 80+ rich UI components. PrimeNG has had huge success in the Angular world
    due to its active development over a short space of time. It is a rapidly evolving
    library, which is aligned with the last Angular release. Unlike this competitors,
    PrimeNG was created with enterprise applications in mind. This book provides a
    headstart for readers who want to develop real-time single page applications using
    this popular development stack.
  prefs: []
  type: TYPE_NORMAL
- en: This book consists of ten chapters and starts with a short introduction to single
    page applications. TypeScript and Angular fundamentals are important first steps
    for the PrimeNG topics that follow. Later, it discusses how to set up and configure
    a PrimeNG application in different ways for a kick-start. Once the environment
    is ready, then it is time to learn PrimeNG development, starting with the concept
    of theming and responsive layouts. Readers will learn enhanced Input, Select,
    and Button components, followed by various Panel, DataIteration, Overlays, Messages,
    and Menu components. The validation of form elements will not be missed out. An
    extra chapter demonstrates how to create map and chart components for real-world
    applications. Apart from the built-in UI components and their features, readers
    will see how to customize components as per their requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Miscellaneous use cases are discussed in a separate chapter. Just to name a
    few: file uploading, drag and drop, blocking page pieces during AJAX calls, CRUD
    sample implementation, and more. This chapter goes beyond common topics, implements
    a custom component, and discusses a popular form of state management with @ngrx/store.
    The final chapter describes unit and end-to-end testing. To make sure Angular
    and PrimeNG development is flawless, full-fledged testing frameworks will be explained
    with systematic examples. Tips for speeding up unit testing and debugging Angular
    applications round out this book.'
  prefs: []
  type: TYPE_NORMAL
- en: The book also focuses on how to avoid some common pitfalls, and shows best practices
    with tips and tricks for efficient Angular and PrimeNG development. At the end
    of this book, readers will know the ins and outs of how to use PrimeNG in Angular
    applications and get ready to create real-world Angular applications using rich
    PrimeNG components.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](0cbd9d79-a0ba-42ba-9172-2b76d8ad8788.xhtml)*, Getting Started with
    Angular and PrimeNG*, gives you the knowledge you need to dive into the next chapters.
    The chapter gives an overview of the TypeScript and Angular constructs used in
    this book. It is not possible to explain numerous features in detail. Instead,
    we will concentrate on the most important key concepts such as types, template
    syntax, decorators, component communication scenarios, modularity, and lifecycle
    hooks. After that, this chapter will introduce PrimeNG, which consists of rich
    UI components for Angular 2+, and show three possible project setups using SystemJS
    and Webpack loaders, as well as Angular CLI, a command-line tool for blazing fast
    Angular development.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](f3278626-cfa5-4c6f-8ff2-97df3a45778f.xhtml)*, Theming Concepts
    and Layouts*, introduces PrimeNG themes and the concepts involved. Readers will
    learn about the theming of PrimeNG components. The difference between structural
    and skinning CSS, the recommended project structure when working with SASS, installing
    and customizing PrimeNG themes and creating new themes will all be detailed. A
    discussions of two variants of responsive layouts, PrimeNG''s own grid system,
    and Bootstrap''s flexbox grid, finish this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](56e25fd6-23ba-478f-bde2-6a5f43a1ba49.xhtml)*, Enhanced Inputs and
    Selects*, explains how to work with the input and select components available
    in PrimeNG. Such components are the main parts of every web application. PrimeNG
    provides nearly 20 components for data input that extend the native HTML elements
    with user-friendly interfaces, skinning capabilities, validation, and many other
    useful features.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](78c63c4c-c57b-4776-a409-ef0eafcc5872.xhtml)*, Button and Panel
    Components*, covers various buttons such as radio, split, toggle, and select buttons,
    and Panel components, such as Toolbar, Accordion, FieldSet, and tabbed view. Panel
    components act as container components, which allow the grouping of other components.
    Various settings to configure Panel components are detailed in this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](e0418439-433b-431d-bb3d-5e84f1e91554.xhtml)*, Data Iteration Components*,
    covers basic and advanced features to visualize data with the data iteration components
    provided by PrimeNG, including DataTable, DataList, PickList, OrderList, Tree,
    and TreeTable. The features discussed include sorting, pagination, filtering,
    lazy loading, and single and multiple selections. Advanced data visualization
    with the Schedule and DataScroller components will be demonstrated as well.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](f3c11864-334c-4871-9af2-915d80faa65e.xhtml)*, Amazing Overlays
    and Messages*, demonstrates a range of variations in content, displaying in modal
    or non-modal overlays such as Dialog, LightBox, and Overlay panel. The user does
    not leave the page flow when the content is displayed in the mentioned Overlays.
    An Overlay component overlays other components on a page. PrimeNG also offers
    notification components to show any messages or advisory information. Those components
    will be described as well.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](26ecdd8d-1f1d-4a09-8f2e-c018120abc0b.xhtml)*, Endless Menu Variations*,
    explains several menu variations. PrimeNG''s menus fulfill all major requirements.
    They come with various facets--static, dynamic, tiered, hybrid, iPod-styled, and
    so on, and leave nothing to be desired. Readers will see a lot of recipes that
    discuss menu structure, configuration options, customizations, and integration
    with other components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](4ccf715a-6a7d-4431-b399-f4585293dfca.xhtml)*, Creating Charts and
    Maps*, covers the ways to create visual charts with PrimeNG''s extensive charting
    features and maps based on Google Maps. PrimeNG offers basic and advanced charting
    with its easy-to-use and user-friendly charting infrastructure. Besides standard
    charts, the chapter shows a special organization chart for visualizing hierarchical
    data. Throughout the chapter, mapping abilities such as drawing polylines, polygons,
    handling markers, and events will be explained as well.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](2d7dd952-def7-41fa-bc5a-0fafbbd20eba.xhtml)*, Miscellaneous Use
    Cases and Best Practices*, introduces more interesting features of the PrimeNG
    library. You will learn about file uploading, drag and drop capabilities, displaying
    collections of images, practical CRUD implementation, deferred page loading, blocking
    page pieces, displaying a confirmation dialog with guarded routes, and more. An
    extra section will go through the complete process of building reusable components
    and developing a custom wizard component. After reading this chapter, readers
    will be aware of state-of-the-art state management with @ngrx/store and will see
    the benefits of Redux architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](b5fd2c81-a93b-4c32-a2a6-4978019f283a.xhtml)*, Creating Robust
    Applications*, describes unit and end-to-end testing. The chapter begins with
    setting up a test environment with Jasmine and Karma. To make sure Angular and
    PrimeNG development is flawless, full-fledged testing frameworks will be explained
    with systematic examples. Tips for speeding up testing and debugging Angular applications
    end this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book will guide you through the installation of all the tools that you
    need to follow the examples. You will need to install npm to effectively run the
    code samples present in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for everybody who would like to learn to create modern Angular-based
    single page applications using the PrimeNG component library. This book is a good
    choice for beginner to advanced users who are serious about learning modern Angular
    applications. The prerequisites for this book are some basic knowledge of Angular
    2+, as well as TypeScript and CSS skills.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning. Code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles are shown as follows: "Interfaces begin with the keyword `interface`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "File upload also provides a simpler UI with just one button Choose."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
