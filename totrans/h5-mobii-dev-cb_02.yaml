- en: Chapter 2. Mobile Setup and Optimization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Adding a home screen button icon
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preventing text resize
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Optimizing viewport width
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixing Mobile Safari screen scale
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching phone-specific programs from the browser
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling iPhone start screen in full screen mode
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preventing iOS from zooming onfocus
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disabling or limiting WebKit features
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While there are many operating systems (OS) as well as device makers, inevitably
    there could be cross-browser issues that cost us a lot of headaches. But on the
    other hand, we developers love the challenges and set out to tackle them!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this chapter, we will first focus on cross-browser/browser-specific
    setup and optimizations you may want to consider. We will then go on to look at
    a couple of general/browser-specific features you may want to add at the start
    of your mobile development.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Adding a home screen button icon
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target devices: iOS, Android, Symbian'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: On modern smartphones, screens are mostly touch based. The iPhone revolutionized
    the way we think of mobile by making everything on your device an "app"; even
    SMS and phone dialing behave like apps with an icon on the home screen. For an
    HTML web app, things are a bit different; users have to go to a browser app first,
    type in the address and then launch your site. This can be too much hassle from
    a user perspective, so on certain smartphones, users can bookmark a home screen
    icon to a particular web app, so they can launch that particular web app site
    directly from the icon on their home screen.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: That sounds cool, right? Yes, it does, but there are also issues associated
    with it. Not all browsers behave the same way when it comes to touch icons. In
    this recipe, we will examine the behavior of each browser and how to make home
    screen icons available to as many mobile browsers as possible.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, you have to download the icon sets from the chapter code folder. If
    you open up the folder, you should be able to see the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: These images will be used for different devices.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Create an HTML document and name it `ch02r01.html`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In your HTML document, use the following code:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How it works...
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now let''s break down the code:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: As of iOS 4.2.1, it's possible to specify multiple icons for different device
    resolutions by using the `sizes` attribute.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For high resolution retina displays on iPhone 4, a 114 x 114 icon is used.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For iPad, a 72 x 72 icon can be used. For non-retina iPhone, Android 2.1+ devices,
    a 57 x 57 low resolution icon is used.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For Nokia Symbian 60 devices, a `shortcut icon` is used in link relation to
    tell the device about the shortcut icon.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here is what the bookmark looks like on Android:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/1963_02_1a.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
- en: There's more...
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There must be a couple of questions in your mind after seeing the previous
    example:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Isn't it possible to define more than one value in the `rel` attribute? So can
    we combine the last two lines into something as follows?
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: It was tested, but somehow mobile browsers couldn't recognize the value.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'You might have seen people use:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Together with *Paul Irish* and *Divya Manian*, we have been working on Mobile
    Boilerplate ([http://www.h5bp.com/mobile](http://www.h5bp.com/mobile)) that provides
    a rock-solid default for frontend mobile development. In Mobile Boilerplate, we
    have covered all the current scenarios and possible future scenarios:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/h5bp/mobile-boilerplate/blob/master/index.html#L21](http://github.com/h5bp/mobile-boilerplate/blob/master/index.html#L21)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Everything you always wanted to know about touch icons
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Most ideas presented on this topic are originated from *Mathias Bynens*. His
    original article *Everything you always wanted to know about touch icons* can
    be found at: [http://mathiasbynens.be/notes/touch-icons](http://mathiasbynens.be/notes/touch-icons).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Official documentation about Apple touch icons
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There is a list of official documentation where you can find more information
    about touch icons for each specific device and browser:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: 'Apple touch icon:'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Official information from WHATWG:'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Apple Custom Icon and Image Creation Guidelines
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Guidelines and articles about how to create a touch icon can be found at the
    following article:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Apple—*Custom Icon and Image Creation Guidelines:*
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: See also
  id: totrans-58
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Enabling iPhone start screen in full screen mode*—in this recipe, we will
    see how to add a start screen in full screen mode when launched from the home
    screen touch icon.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Preventing text resize
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target devices: iOS, Windows Mobile'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: On certain mobile devices like the iPhone and Windows Mobile, browser text may
    resize when you rotate the device from portrait to landscape mode. This could
    be problematic to web developers because we want to have full control of the design
    and rendering of the website.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a new HTML file, and name it `ch02r02.html`. Enter the following code:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now render this page in portrait mode in iPhone, as you can see, it will be
    rendered normally as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1963_02_1b.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
- en: 'Now if you render it in the landscape mode, the font size will suddenly increase.
    As we can see when the page is changed to landscape mode, the text will get resized.
    This is not the desired behavior. The following shows how it looks:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1963_02_02.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can follow these steps to fix the issue:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: 'You can add the following lines to the CSS, and then render the page in landscape
    again:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: As You can see, the text now appears normal:![How to do it...](img/1963_02_03.jpg)
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To solve this issue, you have to add a CSS property named `text-size-adjust`
    in WebKit, and assign the value to `none` to prevent the auto adjust.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Setting `text-size-adjust` to none solves the problem for mobile-specific websites,
    but if we render this on a desktop screen or other non-mobile browser, the desktop
    browser text zoom feature will be disabled. To prevent this accessibility issue,
    we can set `text-size-adjust` to `100%` instead of `none`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: 'So we can tweak this example to:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: There's more...
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Apart from iPhone, other devices also have ways to add the text size adjust
    property.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: Windows Mobile
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Windows Mobile IE uses a different prefix. They originally added the WebKit
    prefix. The intent was adding support for the WebKit-specific property to make
    web developers' lives a bit easier by not having to add yet another vendor-prefixed
    CSS property to their pages to control how text was scaled. Even more specifically,
    they intuited that the most common use case for this property was to explicitly
    set it to `none` in order to tell the browser not to scale a particular section
    of the text.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: After hearing the community's feedback on this issue (and a couple of face-plants
    when they realized the broader implications of implementing other browser vendors'
    CSS properties) they've decided that it's best to only implement the `-ms-` prefixed
    version and not the `-webkit-` one.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'So to make the preceding example more complete, you can add:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Making it future proof
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To make things more future proof, you can add one more line without any prefix,
    as follows:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: px em, which is better?
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The common debate about using px versus em is less of a problem on mobile. Originally
    Yahoo! User Interface used ems for the reason that IE6 doesn't support page zoom
    with pixels. On mobile, there isn't such an issue, and even if we want the page
    to render well on desktop browsers, the likelihood of someone using IE6 is getting
    lower and lower, so in most cases, you can save the trouble of using ems and all
    the calculation, and choose instead to use pixels.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Optimizing viewport width
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target device: cross-browser'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Different mobile devices have different default mobile viewport widths. Refer
    to Appendix X for a complete list of default viewport widths for all mobile devices.
    If you leave it unset, in most cases, it will cause an unexpected result. For
    example, in an iPhone if the viewport width is left unset, it will be rendered
    as 980 px.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's create an HTML document and name it `ch02r03.html`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here is what we can do to optimize the viewport width:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code to `ch02r03.html` and render it in your mobile browser:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Here is how it''s rendered by default:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it...](img/1963_02_04.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
- en: 'If we render this example, we can see that everything becomes extremely small.
    Now, let''s set the viewport width to the device width:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now the content width uses the screen width and the text becomes readable:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it...](img/1963_02_05.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
- en: How it works...
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When we set viewport width to device-width, it will tell the browser not to
    scale the page to fix the device area. So for iPhone, the `device-width` is 320
    px in portrait mode and 480 px in landscape mode.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For some really old relic mobile browsers, the `meta` attribute isn''t recognized.
    To deal with these browsers, you need to use:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This is used by older versions of Palm OS, AvantGo, and Blackberry.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: For Microsoft PocketPC, a `MobileOptimized` attribute was introduced.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: 'So the most complete code should look like:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: IE for Windows Phone viewport blog post
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'On IE for Windows Phone Team Weblog, there is an article about *IE Mobile Viewport
    on Windows Phone 7*. In it, the author has explained important information like
    how Windows Phone 7 implements "device-width", together with much other very useful
    information in general. You can read the article here: [http://blogs.msdn.com/b/iemobile/archive/2010/11/22/the-ie-mobile-viewport-on-windows-phone-7.aspx](http://blogs.msdn.com/b/iemobile/archive/2010/11/22/the-ie-mobile-viewport-on-windows-phone-7.aspx).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Safari documentation
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Safari has a reference in the developer''s library at: [http://developer.apple.com/library/safari/#documentation/appleapplications/reference/SafariHTMLRef/Articles/MetaTags.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/SafariHTMLRef/Articles/MetaTags.html).'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: Blackberry documentation
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There is a Blackberry Browser Content Design Guidelines document. It explains
    Blackberry''s use of viewport width: [http://docs.blackberry.com/en/developers/deliverables/4305/BlackBerry_Browser-4.6.0-US.pdf](http://docs.blackberry.com/en/developers/deliverables/4305/BlackBerry_Browser-4.6.0-US.pdf).'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Fixing Mobile Safari screen re-flow scale
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target device: iOS'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: 'Mobile Safari has an annoying screen re-flow bug: When you rotate the mobile
    browser from portrait mode to landscape mode, the text will suddenly jump to a
    bigger size.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: During the time I was working on building Mobile Boilerplate, *Jeremy Keith*
    and I had a long discussion on this issue.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: 'The traditional way of fixing this is to add the following scaling attributes
    to the `meta` viewport:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This solution was first incorporated into Mobile Boilerplate. *Jeremy* pointed
    out that this solves the scale jump problem, but at the same time, it causes another
    issue with accessibility: When you set the values as shown above, you can no longer
    zoom the page to enlarge it. For people with eyesight problems, the ability to
    zoom is essential. But if we let the zoom happen, the text jump will annoy the
    majority of the users. So, for a long time it was an accessibility versus usability
    debate.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: I discovered a method that could tackle the issue and we will discuss this next.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, let''s create an HTML document and name it `ch02r04.html`, enter the
    following code in it:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This page renders perfectly fine in portrait mode:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1963_02_06.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
- en: 'But when displayed in landscape mode, things change:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1963_02_07.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'All we need to do to solve this problem is to dynamically reset the scale factors
    to default when the user zooms in on the page. Now put the following code in your
    HTML document:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now if we rotate the screen from portrait to landscape, the issue should no
    longer exist, and if we zoom in on the page, it will react as expected:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it...](img/1963_02_08.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
- en: How it works...
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's have a walk through of the code to see how it works.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: 'We need to know the default minimum-scale and maximum-scale values. In the
    iPhone''s official documentation, it states that the minimum-scale value is 0.25,
    and the maximum-scale value is 1.6\. So to replace the default value, we need
    to set:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Next, we need to know when to set this. This is very easy: The iPhone has a
    gesture event listener we can use to target the document body. Here is how to
    do so:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Finally, we need to make sure this only happens on iPhone. Again this can be
    easily done using:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: There's more...
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you are interested to know the whole story and discussion between Jeremy
    and I, you can read it at [http://www.blog.highub.com/mobile-2/a-fix-for-iphone-viewport-scale-bug/](http://www.blog.highub.com/mobile-2/a-fix-for-iphone-viewport-scale-bug/).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: 'Even though this provides a fix for the issue, there are a couple of problems
    that some people experience:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: As soon as the user makes a gesture on the document, zooming is enabled again.
    So if you change the device orientation after that, the zoom bug will still occur.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It's reported on iOS4 that users can only effectively start zooming after starting
    a second gesture.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A slightly improved version
  id: totrans-156
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Mathias Bynens* has a revised version with smarter coding. You can see the
    code at'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '[https://gist.github.com/901295](http://gist.github.com/901295).'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: An even better version
  id: totrans-159
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*John-David Dalton* had an even better updated version with smarter and leaner
    code at'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '[https://gist.github.com/903131](http://gist.github.com/903131).'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: A word for jQuery Mobile
  id: totrans-162
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Scott Jehl* from jQuery Mobile mentioned it might be implemented in jQuery
    Mobile in the future. Currently, you could see his gist at [https://gist.github.com/1183357](http://gist.github.com/1183357).'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Launching phone-specific programs from the browser
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target device: cross-browser'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: One can launch phone-specific programs from the mobile browser such as Maps,
    Call, and SMS can be launched from certain mobile devices. Whether the program
    can be launched depends on the availability of the native application on the particular
    device.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create an HTML document and name it `ch02r05.html.`
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here is how we could launch a phone-specific program:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s add the following code to the HTML document:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Now run this code in Palm OS browser, press the address link. You will be prompted
    to launch the map application on your phone:![How to do it...](img/1963_02_09.jpg)
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unlike some schemes, map URLs do not start with a "maps" scheme identifier.
    Instead, map links are specified as regular HTTP links, but are targeted at the
    Google Maps servers. The device browser will be able to tell if it's a map and
    launch the program with the information parsed.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can do more than just launch an application. The following examples show
    the strings you would use to provide driving directions between San Francisco
    and Cupertino:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'So, what if a browser can''t launch a specific program? That''s ok! In this
    case it will just open as a normal link:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/1963_02_10.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
- en: Mobile Safari URL scheme
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A list of all Mobile Safari-related URL schemes can be found at: [http://developer.apple.com/library/safari/#featuredarticles/iPhoneURLScheme_Reference/Introduction/Introduction.html](http://developer.apple.com/library/safari/#featuredarticles/iPhoneURLScheme_Reference/Introduction/Introduction.html).'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: Blackberry URL scheme
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A list of all Blackberry-related URL schemes can be found at: [http://docs.blackberry.com/en/developers/deliverables/18169/](http://docs.blackberry.com/en/developers/deliverables/18169/).'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 所有与黑莓相关的URL方案列表可以在以下网址找到：[http://docs.blackberry.com/en/developers/deliverables/18169/](http://docs.blackberry.com/en/developers/deliverables/18169/)。
- en: Sony Ericsson developers' guidelines
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索尼爱立信开发者指南
- en: 'Sony Ericsson developers can download *Web Browsing Developer Guidelines* from
    the Developer World site at: [http://developer.sonyericsson.com/wportal/devworld/search-downloads?cat=%5B1.706817%2C+1.716594%2C+1.716688%5D&cc=gb&lc=en](http://developer.sonyericsson.com/wportal/devworld/search-downloads?cat=%5B1.706817%2C+1.716594%2C+1.716688%5D&cc=gb&lc=en).'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 索尼爱立信开发者可以从Developer World网站下载*Web浏览开发者指南*：[http://developer.sonyericsson.com/wportal/devworld/search-downloads?cat=%5B1.706817%2C+1.716594%2C+1.716688%5D&cc=gb&lc=en](http://developer.sonyericsson.com/wportal/devworld/search-downloads?cat=%5B1.706817%2C+1.716594%2C+1.716688%5D&cc=gb&lc=en)。
- en: Enabling iPhone start screen in full screen mode
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用iPhone全屏模式的启动屏幕
- en: 'Target-device: iOS'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 目标设备：iOS
- en: To make a web app feel more like a native app, the iPhone has quite a few unique
    features for developers to add on web apps. You can add start screen in full screen
    mode, and style the status bar, as well as defining a pre-load screen for the
    app.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使Web应用更像本机应用，iPhone有一些独特的功能供开发者在Web应用上添加。您可以在全屏模式下添加启动屏幕，并为应用定义预加载屏幕。
- en: Getting ready
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Download the images in the source code provided, create an HTML document, and
    name it `ch02r06.html`.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 下载提供的源代码中的图像，创建一个HTML文档，并将其命名为`ch02r06.html`。
- en: How to do it...
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到的...
- en: 'Here is how we can make the start screen in full screen mode:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们如何使启动屏幕进入全屏模式：
- en: 'Enter the following HTML code:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下HTML代码：
- en: '[PRE29]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: If you bookmark the page and open it in the browser from the app icon, it will
    display as a full-screen app.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您将该页面添加到书签并从应用图标在浏览器中打开，它将显示为全屏应用。
- en: How it works...
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Let''s go through the code:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下代码：
- en: '[PRE30]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This makes the web page run in full screen mode when launched from the home
    screen icon, hides the address bar and component bar at the browser's top and
    bottom.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得网页在从主屏幕图标启动时以全屏模式运行，隐藏了浏览器顶部和底部的地址栏和组件栏。
- en: '[PRE31]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This styles the status bar at the top of browser.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码是为了给浏览器顶部的状态栏添加样式。
- en: '[PRE32]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: You can also add a splash screen when the app launches, which is a preload screen
    displayed while the page is still loading.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在应用启动时添加一个启动屏幕，这是在页面仍在加载时显示的预加载屏幕。
- en: There's more...
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'iPad and iPhone have different splash screen sizes, so if we want the site
    to dynamically change the splash screen, this depends on the browser used to render.
    We can use the following JavaScript function to do this:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: iPad和iPhone有不同的启动屏幕尺寸，所以如果我们希望网站动态更改启动屏幕，这取决于用于渲染的浏览器。我们可以使用以下JavaScript函数来实现：
- en: '[PRE33]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Full screen issue with iOS 4.3
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: iOS 4.3的全屏问题
- en: iOS 4.3 introduced a new feature which they call the JavaScript Nitro Engine.
    This new code allows the default Safari browser to load pages up to twice as fast.
    However, this feature didn't seem to be supported by full screen web applications.
    While some question why Apple didn't incorporate the new Safari feature with its
    web applications, others also point to evidence that it might just be a bug.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 4.3引入了一个他们称之为JavaScript Nitro Engine的新功能。这段新代码允许默认的Safari浏览器加载页面的速度提高了一倍。然而，这个功能似乎不支持全屏Web应用。虽然一些人质疑为什么苹果没有将新的Safari功能与其Web应用整合在一起，但也有人指出证据表明这可能只是一个bug。
- en: Safari documentation about web applications
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Safari关于Web应用的文档
- en: 'For the official documentation, you can visit the site on Safari at:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 官方文档可以在Safari上访问以下网站：
- en: '[http://developer.apple.com/library/safari/#documentation/appleapplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html](http://developer.apple.com/library/safari/#documentation/appleapplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.apple.com/library/safari/#documentation/appleapplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html](http://developer.apple.com/library/safari/#documentation/appleapplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html)'
- en: Safari splash image and touch icon guidelines
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Safari启动图像和触摸图标指南
- en: 'For splash image and touch icon guidelines, you can visit Custom Icon and Image
    Creation Guidelines on the official Safari site:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 有关启动图像和触摸图标指南，您可以访问官方Safari网站上的自定义图标和图像创建指南：
- en: '`http://developer.apple.com/library/safari/#documentation/UserExperience/Conceptual/MobileHIG/IconsImages/IconsImages.html#//apple_ref/doc/uid/TP40006556-CH14`'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://developer.apple.com/library/safari/#documentation/UserExperience/Conceptual/MobileHIG/IconsImages/IconsImages.html#//apple_ref/doc/uid/TP40006556-CH14`'
- en: Prevent iOS from zooming onfocus
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防止iOS在焦点上缩放
- en: 'Target device: iOS'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 目标设备：iOS
- en: In JavaScript events API, there is a `form onfocus` event. When you tap on a
    form element in iOS, the element will zoom in on the device screen. For a site
    not designed to be responsive or mobile-specific, such default zooming can be
    helpful, but for a site that is mobile optimized, this could be less helpful and
    can be annoying. To disable this default behavior, we could change the meta viewport
    value `onfocus` and `onblur`.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在JavaScript事件API中，有一个`form onfocus`事件。当您在iOS中点击表单元素时，元素将放大显示在设备屏幕上。对于未设计为响应式或移动特定的网站，这种默认缩放可能有所帮助，但对于移动优化的网站来说，这可能没有那么有用，甚至可能很烦人。为了禁用这种默认行为，我们可以更改meta
    viewport值`onfocus`和`onblur`。
- en: Getting ready
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create an HTML document and name it `ch02r06_b.html`.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个HTML文档，并将其命名为`ch02r06_b.html`。
- en: How to do it...
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到的...
- en: 'Here is how we could launch a phone-specific program:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们如何启动一个特定于手机的程序：
- en: 'Let''s add the following code to the HTML document:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将以下代码添加到HTML文档中：
- en: '[PRE34]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Now, render the page in the iOS devices, touch focus the form input field, and
    as you can see, now the input field won't zoom in.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在iOS设备中渲染页面，触摸聚焦表单输入字段，您会发现现在输入字段不会放大。
- en: How it works...
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Now let''s extract out the JavaScript portion:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们提取出JavaScript部分：
- en: '[PRE35]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: What the script does is when the `onfocus` event is detected, we set the maximum-scale
    to 1 and when `onblur` is detected, we set it to 10.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的作用是检测到`onfocus`事件时，我们将最大缩放比例设置为1，当检测到`onblur`时，我们将其设置为10。
- en: There's more...
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'You can read more about the original blog post discussion at:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以阅读有关原始博客帖子讨论的更多信息：
- en: '[http://nerd.vasilis.nl/prevent-ios-from-zooming-onfocus/](http://nerd.vasilis.nl/prevent-ios-from-zooming-onfocus/)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://nerd.vasilis.nl/prevent-ios-from-zooming-onfocus/](http://nerd.vasilis.nl/prevent-ios-from-zooming-onfocus/)'
- en: 'This code snippet was added to Mobile Boilerplate:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段已添加到Mobile Boilerplate：
- en: '[https://github.com/h5bp/mobile-boilerplate/blob/master/js/mylibs/helper.js](http://github.com/h5bp/mobile-boilerplate/blob/master/js/mylibs/helper.js)'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/h5bp/mobile-boilerplate/blob/master/js/mylibs/helper.js](http://github.com/h5bp/mobile-boilerplate/blob/master/js/mylibs/helper.js)'
- en: Disabling or limiting WebKit features
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 禁用或限制WebKit功能
- en: 'Target-device: WebKit mobile browsers (Android, iOS)'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 目标设备：WebKit移动浏览器（Android，iOS）
- en: There are many device-specific issues in mobile browsers. With a few less-known
    CSS techniques, we could tackle these issues easily. Let's take a look at some
    of the issues and how we can magically get them fixed.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 移动浏览器中存在许多特定设备的问题。通过一些不太为人知的CSS技术，我们可以轻松解决这些问题。让我们看看一些问题以及我们如何神奇地解决它们。
- en: Getting ready
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create an HTML document and name it `ch02r07.html`.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个HTML文档并将其命名为`ch02r07.html`。
- en: How to do it...
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Here is an example of how to limit the WebKit feature:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是限制WebKit功能的示例：
- en: 'Add the following code into the HTML document:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到HTML文档中：
- en: '[PRE36]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '![How to do it...](img/1963_02_11.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: 如何做到...
- en: Now, enter the additional code to the HTML document,
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将附加代码输入到HTML文档中，
- en: '[PRE37]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '![How to do it...](img/1963_02_12.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: 如何做到...
- en: How it works...
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Without setting `webkit-touch-callout`, when you tap and hold a link on your
    device, there will be a prompt asking you if you want to open it in the current
    page, open it in the new page or copy, as shown in the first example.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不设置`webkit-touch-callout`，当您在设备上点击并按住链接时，将会出现提示，询问您是否要在当前页面中打开它，在新页面中打开它或复制，如第一个示例所示。
- en: If you want to disable this feature, you can do so by setting `webkit-touch-callout`
    value to `none`, as shown in the second example.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要禁用此功能，可以通过将`webkit-touch-callout`值设置为`none`来实现，如第二个示例所示。
- en: There's more...
  id: totrans-251
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Another feature you might want to limit is the copy-and-paste. This feature
    makes sense on a web page, but for most interface elements of an application it
    is not wanted.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还想限制的另一个功能是复制和粘贴。这个功能在网页上是有意义的，但对于大多数应用程序的界面元素来说是不需要的。
- en: '[PRE38]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Changing the tap color
  id: totrans-254
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 更改点击颜色
- en: 'You can change the tap color by using the following rule:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下规则更改点击颜色：
- en: '[PRE39]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Making text area content editable
  id: totrans-257
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使文本区域内容可编辑
- en: 'If you want to have an element as `contenteditable`, you can use the following
    CSS:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要将元素设置为`contenteditable`，可以使用以下CSS：
- en: '[PRE40]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Ellipsis for the narrow screen
  id: totrans-260
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 窄屏幕的省略号
- en: 'On mobile browsers, the screen is much narrower, so when you are displaying
    a menu title list, text overflow may occur. If this happens, a CSS trick could
    help you fix text overflow with ellipsis:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动浏览器上，屏幕要窄得多，因此在显示菜单标题列表时，可能会发生文本溢出。如果发生这种情况，CSS技巧可以帮助您使用省略号修复文本溢出：
- en: '[PRE41]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
