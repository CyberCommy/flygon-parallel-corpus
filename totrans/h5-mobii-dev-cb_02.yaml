- en: Chapter 2. Mobile Setup and Optimization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding a home screen button icon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preventing text resize
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Optimizing viewport width
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixing Mobile Safari screen scale
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching phone-specific programs from the browser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling iPhone start screen in full screen mode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preventing iOS from zooming onfocus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disabling or limiting WebKit features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While there are many operating systems (OS) as well as device makers, inevitably
    there could be cross-browser issues that cost us a lot of headaches. But on the
    other hand, we developers love the challenges and set out to tackle them!
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this chapter, we will first focus on cross-browser/browser-specific
    setup and optimizations you may want to consider. We will then go on to look at
    a couple of general/browser-specific features you may want to add at the start
    of your mobile development.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a home screen button icon
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target devices: iOS, Android, Symbian'
  prefs: []
  type: TYPE_NORMAL
- en: On modern smartphones, screens are mostly touch based. The iPhone revolutionized
    the way we think of mobile by making everything on your device an "app"; even
    SMS and phone dialing behave like apps with an icon on the home screen. For an
    HTML web app, things are a bit different; users have to go to a browser app first,
    type in the address and then launch your site. This can be too much hassle from
    a user perspective, so on certain smartphones, users can bookmark a home screen
    icon to a particular web app, so they can launch that particular web app site
    directly from the icon on their home screen.
  prefs: []
  type: TYPE_NORMAL
- en: That sounds cool, right? Yes, it does, but there are also issues associated
    with it. Not all browsers behave the same way when it comes to touch icons. In
    this recipe, we will examine the behavior of each browser and how to make home
    screen icons available to as many mobile browsers as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, you have to download the icon sets from the chapter code folder. If
    you open up the folder, you should be able to see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: These images will be used for different devices.
  prefs: []
  type: TYPE_NORMAL
- en: Create an HTML document and name it `ch02r01.html`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In your HTML document, use the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now let''s break down the code:'
  prefs: []
  type: TYPE_NORMAL
- en: As of iOS 4.2.1, it's possible to specify multiple icons for different device
    resolutions by using the `sizes` attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: For high resolution retina displays on iPhone 4, a 114 x 114 icon is used.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: For iPad, a 72 x 72 icon can be used. For non-retina iPhone, Android 2.1+ devices,
    a 57 x 57 low resolution icon is used.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: For Nokia Symbian 60 devices, a `shortcut icon` is used in link relation to
    tell the device about the shortcut icon.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is what the bookmark looks like on Android:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/1963_02_1a.jpg)'
  prefs: []
  type: TYPE_IMG
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There must be a couple of questions in your mind after seeing the previous
    example:'
  prefs: []
  type: TYPE_NORMAL
- en: Isn't it possible to define more than one value in the `rel` attribute? So can
    we combine the last two lines into something as follows?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: It was tested, but somehow mobile browsers couldn't recognize the value.
  prefs: []
  type: TYPE_NORMAL
- en: 'You might have seen people use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Together with *Paul Irish* and *Divya Manian*, we have been working on Mobile
    Boilerplate ([http://www.h5bp.com/mobile](http://www.h5bp.com/mobile)) that provides
    a rock-solid default for frontend mobile development. In Mobile Boilerplate, we
    have covered all the current scenarios and possible future scenarios:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/h5bp/mobile-boilerplate/blob/master/index.html#L21](http://github.com/h5bp/mobile-boilerplate/blob/master/index.html#L21)'
  prefs: []
  type: TYPE_NORMAL
- en: Everything you always wanted to know about touch icons
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Most ideas presented on this topic are originated from *Mathias Bynens*. His
    original article *Everything you always wanted to know about touch icons* can
    be found at: [http://mathiasbynens.be/notes/touch-icons](http://mathiasbynens.be/notes/touch-icons).'
  prefs: []
  type: TYPE_NORMAL
- en: Official documentation about Apple touch icons
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There is a list of official documentation where you can find more information
    about touch icons for each specific device and browser:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Apple touch icon:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Official information from WHATWG:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Apple Custom Icon and Image Creation Guidelines
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Guidelines and articles about how to create a touch icon can be found at the
    following article:'
  prefs: []
  type: TYPE_NORMAL
- en: Apple—*Custom Icon and Image Creation Guidelines:*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Enabling iPhone start screen in full screen mode*—in this recipe, we will
    see how to add a start screen in full screen mode when launched from the home
    screen touch icon.'
  prefs: []
  type: TYPE_NORMAL
- en: Preventing text resize
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target devices: iOS, Windows Mobile'
  prefs: []
  type: TYPE_NORMAL
- en: On certain mobile devices like the iPhone and Windows Mobile, browser text may
    resize when you rotate the device from portrait to landscape mode. This could
    be problematic to web developers because we want to have full control of the design
    and rendering of the website.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a new HTML file, and name it `ch02r02.html`. Enter the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Now render this page in portrait mode in iPhone, as you can see, it will be
    rendered normally as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1963_02_1b.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now if you render it in the landscape mode, the font size will suddenly increase.
    As we can see when the page is changed to landscape mode, the text will get resized.
    This is not the desired behavior. The following shows how it looks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1963_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can follow these steps to fix the issue:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can add the following lines to the CSS, and then render the page in landscape
    again:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: As You can see, the text now appears normal:![How to do it...](img/1963_02_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To solve this issue, you have to add a CSS property named `text-size-adjust`
    in WebKit, and assign the value to `none` to prevent the auto adjust.
  prefs: []
  type: TYPE_NORMAL
- en: Setting `text-size-adjust` to none solves the problem for mobile-specific websites,
    but if we render this on a desktop screen or other non-mobile browser, the desktop
    browser text zoom feature will be disabled. To prevent this accessibility issue,
    we can set `text-size-adjust` to `100%` instead of `none`.
  prefs: []
  type: TYPE_NORMAL
- en: 'So we can tweak this example to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Apart from iPhone, other devices also have ways to add the text size adjust
    property.
  prefs: []
  type: TYPE_NORMAL
- en: Windows Mobile
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Windows Mobile IE uses a different prefix. They originally added the WebKit
    prefix. The intent was adding support for the WebKit-specific property to make
    web developers' lives a bit easier by not having to add yet another vendor-prefixed
    CSS property to their pages to control how text was scaled. Even more specifically,
    they intuited that the most common use case for this property was to explicitly
    set it to `none` in order to tell the browser not to scale a particular section
    of the text.
  prefs: []
  type: TYPE_NORMAL
- en: After hearing the community's feedback on this issue (and a couple of face-plants
    when they realized the broader implications of implementing other browser vendors'
    CSS properties) they've decided that it's best to only implement the `-ms-` prefixed
    version and not the `-webkit-` one.
  prefs: []
  type: TYPE_NORMAL
- en: 'So to make the preceding example more complete, you can add:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Making it future proof
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To make things more future proof, you can add one more line without any prefix,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: px em, which is better?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The common debate about using px versus em is less of a problem on mobile. Originally
    Yahoo! User Interface used ems for the reason that IE6 doesn't support page zoom
    with pixels. On mobile, there isn't such an issue, and even if we want the page
    to render well on desktop browsers, the likelihood of someone using IE6 is getting
    lower and lower, so in most cases, you can save the trouble of using ems and all
    the calculation, and choose instead to use pixels.
  prefs: []
  type: TYPE_NORMAL
- en: Optimizing viewport width
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target device: cross-browser'
  prefs: []
  type: TYPE_NORMAL
- en: Different mobile devices have different default mobile viewport widths. Refer
    to Appendix X for a complete list of default viewport widths for all mobile devices.
    If you leave it unset, in most cases, it will cause an unexpected result. For
    example, in an iPhone if the viewport width is left unset, it will be rendered
    as 980 px.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's create an HTML document and name it `ch02r03.html`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here is what we can do to optimize the viewport width:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code to `ch02r03.html` and render it in your mobile browser:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is how it''s rendered by default:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it...](img/1963_02_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If we render this example, we can see that everything becomes extremely small.
    Now, let''s set the viewport width to the device width:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Now the content width uses the screen width and the text becomes readable:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it...](img/1963_02_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When we set viewport width to device-width, it will tell the browser not to
    scale the page to fix the device area. So for iPhone, the `device-width` is 320
    px in portrait mode and 480 px in landscape mode.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For some really old relic mobile browsers, the `meta` attribute isn''t recognized.
    To deal with these browsers, you need to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: This is used by older versions of Palm OS, AvantGo, and Blackberry.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: For Microsoft PocketPC, a `MobileOptimized` attribute was introduced.
  prefs: []
  type: TYPE_NORMAL
- en: 'So the most complete code should look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: IE for Windows Phone viewport blog post
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'On IE for Windows Phone Team Weblog, there is an article about *IE Mobile Viewport
    on Windows Phone 7*. In it, the author has explained important information like
    how Windows Phone 7 implements "device-width", together with much other very useful
    information in general. You can read the article here: [http://blogs.msdn.com/b/iemobile/archive/2010/11/22/the-ie-mobile-viewport-on-windows-phone-7.aspx](http://blogs.msdn.com/b/iemobile/archive/2010/11/22/the-ie-mobile-viewport-on-windows-phone-7.aspx).'
  prefs: []
  type: TYPE_NORMAL
- en: Safari documentation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Safari has a reference in the developer''s library at: [http://developer.apple.com/library/safari/#documentation/appleapplications/reference/SafariHTMLRef/Articles/MetaTags.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/SafariHTMLRef/Articles/MetaTags.html).'
  prefs: []
  type: TYPE_NORMAL
- en: Blackberry documentation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There is a Blackberry Browser Content Design Guidelines document. It explains
    Blackberry''s use of viewport width: [http://docs.blackberry.com/en/developers/deliverables/4305/BlackBerry_Browser-4.6.0-US.pdf](http://docs.blackberry.com/en/developers/deliverables/4305/BlackBerry_Browser-4.6.0-US.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Fixing Mobile Safari screen re-flow scale
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target device: iOS'
  prefs: []
  type: TYPE_NORMAL
- en: 'Mobile Safari has an annoying screen re-flow bug: When you rotate the mobile
    browser from portrait mode to landscape mode, the text will suddenly jump to a
    bigger size.'
  prefs: []
  type: TYPE_NORMAL
- en: During the time I was working on building Mobile Boilerplate, *Jeremy Keith*
    and I had a long discussion on this issue.
  prefs: []
  type: TYPE_NORMAL
- en: 'The traditional way of fixing this is to add the following scaling attributes
    to the `meta` viewport:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'This solution was first incorporated into Mobile Boilerplate. *Jeremy* pointed
    out that this solves the scale jump problem, but at the same time, it causes another
    issue with accessibility: When you set the values as shown above, you can no longer
    zoom the page to enlarge it. For people with eyesight problems, the ability to
    zoom is essential. But if we let the zoom happen, the text jump will annoy the
    majority of the users. So, for a long time it was an accessibility versus usability
    debate.'
  prefs: []
  type: TYPE_NORMAL
- en: I discovered a method that could tackle the issue and we will discuss this next.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, let''s create an HTML document and name it `ch02r04.html`, enter the
    following code in it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'This page renders perfectly fine in portrait mode:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1963_02_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'But when displayed in landscape mode, things change:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/1963_02_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'All we need to do to solve this problem is to dynamically reset the scale factors
    to default when the user zooms in on the page. Now put the following code in your
    HTML document:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Now if we rotate the screen from portrait to landscape, the issue should no
    longer exist, and if we zoom in on the page, it will react as expected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it...](img/1963_02_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's have a walk through of the code to see how it works.
  prefs: []
  type: TYPE_NORMAL
- en: 'We need to know the default minimum-scale and maximum-scale values. In the
    iPhone''s official documentation, it states that the minimum-scale value is 0.25,
    and the maximum-scale value is 1.6\. So to replace the default value, we need
    to set:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we need to know when to set this. This is very easy: The iPhone has a
    gesture event listener we can use to target the document body. Here is how to
    do so:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we need to make sure this only happens on iPhone. Again this can be
    easily done using:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: There's more...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you are interested to know the whole story and discussion between Jeremy
    and I, you can read it at [http://www.blog.highub.com/mobile-2/a-fix-for-iphone-viewport-scale-bug/](http://www.blog.highub.com/mobile-2/a-fix-for-iphone-viewport-scale-bug/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Even though this provides a fix for the issue, there are a couple of problems
    that some people experience:'
  prefs: []
  type: TYPE_NORMAL
- en: As soon as the user makes a gesture on the document, zooming is enabled again.
    So if you change the device orientation after that, the zoom bug will still occur.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It's reported on iOS4 that users can only effectively start zooming after starting
    a second gesture.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A slightly improved version
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Mathias Bynens* has a revised version with smarter coding. You can see the
    code at'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://gist.github.com/901295](http://gist.github.com/901295).'
  prefs: []
  type: TYPE_NORMAL
- en: An even better version
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*John-David Dalton* had an even better updated version with smarter and leaner
    code at'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://gist.github.com/903131](http://gist.github.com/903131).'
  prefs: []
  type: TYPE_NORMAL
- en: A word for jQuery Mobile
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Scott Jehl* from jQuery Mobile mentioned it might be implemented in jQuery
    Mobile in the future. Currently, you could see his gist at [https://gist.github.com/1183357](http://gist.github.com/1183357).'
  prefs: []
  type: TYPE_NORMAL
- en: Launching phone-specific programs from the browser
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target device: cross-browser'
  prefs: []
  type: TYPE_NORMAL
- en: One can launch phone-specific programs from the mobile browser such as Maps,
    Call, and SMS can be launched from certain mobile devices. Whether the program
    can be launched depends on the availability of the native application on the particular
    device.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create an HTML document and name it `ch02r05.html.`
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here is how we could launch a phone-specific program:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s add the following code to the HTML document:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Now run this code in Palm OS browser, press the address link. You will be prompted
    to launch the map application on your phone:![How to do it...](img/1963_02_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unlike some schemes, map URLs do not start with a "maps" scheme identifier.
    Instead, map links are specified as regular HTTP links, but are targeted at the
    Google Maps servers. The device browser will be able to tell if it's a map and
    launch the program with the information parsed.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can do more than just launch an application. The following examples show
    the strings you would use to provide driving directions between San Francisco
    and Cupertino:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'So, what if a browser can''t launch a specific program? That''s ok! In this
    case it will just open as a normal link:'
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/1963_02_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Mobile Safari URL scheme
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A list of all Mobile Safari-related URL schemes can be found at: [http://developer.apple.com/library/safari/#featuredarticles/iPhoneURLScheme_Reference/Introduction/Introduction.html](http://developer.apple.com/library/safari/#featuredarticles/iPhoneURLScheme_Reference/Introduction/Introduction.html).'
  prefs: []
  type: TYPE_NORMAL
- en: Blackberry URL scheme
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A list of all Blackberry-related URL schemes can be found at: [http://docs.blackberry.com/en/developers/deliverables/18169/](http://docs.blackberry.com/en/developers/deliverables/18169/).'
  prefs: []
  type: TYPE_NORMAL
- en: Sony Ericsson developers' guidelines
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Sony Ericsson developers can download *Web Browsing Developer Guidelines* from
    the Developer World site at: [http://developer.sonyericsson.com/wportal/devworld/search-downloads?cat=%5B1.706817%2C+1.716594%2C+1.716688%5D&cc=gb&lc=en](http://developer.sonyericsson.com/wportal/devworld/search-downloads?cat=%5B1.706817%2C+1.716594%2C+1.716688%5D&cc=gb&lc=en).'
  prefs: []
  type: TYPE_NORMAL
- en: Enabling iPhone start screen in full screen mode
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target-device: iOS'
  prefs: []
  type: TYPE_NORMAL
- en: To make a web app feel more like a native app, the iPhone has quite a few unique
    features for developers to add on web apps. You can add start screen in full screen
    mode, and style the status bar, as well as defining a pre-load screen for the
    app.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Download the images in the source code provided, create an HTML document, and
    name it `ch02r06.html`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here is how we can make the start screen in full screen mode:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter the following HTML code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: If you bookmark the page and open it in the browser from the app icon, it will
    display as a full-screen app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s go through the code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: This makes the web page run in full screen mode when launched from the home
    screen icon, hides the address bar and component bar at the browser's top and
    bottom.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: This styles the status bar at the top of browser.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: You can also add a splash screen when the app launches, which is a preload screen
    displayed while the page is still loading.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'iPad and iPhone have different splash screen sizes, so if we want the site
    to dynamically change the splash screen, this depends on the browser used to render.
    We can use the following JavaScript function to do this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Full screen issue with iOS 4.3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: iOS 4.3 introduced a new feature which they call the JavaScript Nitro Engine.
    This new code allows the default Safari browser to load pages up to twice as fast.
    However, this feature didn't seem to be supported by full screen web applications.
    While some question why Apple didn't incorporate the new Safari feature with its
    web applications, others also point to evidence that it might just be a bug.
  prefs: []
  type: TYPE_NORMAL
- en: Safari documentation about web applications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the official documentation, you can visit the site on Safari at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://developer.apple.com/library/safari/#documentation/appleapplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html](http://developer.apple.com/library/safari/#documentation/appleapplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Safari splash image and touch icon guidelines
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For splash image and touch icon guidelines, you can visit Custom Icon and Image
    Creation Guidelines on the official Safari site:'
  prefs: []
  type: TYPE_NORMAL
- en: '`http://developer.apple.com/library/safari/#documentation/UserExperience/Conceptual/MobileHIG/IconsImages/IconsImages.html#//apple_ref/doc/uid/TP40006556-CH14`'
  prefs: []
  type: TYPE_NORMAL
- en: Prevent iOS from zooming onfocus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target device: iOS'
  prefs: []
  type: TYPE_NORMAL
- en: In JavaScript events API, there is a `form onfocus` event. When you tap on a
    form element in iOS, the element will zoom in on the device screen. For a site
    not designed to be responsive or mobile-specific, such default zooming can be
    helpful, but for a site that is mobile optimized, this could be less helpful and
    can be annoying. To disable this default behavior, we could change the meta viewport
    value `onfocus` and `onblur`.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create an HTML document and name it `ch02r06_b.html`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here is how we could launch a phone-specific program:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s add the following code to the HTML document:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Now, render the page in the iOS devices, touch focus the form input field, and
    as you can see, now the input field won't zoom in.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now let''s extract out the JavaScript portion:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: What the script does is when the `onfocus` event is detected, we set the maximum-scale
    to 1 and when `onblur` is detected, we set it to 10.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can read more about the original blog post discussion at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://nerd.vasilis.nl/prevent-ios-from-zooming-onfocus/](http://nerd.vasilis.nl/prevent-ios-from-zooming-onfocus/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'This code snippet was added to Mobile Boilerplate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/h5bp/mobile-boilerplate/blob/master/js/mylibs/helper.js](http://github.com/h5bp/mobile-boilerplate/blob/master/js/mylibs/helper.js)'
  prefs: []
  type: TYPE_NORMAL
- en: Disabling or limiting WebKit features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target-device: WebKit mobile browsers (Android, iOS)'
  prefs: []
  type: TYPE_NORMAL
- en: There are many device-specific issues in mobile browsers. With a few less-known
    CSS techniques, we could tackle these issues easily. Let's take a look at some
    of the issues and how we can magically get them fixed.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create an HTML document and name it `ch02r07.html`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here is an example of how to limit the WebKit feature:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code into the HTML document:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '![How to do it...](img/1963_02_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now, enter the additional code to the HTML document,
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '![How to do it...](img/1963_02_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Without setting `webkit-touch-callout`, when you tap and hold a link on your
    device, there will be a prompt asking you if you want to open it in the current
    page, open it in the new page or copy, as shown in the first example.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to disable this feature, you can do so by setting `webkit-touch-callout`
    value to `none`, as shown in the second example.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another feature you might want to limit is the copy-and-paste. This feature
    makes sense on a web page, but for most interface elements of an application it
    is not wanted.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Changing the tap color
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'You can change the tap color by using the following rule:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Making text area content editable
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If you want to have an element as `contenteditable`, you can use the following
    CSS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Ellipsis for the narrow screen
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'On mobile browsers, the screen is much narrower, so when you are displaying
    a menu title list, text overflow may occur. If this happens, a CSS trick could
    help you fix text overflow with ellipsis:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
