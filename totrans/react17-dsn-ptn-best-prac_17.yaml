- en: Deploying to Production
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have completed your first React application, it is time to learn
    how to deploy it to the world. For this purpose, we will use the cloud service
    called **DigitalOcean**.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will learn how to deploy your React application using Node.js
    and nginx on an Ubuntu server from DigitalOcean.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a DigitalOcean Droplet and configuring it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring nginx, PM2, and a domain
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing CircleCI for continuous integration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To complete this chapter, you will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Node.js 12+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visual Studio Code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating our first DigitalOcean Droplet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I have used DigitalOcean for the last six years and I can say that it is one
    of the best cloud services I have tried, not just because of the affordable costs,
    but also because it is super easy and fast to configure, and the community has
    a lot of updated documentation to fix most of the common issues related to server
    configuration.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you will need to invest some money to get this service. I will
    show you the cheapest way to do this, and if in the future you want to increase
    the power of your Droplets, you will be able to increase the capacity without
    redoing the configuration. The lowest price for the very basic Droplet is $5.00
    per month ($0.007 per hour).
  prefs: []
  type: TYPE_NORMAL
- en: We are going to use Ubuntu 20.04 (but feel free to use the latest version 21.04);
    you will need to know some basic Linux commands to be able to configure your Droplet.
    If you're a beginner using Linux, don't worryâ€”I'll try to show you each step in
    a very easy way.
  prefs: []
  type: TYPE_NORMAL
- en: Signing up to DigitalOcean
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you don't have a DigitalOcean account, you can sign up at [https://cloud.digitalocean.com/registrations/new](https://cloud.digitalocean.com/registrations/new).
  prefs: []
  type: TYPE_NORMAL
- en: 'You can sign up with your Google account, or by registering manually. Once
    you register with Google, you will see the billing info view, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/3a701cc0-3c9a-4cc5-b304-4e518723cc42.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can pay with your credit card or by using PayPal. Once you have configured
    your payment information, DigitalOcean will ask you for some information about
    your project so that it can configure your Droplet faster:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/5c0957de-f2de-41fc-988c-56f81847ff0d.png)'
  prefs: []
  type: TYPE_IMG
- en: In the next section, we will create our first Droplet.
  prefs: []
  type: TYPE_NORMAL
- en: Creating our first Droplet
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will create a new Droplet from scratch. Follow these steps to do so:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the New Droplet option, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/23ed5cba-50b3-4543-b43b-c28748a63f9b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Choose Ubuntu 20.04 (LTS) x64, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/d876496c-e9fa-4f4e-add7-9cd4835d1c0f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, choose the Basic plan, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/f32ed3a4-0eca-4bc9-aa91-5d7195394c30.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can then choose $5/mo in the payment plan options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/af83dac7-4472-4cb8-880c-41bb235b2957.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select a region. In this case, we will select the San Francisco region:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/bd868940-2def-4a09-967c-5fd7631912ba.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Create a root password, add the name of your Droplet and then click on the
    Create Droplet button, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/247ea094-92a3-4cc7-9371-70c6265443c1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It will take around 30 seconds to create your Droplet. Once it has been created,
    you will be able to see it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/e3344cf7-d36f-4777-8d98-f67e0960ac9a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, in your Terminal, you can  access the Droplet by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The first time you access it will ask you for the fingerprint, you just need
    to write Yes, and then it will require your password (the one you defined when
    you created your droplet).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/f96f42b3-0d0b-47a9-a8af-7df7765da8cd.png)'
  prefs: []
  type: TYPE_IMG
- en: Now we are all set to install Node.js, which we will be covering in the next
    section.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Node.js
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that you''re connected to your Droplet, let''s configure it. First, we
    need to install the latest version of Node.js using a Personal Package Archive.
    The current version of Node at the time of writing this book is 14.16.x. Follow
    these given steps to install Node.js:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If, when you are reading this paragraph, Node has a new version, change the
    version in the `setup_14.x` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Once you get the `nodesource_setup.sh` file, run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, install Node by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'If everything works fine, verify the installed version of Node and `npm` with
    the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: If you need a newer version of Node.js, you can always upgrade it.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Git and GitHub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I created a special repository for helping you to deploy your first React application
    to production ([https://github.com/D3vEducation/production](https://github.com/D3vEducation/production)).
  prefs: []
  type: TYPE_NORMAL
- en: 'In your Droplet, you need to clone this Git repository (or your own repository
    if you have your React application ready to be deployed). The production repository
    is public, but normally you will use a private repository; in this case, you need
    to add the SSH key of your Droplet to your GitHub account. To create this key,
    follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the `ssh-keygen` command and then press *Enter* three times without writing
    any passphrase:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/11f59ac8-2627-4f93-90ca-3209bb5a8967.png)If you left your Terminal
    inactive for more than five minutes, your Droplet connection will probably be
    closed, and you will need to connect again.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have created your Droplet SSH key, you can see it by running the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'You will see something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a33ffc30-07ae-4340-b1a0-00600326cf5d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Copy your SSH key and then visit your GitHub account. Go to Settings | SSH
    and GPG Keys ([https://github.com/settings/ssh/new](https://github.com/settings/ssh/new)).
    Then, paste your key in the text area and add your title to the key:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/340744a9-2785-41c2-9e3e-7674574da84a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you click on the Add SSH key button, you will see your SSH key, like so:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/1202eee7-0bb8-4f61-8bef-0c7012d40205.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now you can clone our repository (or yours) using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'When you clone it for the first time, you will get a message asking you to
    allow the RSA key fingerprint:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/e6195ece-4997-4645-838f-8e76c42afea9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You have to write yes and then hit *Enter* to be able to clone it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/52f6974f-281b-45a6-b2d4-cc871ae52794.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, you have to go to the `production` directory and install the `npm` packages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'If you want to test the application, just run the `start` script:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Then open your browser and go to your Droplet IP and add the port number. In
    my case, it is `http://144.126.222.17:3000`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/2a3fca3c-5bed-4679-9e76-c9c6aced2f83.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This will run the project in development mode. If you want to run in production
    mode, then use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see PM2 running, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/22418c84-00ae-4d2b-83b7-666ca37934fa.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you run it and you view the Network tab in your Chrome DevTools, you will
    see the bundles being loaded:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/605fd002-8001-4033-af1a-804659a0ce74.png)'
  prefs: []
  type: TYPE_IMG
- en: We now have our React application working in production, but let's see what
    else we can do with DigitalOcean in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Turning off our Droplet
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To turn off the Droplet, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to turn off your Droplet, you can go to the Power section, or you
    can use the ON/OFF switch:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/19e7fb72-5d44-43b8-9549-217558c10baa.png)'
  prefs: []
  type: TYPE_IMG
- en: 'DigitalOcean will charge you only when your Droplet is ON. If you click on
    the ON switch to turn it off, then you will get the following confirmation message:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/8a5da75d-431f-449d-9f96-442b034a2922.png)'
  prefs: []
  type: TYPE_IMG
- en: In this way, you can control your Droplet and avoid paying unnecessarily when
    you're not using your Droplet.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring nginx, PM2, and a domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our Droplet is ready to be used for production, but as you can see, we are still
    using port `3000`. We need to configure nginx and implement a proxy to redirect
    the traffic from port `80` to `3000`; this means we won't need to specify the
    port directly anymore. **Node Production Process Manager** (**PM2**) will help
    us run the Node server in production securely. Generally, if we run Node directly
    with the `node` or `babel-node` commands, and there is an error in the app, then
    it will crash and will stop working. PM2 restarts the node server if an error
    occurs.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, in your Droplet, you need to install PM2 globally:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: PM2 will help us to run our React app in a very easy way.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and configuring nginx
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To install nginx, you need to execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'After you have installed nginx, then you can start the configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We need to adjust the firewall to allow the traffic for port `80`. To list
    the available application configurations, you need to run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '`Nginx Full` means that it will allow the traffic from port `80` (HTTP) and
    port `443` (HTTPS). We haven''t configured any domain with SSL, so, for now, we
    should restrict the traffic to be sent just through port `80` (HTTP):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'If you try to access the Droplet IP, you should see nginx working:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b39df5db-2e1e-4114-8e43-236b111de353.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can manage the nginx process with these commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Nginx is an amazing web server that is getting very popular nowadays.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up a reverse proxy server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As I mentioned previously, we need to set up a reverse proxy server to send
    the traffic from port `80` (HTTP) to port `3000` (React app). To do this, you
    need to open the following file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'The steps are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `location /` block, you need to replace the code in the file with the
    following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Once you have saved the file, you can verify whether there is a syntax error
    in the nginx configuration with the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'If everything is fine, then you should see this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/cf501d03-f82e-4f54-96a3-350b4ad890d2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, you need to restart the nginx server:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, you should be able to access the React application without the port, as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/38c093cc-6348-4f20-94e7-8ef627e42167.png)'
  prefs: []
  type: TYPE_IMG
- en: We are almost done! In the next section, we are going to add a domain to our
    Droplet.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a domain to our Droplet
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Using an IP to access a website is not nice; we always need to use a domain
    to help users find our website easier. If you want to use a domain on your Droplet,
    you need to change the nameservers of your domain to point to the DigitalOcean
    DNS. I normally use GoDaddy to register my domains. To do so using GoDaddy, follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to [https://dcc.godaddy.com/manage/YOURDOMAIN.COM/dns](https://dcc.godaddy.com/manage/YOURDOMAIN.COM/dns),
    and then go to the Nameservers section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/d6917cb5-d6ac-4ddb-9be8-3ccabcc28434.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the Change button, select Custom, and then specify the DigitalOcean
    DNS:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/1e25a5e2-3967-4e91-afa2-bacb9dcd64f8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Normally, it takes between 15 and 30 minutes for the DNS changes to be reflected;
    for now, after you have updated your Nameservers, go to your Droplet dashboard,
    and then choose the Add a domain option:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/342701e6-082f-4677-9632-325b4e2f9b0f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, write your domain name, select your Droplet, and click on the Add Domain
    button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/9e1c16fa-9600-4a70-a6ff-3a651985a4f8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, you have to create a new record for CNAME. Select the CNAME tab, and in
    the HOSTNAME write `www`; in the alias field write `@`; by default, the TTL is
    `43200`. All of this is to enable access to your domain using the `www` prefix:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/606a3454-71e7-4845-8a21-66bd34cb270e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you did everything correctly, you should be able to access your domain and
    see the React application working. As I said before, this process can take up
    to 30 minutes, but in some cases, it can take up to 24 hours depending on the
    DNS propagation speed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/caa2b2a8-3d7c-4920-a0d2-47451bd8e9b8.png)'
  prefs: []
  type: TYPE_IMG
- en: Amazing, now you have officially deployed your first React application to production!
  prefs: []
  type: TYPE_NORMAL
- en: '**Implementing CircleCI for continuous integration**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I''ve been using CircleCI for a while and I can tell you that it is one of
    the best CI solutions: it is free for personal use, giving you unlimited repositories
    and users; you have 1,000 build minutes per month, one container, and one concurrent
    job; if you need more, you can upgrade the plan with an initial price of $50 per
    month.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The first thing you need to do is sign up on the site using your GitHub account
    (or Bitbucket, if you prefer). If you choose to use GitHub, you need to authorize
    CircleCI in your account, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/17413dc6-0528-4daf-a49f-1eef6fc00e92.png)'
  prefs: []
  type: TYPE_IMG
- en: In the next section, we are going to add our SSH key to CircleCI.
  prefs: []
  type: TYPE_NORMAL
- en: Adding an SSH key to CircleCI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that you have created your account, CircleCI needs a way to log in to your
    DigitalOcean Droplet to run the deploy script. Follow these steps to complete
    this task:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a new SSH key inside your Droplet using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'After that, let''s add the key to our `authorized_keys`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, you need to download the private key. To verify that you can log in with
    the new key, you need to copy it to your local machine, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'If you did everything correctly, you should be able to log in to your Droplet
    without a password, and that means CircleCI can access our Droplet too:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy the content of your `id_rsa_droplet.pub` key and then go to your repository
    settings ([https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY](https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY)):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/93c72cb3-e3b7-41c5-9460-458519ca9425.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Go to SSH Keys, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/310a2714-d85f-4ae9-bd3d-b950cf2590e5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can also access the URL [https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY/shh](https://app.circleci.com/settings/project/github/YOUR_GITHUB_USER/YOUR_REPOSITORY/shh),
    and then click on the Add SSH Key button at the bottom:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/961b1c0e-edbe-4e1d-8564-40ad8eb0ed79.png)'
  prefs: []
  type: TYPE_IMG
- en: Paste your private key, and then provide a name for the Hostname field; we will
    name it `DigitalOcean`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now let's configure our CircleCI instance in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring CircleCI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that you have configured access for CircleCI to your Droplet, you need
    to add a `config` file to your project to specify the jobs you want to execute
    for the deployment process. This process is shown in the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For this, you need to create the `.circleci` directory and add the following
    inside the `config.yml` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: When you have a `.yml` file, you need to be careful with the indentation; it
    is similar to Python in that if you don't use indents correctly, you will get
    an error. Let's see how this file is structured.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Specify the CircleCI version we will use. In this instance, you are using version
    `2.1` (the latest one at the time of writing this book):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Inside `jobs`, we will specify that it needs to configure the container; we
    will create it using Docker, and also outline the steps to follow for the deployment
    process.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The  `working_directory`  will be the temporal directory we will use to install
    the npm packages and run our deploy scripts. In this case, I decided to use the  `tmp`  directory,
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'As I said before, we will create a Docker container, and in this instance,
    I selected an existing image that includes  `node: 14.16.1`. If you want to know
    about all the available images, you can visit [https://circleci.com/docs/2.0/circleci-images](https://circleci.com/docs/2.0/circleci-images):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'For the code case, first do a `git checkout` to `master`, then on each run
    sentence, you need to specify the scripts you want to run:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: First, you need to install the npm packages using `npm install` to be able to
    perform the next tasks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Execute the ESLint validation using `npm run lint`. If it fails, it will break
    the deployment process, otherwise, it continues with the next run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Execute the Jest validations using `npm run test`; if it fails, it will break
    the deployment process, otherwise, it continues with the next run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the last step, we connect to our DigitalOcean Droplet, passing the `StrictHostKeyChecking=no`
    flag to disable the strict host key checking. We then use the `$DROPLET_USER`
    and `$DROPLET_IP` ENV variables to connect to it (we will create those in the
    next step), and finally, we will specify all the commands we will perform inside
    our Droplet using single quotes. These commands are listed as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`cd produ``ction`: Grants access to the production (or your Git repository
    name).'
  prefs: []
  type: TYPE_NORMAL
- en: '`git checkout master`: This will check out the master branch.'
  prefs: []
  type: TYPE_NORMAL
- en: '`git pull`: Pulls the latest changes from our repository.'
  prefs: []
  type: TYPE_NORMAL
- en: '`npm run start:production`: This is the final step, which runs our project
    in production mode.'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, let's add some environment variables to our CircleCI.
  prefs: []
  type: TYPE_NORMAL
- en: Creating ENV variables in CircleCI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As you saw previously, we are using the `$DROPLET_USER` and `$DROPLET_IP` variables,
    but how do we define those? Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You need to go to your project settings again and select the Environment Variables
    option. Then, you need to create the `DROPLET_USER` variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/535d47b9-6df3-4449-848a-db2d1f3371f2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, you need to create the `DROPLET_IP` variable using your Droplet IP:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/5870c9b9-5be2-4de3-b5ed-49dbacfba1df.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, you need to push the `config` file to your repository, and you will be
    ready for the magic. Now that CircleCI is connected to your repository, every
    time you push changes to master, it will fire a build.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Normally, the first two or three builds can fail due to syntax errors, indent
    errors in our config, or maybe because we have linter errors or unit test errors.
    If you have a failure, you will see something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/50f0c757-8068-4422-bcef-a481af65d989.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see from the preceding screenshot, the first build failures at the
    bottom say Build Error, and the second one says workflow build-deploy. This basically
    means that in the first build I had a syntax error in the `config.yml` file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After you fix all the syntax errors in the `config.yml` file and all the issues
    with the linter or the unit tests, you should see a SUCCESS build, like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/eee20f66-2bae-4aab-aff8-88210f38dd7b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you click on the build number, you can see all the steps that CircleCI executed
    before publishing the new changes in your Droplet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/4b667573-7ef7-465d-a428-277e3c21e3fd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As you can see, the order of the steps is the same as we specified in our `config.yml`
    file; you can even see the output of each step by clicking on it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/c9005154-c317-41d9-8d36-dcc79f194f17.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let''s suppose you have an error on your linter validation or in some
    unit tests. Let''s see what happen in that case, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/c838d653-5b30-42dd-a1dc-e68417b2be39.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, once an error is detected, it will exit with code `1`. This
    means it will abort the deployment and will mark it as a failure, and as you can
    see, none of the steps after `npm run lint` are executed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another cool thing is that if you now go to your GitHub repository and check
    your commits, you will see all the commits that had a successful build and all
    the commits that had a failed build:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/8d591173-866f-43f5-bf29-3f230fc13dbd.png)'
  prefs: []
  type: TYPE_IMG
- en: This is amazing â€“ now you have your project configured to do deployments automatically
    and it is connected to your GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our journey through the deployment process has come to an end, and now you know
    how to deploy your React application to the world (production), and also how to
    implement CircleCI for continuous integration.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn how to publish `npm` packages.
  prefs: []
  type: TYPE_NORMAL
