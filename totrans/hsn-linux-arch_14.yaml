- en: Designing an ELK Stack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计一个ELK Stack
- en: Designing an **Elastic Stack** that performs to the required specifications
    needs special attention. Each of the components, **Elasticsearch, Logstash, and
    Kibana** (**ELK**), have specific requirements. Correct sizing is crucial for
    best performance and functionality.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 设计一个符合要求规格的**Elastic Stack**需要特别注意。**Elasticsearch，Logstash和Kibana**（**ELK**）的每个组件都有特定的要求。正确的大小对于最佳性能和功能至关重要。
- en: This chapter goes through the design considerations when deploying an Elastic
    Stack, taking into consideration the needs of each of the components as well as
    specific setup details. Throughout this chapter, we will describe how each component
    is affected by different resources, how we can handle resource constraints, and
    how to plan and size for different scenarios.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍在部署Elastic Stack时的设计考虑因素，考虑到每个组件的需求以及特定的设置细节。在本章中，我们将描述每个组件如何受不同资源影响，如何处理资源约束，以及如何计划和为不同场景进行大小调整。
- en: 'In this chapter, we will go through the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Elasticsearch CPU sizing requirements
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elasticsearch CPU大小要求
- en: How memory sizing affects Elasticsearch performance
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存大小如何影响Elasticsearch性能
- en: How data is stored within Elasticsearch and how to size for performance
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elasticsearch中数据的存储方式以及如何为性能进行大小调整
- en: Requirements for Logstash and Kibana
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Logstash和Kibana的要求
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Although the documentation found at [https://www.elastic.co/guide/en/elasticsearch/guide/current/hardware.html](https://www.elastic.co/guide/en/elasticsearch/guide/current/hardware.html) is
    outdated, the hardware requirements can be used as a starting point for CPU sizing.
    For more useful documentation, visit the following links:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在[https://www.elastic.co/guide/en/elasticsearch/guide/current/hardware.html](https://www.elastic.co/guide/en/elasticsearch/guide/current/hardware.html)找到的文档已经过时，但硬件要求可以作为CPU大小的起点。有关更有用的文档，请访问以下链接：
- en: '**Setup guide for indexing speed: **[https://www.elastic.co/guide/en/elasticsearch/reference/current/tune-for-indexing-speed.html](https://www.elastic.co/guide/en/elasticsearch/reference/current/tune-for-indexing-speed.html)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**索引速度设置指南：**[https://www.elastic.co/guide/en/elasticsearch/reference/current/tune-for-indexing-speed.html](https://www.elastic.co/guide/en/elasticsearch/reference/current/tune-for-indexing-speed.html)'
- en: '**Changing heap configuration for Elasticsearch: **[https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html](https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更改Elasticsearch的堆配置：**[https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html](https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html)'
- en: '**Average system memory latency:** [http://www.crucial.com/usa/en/memory-performance-speed-latency](http://www.crucial.com/usa/en/memory-performance-speed-latency)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平均系统内存延迟：**[http://www.crucial.com/usa/en/memory-performance-speed-latency](http://www.crucial.com/usa/en/memory-performance-speed-latency)'
- en: '**Elasticsearch system paths: **[https://www.elastic.co/guide/en/elasticsearch/reference/master/path-settings.html](https://www.elastic.co/guide/en/elasticsearch/reference/master/path-settings.html)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Elasticsearch系统路径：**[https://www.elastic.co/guide/en/elasticsearch/reference/master/path-settings.html](https://www.elastic.co/guide/en/elasticsearch/reference/master/path-settings.html)'
- en: '**Logstash persistent queues:** [https://www.elastic.co/guide/en/logstash/current/persistent-queues.html](https://www.elastic.co/guide/en/logstash/current/persistent-queues.html)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Logstash持久队列：**[https://www.elastic.co/guide/en/logstash/current/persistent-queues.html](https://www.elastic.co/guide/en/logstash/current/persistent-queues.html)'
- en: '**Logstash directory paths:** [https://www.elastic.co/guide/en/logstash/current/dir-layout.html](https://www.elastic.co/guide/en/logstash/current/dir-layout.html)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Logstash目录路径：**[https://www.elastic.co/guide/en/logstash/current/dir-layout.html](https://www.elastic.co/guide/en/logstash/current/dir-layout.html)'
- en: Elasticsearch CPU requirements
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Elasticsearch CPU要求
- en: As with any software, sizing for the right CPU requirements determines the overall
    application performance and processing time. Having the wrong CPU configuration
    can lead to an unusable application due to the processing taking too long to complete
    and making it frustrating for users, not to mention the fact that slow processing
    times can cause the application to fail altogether.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 与任何软件一样，为正确的CPU要求进行大小调整决定了整体应用程序的性能和处理时间。错误的CPU配置可能导致应用程序无法使用，因为处理时间太长而使用户感到沮丧，更不用说慢处理时间可能导致应用程序完全失败。
- en: While Elasticsearch does not rely heavily on the CPU for indexing and searches,
    several things need to be taken into consideration when designing an Elastic Stack
    that performs well and returns results in a timely manner.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Elasticsearch在索引和搜索时并不严重依赖CPU，但在设计一个性能良好且及时返回结果的Elastic Stack时需要考虑几件事情。
- en: Although Elastic does not publish hard requirements for CPU, there are a couple
    of things that can be applied as a rule of thumb.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Elastic没有发布CPU的硬性要求，但有一些可以作为经验法则的事情。
- en: CPU count
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CPU数量
- en: Typically, having more cores is better, and this might be the case for most
    workloads. Elasticsearch leverages having multiple cores available on the system
    by scheduling tasks across multiple CPUs; however, it doesn't require large amounts
    of CPU processing power as most of the operations are performed on files that
    are already indexed.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，拥有更多的核心更好，对于大多数工作负载来说可能是这样。Elasticsearch通过在多个CPU上调度任务来利用系统上可用的多个核心；然而，它并不需要大量的CPU处理能力，因为大部分操作是在已经索引的文件上执行的。
- en: Most cloud providers (if you are deploying on the cloud) have increased rates
    for high CPU count virtual machines, to avoid unnecessary cost, size for a VM
    type that  balances more memory than CPU.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数云提供商（如果您在云上部署）对高CPU数量的虚拟机有提高的费率，为了避免不必要的成本，应该选择一个内存比CPU更多的VM类型。
- en: When sizing for sufficient CPU resources, you should allow for some growth without
    having to change settings midway. For a small setup, something with at least two
    CPUs should be sufficient. For testing purposes and a small number of indexes/sources,
    even one CPU should suffice, but performance will suffer, especially if all of
    the components—Elasticsearch, Logstash, and Kibana—are deployed on the same system.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: CPU speed
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While there is no hard documentation on the minimum CPU speed (clock speed)
    requirements, it is somewhat difficult to find a CPU with less than 2 GHz nowadays.
    This low watermark seems to be about the minimum required for Elasticsearch to
    avoid problems.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Anything above 2 GHz will perform acceptably, even with a single CPU; this is
    adequate for testing purposes. For production environments, look for CPU clock
    speeds above 2 GHz or 2.3 GHz to avoid problems.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: CPU performance impact
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If an incorrect sizing has been configured when it comes to the CPU, Elasticsearch
    will mostly suffer in the following three areas:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Startup time
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Index per second
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Search latency
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Startup
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During startup, CPU usage might spike as the JVM starts and Elasticsearch reads
    the data from the cluster. Having a slower CPU configuration will cause Elasticsearch
    to take longer to start up.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: If Elasticsearch nodes are to be constantly restarted, having the right CPU
    configuration will help to reduce the time it takes to reach an operational state.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Index per second
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The CPU configuration directly affects the indexes per second that Elasticsearch
    is able to handle, as it will run out of cycles once more documents are indexed.
    Ideally, with multiple cores, Elasticsearch leverages indexing on multiple CPUs,
    allowing more clients to send data without any metric or event being lost.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Search latency
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Performance will probably suffer the most regarding the amount of time it takes
    for searches to return results. Remember that one of the main features of Elasticsearch
    is how fast it can retrieve data and display it.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Having an undersized CPU configuration will lead to searches taking longer than
    expected, which can result in a frustrating user experience.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following screenshot, we can see that search latency spikes to almost
    80 ms and hovers at around 20 ms:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/95698154-0f2a-4dad-abf0-75341cd8088d.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
- en: Monitoring latency in Kibana
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Note that the preceding screenshot was taken from an undersized system with
    just one CPU running at less than 2 GHz. The latency could be worse, but this
    was taken from a system running on a fast NVMe drive, which can have latency as
    low as 100 microseconds.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Recommendations
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For optimal results, the correct CPU setup needs to be implemented. The following
    two main scenarios affect CPU sizing:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Test/development
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Production
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test/dev
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For testing, anything above one CPU and 2 GHz would be sufficient for a small
    test, with a couple of clients sending data to Elasticsearch. The search results
    might be a little slow to return, but it will work without any problems.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Production
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For production, make sure that you use a CPU with at least 2.3 GHz or above.
    The CPU count does not greatly impact performance, but having at least two CPUs
    ensures optimal operation. Once more clients are added, the CPU count might need
    to be modified to meet the extra demand; more Elasticsearch nodes can be added
    if the CPU becomes a constraint.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, when choosing between the core count versus clock speeds, Elasticsearch
    leverages having multiple cores. The performance benefits of fewer but faster
    cores is not as impressive as having a larger number of slower cores.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: When deploying on Azure, you can use a DS2v3 VM type for a small setup, as it
    offers two CPUs and enough RAM for basic needs.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: Once we correctly size the CPU, we can then focus on how the system memory (RAM)
    affects Elasticsearch performance and usability.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Memory sizing for Elasticsearch
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Allocating enough RAM to Elasticsearch is probably the most important resource
    factor to consider to avoid problems and an underperforming setup.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Memory is one resource where having a lot of it is never a problem. As an architect,
    you need to bear in mind several things when sizing memory. Similar to the CPU
    resource, there is no hard documentation for minimum memory requirements.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Filesystem cache
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Having a lot of RAM is always a good idea, because of the filesystem cache or
    Linux page cache.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: The kernel uses free system memory to cache, read, or write requests by allocating
    some portion of RAM to I/O requests, considerably speeding up searches or indexes
    in the case of Elasticsearch.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see in the following screenshot, the kernel has allocated about
    1.2 GB as page cache:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/94cabe7d-acca-4cd1-baec-b009b8ea24e8.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
- en: Leveraging the use of the page cache can help to reduce the response time when
    doing searches or incoming indexes; be sure to size for as much RAM as possible.
    There is a point were cache usage will balance out, and no more RAM will be used
    for the page cache. At this point, it is worth monitoring the process to try and
    identify this threshold to avoid running into unnecessary charges. To put it into
    perspective, if a **Virtual Machine** (**VM**) is sized with 32 GB of RAM, but
    only uses about 10 GB for the cache and never goes above this number, then it
    might be worth resizing to a smaller VM, as the remaining RAM will be left unused.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see in the Kibana dashboard in the following screenshot, you can
    monitor cache usage for Elasticsearch, which might help to identify whether resources
    are left unused:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/063feca8-d22e-4fc0-8256-d4107c6a8235.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
- en: Monitoring cache usage for Elasticsearch
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Disable swap
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Swap is a mechanism that allows the kernel to move memory pages to disk in the
    event of infrequent access or when there's memory pressure (that is, when the
    system is running out of memory). One of the main problems of swapping is that,
    when a memory page is moved to disk, its access time becomes considerably slower
    than in RAM.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: 'DDR4 memory has an average transfer rate of about 10 GB/s and, more impressively,
    an average response time (or latency) of just 13 ns (nanoseconds). Compare that
    to even the fastest NVMe SSD drives in the market, which can achieve just 3.5
    GB/s and latencies of around 400 ūs (microseconds). You can quickly start seeing
    how this becomes a problem: not all cloud providers or on-premises setups use
    NVMe drives, and swapping to even slower spinning media can yield pretty bad results.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: Because of this, Elasticsearch recommends disabling all forms of swapping and
    instead relying on the correct sizing for system memory.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: Undersizing memory
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Having the wrong memory configuration will result in different behaviors. It
    can be boiled down to two different situations: not having enough memory but having
    enough to run the system, and not having enough memory to the point that Elasticsearch
    can''t even start.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: For the first scenario, where there is a memory constraint, but there is just
    enough for Elasticsearch to start and run, the main problem would be that there
    is not enough memory for the page cache, which results in slow searches and reduced
    indexes per second. In this scenario, Elasticsearch is able to run, but with a
    reduced overall performance.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: 'The other scenario can be split into two different situations: one where there''s
    not enough memory to start Elasticsearch and the other where Elasticsearch is
    able to start, but as soon as some indexes are added, it runs out of memory. To
    avoid a system crash, Linux has a mechanism called **out-of-memory killer** (**OOM
    killer**).'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Unable start
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Elasticsearch uses the JVM and, by default, it is set to use a minimum of 1
    GB of heap memory. This means that Java needs to allocate at least 1 GB of RAM
    to JVM, so for Elasticsearch to start with just the minimum, it requires about
    2.5 GB of RAM.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: 'The easiest way to tell when this problem is occurring is by verifying the
    status of the Elasticsearch service using `systemctl status elasticsearch`; it
    will return an error message similar to the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/57c77d4e-6e95-433b-b5ca-56f62fcf3ec8.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: 'Upon further inspection of the error log, we can clearly see how JVM failed
    to allocate the necessary memory, as shown in the following code:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Testing using the default heap of 1 GB is sufficient. For production, make sure
    that you increase the heap to at least 2 GB and adjust as necessary.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: 'To increase the heap, edit the `/etc/elasticsearch/jvm.options` file and find
    the following options:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Change these two options to the following:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `-Xms2g` phrase indicates that Java should have a minimum heap of 2 GB and `-Xmx2g`
    indicates the maximum heap of 2 GB.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: OOM killer
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **out-of-memory killer** (**OOM killer**) mechanism's main purpose is to
    avoid a total system crash by killing processes that are running processes. Each
    process has an `oom_score` value. OOM killer decides which process to kill based
    on this score; the higher the score, the more likely it is that the process will
    be killed in the event of memory starvation. This score is calculated based on
    how much memory the process would free up if it were killed.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: If we take the previous scenario as a starting point, were Elasticsearch is
    able to start with a minimum of 2.5 GB, once more indexes/sources are added to
    Elasticsearch it will start requiring more and more system memory, up to the point
    where there is no more memory, and the system is close to a total crash. At that
    moment, OOM killer jumps in and kills the process (or processes) that consumes
    the most memory—in our case, Elasticsearch.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: 'When looking at the events under `/var/log/messages`, we can see how OOM killer kicks
    in and kills the Java process, and then the Elasticsearch service fails, as shown
    in the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e60a2a14-9647-4e00-991c-6ff60d1f572e.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
- en: Recommendations
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ideally, enough memory should be allocated for Elasticsearch. The very minimum
    requirement for memory is about 2.5 GB, but that would lead to a situation where
    the system might run out of memory quickly.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: For testing purposes, 2.5 GB might be enough for a couple of sources/indexes.
    Performance will undoubtedly suffer, but it will remain somewhat usable.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: For production, make sure to have at least 4 GB or more for system memory. This
    should allow Elasticsearch to start without problems and normally run with multiple
    sources/indexes configured. Make sure the heap size for the JVM is increased accordingly,
    and consider allowing some RAM for the page cache for faster response times when
    interacting with the filesystem.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will look at the storage configuration required for Elasticsearch.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: Storage configuration for Elasticsearch
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Storage requirements for Elasticsearch are relatively straightforward, and
    can be divided into two main categories:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Storage capacity
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storage performance
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's go through both of these and see how decisions made here can affect the
    overall performance.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Capacity
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Storage capacity directly affects how much data Elasticsearch is able to store.
    As is the case in many other situations, this is a big and complex requirement
    to consider, as it depends upon so many other variables that affect the utilization
    of space.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: The primary variable would be the size of the logs/metrics that are sent to
    Elasticsearch. This depends on the number of logs that are generated daily (or
    monthly). For example, if the daily log rate is 100 MB, then that means that,
    to be able to store a month's worth of logs, at least 3 GB of available space
    is needed (100 MB x 30 days = 3 GB).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: Note that this is the minimum space required for a single source. Ideally, some
    overhead should be accounted for as data changes regularly and a figure of 100
    MB/day might not be constant for all of the days in the month or other months
    might have a higher rate due to higher load. Additionally, once more sources (or
    clients) are added, data usage will grow accordingly.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这是单个来源所需的最小空间。理想情况下，应该考虑一些额外空间，因为数据会经常变化，每天的100MB可能不是每个月的所有天都是恒定的，或者其他月份可能由于负载增加而有更高的速率。此外，一旦添加更多来源（或客户端），数据使用量将相应增长。
- en: By default, Elasticsearch will store its data under the `/var/lib/elasticsearch`
    directory.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Elasticsearch将其数据存储在`/var/lib/elasticsearch`目录下。
- en: Performance
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能
- en: One of the main features of Elasticsearch is its ability to retrieve data really
    fast. While this is done using an enhanced mechanism of storing documents as JSON
    files, having the right performance setup definitely helps achieve the almost
    real-time search results.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Elasticsearch的主要特点之一是其能够非常快速地检索数据。虽然这是通过使用增强的存储文档的机制来实现的，但正确的性能设置肯定有助于实现几乎实时的搜索结果。
- en: There is no hard number provided by Elastic for storage requirements, but using
    a **Solid-State Drive** (**SSD**) for the `/var/lib/elasticsearch` directory helps
    in reducing latency when performing searches, as the SSD has a substantially lower
    latency when compared to HDD. An SSD also helps when ingesting data as writes
    get acknowledged faster, thereby allowing for more concurrent incoming indexes.
    This is reflected in the indexes per second that can be seen on the Kibana monitoring
    dashboard.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic没有提供存储需求的硬性数字，但在`/var/lib/elasticsearch`目录中使用固态硬盘（SSD）有助于减少搜索时的延迟，因为与HDD相比，SSD的延迟显著较低。SSD还有助于数据摄入，因为写入会更快得到确认，从而允许更多并发的传入索引。这反映在Kibana监控仪表板上可以看到的每秒索引数中。
- en: When sizing for the cloud, this really depends on the provider as some base
    the performance of the disks on their size, but others allow the performance to
    be manually configured (as is the case with IOPS and throughput).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在云端进行大小设置，这实际上取决于提供商，因为有些提供商将磁盘的性能基于其大小，但其他提供商允许手动配置性能（如IOPS和吞吐量）。
- en: Having a slower setup will result in searches taking longer than expected and
    a slower data ingestion, due to an unreliable, slower disk setup.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有较慢的设置将导致搜索时间比预期的长，以及数据摄入速度较慢，因为磁盘设置不可靠且较慢。
- en: Considerations
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 考虑事项
- en: For space, consider a sizing that will allow you enough space for unexpected
    data growth. If, for example, the expected data usage for an entire month would
    be 500 GB, consider sizing for at least 700 GB; doing this gives you a buffer
    and avoids situations where not enough space is left for Elasticsearch indexes.
    A good starting point is 500 GB, as it gives enough space for testing/production
    while the actual data usage and data change is calculated (if not previously known).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 对于空间，考虑一个大小，可以为意外的数据增长提供足够的空间。例如，如果整个月的预期数据使用量为500GB，那么至少考虑700GB的大小；这样可以给您一个缓冲区，并避免出现没有足够空间留给Elasticsearch索引的情况。500GB是一个很好的起点，因为它为测试/生产提供了足够的空间，同时可以计算实际数据使用量和数据变化（如果之前未知）。
- en: For performance, consider using faster storage solutions such as SSD to allow
    for low-latency searches and faster indexes/s. For the cloud, most providers have
    some sort of SSD offering that can be used with Elasticsearch. Make sure that
    at least 500 IOPS are provisioned for optimal performance.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高性能，考虑使用更快的存储解决方案，如SSD，以实现低延迟搜索和更快的索引。对于云端，大多数提供商都有一些可以与Elasticsearch一起使用的SSD产品。确保至少为了获得最佳性能而配置了至少500
    IOPS。
- en: For Azure, you can use a P10 disk—which is an SSD that can provide up to 500
    IOPS—or an E10 as a lower cost alternative that delivers the same result.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Azure，您可以使用P10磁盘——这是一种SSD，可以提供高达500 IOPS的性能——或者选择成本更低的E10作为替代方案，以达到相同的效果。
- en: We will now look at what needs to be considered for Logstash and Kibana.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将看看Logstash和Kibana需要考虑的内容。
- en: Logstash and Kibana requirements
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Logstash和Kibana的要求
- en: There are no specific requirements for Logstash and Kibana, but keeping in mind
    a couple of things when designing an Elastic Stack is always a good approach.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Logstash和Kibana没有特定的要求，但在设计Elastic Stack时要考虑一些事项总是一个好方法。
- en: Logstash
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Logstash
- en: Logstash is not heavy on CPU nor RAM, but this depends entirely on how many
    sources are feeding Logstash data since, for each event that Logstash parses,
    there is some overhead required to complete the process. If Logstash is to be
    installed on its own (with no other components on the same system), anything above
    one vCPU and 2 GBs of RAM should suffice for small/testing deployments. Ideally,
    the actual usage should be monitored and the system tuned accordingly. Logstash
    by default has in-memory queues that are used to store events temporarily; this
    behavior can be changed to use persistent queues when processing events. This
    allows for persistent consistency and avoids data loss during an outage. Additionally,
    having persistent queues helps to absorb bursts of events by acting as a buffer
    between the clients and Logstash.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Logstash对CPU和内存的要求不高，但这完全取决于有多少来源在向Logstash提供数据，因为Logstash解析每个事件都需要一些额外的开销来完成这个过程。如果Logstash要单独安装（没有其他组件在同一系统上），那么一个vCPU和2GB的RAM应该足够小型/测试部署。理想情况下，应该监控实际使用情况并相应地调整系统。Logstash默认具有用于临时存储事件的内存队列；当处理事件时，这种行为可以更改为使用持久队列。这样可以实现持久一致性，并避免在故障期间丢失数据。此外，持久队列有助于吸收事件的突发增长，充当客户端和Logstash之间的缓冲区。
- en: 'When using persistent queues for storage capacity, the `/var/lib/logstash`
    directory needs to be able to store events while being processed by Logstash.
    The amount of space depends on two factors: the egress speed when sending data
    to Elasticsearch and the number of events being sent to Logstash. The minimum
    would be 1 GB and the space needs to be increased accordingly when the number
    of sources is increased.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用持久队列进行存储容量时，`/var/lib/logstash`目录需要能够在Logstash处理事件时存储事件。空间量取决于两个因素：将数据发送到Elasticsearch的出口速度和发送到Logstash的事件数量。最低要求为1GB，当来源数量增加时，空间需要相应增加。
- en: Kibana
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kibana
- en: The requirements for Kibana depend entirely on the number of users concurrently
    accessing the dashboard. The amount of resources allocated to Kibana needs to
    be based on the intended usage—for example, what is the expected user base? How
    many of those users will access Kibana at the same time?
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Kibana的要求完全取决于同时访问仪表板的用户数量。分配给Kibana的资源量需要根据预期的使用情况来确定，例如，预期的用户群是什么？这些用户中有多少人会同时访问Kibana？
- en: For small deployments/testing, the minimum requirements are dictated by the
    JVM. One vCPU and 2 GB of RAM is enough for several users, but once more users
    start using the dashboard, RAM will be the first resource to become a bottleneck.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 对于小型部署/测试，最低要求由JVM决定。一个vCPU和2GB的RAM对于几个用户来说足够了，但一旦更多用户开始使用仪表板，RAM将成为第一个资源瓶颈。
- en: In general, an Elastic Stack has pretty loose requirements that are mostly dictated
    by the usage and the number of sources. Regarding software, the primary requirement
    is Java; since all of the components use the JVM, either the open JDK or the official
    JDK can be used.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，Elastic Stack有相当宽松的要求，主要由使用和来源数量决定。在软件方面，主要要求是Java；由于所有组件都使用JVM，因此可以使用open
    JDK或官方JDK。
- en: Summary
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we went through the requirements that are needed when designing
    an Elastic Stack using Elasticsearch, Logstash, and Kibana. For Elasticsearch,
    we determined that the minimum CPU requirement is two vCPUs for small setups,
    and the CPU speed should be kept above 2 GHz. If these minimum requirements are
    not met, Elasticsearch will take longer to start up and will perform more slowly.
    This manifests as a decrease in the number of indexes per second and an increased
    search latency, both of which are things that need to be avoided in order for
    us to be able to take full advantage of the near-instant searches that Elasticsearch
    provides.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了在设计使用Elasticsearch、Logstash和Kibana的Elastic Stack时所需的要求。对于Elasticsearch，我们确定了小型设置的最低CPU要求为两个vCPU，CPU速度应保持在2
    GHz以上。如果不满足这些最低要求，Elasticsearch将需要更长的时间启动，并且性能将更慢。这表现为每秒索引数量的减少和搜索延迟的增加，这两者都是需要避免的，以便我们能够充分利用Elasticsearch提供的几乎即时搜索。
- en: Memory sizing is probably the most important specification when designing an
    Elasticsearch setup. Part of the system memory will be used for the filesystem
    cache (also known as the page cache), which helps with searches and indexes per
    second. Swapping is not recommended, as it is considered extremely slow when compared
    to actual RAM access, and so swapping should be disabled on Elasticsearch nodes.
    If the correct memory requirements are not met, Elasticsearch will fail to start
    altogether since there will not be enough memory for the JVM to start. If, on
    the other hand, enough memory is present to start the JVM, but the load increases
    over time and the system runs out of memory, the OOM or out-of-memory killer will
    be engaged to avoid a system crash that would lead to a failure of the application.
    The very minimum amount of RAM required is 2.5 GB, but resource constraints will
    be seen relatively quickly.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计Elasticsearch设置时，内存大小可能是最重要的规格。系统内存的一部分将用于文件系统缓存（也称为页面缓存），这有助于搜索和每秒索引。不建议交换，因为与实际的RAM访问相比，它被认为是非常慢的，因此应该在Elasticsearch节点上禁用交换。如果未满足正确的内存要求，Elasticsearch将无法启动，因为JVM启动时没有足够的内存。另一方面，如果有足够的内存来启动JVM，但随着时间的推移负载增加，系统耗尽内存，OOM或内存耗尽杀手将被启用，以避免导致应用程序失败的系统崩溃。所需的最小RAM量为2.5
    GB，但资源限制将相对快速地被看到。
- en: Storage capacity and performance play an important role when setting up Elasticsearch.
    The capacity depends on the amount of data that needs to be kept and the number
    of sources configured. Latency needs to be kept to a minimum in order for our
    searches to be fast. Ideally, SSD should be used.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置Elasticsearch时，存储容量和性能起着重要作用。容量取决于需要保留的数据量和配置的来源数量。延迟需要保持在最低水平，以便我们的搜索速度快。理想情况下，应该使用SSD。
- en: Lastly, for Logstash and Kibana, the minimum requirements are one vCPU and 2
    GB of RAM for each component. For Logstash, there is a space requirement for the
    persistent queues.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于Logstash和Kibana，每个组件的最低要求是一个vCPU和2GB的RAM。对于Logstash，持久队列有空间要求。
- en: In the next chapter, we will jump into deploying an Elastic Stack using Elasticsearch,
    Logstash, and Kibana using the facts that learned in this chapter.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将利用本章学到的知识，跳入使用Elasticsearch、Logstash和Kibana部署Elastic Stack。
- en: Questions
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: How many CPUs are recommended for Elasticsearch?
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Elasticsearch建议使用多少个CPU？
- en: What is the recommended minimum CPU speed for Elasticsearch?
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Elasticsearch的推荐最低CPU速度是多少？
- en: How does having the wrong CPU configuration impact Elasticsearch performance?
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拥有错误的CPU配置会如何影响Elasticsearch的性能？
- en: What is a page cache?
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是页面缓存？
- en: Why is it recommended that you disable swapping on Elasticsearch nodes?
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么建议在Elasticsearch节点上禁用交换？
- en: How does undersizing memory affect Elasticsearch?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 内存不足会如何影响Elasticsearch？
- en: What is the minimum memory required for Elasticsearch?
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Elasticsearch的最低内存要求是多少？
- en: Where does Elasticsearch store data by default?
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Elasticsearch默认存储数据的位置在哪里？
- en: Why is using an SSD recommended for Elasticsearch?
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么建议使用SSD来进行Elasticsearch？
- en: What are the minimum requirements for Logstash?
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Logstash的最低要求是什么？
- en: What are persistent queues?
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是持久队列？
- en: What affects the resource usage in Kibana?
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么影响了Kibana的资源使用？
- en: Further reading
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'For more information, you can read the following book:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 想要了解更多信息，您可以阅读以下书籍：
- en: '***Linux: Powerful Server Administration*, by Uday R. Sawant, Et al.**: [https://www.packtpub.com/networking-and-servers/linux-powerful-server-administration](https://www.packtpub.com/networking-and-servers/linux-powerful-server-administration)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 《Linux：强大的服务器管理》，作者Uday R. Sawant等人：[https://www.packtpub.com/networking-and-servers/linux-powerful-server-administration](https://www.packtpub.com/networking-and-servers/linux-powerful-server-administration)
