- en: Learning HTML5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It's finally time to start building our website. First, you'll need to understand
    the basics of **Hypertext Markup Language** (**HTML**) and CSS. We'll start with
    HTML with an introduction of what HTML is. Following the structure of an HTML
    document, we will be filling the structures and will be adding some images and
    links along the way.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Atom, our text editor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTML tags and attributes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTML structure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Images and links
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So, let's get started.
  prefs: []
  type: TYPE_NORMAL
- en: Our main tool
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we actually start coding, we need to download a text editor. It's a program
    to basically write all our code. In this course, we will use Atom; you can download
    the tool via this URL ([https://atom.io/](https://atom.io/)). The program is available
    for macOS, Windows, and Linux, and it is completely free!
  prefs: []
  type: TYPE_NORMAL
- en: If you are familiar with another text editor, it's completely fine to use your
    one. A few other editors are also very nice and free, such as Sublime Text 3 ([https://www.sublimetext.com/](https://www.sublimetext.com/)), 
    Bracket ([http://brackets.io/](http://brackets.io/)), and Dreamweaver ([https://www.adobe.com/products/dreamweaver.html](https://www.adobe.com/products/dreamweaver.html)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have your text editor, we can start the course:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/08310e57-09c8-4f8d-9086-851724993956.png)'
  prefs: []
  type: TYPE_IMG
- en: The ATOM Text Editor
  prefs: []
  type: TYPE_NORMAL
- en: 'First things first, we need to create a folder to put all our project files
    in there. Let''s create this folder and call it `Racing Club Website`. Once you''ve
    done that, open this folder as our project folder. Click on File | Add Project
    Folder…:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fbf980d9-7c88-412f-8f9a-3fbba4f97cfb.png)'
  prefs: []
  type: TYPE_IMG
- en: Now that we have our super text editor installed and our project folder set,
    let's talk about HTML.
  prefs: []
  type: TYPE_NORMAL
- en: What is HTML?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: HTML is the standard markup language for creating web pages and web applications.
    Combined with CSS and JavaScript, you can create simple and complex websites.
  prefs: []
  type: TYPE_NORMAL
- en: Every web page is actually an HTML file. Each HTML file is just a plain-text
    file, but with a `.html` file extension instead of `.txt`.
  prefs: []
  type: TYPE_NORMAL
- en: HTML tags
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'HTML tags are the hidden keywords that define how you order and display element
    and content. Most HTML tags have two parts, an opening, and a closing part:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4c73cc9b-6edf-4afd-824d-79d822b5ac66.png)'
  prefs: []
  type: TYPE_IMG
- en: Note that the closing tag has the same text as the opening tag, but has an additional
    forward-slash ( `/` ) character.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are some exceptions, such as the HTML tag `<img>` that does not have
    a closing tag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: To view an HTML document, you'll need a web browser such as Google Chrome, Mozilla
    Firefox, Internet Explorer, or Safari.
  prefs: []
  type: TYPE_NORMAL
- en: HTML attributes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Attributes are what customize the tags, and they''re defined within the tags,
    for example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Attributes are optional for most tags, usually to change the default state of
    a tag. However, some tags, such as the `<img>` tag, require attributes such as
    `src` and `alt`, which are needed for the browser to display the image properly.
  prefs: []
  type: TYPE_NORMAL
- en: HTML structure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every HTML follows a structure so that a browser is able to read the page. To
    summarize, it always starts with an `<html>` tag. This tag will contain the `<head>`
    tag and the `<body>`tag. Let's create our first page so you can understand.
  prefs: []
  type: TYPE_NORMAL
- en: Creating our first page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To create our first page. Click on File | New File or *Command* + *N* (or *Ctrl*
    + *N* for Windows).
  prefs: []
  type: TYPE_NORMAL
- en: You now have an untitled file. Let's quickly save and name it by clicking File
    | Save or *Command* + *S* (or *Ctrl* + *S* for Windows) and name it `index.html`.
  prefs: []
  type: TYPE_NORMAL
- en: Why name it `index.html`? Because the `index.html` page is the common name used
    for the default page shown on a website by default when a visitor requests the
    site. In other words, `index.html` is basically the name used for the homepage
    of the website.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have our first HTML file, we have to put the essential tags in
    to make it work. The essential tags should be written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Simply copy and paste the code into your HTML file and open your file with your
    internet browser (we will pick Google Chrome). Don't forget to save your document!
  prefs: []
  type: TYPE_NORMAL
- en: 'Your web page should appear as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2b5ffab8-9591-4e92-81e1-b03e62689567.png)'
  prefs: []
  type: TYPE_IMG
- en: The web page opened in Google Chrome
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations! You have just created your first web page!
  prefs: []
  type: TYPE_NORMAL
- en: Now let's add some other elements to our page.
  prefs: []
  type: TYPE_NORMAL
- en: HTML elements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many different elements in HTML and they are all for different purposes.
    It's not mandatory to know all of them, but some are essentials for a website.
    Here are a few essential elements in HTML.
  prefs: []
  type: TYPE_NORMAL
- en: Titles and paragraphs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To insert a title in HTML, there is a tag called `<h1>` that goes all the way
    to `<h6>`. The number is determined by the importance of the title.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s put an `<h1>` element into our `<body>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'We now have our first title. Let''s add a paragraph. To add a paragraph, we
    can use the HTML tag `<p>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: You learned earlier that for each HTML tag, we have an opening `<tagname>` tag
    and a closing `</tagname>` tag. This is to basically tell you when your element
    is ending. You can also add another tag inside a tag. For example, if we want
    to make some text **bold**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s use our `<p>` tag and add a `<b>` tag to our `amazing` word to make
    it bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'This is what you should have in your browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d55513af-c3e3-4f79-af60-359b777c873a.png)'
  prefs: []
  type: TYPE_IMG
- en: Amazing! You just put text in bold! Let's add some forms now.
  prefs: []
  type: TYPE_NORMAL
- en: With forms, no matter what type of information you want from your users, to
    get it from them you'll need to use the `<input>` tag.
  prefs: []
  type: TYPE_NORMAL
- en: There are many different types of inputs, but, for now, we'll cover `email`
    and `submit`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `input` tag is one of the exceptions that does not need a closing tag;
    let''s add it to our paragraph:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/ebf57f83-04d6-4698-9b73-9068aee54357.png)'
  prefs: []
  type: TYPE_IMG
- en: HTML Attribute
  prefs: []
  type: TYPE_NORMAL
- en: You can think of attributes as options for each tag
  prefs: []
  type: TYPE_NORMAL
- en: 'But the `email` input won''t be any good without a Submit button! Let''s add
    another input type, `submit`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s see what we have now:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d7941345-6943-42f8-82f6-726032dabbb7.png)'
  prefs: []
  type: TYPE_IMG
- en: This is what you should have in your browser. Save your HTML document with *Ctrl*
    (or *Cmd*) + *S* and refresh your browser.
  prefs: []
  type: TYPE_NORMAL
- en: 'Awesome! But we may have a little problem. We don''t actually say what users
    are supposed to type into the input `email`. Luckily, there is an attribute called
    `placeholder` that lets us add a default text to our input, so users know what
    to type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Excellent! Now you can see our placeholder in our email's input.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/696a0ad2-9ca5-4f2c-b3dc-7dbbaaa6577a.png)'
  prefs: []
  type: TYPE_IMG
- en: This is what you should have in your browser. Save your HTML document with *Ctrl*
    (or *Cmd*) + *S* and refresh your browser.
  prefs: []
  type: TYPE_NORMAL
- en: Links and images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our last part will be to add images and links.
  prefs: []
  type: TYPE_NORMAL
- en: 'Web pages will be boring without images. To add an image, you need to add a
    tag, `<img>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5d96c311-989e-4f6a-ae7f-8183b2635d5c.png)'
  prefs: []
  type: TYPE_IMG
- en: img tag structure
  prefs: []
  type: TYPE_NORMAL
- en: You'll need to add the `src` attribute to put the location of your image.
  prefs: []
  type: TYPE_NORMAL
- en: But first, let's create a folder to put all our images inside. Go back to your
    main folder, `Racing Club Website`, which we created earlier. Inside, let's create
    a folder named `images`.
  prefs: []
  type: TYPE_NORMAL
- en: In the `Images` folder in code bundle on GitHub, you can see an image called
    `designer.jpg`; let's copy and paste this image into our folder `images`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have the image in your `images` folder, we can link it to our `img`
    tag. To do so, add the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: You can put two different types of URL in the `src` attribute. A relative URL,
    such as the one we put, only works if you're linking to a file on the same domain
    as the current page. Since we're doing it locally, it's considered the same domain.
    And an absolute URL, a URL that includes `http://`, directs you to the image directory,
    for example, `http://philippehong.com/img/image-example.jpg`.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now add a link. Links are added with the tag `<a>` and with attribute
    `href`.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can put two different types of URL in the `href` attribute, just as you
    can for the image. Let''s put an absolute URL this time, by adding our Twitter
    page:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: But we still need to add some text inside the `<a>` tag to make it visible.
  prefs: []
  type: TYPE_NORMAL
- en: 'Your HTML document should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that you can see that the code is ready. Let''s save our HTML document
    and see how it looks in our internet browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8e7fe83a-ed2a-4580-88a7-ef88046201a9.png)'
  prefs: []
  type: TYPE_IMG
- en: This is what you should have in your browser. Save your HTML document with *Ctrl*
    (or *Cmd*) + *S* and refresh your browser.
  prefs: []
  type: TYPE_NORMAL
- en: It does look very plain, but this is because we didn't add any CSS.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we went through all the basics of HTML. We learned about HTML
    tags, attributes, and also the overall structure of an HTML page.
  prefs: []
  type: TYPE_NORMAL
- en: Before we head over to our next chapter, the tags we learned in this chapter
    are not the only tags available. There are plenty of tags in HTML, and you can
    check them out in the glossary at the end of this book. We will also use some
    new ones when we create our own project! Let's add some styling to our page now!
  prefs: []
  type: TYPE_NORMAL
