- en: Chapter 6. Exploring Third Party Options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So far, we have been looking at the tools and services you host yourself. Along
    with these self-hosted tools, a large amount of cloud-based software has developed
    around Docker as a service ecosystem. In this chapter, we will look at the following
    topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Why use a SaaS service over self-hosted or real-time metrics?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What services are available and what do they offer?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installation of agents for Sysdig Cloud, Datadog, and New Relic on the host
    machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration of the agents to ship metrics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A word about externally hosted services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far, to work through the examples in this book, we have used locally hosted
    virtual servers that are launched using vagrant. During this chapter, we are going
    to use services that need to be able to communicate with your host machine, so
    rather than trying to do this using your local machine, its about time you took
    your host machine into the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: As we are going to start and stop the remote hosts while we look at the services,
    it pays to use a public cloud, as we only get charged for what we use.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are several public cloud services that you can use to evaluate the tools
    covered in this chapter, which one you choose to use is up to you, you could use:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Digital Ocean: [https://www.digitalocean.com/](https://www.digitalocean.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Amazon Web Services: [https://aws.amazon.com/](https://aws.amazon.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Microsoft Azure: [https://azure.microsoft.com/](https://azure.microsoft.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'VMware vCloud Air: [http://vcloud.vmware.com/](http://vcloud.vmware.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Or use your own preferred provider, the only pre-requisite is that your server
    is publically accessible.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter assumes that you are capable of launching either a CentOS 7 or
    Ubuntu 14.04 cloud instance and you understand that you will likely incur charges
    while the cloud instance is up and running.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Docker in the cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once you have launched your cloud instance, you can bootstrap Docker in the
    same way that you installed using vagrant. In the `chapter 6` folder of the Git
    repository, there are two separate scripts to download and install the Docker
    engine and compose it on your cloud instance.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Docker, ensure that your cloud instance is updated by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'For the CentOS instance of your Ubuntu, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Once updated, run the following command to install the software. Due to the
    differences in the way different cloud environments are configured, it is best
    to switch over to the root user to run the remainder of the commands, to do this,
    run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now you will be able to run the install script using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'To check that everything works as expected, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see something similar to the terminal output, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploying Docker in the cloud](../images/00045.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: We can start to look at the SasS services once you have Docker up and running.
  prefs: []
  type: TYPE_NORMAL
- en: Why use a SaaS service?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You may have noticed while working with the examples in the previous chapters
    that the tools we have used can potentially use many resources if we needed to
    start collecting more metrics, especially if the applications we want to monitor
    are in production.
  prefs: []
  type: TYPE_NORMAL
- en: To help shift this load from both storage and CPU, a number of cloud-based SaaS
    options have started offering support to record metrics for your containers. Many
    of these services were already offering services to monitor servers, so adding
    support for containers seemed a natural progression for them.
  prefs: []
  type: TYPE_NORMAL
- en: These typically require you to install an agent on your host machine, once installed,
    the agent will sit in the background and report to the services, normally cloud-based
    and API services.
  prefs: []
  type: TYPE_NORMAL
- en: 'A few of the services allow you to deploy the agents as Docker containers.
    They offer containerized agents so that the service can run on stripped down operating
    systems, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: 'CoreOS: [https://coreos.com/](https://coreos.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'RancherOS: [http://rancher.com/rancher-os/](http://rancher.com/rancher-os/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Atomic: [http://www.projectatomic.io/](http://www.projectatomic.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ubuntu Snappy Core: [https://developer.ubuntu.com/en/snappy/](https://developer.ubuntu.com/en/snappy/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These operating systems differ from traditional ones, as you cannot install
    services on them directly; their only purpose is to run a service, such as Docker,
    so that you can launch the services or applications you need to be run as containers.
  prefs: []
  type: TYPE_NORMAL
- en: As we are running full operating systems as our host systems, we do not need
    this option and will be deploying the agents directly to the hosts.
  prefs: []
  type: TYPE_NORMAL
- en: 'The SaaS options that we are going to look at in this chapter are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sysdig Cloud: [https://sysdig.com/product/](https://sysdig.com/product/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Datadog: [https://www.datadoghq.com/](https://www.datadoghq.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'New Relic: [http://newrelic.com](http://newrelic.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They all offer free trials and two of them offer free cut-down versions of the
    main service. On the face of it, they might all appear to offer similar services;
    however, when you start to use them, you will immediately notice that they are
    in fact all very different from each other.
  prefs: []
  type: TYPE_NORMAL
- en: Sysdig Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we had a look at the open source version of Sysdig.
    We saw that there is a great ncurses interface called cSysdig and it allows us
    to navigate through all the data that Sysdig is collecting about our host.
  prefs: []
  type: TYPE_NORMAL
- en: The sheer amount of metrics and data collected by Sysdig means that you have
    to try to stay on top of it either by shipping your files off the server, maybe
    to Amazon Simple Storage Service (S3), or to some local shared storage. In addition,
    you can query the data in the command line on the host itself or on your local
    machine using an installation of the command-line tools.
  prefs: []
  type: TYPE_NORMAL
- en: This is where Sysdig Cloud comes into play; it offers a web-based interface
    to the metrics that Sysdig captures along with the options to ship the Sysdig
    captures off your host machine either to Sysdig's own storage or to your S3 bucket.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sysdig cloud offers the following functionality:'
  prefs: []
  type: TYPE_NORMAL
- en: ContainerVision™
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Real-Time Dashboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Historical Replay
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dynamic Topology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alerting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As well as, the option to trigger a capture on any of your hosts and at any
    time.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sysdig describes ContainerVision as:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"Sysdig Cloud''s patent-pending core technology, ContainerVision, is the only
    monitoring technology on the market designed specifically to respect the unique
    characteristics of containers. ContainerVision offers you deep and comprehensive
    visibility into all aspects of your containerized environment - applications,
    infrastructures, servers, and networks - all without the need to pollute your
    containers with any extra instrumentation. In other words, ContainerVision gives
    you 100% visibility into the activity inside your containers, from the outside."*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Before we delve into Sysdig Cloud any further, I should point out that this
    is a commercial server and at the time of writing, it costs $25 per host per month.
    There is also a 14-day fully featured trial available. If you wish to work through
    the agent installation and follow the example in this chapter, you will need an
    active account that runs either on the 14-day trial or a paid subscription.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sign up for a 14-day free trial: [https://sysdig.com/](https://sysdig.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Details on pricing: [https://sysdig.com/pricing/](https://sysdig.com/pricing/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Introduction to the company: [https://sysdig.com/company/](https://sysdig.com/company/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing the agent
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The agent installation is similar to installing the open source version; you
    need to ensure that your cloud host is running an up-to-date kernel and that you
    are also booted into the kernel.
  prefs: []
  type: TYPE_NORMAL
- en: Some cloud providers keep a tight control on the kernels you can boot into (for
    example, Digital Ocean), and they do not allow you to manage your kernel on the
    host itself. Instead, you need to choose the correct version through their control
    panel.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have the correct kernel installed, you should be able to run the following
    command to install the agent. Ensure that you replace the access key at the end
    of the command with your own access key, which can be found on your **User Profile**
    page or on the agent installation pages; you can find these at:'
  prefs: []
  type: TYPE_NORMAL
- en: 'User Profile: [https://app.sysdigcloud.com/#/settings/user](https://app.sysdigcloud.com/#/settings/user)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Agent Installation: [https://app.sysdigcloud.com/#/settings/agentInstallation](https://app.sysdigcloud.com/#/settings/agentInstallation)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The command to run is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The shell output should look like the following screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing the agent](../images/00046.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the agent has been installed, it will immediately start to report the
    data back to Sysdig Cloud. If you click on **Explore**, you will see your host
    machine and the running containers:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing the agent](../images/00047.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: As you can see here, I have my host machine and four containers running a WordPress
    installation similar to the one we used in the previous chapter. From here, we
    can start to drill down into our metrics.
  prefs: []
  type: TYPE_NORMAL
- en: 'To launch the WordPress installation on your cloud-based machine, run the following
    commands as the root user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Exploring your containers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Sysdig Cloud web interface will feel instantly familiar, as it shares a
    similar design and overall feeling with cSysdig:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring your containers](../images/00048.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Once you start to drill down, you can see that a bottom pane opens up and this
    is where you can view the statistics. One of the things I liked about Sysdig Cloud
    is that it opens up a wealth of metrics and there should be very little that you
    need to configure from here.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, if you want to know what processes have been consuming the most
    CPU time in the last 2 hours, click on **2H** in the secondary menu and then from
    the **Views** tab in the bottom-left click on **System: Top Processes**; this
    will give you a table of the processes, ordered by the ones that have used the
    most time.'
  prefs: []
  type: TYPE_NORMAL
- en: To apply this view to a container, click on a container in the top-section and
    the bottom-section will be instantly updated to reflect the top CPU utilization
    for just that container; as most containers will only run one or two processes,
    this may not be that interesting. So, let's have a deep look at the processes
    themselves. Let's say, we clicked on our database container and we wanted information
    on what is happening within MySQL.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sysdig Cloud comes with application overlays, these when selected give you
    more granular information on the processes within the container. Selecting the
    **App: MySQL/PostgreSQL** view gives you an insight into what your MySQL processes
    are currently doing:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring your containers](../images/00049.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Here, you can see that view in the bottom section has instantly updated to give
    a wealth of information on what has been happening in the last 5 minutes within
    MySQL.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sysdig Cloud supports a number of application views, including:'
  prefs: []
  type: TYPE_NORMAL
- en: Apache
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HAProxy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NGINX
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RabbitMQ
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Redis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomcat
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each one gives you immediate access to metrics, which even the most experienced
    SysAdmins will find valuable.
  prefs: []
  type: TYPE_NORMAL
- en: 'You may have noticed that at the top of the second panel there are also a few
    icons, these allow you to:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Add Alert**: Creates an alert based on the view you have open; it lets you
    tweak the threshold and also choose how you are notified.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sysdig Capture**: Pressing this brings up a dialog, which lets you record
    a Sysdig session. Once recorded, the session is transferred to Sysdig Cloud or
    your own S3 bucket. Once the session is available, you download it or explore
    it within the web interface.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SSH Connect**: Gets a remote shell on the server from the Sysdig Cloud web
    interface; it is useful if you do not have immediate access to your laptop or
    desktop machine and you want to do some troubleshooting.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pin to dashboard**: Adds the current view to a custom dashboard.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Out these options icons, the "Add Alert" and "Sysdig Capture" options are probably
    the ones that you will end up using the most. One final view that I found interesting,
    is the topology one. It gives you a bird''s eye view of your host and containers,
    this is useful too see the interaction between containers and hosts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring your containers](../images/00050.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Here, you can see me request a page from the WordPress site (it's in the box
    on the left), this request hits my host machine (the box on the right). Once it's
    on the host machine, it is routed to the HAProxy container, which then passes
    the page request to the Wordpress2 container. From here, the Wordpress2 container
    interacts with the database that is running on the MySQL container.
  prefs: []
  type: TYPE_NORMAL
- en: Summary and further reading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Although Sysdig Cloud is quite a new service, it feels instantly familiar and
    fully featured as it is built on top of an already established and respected open
    source technology. If you like, the level of detail you get from the open source
    version of Sysdig, then Sysdig Cloud is a natural progression for you to start
    storing your metrics offsite and also to configure alerts. Some good starting
    points for learning more about Sysdig Cloud are:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Video Introduction: [https://www.youtube.com/watch?v=p8UVbpw8n24](https://www.youtube.com/watch?v=p8UVbpw8n24)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sysdig Cloud Best Practices: [http://support.sysdigcloud.com/hc/en-us/articles/204872795-Best-Practices](http://support.sysdigcloud.com/hc/en-us/articles/204872795-Best-Practices)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dashboards: [http://support.sysdigcloud.com/hc/en-us/articles/204863385-Dashboards](http://support.sysdigcloud.com/hc/en-us/articles/204863385-Dashboards)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sysdig blog: [https://sysdig.com/blog/](https://sysdig.com/blog/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have launched a cloud instance and are no longer using it, now would
    be a good time to power the instance down or terminate it altogether. This will
    ensure that you do not get billed for services that you are not using.
  prefs: []
  type: TYPE_NORMAL
- en: Datadog
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Datadog is a full monitoring platform; it supports various servers, platforms,
    and applications. Wikipedia describes the service as:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"Datadog is a SaaS-based monitoring and analytics platform for IT infrastructure,
    operations and development teams. It brings together data from servers, databases,
    applications, tools and services to present a unified view of the applications
    that run at scale in the cloud."*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It uses an agent that is installed on your host machine; this agent sends metrics
    back to the Datadog service periodically. It also support multiple cloud platforms,
    such as Amazon Web Services, Microsoft Azure, and OpenStack to name a few.
  prefs: []
  type: TYPE_NORMAL
- en: The aim is to bring all of your servers, applications, and host provider metrics
    into a single pane of glass; from here, you can create custom dashboards and alerts
    so that you can be notified of any problem at any level within your infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: You can sign up for a free trial of the full service at [https://app.datadoghq.com/signup](https://app.datadoghq.com/signup).
    You will need at least a trial account to configure the altering, and if your
    trial has already expired the lite account will do. For more detail on Datadog's
    pricing structure, please see [https://www.datadoghq.com/pricing/](https://www.datadoghq.com/pricing/).
  prefs: []
  type: TYPE_NORMAL
- en: Installing the agent
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The agent can be installed either directly on the host machine or as a container.
    To install directly on the host machine, run the following command and make sure
    that you use your own unique `DD_API_KEY`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'To run the agent as a container, use the following command and again make sure
    that you use your own `DD_API_KEY`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Once the agent has been installed, it will call back to Datadog and the host
    will appear in your account.
  prefs: []
  type: TYPE_NORMAL
- en: If the agent has been installed directly on the host machine then we will need
    to enable the Docker integration, if you installed the agent using the container
    then this will have been done for you automatically.
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, you first need to allow the Datadog agent access to your Docker
    installation by adding the `dd-agent` user to the Docker group by running the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The next step is to create the `docker.yaml` configuration file, luckily the
    Datadog agent ships with an example configuration file that we can use; copy this
    in place and then restart the agent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Now the agent on our host machine has been configured and the final step is
    to enable the integration through the website. To do this, go to [https://app.datadoghq.com/](https://app.datadoghq.com/)
    and click on **Integrations**, scroll down and then click on install on **Docker**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing the agent](../images/00051.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Once you click install, you will be presented with an overview of the integration,
    click on the **Configuration** tab, this gives instructions on how to configure
    the agent; as we have already done this step, you can click on **Install Integration**.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find more information on installing the agent and the integrations
    at the following URLs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://app.datadoghq.com/account/settings#agent](https://app.datadoghq.com/account/settings#agent)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://app.datadoghq.com/account/settings#integrations](https://app.datadoghq.com/account/settings#integrations)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the web interface
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now, you have installed the agent and enabled the Docker integration, you can
    start to have a look around the web interface. To find your host, click on "Infrastructure"
    in the left-hand side menu.
  prefs: []
  type: TYPE_NORMAL
- en: 'You should be taken to a screen that contains a map of your infrastructure.
    Like me, you probably only have a single host machine listed, click on it and
    some basic stats should appear at the bottom of the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring the web interface](../images/00052.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'If you don''t already have the containers launched, now would be a good time
    to do so, lets launch the WordPress installation again using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, go back to the web interface, from there you can click on any of the services
    listed on the hexagon. This will bring up some basic metrics for the service you
    have selected. If you click on **docker**, you will see a link for a Docker Dashboard
    among the various graphs and so on; clicking this will take you to a more detailed
    view of your containers:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring the web interface](../images/00053.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, this gives us our now familiar break down of the CPU and memory
    metrics, along with in the top right of the dashboard a breakdown of the container
    activity on the host machine; this logs events, such as stopping and starting
    containers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Datadog currently records the following metrics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`docker.containers.running`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docker.containers.stopped`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docker.cpu.system`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docker.cpu.user`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docker.images.available`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docker.images.intermediate`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docker.mem.cache`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docker.mem.rss`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`docker.mem.swap`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'From the **Metrics** explorer option in the left-hand side menu, you can start
    to graph these metrics and once you have the graphs, you can then start to add
    them to your own custom dashboards or even annotate them. When you annotate a
    graph, a snapshot is created and the graph shows up in the events queue along
    with the other events, that have been recorded, such as container stopping and
    starting:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring the web interface](../images/00054.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Also, within the web interface you can configure monitors; these allow you to
    define triggers, which alert you if your conditions are not met. Alerts can be
    sent as e-mails or via third party services, such as Slack, Campfire, or PagerDuty.
  prefs: []
  type: TYPE_NORMAL
- en: Summary and further reading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'While Datadog''s Docker integration only gives you the basic metrics on your
    containers, it does have a wealth of features and integration with other applications
    and third parties. If you need to monitor a number of different services alongside
    your Docker containers, then this service could be for you:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Home page: [https://www.datadoghq.com](https://www.datadoghq.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Overview: [https://www.datadoghq.com/product/](https://www.datadoghq.com/product/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Monitoring Docker with Datadog: [https://www.datadoghq.com/blog/monitor-docker-datadog/](https://www.datadoghq.com/blog/monitor-docker-datadog/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Twitter: [https://twitter.com/datadoghq](https://twitter.com/datadoghq)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Please Remember**'
  prefs: []
  type: TYPE_NORMAL
- en: If you have launched a cloud instance and are no longer using it then now would
    be a good time to power the instance down or terminate it altogether. This will
    ensure that you do not get billed for any services you are not using.
  prefs: []
  type: TYPE_NORMAL
- en: New Relic
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: New Relic could be considered the granddaddy of SaaS monitoring tools, chances
    are that if you are a developer you will have heard of New Relic. It has been
    around for a while and it is the standard to which other SaaS tools compare themselves.
  prefs: []
  type: TYPE_NORMAL
- en: 'New Relic has grown into several products over the year, currently, they offer:'
  prefs: []
  type: TYPE_NORMAL
- en: '**New Relic APM**: The main application performance-monitoring tool. This is
    what most people will know New Relic for; this toll gives you the code level visibility
    of your application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**New Relic Mobile**: A set of libraries to embed into your native mobile apps,
    giving APM levels of detail for your iOS and android application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**New Relic Insights**: A high-level view of all of the metrics collected by
    other New Relic services.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**New Relic Servers**: Monitors your host servers, recording metrics around
    CPU, RAM, and storage utilization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**New Relic Browser**: Gives you an insight into what happens with your web-based
    applications once they leave your servers and enter your end user''s browser'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**New Relic Synthetics**: Monitors your applications responsiveness from various
    locations around the world.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rather than looking at all of these offerings that give us an insight into what
    is happening with our Docker-based code, as that's probably a whole book on its
    own, we are going to take a look at the server product.
  prefs: []
  type: TYPE_NORMAL
- en: The server monitoring service offered by New Relic is available free of charge,
    you just need an active New Relic account, you can sign up for an account at [https://newrelic.com/signup/](https://newrelic.com/signup/)
    details on New Relics pricing can be found at their homepage at [http://newrelic.com/](http://newrelic.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Installing the agent
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Like the other SaaS offerings we have looked at in this chapter, New Relic
    Servers has a host-based client, which needs to be able to access the Docker binary.
    To install this on a CentOS machine, run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'For Ubuntu, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Now that you have the agent installed, you need to configure the agent with
    your license key. You can do this with the following command and make sure that
    you add your license, which can be found in your settings page:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Now that the agent is configured, we need to add the `newrelic` user to the
    `docker` group so that the agent has access to our container information:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we need to start the New Relic Server agent and restart Docker:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Restarting Docker will stop the running containers that you have; make sure
    that you make a note of these using `docker ps` and then start them manually and
    back up once the Docker service restarts.
  prefs: []
  type: TYPE_NORMAL
- en: You should see your server appear on your New Relic control panel after a few
    minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the web interface
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once you have the New Relic server agent installed, configured, and running
    on your host machine, you will see something similar to the following screenshot
    when clicking on **Servers** in the top menu:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring the web interface](../images/00055.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Selecting the server will allow you to start exploring the various metrics
    that the agent is recording:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring the web interface](../images/00056.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'From here, you have the option to drill down further:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Overview**: Gives a quick overview of your host machine'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Processes**: Lists all of the processes that are running both on the host
    machine and within your containers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network**: Lets you see the network activity for your host machine'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Disks**: Gives you details on how much space you are using'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Docker**: Shows you the CPU and memory utilization for your containers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As you may have guessed, we are going to be looking at the **Docker** item
    next, click on it and you will see a list of your active images:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring the web interface](../images/00057.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You may have noticed a difference between New Relic and the other services,
    as you can see New Relic does not show you the running containers, instead it
    shows you the utilization by Docker image.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the preceding screenshot, I have four containers active and running the
    WordPress installation we have used elsewhere in the book. If I wanted a breakdown
    per container, then I would be out of luck, as demonstrated by the following screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring the web interface](../images/00058.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: It's a pretty dull screen, but it gives you an idea about what you will see
    if you are running multiple containers that have been launched using the same
    image. So how is this useful? Well, coupled with the other services offered by
    New Relic, it can give you an indication of what your containers were up to when
    a problem occurred within your application. If you remember the Pets versus Cattle
    versus Chickens analogy from [Chapter 1](part0014_split_000.html#DB7S1-fcf7b4d102f841bba77b823d677470e0
    "Chapter 1. Introduction to Docker Monitoring"), *Introduction to Docker Monitoring*,
    we don't necessarily care which container did what; we just want to see the impact
    it had during the issue we are looking into.
  prefs: []
  type: TYPE_NORMAL
- en: Summary and further reading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Due to the amount of products it offers, New Relic can be a little daunting
    at first, but if you work with a development team that actively uses New Relic
    within their day-to-day workflow, then having all of the information about your
    infrastructure alongside this data can be both valuable and necessary, especially
    during an issue:'
  prefs: []
  type: TYPE_NORMAL
- en: 'New Relic Server monitoring: [http://newrelic.com/server-monitoring](http://newrelic.com/server-monitoring)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'New Relic and Docker: [http://newrelic.com/docker/](http://newrelic.com/docker/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Twitter: [https://twitter.com/NewRelic](https://twitter.com/NewRelic)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have launched a cloud instance and are no longer using it then, now is
    a good time to power the instance down or terminate it altogether, this will ensure
    you do not get billed for any services you are not using.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Which SaaS service you choose depends on your circumstances, there are a number
    of questions you should ask yourself before you start evaluating the SaaS offerings:'
  prefs: []
  type: TYPE_NORMAL
- en: How many containers would you like to monitor?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How many host machines do you have?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is there a non-containerized infrastructure you need to monitor?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What metrics do you need from the monitoring service?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How long should the data be retained for?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Could other departments, such as development and utilize the service?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We covered just three of the available SaaS options in this chapter, there
    are other options available, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Ruxit: [https://ruxit.com/docker-monitoring/](https://ruxit.com/docker-monitoring/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Scout: [https://scoutapp.com/plugin_urls/19761-docker-monitor](https://scoutapp.com/plugin_urls/19761-docker-monitor)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Logentries: [https://logentries.com/insights/server-monitoring/](https://logentries.com/insights/server-monitoring/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sematext: [http://sematext.com/spm/integrations/docker-monitoring.html](http://sematext.com/spm/integrations/docker-monitoring.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring servers and services are only as good as the metrics you collect,
    if possible and if your budget allows, you should take full advantage of the services
    offered by your chosen providers, as more data being recorded by a single provider
    will only benefit you when it comes to analyzing problems with not only your containerized
    applications, but also with your infrastructure, code and even your cloud provider.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if you are monitoring your host machine using the same service
    as you use to monitor your containers, then by using the custom graphing functions,
    you should be able to create overlay graphs of CPU load spikes of both your host
    machine and your container. This is a lot more useful than trying to compare two
    different graphs from different systems side by side.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next chapter, we will look at an often-overlooked part of monitoring:
    shipping your log files away from your containers/hosts to a single location so
    that they can be monitored and reviewed.'
  prefs: []
  type: TYPE_NORMAL
