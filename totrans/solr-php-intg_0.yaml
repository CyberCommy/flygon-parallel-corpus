- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Searches are an integral part of any web application that is built today. Whether
    it is a content site, a job site, an e-commerce site, or any other website, searches
    play a very important role in helping the user locate the information that he/she
    is looking for. As a developer, it is imperative to provide the user of the website
    with all the possible tools for searching and narrowing down to the required information.
    Apache Solr is a full text search engine, which provides a large list of features
    for searches. PHP is the preferred programming language for building websites.
    This book guides the reader on the integration between PHP and Solr.
  prefs: []
  type: TYPE_NORMAL
- en: When a user performs a search on the website, he wants the results to be relevant
    based on certain criteria. Let us take the example of an e-commerce website. A
    search can happen on product names, brand names, model numbers, and product types.
    Once the results are visible, it is important to provide a set of facets on price,
    size, and some other features of the products in the search result, which can
    be used to narrow down the results to exactly what is desired. Autocompleting
    the search query as the user types and providing spelling suggestions are some
    of the advanced search functionalities that are visible on some websites.
  prefs: []
  type: TYPE_NORMAL
- en: The idea of this book is to bring attention to these and many other search functionalities
    that Solr provides to the community of PHP developers and to guide PHP developers
    who build these websites on exploring and using these search functionalities to
    build features related to searches into their websites. This book not only provides
    a quick step-by-step PHP code for fast development of search features but also
    goes in depth on how the feature actually works on the Solr end. Configurations
    and tweaking options in Solr and PHP are also discussed for advanced users to
    help them tweak the functionality as per their requirements.
  prefs: []
  type: TYPE_NORMAL
- en: This book will start with installation of Solr, adding, updating, and deleting
    documents on Solr using PHP and then exploring the features provided by the Solr
    search. We will explore the features provided by Solr such as faceting, grouping,
    boosting, and sorting of results. We will build a spell check and a query autocomplete
    feature provided by Solr. We will also look at advanced features for scaling search.
    This book will provide an end-to-end practical guide to building a full featured
    search application using PHP and Solr.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Installing and Integrating Solr and PHP"),
    *Installing and Integrating Solr and PHP*, introduces Solr and installs and integrates
    Solr with PHP on both Windows and Linux environments.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Inserting, Updating, and Deleting Documents
    from Solr"), *Inserting, Updating, and Deleting Documents from Solr*, provides
    practical examples on how to use PHP to add, modify, and delete documents from
    the Solr index.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Select Query on Solr and Query Modes (DisMax/eDisMax)"),
    *Select Query on Solr and Query Modes (DisMax/eDisMax)*, explains how to run basic
    search queries on Solr and use different query modes to run some advanced search
    queries.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Advanced Queries – Filter Queries and Faceting"),
    *Advanced Queries – Filter Queries and Faceting*, digs deeper into search queries
    and provides practical examples for running filter queries and facets using Solr
    and PHP.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Highlighting Results Using PHP and Solr"),
    *Highlighting Results Using PHP and Solr*, explains how Solr can be configured
    for highlighting search results and provides practical examples in PHP for highlighting.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Debug and Stats Component"), *Debug and Stats
    Component*, explains how Solr calculates relevance, ranks the results of a search
    query, and explains how index statistics can be obtained.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Spell Check in Solr"), *Spell Check in Solr*,
    configures Solr for spell check and provides practical example of an autocomplete
    feature built using PHP and Solr.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Advanced Solr – Grouping, the MoreLikeThis
    Query, and Distributed Search"), *Advanced Solr – Grouping, the MoreLikeThis Query,
    and Distributed Search*, goes in depth on some of the advanced topics in Solr
    and also explains how Solr can be scaled horizontally.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will need a Windows or Linux machine with Apache Web Server configured to
    run PHP scripts. A file editor for writing code and a web browser to check the
    output of code execution will be needed. We will be downloading, installing, and
    configuring Solr as required.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for PHP developers who need to build and integrate search into
    their applications. No prior knowledge of Solr is required. Understanding of object
    oriented programming using PHP would be helpful. Readers should be familiar with
    the concept of web applications.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in the text are shown as follows: "Call the `createPing()`function
    to create the ping query."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*New terms* and *important words* are shown in italics. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Select **collection1** from the dropdown on the left-hand panel. Click on **ping**
    and you will see the ping time in milliseconds appear next to the **ping** link".'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
