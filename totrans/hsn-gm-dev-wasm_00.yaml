- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: WebAssembly is a technology that will change the web as we know it within the
    next few years. WebAssembly promises a world where web-based applications run
    at near-native speeds. It is a world where you can write an application for the
    web in any language you like, and compile it for native platforms as well as the
    web. It is early days for WebAssembly, but this technology is already taking off
    like a rocket. If you are interested in where the web is going, as much as where
    it is today, read on!
  prefs: []
  type: TYPE_NORMAL
- en: I wrote this book to reflect the way I like to learn new skills. I will walk
    you through the development of a game using WebAssembly and all of its related
    technologies. I am a long-time game and web developer, and I have always enjoyed
    learning new programming languages by writing games. In this book, we will be
    covering a lot of ground on a lot of topics using both web and game development
    tools that go hand in hand with WebAssembly. We will learn how to write games
    that target WebAssembly utilizing a plethora of programming languages and tools,
    including Emscripten, C/C++, WebGL, OpenGL, JavaScript, HTML5, and CSS. As a long-time
    owner of an independent game development studio that specializes in the development
    of web-based games, I have found that it is essential to have a broad understanding
    of web- and game-based technologies and I have stuffed this book full of them.
    You will be learning a sample platter of skills with a focus on getting your apps
    up and running with WebAssembly. If you want to learn how to develop games with
    WebAssembly, or if you would like to create web-based applications that are lightning
    fast, this book is for you.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is not an introduction to programming. It is intended for people who
    know how to code in at least one programming language. It would be helpful, but
    is not strictly necessary, to have at least a rudimentary understanding of some
    web-based technologies, such as HTML. This book contains instructions on how to
    install the required tools on Windows or Ubuntu Linux, and, out of the two, I
    would recommend using Ubuntu, as its installation process is much simpler.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](2a47a921-b081-4857-9040-de3ff6298a43.xhtml), *Introduction to WebAssembly
    and Emscripten*, introduces WebAssembly, why the web needs it, and why it is so
    much faster than JavaScript. We will introduce Emscripten, why we need it for
    WebAssembly development, and how to install it. We will also discuss technologies
    related to WebAssembly, such as asm.js, LLVM, and WebAssembly Text.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](0c9c09be-1e03-4074-9718-7bc3bf9e70e2.xhtml), *HTML5 and WebAssembly*,
    discusses how WebAssembly modules integrate with HTML using the JavaScript "glue
    code". We will learn how to create our own Emscripten HTML shell file, and we
    will learn how to make calls to and from our WebAssembly module, which we will
    write in C. Finally, we will learn how to compile and run an HTML page that interacts
    with our WebAssembly module, and we will learn how to build a simple HTML5 Canvas
    app with Emscripten.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](dd4517c5-291a-49f5-9c7d-4070bb1fd062.xhtml), *Introduction to WebGL*,
    introduces WebGL and the new canvas contexts that support it. We will learn about
    shaders, what they are, and how WebGL uses them to render geometry to the canvas.
    We will learn how to use WebGL and JavaScript to draw a sprite to the canvas.
    And finally, we will write an app that integrates WebAssembly, JavaScript, and
    WebGL that displays a sprite and moves it across the canvas.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](f14c80d0-2d87-45b1-96ab-a3305ad35c50.xhtml), *Sprite Animations
    in WebAssembly with SDL*, teaches you about the SDL library and how we use it
    to simplify calls to WebGL from WebAssembly. We will learn how to use SDL to render,
    animate, and move sprites on the HTML5 canvas.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ed32f91e-080c-49a5-94ad-3252b35aac36.xhtml), *Keyboard Input*,
    looks at how to take input from the keyboard from JavaScript and make calls to
    the WebAssembly module. We will also learn how to accept keyboard input using
    SDL inside our WebAssembly module, and use the input to move a sprite around the
    HTML5 canvas.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ba16e692-1743-4031-bbff-cf2f23ea9a3c.xhtml), *Game Objects and
    the Game Loop*, explores some basic game design. We will learn about the game
    loop, and how a game loop in WebAssembly is different than in other games. We
    will also learn about game objects and how to create an object pool from within
    our game. We will end the chapter by coding the beginning of our game, with two
    spaceships that move about the canvas and shoot projectiles at each other.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](71d18599-d302-4d52-9e7c-343a94835b27.xhtml), *Collision Detection*,
    introduces collision detection into our game. We will explore the types of 2D
    collision detection, implement a basic collision detection system, and learn a
    little about the trigonometry that makes it work. We will modify our game so that
    projectiles destroy the spaceships when they collide.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](0f74d372-06fa-4a58-b7d8-7f71c864c6cd.xhtml), *Basic Particle System*,
    introduces particle systems and discusses how they can visually improve our game.
    We will talk about the virtual filesystem, and we learn how to add files to it
    through a web page. We will briefly introduce SVG and Vector graphics, and how
    to use them for data visualization. We will further discuss trigonometry and how
    we will be using it in our particle systems. We will build a new HTML5 WebAssembly
    app that will help us to configure and test particle systems that we will later
    add to our game.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](b602b8b6-5bec-435f-8b9e-1ad4e4a5f18a.xhtml), *Improved Particle
    Systems*, goes into improving our particle system configuration tool by adding
    particle scaling, rotation, animation, and color transitions. We will modify the
    tool to allow the particle systems to loop, and add a burst effect. We will then
    update our game to support particle systems and add in particle system effects
    for our engine exhaust and explosions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](19f9fa93-3232-4bf7-8af1-85ee6151ba28.xhtml), *AI and Steering
    Behaviors*, introduces the concept of AI and game AI and discusses the difference
    between them. We will discuss the AI concepts of finite state machines, autonomous
    agents, and steering behaviors, and we will implement these behaviors in an enemy
    AI that will avoid obstacles and combat the player.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](208c2dc6-b756-42db-850e-6fcdd63cfce2.xhtml), *Designing a 2D Camera*,
    brings in the concept of 2D camera design. We will begin by adding a render manager
    to our game and creating a camera that locks on to the player''s spaceship, following
    it around an expanded gameplay area. We will then add the advanced 2D camera features
    of projected focus and camera attractors.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](f0e40fe1-21e9-43d0-8c74-1f6a7f7ecebc.xhtml), *Sound FX*, covers
    the use of SDL Audio in our game. We will discuss where we can get our sound effects
    online, and how to include those sounds in our WebAssembly module. We will then
    add sound effects to our game.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](1ee163bb-1087-4fcc-a616-a17817b5a2d1.xhtml), *Game Physics*, introduces
    the concept of physics in computer games. We will be adding elastic collisions
    between our game objects. We will add Newton''s third law to the physics of our
    game in the form of recoil when the spaceships launch projectiles. We will add
    a gravitational field to our star that will attract the spaceships.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](b143872d-3823-480d-bf78-a9ef199fcc0d.xhtml), *UI and Mouse Input*,
    discusses adding a user interface to be managed and rendered within our WebAssembly
    module. We will gather requirements and translate them into new screens for our
    game. We will add a new button object and learn how we can manage mouse input
    from within our WebAssembly module using SDL.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](20e16740-764f-4596-aeb6-1a8be0b1cc7c.xhtml), *Shaders and 2D lighting*,
    dives into how to create a new app that mixes OpenGL and SDL. We will create a
    new shader that loads and renders multiple textures to a quad. We will learn about
    normal maps, and how we can use normal maps to approximate the Phong lighting
    model in 2D, using OpenGL in our WebAssembly module.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 16](3cc385dd-db58-4fed-81ed-7c57bbabd4fb.xhtml), *Debugging and Optimization*,
    introduces the basic methods for debugging and optimizing WebAssembly modules.
    We will start with debug macros and stack traces from WebAssembly. We will introduce
    the concepts of source maps and how web browsers use them to debug WebAssembly
    modules. We will learn about optimizing WebAssembly code using optimization flags.
    We will discuss using a profiler to optimize our WebAssembly code.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You must understand the basics of computer programming.
  prefs: []
  type: TYPE_NORMAL
- en: It is helpful to have a basic understanding of web technologies such as HTML
    and CSS.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can download the code bundle for this book from here: [https://github.com/PacktPublishing/Hands-On-Game-Development-with-WebAssembly](https://github.com/PacktPublishing/Hands-On-Game-Development-with-WebAssembly).'
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/9781838644659_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/9781838644659_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [**https://github.com/PacktPublishing/Hands-On-Game-Development-with-WebAssembly**](https://github.com/PacktPublishing/Hands-On-Game-Development-with-WebAssembly).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "We are going to copy the `basic_particle_shell.html` file
    to a new shell file that we will call `advanced_particle_shell.html`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packt.com/submit-errata](http://www.packt.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in, and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
