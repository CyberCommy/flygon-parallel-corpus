- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Java is a very popular language, featuring in a high number of IT job offers
    across a wide range of fields and industries. Since Java empowers billions of
    devices all over the world, it's become a very appealing technology to learn.
    However, learning Java is one thing; starting to develop a career in the Java
    field is something else. This book is dedicated to people who want to develop
    a Java career and want to ace Java-centric interviews.
  prefs: []
  type: TYPE_NORMAL
- en: 'With this book, you''ll learn how to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Solve the 220+ most popular Java coding interview problems in a contretemps
    fashion encountered in a wide range of companies, including top firms such as
    Google, Amazon, Microsoft, Adobe, and Flipkart.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collect the best techniques for solving a wide range of Java coding problems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tackle brain-teasing algorithms meant to develop strong and fast logic abilities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iterate the common non-technical interview questions that can make the difference
    between success and failure.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get an overall picture of what employers want from a Java developer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this book, you will have a solid informational foundation for
    solving Java coding interview problems. The knowledge achieved from this book
    will give you high confidence in yourself to obtain your Java-centric dream job.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*The Complete Coding Interview Guide in Java* is a comprehensive resource for
    those who are looking for a Java developer (or related) job and need to tackle
    coding problems in a contretemps fashion. It is especially dedicated to entry-
    and middle-level candidates.'
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B15403_01_Final_JM_ePub.xhtml#_idTextAnchor017), *Where to Start
    and How to Prepare for the Interview,* is a comprehensive guide that tackles the
    preparation process for a Java interview from zero to hire. More precisely, we
    want to highlight the main checkpoints that can ensure a smooth and successful
    career path ahead.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B15403_02_Final_JM_ePub.xhtml#_idTextAnchor040), *What Interviews
    at Big Companies Look Like,* talks about how interviews are conducted in the main
    Big Tech firms of Google, Amazon, Microsoft, Facebook, and Crossover.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B15403_03_Final_JM_ePub.xhtml#_idTextAnchor048), *Common Non-Technical
    Questions and How To Answer Them,* tackles the main aspects of the non-technical
    questions. This part of the interview is commonly carried out by a hiring manager
    or even an HR person.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B15403_04_Final_JM_ePub.xhtml#_idTextAnchor062), *How to Handle
    Failures,* discusses a delicate aspect of the interview – handling failures. The
    main purpose of this chapter is to show you how to identify the causes of failure
    and how to mitigate them in the future.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B15403_05_Final_JM_ePub.xhtml#_idTextAnchor072), *How to Approach
    a Coding Challenge,* covers the technical quizzes and coding challenge topics
    that are commonly referred to as the technical interview.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B15403_06_Final_JM_ePub.xhtml#_idTextAnchor080), *Object-Oriented
    Programming,* explains the most popular questions and problems concerning object-oriented
    programming encountered at Java interviews, including the SOLID principles and
    coding challenges such as Jukebox, Parking Lot, and Hash Table.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B15403_07_Final_JM_ePub.xhtml#_idTextAnchor135), *Big O Analysis
    of Algorithms,* provides the most popular metric for analyzing the efficiency
    and scalability of algorithms, the Big O notation, in the context of a technical
    interview.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B15403_08_Final_JM_ePub.xhtml#_idTextAnchor161), *Recursion and
    Dynamic Programming,* covers one of the favorite topics of interviewers – recursion
    and Dynamic Programming. Both of these topics work hand in hand with each other,
    so you have to be able to cover both.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B15403_09_Final_JM_ePub.xhtml#_idTextAnchor181), *Bit Manipulation,*
    explains the most important aspects of bit manipulation that you should know in
    a technical interview. Such problems are often encountered in interviews and they
    are not easy. In this chapter, you have 25 such coding challenges.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B15403_10_Final_JM_ePub.xhtml#_idTextAnchor217), *Arrays and
    Strings,* covers 29 popular problems involving strings and arrays.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B15403_11_Final_JM_ePub.xhtml#_idTextAnchor252), *Linked Lists
    and Maps,* teaches you the 17 most famous coding challenges that involve maps
    and linked lists encountered in interviews.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B15403_12_Final_JM_ePub.xhtml#_idTextAnchor276), *Stacks and
    Queues,* explains the 11 most popular interview coding challenges involving stacks
    and queues. Mainly, you have to learn how to provide a stack/queue implementation
    from scratch and how to tackle coding challenges via the Java built-in implementations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B15403_13_Final_JM_ePub.xhtml#_idTextAnchor295), *Trees and
    Graphs,* covers one of the most tricky topics in interviews – trees and graphs.
    While there are tons of problems related to these two topics, only a handful of
    them are actually encountered in interviews. It is therefore very important to
    give a high priority to the most popular problems concerning trees and graphs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B15403_14_Final_JM_ePub.xhtml#_idTextAnchor340), *Sorting and
    Searching,* covers the most popular sorting and searching algorithms encountered
    in technical interviews. We will cover sorting algorithms such as Merge Sort,
    Quick Sort, Radix Sort, Heap Sort, and Bucket Sort, and searching algorithms such
    as Binary Search. By the end of this chapter, you should be able to tackle a wide
    range of problems that involve sorting and searching algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B15403_15_Final_JM_ePub.xhtml#_idTextAnchor371), *Mathematics
    and Puzzles,* talks about a controversial topic in interviews: mathematics and
    puzzle problems. A significant number of companies consider that these kinds of
    problems should not be part of a technical interview, while other companies still
    regard this topic as relevant for interviews.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 16*](B15403_16_Final_JM_ePub.xhtml#_idTextAnchor396), *Concurrency,*
    covers the most popular questions about Java concurrency (multithreading) that
    occur in general interviews involving the Java language.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 17*](B15403_17_Final_JM_ePub.xhtml#_idTextAnchor414), *Functional-Style
    Programming,* examines the most popular questions about Java functional-style
    programming. We cover key concepts, lambdas, and streams.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 18*](B15403_18_Final_JM_ePub.xhtml#_idTextAnchor441), *Unit Testing,*
    talks about unit-testing interview problems that you may encounter if you apply
    for a position such as a developer or software engineer. Of course, if you are
    looking for a tester (manual/automation) position, then this chapter may represent
    just another perspective on testing. Therefore, do not expect to see questions
    here specific to manual/automation tester positions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 19*](B15403_19_Final_JM_ePub.xhtml#_idTextAnchor462), *System Scalability,*
    provides the widest range of scalability interview questions you may be asked
    during a junior/middle-level interview for a position such as a web application
    software architect, Java architect, or software engineer.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All you need is Java (preferably Java 8+) and your favorite IDE (NetBeans, IntelliJ
    IDEA, Eclipse, and so on).
  prefs: []
  type: TYPE_NORMAL
- en: I also strongly recommend that readers consult the *Java Coding Problems* book,
    also from Packt, to improve your skills further.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com.](http://www.packt.com.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Support** tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/The-Complete-Coding-Interview-Guide-in-Java](https://github.com/PacktPublishing/The-Complete-Coding-Interview-Guide-in-Java).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://static.packt-cdn.com/downloads/9781839212062_ColorImages.pdf](_ColorImages.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: ''The `Triangle``, Rectangle, and Circle` classes
    implement the `Shape` interface and override the `draw()` method to draw the corresponding
    shape."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "However, this approach does not work for the third case,
    339809 (10100**101111011**00001)."'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '`customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '`copyright@packt.com` with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in, and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  prefs: []
  type: TYPE_NORMAL
