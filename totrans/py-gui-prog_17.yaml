- en: Understanding Layouts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will focus on the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Using Horizontal Layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Vertical Layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Grid Layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Form Layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding layouts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As the name suggest, layouts are used for arranging widgets in the desired
    format. On arranging certain widgets in a layout, certain size and alignment constraints
    are applied to the widgets automatically. For example, on increasing the size
    of the window, the widgets in the layout also increase in size to use up the increased
    space. Similarly, on reducing the size of the window, the widgets in the layout
    also decrease in size. The following question arises: how does the layout know
    what the recommended size of the widget is?'
  prefs: []
  type: TYPE_NORMAL
- en: Basically, each widget has a property called sizeHint that contains the widget's
    recommended size. When the window is resized and the layout size also changes,
    it is through the sizeHint property of the widget that the layout managers know
    the size requirement of the widget.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to apply the size constraints on the widgets, you can make use of
    the following two properties:'
  prefs: []
  type: TYPE_NORMAL
- en: 'minimumSize: If the window size is decreased, the widget will still not become
    smaller than the size specified in the minimumSize property.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'maximumSize: Similarly, if the window is increased, the widget will not become
    larger than the size specified in the maximumSize property.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When the preceding properties are set, the value specified in the sizeHint property
    will be overridden.
  prefs: []
  type: TYPE_NORMAL
- en: To arrange widgets in a layout, simply select all the widgets with *Ctrl* +
    left-click and click Layout Manager on the toolbar. Another way is to right-click
    to open the context menu. From the context menu, you can select the Layout menu
    option, followed by selecting the desired layout from the submenu that pops up.
  prefs: []
  type: TYPE_NORMAL
- en: On selecting the desired layout, the widgets will be laid out in the selected
    layout, and the layout will be indicated by a red line around the widgets that
    is not visible at runtime. To see whether the widgets are properly laid out, you
    can preview the form by selecting Form, Preview, or *Ctrl* + *R*. To break the
    layout, select Form, Break Layout, enter *Ctrl* + *O*, or select the Break Layout
    icon from the toolbar.
  prefs: []
  type: TYPE_NORMAL
- en: The layouts can be nested.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are layout managers provided by Qt Designer:'
  prefs: []
  type: TYPE_NORMAL
- en: Horizontal Layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vertical Layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grid Layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Form Layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spacers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to control spacing between widgets, horizontal and vertical spacers
    are used. When a horizontal spacer is kept between the two widgets, the two widgets
    will be pushed as far left and right as possible. If the window size is increased,
    the widget sizes will not change and the extra space will be consumed by the spacer.
    Similarly, when the window size is decreased, the spacer will automatically reduce
    but the widget sizes will not be changed.
  prefs: []
  type: TYPE_NORMAL
- en: Spacers expand to fill empty space and shrink if the space is decreased.
  prefs: []
  type: TYPE_NORMAL
- en: Let's look at the procedure for arranging widgets in a horizontal box layout.
  prefs: []
  type: TYPE_NORMAL
- en: Using Horizontal Layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A horizontal layout arranges widgets next to each other in a row that is, widgets
    are horizontally aligned using Horizontal Layout. Let's understand this concept
    by making an application.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this application, we will prompt the user to enter an email address and
    password. The main focus of this recipe is to understand how two pairs of the
    Label and Line Edit widgets are horizontally aligned. Here is the step-by-step
    procedure to create this application:'
  prefs: []
  type: TYPE_NORMAL
- en: Let's create an application based on the Dialog without Buttons template and
    add two `QLabel`, two `QlineEdit`, and one `QPushButton` widget to the form by
    dragging and dropping two Label, two Line Edit, and a Push Button widget on the
    form.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the text property of the two Label widgets to `Name` and `Email Address`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Also, set the text property of the Push Button widget to `Submit`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As the purpose of this application is to understand the layout and nothing else,
    we won't be setting the objectName property of any of the widgets in the application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The form will now appear as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a58fadae-ef2c-4415-b9f1-a50a23a0f840.png)'
  prefs: []
  type: TYPE_IMG
- en: We will be applying Horizontal Layout on each pair of Label and Line Edit widgets. So,
    click on the Label widget with the text, `Name`, and, keeping the *Ctrl* key pressed,
    click on the Line Edit widget besides it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can select more than one widget by using *Ctrl* + left-click.
  prefs: []
  type: TYPE_NORMAL
- en: After selecting the Label and Line Edit widgets, right-click and select the
    Layout menu option from the context menu that opens up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On selecting the Layout menu option, several submenu options will appear on
    the screen; select the Layout Horizontally submenu option. Both the Label and
    Line Edit widgets will be aligned horizontally, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/bdc1cac6-e00f-4061-8483-08bdba5442ce.png)'
  prefs: []
  type: TYPE_IMG
- en: 'What if you want to break the layout? This is very simple: you can break any
    layout at any time by just selecting the layout and right-clicking on it. The
    context menu will pop up; select the Layout menu option from the context menu,
    followed by the Break Layout submenu option.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To horizontally align the second pair of Label widgets with the text, `Email
    Address`, and the Line Edit widget beside it, repeat the same procedure as mentioned
    in steps 6 and 7\. This pair of Label and Line Edit widgets will also be horizontally
    aligned, as shown in the following screenshot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can see that a red rectangle surrounds the two widgets. This red rectangle
    is the horizontal layout window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/4539ec46-5518-4979-b6a9-5fd9edd6ecf3.png)'
  prefs: []
  type: TYPE_IMG
- en: To create some space between the first pair of Label and Line Edit widgets,
    drag the Horizontal Spacer widget from the Spacers tab of Widget Box and drop
    it in between the Label widget with the text, `Name`, and the Line Edit widget
    beside it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Horizontal Spacer widget initially takes up the default space between the
    two widgets. The spacers appear as blue springs on the form.
  prefs: []
  type: TYPE_NORMAL
- en: 'Adjust the size of the horizontal spacer by dragging its nodes to constrain
    the width of the Line Edit widget, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/76bf6cf9-c68b-43bd-8db9-9931a47f0906.png)'
  prefs: []
  type: TYPE_IMG
- en: Select the red rectangle of the Horizontal Layout widget from the first pair
    of Label and Line Edit widgets, and drag it to the right so that its width becomes
    equal to the second pair.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On dragging the Horizontal Layout widget, the horizontal spacer will increase
    its width to consume the extra blank space between the two widgets, as shown in
    the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/8404860e-69fe-4ea9-a15a-d36755fb2ef8.png)'
  prefs: []
  type: TYPE_IMG
- en: Save the application as `demoHorizontalLayout.ui`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The user interface created with Qt Designer is stored in a `.ui` file, which
    is an XML file, and we need to convert it to Python code. To do the conversion,
    you need to open a Command Prompt window and navigate to the folder where the
    file is saved, then issue the following command line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The Python script file `demoHorizontalLayout.py` may have the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can see in the code that a Line Edit widget with the default objectName
    property, `lineEdit`, and a Label widget with the default objectName property
    as **label** are placed on the form. Both the Line Edit and Label widgets are
    horizontally aligned using the Horizontal Layout widget. The  Horizontal Layout
    widget has the default objectName property, `horizontalLayout`. On aligning the
    Label and Line Edit widgets, the horizontal space between the two widgets is reduced.
    So, a spacer is kept between the Label and Line Edit widgets. The second pair,
    Label with the default objectName property `label_2` and the Line Edit widget
    with the default objectName property `lineEdit_2`, are horizontally aligned by
    Horizontal Layout with the default objectName property, `horizontalLayout_2`.
  prefs: []
  type: TYPE_NORMAL
- en: 'On running the application, you will find that the two pairs of Label and Line
    Edit widgets are horizontally aligned, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/0e8766db-b9a9-4dde-ab8e-fb23c08ebe42.png)'
  prefs: []
  type: TYPE_IMG
- en: Using Vertical Layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vertical Layout arranges the selected widgets vertically, in a column one below
    the other. In the following application, you will learn the process of laying
    widgets in a vertical layout.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this application, we will prompt the user to enter a name and email address.
    The labels and textboxes for entering names and email addresses, along with the
    submit button, will be arranged vertically one below the other via Vertical Layout.
    Here are the steps to create the application:'
  prefs: []
  type: TYPE_NORMAL
- en: Launch Qt Designer and create an application based on the Dialog without Buttons
    template, then add two `QLabel`, two `QlineEdit`, and one `QPushButton` widget
    to the form by dragging and dropping two Label, two Line Edit, and one Push Button
    widget onto the form.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the text property of the two Label widgets to `Name` and `Email Address`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Set the text property of the Push Button widget to `Submit`. Because the purpose
    of this application is to understand the layout and nothing else, we won''t be
    setting the objectName property of any of the widgets in the application. The
    form will now appear as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/6eb17343-a136-4675-af5d-5c062e558a71.png)'
  prefs: []
  type: TYPE_IMG
- en: Before the application of Vertical Layout on the widgets, we need to align the
    widgets horizontally. So, we will apply the Horizontal Layout widget on each pair
    of Label and Line Edit widgets. So, click the Label widget with the text `Name`
    and, keeping the *Ctrl* key pressed, click on the Line Edit widget besides it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After selecting the Label and Line Edit widgets, right-click the mouse button
    and select the Layout menu option from the context menu that opens up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On selecting the Layout menu option, several submenu options will appear on
    the screen. Select the Layout Horizontally submenu option. Both the Label and
    Line Edit widgets will be aligned horizontally.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To horizontally align the second pair of Label with the text, `Email Address`,
    and the Line Edit widget beside it, repeat the same procedure as mentioned in
    the previous steps, 5 and 6\. You can see that a red rectangle surrounds the two
    widgets. This red rectangle is the horizontal layout window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To create some space between the first pair of Label and Line Edit widgets,
    drag the Horizontal Spacer widget from the Spacers tab of Widget Box and drop
    it in between the Label widget with the text, `Name`, and the Line Edit widget
    besides it. The horizontal spacer will initially take up the default space between
    the two widgets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the red rectangle of the Horizontal Layout widget from the first pair
    of Label and Line Edit widgets, and drag it to the right so that its width becomes
    equal to the second pair.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On dragging the Horizontal Layout widget, the horizontal spacer will increase
    its width to consume the extra blank space between the two widgets, as shown in
    the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/6a7bfcbd-9828-44f9-a489-35a95e46eb8d.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, select three things: the first Horizontal Layout window, the second Horizontal
    Layout window, and the Submit button. Keep the *Ctrl* key pressed during these
    multiple selections.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once these three things are selected, right-click to open the context menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'From the context menu, select the Layout menu option, followed by the Layout
    Vertically submenu option. The three items will be aligned vertically, and the
    width of the Submit button will be increased to match the width of the widest
    layout, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/2331a0a3-0d14-4fb3-bc0f-647a0926d26d.png)'
  prefs: []
  type: TYPE_IMG
- en: You can also select the Layout Vertically icon from the toolbar to arrange the
    widgets in a vertical layout.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you want to control the width of the Submit button, you can use the minimumSize
    and maximumSize properties of this widget. You will notice that the vertical space
    between the two horizontal layouts is greatly reduced.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To create some space between the two horizontal layouts, drag the Vertical Spacer
    widget from the Spacers tab of Widget Box and drop it in between the two horizontal
    layouts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The vertical spacer will initially take up the default space between the two
    horizontal layouts
  prefs: []
  type: TYPE_NORMAL
- en: To create vertical space between the second horizontal layout and the Submit
    button, drag the vertical spacer and drop it between the second horizontal layout
    and the Submit button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the red rectangle of Vertical Layout and drag it down to increase its
    height.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On dragging the Vertical Layout widget, the vertical spacer will increase its
    height to consume the extra blank space between the two horizontal layouts and
    the Submit button, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/205ffd7b-a853-4a5e-a6b2-ee5ecd78cc3a.png)'
  prefs: []
  type: TYPE_IMG
- en: Save the application as `demoverticalLayout.ui`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As we know that the user interface created with Qt Designer is stored in a
    `.ui` file, which is an XML file, it needs to be converted into Python code. To
    do the conversion, you need to open a Command Prompt window and navigate to the
    folder where the file is saved, then issue the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The Python script file, `demoverticalLayout.py`, may have the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can see in the code that a Line Edit widget with the default objectName
    `lineEdit` property and the Label widget with the default objectName `label` property
    are placed on the form and are horizontally aligned using the horizontal layout
    with the default objectName property, `horizontalLayout`. On aligning the Label
    and Line Edit widgets, the horizontal space between the two widgets is reduced.
    So, a spacer is kept between the Label and Line Edit widgets. The second pair,
    the Label widget with the default objectName `label_2` property and the Line Edit
    widget with the default objectName `lineEdit_2` property, are horizontally aligned
    using the horizontal layout with the default objectName `horizontalLayout_2` property.
    Then, the first two horizontal layouts and the Submit button with the default
    objectName `pushButton` property are vertically aligned using the Vertical Layout
    widget with the default `objectName` property, `verticalLayout`. The horizontal
    space between the first pair of Label and Line Edit widgets is increased by placing
    a horizontal spacer between them. Similarly, the vertical space between the two
    horizontal layouts is increased by placing a vertical spacer called `spacerItem1`
    between them. Also, a vertical spacer called `spacerItem2` is placed between the
    second horizontal layout and the Submit button to increase the vertical space
    between them.
  prefs: []
  type: TYPE_NORMAL
- en: 'On running the application, you will find that the two pairs of Label and Line
    Edit widgets, and the Submit button, are vertically aligned, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/dd0b7f67-3b15-4336-b924-46487100a488.png)'
  prefs: []
  type: TYPE_IMG
- en: Using Grid Layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Grid Layout arranges widgets in a stretchable grid. To understand how the Gird
    Layout widget arranges the widgets, let's create an application.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this application, we will make a simple sign-in form, prompting the user
    to enter an email address and password, followed by clicking the Submit button.
    Below the Submit button, there will be two buttons, Cancel and Forgot Password.
    The application will help you understand how these widgets are arranged in a grid
    pattern. Following are the steps to create this application:'
  prefs: []
  type: TYPE_NORMAL
- en: Launch Qt Designer and create an application based on the Dialog without Buttons
    template, then add two `QLabel`, two `QlineEdit`, and three `QPushButton` widgets
    to the form by dragging and dropping two Label, two Line Edit, and three Push
    Button widgets on the form.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the text property of the two Label widgets to `Name` and `Email Address`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the text property of the three Push Button widgets to `Submit`, `Cancel`,
    and `Forgot Password`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Because the purpose of this application is to understand the layout and nothing
    else, we won't be setting the objectName property of any of the widgets in the
    application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To increase the vertical space between the two Line Edit widgets, drag the Vertical
    Spacer widget from the Spacers tab of Widget Box and drop it in between the two
    Line Edit widgets. The vertical spacer will initially take up the blank space
    between the two Line Edit widgets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To create vertical space between the second Line Edit widget and the Submit
    button, drag the Vertical Spacer widget and drop it between them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The application will appear as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/756be524-e34c-4be9-a03c-da094cecfe9a.png)'
  prefs: []
  type: TYPE_IMG
- en: Select all the widgets on the form by pressing the *Ctrl* key and clicking all
    the widgets on the form.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After selecting all the widgets, right-click the mouse button to open the context
    menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the context menu, select the Layout menu option, followed by selecting
    the Layout in a Grid submenu option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The widgets will be aligned in the grid as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/cf4b1ac4-bbd7-4c78-b5c9-e7af16062762.png)'
  prefs: []
  type: TYPE_IMG
- en: To increase the vertical space between the Submit and Cancel push buttons, drag
    the Vertical Spacer widget from the Spacers tab of Widget Box and drop it in between
    them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To increase the horizontal space between the Cancel and Forgot Password push
    buttons, drag the Horizontal Spacer widget from the Spacers tab and drop it in
    between them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The form will now appear as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/742b1811-bfea-49f2-a3b3-5aa7e38033f8.png)'
  prefs: []
  type: TYPE_IMG
- en: Save the application by name as `demoGridLayout.ui`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The user interface created with Qt Designer is stored in a `.ui` file, which
    is an XML file, and needs to be converted into Python code. To do the conversion,
    you need to open a Command Prompt window and navigate to the folder where the
    file is saved, then issue the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The Python script file `demoGridLayout.py` may have the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can see in the code that a Line Edit widget with the default objectName
    `lineEdit` property and a Label widget with the default objectName `label` property
    are placed on the form. Similarly, a second pair, a Label widget with the default
    objectName `label_2` property and a Line Edit widget with the default objectName
    `lineEdit_2` property are placed on the form. The vertical space between the two
    pairs of Label and Line Edit widgets is increased by placing a vertical spacer
    called `spacerItem1` between them. A Push Button widget with the text, `Submit`,
    and objectName, `pushButton`, is also placed on the form. Again, the vertical
    space between the second Label with objectName `label_2` and the Push Button widget
    with objectName `pushButton` is increased by placing a vertical spacer called
    `spacerItem2` between them. Two more push buttons with the default objectName
    properties, `pushButton_2` and `pushButton_3`, are placed on the form. All the
    widgets are arranged in a stretchable grid layout with the default object name, `gridLayout`.
    The vertical space between the two push buttons with the object names, `pushButton`
    and `pushButton_2`, is increased by placing a vertical spacer called `spacerItem3`
    between them.
  prefs: []
  type: TYPE_NORMAL
- en: 'On running the application, you will find that the two pairs of Label and Line
    Edit widgets, and the Submit, Cancel, and Forgot Password buttons, are arranged
    in a stretchable grid, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/d581b1d5-be49-44a1-8060-c92f029cd11a.png)'
  prefs: []
  type: TYPE_IMG
- en: Using Form Layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Form Layout is considered to be the most demanding layout in almost all applications.
    This two-column layout is required when displaying products, services, and so
    on, as well as in accepting feedback or other information from users or customers.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The form layout arranges the widgets in a two-column format. Like a sign-up
    form of any site or any order form, where the form is divided into two columns,
    the column on the left shows labels or text and the column on the right shows
    empty textboxes.  Similarly, the form layout arranges the widgets in the left
    and right columns. Let's understand the concept of Form Layout using an application.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this application, we will make two columns, one for displaying messages
    and the other column for accepting input from the user. Besides two pairs of Label
    and Line Edit widgets for taking input from the user, the application will have
    two buttons that will also be arranged in the form layout. Here are the steps
    to create an application that arranges widgets using Form Layout:'
  prefs: []
  type: TYPE_NORMAL
- en: Launch Qt Designer and create an application based on the Dialog without Buttons
    template, then add two `QLabel`, two `QLineEdit`, and two `QPushButton` widgets
    to the form by dragging and dropping two Label, two Line Edit, and two PushButton
    widgets on the form.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the text property of the two Label widgets to `Name` and `Email Address`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the text property of the two Push Button widgets to `Cancel` and `Submit`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Because the purpose of this application is to understand the layout and nothing
    else, we won't be setting the objectName property of any of the widgets in the
    application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The application will appear as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/dc2d8dc1-37b5-43f8-a14a-cd377b5f520a.png)'
  prefs: []
  type: TYPE_IMG
- en: Select all the widgets on the form by pressing the *Ctrl* key and clicking all
    the widgets on the form.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After selecting all the widgets, right-click the mouse button to open the context
    menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the context menu, select the Layout menu option, followed by selecting
    the Layout in a Form Layout submenu option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The widgets will be aligned in the Form Layout widget, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a757b71e-e5ae-4091-a2ac-7a538975ed84.png)'
  prefs: []
  type: TYPE_IMG
- en: To increase the vertical space between the two Line Edit widgets, drag the Vertical
    Spacer widget from the Spacers tab of Widget Box and drop it in between them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To increase the vertical space between the second Line Edit widget and the Submit
    button, drag the Vertical Spacer widget from the Spacers tab and drop it in between
    them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the red rectangle of the Form Layout widget and drag it vertically to
    increase its height. The two vertical spacers will automatically increase in height
    to use the empty space in between the widgets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The form will now appear as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/7558844e-df8a-4249-9389-bfe217334b5f.png)'
  prefs: []
  type: TYPE_IMG
- en: Save the application as `demoFormLayout.ui`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The user interface created with Qt Designer is stored in a `.ui` file, which
    is an XML file, and needs to be converted into Python code. To do the conversion,
    you need to open a Command Prompt window and navigate to the folder where the
    file is saved, then issue the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The Python script file, `demoFormLayout.py`, may have the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can see in the code that a Line Edit widget with the default objectName `lineEdit` property
    and a Label widget with the default objectName `labels` property is placed on
    the form. Similarly, a second pair, a Label widget with the default objectName
    `label_2` property and a Line Edit widget with the default objectName `lineEdit_2` property
    are placed on the form. The two push buttons with the object names, `pushButton`
    and `pushButton_2`, are placed on the form. All six widgets are selected and aligned
    in a two-column format using the Form Layout widget with the default objectName
    `formLayout` property.
  prefs: []
  type: TYPE_NORMAL
- en: 'On running the application, you will find that the two pairs of Label and Line
    Edit widgets, and the Cancel and Submit buttons, are arranged in a Form Layout
    widget as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/d7c6b285-ad2e-4171-8937-c2346b4f9166.png)'
  prefs: []
  type: TYPE_IMG
