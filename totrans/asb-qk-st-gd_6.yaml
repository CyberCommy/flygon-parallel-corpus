- en: Ansible Coding for Configuration Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The main way in which you''ll learn Ansible coding is by writing your own Ansible
    playbooks, either for fun or to solve your own infrastructure challenges. However,
    at a certain point, things may start to get complicated. Your code might be working,
    but how do you know if it is really doing the task in the right way? Is it efficient?
    How scalable will it be? Using meaningful names makes it easier to understand
    your code. Issues may also arise to do with script organization: it is easy to
    end up with a folder filled with several scripts, even if they have nothing to
    do with each other.'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we're going to talk about the standards and best practices
    for writing Ansible playbooks. We are aiming to improve our playbooks by speeding
    up tasks, improving security, providing accommodation for built-in infrastructure
    redundancy systems, optimizing their tasks, and reducing code repetition to produce
    smaller playbooks with the same functionality. Finally, we are going to introduce
    Ansible roles, which are the ultimate task optimization tool in Ansible.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Standards for writing playbooks in Ansible
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Best practices when coding YAML playbooks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Optimizing Ansible tasks and playbooks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ansible roles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Examples with Ansible roles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ansible configuration management coding standards
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we are going to list several rules and methods to help with
    writing nice and clean playbooks in conformity with the Ansible norm. This is
    not a strict instruction to follow, but instead a representation of how Ansible
    developers and maintainers think it should be used. Following these norms does
    not just allow easier usage of playbooks, it also helps make it standard and understandable
    by the community members, therefore enabling better team collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: These standards are based on the experience of Ansible users and maintainers.
    Any individual user may use Ansible differently, in a way that would require a
    different set of rules.
  prefs: []
  type: TYPE_NORMAL
- en: Playbook and task naming
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When making a playbook, using the `name:` field is optional. If you write a
    playbook with no name, it will work perfectly fine. The following is an example
    of a playbook that does not have a name:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This playbook may have an output that looks as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e3e7ca33-b2dc-4a90-9d71-d8f5cf229152.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The playbook has done what we have asked it to do, but the fact that it doesn''t
    have a name may present a problem if we have many tasks in one playbook because
    we won''t be able to monitor the status of each job as easily. Following Ansible''s
    standards, writing a playbook that has a better description of each of its tasks can
    help a lot. The benefits of having a clear description of tasks helps with personal
    or team task monitoring, providing a better explanation of its pipelines for co-workers
    and community users. An example of a more descriptive playbook might look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This way, we get a more descriptive output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e354fd3c-8cbc-4e76-a9c1-9d1ea4e1f642.png)'
  prefs: []
  type: TYPE_IMG
- en: It is up to you to decide what to write and which aspects of the tasks are described,
    as long as it makes sense to the user, either yourself, your team, or the community.
    We recommend simply phrased sentences that explain the tasks briefly.
  prefs: []
  type: TYPE_NORMAL
- en: YAML syntax usage for playbooks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Since playbooks are written in YAML, you have a bit of wiggle room regarding
    what the code looks like when introducing task arguments. Again, although Ansible
    will accept the code and the task will be executed, it is easy to end up with
    long lines of code for an averagely complicated task. This is what a one-line
    Ansible task looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Instead of this, we can follow a neat and more organized YAML structure, by
    adding white spaces in front of each task argument. The playbook should look as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'However, some tasks or commands may have long strings, either the absolute
    path of a file or a long piece of text to be used for a task. Ansible does offer
    a way of organizing tasks with long strings using the `>` character to write a
    single-line string in multiple lines without carrying the returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Ansible offers an option to check the syntax of a playbook to see whether it
    is conforming with YAML syntax. To use this, add the `--syntax-check` option to
    the Ansible command.
  prefs: []
  type: TYPE_NORMAL
- en: The become feature
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Many tasks need to be executed by a specific user, either to access restricted
    resources or to enable user-specific services. Although there are some Shell or
    Powershell commands that allow this, they may produce very long and complicated commands.
    The Ansible `become` or `become_user` feature allows for easier tasks that are
    personalized for each specific user. This feature is considered as a standard
    for Ansible configuration management coding owing to the level of task optimization
    that is offered by Ansible to simplify complicated commands, making this feature
    not just playbook-personalized but also task specific. The following is an example
    of a playbook that uses this feature:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Group organization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Host group organization makes it possible to organize hosts in groups based
    on role, geographical location, or data center location. In a parent and child
    structure, it is possible to set parent group variables and make the child group
    inherit them. To override parent group variables, individual hosts or child groups
    can have their own unique custom variables. This practice is more of an Ansible
    inventory management feature than for playbook coding, yet it is very important
    for multi-architecture configuration management.
  prefs: []
  type: TYPE_NORMAL
- en: As described in previous chapters, host variables can either be defined within
    the inventory or the playbook itself. But it is easier to manage when organized
    within the inventory files as `group_vars` and `hosts_vars`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following example for an inventory file shows how parent and child group
    variables can be defined:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: This is not the only structure that can be used to define groups. The inventory
    file can only hold the structure of the groups, and then each group can have their
    own inventory file that holds their variables. The same rule applies where a child
    variable overrides a parent variable.
  prefs: []
  type: TYPE_NORMAL
- en: Using handlers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ansible recommends using handlers for task pipelining, as handlers are programmed
    tasks that are executed when they are notified. Handlers will be fired for tasks
    which report a changed state. They are often used for service management following
    a configuration change. This ensures fluid configuration management as whenever
    changes happen in the host, the services involved should be restarted to apply
    the change.
  prefs: []
  type: TYPE_NORMAL
- en: 'Ansible also has a feature to enable the mass flushing of handlers in playbooks.
    This feature allows you to control when the changes can be applied by controlling
    the execution of all handlers in a task. Using `meta`, task handlers can be flushed
    from any position in the playbook:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Password usage in playbooks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many tasks require you to input a password to access a database or to use a
    CLI or access a third-party Terminal. It is never advisable to write passwords
    or other sensitive information openly on a playbook. There are multiple ways to
    protect this information. The two most common examples are to store them in another
    protected playbook or to use Ansible Vault.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will mainly cover storing passwords and sensitive variables
    in other, more protected files. Ansible Vault will be covered thoroughly in a
    later chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The idea is to create a playbook that contains several sensitive variables
    and store it in a secure location with restricted permissions. Then, the playbook
    calls for its variable using the `include` option at the play level (where the
    tasks are located):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '####################################'
  prefs: []
  type: TYPE_NORMAL
- en: '#'
  prefs: []
  type: TYPE_NORMAL
- en: This playbook with a goal to achieve number of tasks in a pipeline
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: to configure several Linux hosts for collaborative projects. It starts by
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: setting up the needed tools and services, then configure them to a
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: standard, then prepared the shared space, and assign the users and groups.
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '#'
  prefs: []
  type: TYPE_NORMAL
- en: 'Author: ***** ***** email: *********@****'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '#'
  prefs: []
  type: TYPE_NORMAL
- en: '####################################'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Hosts provisioning playbook'
  prefs: []
  type: TYPE_NORMAL
- en: 'hosts: linuxservers'
  prefs: []
  type: TYPE_NORMAL
- en: 'become: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'remote_user: setup'
  prefs: []
  type: TYPE_NORMAL
- en: 'gather_facts: false'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Install Midnight commander'
  prefs: []
  type: TYPE_NORMAL
- en: This is a terminal based file manager does not require a GUI interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'apt:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: mc'
  prefs: []
  type: TYPE_NORMAL
- en: …
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '- name: Execute a Windows Write Filter enabling command and identify if it
    made change'
  prefs: []
  type: TYPE_NORMAL
- en: 'win_shell: ewfm.exe -conf enable'
  prefs: []
  type: TYPE_NORMAL
- en: 'register: output'
  prefs: []
  type: TYPE_NORMAL
- en: 'changed_when: "output.stdout == ''Awaiting for next boot to apply the change.''"'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '---- name: Install python development package on Linux hosts'
  prefs: []
  type: TYPE_NORMAL
- en: 'hosts: linuxservers'
  prefs: []
  type: TYPE_NORMAL
- en: 'become: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'remote_user: setup'
  prefs: []
  type: TYPE_NORMAL
- en: 'gather_facts: true'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: install python development on Debian systems'
  prefs: []
  type: TYPE_NORMAL
- en: 'apt:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: python-dev'
  prefs: []
  type: TYPE_NORMAL
- en: 'when: ansible_os_family == "Debian"'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: install python development on Red Hat systems'
  prefs: []
  type: TYPE_NORMAL
- en: 'yum:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: python-devel'
  prefs: []
  type: TYPE_NORMAL
- en: 'when: ansible_os_family == "RedHat"'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Copy users config files to their project directory'
  prefs: []
  type: TYPE_NORMAL
- en: 'hosts: linuxservers'
  prefs: []
  type: TYPE_NORMAL
- en: 'become: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'remote_user: setup'
  prefs: []
  type: TYPE_NORMAL
- en: 'gather_facts: true'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Copy user config files'
  prefs: []
  type: TYPE_NORMAL
- en: 'copy:'
  prefs: []
  type: TYPE_NORMAL
- en: 'src: ''{{ item.src }}'''
  prefs: []
  type: TYPE_NORMAL
- en: 'dest: ''{{ item.dest }}'''
  prefs: []
  type: TYPE_NORMAL
- en: 'mode: ''{{ item.mode | default("0744") }}'''
  prefs: []
  type: TYPE_NORMAL
- en: 'owner: ''{{ item.owner | default("nobody") }}'''
  prefs: []
  type: TYPE_NORMAL
- en: 'when_items:'
  prefs: []
  type: TYPE_NORMAL
- en: '- { src: "/media/share/config/user1.conf",'
  prefs: []
  type: TYPE_NORMAL
- en: 'dest: "/usr/local/projetsfolder/user1",'
  prefs: []
  type: TYPE_NORMAL
- en: 'mode: "0774", owner: "user1" }}'
  prefs: []
  type: TYPE_NORMAL
- en: '- { src: "/media/share/config/user2.conf",'
  prefs: []
  type: TYPE_NORMAL
- en: 'dest: "/usr/local/projetsfolder/user2",'
  prefs: []
  type: TYPE_NORMAL
- en: 'mode: "0700", owner: "user2" }}'
  prefs: []
  type: TYPE_NORMAL
- en: '- { src: "/media/share/samples/users.conf",'
  prefs: []
  type: TYPE_NORMAL
- en: 'dest: "/usr/local/projetsfolder/", mode: "0777" }}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'db.conf.j2:'
  prefs: []
  type: TYPE_NORMAL
- en: mysql_db_hosts = '{{ db_serv_hostname }}'
  prefs: []
  type: TYPE_NORMAL
- en: mysql_db_name = '{{ db_name }}'
  prefs: []
  type: TYPE_NORMAL
- en: mysql_db_user = '{{ db_username }}'
  prefs: []
  type: TYPE_NORMAL
- en: mysql_db_pass = '{{ db_password }}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Copy Database configuration file'
  prefs: []
  type: TYPE_NORMAL
- en: 'hosts: linux    servers'
  prefs: []
  type: TYPE_NORMAL
- en: 'become: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'remote_user: setup'
  prefs: []
  type: TYPE_NORMAL
- en: 'gather_facts: true'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Import variable from an other YAML'
  prefs: []
  type: TYPE_NORMAL
- en: 'include_vars: /home/admin/variables/database2.yml'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Copy db config file'
  prefs: []
  type: TYPE_NORMAL
- en: 'template:'
  prefs: []
  type: TYPE_NORMAL
- en: 'src: /home/admin/template/db.conf.j2'
  prefs: []
  type: TYPE_NORMAL
- en: 'dest: /etc/mysql/db.conf'
  prefs: []
  type: TYPE_NORMAL
- en: 'owner: bin'
  prefs: []
  type: TYPE_NORMAL
- en: 'group: wheel'
  prefs: []
  type: TYPE_NORMAL
- en: 'mode: 0600'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: create a new file'
  prefs: []
  type: TYPE_NORMAL
- en: 'file:'
  prefs: []
  type: TYPE_NORMAL
- en: 'path: /usr/local/projects/vars.txt'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: removing line to a file'
  prefs: []
  type: TYPE_NORMAL
- en: 'lineinfile:'
  prefs: []
  type: TYPE_NORMAL
- en: 'path: /usr/local/projects/conf.txt'
  prefs: []
  type: TYPE_NORMAL
- en: 'line: "adminuser = user0"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: absent'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Copy a tool archive to remote host'
  prefs: []
  type: TYPE_NORMAL
- en: 'copy:'
  prefs: []
  type: TYPE_NORMAL
- en: 'src: /media/nfshsare/Tools/tool1.tar.gz'
  prefs: []
  type: TYPE_NORMAL
- en: 'dest: /usr/local/tools/'
  prefs: []
  type: TYPE_NORMAL
- en: 'mode: 0755'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'tasks/main.yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: check if NTP is installed'
  prefs: []
  type: TYPE_NORMAL
- en: 'stat:'
  prefs: []
  type: TYPE_NORMAL
- en: 'path: /etc/init.d/ntpd'
  prefs: []
  type: TYPE_NORMAL
- en: 'register: tool_status'
  prefs: []
  type: TYPE_NORMAL
- en: '- include_tasks: debian.yml'
  prefs: []
  type: TYPE_NORMAL
- en: 'when: tool_status.stat.exists'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Copy the NTP config to remote host'
  prefs: []
  type: TYPE_NORMAL
- en: 'template:'
  prefs: []
  type: TYPE_NORMAL
- en: 'src: /template/ntp.conf.j2'
  prefs: []
  type: TYPE_NORMAL
- en: 'dest: /etc/ntpd/ntpd.conf'
  prefs: []
  type: TYPE_NORMAL
- en: 'mode: 0400'
  prefs: []
  type: TYPE_NORMAL
- en: 'notify:'
  prefs: []
  type: TYPE_NORMAL
- en: '- Restart ntp'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks/debian.yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Copy a NTP config to remote host'
  prefs: []
  type: TYPE_NORMAL
- en: 'apt:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: ntp'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: latest'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'handlers/main.yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Restart ntp'
  prefs: []
  type: TYPE_NORMAL
- en: 'service:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: ntp'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: restarted'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'vars/main.yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: 'ntpserv1: 0.uk.pool.ntp.org'
  prefs: []
  type: TYPE_NORMAL
- en: 'ntpserv2: 1.uk.pool.ntp.org'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'template/ntp.conf.j2:'
  prefs: []
  type: TYPE_NORMAL
- en: driftfile /var/lib/ntp/ntp.drift
  prefs: []
  type: TYPE_NORMAL
- en: filegen loopstats file loopstats type day enable
  prefs: []
  type: TYPE_NORMAL
- en: filegen peerstats file peerstats type day enable
  prefs: []
  type: TYPE_NORMAL
- en: filegen clockstats file clockstats type day enable
  prefs: []
  type: TYPE_NORMAL
- en: loop {{ ntpserv1 }}
  prefs: []
  type: TYPE_NORMAL
- en: loop {{ ntpserv2 }}
  prefs: []
  type: TYPE_NORMAL
- en: pool ntp.ubuntu.com
  prefs: []
  type: TYPE_NORMAL
- en: restrict -4 default kod notrap nomodify nopeer noquery limited
  prefs: []
  type: TYPE_NORMAL
- en: restrict -6 default kod notrap nomodify nopeer noquery limited
  prefs: []
  type: TYPE_NORMAL
- en: restrict 127.0.0.1
  prefs: []
  type: TYPE_NORMAL
- en: restrict ::1
  prefs: []
  type: TYPE_NORMAL
- en: restrict source notrap nomodify noquery
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: cd ~/Roles/
  prefs: []
  type: TYPE_NORMAL
- en: ansible-galaxy init samba.lab.edu
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '- samba.lab.edu was created successfully'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: samba.lab.edu
  prefs: []
  type: TYPE_NORMAL
- en: └── README.md
  prefs: []
  type: TYPE_NORMAL
- en: ├── defaults
  prefs: []
  type: TYPE_NORMAL
- en: │ └── main.yml
  prefs: []
  type: TYPE_NORMAL
- en: ├── files
  prefs: []
  type: TYPE_NORMAL
- en: │
  prefs: []
  type: TYPE_NORMAL
- en: ├── handlers
  prefs: []
  type: TYPE_NORMAL
- en: │ └── main.yml
  prefs: []
  type: TYPE_NORMAL
- en: ├── meta
  prefs: []
  type: TYPE_NORMAL
- en: │ └── main.yml
  prefs: []
  type: TYPE_NORMAL
- en: ├── tasks
  prefs: []
  type: TYPE_NORMAL
- en: │ └── main.yml
  prefs: []
  type: TYPE_NORMAL
- en: ├── templates
  prefs: []
  type: TYPE_NORMAL
- en: │
  prefs: []
  type: TYPE_NORMAL
- en: ├── tests
  prefs: []
  type: TYPE_NORMAL
- en: │ ├── inventory
  prefs: []
  type: TYPE_NORMAL
- en: │ └── test.yml
  prefs: []
  type: TYPE_NORMAL
- en: └── vars
  prefs: []
  type: TYPE_NORMAL
- en: └── main.yml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'template/smb.conf.j2:'
  prefs: []
  type: TYPE_NORMAL
- en: '#========= Global Settings ========='
  prefs: []
  type: TYPE_NORMAL
- en: 'Samba server configuration:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[global]'
  prefs: []
  type: TYPE_NORMAL
- en: 'workgroup = {{ wrk_grp | upper }} ## upper convert any input to uppercase.'
  prefs: []
  type: TYPE_NORMAL
- en: server string = Samba Server %v
  prefs: []
  type: TYPE_NORMAL
- en: netbios name = {{ os_name }}
  prefs: []
  type: TYPE_NORMAL
- en: security = user
  prefs: []
  type: TYPE_NORMAL
- en: map to guest = bad user
  prefs: []
  type: TYPE_NORMAL
- en: dns proxy = no
  prefs: []
  type: TYPE_NORMAL
- en: '#========= Share Definitions ========='
  prefs: []
  type: TYPE_NORMAL
- en: 'Samba shared folder:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[{{ smb_share_name }}]'
  prefs: []
  type: TYPE_NORMAL
- en: path = {{ smb_share_path }}
  prefs: []
  type: TYPE_NORMAL
- en: valid users = @{{ smb_grp }}
  prefs: []
  type: TYPE_NORMAL
- en: guest ok = no
  prefs: []
  type: TYPE_NORMAL
- en: read only = no
  prefs: []
  type: TYPE_NORMAL
- en: browsable =yes
  prefs: []
  type: TYPE_NORMAL
- en: writable = yes
  prefs: []
  type: TYPE_NORMAL
- en: force user = nobody
  prefs: []
  type: TYPE_NORMAL
- en: create mask = {{ add_mod }}
  prefs: []
  type: TYPE_NORMAL
- en: directory mask = {{ dir_mod }}
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'files/Fileserver_rules.txt:'
  prefs: []
  type: TYPE_NORMAL
- en: This shared drive is to be used by designated teams.
  prefs: []
  type: TYPE_NORMAL
- en: Any distractive usage will cause a follow up on the incident.
  prefs: []
  type: TYPE_NORMAL
- en: Please do not change any of your team members folders or delete anything you
    are not assigned to manage.
  prefs: []
  type: TYPE_NORMAL
- en: For any inquiries please contact admin@edu.lab
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: meta/main.yml
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: 'dependencies: []'
  prefs: []
  type: TYPE_NORMAL
- en: 'galaxy_info:'
  prefs: []
  type: TYPE_NORMAL
- en: 'author: medalibi'
  prefs: []
  type: TYPE_NORMAL
- en: 'description: "Samba server setup and configuration on Linux OS (Debian/Red
    Hat)"'
  prefs: []
  type: TYPE_NORMAL
- en: 'license: "license (GPLv3, BSD)"'
  prefs: []
  type: TYPE_NORMAL
- en: 'min_ansible_version: 2.5'
  prefs: []
  type: TYPE_NORMAL
- en: 'platforms:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Debian'
  prefs: []
  type: TYPE_NORMAL
- en: 'versions:'
  prefs: []
  type: TYPE_NORMAL
- en: '- 8'
  prefs: []
  type: TYPE_NORMAL
- en: '- 9'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ubuntu'
  prefs: []
  type: TYPE_NORMAL
- en: 'versions:'
  prefs: []
  type: TYPE_NORMAL
- en: '- 14.04'
  prefs: []
  type: TYPE_NORMAL
- en: '- 16.04'
  prefs: []
  type: TYPE_NORMAL
- en: '- 18.04'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: EL'
  prefs: []
  type: TYPE_NORMAL
- en: 'versions:'
  prefs: []
  type: TYPE_NORMAL
- en: '- 6'
  prefs: []
  type: TYPE_NORMAL
- en: '- 7'
  prefs: []
  type: TYPE_NORMAL
- en: 'galaxy_tags:'
  prefs: []
  type: TYPE_NORMAL
- en: '- system'
  prefs: []
  type: TYPE_NORMAL
- en: '- networking'
  prefs: []
  type: TYPE_NORMAL
- en: '- fileserver'
  prefs: []
  type: TYPE_NORMAL
- en: '- windows'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: vars/main.yml
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: 'debian_smb_pkgs:'
  prefs: []
  type: TYPE_NORMAL
- en: '- samba'
  prefs: []
  type: TYPE_NORMAL
- en: '- samba-client'
  prefs: []
  type: TYPE_NORMAL
- en: '- samba-common'
  prefs: []
  type: TYPE_NORMAL
- en: '- python-glade2'
  prefs: []
  type: TYPE_NORMAL
- en: '- system-config-samba'
  prefs: []
  type: TYPE_NORMAL
- en: 'redhat_smb_pkgs:'
  prefs: []
  type: TYPE_NORMAL
- en: '- samba'
  prefs: []
  type: TYPE_NORMAL
- en: '- samba-client'
  prefs: []
  type: TYPE_NORMAL
- en: '- samba-common'
  prefs: []
  type: TYPE_NORMAL
- en: '- cifs-utils'
  prefs: []
  type: TYPE_NORMAL
- en: 'smb_selinux_pkg:'
  prefs: []
  type: TYPE_NORMAL
- en: '- libsemanage-python'
  prefs: []
  type: TYPE_NORMAL
- en: 'smb_selinux_bln:'
  prefs: []
  type: TYPE_NORMAL
- en: '- samba_enable_home_dirs'
  prefs: []
  type: TYPE_NORMAL
- en: '- samba_export_all_rw'
  prefs: []
  type: TYPE_NORMAL
- en: 'samba_config_path: /etc/samba/smb.conf'
  prefs: []
  type: TYPE_NORMAL
- en: 'debian_smb_services:'
  prefs: []
  type: TYPE_NORMAL
- en: '- smbd'
  prefs: []
  type: TYPE_NORMAL
- en: '- nmbd'
  prefs: []
  type: TYPE_NORMAL
- en: 'redhat_smb_services:'
  prefs: []
  type: TYPE_NORMAL
- en: '- smb'
  prefs: []
  type: TYPE_NORMAL
- en: '- nmb'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'defaults/main.yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: 'wrk_grp: WORKGROUP'
  prefs: []
  type: TYPE_NORMAL
- en: 'os_name: debian'
  prefs: []
  type: TYPE_NORMAL
- en: 'smb_share_name: SharedWorkspace'
  prefs: []
  type: TYPE_NORMAL
- en: 'smb_share_path: /usr/local/share'
  prefs: []
  type: TYPE_NORMAL
- en: 'add_mod: 0700'
  prefs: []
  type: TYPE_NORMAL
- en: 'dir_mod: 0700'
  prefs: []
  type: TYPE_NORMAL
- en: 'smb_grp: smbgrp'
  prefs: []
  type: TYPE_NORMAL
- en: 'smb_user: ''shareduser1'''
  prefs: []
  type: TYPE_NORMAL
- en: 'smb_pass: ''5h@redP@55w0rd'''
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'tasks/Debian_OS.yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Install Samba packages on Debian family Linux'
  prefs: []
  type: TYPE_NORMAL
- en: 'apt:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ item }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: latest'
  prefs: []
  type: TYPE_NORMAL
- en: 'update_cache: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'with_items: "{{ debian_smb_pkgs }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks/RedHat_OS.yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Install Samba packages on Red Hat family Linux'
  prefs: []
  type: TYPE_NORMAL
- en: 'yum:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ item }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: latest'
  prefs: []
  type: TYPE_NORMAL
- en: 'update_cache: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'with_items: "{{ redhat_smb_pkgs }}"'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Install SELinux packages for Red Hat'
  prefs: []
  type: TYPE_NORMAL
- en: 'yum:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ item }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: 'with_items: "{{ smb_selinux_pkg }}"'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Configure Red Hat SELinux Boolean'
  prefs: []
  type: TYPE_NORMAL
- en: 'seboolean:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ item }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: true'
  prefs: []
  type: TYPE_NORMAL
- en: 'persistent: true'
  prefs: []
  type: TYPE_NORMAL
- en: 'with_items: "{{ smb_selinux_bln }}"'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'tasks/main.yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Setup Samba based on host OS'
  prefs: []
  type: TYPE_NORMAL
- en: 'include_tasks: "{{ ansible_os_family }}_OS.yml"'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Create the Samba share access group'
  prefs: []
  type: TYPE_NORMAL
- en: 'group:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ smb_grp }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Create the Samba access user'
  prefs: []
  type: TYPE_NORMAL
- en: 'user:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ smb_user }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'groups: "{{ smb_grp }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'append: yes'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Define the user password within Samba'
  prefs: []
  type: TYPE_NORMAL
- en: 'shell: "(echo {{ smb_pass }}; echo {{ smb_pass }}) |'
  prefs: []
  type: TYPE_NORMAL
- en: smbpasswd -s -a {{ smb_user }}"
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Check that the shared directory exist'
  prefs: []
  type: TYPE_NORMAL
- en: 'stat:'
  prefs: []
  type: TYPE_NORMAL
- en: 'path: "{{ smb_share_path }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'register: share_dir'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Make sure the shared directory is present'
  prefs: []
  type: TYPE_NORMAL
- en: 'file:'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: directory'
  prefs: []
  type: TYPE_NORMAL
- en: 'path: "{{ smb_share_path }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'owner: "{{ smb_user }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'group: "{{ smb_grp }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'mode: ''0777'''
  prefs: []
  type: TYPE_NORMAL
- en: 'recurse: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'when: share_dir.stat.exists == False'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Deploy the Samba configuration file'
  prefs: []
  type: TYPE_NORMAL
- en: 'template:'
  prefs: []
  type: TYPE_NORMAL
- en: 'dest: "{{ samba_config_path }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'src: smb.conf.j2'
  prefs: []
  type: TYPE_NORMAL
- en: 'validate: ''testparm -s %s'''
  prefs: []
  type: TYPE_NORMAL
- en: 'backup: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'notify:'
  prefs: []
  type: TYPE_NORMAL
- en: '- Restart Samba'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Enable and start Samba services on Debian family'
  prefs: []
  type: TYPE_NORMAL
- en: 'service:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ item }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: started'
  prefs: []
  type: TYPE_NORMAL
- en: 'enabled: true'
  prefs: []
  type: TYPE_NORMAL
- en: 'with_items: "{{ debian_smb_services }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'when: ansible_os_family == ''Debian'''
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Enable and start Samba services on RedHat family'
  prefs: []
  type: TYPE_NORMAL
- en: 'service:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ item }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: started'
  prefs: []
  type: TYPE_NORMAL
- en: 'enabled: true'
  prefs: []
  type: TYPE_NORMAL
- en: 'with_items: "{{ redhat_smb_services }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'when: ansible_os_family == ''RedHat'''
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '/handlers/main.yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Restart Samba'
  prefs: []
  type: TYPE_NORMAL
- en: 'service:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ item }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: restarted'
  prefs: []
  type: TYPE_NORMAL
- en: 'with_items: "{{ debian_smb_services }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'when: ansible_os_family == ''Debian'''
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Restart Samba'
  prefs: []
  type: TYPE_NORMAL
- en: 'service:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: "{{ item }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: restarted'
  prefs: []
  type: TYPE_NORMAL
- en: 'with_items: "{{ redhat_smb_services }}"  when: ansible_os_family == ''RedHat'''
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'tests/inventory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[linuxserver]'
  prefs: []
  type: TYPE_NORMAL
- en: node0
  prefs: []
  type: TYPE_NORMAL
- en: node1
  prefs: []
  type: TYPE_NORMAL
- en: node2
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'tests/test,yml:'
  prefs: []
  type: TYPE_NORMAL
- en: '- hosts: linuxserver'
  prefs: []
  type: TYPE_NORMAL
- en: 'remote_user: setup'
  prefs: []
  type: TYPE_NORMAL
- en: 'become: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'roles:'
  prefs: []
  type: TYPE_NORMAL
- en: '- samba.lab.edu'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: ansible-playbook tests/test.yml -i tests/inventory
  prefs: []
  type: TYPE_NORMAL
- en: '```'
  prefs: []
  type: TYPE_NORMAL
- en: The `README.md` file can contain some information about the variable of the
    role to help its users personalize it to their own setup.When building mass roles,
    the best way to test them is to use containers with different base systems.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have listed several handy techniques to optimize configuration
    management coding when using Ansible and other automation tools. We have introduced
    Ansible roles, including how to make them and how to use them. In [Chapter 7](4804bfab-3dde-4977-8928-81ae5d80a764.xhtml),
    *Ansible Galaxy and Community Roles*, we are going to explore community roles
    on Ansible Galaxy. We will download and use the highest-rated ones and show how
    we can add a role on Ansible Galaxy ourselves.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Ansible documentation: [https://docs.ansible.com/ansible/latest](https://docs.ansible.com/ansible/latest)'
  prefs: []
  type: TYPE_NORMAL
