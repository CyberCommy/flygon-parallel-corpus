- en: '*Chapter 10*: kubectl Best Practices and Docker Commands'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we learned about Helm, which is a Kubernetes package
    manager. In this last chapter of our book, we are going to learn about a few `kubectl`
    best practices.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will learn how to use shell aliases to shorten `kubectl`
    commands, and other handy tips for using `kubectl` commands, as well.
  prefs: []
  type: TYPE_NORMAL
- en: We will also check some equivalent commands in Docker for some `kubectl` commands,
    especially the ones that are handy to know for new Kubernetes users who are familiar
    with Docker commands and want to know about similar commands in `kubectl`.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Using shell aliases for kubectl commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Similar Docker commands in kubectl
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using shell aliases for kubectl commands
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Typing `kubectl` with a command every time is both boring and time-consuming.
    You can use `kubectl` command completion in the `Bash` and `Zsh` shells, which
    helps of course, but it is still not as quick as using aliases.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s overview a list of some handy `kubectl` commands and use them with aliases
    that you can put in the `zsh_aliases` or `bash_aliases` files, depending on which
    shell you are using:'
  prefs: []
  type: TYPE_NORMAL
- en: '`k` for `kubectl`—this speaks for itself.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kg` for `kubectl get`—this is useful to get a list of pods, deployments, statefulsets,
    services, nodes, and other details, as shown in the following example command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.1 – kg nodes output'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_10_001.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.1 – kg nodes output
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows a list of available Kubernetes nodes in the cluster
    by running the `$ kg nodes` command.
  prefs: []
  type: TYPE_NORMAL
- en: '`kd` for `kubectl describe`—this is useful to describe pods, deployments, statefulsets,
    services, nodes, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kga` for `kubectl get all`—this shows a list of pods, deployments, statefulsets,
    services, and resources in the currently set namespace. You can also provide the
    `-n` flag to specify the namespace or `-A` to show resources in all namespaces:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.2 – kga output'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_10_002.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.2 – kga output
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows the output of the `kga` alias with the resources
    found in the current namespace.
  prefs: []
  type: TYPE_NORMAL
- en: '`krga` for `kubectl really get all`—this shows the list of all resources including
    secrets, events, and more in the currently set namespace. You can also provide
    the `-n` flag to specify the namespace or `-A` to show all resources from all
    namespaces.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kp` for `kubectl get pods -o wide`—this shows the list of pods in the current
    namespace. The `-o wide` flag shows a given pod''s assigned IP and the node it
    has been scheduled to:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.3 – kgak get pods output'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_10_003.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.3 – kgak get pods output
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows the output of the `k get pods` and `kp` aliases.
  prefs: []
  type: TYPE_NORMAL
- en: '`kap` for `kubectl get pods -A -o wide`—this is a similar alias to `kp`, but
    shows the pods in all namespaces.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ka` for `kubectl apply -f`—you can use this to create/update a deployment:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '`kei` for `kubectl exec -it`—this executes into the running pod''s shell:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.4 – kei output'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_10_004.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.4 – kei output
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows the output of `kei nginx-fcb5d6b64-x4kwg bash
    – bash`.
  prefs: []
  type: TYPE_NORMAL
- en: '`ke` for `kubectl exec`—this executes a command in the running pod:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.5 – ke output'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_10_005.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.5 – ke output
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows the output of `ke nginx-fcb5d6b64-x4kwg bash
    – ls -alh`.
  prefs: []
  type: TYPE_NORMAL
- en: '`ktn` for `watch kubectl top nodes`—use this to watch a node''s resource consumption:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.6 – ktn output'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_10_006.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.6 – ktn output
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows the output of `ktn` with the list of nodes and
    their respective resource usages.
  prefs: []
  type: TYPE_NORMAL
- en: '`ktp` for `watch kubectl top pods`—use this to watch a pod''s resources consumption:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.7 – ktp output'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_10_007.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.7 – ktp output
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows the output of `ktp` with the list of pods and
    their resource usages.
  prefs: []
  type: TYPE_NORMAL
- en: '`kpf` for `kubectl port-forward`—use this to do a port forward for the pod
    so we can access the pod from `localhost`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.8 – kpf output'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_10_008.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.8 – kpf output
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows the output of `kpf` with port forwarding set
    to port `8080`.
  prefs: []
  type: TYPE_NORMAL
- en: '`kl` for `kubectl logs`—this shows the logs of a pod or deployment:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.9 – kl output'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_10_009.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.9 – kl output
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows the output of `kl` with the logs for the `nginx`
    deployment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, you can add the following to your list:'
  prefs: []
  type: TYPE_NORMAL
- en: '`d`: `docker`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kz`: `kustomize`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`h`: `helm`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example snippet of `.zsh_aliases` is shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Using aliases will help you to be more productive by typing a few letters instead
    of a few words. Also, not all commands are easy to remember, so using aliases
    will help to overcome that too.
  prefs: []
  type: TYPE_NORMAL
- en: Similar Docker commands in kubectl
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following is a list of the most useful Docker commands, followed by their
    equivalents in `kubectl`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Getting information is done with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`docker info`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kubectl cluster-info`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Getting version information is done with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`docker version`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kubectl version`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Running a container and exposing its port is done with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`docker run -d --restart=always --name nginx -p 80:80 nginx`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kubectl create deployment --image=nginx nginx`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kubectl expose deployment nginx --port=80 --name=nginx`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Getting container logs is done with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`docker logs --f <container name>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kubectl logs --f <pod name>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Executing into a running container/pod shell is done with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`docker exec –it <container name> /bin/bash`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kubectl exec –it <pod name>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Getting a list of containers/pods is done with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`docker ps –a`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kubectl get pods`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Stopping and removing a container/pod is done with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`docker stop <container name> && docker rm <container name>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kubectl delete deployment <deployment name>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kubectl delete pod <pod name>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have now learned the most useful `kubectl` commands for Docker users, which
    should speed up your learning curve with `kubectl` and will become useful commands
    in your daily work.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this final chapter, we learned some `kubectl` best practices by examining
    how to use aliases to run various commands with `kubectl`, and then saw some equivalents
    for Docker commands in `kubectl`.
  prefs: []
  type: TYPE_NORMAL
- en: Using aliases shortens the time required for typing, and of course, aliases
    are easier to remember instead of some long commands.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this book, we have learned a lot of useful information, such as how
    to install `kubectl`; getting information about the cluster and nodes; installing,
    updating, and debugging an application; working with `kubectl` plugins; and also
    learned about Kustomize and Helm.
  prefs: []
  type: TYPE_NORMAL
- en: I hope the book will help you to master Kubernetes, `kubectl`, and Helm.
  prefs: []
  type: TYPE_NORMAL
