- en: What&#x27;s Wrong with the Network?
  prefs: []
  type: TYPE_NORMAL
- en: We all get furious when there is something wrong with the network. There is
    no fun in this world without being connected to the internet. In this chapter,
    you will learn the basics of Linux networking. You will also learn how to check
    network connectivity between two hosts, and gain a practical understanding of
    how DNS works and much more!
  prefs: []
  type: TYPE_NORMAL
- en: Testing network connectivity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An easy way to check whether you have internet access on your Linux machine
    is by trying to reach any remote host (server) on the internet. This can be done
    by using the `ping` command. In general, the syntax of the `ping` command is as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, to test whether you can reach `google.com`, you can run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The `ping` command sends a packet (unit of data) called an **ICMP echo request**
    to the specified host and waits for the host to send back a packet called an **ICMP
    echo reply** to confirm that it did receive the initial packet. If the host replies
    as we see in our example, then it proves that we were able to reach the host.
    This is like you sending a package to your friend's house and waiting for your
    friend to send you a text to confirm that they received it.
  prefs: []
  type: TYPE_NORMAL
- en: Notice that without any options, the `ping` command keeps sending packets continuously,
    and it won't stop until you hit *Ctrl* + *C*.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the `-c` option to specify the number of packets you want to send
    to a host. For example, to only send three packets to `google.com`, you can run
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If you are not connected to the internet, you will get the following output
    from the `ping` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Listing your network interfaces
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can list the available network interfaces on your system by viewing the
    contents of the `/sys/class/net` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'I have three network interfaces on my system:'
  prefs: []
  type: TYPE_NORMAL
- en: '`eth0`: The Ethernet interface'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`lo`: The loopback interface'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`wlan0`: The Wi-Fi interface'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Notice that, depending on your computer's hardware, you may get different names
    for your network interfaces.
  prefs: []
  type: TYPE_NORMAL
- en: The ip command
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can also use the `ip link show` command to view the available network interfaces
    on your system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The nmcli command
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Another method that I prefer is using the `nmcli` device status command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: You can see the connection status of each network interface in the output. I
    am currently connected to the internet through my Wi-Fi interface.
  prefs: []
  type: TYPE_NORMAL
- en: Checking your IP address
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Without a cell phone number, you can''t call any of your friends; similarly,
    your computer needs an IP address to connect to the internet. There are many different
    ways you can use to check your machine''s IP address. You can use the old-school
    (yet still popular) `ifconfig` command followed by the name of your network interface
    that is connected to the internet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also use the `-a` option to list all network interfaces:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: You can see from the output that I am only connected to the internet through
    my Wi-Fi interface (`wlan0`), and my IP address is `172.16.1.73`.
  prefs: []
  type: TYPE_NORMAL
- en: '**WHAT IS LOOPBACK?**'
  prefs: []
  type: TYPE_NORMAL
- en: Loopback (or `lo`) is a virtual interface that your computer uses to communicate
    with itself; it is mainly used for troubleshooting purposes. The IP address of
    the loopback interface is `127.0.0.1`, and if you want to ping yourself! Go ahead
    and ping `127.0.0.1`.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also use the newer `ip` command to check your machine''s IP address.
    For example, you can run the `ip address show` command to list and show the status
    of all your network interfaces:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Checking your gateway address
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Your computer grabs an IP address from a **router**; this router is also referred
    to as the **default gateway** as it connects you to the outside world (internet).
    Those routers are everywhere; they are at your house, coffee shops, schools, hospitals,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can check the IP address of your default gateway by running any of the
    following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`route -n`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`netstat -rn`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ip route`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s start with the first command, `route -n`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'You can see from the output that my default gateway IP address is `172.16.1.254`.
    Now let''s try the second command, `netstat -rn`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The output almost looks identical. Now the output differs a little bit with
    the third command, `ip route`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The default gateway IP address is displayed on the first line: default via
    `172.16.1.254`. You should also be able to ping your default gateway:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Flying with traceroute
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You are now ready to leave your house to go to work. You must go through different
    streets that eventually lead to your destination, right? Well, this is very similar
    to when you try to reach a host (website) on the internet; there is a route that
    you take that starts with your default gateway and ends with your destination.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the `traceroute` command to trace the route to any destination.
    The general syntax of the `traceroute` command is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, you can trace the route from your machine to `google.com` by running
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, my machine took seven trips (hops) to reach my final destination, `google.com`.
    Notice the first hop is my default gateway, and the last hop is the destination.
  prefs: []
  type: TYPE_NORMAL
- en: The `traceroute` command comes in handy when you are troubleshooting connectivity
    issues. For example, it may take you a very long time to reach a specific destination;
    in this case, `traceroute` can help you detect any points of failure on the path
    to your destination.
  prefs: []
  type: TYPE_NORMAL
- en: Breaking your DNS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every website (destination) on the internet must have an IP address. However,
    we humans are not very good with numbers so we have invented the **Domain Name
    System** (**DNS**). The primary function of the DNS is that it associates a name
    (domain name) with an IP address; this way, we don't need to memorize IP addresses
    while browsing the internet ... thank God for the DNS!
  prefs: []
  type: TYPE_NORMAL
- en: 'Every time you enter a domain name on your browser, the DNS translates (resolves)
    the domain name to its corresponding IP address. The IP address of your DNS server
    is stored in the file `/etc/resolv.conf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'I am using the DNS server `142.165.200.5`, which is provided by my **Internet
    Service Provider** (**ISP**). You can use the `nslookup` command to see DNS in
    action. The general syntax of the `nslookup` command is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The `nslookup` command uses DNS to obtain the IP address of a domain name.
    For example, to get the IP address of `facebook.com`, you can run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Notice it displayed the IP address of my DNS server in the first line of the
    output. You can also see the IP address `157.240.3.35` of `facebook.com`.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also ping `facebook.com`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s break things! My mum once told me that I have to break things so
    I can understand how they work. Let''s see what life is without DNS by emptying
    the file `/etc/resolv.conf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s do `nslookup` on `facebook.com`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'You will see that it hangs as it is unable to resolve domain names anymore.
    Now let''s try to ping `facebook.com`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'You get the error message `Temporary failure in name resolution`, which is
    a fancy way of saying that your DNS is broken! However, you can still ping `facebook.com`
    by using its IP address:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s fix our DNS, but this time we will not use the DNS server of our ISP;
    instead, we will use Google''s public DNS server `8.8.8.8`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s do an `nslookup` on `facebook.com` again:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Notice that my active DNS is now changed to `8.8.8.8`. I also got a different
    IP address for `facebook.com`, and that's because Facebook is running on many
    different servers located in various regions of the world.
  prefs: []
  type: TYPE_NORMAL
- en: Changing your hostname
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every website has a domain name that uniquely identifies it over the internet;
    similarly, a computer has a hostname that uniquely identifies it over a network.
  prefs: []
  type: TYPE_NORMAL
- en: 'Your computer''s hostname is stored in the file `/etc/hostname`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use hostnames to reach other computers in the same network (subnet).
    For example, I have another computer with the hostname `backdoor` that is currently
    running, and I can ping it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that `backdoor` is on the same network (subnet) and has an IP address
    of `172.16.1.67`. I can also ping myself:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: That's a smart way of displaying your computer's IP address – simply ping yourself!
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the `hostnamectl` command to view and set your computer''s hostname:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'To change your computer''s hostname, you can use the `hostnamectl set-hostname`
    command followed by the new hostname:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, you can change the hostname of your computer to `myserver` by
    running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Keep in mind that you need to open a new shell session so that your shell prompt
    displays the new hostname. You can also see that the file `/etc/hostname` is updated
    as it contains the new hostname:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Restarting your network interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It's probably an abused method, but sometimes doing a restart is the quickest
    fix to many computer-related troubles! I myself am guilty of overusing the restart
    solution for most of my computer problems.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the `ifconfig` command to bring down (disable) a network interface;
    you have to follow the network interface name with the `down` flag as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, I can bring down my Wi-Fi interface, `wlan0`, by running the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use the `up` flag to bring up (enable) a network interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, I can bring back up my Wi-Fi interface by running the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'You may also want to restart all your network interfaces at the same time.
    This can be done by restarting the `NetworkManager` service as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Now it's time to test your understanding of Linux networking with a lovely knowledge-check
    exercise.
  prefs: []
  type: TYPE_NORMAL
- en: Knowledge check
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the following exercises, open up your Terminal and try to solve the following
    tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: Change your hostname to `darkarmy`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Display the IP address of your default gateway.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Trace the route from your machine to `www.ubuntu.com`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Display the IP address of your DNS.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Display the IP address of `www.distrowatch.com`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Bring down your Ethernet interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Bring your Ethernet interface back up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
