- en: Preface
  prefs: []
  type: TYPE_NORMAL
- en: Nuxt.js (we will call it Nuxt in this book) is a progressive web framework built
    on top of Vue.js (we will call it Vue in this book) for **server-side rendering**
    (**SSR**). With Nuxt and Vue, building universal and static-generated applications
    is easier than ever before. This book will help you get up and running with the
    fundamentals of Nuxt and how to integrate it with the latest version of Vue, enabling
    you to build an entire project, including authentication, testing, and deployment,
    with Nuxt and Vue.js. You will explore Nuxt's directory structure and get your
    Nuxt project created by using Nuxt's pages, views, routing, and Vue components,
    and by writing plugins, modules, a Vuex store, and middlewares. Furthermore, you
    will learn how to create Node.js and PHP APIs or data platforms from scratch by
    using Koa.js (we will call it Koa in this book), **PHP Standards Recommendations**
    (**PSRs**), MongoDB, and MySQL, as well as using WordPress as a headless CMS and
    REST API. You'll also use Keystone.js as a GraphQL API to complement Nuxt. You
    will learn how to create a real-time Nuxt application and API with Socket.IO and
    RethinkDB, and finally generate static sites with Nuxt and streaming resources
    (images and videos) from a remote API, whether a REST API or a GraphQL API.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The book is for any JavaScript or full-stack developer who wants to build server-side-rendered
    Vue.js apps. A basic understanding of the Vue.js framework will assist in understanding
    the key concepts covered in the book.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](6db34a6d-8a5e-4f8d-ad25-2def50391a91.xhtml), *Introducing Nuxt*,
    is where you will learn about the main features of Nuxt. You will learn about
    the types of web applications there are today and which categories Nuxt is in
    line with. Then, you will find out what you can use Nuxt for in the coming chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](f3ae7ce4-4ed5-4252-8318-3afb431415e2.xhtml), *Getting Started with
    Nuxt*, is where you will install Nuxt, using a scaffolding tool, or doing so from
    scratch, to create your first basic Nuxt application. You will learn about the
    default directory structure in your Nuxt project, configuring Nuxt to suit your
    project and understanding asset serving.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](47ba7bfa-4881-4cf9-9ef9-2fff662c6d21.xhtml), *Adding UI Frameworks*,
    is where you will add custom UI frameworks, such as Zurb Foundation, Motion UI,
    Less CSS, and many more, to make your UI development in Nuxt easier and more fun.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](aa55a711-4ba3-45e1-bad6-96067701bba7.xhtml), *Adding Views, Routes,
    and Transitions*, is where you will create navigation routes, custom pages, layouts,
    and templates in your Nuxt application. You will learn how to add transitions
    and animations, create custom error pages, customize global meta tags, and add
    specific tags to individual pages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](099c1dc8-8dfa-46f8-bfbd-bfa036eefbb7.xhtml), *Adding Vue Components*,
    is where you will add Vue components to your Nuxt application. You will learn
    how to create global and local components and reuse them, writing basic and global
    mixins and defining component names that comply with the naming convention.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](2102475f-1a6b-42c0-abaa-ec018f8fa25a.xhtml), *Writing Plugins and
    Modules*, is where you will create and add plugins, modules, and module snippets
    in your Nuxt application. You will learn how to create Vue plugins and install
    them in your Nuxt project, writing global functions, and registering them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](557847be-8556-4b27-be98-0b00cba74fa5.xhtml), *Adding Vue Forms*,
    is where you will create forms with `v-model` and `v-bind`, validating form elements
    and making dynamic value bindings by using modifiers. You will also learn to use
    a Vue plugin, VeeValidate, to make your frontend validation easier.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](1d20b423-d93c-454a-91b5-f7207e1988fb.xhtml), *Adding a Server-Side
    Framework*, is where you will use Koa as the server-side framework to create an
    API to complement your Nuxt application. You will learn how to install Koa and
    its essential Node.js packages to create a fully working API and integrate it
    with your Nuxt application. Also, you will learn about using async data in Nuxt
    to fetch data from the Koa API, accessing Nuxt context via async data, listening
    to query changes, handling errors, and using Axios as the HTTP client for requesting
    data from the API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](232649f7-ae3b-43d7-a74e-55b481c4830c.xhtml), *Adding a Server-Side
    Database*, is where you will use MongoDB to manage the database for your Nuxt application.
    You will learn how to install MongoDB, writing basic MongoDB queries, adding some
    dummy data into your MongoDB database, integrating MongoDB with your API from
    the previous chapter with Koa, and then fetching the data from your Nuxt application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](808b1fa6-d397-4c97-b45a-95de8238497a.xhtml), *Adding a Vuex Store,*
    is where you will use Vuex to manage and centralize the store data for your Nuxt application.
    You will learn about the Vuex architecture, mutating store data with the store''s
    mutation and action methods, structuring your store program modularly when it
    gets bigger, and handling forms in the Vuex store.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](b24caa1b-6337-40ee-9c1a-c8586db1f3b2.xhtml), *Writing Route Middlewares
    and Server Middlewares,* is where you will create route middlewares and server
    middlewares in your Nuxt application. You will learn how to create middlewares
    using Vue Router, creating Vue applications using Vue CLI and using Express.js (we
    will call it Express in this book), Koa, and Connect.js (we will call it Connect
    in this book) as server middlewares.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](8e574c51-68dc-45e2-8a1d-4c04d9c38df5.xhtml), *Creating User Logins
    and API Authentication, *is where you will add authentication to the restricted
    page in your Nuxt application using session, cookies, **JSON Web Tokens** (**JWTs**),
    Google OAuth, and the route middlewares that you learned about in the previous
    chapter. You will learn how to create backend authentication with JWTs, using
    cookies on the client side and server side in your Nuxt application (frontend
    authentication), and adding Google OAuth to the backend and frontend authentication.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](16ddca98-0310-4f54-a108-6f0e15f79593.xhtml), *Writing End-to-End
    Tests, *is where you will create end-to-end tests with AVA, jsdom, and Nightwatch.js.
    You will learn how to install these tools, setting up the testing environment,
    and writing tests for the pages in your Nuxt application from the previous chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](34aaa294-2c3b-464e-8e96-5eb6d1eaff48.xhtml), *Using Linters, Formatters,
    and Deployment Commands, *is where you will use ESLint, Prettier, and StandardJS
    to keep your code clean, readable, and formatted. You will learn how to install
    and configure these tools to suit your needs and integrate different linters in
    your Nuxt application. Finally, you will learn how to deploy your Nuxt application with
    Nuxt commands and learn about what hosting service to publish your application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](450e252f-a94b-4f7f-9762-533a150f5d19.xhtml), *Creating an SPA
    with Nuxt*, is where you will learn how to develop a **single-page application**
    (**SPA**) in Nuxt, understanding the differences between the SPA in Nuxt and the
    classic SPA and generating a static SPA to deploy to a static hosting server,
    GitHub Pages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 16](387f7a98-77fc-4480-8b75-664d73962901.xhtml), *Creating a Framework-Agnostic
    PHP API for Nuxt, *is where you will use PHP to create an API to complement your
    Nuxt application. You will learn how to install the Apache server and PHP engine,
    understand HTTP messages and PHP standards, install MySQL as your database system,
    write CRUD operations for MySQL, create a framework-agnostic PHP API by complying with
    the PHP standards, and then integrate your API with your Nuxt application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 17](3ec7289c-b7fa-4f89-a66e-dc35426a9e66.xhtml), *Creating a Real-Time
    App with Nuxt*, is where you will develop a real-time Nuxt application with RethinkDB, Socket.IO,
    and Koa. You will learn how to install RethinkDB, be introduced to ReQL, integrate
    RethinkDB with your Koa API, add Socket.IO to the API and your Nuxt application,
    and finally turn your Nuxt application into a real-time web application with RethinkDB
    changefeeds.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 18](a2720301-9e1c-4c28-8af8-39bd5c093fb9.xhtml), *Creating a Nuxt
    App with a CMS and GraphQL,* is where you will use a (headless) CMS and GraphQL
    to complement your Nuxt application. You will learn how to turn WordPress into
    a headless CMS, creating custom post types in WordPress and extending the WordPress
    REST API. You will learn how to use GraphQL in your Nuxt application, understand
    GraphQL schema and resolvers, create a GraphQL API with Appolo Server, and use
    the Keystone.js GraphQL API. Also, you will learn how to install and secure PostgreSQL
    and MongoDB, generating static sites with Nuxt and streaming resources (images
    and videos) from the remote API, whether it is a REST API or a GraphQL API.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You will need a version of Nuxt.js throughout the book – the latest version,
    if possible. All code examples have been tested using Nuxt 2.14.x on Ubuntu 20.10\.
    Here is a list of other essential software, frameworks, and technologies for this
    book:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Software/hardware covered in the book** | **OS requirements** |'
  prefs: []
  type: TYPE_TB
- en: '| Koa.js v2.13.0 | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| Axios v0.19.2 | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| Keystone.js v11.2.0 | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| Socket.IO v2.3.0 | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| MongoDB v4.2.6  | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| MySQL v10.3.22-MariaDB  | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| RethinkDB v2.4.0 | Linux, macOS |'
  prefs: []
  type: TYPE_TB
- en: '| PHP v7.4.5  | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| Foundation v6.6.3 | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| Swiper.js v6.0.0 | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| Node.js v12.18.2 LTS (at least v8.9.0)   | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '| NPM v6.14.7 | Any platform |'
  prefs: []
  type: TYPE_TB
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Support tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-on-Nuxt.js-Web-Development](https://github.com/PacktPublishing/Hands-on-Nuxt.js-Web-Development). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Then, you can just create the transition style in a `.css` file."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select Manually select features to pick Router from the options
    that you are prompted to select, to choose the features you need."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
