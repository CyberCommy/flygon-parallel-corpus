- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Serverless engineering is a new domain of engineering that allows developers
    to write code and deploy infrastructures without having to worry about maintaining
    servers. This book explains the concepts of serverless engineering with Python
    examples on cloud architectures.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for Python developers who would like to learn about serverless
    architectures in cloud-based platforms such as Azure and Amazon Web Services (AWS).
    Python programming knowledge is assumed.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](bc1506bd-0f26-4ec6-931a-0d03459b8f4b.xhtml), *The Serverless Paradigm*, introduces
    the reader to the concepts of microservices and serverless architectures, and
    provides a clear understanding of the pros and cons.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](3506991f-b9a1-47ac-9424-fea4da4b592a.xhtml), *Building a Serverless
    Application in AWS*, covers AWS Lambda and explains the concepts, workings, and
    the components involved in the tool in detail. It also explains the nuances involved
    in security, user controls, and versioning code inside Lambda.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](dac41357-41cf-488e-9e0f-897fedbafb01.xhtml), *Setting Up Serverless
    Architectures*, goes into further detail about the various triggers in AWS Lambda
    and how they integrate with the functions. The reader will learn what the event
    structure of each trigger will look like and how to modify the Lambda function
    with respect to the type of trigger used.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](6182280c-9cbc-4996-bae1-5caa7f0b752d.xhtml), *Deploying Serverless
    APIs*, explores the AWS API Gateway and also teaches the reader how to build efficient,
    scalable serverless APIs using the API Gateway and Lambda. It goes on to teach
    the reader how to improve the API by adding authorization and how to set up user-level
    controls such as throttling of requests.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](16a3803f-f311-41f1-8145-b27ded02a681.xhtml), *Logging and Monitoring*,
    presents the concept of logging and monitoring in serverless applications. This
    is mostly still an unsolved problem in this domain. This chapter guides the reader
    through setting up logging and monitoring in the AWS environment with Python via
    custom metrics and logging. This chapter also goes into the details of best practices
    when it comes to logging and monitoring Lambda functions in Python.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](aeb4e587-d630-4357-b231-4955455aa380.xhtml), *Scaling Up Serverless
    Architectures*, discusses the practice of scaling up serverless architectures
    for large workloads using several third-party tools. This chapter also teaches
    the reader how to handle security, logging, and monitoring using the available
    Python modules.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](91f8a2d5-e6ad-45a5-a081-8abd2bb54f87.xhtml), *Security in AWS Lambda*,
    teaches readers to deploy secure serverless applications by leveraging the AWS
    security features available. This involves having strict controls on components
    that the application can access, on the users who can handle or access the application,
    and so on. This also involves understanding AWS virtual private clouds and subnets
    for an in-depth understanding of the security features and best practices you
    can follow in AWS Lambda.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](df653ba4-8f3a-4cf4-9b69-2fffc561dcdb.xhtml), *Deploying a Lambda
    Function with SAM*, looks at how to deploy Lambda functions as infrastructure
    as code via the Serverless Application Model, which is a new way of writing and
    deploying Lambda functions that makes it easier to integrate with other IaaS services,
    such as CloudFormation.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](b42edf6d-e15c-4ef5-aef0-3e957aa5ec3e.xhtml), *Introduction to Microsoft
    Azure Functions*, familiarizes the reader with Microsoft Azure Functions, and
    explains how to configure and understand the components of the tool.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The reader should be comfortable with the Python programming language. So, prior
    experience with it is expected. Prior experience with cloud-based systems will
    also be helpful.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "It is to be noted that the meta information should always
    be included for all SAM, which includes `AWSTemplateFormatVersion` and `Transform`.
    This would tell `CloudFormation` that the code you have written is an AWS SAM
    code and a serverless application."'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄。这是一个例子：“需要注意的是，对于所有SAM，始终应包括元信息，其中包括`AWSTemplateFormatVersion`和`Transform`。这将告诉`CloudFormation`你编写的代码是AWS
    SAM代码和无服务器应用程序。”'
- en: 'A block of code is set as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一块代码设置如下：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "For creating a function, you need to click on the orange Create
    a function button on the right."'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**Bold**：表示一个新术语、一个重要词或屏幕上看到的词。例如，菜单或对话框中的单词会在文本中显示为这样。这是一个例子：“要创建一个函数，你需要点击右侧的橙色创建函数按钮。”'
- en: Warnings or important notes appear like this.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会显示为这样。
- en: Tips and tricks appear like this.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会显示为这样。
