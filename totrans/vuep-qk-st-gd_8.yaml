- en: Deploying VuePress to the Web
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters of this book, we have learned a considerable deal about
    VuePress. We started with static site generators and where VuePress fits in, then
    we moved onto installation, setup, and configuration of variables, as well as
    actual usage and content editing in Markdown.
  prefs: []
  type: TYPE_NORMAL
- en: Beyond that, we also paid special attention to localization, internationalization
    and theme customization in VuePress.
  prefs: []
  type: TYPE_NORMAL
- en: Now, at this stage, it is likely that you already have a site ready in VuePress.
    You have probably also configured and modified it the way you want to.
  prefs: []
  type: TYPE_NORMAL
- en: This means the only thing left for us to do is to take our site live on the
    net! To do that, we need to deploy our website so that the world can see it.
  prefs: []
  type: TYPE_NORMAL
- en: Deployment of web applications and websites is not a big deal, and if you have
    ample web development experience, you might as well be deploying projects on a
    regular basis. However, JavaScript applications, such as VuePress, cannot simply
    be pushed live on any server. Often, shared hosting providers do not just support
    JavaScript out of the box.
  prefs: []
  type: TYPE_NORMAL
- en: With that said, in this chapter, we will be turning our attention toward VuePress
    deployment. We will cover topics such as where to deploy our site, how to do it,
    and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will learn about the following:'
  prefs: []
  type: TYPE_NORMAL
- en: VuePress deployment advisory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying VuePress to various cloud/remote hosting providers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using custom domains on VuePress sites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying VuePress – an introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Currently, we have a VuePress site that we built in [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml),
    *Creating a Site in VuePress*. Furthermore, we also managed to tweak the appearance
    and edit content in Markdown in the chapters following that one.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, what we currently have is a website hosted on localhost; that is, our
    own device. It can be the laptop or the computer that you were developing on.
    Alternatively, if you were developing straight on a remote server, you probably
    already have the site deployed.
  prefs: []
  type: TYPE_NORMAL
- en: 'As a result, this chapter will assume that the website we built is on a local
    storage device and proceed accordingly. We will learn about deployment to a varied
    number of services, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: GitHub Pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GitLab Pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google Firebase
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Heroku
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Netlify
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Surge.sh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: But before going any further, it is worth noting that our focus will be only
    on those services that are either totally free to use or offer a free plan. You
    can, of course, choose to use a premium plan if you already have one or are planning
    to get one. But there is very little sense in signing up for a paid-only service
    purely for the sake of deploying a static site.
  prefs: []
  type: TYPE_NORMAL
- en: Naturally, this implies that VuePress deployment will require you to register
    with the service that you are planning to use. In some cases, you may already
    have an account—for example, if you are a GitHub user, you already have a Pages
    account too; all you need to do is to set things up to use it.
  prefs: []
  type: TYPE_NORMAL
- en: This brings us to an important question. Why can’t we just randomly use any
    cloud hosting service to deploy our VuePress site?
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites for VuePress deployment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we are already aware, VuePress has very few system requirements of its own.
    It does not use a database to fetch and write data to or from the server, and
    therefore, MySQL or MS-SQL is rarely needed.
  prefs: []
  type: TYPE_NORMAL
- en: Considering the fact that VuePress operates as a single page web application,
    it is rather swift and low on memory usage. You can run it on even the most basic
    of servers with limited memory, unlike other content management systems that require
    a good deal of memory to work with.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, VuePress does have a few requirements in order to run properly:'
  prefs: []
  type: TYPE_NORMAL
- en: It is obvious that VuePress is powered by Vue.js. As a result, your server should
    have support for JavaScript and Vue.js and have all the dependencies and variables
    installed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VuePress requires Node.js 8 or higher to run.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can we use shared hosting to run VuePress?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is very common nowadays to run websites and projects, especially if they
    are not heavy traffic sites, on shared hosting environment. Such hosting plans
    can cost as little as $3 per month and come loaded with all the bells and whistles.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, a good number of WordPress websites tend to run smoothly on shared
    hosting plans, and some can easily handle over 25,000 visitors per day, if optimized
    properly. Naturally, it might be a temptation to consider running VuePress on
    a shared hosting platform. After all, if WordPress and Drupal can run on them,
    why not VuePress (which consumes far fewer resources than both WordPress and Drupal)?
  prefs: []
  type: TYPE_NORMAL
- en: Well, in textbook terms, yes, VuePress can be deployed to a shared server.
  prefs: []
  type: TYPE_NORMAL
- en: In practical terms, unfortunately, such deployment is not possible. This is
    because shared hosting tends to have its own set of preconfigured variables and
    language support installed. You cannot install new dependencies and other languages
    or frameworks on the server simply because you do not have root access to the
    server.
  prefs: []
  type: TYPE_NORMAL
- en: Most shared hosting providers offer PHP and MySQL by default, as well as Python
    and other scripting languages. WordPress, Drupal, and various other CMSs require
    PHP to work. But JavaScript frameworks, such as Vue.js and Node.js, are rarely
    found in a shared hosting environment.
  prefs: []
  type: TYPE_NORMAL
- en: This means that, while you can theoretically run VuePress on a shared server,
    you cannot practically hope to do so. Chances are very slim for the majority of
    shared hosting providers supporting Vue.js site generators on their servers any
    time soon.
  prefs: []
  type: TYPE_NORMAL
- en: So does that mean you need to buy a VPS or dedicated server of your own? Of
    course not!
  prefs: []
  type: TYPE_NORMAL
- en: There are amazing services, both free and premium, that can help us deploy our
    VuePress site.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with VuePress deployment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before getting started with the transfer process, make sure you have your project's
    directory structure in order.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are using VuePress as a local dependency inside an existing project
    (refer to the first chapter of this book to understand the difference between
    local dependency and global installation), you should run the following npm commands
    before beginning deployment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: By default, the build output location used by VuePress is the dist directory
    within the `.vuepress` directory. You can opt to change it if you want, but for
    this chapter, we will be sticking with the default location only. If you have
    changed the default build output location, be sure to edit your deployment commands
    accordingly. Otherwise, deployment may fail.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying VuePress to GitHub Pages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will now learn how to deploy an existing VuePress site to GitHub Pages, a
    very popular service among the development community for hosting static sites.
  prefs: []
  type: TYPE_NORMAL
- en: What is GitHub Pages?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GitHub Pages is a popular service that lets you deploy and host websites for
    your projects. You can deploy directly from your GitHub repository as well. This
    means each time you make changes to your data, you just need to push them to the
    GitHub repository and the Pages site will be updated accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/92784eb8-9c25-4592-aaab-3dcc65138b46.png)'
  prefs: []
  type: TYPE_IMG
- en: GitHub Pages is a rather well known name when it comes to hosting static sites.
    In [Chapter 1](4e1526aa-d994-42d8-9a18-12374ba932a0.xhtml), *Introducing Static
    Site Generators and VuePress*, you were briefly introduced to the blogging tool
    Jekyll, which also happens to be a static site generator just like VuePress. GitHub
    Pages works perfectly well in Jekyll and is, in fact, the most popular platform
    nowadays for hosting Jekyll-powered blogs.
  prefs: []
  type: TYPE_NORMAL
- en: There is no separate pricing structure for GitHub Pages, although you do need
    to sign up for one of the plans offered by GitHub. There is a free plan on offer,
    and for higher end users, there are paid plans with additional features.
  prefs: []
  type: TYPE_NORMAL
- en: For the most part, a good number of newer developers tend to rely entirely on
    the free plan of GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using GitHub Pages for your VuePress site's deployment is fairly simple.
  prefs: []
  type: TYPE_NORMAL
- en: First, you need to specify the correct base in your `config.js` file. By default,
    VuePress reads the base as `/`, so if you are deploying on the root domain, you
    can choose not to specify a base.
  prefs: []
  type: TYPE_NORMAL
- en: Here, by root domain, we mean something like `yourusername.github.io`.
  prefs: []
  type: TYPE_NORMAL
- en: But if you are deploying to a sub-directory, the base needs to be specified.
    For example, if you are deploying to `yourusername.github.io/vuep`, then the base
    will be `/vuep/`.
  prefs: []
  type: TYPE_NORMAL
- en: When working with GitHub Pages, your repository name is also the deployment
    address in general.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step is to create a deployment script. In your VuePress project, create
    a `deploy.sh` file with the following syntax (be sure to replace the path with
    that of your repository):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Note that of the last two commands of the preceding syntax, you must use only
    one, depending on your deployment path selection.
  prefs: []
  type: TYPE_NORMAL
- en: That is all. The minute you run the preceding script, deployment is done. Bear
    in mind, you must specify the paths and details as per your project structure.
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, if you are using VuePress as the sole site for your Pages account,
    and/or you wish to create an organization site, you can also deploy directly via
    the repository.
  prefs: []
  type: TYPE_NORMAL
- en: 'For that to happen, the first step is to create a new repository with your
    GitHub username (or organization name), along the lines of `username.github.io`,
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/501131bd-5dcc-4156-8505-0f3f6cf97fd0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The next step is to clone the new repository using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: With the preceding command, be sure to change the username field to that of
    your own username.
  prefs: []
  type: TYPE_NORMAL
- en: 'And then, all that is left to do is add, commit, and push the changes live,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Using custom domains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GitHub Pages allows its users to add custom domain names to their project sites,
    irrespective of the plan that they are on.
  prefs: []
  type: TYPE_NORMAL
- en: In order to map a domain name to your site, the first step is obviously to register
    the said domain name.
  prefs: []
  type: TYPE_NORMAL
- en: There are various domain name registrars out there, such as [GoDaddy](http://GoDaddy.com),
    [Register.com](http://Register.com), [Gandi.net](http://Gandi.net), and more.
    I personally use [Namecheap](http://Namecheap.com) and [Name.com](https://www.name.com/) for
    all of my domains, but this is more a matter of preference and less of a recommendation.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have a domain name registered, you will need to modify its DNS records
    to point to the hosting platform in question, such as GitHub Pages. Generally,
    this is accomplished by means of CNAME records, albeit some platforms tend to
    work with A records too.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the interface and settings provided by your domain name registrar,
    the procedure for adding or modifying DNS records may vary. Be sure to contact
    your registrar's support team in case of doubts! Incorrect configurations can
    result in domain name non-resolution.
  prefs: []
  type: TYPE_NORMAL
- en: For GitHub Pages, you simply add the domain name to your repository settings
    (not the Pages settings). Thereafter, you just need to enter the CNAME records
    and wait for DNS propagation.
  prefs: []
  type: TYPE_NORMAL
- en: You can find the detailed custom domain name mapping guide at [https://help.github.com/articles/using-a-custom-domain-with-github-pages/](https://help.github.com/articles/using-a-custom-domain-with-github-pages/).
  prefs: []
  type: TYPE_NORMAL
- en: Deploying VuePress to Google Firebase
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VuePress can be deployed to Firebase with the help of Firebase CLI tools. Firebase
    is a well known, but comparatively more complicated, option for hosting sites
    and projects in the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: What is Google Firebase?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are not yet familiar with Firebase, the first thing to notice is that
    it is backed by Google. This means your project gets enterprise-level reliability,
    amazing cloud infrastructure, and various other features that Google has to offer.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/8e2f114c-17f1-4990-9500-b6cafa537a13.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Firebase lets you host your applications and projects in the cloud using Google
    infrastructure. But it does not just stop at that—there are various amazing features
    that come bundled with every Firebase plan (including the free one):'
  prefs: []
  type: TYPE_NORMAL
- en: A/B Testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google Analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Crashlytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud Messaging (FCM)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remote Configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance Monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud Testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom Domains
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom SSL Certificates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And More!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In fact, a simple VuePress site does not even need most of these features. With
    that said, the fact that Google Firebase offers such an amazing set of features
    for free is a really amazing deal!
  prefs: []
  type: TYPE_NORMAL
- en: The free plan of Firebase offers you 1 GB of storage with no database access.
    This is more than sufficient for the majority of VuePress websites. However, the
    sad part is that there is only 10 GB of monthly bandwidth in the free plan. For
    a busy website, 10 GB may be less than required in terms of bandwidth.
  prefs: []
  type: TYPE_NORMAL
- en: You can opt for the paid plans, too, which start at $25 per month, or choose
    to pay extra for bandwidth on a pay-as-you-go basis. This means that if you overstep
    the free plan, you only pay for the extra usage.
  prefs: []
  type: TYPE_NORMAL
- en: If you are worried about the pricing structure of Google Firebase, you can make
    use of their fee calculator to assess how much you are likely to pay per month.
    Find the calculator at [https://firebase.google.com/pricing/](https://firebase.google.com/pricing/).
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to make use of Firebase, we will need to sign up for an account, be
    it free or premium.
  prefs: []
  type: TYPE_NORMAL
- en: Once we have signed up for Firebase, we will be given a Firebase ID. Make sure
    you keep it safe (you can find the key in the Firebase Console).
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/eec2fa77-0f5e-4921-8499-06f2a13d60fe.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Adding a project to Firebase Console is simple—all we need to do is specify
    the project name, as shown here (by default, the project is added on the free
    plan):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e092ab70-4c43-4f6f-8f9b-64b318b58e8c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once we have created a project, Firebase will automatically take us to the
    project''s console page. Feel free to experiment a bit; since VuePress is still
    not connected to Google Firebase, there is no fear of breaking anything at this
    stage.  The console page looks like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/3344f267-e11b-454a-b225-24d11b6dd0cf.png)'
  prefs: []
  type: TYPE_IMG
- en: Next, it is time to prepare our VuePress instance for deployment. We already
    have Node and npm on our system, but we need Firebase Tools in order to run the
    Firebase commands on our system.
  prefs: []
  type: TYPE_NORMAL
- en: Firebase Tools is a set of command line tools and commands that can be used
    to deploy code to Firebase projects, add and delete users and other data from
    Firebase, and read and write data to and from our Firebase database, if needed.
    More details can be found at [https://www.npmjs.com/package/firebase-tools](https://www.npmjs.com/package/firebase-tools).
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Firebase Tools, we need to run this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Once installed, we can use the Firebase command in our CLI.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we need to create two files in the root folder of our VuePress
    site.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we will create the `firebase.json` file with the following syntax (add
    the path to your specific dist directory):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The second file we need to create is `.firebaserc` (notice that it is a dot
    file and will be hidden by default on Linux/UNIX systems'' file viewers). The
    syntax for this file is as follows (add your Firebase ID):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, we just need to build the project using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'And finally, to deploy our site, we use this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: That's all! Our site will be deployed on the Firebase servers.
  prefs: []
  type: TYPE_NORMAL
- en: We can then return to the Firebase console for additional tasks, such as custom
    domain mapping, A/B testing, Crashlytics, or even other integrations, such as
    AdSense, Slack, and more.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/137d98ab-d610-49cd-b42a-2631a7a5b7e0.png)'
  prefs: []
  type: TYPE_IMG
- en: Using custom domains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this point, our site will be located at a free sub-domain, along the lines
    of `yoursite.firebaseapp.com`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To map a custom domain, in the Firebase Console, we need to click the Connect
    domain button, as shown in this screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a9d650c4-d414-4ce6-acca-52ddb778aefa.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will then specify our domain name, and verify its ownership. The easiest
    way to do so is by means of a CNAME record, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/9825891e-0e3c-4675-a3fe-cc1d8c420682.png)'
  prefs: []
  type: TYPE_IMG
- en: Keep in mind that domain name propagation can take a few hours, even in case
    of CNAME records.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the domain registrar that we registered our domain name with, the
    process for adding a CNAME record might vary. It is, therefore, advisable to check
    with the registrar's support team for more advice.
  prefs: []
  type: TYPE_NORMAL
- en: Learn more about connecting custom domains to Firebase at [https://firebase.google.com/docs/hosting/custom-domain](https://firebase.google.com/docs/hosting/custom-domain).
  prefs: []
  type: TYPE_NORMAL
- en: Deploying VuePress to Surge
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VuePress can be deployed to the Surge.sh static site hosting service. This particular
    service is not as feature-rich as, say, Google Firebase, but it has proven to
    be highly reliable and is really fast in terms of performance.
  prefs: []
  type: TYPE_NORMAL
- en: What is Surge?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Surge is a service that lets you publish your site to the web right from your
    command line. It is more geared toward frontend developers, but there is no hard
    restriction on who can use it.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike Firebase, which is often tailored to suit the needs of Android or other
    mobile app developers, Surge is meant to cater to the needs of HTML and JavaScript
    coders, especially web developers.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/f33df05d-8205-4d1d-8441-3c831fea2631.png)'
  prefs: []
  type: TYPE_IMG
- en: Surge comes with out-of-the-box plugins for both Gulp and Grunt. It also integrates
    with GitHub and supports a variety of static site generators, including the likes
    of Jekyll and, of course, VuePress!
  prefs: []
  type: TYPE_NORMAL
- en: In terms of pricing, Surge too has both a free and paid plan offering. The paid
    plan costs $30 per month and offers unlimited everything, in addition to custom
    SSL, custom redirect rules, and password protection.
  prefs: []
  type: TYPE_NORMAL
- en: The free plan, on the other hand, lets us add a custom domain with basic SSL,
    but does not impose any limits on publishing. This means we can make any number
    of changes to our site and not have to worry about bandwidth limits or other such
    problems. This is what makes Surge especially helpful for frontend developers!
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before going any further, we will need to install Surge via npm. Simply run
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: This should install Surge on our system and we can now use the Surge command.
    More details about the command can be found at [https://www.npmjs.com/package/surge](https://www.npmjs.com/package/surge).
  prefs: []
  type: TYPE_NORMAL
- en: 'Thereafter, we just need to build our docs, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'And finally, it''s time for deployment (note that you might need to pass the
    correct path to your dist directory if, by chance, you have changed the values
    or path):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: That's all! Surge is among one of the easiest static site hosting services to
    use!
  prefs: []
  type: TYPE_NORMAL
- en: If we add a file with the name `404.html` to our root directory, Surge is smart
    enough to use that file as the custom 404 page to be displayed in case of *page
    not found* errors.
  prefs: []
  type: TYPE_NORMAL
- en: Using custom domains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have a custom domain that you wish to use, the best thing to do is to
    follow the official Surge documentation, which contains step-by-step guidelines
    for over a dozen domain registrars.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation can be found at [https://surge.sh/help/adding-a-custom-domain](https://surge.sh/help/adding-a-custom-domain).
  prefs: []
  type: TYPE_NORMAL
- en: 'It is, however, noteworthy that if we are not using the default surge.sh sub-domain,
    we need to pass the custom domain name along with the deployment command. Thus,
    the previous command will be changed to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Deploying VuePress to Heroku
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using Heroku for a VuePress website often seems like overkill. This is because
    Heroku offers a gigantic array of features that are generally not required for
    a simple VuePress site.
  prefs: []
  type: TYPE_NORMAL
- en: However, if you already have a Heroku account (say, for another development
    projects of yours), it might make sense to add your VuePress site therein, rather
    than wasting time, effort, and money on signing up for another service.
  prefs: []
  type: TYPE_NORMAL
- en: What is Heroku?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Heroku is a robust and powerful cloud hosting platform that offers support for
    a very wide range of languages, scripts, technologies, and so on. You can run
    PHP, JavaScript, Ruby, UNIX, Python, Perl, and many other apps on Heroku with
    ease.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/d29a7d48-ee05-4e34-ad76-05edbce7c66d.png)'
  prefs: []
  type: TYPE_IMG
- en: Heroku is also capable of supporting multiple database management systems, such
    as MySQL and even PostgreSQL. This means that Heroku has a wide user base that
    spans multiple methodologies and coding paradigms.
  prefs: []
  type: TYPE_NORMAL
- en: Naturally, in the middle of all this, using Heroku for a static site might seem
    unnecessary. But with that said, if your goal is to use VuePress within the larger
    framework of your workflow, say, an existing React or Vue.js app, then Heroku
    can offer a seamless platform for the entire project and also integrate with various
    management tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'In terms of pricing, Heroku offers a very diverse pricing model that starts
    at $7 and goes all the way up to enterprise pricing, reaching $500 per month.
    It might be more logical to present a bird’s eye view of the pricing table itself:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a07667bb-55bc-4021-810f-54d41600dbeb.png)'
  prefs: []
  type: TYPE_IMG
- en: The free plan, as can be seen, lets us have one worker connection, and also
    allows us to map our custom domain.
  prefs: []
  type: TYPE_NORMAL
- en: You can calculate the projected cost of running a Heroku instance for your project
    at [https://www.heroku.com/pricing](https://www.heroku.com/pricing).
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to deploy our VuePress site to Heroku, we first need to sign up for
    a Heroku account. We can sign up for a free account at [https://signup.heroku.com/](https://signup.heroku.com/).
    The sign-up screen will look something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/259109a9-fc9c-4920-858c-11d2803d4de9.png)'
  prefs: []
  type: TYPE_IMG
- en: Note that there is a requirement to select a primary development language during
    the signup process. If there is no other language that you mainly work in, Node.js
    is what you need to select for VuePress deployment. It does not matter per se;
    you can select any language and still be able to deploy apps in other languages
    with ease.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we have successfully created an account, we will be taken to the Heroku
    Dashboard. We can now register a new app here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/4ee30a5c-1658-432c-91dd-5a46bef6422f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'There are two major methods to deploy a VuePress project to Heroku:'
  prefs: []
  type: TYPE_NORMAL
- en: Using the Heroku CLI to rely on Heroku Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting to GitHub itself
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Connecting to GitHub means we are deploying a branch of our repository to Heroku,
    such that changes are automatically pushed to the live site, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/6121583a-b200-4a30-acec-d82ba9c201fd.png)'
  prefs: []
  type: TYPE_IMG
- en: However, let's discuss the mainstream route of using the CLI, as it can be more
    challenging at times.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before going any further, the Heroku CLI needs to be installed. With npm, it
    is as easy as issuing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: However, things are slightly different here. Heroku CLI relies on a cutting-edge
    version of Node, and if our system does not keep pace with it, things can potentially
    break. To avoid this, if Heroku CLI is installed via npm, automatic updates are
    not offered. We will need to manually update the CLI as and when possible or required.
  prefs: []
  type: TYPE_NORMAL
- en: 'Naturally, this may add too much additional work. The easier route is to use
    the official installers. Heroku provides us with installers for Windows, Mac,
    and Ubuntu platforms. For other Linux versions, the general command for installation
    is the following (to be run as superuser):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: More details about the Heroku CLI installation process, as well as links to
    download the installers for Windows and macOS, can be found at [https://devcenter.heroku.com/articles/heroku-cli](https://devcenter.heroku.com/articles/heroku-cli).
  prefs: []
  type: TYPE_NORMAL
- en: Heroku CLI requires Git to function. Make sure your system has Git installed
    before installing Heroku CLI.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we have created an account and set up the Heroku CLI, it is time to log
    in to Heroku using our password and username credentials. All we have to do is
    pass the following command, and then enter our login details when prompted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Thereafter, we need to create a `static.json` file in the root of our VuePress
    project. The file should be populated with the following (the path to the `dist`
    directory needs to be specified in full):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: The `static.json` file is very important and remote deployment will not work
    in its absence!
  prefs: []
  type: TYPE_NORMAL
- en: 'Once that is done, we need to set things up with the Heroku Git. To add the
    Git commit, use the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'To create the new app, enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'To set the `buildpack`, use this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: The Heroku `buildpack` is a custom set of tools and commands meant mainly for
    static sites. Learn more about its usage over at its GitHub page at [https://github.com/heroku/heroku-buildpack-static](https://github.com/heroku/heroku-buildpack-static).
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, we just need to deploy our site and push the changes, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: And we are done! Metrics and usage statistics about the site can be viewed in
    the Heroku Dashboard itself.
  prefs: []
  type: TYPE_NORMAL
- en: Using custom domains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can add multiple custom domains to our VuePress site in the Heroku Dashboard.
    By default, our site will use the `herokuapp.com` sub-domain only.
  prefs: []
  type: TYPE_NORMAL
- en: However, in order to add a custom domain, verification of your account is necessary.
    This can be done by adding credit card details. While there will be no billing
    or charges on the card, such details are mandatory in order to prevent misuse
    of the Heroku system.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/acf10124-28ae-4dcb-b3b5-16a47376975c.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the custom domain is added, we can modify CNAME records over at the domain
    registrar to point the domain to our VuePress site.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying VuePress to Netlify
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Netlify has become famous among web developers due to its automated mechanism
    of working. You can simply push changes from GitHub, GitLab, and others, and Netlify
    can handle the rest.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, there is very little chance of something going wrong when working with
    Netlify. It is often the recommended solution for folks looking for a cloud hosting
    service that simply works within a few clicks.
  prefs: []
  type: TYPE_NORMAL
- en: Needless to say, Netlify works very well with VuePress too.
  prefs: []
  type: TYPE_NORMAL
- en: What is Netlify?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Netlify defines itself as an *all in one platform for automating modern web
    projects*. Put simply, it lets you deploy your web projects on a global infrastructure
    with features such as automatic SSL, custom domains, multiple **content delivery
    networks** (**CDN**), and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can choose to deploy directly via Git, and then push changes as and when
    required:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/41c58474-6d01-448a-afa4-5cfacb39b7e2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Netlify has premium plans starting from $45 per month upward. The free plan,
    however, lets us deploy our personal projects with ease and also allows us to
    use custom domains. The downside is that there is a one-user limit on the free
    plan—this rules out any team collaboration. The pricing options are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/5256d550-7c5e-42df-b892-d78ec484e224.png)'
  prefs: []
  type: TYPE_IMG
- en: Also, enterprise-level CDN is also not available on the free plan. But for what
    it’s worth, the free plan should suffice for VuePress deployment.
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to deploy our site to Netlify, we first need to sign up for a plan.
    Thereafter, we will be able to add details about our project therein.
  prefs: []
  type: TYPE_NORMAL
- en: 'The good thing is that Netlify offers multiple sign-up options. We can choose
    to sign up using GitHub, GitLab, or BitBucket, and then push our repositories
    easily, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/375c7af3-9775-44d4-b4b2-5c97a4b92fa1.png)'
  prefs: []
  type: TYPE_IMG
- en: Alternatively, we can rely on the email sign-up mechanism.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Netlify interface is amazing in that it is very empty, so there is no possibility
    of a newbie user getting confused:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/7aac0411-36a3-4a6e-929a-ad551d8f71cf.png)'
  prefs: []
  type: TYPE_IMG
- en: All we need to do is click the New Site From Git button!
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, we will need to connect to the Git service of our choice, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/35096f55-3d49-4eaa-bbff-95f118561fd6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Thereafter, we just need to pick the repository where our project is located,
    and then specify the options as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: For the build command, we will enter `npm run docs:build`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And for the `Publish` directory, we must specify the full path to our `dist`
    directory, such as `.vuepress/dist`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That's all!
  prefs: []
  type: TYPE_NORMAL
- en: Using custom domains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Netlify allows us to add a custom domain name to our site even in the free plan.
    By default, the site is first live at the `sitename.netlify.com` sub-domain.
  prefs: []
  type: TYPE_NORMAL
- en: After the site has been added, we can specify the domain name we want to add,
    and then add CNAME records, as per the interface provided by our domain name registrar.
  prefs: []
  type: TYPE_NORMAL
- en: It is worth noting that Netlify also offers DNS management services for domains,
    albeit on the paid plans.
  prefs: []
  type: TYPE_NORMAL
- en: As can be seen, deploying a site to Netlify is rather easy. The only catch is
    that working from localhost for deployment can be rather tricky. But if you are
    a GitHub, GitLab, or BitBucket user, Netlify is a very simple and reliable solution
    for deployment.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying VuePress to GitLab Pages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pretty much like GitHub Pages, GitLab Pages too is a similar breed of offering
    and provides more or less the same level of features.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, much like GitHub Pages, GitLab Pages is also heavily focused on
    static sites and their deployment. It works out of the box with services and software
    such as Jekyll, Hugo, Harp, Hexo, Pelican, and obviously VuePress. We learned
    about such static site generators in [Chapter 1](4e1526aa-d994-42d8-9a18-12374ba932a0.xhtml),
    *Introducing Static Site Generators and VuePress*, of this book.
  prefs: []
  type: TYPE_NORMAL
- en: What is GitLab Pages?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GitLab Pages offers reliable and highly versatile hosting solutions for projects
    and repositories based on GitLab. While GitLab is fairly similar to GitHub in
    the sense that both of these services are based on Git, the former has a self-hosted
    offering too that has risen in popularity of late. There are many developers who
    prefer GitLab for this very reason.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/70041af6-2201-4c3e-b36d-83639aa82865.png)'
  prefs: []
  type: TYPE_IMG
- en: GitLab Pages allows us to connect custom domains, as well as SSL certificates.
    We can choose to run GitLab on our own servers, or over at [GitLab.com](http://GitLab.com)—irrespective
    of our choice, GitLab Pages can still be used to deploy sites to the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: In terms of pricing, both the self-managed and hosted variants of GitLab come
    with a free plan. The good thing is that, unlike GitHub, we can even have private
    projects in the free plan! The paid plans are higher end usage-specific; if your
    end goal is just to set up a VuePress site, the free plan is more than sufficient.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/eb0819e6-ee78-4444-bd5f-5d684f675cfd.png)'
  prefs: []
  type: TYPE_IMG
- en: It is noteworthy that there is no separate pricing structure for GitLab Pages.
    The pricing, be it free or paid, is for GitLab itself. GitLab Pages comes as a
    free addon with all plans.
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to deploy our VuePress site to GitLab Pages, we first need to ensure
    that the correct base is specified in our `config.js` file. Otherwise, the deployment
    will just not work.
  prefs: []
  type: TYPE_NORMAL
- en: By default, VuePress reads the base value as `/`. This means that if the site
    is to be deployed at `username.gitlab.io`, then we can omit the base value in
    `config.js`.
  prefs: []
  type: TYPE_NORMAL
- en: However, if we are to deploy the site elsewhere, say, `username.gitlab.io/mysite`,
    then we need to specify the base as `/mysite/`, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, it is very important that the `dest` value in the `config.js` file
    is set to `public`. Otherwise, GitLab Pages may not be able to read the project
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we have entered the required values in the `config.js` file, we need to
    create a new file named `.gitlab-ci.yml` in the root of our VuePress project.
    We will then populate the said file with the following contents, as suggested
    by VuePress developers themselves:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: This file simply runs the required scripts to build and deploy our site as and
    when we make changes to it.
  prefs: []
  type: TYPE_NORMAL
- en: Using custom domains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By default, each site on GitLab Pages is available on a project page address,
    such as `myusername.gitlab.io/myproject`.
  prefs: []
  type: TYPE_NORMAL
- en: We can change it to `myusername.gitlab.io` (that is, removing the `/myproject`
    sub-path) very easily. All we need to do is enter the project’s name in the settings
    as `myusername.gitlab.io`—this works with virtually all of the static site generators
    hosted on GitLab Pages.
  prefs: []
  type: TYPE_NORMAL
- en: If, by chance, we need to add a custom domain name to our site, this is doable
    as well. To do this, we need to specify the domain name in the site settings,
    and then add the relevant CNAME records to our domain itself.
  prefs: []
  type: TYPE_NORMAL
- en: GitLab Pages offers a detailed guide to custom domain mapping at [https://docs.gitlab.com//ce/user/project/pages/introduction.html#add-a-custom-domain-to-your-pages-website](https://docs.gitlab.com//ce/user/project/pages/introduction.html#add-a-custom-domain-to-your-pages-website).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Well, this brings us to the end of this quick start guide for VuePress. In this
    chapter, we covered VuePress deployment for various cloud hosting services.
  prefs: []
  type: TYPE_NORMAL
- en: Links to remote or cloud platforms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For easier reference, here are the links to the cloud and remote hosting providers
    that we have talked about in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '**GitHub Pages**: [https://pages.github.com/](https://pages.github.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GitLab Pages**: [https://about.gitlab.com/features/pages/](https://about.gitlab.com/features/pages/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Firebase**: [https://firebase.google.com/](https://firebase.google.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Heroku**: [http://heroku.com/home/](http://heroku.com/home)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Netlify**: [https://www.netlify.com/](https://www.netlify.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Surge.sh**: [http://surge.sh/](http://surge.sh)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Concluding words
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'During the course of this book, we have learned about and acquired a good deal
    of knowledge related to VuePress, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: VuePress installation on localhost or machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VuePress configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VuePress usage and building
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VuePress theme customization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with content in Markdown
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VuePress internationalization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And finally, in this chapter, we learned how to deploy a site from a localhost
    or storage device to a remote or cloud platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you progress with VuePress development and deployment, you will notice that
    it is very easy to use, and a rather robust piece of software. Furthermore, VuePress
    is still under active development and is a relatively new tool. This means that,
    as time goes by, VuePress is bound to grow in both features and popularity.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, VuePress came up with nine new releases (both major and minor combined)
    during the period while I was writing this book!
  prefs: []
  type: TYPE_NORMAL
- en: At this point, it is highly advisable and recommended to learn Vue.js too, especially
    if you are looking to build projects in VuePress and do more with them. Having
    a JavaScript framework at your command is always a good idea in today's times,
    keeping in mind the rising popularity of JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Readers can browse this book's repository over at GitHub for code samples. This
    can be found at [https://github.com/packtpublishing/vuepress-quick-start-guide](https://github.com/packtpublishing/vuepress-quick-start-guide).
  prefs: []
  type: TYPE_NORMAL
- en: Plus, the latest VuePress code can be found at its own GitHub repository, over
    at [https://github.com/vuejs/vuepress](https://github.com/vuejs/vuepress).
  prefs: []
  type: TYPE_NORMAL
- en: That said, I hope you've had a great time reading this book, and learning about
    VuePress in particular.
  prefs: []
  type: TYPE_NORMAL
- en: Happy coding!
  prefs: []
  type: TYPE_NORMAL
