- en: Designing a Hard Disk Layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we focused on runlevels and boot targets. We interacted
    with a Linux system running `init` and also `systemd`. We saw how to turn on a
    service, and we saw how to switch between runlevels and boot targets. We looked
    at the various start and stop scripts, and we also looked at the structure of
    a script.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter focuses on creating partitions and segmenting a physical hard disk
    at the CLI. We will be particularly focusing on the usage of the `fdisk` utility
    and the `parted` utility. Then we will go through the steps to create, remove,
    and define the partition type and format the hard disk with the various `mkfs` commands.
    Finally, we will look at ways of mounting and unmounting a partition.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, we will cover the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Using the `fdisk` utility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the `parted` utility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steps to format a hard disk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mounting and unmounting a partition
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the fdisk utility
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Linux, whenever we're working with hard disks, the chances are we will at
    some point in time have to **partition a hard disk**. *Partitioning *simply means
    separating the hard disk. This enables us to have varying sizes of partition and
    gives us the ability to satisfy various software installation requirements. Furthermore,
    when we partition a hard disk, each partition is treated as an entirely separate
    hard disk by the operating system. The `fdisk` (fixed disk or format disk) is
    a command-line based utility that can be used for manipulating a hard disk. With
    `fdisk`, you can view, create, delete, and change, among other things.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start with, let''s expose the hard disk within our Ubuntu distribution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'From the preceding output, the hard disk in the system is represented by `/dev/sda`.
    The first partition is `/dev/sda1`, the second partition is `/dev/sda2`, and so
    on. For us to see the partition information, we will run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'From the preceding output, we get `Permission denied`. This is becausewe require
    a root privilege to view and change the partition of a hard disk. Let''s retry
    as the root user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'From the preceding output, the way to read this would be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk `/dev/sda`: 20 GiB, 21,474,836,480 bytes, 41,943,040 sectors: This is
    the actual physical hard disk:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Device** | **Boot ** | **Start ** | ** End** | ** Sectors** | **Size**
    | ** Id** | **Type** | **Comment** |'
  prefs: []
  type: TYPE_TB
- en: '| `/dev/sda1` | *  |  2048 |  39,845,887  |   39,843,840  | 19 G  | 83  |  Linux
    | First partition is 19 GB |'
  prefs: []
  type: TYPE_TB
- en: '| `/dev/sda2` |  | 39,847,934  | 41,940,991 | 2,093,058 |  1,022 M  |   5 |
    Extended | Second partition is 1,022 MB |'
  prefs: []
  type: TYPE_TB
- en: '| `/dev/sda5  ` |  |   39,847,936  |   41,940,991  |   2,093,056  | 1,022 M
    |  82  | Linux swap / Solaris | Fifth partition is 1,022 MB |'
  prefs: []
  type: TYPE_TB
- en: 'Now, for us to be able to make any changes, we will use the `fdisk` command
    once again. This time we will leave out the `-l` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: From the previous code, we are now inside the `fdisk` utility and we are presented
    with a nice little message.
  prefs: []
  type: TYPE_NORMAL
- en: Do not commit any changes before first making sure you understand the dangers
    surrounding removing partition; the system could become unstable if you remove
    a partition that stores system files such as `/boot/` and `/`, to name a few.
  prefs: []
  type: TYPE_NORMAL
- en: 'For us to view the available options, we can press the `m` key:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'From the preceding output, we can see a variety of options to choose from.
    We can even use `l` to see the known partition types:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00057.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: From the preceding screenshot, we can see a range of different partition types
    available for usage. The common types are `5 Extended`, `7 NTFS NTSF`, `82 Linux
    swap`, 83 (Linux), `a5 FreeBSD`, `ee GPT`, and  `ef EFI`, to name but a few.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, to view the partitions created, we can use `p`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00058.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'I''ve added a second hard disk to this system, so let''s verify this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Awesome! We can now see `/dev/sdb`. We will use `fdisk` with this new hard
    disk:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s press `p`, which will print the current partition(s) on the `/dev/sdb`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see, there is no partition on the `/dev/sdb`. For us to create a
    partition, we will use the `n` key:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: This will ask us to declare the type of partition. There are primary and extended
    partition types available with the `fdisk` utility. There is also a logical partition
    type. For us to install an operating system, we will choose `p`, which stands
    for *primary partition type*.
  prefs: []
  type: TYPE_NORMAL
- en: You would not install an operating system on a logical partition type.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see, we use the `n` to create new partitions. An important point
    to note is the fact that the partitions that we have created thus far are all
    Linux-type partitions. If for some reason we want to change the partition type,
    we can use `t` to change it. Let''s change the `/dev/sdb2` to an `HPFS/NTFS/exFAT`
    partition. We will use `type 7` in the `fdisk` utility:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Awesome! Now we can see the partition type as `type 7`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Also, we will change `/dev/sdb3` partition to type `ef`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00059.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now when we rerun the `p` command, we can see our newly created partition type
    set to `ef`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Now if we decide to install an operating system, then we will have to make
    one of these partitions bootable. We will make the third partition `/dev/sdb3`
    bootable:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: From the previous output, the `/dev/sdb3` is now marked as bootable.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, to change or write our changes, we will press `w`, to save and exit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/00060.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Using the parted utility
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `parted` utility is geared towards situations where we have a hard disk
    or hard disks larger than 2 TB. Additionally, we can a resize a partition; the
    `fdisk` utility cannot resize a partition. Almost all of the newer Linux distributions
    support the `parted` utility. `parted` comes from GNU; it's a text-based partitioning
    utility that works with a variety of disk types such as MBR, GPT, and BSD, to
    name but a few.
  prefs: []
  type: TYPE_NORMAL
- en: Always backup your data before doing any partitioning.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start with, we will use the `parted` command on the `/dev/sdb`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'From here, we are placed into the `parted` utility. Similar to the `fdisk`
    utility, the `parted` utility is interactive. Now let''s say we want to view the
    `help` menu, we can enlist the `help` at the CLI:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: From the preceding output, we have a long list of commands at our disposal.
  prefs: []
  type: TYPE_NORMAL
- en: Remember to do a backup before making any change(s) to your partition.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, to view the current partition table for the `/dev/sdb`, we would type
    `print`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'This will print out the partition table for the `/dev/sdb`. However, we can
    use the `print` command with the `list` option to view all the hard disks available
    in this system. Let''s give it a try:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Great! As you can see, the `/dev/sda` is now also listed. Next, let's look at
    how we would resize a partition. To accomplish this, we're going to leverage another
    powerful command, the `resizepart` command, which in itself is appropriately named.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will choose the second partition for this exercise; we''ll say `resizepart
    2`, and we will reduce it to 2 GB:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: From the preceding output, you can see that the `parted` utility is very powerful.
    We have effectively taken away 2 GB (roughly) from the second partition. Now,
    if you think about it, we have 2 GB of free space to use at our disposal.
  prefs: []
  type: TYPE_NORMAL
- en: Hard disk space is critical in a large data center, so bear that in mind when
    provisioning your servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, for the purpose of demonstrating how we would use the 2 GB of free space,
    let''s create another partition. The `parted` utility is that powerful, in that
    it can recognize partitions that were created from another disk utility such as
    `fdisk`. In `parted`, we would use the `mkpart` command to create a partition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see by now, there are similarities between `fdisk` and `parted`,
    and they both ask whether the partition is going to be a primary or an extended
    partition. This is vital whenever we''re working with operating system installations.
    For our purposes, we''re going create yet another primary partition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, at this point, we will have to specify the starting size of the partition
    we are about to create. We will use the size where the second partition ends:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Awesome! Now let''s rerun the `print` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: From the preceding output, we can now see our newly created partition at 2 GB
    (roughly).
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we can change the `boot` flag from its present partition 3 `/dev/sdb3`
    to part partition 4 `/dev/sdb4`. We would use the `set` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'From here, we have to tell the `parted` utility that we want to move the `boot`
    flag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we need to confirm our changes, `on` is the default, so we press *Enter*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Great! Now we can see that the boot flag has been shifted to the forth partition
    `/dev/sdb4`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, to save our changes, we can simply type `quit`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: You would add entries as needed in the `/etc/fstab` to automount your partitions
    to their respective mount points.
  prefs: []
  type: TYPE_NORMAL
- en: Steps to format a hard disk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After we have created our partitions, the next step would be to make the partitions
    accessible by way of a filesystem. In Linux, when we format a partition(s), the
    system wipes the partition, and this enables the system to store data on the partition.
  prefs: []
  type: TYPE_NORMAL
- en: 'We have a number of filesystem types available in a Linux system. We use the
    `mkfs` command in combination with the desired filesystem type. To see the available
    filesystems, we can do this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00061.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'From the preceding screenshot, in this Ubuntu distribution, primarily the `ext4`
    type is what the distribution is currently using. We can also use the `lsblk`
    command with the `-f` option to verify this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/00062.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: From the preceding screenshot, we can see both hard disks, `/dev/sda` and `/dev/sdb`.
    Additionally, we see a column `FSTYPE`. This identifies which filesystem is currently
    in use. We can see that the `FSTYPE` is blank for the entire `/dev/sdb(1-4)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also use the `blkid` command to view the filesystems in use by the system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00063.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: From the output given, the part that says `TYPE=` displays the filesystem in
    use. Please note that the `TYPE=` is missing for the `/dev/sdb(1-4)`. This simply
    means that we have not formatted any of the partitions that reside on the `/dev/sdb`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s start formatting our partitions. We''ll use the `ext4` filesystem
    on the `/dev/sdb1`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: From the preceding output, the `mkfs` utility, particularly `mkfs.ext4`, creates
    the filesystem on the raw partition; then it assigns a UUID to uniquely identify
    the `/dev/sdb1` partition.
  prefs: []
  type: TYPE_NORMAL
- en: You need to have a root privilege before you can format a partition(s).
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let''s use the `ext3` filesystem for the `/dev/sdb2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we''ll use the `ext2` for the `/dev/sdb3` and the `ntfs` for the `/dev/sdb4`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: You can also use the `mk2fs` to create an `ext2` filesystem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Great! Now we have just formatted the `/dev/sdb1`, `/dev/sdb2`, `dev/sdb3`
    and the `/dev/sdb4`. If we now rerun the `lsblk` command with the `-f` option,
    we will now see the filesystem type (`FSTYPE`) populated for the two respective
    partitions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: From the preceding output, we can see that the `FSTYPE` is reflecting the changes
    that we made.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also rerun the `blkid` command to view the UUIDs created for the `/dev/sdb1`
    and `/dev/sdb2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, the system can now store information on the respective partitions.
  prefs: []
  type: TYPE_NORMAL
- en: Mounting and unmounting a partition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The final step after formatting a partition is to mount the partition. We use
    the `mount` command to mount a partition and the `unmount` command to unmount
    a partition. The mount command is also used for viewing the current mount points
    in our system. However, after a reboot, all partitions are unmounted, unless we
    created entries into the `/etc/fstab` directory.
  prefs: []
  type: TYPE_NORMAL
- en: You need a root privilege to save any change in the `/etc/fstab`. Also, back
    up any configuration file(s) before making any change(s).
  prefs: []
  type: TYPE_NORMAL
- en: The mount command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We can issue the `mount` command without any arguments to view the current
    mount points:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Some of the output was omitted for brevity.
  prefs: []
  type: TYPE_NORMAL
- en: 'From the preceding output, we can see a number of mount points (a mount point
    is simply associating a partition/drive to a folder/directory). We can filter
    the `mount` command to only display the `/dev/`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Based on the filter, we can see the `/dev/sda1` is currently mounted on the
    `/` directory. As you know, the `/` directory is the root directory. All other
    directories fall under the `/` directory.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also use the `df` command with the `-h` option to view a more concise
    output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Great! Now this is presented in a structured format and is easier to read. Based
    on the output, only the `/dev/sda1` partition is currently mounted.
  prefs: []
  type: TYPE_NORMAL
- en: We can now go ahead and mount the `/dev/sdb1` on the `/mnt`. The `/mnt` is an
    empty directory, which we use whenever we want to mount a partition.
  prefs: []
  type: TYPE_NORMAL
- en: Only one partition can be mounted at any given time.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will run the `mount` command as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'Note, without any options, the `mount` command worked without an error. Now
    let''s rerun the `mount` command and filter for only the `/dev`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Based on the preceding output, we can see that the `/dev/sdb1` is currently
    mounted on the `/mnt`.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also leverage the `df` command with the `h` option to see similar results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: From the preceding output, we can see the size of the partition along with the
    mount point associated with the partition.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s now create two directories to be used for the `/dev/sdb2` and the `/dev/sdb4`
    partitions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we''ll mount the `/dev/sdb2` and the `/dev/sdb4` on the `/folder1` and
    `/folder2` directories, respectively:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'Great! Now we can see our mount points being displayed with the `mount` command.
    Likewise, we can use the `df` command with the `-h` option for a readable format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see, the steps involved for mounting a partition are fairly straightforward.
    However, on some distributions, you will have to specify the filesystem type.
    In a network, mounting a share is something commonly done. An example of mounting
    a share would be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: The unmount command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After we would have mounted our partitions and made changes, it's always a good
    idea to clean up and unmount our partitions. We use the `unmount` command to unmount
    a partition.
  prefs: []
  type: TYPE_NORMAL
- en: Always change/move out of a directory before running the `unmount` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s unmount the `/dev/sdb1`. The format would be the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we can see that the `/dev/sdb1` is no longer mounted; we can also confirm
    this by using the `df` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'We can also use the `lsblk` command to confirm the same:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s also unmount the `/dev/sdb2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/00064.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: From the preceding screenshot, you will notice that instead of the partition
    `/dev/sdb2`, I used the directory `/folder1`; this is entirely up to you; they
    are both accepted. Also, we can see from the `lsblk` command that there is no
    mount point listed for `/dev/sdb2`.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's say that you want your mount points to persist during a system reboot.
    Well, rest assured, we can make this happen by creating entries in the `/etc/fstab`.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let''s create an entry for the `/dev/sdb4` inside the `/etc/fstab`.
    We''ll use the UUID for the `/dev/sdb4` to assist us. Let''s run `blkid` and save
    the UUID for the `/dev/sdb4`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s edit the `/etc/fstab` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Now the last entry is referencing the `/dev/sdb4`. The format starts with the
    partition, represented by the `UUID`, followed by the `mount point`, `file system`,
    `dump`, and `pass`.
  prefs: []
  type: TYPE_NORMAL
- en: When the system reboots, the `/dev/sdb4` will be mounted on to the `/folder2`.
    This saves us from repetitive typing.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we took a look how to format a hard disk and the various partitioning
    utilities available. We used the `fdisk` utility to create partitions, and we
    turned on the `boot` flag. We then took a look at the `parted` utility, and we
    saw how to create a partition; in addition, we saw how we could resize a partition.
    This is very useful in data center environments. We then formatted our partitions,
    which enabled us to start storing data. We looked at using various `mkfs` commands.
    We then focused on how we would mount our partitions. After saving data on our
    mount points, we unmounted our partitions/mount point. Finally, we saw how we
    could save ourselves from repetitive typing by creating entries in the `/etc/fstab`
    file; this mounted our partitions for us upon boot up.
  prefs: []
  type: TYPE_NORMAL
- en: Coming up, in the next chapter, we will cover the installing of various Linux
    distributions. We will focus particularly on Red-Hat distributions—namely CentOS.
    On the flip side of things, we will cover Debian distributions, specifically Ubuntu
    and the best techniques used to install Linux distributions, which slightly vary
    among distributions. Also, we will cover dual boot environments, let's face it,
    sooner or later, you're bound to come into contact with a Windows OS in your Linux
    career. You don't need to worry, though, because we slowly go through every step
    of the installation process in detail. You will definitely become much more sound
    in your approach to installing a Linux distribution across all platforms after
    you've completed the next chapter. The skills gained from installing a Linux distribution
    will help you greatly as a Linux engineer.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which letter is used to list the partitions of a hard disk without going into
    the `fdisk` utility?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. `fdisk –a /dev/sda`
  prefs: []
  type: TYPE_NORMAL
- en: B. `fdisk –c /dev/sda`
  prefs: []
  type: TYPE_NORMAL
- en: C. `fdisk –l /dev/sda`
  prefs: []
  type: TYPE_NORMAL
- en: D. `fdisk –r /dev/sda`
  prefs: []
  type: TYPE_NORMAL
- en: Which letter is used to create a partition inside the `fdisk` utility?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. *b*
  prefs: []
  type: TYPE_NORMAL
- en: B. *c*
  prefs: []
  type: TYPE_NORMAL
- en: C. *r*
  prefs: []
  type: TYPE_NORMAL
- en: D. *n*
  prefs: []
  type: TYPE_NORMAL
- en: Which letter is used to toggle a boot flag inside the `fdisk` utility?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. *b*
  prefs: []
  type: TYPE_NORMAL
- en: B. *a*
  prefs: []
  type: TYPE_NORMAL
- en: C. *d*
  prefs: []
  type: TYPE_NORMAL
- en: D. *c*
  prefs: []
  type: TYPE_NORMAL
- en: Which letter is used to print the known partition types inside the `fdisk` utility?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. *l*
  prefs: []
  type: TYPE_NORMAL
- en: B. *r*
  prefs: []
  type: TYPE_NORMAL
- en: C. *n*
  prefs: []
  type: TYPE_NORMAL
- en: D. *b*
  prefs: []
  type: TYPE_NORMAL
- en: Which letter is used to create a partition inside the `fdisk` utility?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. *p*
  prefs: []
  type: TYPE_NORMAL
- en: B. *n*
  prefs: []
  type: TYPE_NORMAL
- en: C. *c*
  prefs: []
  type: TYPE_NORMAL
- en: D. *d*
  prefs: []
  type: TYPE_NORMAL
- en: Which letter is used to write changes inside the `fdisk` utility?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. *q*
  prefs: []
  type: TYPE_NORMAL
- en: B. *c*
  prefs: []
  type: TYPE_NORMAL
- en: C. *d*
  prefs: []
  type: TYPE_NORMAL
- en: D. *w*
  prefs: []
  type: TYPE_NORMAL
- en: Which command is used to start the `parted` utility?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. `part -ad`
  prefs: []
  type: TYPE_NORMAL
- en: B. `parted`
  prefs: []
  type: TYPE_NORMAL
- en: C. `part -ed`
  prefs: []
  type: TYPE_NORMAL
- en: D. `part`
  prefs: []
  type: TYPE_NORMAL
- en: Which option is used to display a partition table inside the `parted` utility?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. `display`
  prefs: []
  type: TYPE_NORMAL
- en: B. `parted`
  prefs: []
  type: TYPE_NORMAL
- en: C. `print`
  prefs: []
  type: TYPE_NORMAL
- en: D. `console`
  prefs: []
  type: TYPE_NORMAL
- en: Which option is used to mount a partition from the CLI?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. `mount /dev/sdb1`
  prefs: []
  type: TYPE_NORMAL
- en: B. `mnt /dev/sdb1`
  prefs: []
  type: TYPE_NORMAL
- en: C. `mt /dev/sdb1`
  prefs: []
  type: TYPE_NORMAL
- en: D. `mont /dev/sdb1`
  prefs: []
  type: TYPE_NORMAL
- en: Which command displays the UUID of the known partitions on the CLI?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. `blkid`
  prefs: []
  type: TYPE_NORMAL
- en: B. `df -h`
  prefs: []
  type: TYPE_NORMAL
- en: C. `du -h`
  prefs: []
  type: TYPE_NORMAL
- en: D. `mount`
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can get more info about the CentOS distributions such as installing, configuration
    best practices, and so on, by checking out the following: [https://www.centos.org](https://www.centos.org).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following website gives you a lot of useful tips and best practices from
    users in the Linux community, particularly for the Debian distributions such as
    Ubuntu: [https://askubuntu.com](https://askubuntu.com).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, this last link gives you general information that relates to various
    commands that work on both CentOS and Ubuntu. You can post your questions there,
    and other community members will respond: [https://www.linuxquestions.org](https://www.linuxquestions.org).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
