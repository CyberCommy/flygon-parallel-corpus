- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: According to GitHub, the largest repository for open source software, JavaScript
    is still the most popular programming language in the world. More projects are
    written in JavaScript than any other language. Even projects normally not associated
    with the web, such as machine learning and crypto currencies, often use JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: The JavaScript programming language is enormously powerful and capable, but
    in addition to the language, there are frameworks, including React and Node, that
    add to the language's capabilities, making it even better. On top of this, TypeScript
    has now become the standard for doing large JavaScript projects. It provides language
    features that make coding with JavaScript more productive and better suited for
    large applications.
  prefs: []
  type: TYPE_NORMAL
- en: Modern web development has advanced tremendously over the years. In the past,
    client code generally meant static HTML and CSS, with perhaps a tiny bit of JavaScript.
    And the backend was usually written in a completely different language, such as
    PHP or CGI scripts. However, it is now common to write the entire application,
    from client to server, using only JavaScript and its related frameworks. This
    ability to write our applications using only a single language provides enormous
    benefits during development. Furthermore, the robust and mature frameworks that
    are available make full stack programming in JavaScript competitive with any other
    platform.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we will learn to use the power of JavaScript to build complete
    full stack web applications. We will augment this power with TypeScript, another
    powerful top-ten language. Then, using frameworks such as React, Redux, Node,
    Express, and GraphQL, we will build a realistic, fully functional best-practices
    web application that will give you all the knowledge you need in order to build
    modern full stack web applications. And once our application is complete, we'll
    deploy it to AWS cloud services, the world's most popular and feature-rich cloud
    services provider.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The book is for web developers who want to go beyond front-end web development
    and enter the world of full-stack web development by learning about modern web
    technologies and how they come together. A good understanding of JavaScript programming
    is required before getting started with this web development book.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B15508_01_Final_JC_ePub.xhtml#_idTextAnchor017), *Understanding
    TypeScript*, explains what TypeScript is and what makes it ideal for use in large
    application development.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B15508_02_Final_JC_ePub.xhtml#_idTextAnchor025), *Exploring TypeScript*,
    dives deep into TypeScript. We''ll explore its features, including static typing,
    and why these features are an improvement over JavaScript. We''ll also look at
    application design with object-oriented programming and how TypeScript features
    enable this important programming paradigm.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B15508_03_Final_JC_ePub.xhtml#_idTextAnchor052), *Building Better
    Apps with ES6+ Features*, reviews the important features of JavaScript that every
    developer needs to know. We''ll focus on the latest features added in ES6 and
    beyond.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B15508_04_Final_JC_ePub.xhtml#_idTextAnchor072), *Learning Single-Page
    Application Concepts and How React Enables Them*, explains how websites are built
    and focuses on single-page application-style apps. We''ll then introduce React
    and how React is used to create a single-page application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B15508_05_Final_JC_ePub.xhtml#_idTextAnchor081), *React Development
    with Hooks*, dives deep into React. We''ll learn about the limitations of the
    older class style of writing React applications, as well as learn about Hooks
    and functional components and how they are an improvement on the older class style.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B15508_06_Final_JC_ePub.xhtml#_idTextAnchor091), *Setting Up
    Our Project Using create-react-app and Testing with Jest*, describes the modern
    methods used for developing React applications. This includes the standard for
    creating React projects, `create-react-app`, and client-side testing with Jest
    and testing-library.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B15508_07_Final_JC_ePub.xhtml#_idTextAnchor110), *Learning Redux
    and React Router*, covers Redux and React Router to help us build our React application.
    These two frameworks have been the go-to frameworks for managing state and routing
    almost since React''s inception.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B15508_08_Final_JC_ePub.xhtml#_idTextAnchor122), *Learning Server-Side
    Development with Node.js and Express*, covers Node and Express. Node is the underlying
    runtime that makes JavaScript server apps possible. Express is the framework around
    Node that makes it easy to build powerful server-side apps using Node.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B15508_09_Final_JC_ePub.xhtml#_idTextAnchor139), *What is GraphQL?*,
    reviews what GraphQL is and how it uses data schemas to help build a web API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B15508_10_Final_JC_ePub.xhtml#_idTextAnchor147), *Setting Up
    an Express Project with TypeScript and GraphQL Dependencies*, explains how to
    create a production quality, server-side project using TypeScript, Express, GraphQL,
    and Jest for testing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B15508_11_Final_JC_ePub.xhtml#_idTextAnchor167), *What We Will
    Learn – Online Forum Application*, discusses the application we will be building.
    We will review its features and how building such an app will help us learn about
    web development in more detail.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B15508_12_Final_JC_ePub.xhtml#_idTextAnchor179), *Building the
    React Client for Our Online Forum Application*, explains how to start coding the
    client side of our application with React. We will use functional components,
    Hooks, and Redux to begin building our screens.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B15508_13_Final_JC_ePub.xhtml#_idTextAnchor208), *Setting Up
    Session State Using Express and Redis*, explores what session state is and how
    to create a session for our server using Redis, the world''s most powerful in-memory
    datastore. We also begin coding our server using Express.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B15508_14_Final_JC_ePub.xhtml#_idTextAnchor216), *Setting Up
    Postgres and Repository Layer with TypeORM*, explains how to create a database
    for our application in Postgres and how to access it using a powerful design technique
    called Repository Layer.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B15508_15_Final_JC_ePub.xhtml#_idTextAnchor222), *Adding a GraphQL
    Schema – Part I*, begins the integration of GraphQL into our application. We will
    build our schema and add our queries and mutations. We will also begin adding
    our GraphQL Hooks to our React frontend.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 16*](B15508_16_Final_JC_ePub.xhtml#_idTextAnchor254), *Adding a GraphQL
    Schema – Part II*, completes our application by finishing the work of integrating
    GraphQL into both our client and server.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 17*](B15508_17_Final_JC_ePub.xhtml#_idTextAnchor259), *Deploying
    an Application to AWS*, takes our finished application and deploys it to AWS cloud
    services. We will use Ubuntu Linux and NGINX to host our server and client code.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You should have a year or more of programming experience in at least one modern
    language, along with some basic knowledge of building applications, although this
    does not have to be for the web.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Preface_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This book will provide step-by-step instructions on using or installing these
    dependencies. However, this list does give some idea of what will be needed. Application
    source code will be for the final completed version of the application. The book
    will include any intermediate code.
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, you should always endeavor to type the code yourself as it will help
    you remember both the code and give you experience of what to do when things go
    wrong.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Full-Stack-React-TypeScript-and-Node](https://github.com/PacktPublishing/Full-Stack-React-TypeScript-and-Node).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "Create a new file in the `src` folder called `Home.tsx`
    and add the following code."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "Select **System info** from the **Administration** panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
