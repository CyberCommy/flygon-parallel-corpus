- en: Chapter 3. WLAN Reconnaissance
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we are going to introduce the basic concepts behind wireless
    **LANs** (**Local Area Networks**) and see how to carry out the reconnaissance
    and information gathering phase of our penetration test.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter deals with wireless networks scanning and information gathering,
    enumerating visible and hidden networks, identifying the security protocols used,
    their possible vulnerabilities and the connected clients. The topics covered are
    as follows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to 802.11 standard and wireless LAN
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to wireless scanning
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless scanning with `airodump-ng`
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless scanning with Kismet
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to 802.11 standard and wireless LAN
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before diving into the hands-on part, it is worth recalling the basic concepts
    of the 802.11 standard on which wireless local area networks are based.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: The 802.11 is the second layer (link layer) standard for implementing wireless
    LAN developed by the IEEE. Devices and networks that use the 802.11 standard are
    commonly known as **Wi-Fi**, a trademark of the **Wi-Fi Alliance**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: There have been subsequent specifications of the standard over the time, the
    main ones are 802.11a, 802.11b, 802.11g, and 802.11n.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: 802.11a operates on the 5 GHz frequency range while 802.11b/g on the 2.4 GHz
    frequency range, which is by far the most used by Wi-Fi networks nowadays. 802.11n
    supports both these frequency bands and is backward compatible with the other
    802.11 specifications.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: The range of the Wi-Fi signal depends on the standard used, on the power of
    the transmitting device and on the presence of physical obstacles and radio interferences.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: For common Wi-Fi devices, it typically varies from a maximum of 20-25 meters
    indoors to 100 meters and more outdoors.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: The maximum throughput, that is, the maximum data rate, of the 802.11 standard
    varies from the 11 Mbps of the 802.11a/b standards to the 600 Mbps of the 802.11n
    standard.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Each frequency band is subdivided into multiple channels, which are subsets
    that include smaller frequency ranges. The 2.4 GHz band is subdivided into 14
    distinct channels, but not all of them are always used. Most of the countries
    typically allow only a subset of these channels, while some countries allow all
    the channels.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: For example, United States allows channels from 1 to 11, while Japan allows
    all 14 channels. Indeed, every country has established its own *regulatory domain*
    (*regdomain*), a set of rules that defines the radio spectrum allocation for wireless
    transmission. The regulatory domains also define the maximum transmit power allowed.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**About Wi-Fi channels**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: To get more information about Wi-Fi channels and regulatory domains, refer to
    the resource on Wikipedia at [https://en.wikipedia.org/wiki/List_of_WLAN_channels](https://en.wikipedia.org/wiki/List_of_WLAN_channels).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 802.11 frames, types, and subtypes
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A 802.11 frame is composed of the **MAC header**, **Payload**, and **Frame
    Check Sequence** (**FCS**) sections, as shown in the following diagram:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '![802.11 frames, types, and subtypes](img/B04527_03_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
- en: 'The MAC header section is divided into various fields, among which are the
    **Type** and **Subtype** fields. The 802.11 standard defines three different types
    of frames:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '**Management frames**: These frames coordinate communication between access
    points and clients on a wireless LAN. Management frames include the following
    subtypes:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Beacon frames**: These are used to announce the presence and the basic configuration
    of an access point (AP).'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Probe request frames**: These are sent by the clients to test for the presence
    of APs or a specific AP to connect to.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Probe response frames**: These are sent by the AP in response to probe requests,
    containing information about the network.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authentication request frames**: These are sent by clients to begin the authentication
    phase prior to connect to an AP.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authentication response frames**: These are sent by the AP to accept or reject
    the authentication of the client.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Association request frames**: These are used by the client to associate with
    the AP. It must contain the SSID.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Association response frames**: These are sent by the AP to accept or reject
    the association with the client.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Control frames**: They are used to control the flow of data traffic on the
    network. The subtypes of control frames are **Request-to-send** (**RTS**) frames
    and **Clear-to-send** (**CTS**) frames, which provide an optional mechanism to
    reduce frame collisions and **Acknowledgment** (**ACK**) frames that are sent
    by the receiving station to confirm the correct receipt of a data frame.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data frames**: These contain the data transmitted over the network, with
    packets of higher-layer protocols encapsulated in the 802.11 frames.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next section, we are going to recall the structure and the building blocks
    of a wireless network.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Infrastructure mode and wireless access points
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Wi-Fi networks use the 802.11 standard in infrastructure mode. In this mode,
    devices called **access points** (**APs**) are used to connect the wireless client
    stations with a wired LAN or with the Internet. Access points could be seen as
    the analogue of switches for wired networks but they offer more functionalities
    such as network layer routing, DHCP, NAT, and advanced management capabilities
    through the remote console or the web administration panel.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: A wireless network formed by a single AP is called a **Basic Service Set** (**BSS**)
    while a network with multiple APs is known as an **Extended Service Set** (**ESS**).
    Each AP is identified by the **Basic Service Set ID** (**BSSID**), which typically
    corresponds to the MAC address of the wireless interface on the AP. A wireless
    LAN is instead identified by the **Service Set ID** (**SSID**) or **Extended Service
    Set ID** (**ESSID**), which is usually a readable string that is used as the name
    of the network.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![Infrastructure mode and wireless access points](img/B04527_03_02.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
- en: Access points periodically send out broadcast beacon frames to announce their
    presence. Typically, the beacons also contain the SSID of the AP, so that it is
    easily identifiable by clients, which can send authentication and association
    requests to the AP, to connect to the wireless network.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Wireless security
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data transmission on wireless networks is inherently less secure compared to
    wired networks regarding the physical media, because anyone nearby could sniff
    the traffic easily. Wireless LANs can use open authentication, such as free Wi-Fi
    hotspots do, and in this case no authentication is required from the clients and
    the traffic is not encrypted, making open networks totally insecure.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'Two security protocols that provide authentication and encryption to wireless
    LANs have been developed over the time: **Wired Equivalent Privacy** (**WEP**)
    and **Wi-Fi Protected Access** (**WPA**/**WPA2**).'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: The WEP and WPA/WPA2 authentication protocols and their relative cracking techniques
    will be discussed in [Chapter 4](ch04.html "Chapter 4. WEP Cracking"), *WEP Cracking*
    and [Chapter 5](ch05.html "Chapter 5. WPA/WPA2 Cracking"), *WPA/WPA2 Cracking*,
    respectively.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Wireless LAN scanning
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The process of thoroughly examining the radio waves to find wireless network
    is called *wireless scanning*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Wireless networks scanning has become quite popular, even among nontechnical
    people, also due to the so-called *wardriving* phenomenon. Wardriving is the activity
    of pinpointing wireless networks outdoors, usually driving a car and equipped
    with a laptop, a high-gain antenna and a GPS receiver.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two main types of scanning: **active** and **passive**.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Active scanning involves sending broadcast probe request packets and waiting
    for probe response packets from access points, taking note of the discovered ones.
    This is the standard method used by clients to identify wireless networks that
    are available nearby. The disadvantage of this method is that an access point
    can be configured to ignore the broadcast probe request packets and to exclude
    its SSID from the beacons it sends (**hidden AP**), so in this case, active scanning
    could not identify the network.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passive scanning provides better results in regard of wireless Reconnaissance
    and is the method adopted by wireless scanners. In passive scanning, we don't
    send broadcast probe requests. The wireless adapter is instead put in monitor
    mode so that it can sniff all the traffic going on a given channel of the Wi-Fi
    frequency range. The captured packets are analyzed to determine which access points
    are transmitting, from the BSSID contained in the beacons, and which clients are
    connected. This way, access points that are hidden from active scanning can also
    be revealed.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The tools for scanning wireless networks included in Kali Linux fall in the
    category of passive scanners. We cover the two most popular of these tools in
    this chapter, `airodump-ng` and `Kismet`, but also tools such as Fern Wi-Fi Cracker
    and Wifite can be used for this purpose. In the upcoming subsection, we see how
    to configure our wireless adapter in monitor mode.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the wireless adapter in monitor mode
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the previous chapter, we have seen how to put the wireless interface in monitor
    mode, to verify that it is compatible with packet sniffing. Now, we analyze the
    details of this procedure.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: 'Recall that we issued the `airmon-ng start wlan0` command, as shown in the
    following screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring the wireless adapter in monitor mode](img/B04527_03_03.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
- en: 'The `airmon-ng` tool also indicates us the chipset and the driver in use by
    the adapter. Notice that the `mon0` interface is created with monitor mode enabled,
    while the `wlan0` interface is in managed mode (which is the default mode for
    wireless adapters), as shown in the following output of the `iwconfig` command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring the wireless adapter in monitor mode](img/B04527_03_04.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
- en: 'The `mon0` interface is listening on all the channels. If we want to listen
    on a specific channel, we can issue the `airmon-ng start wlan0 <channel>` command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring the wireless adapter in monitor mode](img/B04527_03_05.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
- en: We see that another interface named `mon1` has been created in monitor mode.
    We can create multiple monitor mode interfaces related to a physical wireless
    interface. While running `airmon-ng`, we notice a warning telling us that some
    processes may interfere with other tools of the `Aircrack-ng` suite. To stop these
    processes, we can execute `airmon-ng check kill`.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: 'If we want to stop the `mon0` interface, we run the `airmon-ng stop mon0` command:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring the wireless adapter in monitor mode](img/B04527_03_06.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
- en: Now that the interface is in monitor mode, we can proceed with wireless scanning.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Wireless scanning with airodump-ng
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `airodump-ng` tool is one of the many tools included in the `Aircrack-ng`
    suite. It is capable of sniffing and capturing 802.11 frames, besides recording
    information relative to discovered access points and clients. `Airodump-ng` scans
    the Wi-Fi frequency band, hopping from one channel to another. To use it, after
    having put the wireless interface in monitor mode, as we saw previously, we run
    the `airodump-ng mon0` command. The following screenshot shows its output:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '![Wireless scanning with airodump-ng](img/B04527_03_07.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
- en: The first line shows the last association between an AP and a client, with the
    current channel, the elapsed running time, and the security protocol used. As
    we can notice in the preceding screenshot, the top half of the screen displays
    the APs while the bottom half displays the clients.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: 'For each AP found, the following information is shown:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于找到的每个AP，显示以下信息：
- en: The BSSID (MAC address)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BSSID（MAC地址）
- en: The Power Level (PWR) and the Receive Quality (RXQ) of the signal
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信号的功率级别（PWR）和接收质量（RXQ）
- en: The number of beacons sent and the number of captured data packets
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送的信标数量和捕获的数据包数量
- en: The channel (CH)
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信道（CH）
- en: The maximum speed supported (MB)
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持的最大速度（MB）
- en: The encryption algorithm (ENC), the cipher (CIPHER), and the authentication
    protocol (AUTH) used
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密算法（ENC）、密码（CIPHER）和使用的认证协议（AUTH）
- en: The wireless network name or SSID (ESSID)
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无线网络名称或SSID（ESSID）
- en: 'If `<length: number>` appears in the ESSID field, it means that the SSID is
    hidden and the AP only reveals its length (number of characters). If the number
    is 0 or 1, it means the AP does not reveal the actual length of the SSID.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '如果ESSID字段中出现`<length: number>`，这意味着SSID是隐藏的，AP只会透露其长度（字符数）。如果数字是0或1，则意味着AP不会透露SSID的实际长度。'
- en: In the bottom half, the `STATION` field is about the MAC address of the clients,
    which can be associated with an AP. If associated, the BSSID of the AP is shown
    in the relative field; otherwise, the `not associated` state is displayed.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在底部的`STATION`字段是关于客户端的MAC地址，它可以与AP关联。如果关联，则AP的BSSID显示在相关字段中；否则，显示`not associated`状态。
- en: The `Probes` field indicates the SSIDs of the APs the client is trying to connect
    to, if it is not currently associated. This can reveal a hidden AP when it responds
    to a probe request or to an association request from a client.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`Probes`字段指示客户端正在尝试连接的AP的SSID，如果它当前没有关联。当它对来自客户端的探测请求或关联请求做出响应时，这可以揭示一个隐藏的AP。'
- en: There are other methods to get a hidden SSID. We could force the connected clients
    to reassociate with the AP sending them de-authentication packets, as we will
    see in [Chapter 7](ch07.html "Chapter 7. Wireless Client Attacks"), *Wireless
    Client Attacks*. We could also analyze captured association and probe request/response
    packets with Wireshark to recover the SSID. We will cover packet dumping and analysis
    on [Chapter 4](ch04.html "Chapter 4. WEP Cracking"), *WEP Cracking* and [Chapter
    5](ch05.html "Chapter 5. WPA/WPA2 Cracking"), *WPA/WPA2 Cracking*, about WEP and
    WPA/WPA2 cracking.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 有其他方法可以获取隐藏的SSID。我们可以通过向连接的客户端发送去认证数据包来强制它们重新关联到AP，就像我们将在[第7章](ch07.html "第7章。无线客户端攻击")中看到的那样，*无线客户端攻击*。我们还可以使用Wireshark分析捕获的关联和探测请求/响应数据包来恢复SSID。我们将在[第4章](ch04.html
    "第4章。WEP破解")和[第5章](ch05.html "第5章。WPA/WPA2破解")中涵盖数据包转储和分析，关于WEP和WPA/WPA2的破解。
- en: We can write the output to a file using the `-w` or -`-write` options followed
    by the file name. `Airodump-ng` can save the output in various formats (`pcap`,
    `ivs`, `csv`, `gps`, `kismet`, and `netxml`), compatible with Kismet and packet
    analysis tools such as Wireshark.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`-w`或`--write`选项后跟文件名将输出写入文件。`Airodump-ng`可以以各种格式（`pcap`、`ivs`、`csv`、`gps`、`kismet`和`netxml`）保存输出，与Kismet和Wireshark等数据包分析工具兼容。
- en: '`Airodump-ng` also allows to select specific channels through the -`-channel`
    or `-c <ch_nr1,ch_nr2…..ch_nrN>` option:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`Airodump-ng`还允许通过`--channel`或`-c <ch_nr1,ch_nr2…..ch_nrN>`选项选择特定的信道：'
- en: '[PRE0]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Wireless scanning with airodump-ng](img/B04527_03_08.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![使用airodump-ng进行无线扫描](img/B04527_03_08.jpg)'
- en: Wireless scanning with Kismet
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Kismet进行无线扫描
- en: Kismet is a powerful passive scanner available for different platforms and is
    installed by default on Kali. It is not simply a scanner, but also a wireless
    frame analysis and intrusion detection tool.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Kismet是一个功能强大的被动扫描程序，可用于不同的平台，并且默认安装在Kali上。它不仅仅是一个扫描程序，还是一个无线帧分析和入侵检测工具。
- en: 'Kismet is composed of two main processes: `kismet_server` and `kismet_client`.
    The `kismet_server` component does the job of capturing, logging, and decoding
    wireless frames. Its configuration file is `kismet.conf` and it is located at
    `/etc/kismet/` on Kali Linux. The `kismet_client` frontend is a ncurses-based
    interface that displays the detected APs, statistics, and network details. To
    run it, we type `kismet` on the command line or navigate to **Kali Linux** | **Wireless
    Attacks** | **802.11 Wireless Tools** | **Kismet** from the **Application** Menu:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Kismet由两个主要进程组成：`kismet_server`和`kismet_client`。`kismet_server`组件负责捕获、记录和解码无线帧。它的配置文件是`kismet.conf`，位于Kali
    Linux的`/etc/kismet/`目录下。`kismet_client`前端是一个基于ncurses的界面，显示检测到的AP、统计信息和网络详细信息。要运行它，我们在命令行上键入`kismet`，或者从**应用程序**菜单中导航到**Kali
    Linux** | **无线攻击** | **802.11无线工具** | **Kismet**：
- en: '![Wireless scanning with Kismet](img/B04527_03_09.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![使用Kismet进行无线扫描](img/B04527_03_09.jpg)'
- en: 'As we can see, Kismet prompts us to start the server and we choose `Yes` and
    then `Start` in the following prompt. Then a message saying that no packet sources
    are defined could appear and we are asked to add a packet source:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，Kismet提示我们启动服务器，我们选择`Yes`，然后在随后的提示中选择`Start`。然后可能会出现一条消息，说没有定义数据包源，并要求我们添加一个数据包源：
- en: '![Wireless scanning with Kismet](img/B04527_03_10.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![使用Kismet进行无线扫描](img/B04527_03_10.jpg)'
- en: 'The packet source is our monitor mode interface `mon0` and we insert it in
    the `Intf` field in the subsequent prompt:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包源是我们的监视模式接口`mon0`，我们将其插入到随后的提示中的`Intf`字段中：
- en: '![Wireless scanning with Kismet](img/B04527_03_11.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![使用Kismet进行无线扫描](img/B04527_03_11.jpg)'
- en: 'The packet source can also be set in the `kismet.conf` file, in the `ncsource`
    directive, as we can see in the following screenshot:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包源也可以在`kismet.conf`文件中的`ncsource`指令中设置，如下截图所示：
- en: '![Wireless scanning with Kismet](img/B04527_03_12.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![使用Kismet进行无线扫描](img/B04527_03_12.jpg)'
- en: This is the recommended way to configure the packet source, avoiding to do it
    manually each time Kismet is started.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这是配置数据包源的推荐方法，避免每次启动Kismet时手动配置。
- en: 'We close the server console and the client interface is displayed. To access
    the menu on the top of the window, we press the *~* key and move over the entries
    with the arrow keys. Kismet interface and behavior are customizable by navigating
    to **Kismet** | **Preferences**:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们关闭服务器控制台，客户端界面显示出来。要访问窗口顶部的菜单，我们按下*~*键，并用箭头键移动到条目上。可以通过导航到**Kismet** | **Preferences**来自定义Kismet界面和行为：
- en: '![Wireless scanning with Kismet](img/B04527_03_13.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![使用Kismet进行无线扫描](img/B04527_03_13.jpg)'
- en: 'The screen is divided into the following main sections, from the top to the
    bottom: network list, client list, packet graph, status, and the general info
    side panel on the right. You can choose which sections to visualize in the **View**
    menu:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕从上到下分为以下主要部分：网络列表、客户端列表、数据包图、状态以及右侧的一般信息侧栏。您可以在**View**菜单中选择要可视化的部分：
- en: '![Wireless scanning with Kismet](img/B04527_03_14.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![使用Kismet进行无线扫描](img/B04527_03_14.jpg)'
- en: The Network List shows the detected networks in the default Auto-fit mode.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 网络列表以默认的自适应模式显示检测到的网络。
- en: 'To select a network and see its details and the clients connected, we need
    to change the sorting method to another, for example, using **Type** or **Channel**
    in the **Sort** menu. Then we can select a network on the list by clicking on
    it with the mouse:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择一个网络并查看其详细信息以及连接的客户端，我们需要将排序方法更改为另一个，例如在**Sort**菜单中使用**Type**或**Channel**。然后我们可以通过鼠标点击列表中的网络来选择一个网络：
- en: '![Wireless scanning with Kismet](img/B04527_03_15.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![使用Kismet进行无线扫描](img/B04527_03_15.jpg)'
- en: 'Navigate to **Windows** | **Network Details** for more detailed information,
    such as the BSSID, the channel, the manufacturer, the signal level, packet rate,
    and so on:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 转到**Windows** | **网络详细信息**以获取更详细的信息，例如BSSID、信道、制造商、信号级别、数据包速率等：
- en: '![Wireless scanning with Kismet](img/B04527_03_16.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![使用Kismet进行无线扫描](img/B04527_03_16.jpg)'
- en: If we select the **Clients** options, we can see the clients connected to the
    network, along with useful information such as the MAC address, the packets exchanged
    and the client device manufacturer.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选择**Clients**选项，我们可以看到连接到网络的客户端，以及有用的信息，如MAC地址、交换的数据包和客户端设备制造商。
- en: '![Wireless scanning with Kismet](img/B04527_03_17.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![使用Kismet进行无线扫描](img/B04527_03_17.jpg)'
- en: In case of networks with cloaked SSID, Kismet shows the string `<Hidden SSID>`
    in place of the network name. When a client tries to connect to the network, the
    AP sends the SSID in clear in the response packets, allowing Kismet to uncover
    it, as we have already seen with `Airodump-ng`.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对于隐藏SSID的网络，Kismet在网络名称的位置显示字符串`<Hidden SSID>`。当客户端尝试连接到网络时，AP会在响应数据包中清楚地发送SSID，允许Kismet揭示它，就像我们已经在`Airodump-ng`中看到的那样。
- en: 'Kismet generates the following log files, by default in the directory from
    which it has been started (but we can change this in the `logtemplate` directive
    in `kismet.conf`):'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Kismet默认在启动的目录中生成以下日志文件（但我们可以在`kismet.conf`中的`logtemplate`指令中更改这一点）：
- en: A packet capture file
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据包捕获文件
- en: Networks in text format (`.nettxt`)
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以文本格式（`.nettxt`）的网络
- en: Networks in XML format (`.netxml`)
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以XML格式（`.netxml`）的网络
- en: GPS data in XML format (`.gpsxml`)
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以XML格式（`.gpsxml`）的GPS数据
- en: The packet capture files can then be examined by Wireshark and can contain spectrum
    data, signal and noise levels, and GPS data.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以使用Wireshark检查数据包捕获文件，其中可能包含频谱数据、信号和噪声水平以及GPS数据。
- en: Indeed, Kismet, as well as `Airodump-ng`, can be integrated with a GPS receiver,
    through the `gpsd` daemon, to establish the coordinates of the networks, which
    could also be used to realize graphical maps with apposite tools, such as GISKismet.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，Kismet以及`Airodump-ng`可以通过`gpsd`守护进程与GPS接收器集成，以确定网络的坐标，这也可以用于使用适当的工具（如GISKismet）实现图形地图。
- en: Note
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**GISKismet**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**GISKismet**'
- en: GISKismet is a visualization tool for Kismet, included by default in Kali Linux
    that allows to import the `.netxml` files into a SQLite database, so that we can
    execute SQL queries on it, and to build graphs and maps of the networks. This
    tool could be very useful especially when scanning large networks with many access
    points. For more information, see the GISKismet website [http://trac.assembla.com/giskismet/wiki](http://trac.assembla.com/giskismet/wiki).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: GISKismet是Kismet的可视化工具，它默认包含在Kali Linux中，允许将`.netxml`文件导入SQLite数据库，以便我们可以对其执行SQL查询，并构建网络的图表和地图。当扫描具有许多接入点的大型网络时，此工具可能非常有用。有关更多信息，请参阅GISKismet网站[http://trac.assembla.com/giskismet/wiki](http://trac.assembla.com/giskismet/wiki)。
- en: Summary
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, we introduced the IEEE 802.11 standard and the typical wireless
    LAN deployment in infrastructure mode. Then we covered the basic concepts of wireless
    scanning and saw how to practically discover and gather information about wireless
    networks, using two of the most effective tools included in Kali Linux: `airodump-ng`
    and Kismet.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了IEEE 802.11标准和基础设施模式下的典型无线局域网部署。然后我们介绍了无线扫描的基本概念，并看到如何使用Kali Linux中包含的两种最有效的工具`airodump-ng`和Kismet来实际发现和收集关于无线网络的信息。
- en: In the next chapter, we will cover the WEP protocol, explaining why it is insecure,
    and see how it can be cracked using the tools provided with Kali Linux.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍WEP协议，解释为什么它是不安全的，并看看如何使用Kali Linux提供的工具来破解它。
