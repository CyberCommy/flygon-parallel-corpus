- en: Creating Services and User Authentication
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have a lot of work ahead of us. We will create many new
    things and refactor some things too. This is a great way to learn things in a
    regular and progressive way.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: We will do a deep dive into the operation and use of the HTTP module of Angular,
    known as `HttpClient`.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: In addition, we will see how to use interceptors and handle errors.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: The new version of Angular provides extremely useful tools for creating modern
    web applications, and in this chapter we will use many of these resources.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Dealing with models and classes
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the new `HttpModule` and `HttpModuleClient` to deal with XHR requests
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dealing with the `HttpErrorHandler` service
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to use authorization headers
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to protect application routes with route guards
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preparing the baseline code
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, we need to prepare our baseline code, a process very similar to what we
    did in the previous chapter. Let''s follow these steps:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Copy all the content from the `chapter-08` folder.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Rename the folder to `chapter-09`.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the `storage-db` folder.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, let's make some changes to the `docker-compose.yml` file so that it can
    fit a new database and server containers.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'Open `docker-compose.yml` and replace its content with the following code:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Note that we changed the container names, database, and MySQL user:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '`container_name: chapter-09-mysql`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`container_name: chapter-09-webserver`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`container_name: chapter-09-php-fpm`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MYSQL_DATABASE=chapter-09`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MYSQL_USER=chapter-09`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Add the changes we made to Git source control. Open your Terminal window and
    type the following command:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Dealing with models and classes
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Considered good practice by the community of Angular developers (and we consider
    it essential) is the creation of classes to use them as models. These are also
    known as **domain models**.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: We believe that creating classes to store our models in is a very important
    resource for creating large-scale applications or even small apps. This helps
    you keep your code organized.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Imagine if our project is much larger—if all the data was stored inside the
    plain objects, it would be hard for a new developer to find out where the data
    is stored.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: This is also a good reason to use classes to store our model information.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: Creating the User class model
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s start by creating the class to store our user information. By convention,
    we will name this file `user.ts`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Open your Terminal window.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Go to `./Client/src/app` and type the following command:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The previous command will create a new file in `./app/pages/auth/auth.ts`.
    Open this file and add the following code:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Creating the builders class model
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, let''s create the model for the builder and understand the operation of
    classes as models a little better. Before that, we will observe the return of
    the API when we make a GET to the `api/builders/1` endpoint, as we can see in
    the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/08cc1ca5-aaed-4f32-b5df-38b529601d7d.png)Builder-detail JSON result'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'In the previous screenshot, we have already included the bike information on
    the builders detail request. Let''s see how we can do this using the `builders`
    class:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: 'Still in your Terminal, type the following command:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The previous command will create a new file in `./app/pages/builders/builder.ts`.
    Open this file and add the following code:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that, in the previous code, we added an optional `bike` property and set
    its type to `Bike` model.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Creating the Bike class model
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, it''s time to create the bike model class, but first let''s check the
    JSON format that we have on the bike''s detail endpoint, `api/bikes/2`, as we
    can see in the following screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b1af74f8-64cb-4259-aae0-7dee28e2c45f.png)bike-detail JSON result'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we can note that the `bike-detail` result points to `garages`, `items`,
    `builder`, `user`, and `ratings`. For the sample application we are building,
    we will just use the builder and user model. Don''t worry about the others; the
    example we are going to use here is enough for understanding the model domain:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: 'Still in your Terminal, type the following command:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The previous command will create a new file in `./app/pages/bikes/bike.ts`.
    Open this file and add the following code:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note that, in the previous code, we are using all properties from the previous
    screenshot, including `items` and `ratings`, as optional properties with type
    `any`, as we didn't create models for these properties.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Using the new HttpClient to deal with XHR requests
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The vast majority of web applications nowadays use `XMLHttpRequest` (XHR) requests,
    and applications made with Angular are no different. For that, we have the `HTTPClient`
    module that replaced the old HTTP module in previous versions.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: In this session, we will understand how to use XHR requests inside our Angular
    services.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: It is highly recommended that you use Angular services to handle requests of
    this type so that the code of the component is more organized and easy to maintain.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: You can read more about XHR requests at [https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Creating the auth service
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s create the file that will store the necessary code for our authentication
    module:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: 'Still in your Terminal, type the following command:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The previous command will create a new folder and file in `./app/pages/auth/_services/auth.service.ts`.
    Now, let's add some pieces of code.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: 'Open `./app/pages/auth/_services/auth.service.ts` and add the following imports
    to the top of the file:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, we will use `HttpHeaders` to set the content type of our XHR requests.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code right after the import files:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The previous code sample will add a new header to our requests using `HttpHeaders`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: 'Inside the `AuthService` class, add the following code:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You must be asking yourself why `currentUser` is `public`and the others are
    `private`, right?
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Well, the `currentUser` property is `public` because we will access it in other
    files, as we will see later in this section. Therefore, the other properties will
    not be available outside the `AuthService`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s create our `constructor` function. Inside the `constructor` function,
    add the following code:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The `constructor` class will look like the following code:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note here that we are using the `HttpClient` and `Router` module, so it is time
    to write our functions to see this module in practice.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Creating the Register function
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s create the `Register` function. After the `constructor` function, let''s
    add the following code:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note that we are using the `pipe()`, `map()`, and `catchError()` functions from
    the **Reactive Extensions Library for JavaScript** (**RxJS**) that's included
    in Angular.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Before using the RxJS library, it was very common in AngularJS applications
    to use a library called Lodash to manipulate the results.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: You can read more about the RxJS library in the official documentation link [https://rxjs-dev.firebaseapp.com/api](https://rxjs-dev.firebaseapp.com/api).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: We are using the `pipe()` function which allows us to chain other functions,
    and this is pretty interesting when we are working with observables. Inside the
    `pipe()` function, this is exactly what we're doing with the `map()` and `catchError()`
    functions.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: In addition, we are using three more local functions called `setToken()`,  `getUser()`, and
    `handleError()`, which we will look at later.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind that function names are extremely important. Try to use self-explanatory
    names like we did in `setToken` and `getUser`.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Creating the Login function
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `Login` function follows almost the same structure as the `Register` function.
    The difference here is that we are just sending the email  address and password
    to the server.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code right after the `onRegister()` function:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note that we are saving the user token using the `setToken()` function and getting
    the user's details using the `getUser()` function. We will see this in detail
    later in this section.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: Creating the Logout function
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the Logout function, we will use a different approach. Instead of using
    the `map()` operator, we will use the `tap()` operator.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code right after the `onLogin()` function:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In the previous code, we just remove the token from `localStorage` and redirect
    the user to the home page. Now, it is time to create the local functions to deal
    with data.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Creating the setToken and getToken functions
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We are almost at the end of our authentication service, but we still need to
    create some helper functions that we will use in other application blocks.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Let's create the functions to handle the user token. Recreating call from our
    backend with Laravel that we are using the `jwt-auth` library to authenticate
    our users.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we are using `localStorage` to store the user's token. So,
    let's create two very simple functions to write and retrieve this token.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: 'Right after the `logout()` function, add the following block of code:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Creating the getUser function
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, we will see how to get the information of the logged-in user. Remember
    that our API has an endpoint that gives us the information of the logged-in user
    based on the authentication token.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: Let's see how we can do this in a simple way.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code right after the `getToken()` function:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The previous code receives the user's information from the API and applies this
    to the `currentUser` property.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: Creating the isAuthenticated function
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, we will create just one more function. This function will help us to identify
    if the user is logged in.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code right after the `getUser()` function:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now, we can use this information anywhere we want just by using the `AuthService.currentUser`
    and `AuthService.isAuthenticated` methods.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Creating the handleError function
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You should have noticed that the `login()` and `register()` functions have a
    `catchError` function that points to another function called the `handleError`. At
    this moment in time, we are going to create this function, which is in charge
    of showing the possible errors that our request may have.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code right after the **`getUser()`** function:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: We are logging the error messages to the browser console, just for this example.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: Creating the bikes service
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, we are going to create the service to hold all bike operations. Remember,
    for both bikes and builders, our service must have methods for listing, details,
    creation, updating, and deletion:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'Still in your Terminal, type the following command:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The previous command will create a new folder and file in `./app/pages/bikes/_services/bike.service.ts`.
    Now, let's add some pieces of code.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: 'Open `./app/pages/bikes/_services/bike.service.ts` and add the following imports
    to the top of the file:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Inside the `bikesService` class, add the following properties:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now, let''s create our `constructor` function. Inside the `constructor` function,
    add the following code:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Now, we are ready to create the functions of our bike service.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Creating CRUD functions
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we mentioned earlier, **CRUD** stands for `Create`, `Read`, `Update`, and
    `Delete`. We will add the code for the operations all at once, and then we will
    make the necessary comments.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following blocks of code right after the `constructor()` function:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The previous code does not have anything particularly different from what we
    used in our authentication service, except for the use of the template string:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: These are represented by back-tick ([PRE28]
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: /** Vote on bike */
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: 'voteOnBike (vote:  number, bike:  number):  Observable<any> {'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: const  rating  =  vote;
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.post(this.bikesUrl  +
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '`/${bike}/ratings`, {rating})'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: catchError(error  =>  this.handleError(error))
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: /** Error handler */
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'private  handleError(error:  HttpErrorResponse) {'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: if (error.error  instanceof  ErrorEvent) {
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: // A client-side error.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: console.error('An error occurred:',
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: error.error.message);
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: // The backend error.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: return  throwError(error);
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: // return a custom error message
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: return  throwError('Something bad happened; please try
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: again later.');
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: ng g service pages/builders/_services/builder
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: import { Injectable } from  '@angular/core';
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpClient, HttpParams, HttpErrorResponse } from
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '''@angular/common/http'';'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpHeaders } from  '@angular/common/http';
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: import { Observable, throwError } from  'rxjs';
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: import { catchError } from  'rxjs/operators';
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: // App import
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: import { environment } from
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '''../../../../environments/environment'';'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: import { Builder } from  '../builder';
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '@Injectable({'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: 'providedIn: ''root'''
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: export  class  BuildersService {
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: private  readonly  apiUrl  =  environment.apiUrl;
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: private  buildersUrl  =  this.apiUrl  +
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '''/builders'';'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: 'constructor(private  http:  HttpClient) { }'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: /** GET builders from builders endpoint */
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: 'getBuilders ():  Observable<Builder[]> {'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.get<Builder[]>
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: (this.buildersUrl)
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: catchError(error  =>
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: this.handleError(error))
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: /** GET builder detail from builder-detail endpoint
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: '*/'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: 'getBuilderDetail (id:  number):'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: Observable<Builder[]> {
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.get<Builder[]>(this.buildersUrl  +
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: '`/${id}`)'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: catchError(error  =>
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: this.handleError(error))
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: /** POST builder to builders endpoint */
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: 'addBuilder (builder:  Builder):  Observable<Builder>'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.post<Builder>
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: (this.buildersUrl, builder)
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: catchError(error  =>
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: this.handleError(error))
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: /** PUT builder to builders endpoint */
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: 'updateBuilder (builder:  Builder, id:  number):'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: Observable<Builder> {
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.put<Builder>
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: (this.buildersUrl  +  `/${id}`, builder)
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: catchError(error  =>
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: this.handleError(error))
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: /** DELETE builder builder endpoint */
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: 'deleteBuilder (id:  number):  Observable<Builder[]>'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.delete<Builder[]>
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: (this.buildersUrl  +  `/${id}`)
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: catchError(error  =>
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: this.handleError(error))
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: /** Error handler */
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: 'private  handleError(error:  HttpErrorResponse) {'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: if (error.error  instanceof  ErrorEvent) {
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: // A client-side error.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: console.error('An error occurred:',
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: error.error.message);
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: // The backend error.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: return  throwError(error);
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: // return a custom error message
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: return  throwError('Something bad happened;
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: please try again later.');
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: ng g service pages/shared/_services/httpHandleError
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: import { HttpErrorResponse } from  '@angular/common/http';
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: import { Observable, of } from  'rxjs';
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: export  type  HandleError  =
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: '<T> (operation?:  string, result?:  T) => (error:  HttpErrorResponse) =>  Observable<T>;'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: /** Pass the service name to map errors */
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: createHandleError  = (serviceName  =  '') => <T>
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: (operation  =  'operation', result  = {} as  T) =>
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: this.handleError(serviceName, operation, result)
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: handleError<T> (serviceName  =  '', operation  =
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: '''operation'', result  = {} as  T) {'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: 'return (response:  HttpErrorResponse):'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: Observable<T> => {
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: // Optionally send the error to a third part
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: error logging service
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: console.error(response);
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: // Show a simple alert if error
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: const  message  = (response.error
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: instanceof  ErrorEvent) ?
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: 'response.error.message  :'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: '`server returned code ${response.status}'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: with body "${response.error.error}"`;
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: // We are using alert just for example, on
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: real world avoid this pratice
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: alert(message);
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: // Keep running and returning a safe result.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: return  of( result );
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: import { HttpErrorHandler } from  './shared/_services/http-handle-error.service';
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'providers: ['
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: Title,
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: HttpErrorHandler,
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: '],'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: import { Injectable } from  '@angular/core';
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpClient, HttpParams, HttpErrorResponse } from
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: '''@angular/common/http'';'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpHeaders } from  '@angular/common/http';
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: import { Observable, throwError } from  'rxjs';
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: import { catchError } from  'rxjs/operators';
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: // App import
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: import { environment } from
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: '''../../../../environments/environment'';'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: import { Builder } from  '../builder';
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpErrorHandler, HandleError } from
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: '''../../../shared/_services/http-handle-error.service'';'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: '@Injectable({'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: 'providedIn: ''root'''
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: export  class  BuildersService {
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
- en: private  readonly  apiUrl  =  environment.apiUrl;
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: private  buildersUrl  =  this.apiUrl  +
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: '''/builders'';'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: 'private  handleError:  HandleError;'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
- en: constructor(
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: 'private  http:  HttpClient,'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: 'httpErrorHandler:  HttpErrorHandler ) {'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
- en: this.handleError  =
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: httpErrorHandler.createHandleError('BuildersService');
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: /** GET builders from builders endpoint */
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: 'getBuilders ():  Observable<Builder[]> {'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.get<Builder[]>
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
- en: (this.buildersUrl)
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('getBuilders', []))
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: /** GET builder detail from builder-detail endpoint
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: '*/'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: 'getBuilderDetail (id:  number):'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: Observable<Builder[]> {
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.get<Builder[]>
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: (this.buildersUrl  +  `/${id}`)
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('getBuilderDetail', []))
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: /** POST builder to builders endpoint */
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: 'addBuilder (builder:  Builder):  Observable<Builder> {'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.post<Builder>
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: (this.buildersUrl, builder)
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('addBuilder', builder))
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
- en: /** PUT builder to builders endpoint */
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
- en: 'updateBuilder (builder:  Builder, id:  number):'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
- en: Observable<Builder> {
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.put<Builder>(this.buildersUrl
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
- en: +  `/${id}`, builder).pipe(
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('updateBuilder', builder))
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: /** DELETE builder builder endpoint */
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
- en: 'deleteBuilder (id:  number):  Observable<Builder[]> {'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.delete<Builder[]>
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: (this.buildersUrl  +  `/${id}`)
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('deleteBuilder'))
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: this.handleError = httpErrorHandler.createHandleError ('BuildersService');
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: import { Injectable } from  '@angular/core';
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpClient, HttpParams, HttpErrorResponse } from  '@angular/common/http';
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpHeaders } from  '@angular/common/http';
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
- en: import { Observable, throwError } from  'rxjs';
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: import { catchError } from  'rxjs/operators';
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
- en: // App import
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
- en: import { environment } from  '../../../../environments/environment';
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: import { Bike } from  '../bike';
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpErrorHandler, HandleError } from  '../../../shared/_services/http-handle-error.service';
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
- en: '@Injectable({'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
- en: 'providedIn: ''root'''
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
- en: export  class  BikesService {
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
- en: private  readonly  apiUrl  =  environment.apiUrl;
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
- en: private  bikesUrl  =  this.apiUrl  +  '/bikes';
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
- en: 'private  handleError:  HandleError;'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
- en: constructor(
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
- en: 'private  http:  HttpClient,'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
- en: 'httpErrorHandler:  HttpErrorHandler ) {'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
- en: this.handleError  =
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
- en: httpErrorHandler.createHandleError('BikesService');
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
- en: /** GET bikes from bikes endpoint */
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: 'getBikes ():  Observable<Bike[]> {'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.get<Bike[]>(this.bikesUrl)
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('getBikes', []))
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: /** GET bike detail from bike-detail endpoint */
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: 'getBikeDetail (id:  number):  Observable<Bike[]> {'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.get<Bike[]>(this.bikesUrl  +
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
- en: '`/${id}`)'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('getBikeDetail', []))
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
- en: /** POST bike to bikes endpoint */
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
- en: 'addBike (bike:  Bike):  Observable<Bike> {'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.post<Bike>(this.bikesUrl,
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
- en: bike)
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('addBike', bike))
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
- en: /** PUT bike to bikes endpoint */
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
- en: 'updateBike (bike:  Bike, id:  number):'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
- en: Observable<Bike> {
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.put<Bike>(this.bikesUrl  +
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
- en: '`/${id}`, bike)'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('updateBike', bike))
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: /** DELETE bike bike endpoint */
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
- en: 'deleteBike (id:  number):  Observable<Bike[]> {'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.delete<Bike[]>(this.bikesUrl
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
- en: +  `/${id}`)
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('deleteBike'))
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
- en: /** Vote on bike */
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
- en: 'voteOnBike (vote:  number, bike:  number):'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
- en: Observable<any> {
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
- en: const  rating  =  vote;
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
- en: return  this.http.post(this.bikesUrl  +
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
- en: '`/${bike}/ratings`, {rating})'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
- en: .pipe(
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
- en: catchError(this.handleError('voteOnBike', []))
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: ng g service shared/_services/http-interceptor
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: import { Injectable, Injector } from  '@angular/core';
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpEvent, HttpHeaders, HttpInterceptor, HttpHandler, HttpRequest,
    HttpErrorResponse, HttpResponse } from  '@angular/common/http';
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
- en: import { Observable } from  'rxjs';
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
- en: import { catchError, map, tap } from  'rxjs/operators';
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
- en: import { Router } from  '@angular/router';
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
- en: // App import
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
- en: import { AuthService } from
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
- en: '''../../pages/auth/_services/auth.service'';'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
- en: '@Injectable()'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
- en: export  class  AppHttpInterceptorService  implements
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
- en: HttpInterceptor {
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
- en: 'constructor(public  auth:  AuthService, private  router:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
- en: Router ) { }
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
- en: 'intercept(req:  HttpRequest<any>, next:  HttpHandler):'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
- en: Observable<HttpEvent<any>> {
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
- en: console.log('interceptor running');
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
- en: // Get the token from auth service.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
- en: const  authToken  =  this.auth.getToken();
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
- en: if (authToken) {
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
- en: // Clone the request to add the new header.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
- en: const  authReq  =  req.clone(
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
- en: '{ headers:'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
- en: req.headers.set('Authorization', `Bearer ${authToken}`)}
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
- en: console.log('interceptor running with new
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
- en: headers');
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
- en: // send the newly created request
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
- en: return  next.handle(authReq).pipe(
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
- en: 'tap((event:  HttpEvent<any>) => {'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
- en: if (event instanceof
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
- en: HttpResponse) {
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
- en: // Response wiht
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
- en: HttpResponse type
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
- en: console.log('TAP function',
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
- en: event);
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
- en: '}, (err:  any) => {'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
- en: console.log(err);
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
- en: if (err  instanceof
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
- en: HttpErrorResponse) {
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
- en: if (err.status ===  401) {
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
- en: localStorage.removeItem('token');
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
- en: this.router.navigate(['/']);
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
- en: console.log('interceptor without changes');
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: return  next.handle(req);
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: const  authReq  =  req.clone(
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
- en: '{ headers: req.headers.set(''Authorization'', `Bearer ${authToken}`)}'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: this.router.navigate(['/']);
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: import { AppHttpInterceptorService } from  './shared/_services/app-http-interceptor.service';
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '{'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
- en: 'provide: HTTP_INTERCEPTORS,'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
- en: 'useClass: AppHttpInterceptorService ,'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
- en: 'multi: true'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: import { BrowserModule, Title } from  '@angular/platform-browser';
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
- en: import { NgModule } from  '@angular/core';
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpClientModule, HTTP_INTERCEPTORS } from  '@angular/common/http';
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
- en: import { AppRoutingModule } from  './app-routing.module';
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
- en: import { ServiceWorkerModule } from  '@angular/service-worker';
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
- en: // Application modules
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
- en: import { AppComponent } from  './app.component';
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
- en: import { environment } from  '../environments/environment';
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
- en: import { HomeModule } from  './pages/home/home.module';
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
- en: import { BikesModule } from  './pages/bikes/bikes.module';
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
- en: import { BuildersModule } from  './pages/builders/builders.module';
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
- en: import { AuthModule } from  './pages/auth/auth.module';
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
- en: import { NavComponent } from  './layout/nav/nav.component';
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
- en: import { HttpErrorHandler } from  './shared/_services/http-handle-error.service';
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
- en: import { AppHttpInterceptorService } from  './shared/_services/app-http-interceptor.service';
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
- en: '@NgModule({'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
- en: 'declarations: ['
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
- en: AppComponent,
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
- en: NavComponent
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
- en: '],'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
- en: 'imports: ['
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
- en: BrowserModule,
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
- en: AppRoutingModule,
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
- en: HttpClientModule,
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
- en: HomeModule,
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
- en: BikesModule,
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
- en: BuildersModule,
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
- en: AuthModule,
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
- en: 'ServiceWorkerModule.register(''/ngsw-worker.js'', { enabled: environment.production
    })'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
- en: '],'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
- en: 'providers: ['
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
- en: Title,
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
- en: HttpErrorHandler,
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
- en: 'provide: HTTP_INTERCEPTORS,'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
- en: 'useClass: AppHttpInterceptorService ,'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
- en: 'multi: true'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
- en: '],'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
- en: 'bootstrap: [AppComponent]'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
- en: export  class  AppModule { }
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: /**
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
- en: '* Protect update and delete methods, only for authenticated'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
- en: users.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
- en: '*'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
- en: '* @return  Unauthorized'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
- en: '*/'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
- en: public  function  __construct()
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
- en: $this->middleware('auth:api')->except(['index']);
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: ng g guard pages/auth/_guards/auth
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-565
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: import { AuthService } from  '../_services/auth.service';
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: constructor(
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
- en: 'private  router:  Router,'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
- en: 'private  auth:  AuthService) {}'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: if (this.auth.isAuthenticated()) {
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
- en: // logged in so return true
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
- en: return  true;
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
- en: // not logged in so redirect to login page with the return url
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
- en: 'this.router.navigate([''/login''], { queryParams: { returnUrl: state.url }});'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: import { AuthGuard } from '../auth/_guards/auth.guard';
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '{'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
- en: 'path: '':id'','
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
- en: 'component: BikeDetailComponent,'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
- en: 'canActivate: [AuthGuard]'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
- en: '```'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
- en: Voilà! Our `bike-detail` route is now protected.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-588
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, we are very close to seeing our application in a working state. However,
    we still need to perform some steps that we will look at in the following chapters.
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们离看到我们的应用程序处于工作状态非常接近。然而，我们仍然需要执行一些步骤，我们将在接下来的章节中进行讨论。
- en: In the meantime, we have learned some important points for building modern web
    applications, such as creating services to handle XHR requests, learning how to
    protect our routes, as well as creating a route interceptor and a service for
    handling errors.
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，我们已经学习了一些构建现代Web应用程序的重要要点，比如创建服务来处理XHR请求，学习如何保护我们的路由，以及创建路由拦截器和处理错误的服务。
- en: In the next chapter, we are going to delve deeply into how to use the services
    we have just created within our components, and we will also apply a visual layer
    to our application.
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨如何在我们的组件中使用我们刚刚创建的服务，并且我们还将为我们的应用程序应用一个视觉层。
