- en: Next Steps with Docker
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You've made it to the last chapter of this book, and you've stuck with it until
    the end! In this chapter, we will look at the Moby project and how you can contribute
    to Docker, as well as to the community. We will then finish this chapter with
    a quick overview of the Cloud Native Computing Foundation. Let's start by discussing
    the Moby Project.
  prefs: []
  type: TYPE_NORMAL
- en: The Moby Project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the announcements made at DockerCon 2017 was the Moby Project. When this
    project was announced, I had a few questions about what the project was from work
    colleagues, because on the face of it, Docker had appeared to have released another
    container system.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, how did I answer? After a few days of getting puzzled looks, I settled
    on the following answer:'
  prefs: []
  type: TYPE_NORMAL
- en: <q>Moby Project is the collective name for an open source project that collects
    several libraries used to build container-based systems. The project comes with
    its own framework for combining these libraries into a usable system and also
    a reference system called Moby Origin; think of this as a "Hello World" that allows
    you to build and even customize your own Docker.</q>
  prefs: []
  type: TYPE_NORMAL
- en: 'One of two things happened after I gave this answer; typically, the response
    was *but what does that actually mean?*. I responded by saying:'
  prefs: []
  type: TYPE_NORMAL
- en: <q>Moby Project is the open source playground for Docker (the company) and anyone
    else who wishes to contribute to the project to develop new and extend existing
    features to the libraries and frameworks that go to make up container-based systems
    in a public forum. One output of this is the bleeding-edge container system called
    Moby Origin and the other is Docker (the product), which is delivered as the open
    source community edition or the commercially supported enterprise edition.</q>
  prefs: []
  type: TYPE_NORMAL
- en: 'For anyone who asks for an example of a similar project that combines a bleeding-edge
    version, a stable open source release, and an enterprise supported version, I
    explain what Red Hat do with Red Hat Enterprise Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: <q>Think of it like the approach Red Hat have taken with Red Hat Enterprise
    Linux. You have Fedora, which is the *b*</q>*leeding edge version development
    playground for Red Hat's operating system developers to introduce new packages,
    features, and also to remove old, outdated components. Typically, Fedora is a
    year or two ahead of the features found in Red Hat Enterprise Linux, which is
    the commercially supported long-term release based on the work done in the Fedora
    project; as well as this release, you also have the community support version
    in the form of CentOS.*
  prefs: []
  type: TYPE_NORMAL
- en: You may be thinking to yourself, *why has this only been mentioned right at
    the very end of this book?* Well, at the time of writing this book, the project
    is still very much in its infancy. In fact, work is still ongoing to transition
    all of the components required for the Moby Project from the main Docker projects.
  prefs: []
  type: TYPE_NORMAL
- en: The only real, usable component of the project as I write this is *LinuxKit*,
    which is the framework that pulls together all of the libraries and outputs a
    bootable system that is capable of running containers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Due the extremely fast pace of this project, I am not going to give any examples
    on how to use LinuxKit or go into any more detail about Moby Project as it is
    likely to change by the time you read this; instead, I would recommend bookmarking
    the following pages to keep up-to-date with this exciting development:'
  prefs: []
  type: TYPE_NORMAL
- en: The project's main website, at: [https://mobyproject.org/](https://mobyproject.org/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moby Project GitHub pages, at: [https://github.com/moby/](https://github.com/moby/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Moby Project Twitter account, a good source of news and links to how-to's,
    at: [https://twitter.com/moby/](https://twitter.com/moby/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The home of LinuxKit, which contains examples and instructions on how to get
    started, at: [https://github.com/linuxkit/](https://github.com/linuxkit/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contributing to Docker
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, you want to help contribute to Docker? Do you have a great idea that you
    would like to see in Docker or one of its components? Let's get you the information
    and tools that you need to do that. If you aren't a programmer-type person, there
    are other ways you can help contribute as well. Docker has a massive audience,
    and another way you can help contribute is to help with supporting other users
    with their services. Let's learn how you can do that as well.
  prefs: []
  type: TYPE_NORMAL
- en: Contributing to the code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the biggest ways you can contribute to Docker is helping with the Docker
    code. Since Docker is all open source, you can download the code to your local
    machine and work on new features and present them as pull requests back to Docker.
    They will then get reviewed on a regular basis, and if they feel what you have
    contributed should be in the service, they will approve the pull request. This
    can be very humbling when it comes to knowing that something you have written
    has been accepted.
  prefs: []
  type: TYPE_NORMAL
- en: 'You first need to know how you can get set up to contribute: this is pretty
    much everything for Docker ([https://github.com/docker/](https://github.com/docker/))
    and Moby Project ([https://github.com/moby/](https://github.com/moby/)), which
    we spoke about in the previous section. But how do we go about getting set up
    to help contribute? The best place to start is by following the guide that can
    be found on the official Docker documentation at [https://docs.docker.com/project/who-written-for/](https://docs.docker.com/project/who-written-for/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'As you may have already guessed, you do not need much to get a development
    environment up-and-running as a lot of development is done within containers.
    For example, other than having a GitHub account, Docker lists the following three
    pieces of software as the bare minimum:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Git: [https://git-scm.com/](https://git-scm.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Make: [https://www.gnu.org/software/make/](https://www.gnu.org/software/make/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Docker: If you made it this far, you shouldn''t need a link'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can find more details on how to prepare your own Docker development for
    Mac and Linux at: [https://docs.docker.com/opensource/project/software-required/](https://docs.docker.com/opensource/project/software-required/)
    and for Windows users at: [https://docs.docker.com/opensource/project/software-req-win/](https://docs.docker.com/opensource/project/software-req-win/).
  prefs: []
  type: TYPE_NORMAL
- en: To be a successful open source project, there have to be some community guidelines.
    I recommend reading through the excellent quick start guide that can be found
    at: [https://docs.docker.com/opensource/code/](https://docs.docker.com/opensource/code/)
    as well as the more detailed contribution workflow documentation at: [https://docs.docker.com/opensource/workflow/make-a-contribution/](https://docs.docker.com/opensource/workflow/make-a-contribution/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Docker has a code of conduct that covers both how their staff and community
    as a whole should act. It is open source and licensed under the Creative Commons
    Attribution 3.0, and states the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <q>![](Images/9c145a15-4ca2-48f0-a6c4-f4a53e17d612.png)</q>
  prefs: []
  type: TYPE_NORMAL
- en: The full code of conduct can be found at: [https://github.com/docker/code-of-conduct/](https://github.com/docker/code-of-conduct/).
  prefs: []
  type: TYPE_NORMAL
- en: Offering Docker support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can also contribute to Docker by other means beyond contributing to the
    Docker code or feature sets. You can help by using the knowledge you have obtained
    to help others in their support channels. The community is very open and someone
    is always willing to help. I find it of great help when I run into something and
    I am found scratching my head. It's also nice to get help but to also contribute
    back to others; this is a nice give and take. It also is a great place to harvest
    ideas for you to use. You can see what questions others are asking based on their
    setups and it could spur ideas that you may want to think about using in your
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: You can also follow the GitHub issues that are brought up regarding the services.
    These could be feature requests and how Docker may implement them, or they could
    be issues that have cropped up through the use of services. You can help test
    out the issues that others are experiencing to see whether you can replicate the
    issue or whether you find a possible solution to their issue.
  prefs: []
  type: TYPE_NORMAL
- en: Docker has a very active community that can be found at: [https://community.docker.com/](https://community.docker.com/);
    here, you will not only be able to see the latest community news and events, but
    you will also be able to chat with Docker users and developers in their Slack
    channels. At the time of writing this book, there are over 80 channels covering
    all sorts of topics such as Docker for Mac, Docker for Windows, Alpine Linux,
    Swarm, Storage, and Network to name but a few, with hundreds of active users at
    any one time.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, there are also the Docker forums, which can be found at: [https://forums.docker.com/](https://forums.docker.com/).
    These are a good source if you want to search for topics/problems or keywords.
  prefs: []
  type: TYPE_NORMAL
- en: Other contributions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are other ways to contribute to Docker as well. You can do things such
    as promoting the service and gathering interest at your institution. You can start
    this communication through your own organization's means of communications, whether
    that be email distribution lists, group discussions, IT roundtables, or regularly
    scheduled meetings.
  prefs: []
  type: TYPE_NORMAL
- en: You can also schedule meetups within your organization to get people talking.
    These meetups are designed to not only include your organization, but the city
    or town members that your organization is in, in order to get more widespread
    communication and promotion of the services.
  prefs: []
  type: TYPE_NORMAL
- en: You can search whether there are already meetups in your area by visiting: [https://www.docker.com/community/meetup-groups/](https://www.docker.com/community/meetup-groups/).
  prefs: []
  type: TYPE_NORMAL
- en: The Cloud Native Computing Foundation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We discussed The Cloud Native Computing Foundation briefly in [Chapter 9](d3b2dadf-ed17-460b-8d06-ac7edc133ba6.xhtml),* Docker
    and Kubernetes*. The Cloud Native Computing Foundation, or CNCF, for short, was
    founded to provide a vendor-neutral home for projects that allow you to manage
    your containers and microservices architectures.
  prefs: []
  type: TYPE_NORMAL
- en: Its membership includes Docker, Amazon Web Services, Google Cloud, Microsoft
    Azure, Red Hat, Oracle, VMWare, and Digital Ocean to name a few. In June 2018,
    the Linux Foundation reported that CNCF had 238 members. These members not only
    contribute projects but also engineering time, code, and resources.
  prefs: []
  type: TYPE_NORMAL
- en: Graduated projects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At the time of writing this book, there are two graduated projects, both of
    which we have discussed in previous chapters. These are arguably also the two
    most well-known out of the projects that are maintained by the foundation, and
    they are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Kubernetes** ([https://kubernetes.io](https://kubernetes.io)): This was the
    first project to be donated to the Foundation. As we have already mentioned, it
    was originally developed by Google and now counts more than 2,300 contributors
    across members of the foundation as well as the open source community.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Prometheus** ([https://prometheus.io](https://prometheus.io)): This project
    was donated to the foundation by SoundCloud. As we saw in [Chapter 13](2a59899d-85fa-4a6f-960f-15f77654396d.xhtml), *Docker
    Workflows*, it is a real-time monitoring and alerting system that''s backed by
    a powerful time-series database engine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To graduate, a project must have done the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Adopted the CNCF code of conduct, which is similar to the one published by Docker.
    The full code of conduct can be found at [https://github.com/cncf/foundation/blob/master/code-of-conduct.md](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Obtained a **Linux Foundation** (**LF**) **Core Infrastructure Initiative**
    (**CII**) Best Practices badge, which demonstrates that the project is being developed
    using an established set of best practices – the full criteria of which can be
    found at: [https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/criteria.md](https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/criteria.md).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Acquired at least two organizations with committers to the project.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defined the committer process and project governance publically via the `GOVERNANCE.md`
    and `OWNERS.md` files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Publically listed the projects adopters in an `ADOPTERS.md` file or by logos
    on the project's website.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Received a super majority vote from the **Technical Oversight Committee** (**TOC**).
    You can find out more about the committee at [https://github.com/cncf/toc](https://github.com/cncf/toc).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is also another project status, which is where the majority of projects
    currently are.
  prefs: []
  type: TYPE_NORMAL
- en: Incubating projects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Projects at the incubating stage should eventually have a graduated status.
    The following projects have all done the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Demonstrated that the project is in use by a minimum of three independent end
    users (not the originator of the project)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gained a healthy number of contributors, both internally and externally
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Demonstrated growth and a good level of maturity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The TOC is heavily involved in working with projects to ensure that the levels
    of activity are enough to meet the preceding criteria since the metrics can vary
    from project to project.
  prefs: []
  type: TYPE_NORMAL
- en: 'The current list of projects is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**OpenTracing** ([https://opentracing.io/](https://opentracing.io/)): This
    is the first of two tracing projects which now come under the CNCF umbrella. Rather
    than being an application, you download and use it is a set of libraries and APIs
    which let you build in behavioral tracking and monitoring into your microservices-based
    applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fluentd** ([https://www.fluentd.org](https://www.fluentd.org)): This tool
    allows you to collect log data from a large number of sources and then route the
    logging data to a number of log management, database, archiving, and alerting
    systems such as Elastic Search, AWS S3, MySQL, SQL Server, Hadoop, Zabbix, and
    DataDog, to name a few.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**gRPC** ([https://grpc.io](https://grpc.io)): Like Kubernetes, gRPC was donated
    to the CNCF by Google. It is an open source, extendable, and performance optimized
    RPC framework, and is already in production at companies such as Netflix, Cisco,
    and Juniper Networks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Containerd** ([https://containerd.io](https://containerd.io)): We briefly
    mentioned Containerd in [Chapter 1](db23d482-1df4-41c2-af33-d38a98fc5a1c.xhtml),
    *Docker Overview*, as being one of the open source projects which Docker has been
    working on. It is a standard container runtime which allows developers to embed
    a runtime that can manage both Docker and also OCI compliant images in their platforms
    or applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rkt** ([https://github.com/rkt/rkt](https://github.com/rkt/rkt)): Rkt is
    an alternative to Docker''s container engine. Rather than using a daemon to manage
    containers on the host system, Rkt uses the command line to launch and manage
    containers. It was donated to the CNCF by CoreOS, who is now owned by Red Hat.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CNI** ([https://github.com/containernetworking](https://github.com/containernetworking)):
    CNI, which is short for Container Networking Interface, is again not something
    you download and use. Instead, it is a standard for network interfaces that''s
    designed to be embedded into container runtimes, such as Kubernetes, Rkt, and
    Mesos. Having a common interface and set of APIs allows more consistent support
    of advanced network functionality in these runtimes via third-party plugins and
    extensions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Envoy** ([https://www.envoyproxy.io](https://www.envoyproxy.io)): Originally
    created inside Lyft and in use by companies such as Apple, Netflix, and Google,
    Envoy is a highly optimized service mesh that provides load balancing, tracing,
    and observability of the database and network activity across your environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Jaeger** ([https://jaegertracing.io](https://jaegertracing.io)): This is
    the second tracing system in the list. Unlike OpenTracing, it is a fully distributed
    tracing system that was originally developed by Uber to monitor it extensive microservices
    environment. Now in use by companies such as Red Hat, it features a modern UI
    and native support for OpenTracing and various backend storage engines. It has
    been designed to integrate with other CNCF projects such as Kubernetes and Prometheus.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Notary** ([https://github.com/theupdateframework/notary](https://github.com/theupdateframework/notary)):
    This project was originally written by Docker and is an implementation of TUF,
    which we will cover next. It has been designed to allow developers to sign their
    container images by giving them a cryptographic tool which provides a mechanism
    to verify the provenance of their container images and content.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TUF** ([https://theupdateframework.github.io](https://theupdateframework.github.io)):
    **The Update Framework** (**TUF**) is a standard that allows software products,
    via the use of cryptographic keys, to protect themselves during installation and
    updates. It was developed by the NYU School of Engineering.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Vitess** ([https://vitess.io](https://vitess.io)): Vitess has been a core
    component of the MySQL database infrastructure of YouTube since 2011\. It is a
    clustering system that horizontally scales MySQL via sharding.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CoreDNS** ([https://coredns.io](https://coredns.io)): This is a small, flexible,
    extendablem and highly optimized DNS server that''s written in Go and designed
    from the ground up to run in an infrastructure that can be running thousands of
    containers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NATS** ([https://nats.io](https://nats.io)): Here, we have a messaging system
    that has been designed for environments running microservices or architectures
    supporting IoT devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Linkerd** ([https://linkerd.io](https://linkerd.io)): Built by Twitter, Linkerd
    is a service mesh that has been designed to scale and cope with tens of thousands
    of secure requests per second.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Helm** ([https://www.helm.sh](https://www.helm.sh)): Built for Kubernetes,
    Helm is a package manager that allows users to package their Kubernetes applications
    in an easily distributable format, and has quickly become a standard.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rook** ([https://rook.io](https://rook.io)): Currently, Rook is in its early
    stages of development, focusing on providing an orchestration layer for managing
    Ceph, Red Hat''s distributed storage system, on Kubernetes. Eventually, it will
    expand as to support other distributed blocks and object storage systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have used a few of these projects in various chapters of this book, and I
    am sure that other projects will be of interest to you as you look to solving
    problems such as routing to your containers and monitoring your application within
    your environment.
  prefs: []
  type: TYPE_NORMAL
- en: The CNCF landscape
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'CNCF provides an interactive map of all of the projects managed by them and
    their members, and can be found at [https://landscape.cncf.io/](https://landscape.cncf.io/).
    One of the key takeaways is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: <q>You are viewing 590 cards with a total of 1,227,036 stars, a market cap of
    $6.52T, and funding of $16.3B.</q>
  prefs: []
  type: TYPE_NORMAL
- en: While I am sure you will agree that these are some very impressive figures,
    what is the point of this? Thanks to the work of the CNCF, we have projects, such
    as Kubernetes, which are providing a standardized set of tools, APIs and approaches
    for working across multiple cloud infrastructure providers and also on-premise
    and bare metal services—providing the building blocks for you to create and deploy
    your own highly available, scalable, and performant container and microservice
    applications.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I hope that this chapter has given you an idea about the next steps you can
    take in your container journey. One of the things I have found is that while it
    is easy to simply use these services, you get a lot more out of it by becoming
    a part of the large, friendly, and welcoming communities of developers and other
    users, who are just like you, and have sprung up around the various software and
    projects.
  prefs: []
  type: TYPE_NORMAL
- en: This sense of community and collaboration has been further strengthened by the
    formation of the Cloud Native Computing Foundation. This has brought together
    large enterprises who, until just a few years ago, wouldn't have thought about
    collaborating in public with other enterprises who have been seen as their competitors
    on large-scale projects.
  prefs: []
  type: TYPE_NORMAL
