- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MQTT is the preferred IoT publish-subscribe lightweight messaging protocol.
    Python is definitely one of the most popular programming languages. It is open
    source, multiplatform, and you can use it to develop any kind of application.
    If you develop IoT, web applications, mobile apps, or a combination of these solutions,
    you must learn how MQTT and its lightweight messaging system works. The combination
    of Python and MQTT makes it possible to develop powerful applications that communicate
    with sensors, different devices, and other applications. Of course, it is extremely
    important to take security into account when working with this protocol.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Most of the time, when you work with complex IoT solutions coded in modern Python
    3.6, you will use different IoT boards that might use diverse operating systems.
    MQTT has its own specific vocabulary and different working modes. Learning MQTT
    is challenging, because it includes too many abstract concepts that require real-life
    examples to be easy to understand.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'This book will allow you to dive deep in to the latest version of the MQTT
    protocol: 3.1.1\. You will learn to work with the most recent Mosquitto MQTT server,
    command-line tools, and GUI tools to allow you to understand how everything works
    with MQTT and the possibilities that this protocol provides for your projects.
    You will learn security best practices and use them for a Mosquitto MQTT server.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Then, you will work with many real-life examples in Python 3.6\. You will control
    a vehicle, process commands, interact with actuators, and monitor a surf competition
    by exchanging MQTT messages with the Eclipse Paho MQTT client library. You will
    also work with a cloud-based, real-time MQTT provider.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: You will be able to run the examples on a wide range of modern IoT boards, such
    as Raspberry Pi 3 Model B+, Qualcomm DragonBoard 410c, BeagleBone Black, MinnowBoard
    Turbot Quad-Core, LattePanda 2G, and UP Core 4GB. However, any other board that
    supports Python 3.6 will be able to run the samples.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is aimed at Python developers who want to develop applications that
    can interact with other applications and devices, such as IoT boards, sensors,
    and actuators.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](d20ae00b-2bb7-4d81-b3eb-5c47215bce1f.xhtml), *Installing an MQTT
    3.1.1 Mosquitto Server*, starts our journey toward the usage of the preferred
    IoT publish-subscribe lightweight messaging protocol in diverse IoT solutions,
    combined with mobile apps and web applications. We will learn how MQTT and its
    lightweight messaging system work. We will understand the MQTT puzzle: clients,
    servers (formerly known as brokers), and connections. We will learn the procedures
    to install an MQTT 3.1.1 Mosquitto server in Linux, macOS, and Windows. We will
    learn special considerations for running a Mosquitto server on the Cloud (Azure,
    AWS, and other cloud providers).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](790c1d9a-c895-481e-a1c1-94ea07694cb4.xhtml), *Using Command-Line
    and GUI Tools to Learn How MQTT Works*, teaches us to work with command-line and
    GUI tools to learn how MQTT works in detail. We will learn MQTT basics, the specific
    vocabulary for MQTT, and its working modes. We will use different utilities and
    diagrams to understand the most important concepts related to MQTT. We will understand
    everything we need to know before writing Python code to work with the MQTT protocol.
    We will work with the different Quality of Service levels, and we will analyze
    and compare their overheads.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](89bdce8f-72bc-4fda-82a0-5cab33fa4bd8.xhtml), *Securing an MQTT
    3.1.1 Mosquitto Server*, focuses on how to secure an MQTT 3.1.1 Mosquitto server.
    We will make all the necessary configurations to work with digital certificates
    to encrypt all the data sent between the MQTT clients and the server. We will
    use TLS, and we will learn to work with client certificates for each MQTT client.
    We will also learn to force the desired TLS protocol version.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](87908cb8-83ed-4b74-bfc5-dd0c4ddd93aa.xhtml), *Writing Code to Control
    a Vehicle with Python and MQTT Messages*, focuses on writing Python 3.x code to
    control a vehicle with MQTT messages delivered through encrypted connections (TLS
    1.2). We will write code that will be able to run on different popular IoT platforms,
    such as a Raspberry Pi 3 board. We will understand how we can leverage our knowledge
    of the MQTT protocol to build a solution based on requirements. We will learn
    to work with the latest version of the Eclipse Paho MQTT Python client library.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](1fa4ce92-f009-4676-813f-bd4590593c27.xhtml), *Testing and Improving
    Our Vehicle Control Solution in Python*, outlines using our vehicle control solution
    with MQTT messages and Python code. We will learn how to process commands received
    in MQTT messages with Python code. We will write Python code to compose and send
    MQTT messages with commands. We will work with the blocking and threaded network
    loops, and we will understand the difference between them. Finally, we will take
    advantage of the last will and testament feature.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](dc244927-5db3-4108-a486-fa7f17f5f3ba.xhtml), *Monitoring a Surfing
    Competition with Cloud-Based Real-Time MQTT Providers and Python*, gets you started
    with writing Python code to use the PubNub cloud-based, real-time MQTT provider
    in combination with a Mosquitto MQTT server to monitor a surfing competition.
    We will build a solution from scratch by analyzing the requirements, and we will
    write Python code that will run on waterproof IoT boards connected to multiple
    sensors in surfboards. We will define the topics and commands, and we will work
    with a cloud-based MQTT server, in combination with the Mosquitto MQTT server
    used in the previous chapters.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix](d9cf708f-f027-4bfa-a2d2-9fd3653165d9.xhtml), *Solutions*, the right
    answers for the *Test Your Knowledge* sections of each chapter are included in
    the appendix.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You need a basic knowledge of Python 3.6.x and IoT boards.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-MQTT-Programming-with-Python](https://github.com/PacktPublishing/Hands-On-MQTT-Programming-with-Python). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/HandsOnMQTTProgrammingwithPython_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/HandsOnMQTTProgrammingwithPython_ColorImages.pdf).'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄。例如："将下载的`WebStorm-10*.dmg`磁盘映像文件挂载为系统中的另一个磁盘。"'
- en: 'A block of code is set as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目会以粗体显示：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式书写：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词会在文本中以这种方式出现。例如："从管理面板中选择系统信息。"'
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会以这种方式出现。技巧和窍门会以这种方式出现。
- en: Get in touch
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系方式
