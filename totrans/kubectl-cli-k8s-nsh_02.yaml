- en: '*Chapter 1*: Introducing and Installing kubectl'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kubernetes is an open source container orchestration system for managing containerized
    applications across multiple hosts in a cluster.
  prefs: []
  type: TYPE_NORMAL
- en: Kubernetes provides mechanisms for application deployment, scheduling, updating,
    maintenance, and scaling. A key feature of Kubernetes is that it actively manages
    containers to ensure that the state of the cluster always matches the user's expectations.
  prefs: []
  type: TYPE_NORMAL
- en: Kubernetes enables you to respond quickly to customer demand by scaling or rolling
    out new features. It also allows you to make full use of your hardware.
  prefs: []
  type: TYPE_NORMAL
- en: 'Kubernetes is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lean**: Lightweight, simple, and accessible'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Portable**: Public, private, hybrid, and multi-cloud'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extensible**: Modular, pluggable, hookable, composable, and toolable'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Self-healing**: Auto-placement, auto-restart, and auto-replication'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kubernetes builds on a decade and a half of experience at Google running production
    workloads at scale, combined with best-of-breed ideas and best practices from
    the community:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.1 – A 10,000-foot view of Kubernetes'' architecture'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B16411_01_001.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.1 – A 10,000-foot view of Kubernetes' architecture
  prefs: []
  type: TYPE_NORMAL
- en: One of the ways to manage Kubernetes clusters is `kubectl`—Kubernetes' command-line
    tool for management, it is a tool for accessing a Kubernetes cluster that allows
    you to run different commands against Kubernetes clusters to deploy apps, manage
    nodes, troubleshoot deployments, and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introducing kubectl
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing kubectl
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kubectl commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To learn kubectl, you will need access to a Kubernetes cluster; it can be one
    of these cloud ones:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Google Cloud GKE: [https://cloud.google.com/kubernetes-engine](https://cloud.google.com/kubernetes-engine)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Azure AKS EKS: [https://azure.microsoft.com/en-us/free/kubernetes-service](https://azure.microsoft.com/en-us/free/kubernetes-service)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'AWS EKS: [https://aws.amazon.com/eks/](https://aws.amazon.com/eks/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'DigitalOcean DOKS: [https://www.digitalocean.com/docs/kubernetes/](https://www.digitalocean.com/docs/kubernetes/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Alternatively, it can be a local one:'
  prefs: []
  type: TYPE_NORMAL
- en: 'KIND: [https://kind.sigs.k8s.io/docs/user/quick-start/](https://kind.sigs.k8s.io/docs/user/quick-start/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Minikube: [https://kubernetes.io/docs/setup/learning-environment/minikube/](https://kubernetes.io/docs/setup/learning-environment/minikube/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Docker Desktop: [https://www.docker.com/products/docker-desktop](https://www.docker.com/products/docker-desktop)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this book, we are going to use Google Cloud's GKE Kubernetes cluster.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing kubectl
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can use `kubectl` to deploy applications, inspect and manage them, check
    cluster resources, view logs, and more.
  prefs: []
  type: TYPE_NORMAL
- en: '`kubectl` is a command-line tool that can run from your computer, in CI/CD
    pipelines, as part of the operating system, or as a Docker image. It is a very
    automation-friendly tool.'
  prefs: []
  type: TYPE_NORMAL
- en: '`kubectl` looks for a configuration file named `.kube` in the `$HOME` folder.
    In the `.kube` file, `kubectl` stores the cluster configurations needed to access
    a Kubernetes cluster. You can also set the `KUBECONFIG` environment variable or
    use the `--kubeconfig` flag to point to the `kubeconfig` file.'
  prefs: []
  type: TYPE_NORMAL
- en: Installing kubectl
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's take a look at how you can install `kubectl` on macOS, on Windows, and
    in CI/CD pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: Installing on macOS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The easiest way to install `kubectl` on macOS is using the Homebrew package
    manager ([https://brew.sh/](https://brew.sh/)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install, run this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'To see the version you have installed, use this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Installing on Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To install `kubectl` on Windows, you could use the simple command-line installer
    Scoop ([https://scoop.sh/](https://scoop.sh/)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install, run this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'To see the version you have installed, use this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Create the `.kube` directory in your home directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Navigate to the `.kube` directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Configure `kubectl` to use a remote Kubernetes cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Installing on Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When you want to use `kubectl` on Linux, you have two options:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Use `curl`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: If your Linux system supports Docker images, use [https://hub.docker.com/r/bitnami/kubectl/](https://hub.docker.com/r/bitnami/kubectl/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Linux is a very common environment for CI/CD pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: kubectl commands
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To get a list of supported `kubectl` commands, run this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '`kubectl` commands are grouped by category. Let''s look at each category.'
  prefs: []
  type: TYPE_NORMAL
- en: Basic commands
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are basic `kubectl` commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`create`: Create a resource from a file or from `stdin`; for example, create
    a Kubernetes deployment from the file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`expose`: Take a service, deployment, or pod and expose it as a new Kubernetes
    Service.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`run`: Run a particular image on the cluster.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`set`: Set specific features on objects—for example, set environment variables,
    update a Docker image in a pod template, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`explain`: Get the documentation of resources—for example, the documentation
    on deployments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`get`: Display one or many resources. For example, you can get a list of running
    pods or the YAML output of a pod.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`edit`: Edit a resource—for example, edit a deployment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`delete`: Delete resources by filenames, `stdin`, resources, and names, or
    by resources and label selectors.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploy commands
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are `kubectl` deploy commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`rollout`: Manage the rollout of a resource.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`scale`: Set a new size for a deployment, ReplicaSet, or StatefulSet.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`autoscale`: Auto-scale a deployment, ReplicaSet, or StatefulSet.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cluster management commands
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the `kubectl` cluster management commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`certificate`: Modify certificate resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cluster-info`: Display cluster information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`top`: Display resource (CPU/memory/storage) usage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cordon`: Mark a node as unschedulable.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`uncordon`: Mark a node as schedulable.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`drain`: Drain a node in preparation for maintenance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`taint`: Update the taints on one or more nodes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Troubleshooting and debugging commands
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the `kubectl` troubleshooting and debugging commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`describe`: Show the details of a specific resource or group of resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`logs`: Print the logs for a container in a pod.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`attach`: Attach to a running container.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`exec`: Execute a command in a container.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`port-forward`: Forward one or more local ports to a pod.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`proxy`: Run a proxy to the Kubernetes API server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cp`: Copy files and directories to and from containers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`auth`: Inspect authorization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advanced commands
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the `kubectl` advanced commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`diff`: Show difference of live version against a would-be applied version.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`apply`: Apply a configuration to a resource by filename or `stdin`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`patch`: Update the field(s) of a resource using a strategic merge patch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`replace`: Replace a resource by filename or `stdin`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wait`: Wait for a specific condition on one or many resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`convert`: Convert config files between different API versions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kustomize`: Build a kustomization target from a directory or a remote URL.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Settings commands
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the settings commands in `kubectl`:'
  prefs: []
  type: TYPE_NORMAL
- en: '`label`: Update the labels on a resource.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`annotate`: Update the annotations on a resource.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other commands
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are several other commands used in `kubectl`:'
  prefs: []
  type: TYPE_NORMAL
- en: '`alpha`: Commands for features in alpha.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`api-resources`: Print the supported API resources on the server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`api-versions`: Print the supported API versions on the server, in the form
    of group/version.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config`: Modify `kube-config` files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`plugin`: Provide utilities for interacting with plugins.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`version`: Print the client and server version information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see from the lists, commands are divided into different groups. We
    are going to learn about most but not all of these commands in the coming chapters.
  prefs: []
  type: TYPE_NORMAL
- en: At the time of writing, the `kubectl` version is 1.18; with more recent versions,
    the commands might have changed.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have learned what `kubectl` is and how to install it on
    macOS, Windows, and CI/CD pipelines. We also checked out the different commands
    supported by `kubectl` and what they do.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn how to get information about Kubernetes clusters
    using `kubectl`.
  prefs: []
  type: TYPE_NORMAL
