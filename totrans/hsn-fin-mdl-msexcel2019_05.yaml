- en: Formulas and Functions - Completing Modeling Tasks with a Single Formula
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the first things that makes Excel more than a glorified electronic calculator
    is its use of functions and formulas. This feature allows Excel to combine a number
    of mathematical tasks—some of which can be quite complex—into a single function.
    In this chapter, you will learn how to use formulas and will understand a selection
    of the most widely used functions.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Understanding functions and formulas
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with lookup functions
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Utility functions
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pivot tables and charts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pitfalls to avoid
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding functions and formulas
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to enter either a formula or a function, you must first type `=`. A
    **formula** is a statement that includes one or more operands (+, -, /, *, and
    ^), such as `=34+7` or `=A3-G5` (this formula subtracts the contents of cell `G5`
    from the contents of cell `A3`). A function can also be included as part of a
    formula, such as `=SUM(B3:B7)*A3`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: A **function** is a command that contains a series of instructions for Excel
    to carry out. A function contains one or more arguments, inviting the user to
    specify the input cell or range of cells on which the instructions are to be carried
    out, for example, `MATCH(A5, F4:F23,false)`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: A function can include a formula as part of an argument, such as `=IF(A4*B4>C4,D4,E4)`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: However, the distinction between them is often ignored and the term formula
    is used to indicate either a formula or function.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: To enter a formula, we start with the `=` sign followed by the name of a function
    and then open brackets. While in edit mode, an on-screen guide is displayed just
    below the text, showing the arguments to be specified. Each argument is separated
    from the next with a comma and the first argument appears in bold font as it is
    the active argument. Once you have specified the input for an argument, press
    the comma (*,*) key. The bold highlight moves onto the next argument as that is
    now the active argument. When all inputs have been specified, we close the brackets
    to end the formula.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Working with lookup functions
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Lookup functions are some of the most widely used functions in Excel. Generally,
    the intention is to fetch a value from one table (the source) to the active cell
    in which you are typing the formula (the target). Essentially, the function guides
    Excel to identify a row and column in the source table. The intersection of that
    row and column will give you the source cell whose value you want to extract.
    For example, say you have a sales report that includes data for various products
    sold within a specified period and you wish to populate a field, `Product Cost`,
    with the cost of each of the products in your report.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot is a sample sales report showing details of daily
    sales including `Product`, `Salesperson`, and other details:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dc2b348c-2839-4b36-8cde-9e7a249f556e.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
- en: '`Unit Cost` for each product can be obtained from a products database.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'You could use a lookup function to locate the individual products in the products
    database and then retrieve the associated cost. We will also refer to this table,
    `Products Database`, as our source table. The following screenshot is a sample
    `Products Database` table showing the product codes and unit costs of each product:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6bff9976-d417-4a43-a5d4-a047176605c6.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
- en: In order to ensure that your lookup selects the correct item, you must use a
    unique lookup value that appears in both tables, a value that will uniquely identify
    each record. People could have the same name, so you would use employee IDs rather
    than employee names; similarly, product names could be duplicated, so you would
    use `Product Code` instead.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: There are a number of lookup functions, each of them having particular scenarios
    to which they are best suited. We will have a look at some of the more popular
    ones.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: The VLOOKUP function
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The arguments for `VLOOKUP` are shown in the following screenshot:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b2fc7b77-55ca-435b-9e48-09e82d9cb945.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b2fc7b77-55ca-435b-9e48-09e82d9cb945.png)'
- en: Any argument enclosed in square brackets, `[]`, is optional; therefore, if no
    value is entered for that argument, a default value is taken. Values must be entered
    for all other arguments; otherwise, the formula will result in an error.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 任何用方括号`[]`括起来的参数都是可选的；因此，如果没有为该参数输入值，就会采用默认值。必须为所有其他参数输入值；否则，公式将导致错误。
- en: For the `VLOOKUP` function, the optional argument is `range_lookup`. This requires
    you to select `True` if you are looking for an approximate match for your lookup
    value or `False` if you are looking for an exact match. Excel allows you to substitute
    `1` for `True` and `0` for `False`. If no value is selected, then the argument
    defaults to `False`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`VLOOKUP`函数，可选参数是`range_lookup`。如果您要查找查找值的近似匹配，则需要选择`True`；如果您要查找精确匹配，则需要选择`False`。Excel允许您用`1`代替`True`，用`0`代替`False`。如果没有选择任何值，则该参数默认为`False`。
- en: This function tells Excel to find the lookup value in the first column from
    the left of the lookup array that you specify. Note that this may not be the first
    column of the source table.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数告诉Excel在您指定的查找数组的最左边的第一列中找到查找值。请注意，这可能不是源表的第一列。
- en: 'In our example, the lookup value is a product code; therefore, for the first
    record in our sales report, the lookup value is `BN001`, which is in cell **D5**. The
    following screenshot shows the construction of the `VLOOKUP` formula in the `Sales
    Report` table:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，查找值是一个产品代码；因此，对于我们销售报告中的第一条记录，查找值是`BN001`，位于单元格**D5**中。以下截图显示了在`销售报告`表中构建`VLOOKUP`公式的过程：
- en: '![](img/1e6d3587-70ec-4921-922d-d82d4d73a07b.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1e6d3587-70ec-4921-922d-d82d4d73a07b.png)'
- en: 'Our lookup array must start from column **C** in the `Products Database` table
    as this is where the `Product Code` field lies—note that this is the second column
    of the `Products Database` table. Excel will then locate the position of the lookup
    value in this first column, as shown in the following screenshot:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的查找数组必须从`产品数据库`表的列**C**开始，因为这是`产品代码`字段所在的位置—注意这是`产品数据库`表的第二列。然后，Excel将在第一列中定位查找值的位置，如下截图所示：
- en: '![](img/466d78a8-02cf-41d2-a9ba-a88c97445980.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/466d78a8-02cf-41d2-a9ba-a88c97445980.png)'
- en: From the preceding screenshot, we can see that product `BN001` is in row **11**
    of the `Products Database` table, in the `Product Code` field.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的截图中，我们可以看到产品`BN001`在`产品数据库`表的第**11**行，位于`产品代码`字段中。
- en: 'The next argument is the `column_index_num` (column index number) value, which
    refers to the position of the source field in the lookup array, starting from
    the unique field as column **1**. The **source field** is the field from which
    you want to retrieve data. In our example, the source field is `Unit Cost`, which
    is column **D**, the second column of our lookup array. This gives us `col_index_num`
    of `2`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个参数是`column_index_num`（列索引号）值，它指的是查找数组中源字段的位置，从唯一字段作为第**1**列开始计算。**源字段**是您想要检索数据的字段。在我们的示例中，源字段是`单元成本`，它是列**D**，也就是我们查找数组的第二列。这给我们一个`col_index_num`为`2`：
- en: '![](img/c4e4ec7b-9472-4784-bd45-2e759040cbec.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c4e4ec7b-9472-4784-bd45-2e759040cbec.png)'
- en: 'In this way, we have identified column **D** and row **11** for the source
    cell. Excel will then retrieve the data from cell **D11** (`65,000`) and place
    it in our target cell in the `Sales Report` table:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们已经确定了源单元格的列**D**和行**11**。然后，Excel将从单元格**D11**（`65,000`）中检索数据，并将其放置在`销售报告`表中的目标单元格中：
- en: '![](img/e5670fc6-ffc3-4dc9-82f8-fa60e81bf45f.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e5670fc6-ffc3-4dc9-82f8-fa60e81bf45f.png)'
- en: Once you have completed your formula and successfully extracted the unit cost for
    the first record in our `Sales Report` table, copy the formula down the column
    for the other records in the `Sales Report` table.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您完成了公式并成功提取了我们`销售报告`表中第一条记录的单元成本，就将公式复制到`销售报告`表中的其他记录的列中。
- en: The INDEX function
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: INDEX函数
- en: 'The `INDEX` and `MATCH` functions are usually used together. The `INDEX` function
    has the arguments to specify the row and column of the source cell. In order to
    make the formula dynamic, you substitute `MATCH` for the `INDEX` argument, for
    the row, column, or both. This is a very powerful formula that has arguments for
    both arrays and simple formulas:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`INDEX`和`MATCH`函数通常一起使用。`INDEX`函数有参数来指定源单元格的行和列。为了使公式动态化，您可以用`MATCH`替换`INDEX`参数，用于行、列或两者。这是一个非常强大的公式，它既有数组参数，也有简单公式参数：'
- en: '![](img/8e6034e9-edc7-4f1c-b8db-999490989795.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8e6034e9-edc7-4f1c-b8db-999490989795.png)'
- en: The first line of arguments of the `INDEX` formula is for the array range. Array
    formulas return a range of values as opposed to just one—as is the case with simple
    formulas. We will touch on array formulas later in this book, but for now, we
    will concentrate on simple formulas.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`INDEX`公式的第一行参数是数组范围。数组公式返回一系列值，而不仅仅是一个值—这与简单公式的情况不同。我们将在本书的后面讨论数组公式，但现在我们将集中在简单公式上。'
- en: The second line of arguments is for the reference form. The first argument requires
    the reference that is similar to the lookup array in `VLOOKUP`. In simple index
    formulas, this could be restricted to a range of cells within one column (or within
    one row).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行参数是参考形式。第一个参数需要类似于`VLOOKUP`中的查找数组的参考。在简单的索引公式中，这可能被限制在一个列（或一行）的单元格范围内。
- en: 'If you restrict the index reference to one column, you have effectively identified
    the column of the source cell. In our example, we have selected cells `D5` to
    `D13` as our reference:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将索引引用限制为一列，您实际上已经确定了源单元格的列。在我们的示例中，我们已经选择了单元格`D5`到`D13`作为我们的参考：
- en: '![](img/60699711-ede2-4e32-9420-111dfb3257d1.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/60699711-ede2-4e32-9420-111dfb3257d1.png)'
- en: The next argument is `row_num`. In order to substitute it for the `row` argument,
    you will need to embed the `MATCH` function within the `INDEX` function, which
    is still active. To do this, just start typing the new function after the comma.
    As long as you have not yet entered the final parentheses for a function, Excel
    recognizes that the formula is still active, so there is no need to type `=` again.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: The MATCH function
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first argument in the `MATCH` function is the `lookup_value` argument, which
    you look for in the lookup array. In this case, however, there is no restriction
    as to the location of the lookup array. We are using the same lookup value as
    in the `VLOOKUP` example, `BN001`, in cell **D5** of the `Sales Report` worksheet.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, again, as shown in the following screenshot, you can restrict the lookup
    array to one column. In our example, we know that the match for our lookup values
    are under the `Product Code` field in column **C** of the `Products Database`
    worksheet. We therefore select cells `C5` to `C13` as our lookup array:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ee564412-ae6a-4074-9f60-5b4b05a94948.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
- en: Note that the `MATCH` lookup array must start from the same worksheet row as
    the reference in the `INDEX` function. In our example, they both start from worksheet
    row **5**. You end the match formula with `match_type`, which is the same as `range_lookup`
    in the `VLOOKUP` function. You need to specify whether you want an approximate
    match, less than (`1`), greater than the lookup value (`-1`), or an exact match
    (`0`).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: The `MATCH` function returns an integer that corresponds to the position of
    the row within the lookup array in which the lookup value is found. This should
    not be mistaken for the worksheet row number.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: In our example, the `MATCH` function will return the number `7` because the
    lookup value, `BN001`, is found in the 7^(th) row of our lookup array—worksheet
    row **11**. As soon as you close the final bracket of the `MATCH` formula, Excel
    takes you back to the `INDEX` function.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: The next argument is `column_num`. As we have already determined the column
    number by restricting our reference to one column, we can ignore this argument.
    The final argument, `area_num`, is for more complex situations where we introduce
    a third dimension after row and column, such as multiple tables with the same
    field layouts. Again, we can ignore this argument as we will not be using it.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Having identified row **7** and column **D**, we now have the source cell, **D11**,
    which returns the value of `65000`. You will note that `INDEX` and `MATCH` overcome
    the restriction in `VLOOKUP`, where the unique field must be the first column
    of the lookup array.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: As a result, many users prefer to use `INDEX` and `MATCH`, even where `VLOOKUP`
    would work. Those who are intimidated by the function combination of `INDEX` and
    `MATCH` prefer to stick to `VLOOKUP` and would rather change the order of table
    columns to make it suitable for `VLOOKUP`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: The CHOOSE function
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `CHOOSE` function allows you to create a list of values or actions to perform
    and then select which value to use or action to perform, by choosing a number
    corresponding to the position of the values or actions in the list. The syntax
    for `CHOOSE`—as shown in the following screenshot—has two arguments: `index_num`,
    then the list of values or actions shown as `value1`, `value2`, and so on.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: 'This screenshot shows the arguments of the `CHOOSE` function:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3ff352b8-3034-4a55-b1e7-569a51682d75.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
- en: 'In the example shown here, we want to show the results separately from the
    average and median of the product unit costs in the `Products Database` worksheet.
    We first set up data validation in an empty cell, so that the values of `1` or
    `2` can be selected by clicking the drop-down arrow that appears beside the cell.
    The cell with the data validation will be `index_num` of the `CHOOSE` formula.
    This is a screenshot of the data validation:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/332851f0-fc38-4b48-b4bd-83b6fe1a7223.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
- en: 'We then list the actions to choose from. In this case, we have the average
    or the median. If we list them in that order, then if `index_num` shows `1`, the
    average will be selected, and if it shows `2`, then median will be selected. The
    following screenshot shows the complete `CHOOSE` formula:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0943a2fe-fb65-43dc-ac62-bdcc6e1f2286.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: 'When the index number is `1`, the `AVERAGE` function is selected, and it returns
    the value `43,444.44`. This is a screenshot of the `CHOOSE` function with `Index_Num`
    as `1`:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2f951ce8-2884-4b96-9641-e2699cbe8fbe.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: 'When the index number is `2`, the `MEDIAN` function is selected, and it returns
    the value `45,000.00`. This is a screenshot of the `CHOOSE` function with `Index_Num`
    as `2`:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0dc323a8-9f54-4f3b-bf5a-485c774610ac.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
- en: Implementing the CHOOSE function
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's assume that you are tracking the financial records of your company and
    your boss wants you to deliver two reports every week, containing the total amount
    of sales that you made for a particular week and the total amount of purchases
    you made toward the company's stores. How would you go about it?
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: 'You can always select all of the instances of sales and then calculate the
    sum of them. Once that is done, you have to again select all instances of purchases
    made and find the sum of purchases too. Having to do so frequently would be really
    time-consuming and boring. Here''s where the `CHOOSE` function comes into play!
    We can implement a simple model that does everything for you in one click, using
    the following steps:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: 'Load all of the required values that you need to account for and compile them
    into a table, as seen here:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f11400ae-fbd1-4910-9d50-552f213993f1.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
- en: 'We will now start writing the `CHOOSE` function:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8b73489c-8ead-49bb-8b56-406ee1c90be5.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
- en: 'The first value we need to enter is the cell where we have put the options,
    which, in our case, is `F4`:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/80b6ae9c-b0ed-46db-bfbb-5c6eb9e595b8.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
- en: 'Now, we will assign two options to `F4`, `1` and `2`, using data validation.
    We will now edit the formula so that if we select `1`, the cell where the formula
    is input will display the sum of all of the sales made for that week, and if we
    select `2`, it will display the sum of all of the purchases. So, first we will
    select all of the cells in the `Sales` column, `C6` to `C14`, and input it into
    the formula cell as `SUM(C6:C14)`, as seen here:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00b805d0-57fa-4435-9af5-03ec789cd996.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
- en: 'Next, we will select all of the cells in the `Purchases` column and input those
    into the next field of the formula as `SUM(D6:D14)`, as follows:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/914ff6b7-0cd4-42b4-9e5f-b265ba164761.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following output:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3e183e29-4bc1-4bc1-9c39-8286ac740884.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
- en: Now, as seen in the preceding screenshot, when `1` is selected, the cost of
    sales becomes visible, which, in our case, is `315,455.00`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'If we select `2`, we will get the cost of purchases, as seen here:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1bfeaf48-b523-4654-813e-3ff10410dc27.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
- en: This is just a basic scenario in which the function can come in handy. This
    will be particularly useful when you have large amounts of data that needs to
    be filtered and sorted.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: Utility functions
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Utility functions can be used on their own. However, they come into their own
    when embedded in other, more complex functions. In such cases, they expand the
    scope and functionality of the enclosing function by providing access to more
    conditions or variables.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: Some examples of utility functions are `IF`, `AND`, `OR`, `MAX`, `MIN`, and `MATCH`.
    We will now look at a few of them here.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: The IF function
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This is one of the most widely used functions in Excel. It can be used on its
    own or as part of another formula. The `IF` function checks whether a condition
    is met, then returns one value if it is and another value if it isn''t. The syntax
    contains three arguments:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '`logical_test`: The logical test is a statement that returns a value of `true`
    if the condition is met, or `false` if the condition is not met.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_if_true`: This argument allows you to specify which value you wish to
    be returned if the condition is met and the result of the logical test is `true`.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_if_false`: This argument allows you to specify which value you wish
    to be returned if the condition is not met and the result of the logical test
    is `false`.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Say you want to reward your salespersons with `2%` of sales whenever the profit
    exceeds `300,000`. You could write an `IF` formula to automate this. The logical
    test would be the statement—profit is greater than `300,000`. In the following
    example, for the first record, this is `K5>K2`. The statement will either be `true`
    or `false`. If the result is `true`, the value to return is then `Sales` × `Commission`
    (`2%`). In our example, this is `H5*H2`. If the result is `false`, then the value
    returned will be `0`. The following screenshot is an illustration of the `IF`
    formula:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/704e5d46-0e56-43b1-b6b4-613727813bb3.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
- en: The MAX and MIN functions
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These functions are used to select either the maximum (`MAX`) or minimum (`MIN`)
    from a list of values. With a bit of imagination, you can put the `MAX` or `MIN` formulas
    to very efficient use.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: For example, in your financial model, `Cash Balance` can turn out to be positive
    or negative. A positive balance would be posted to the `Cash In Hand` account
    on the asset side of the balance sheet, while a negative balance would be shown
    as `Overdraft` under current liabilities. If we simply related `Cash In Hand`
    or `Overdraft` to `Cash Balance`, then we could either have a negative balance
    displayed as `Cash In Hand` or a positive balance displayed as `Overdraft`.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'A way around this is to use the `MAX` and `MIN` formulas as shown in the following
    screenshot:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c8e3384a-e5f0-4545-8afc-aa9d796f5431.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
- en: In the preceding screenshot, we are asking the `MAX` formula to display the
    greater value of `Cash Balance` and `0`. A positive cash balance will always be
    greater than `0` and will hence be displayed as `Cash In Hand`. However, whenever
    the cash balance is negative, since this will always be less than `0`, `Cash In
    Hand` will display `0`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot is an illustration of the `MIN` function:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/479cbc93-ef16-4523-b9b2-b787b8428b88.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
- en: In this case, we use the `MIN` formula to ensure that only negative cash balances
    will be displayed as `Overdraft`, since a negative cash balance will always be
    less than `0`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: 'By copying the formulas, we can see how the cash balances have been neatly
    and accurately classified as `Cash In Hand` and `Overdraft`, as shown in the following
    screenshot, which shows the full result after applying the `MAX` and `MIN` formulas:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8fde2d17-cb1e-4ebb-8111-1f6db349471e.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
- en: Implementing the functions
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will now implement the `MAX` and `MIN` functions to the `Marks.xlsx` file used
    in [Chapter 4](e28955dc-8534-4e5a-b235-2973ac690e86.xhtml), *Applying the Referencing
    Framework in Excel*. We will use the `MAX` function to find the highest score
    in the class and the `MIN` function to find the lowest using the following steps:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we will create two independent cells that we will use to display the
    highest and lowest scores, as follows:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6ea3287e-629c-4702-8069-ee6dfb1ee964.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
- en: 'Now, to find the student with the highest score, we will find the biggest value
    in the `Percentage` column, by using the following formula:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/df2a2153-c00a-4d58-8002-1abdc83a7e42.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following output:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a4087180-7c7e-4bce-88ee-f5b1629fa6a0.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
- en: 'Similarly, we need to find the minimum marks scored by a student by using the
    following formula:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a3b08655-390d-4e70-9d37-a4eb9dadd1f8.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following output:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/161b9eae-a42c-4c4f-99b5-d22fc1d5d3b2.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
- en: This shows how useful these functions can be, especially when you have a huge
    number of entries to sort through.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: Pivot tables and charts
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pivot tables are one of the most powerful tools in Excel. A pivot table can
    summarize little or large amounts of data into a compact form, which reveals trends
    and relationships that were not apparent from looking at the original data.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: The pivot table allows you to introduce conditions based on the original data
    so that you can view the summarized data from different perspectives. It does
    all of this without you having to type any formulas. Most users are under the
    impression that pivot table reports are complex and difficult to prepare; but
    in reality, the complexity is behind the scenes and taken care of by Excel. All
    you have to do is follow a few simple guidelines and you will be able to produce
    complex pivot tables with ease.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: The first step is to ensure that your data is in the proper Excel table format,
    bearing in mind that you may have to work with data prepared by someone else.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'Excel identification and navigation shortcuts depend on your table being in
    the proper format. Most actions require the specification of the target range.
    Excel can correctly identify the required range and isolate the field headers,
    but only if the data is in the proper table format, which can be seen in the following
    screenshot:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/30f514da-6c3f-41db-8d7b-d56575f7d5ad.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
- en: In database terminology, each column of the table represents a field, and each
    row (apart from the first row) represents a record. The first row of the table
    should contain the field headers. There should be no empty cells in the table
    and no duplicate records.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Excel is very efficient at detecting data types and handling different forms
    of date format, including `15/01/2019`, `15-Jan-19`, `15-01-2019`, `01-15-2019`,
    and `2019-01-15`, among others. However, Excel is very sensitive and any slight
    anomaly in the data may produce erratic results. For example, if you inadvertently
    type a leading space before the date—as in the image on the left-hand side of
    the following screenshot—Excel treats it as a `General` data type.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: 'The image on the right-hand side of the following screenshot shows the same
    text without the leading space; therefore, Excel correctly recognizes it as a
    date and automatically assigns the `Date` format to the cell:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cd765230-a9ec-46f6-99cf-f8ebe3f84dc1.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
- en: The reason for explaining this in detail is because pivot tables have a special
    relationship with date and other data types. If a date field is included in your
    table, the pivot table will recognize it and allow you to group the dates into
    days, months, quarters, and years. However, if just one cell of the date field
    has an anomaly—like in the preceding example—the pivot table will not recognize
    it as a date and the group option will be unavailable. Once your data has been
    cleaned up and prepared, you are ready to create a pivot table. Ensure that the
    cursor is in any cell within the table, then press *Insert* and select PivotTable
    from the Tables group. The Create PivotTable dialog box is launched. You will
    be required to select a range and then a location for the pivot table report.
    Excel will usually intelligently guess the correct range for the pivot table;
    but if it doesn't, you can manually select the required range.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: 'Although you can place the pivot table on the same sheet as the source data,
    this can sometimes become congested. By default, Excel will create the pivot table
    on a new worksheet. Again, you can override this, if you wish, and specify a location
    on either the same or another worksheet:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9a22f642-5052-4848-934a-0ed0ff780620.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
- en: When you press OK, a pivot table will be created. Initially, only the field
    list will be populated with the names of all of the fields in your table, which
    will be arranged vertically with checkboxes beside them. Below that, there are
    four boxes, titled **Filters**, **Columns**, **Rows**, and **Values**. You build
    the table by dragging the field names to the boxes as desired.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: 'Before you start building your table, it would help if you try and envisage
    the layout you desire. The **Values** box is best suited for numerical fields,
    so you would drag the `Sales` field to this box, resulting in the updated table
    shown in the following screenshot, which shows how the **Values** field is displayed
    in the pivot table:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/10e54fa6-9ce1-4be6-a87a-a2fd3b63b73f.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
- en: 'As you have not yet specified a condition or criteria, Excel simply totals
    the **Values** field and calls it `Sum of Sales`. You may then wish to display
    the sales per salesperson for each product. The following screenshot shows sales
    per salesperson:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c380e04f-d7de-4f79-bd62-f43be2c392f4.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
- en: 'For the previous screenshot, the field list would look like this:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/409daabb-eab8-43ac-8b36-90dd55701676.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
- en: 'Alternatively, you may wish to show the sales of products per salesperson,
    as shown in the following screenshot:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f50f0b1a-fffd-40f7-b254-ed0736acd04a.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
- en: 'Notice that the positions of the `Product` and `Salesperson` fields are reversed
    in the rows box, as shown in the following screenshot:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a3398334-dec6-4d86-ad17-965da1edab1d.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
- en: 'An alternative layout could be achieved by displaying the products horizontally.
    This can be done by dragging the product field to the **Columns** box instead
    of the **Rows** box:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f3b234c6-74c5-4a08-ad0d-3eb61f81c31c.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
- en: 'Doing that results in this:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/72a926f1-a29d-4db4-9be8-b270d1e85d82.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
- en: 'Another variation to the layout is to show sales by product, then show the
    salesperson as a filter:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/46090795-1ef8-441b-99b2-c0a42b2ce08b.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a011ee5e-a3cd-4b1c-97d6-9c5567800ac8.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
- en: By clicking the drop-down arrow beside the `Salesperson (All)` filter, you can
    selectively display the results for any of the salespersons, any combination of
    them, or all of the salespersons.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Apart from showing the sales totals, you can also show sales as a percentage
    of the overall total or of average sales. In this way, you can show the contribution
    of a product or salesperson to the overall sales.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows product sales in total and as percentages of
    gross sales. In order to achieve this, simply drag the `Sales` field to the **Values**
    box again so that it now appears twice. Right-click on the `Sum of Sales 2` column
    to reveal a drop-down menu, then select **Show Values**, and then finally select
    **Grand Total** from the second menu that appears. An illustration of product
    sales in total and as percentages of gross sales is shown in the following screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/73c0c5e0-826f-4a43-b920-bef2d93e3ba0.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
- en: The previous table shows sales by salespersons and as percentages of gross sales.
    This is actually a second pivot table that uses the same range but using the table
    on cell `E3` of the sheet housing the original pivot table. The **Show Values
    as...** menu has a wide range of options demonstrating the flexibility of pivot
    tables.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: If, in trying out the various options, you mess up your table, you can simply
    discard it and create another one. Hopefully, this time, you would have learned
    from your mistakes and shifted up a notch in your experience of creating and working
    with pivot tables. Sometimes, people understand reports better when they are supported
    by diagrams and charts.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a pivot chart, select your pivot table, select **Analyze** from the
    pivot table tools context-sensitive menu, then select **Pivot Chart**. A wide
    range of chart types will be displayed. Select one and a pivot chart appears beside
    your pivot table:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bfd1cacd-2ba6-4e69-b518-0ab3a5ec9533.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bfd1cacd-2ba6-4e69-b518-0ab3a5ec9533.png)'
- en: 'The chart is dynamic so that if you filter your table to reflect, say, one
    salesperson, `Iyabo`, the chart automatically updates to reflect only Iyabo''s
    results. This screenshot shows a pivot table and a pivot chart that have been
    filtered to show just Iyabo''s sales:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图表是动态的，所以如果你过滤你的表格以反映，比如，一个销售人员，“Iyabo”，图表会自动更新，只反映Iyabo的结果。这个截图显示了一个已经被过滤的数据透视表和数据透视图，只显示了Iyabo的销售情况：
- en: '![](img/be201944-1988-4375-ad67-89d6a075c59b.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/be201944-1988-4375-ad67-89d6a075c59b.png)'
- en: Implementing pivot tables
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施数据透视表
- en: 'In the `Marks.xlsx` file, we have the percentages of all of the students. Now,
    let''s say we want to find out who the top 10 students are, so that we can award
    them during our class function. Enter the pivot table using the following steps:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在“Marks.xlsx”文件中，我们有所有学生的百分比。现在，假设我们想找出前10名学生是谁，这样我们就可以在班级活动中给他们奖励。按照以下步骤进入数据透视表：
- en: Navigate to the `Top scores` worksheet in the file, which contains all of the
    students and their percentages in a table.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到文件中的`Top scores`工作表，其中包含所有学生和他们在表中的百分比。
- en: 'Now, to create a pivot table, we will select all of the columns in the table
    and create a pivot table using the **PivotTable** option in the menu:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要创建一个数据透视表，我们将选择表中的所有列，并使用菜单中的**数据透视表**选项创建一个数据透视表：
- en: '![](img/7986c9ab-8bc0-4579-ba76-b61241676972.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7986c9ab-8bc0-4579-ba76-b61241676972.png)'
- en: 'This results in the following table:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了以下表格：
- en: '![](img/27e09561-fb8d-4905-9123-83bb5afcbad4.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/27e09561-fb8d-4905-9123-83bb5afcbad4.png)'
- en: 'Since we want to find out the top 10 scores, we can use a built-in filter in
    the **PivotTable** filters. To reveal the following drop-down list, click on the
    filter icon in the corner of the **Row Labels** column:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们想找出前10名分数，我们可以在**数据透视表**筛选器中使用内置筛选器。点击**行标签**列的角落中的筛选图标，以显示下拉列表：
- en: '![](img/0e8d2567-9905-4152-a087-69b8cbc0aafd.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0e8d2567-9905-4152-a087-69b8cbc0aafd.png)'
- en: 'Navigate to **Value filters** and select the **Top 10...** option from there,
    as follows:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**值筛选器**，从那里选择**前10...**选项，如下所示：
- en: '![](img/6f5a0338-56b1-4215-9d59-f428afc994d5.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6f5a0338-56b1-4215-9d59-f428afc994d5.png)'
- en: 'This reveals the following window:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了以下窗口：
- en: '![](img/1a15fb36-e9dc-47bc-ba20-a5eadcc92257.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1a15fb36-e9dc-47bc-ba20-a5eadcc92257.png)'
- en: Here, you can choose how many values you want to display, from which column
    you want to filter the top 10, and many more options.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以选择要显示多少个值，从哪一列筛选前10个，以及许多其他选项。
- en: 'Make sure that everything in the window looks similar to the preceding screenshot
    and click on **OK**. Doing so leads to the following output:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保窗口中的一切看起来与前面的截图相似，并点击**确定**。这样做会导致以下输出：
- en: '![](img/b50fd30d-a880-48c2-9a57-07ae31fc5dcd.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b50fd30d-a880-48c2-9a57-07ae31fc5dcd.png)'
- en: As seen here, we can see the students who scored the highest grades. But we
    need them in descending order of their percentages, so that the highest scorer
    is displayed first.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，我们可以看到得分最高的学生。但我们需要按百分比的降序排列，这样最高分者就会显示在最前面。
- en: 'For this, we will again click on the filter icon and navigate to **More Sort
    Options...**, as shown here:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为此，我们将再次点击筛选图标，导航到**更多排序选项...**，如下所示：
- en: '![](img/c4744b99-391d-46d9-af11-273ce10dc240.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c4744b99-391d-46d9-af11-273ce10dc240.png)'
- en: 'This results in the following window:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了以下窗口：
- en: '![](img/2a9ed612-9a95-4f0f-b3c6-bb1c62d15b71.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a9ed612-9a95-4f0f-b3c6-bb1c62d15b71.png)'
- en: 'Here, we will now sort the students into descending order, based on the sum
    of percentages, as shown here:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我们现在将学生按百分比总和的降序排序，如下所示：
- en: '![](img/6370ee69-0f88-4d12-802c-2c5e70268874.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6370ee69-0f88-4d12-802c-2c5e70268874.png)'
- en: 'This results in the following output:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了以下输出：
- en: '![](img/8e7a41e9-6415-4499-ad06-1b72f260b04d.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8e7a41e9-6415-4499-ad06-1b72f260b04d.png)'
- en: Hence, we have the results of the top 10 students in the class! This shows how
    powerful a pivot table can be when used right.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们有了班级前10名学生的结果！这显示了数据透视表在正确使用时有多么强大。
- en: Pitfalls to avoid
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要避免的陷阱
- en: In constructing your formulas, it is easy to get carried away and, very soon,
    the formula becomes very complex and unfriendly. While it is desirable to keep
    formulas compact, they should be simple and easy for a third party to follow.
    If necessary, break up the formula into two or more parts so that it becomes easier
    to follow while retaining the original effect.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建公式时，很容易一发不可收拾，很快，公式就变得非常复杂和不友好。虽然保持公式简洁是可取的，但它们应该简单易懂，方便第三方跟踪。如果必要，将公式分解为两个或更多部分，这样就更容易跟踪，同时保留原始效果。
- en: 'Alternatively, you can use *Alt + Enter* to force part of the formula to the
    next line. This will not affect the result of the formula, but it will make the
    formula easier to understand. Consider the following example:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以使用*Alt + Enter*强制公式的一部分移到下一行。这不会影响公式的结果，但会使公式更容易理解。考虑以下例子：
- en: '[PRE0]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This complex formula can be broken down to three parts with the use of *Alt
    + Enter*, as follows:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这个复杂的公式可以分解为三个部分，使用*Alt + Enter*，如下所示：
- en: '[PRE1]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As we can see, this makes it easier to decipher.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，这样更容易解释。
- en: Protect sheets
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护工作表
- en: If you are going to share your model with others, it is important that you protect
    your formulas against inadvertent modifications that can render the model useless.
    In order to do this, first highlight the cells without formulas that you want
    to modify, press *Ctrl + 1* to open the **Format Cells** dialog box, go to the
    Protection tab, check Locked, and click OK. This will unlock the cells that may
    be modified.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你要与他人分享你的模型，重要的是保护你的公式，防止意外修改导致模型无法使用。为了做到这一点，首先要突出显示你想要修改的没有公式的单元格，按*Ctrl
    + 1*打开**设置单元格**对话框，转到保护选项卡，选中锁定，然后点击确定。这将解锁可以修改的单元格。
- en: Now, go to the Review tab, then select Protect Sheet. The Protect Sheet dialog
    box appears. Enter a password to unprotect it if desired, then click OK. Now,
    the cells with formulas, which are protected, can only be viewed but not modified.
    You should enter a particular value only once. If you need to enter the same value
    in another location, simply refer to the original cell where the first entry was
    made. Any subsequent occurrences of the same value should also refer to the original
    entry rather than to any of the secondary cells containing the same value.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: For example, an interest rate of 15% is first entered on sheet 1, cell **B5**.
    If interest is required in sheet 2, cell **D16**, rather than typing 15% again,
    you simply refer to sheet 1, cell **B5**, by typing `=`, then entering sheet 1, cell
    **B5**. If interest appears again on sheet 3, cell **J13**, theoretically, you
    could refer to sheet 2, cell **D16**. However, in order to preserve a simple audit
    trail, the reference should be to the original entry of that value, sheet 1, cell **B5**.
    Try and use only one formula per row.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: Use your knowledge of relative, absolute, and mixed cell referencing to construct
    your formulas so that you can enter it in one cell, then copy or fill the formulas
    across the other years. The fewer times you have to enter a formula, the lower
    the chances of making a mistake are.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned about the power of formulas and functions and how
    we can use them to speed up our modeling and make it more interesting. We also
    worked through examples of some of the more common functions such as the `VLOOKUP`,  `MATCH`,
    and `CHOOSE` functions.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will look at one of the features that forms the backbone
    of Excel—the referencing framework. Understanding this framework and knowing how
    to apply its principles will help you to speed up your work and improve your productivity.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
