- en: Index
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: anonymous functions / [Anonymous functions](part0020_split_000.html#page "Anonymous
    functions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: apply() function / [Apply, call, and the this keyword](part0027_split_000.html#page
    "Apply, call, and the this keyword")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arrayOf functor / [Arrays and functors](part0033_split_000.html#page "Arrays
    and functors")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arrays
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Arrays and functors](part0033_split_000.html#page "Arrays and functors")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: backbone.js
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bacon.js / [Bacon.js](part0024_split_000.html#page "Bacon.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bilby.js / [Bilby.js](part0024_split_000.html#page "Bilby.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bind() function / [Binding arguments](part0027_split_000.html#page "Binding
    arguments")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bluebird / [Promises](part0034_split_000.html#page "Promises")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: C++
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: versus JavaScript / [JavaScript's object-oriented implementation – using prototypes](part0042_split_000.html#page
    "JavaScript's object-oriented implementation – using prototypes")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: call() function / [Apply, call, and the this keyword](part0027_split_000.html#page
    "Apply, call, and the this keyword")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: categories
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Category theory in a nutshell](part0032_split_000.html#page "Category
    theory in a nutshell")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: implementing / [Implementing categories](part0035.html#page "Implementing categories")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: category theory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Category theory](part0032_split_000.html#page "Category theory"), [Category
    theory in a nutshell](part0032_split_000.html#page "Category theory in a nutshell")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: type safety functions, creating / [Type safety](part0032_split_000.html#page
    "Type safety")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: objects / [Object identities](part0032_split_000.html#page "Object identities")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: classical mixins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Classical mixins](part0043_split_000.html#page "Classical mixins")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clojure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: closure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Self-invoking functions and closures](part0020_split_000.html#page
    "Self-invoking functions and closures")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using / [Self-invoking functions and closures](part0020_split_000.html#page
    "Self-invoking functions and closures")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Command Line Interface (CLI) / [CLI](part0025_split_000.html#page "CLI")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: compose
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: programming with / [Programming with compose](part0028_split_000.html#page "Programming
    with compose")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: currying
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Partial function application and currying](part0027_split_000.html#page
    "Partial function application and currying"), [Currying](part0027_split_000.html#page
    "Currying")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: development environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Development and production environments](part0025_split_000.html#page
    "Development and production environments")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dojo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: E
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: e-commerce website application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [The application – an e-commerce website](part0016_split_000.html#page
    "The application – an e-commerce website")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: imperative methods / [Imperative methods](part0016_split_000.html#page "Imperative
    methods")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ease.js
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Is JavaScript a functional programming language?](part0019_split_000.html#page
    "Is JavaScript a functional programming language?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ECMAScript
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Is JavaScript a functional programming language?](part0019_split_000.html#page
    "Is JavaScript a functional programming language?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: endofunctors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [jQuery is a monad](part0034_split_000.html#page "jQuery is a monad")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: engines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Is JavaScript a functional programming language?](part0019_split_000.html#page
    "Is JavaScript a functional programming language?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: environments, JavaScript applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: browsers / [Browsers](part0025_split_000.html#page "Browsers")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: server-side JavaScript / [Server-side JavaScript](part0025_split_000.html#page
    "Server-side JavaScript")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Command Line Interface (CLI) / [CLI](part0025_split_000.html#page "CLI")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: F
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Fantasy Land / [Fantasy Land](part0024_split_000.html#page "Fantasy Land")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: filter() function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: parameters / [Array.prototype.filter()](part0021_split_000.html#page "Array.prototype.filter()")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: forEach() function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: parameters / [Array.prototype.forEach](part0021_split_000.html#page "Array.prototype.forEach")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional inheritance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Functional inheritance](part0043_split_000.html#page "Functional inheritance")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strategy Pattern / [Functional inheritance](part0043_split_000.html#page "Functional
    inheritance"), [Strategy Pattern](part0043_split_000.html#page "Strategy Pattern")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional language
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: compiling, into JavaScript / [Functional languages that compile into JavaScript](part0025_split_000.html#page
    "Functional languages that compile into JavaScript")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functional libraries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using / [Using functional libraries with other JavaScript modules](part0025_split_000.html#page
    "Using functional libraries with other JavaScript modules")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functional libraries, for JavaScript
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Functional libraries for JavaScript](part0024_split_000.html#page "Functional
    libraries for JavaScript")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Underscore.js / [Underscore.js](part0024_split_000.html#page "Underscore.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fantasy Land / [Fantasy Land](part0024_split_000.html#page "Fantasy Land")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bilby.js / [Bilby.js](part0024_split_000.html#page "Bilby.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lazy.js / [Lazy.js](part0024_split_000.html#page "Lazy.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bacon.js / [Bacon.js](part0024_split_000.html#page "Bacon.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FFunctional / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wwu.js / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sloth.js / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stream.js / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lo-Dash.js / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ssugar / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: from.js / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JSLINQ / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boiler.js / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FFolktale / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jjQuery / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional mixins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Functional mixins](part0043_split_000.html#page "Functional mixins")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional programming
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction"), [Functional
    programming](part0017.html#page "Functional programming"), [Mostly functional
    programming](part0029_split_000.html#page "Mostly functional programming")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: used, in nonfunctional programming / [Functional programming in a nonfunctional
    world](part0019_split_000.html#page "Functional programming in a nonfunctional
    world")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: events, handling / [Handling events](part0029_split_000.html#page "Handling
    events")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and object-oriented programming, mixing / [Mixing functional and object-oriented
    programming in JavaScript](part0043_split_000.html#page "Mixing functional and
    object-oriented programming in JavaScript")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional programming, using object-oriented programming
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional inheritance / [Functional inheritance](part0043_split_000.html#page
    "Functional inheritance")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mixins / [Mixins](part0043_split_000.html#page "Mixins")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional programming language
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript / [Is JavaScript a functional programming language?](part0019_split_000.html#page
    "Is JavaScript a functional programming language?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional programming languages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Functional programming languages](part0019_split_000.html#page "Functional
    programming languages")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: performing / [What makes a language functional?](part0019_split_000.html#page
    "What makes a language functional?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: characteristics / [What makes a language functional?](part0019_split_000.html#page
    "What makes a language functional?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: advantages / [Advantages](part0019_split_000.html#page "Advantages"), [Modularity](part0019_split_000.html#page
    "Modularity"), [Mathematically correct](part0019_split_000.html#page "Mathematically
    correct")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional reactive programming
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Functional reactive programming](part0030_split_000.html#page "Functional
    reactive programming")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: reactivity / [Reactivity](part0030_split_000.html#page "Reactivity")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: subscriber, modifying / [Putting it all together](part0030_split_000.html#page
    "Putting it all together")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functional Reactive Programming (FRP) / [Functional reactive programming](part0030_split_000.html#page
    "Functional reactive programming")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function composition
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Function composition](part0028_split_000.html#page "Function composition"),
    [Function compositions, revisited](part0033_split_000.html#page "Function compositions,
    revisited")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: compose() / [Compose](part0028_split_000.html#page "Compose")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sequence, using / [Sequence – compose in reverse](part0028_split_000.html#page
    "Sequence – compose in reverse")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: compositions, versus chains / [Compositions versus chains](part0028_split_000.html#page
    "Compositions versus chains")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rewriting / [Function compositions, revisited](part0033_split_000.html#page
    "Function compositions, revisited")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function constructor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [The function constructor](part0039_split_000.html#page "The function
    constructor")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function declarations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Function declarations](part0039_split_000.html#page "Function declarations")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: versus function expressions / [Function expressions](part0039_split_000.html#page
    "Function expressions"), [Unpredictable behavior](part0039_split_000.html#page
    "Unpredictable behavior")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function expressions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Function expressions](part0039_split_000.html#page "Function expressions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: versus function constructor / [The function constructor](part0039_split_000.html#page
    "The function constructor")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function factories / [Function factories](part0027_split_000.html#page "Function
    factories")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function manipulation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Function manipulation](part0027_split_000.html#page "Function manipulation")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: apply() function / [Apply, call, and the this keyword](part0027_split_000.html#page
    "Apply, call, and the this keyword")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: this keyword / [Apply, call, and the this keyword](part0027_split_000.html#page
    "Apply, call, and the this keyword")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: call() function / [Apply, call, and the this keyword](part0027_split_000.html#page
    "Apply, call, and the this keyword")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bind() function / [Binding arguments](part0027_split_000.html#page "Binding
    arguments")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function factories / [Function factories](part0027_split_000.html#page "Function
    factories")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: working with / [Working with functions](part0020_split_000.html#page "Working
    with functions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: self-invoking function, using / [Self-invoking functions and closures](part0020_split_000.html#page
    "Self-invoking functions and closures")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: closures, using / [Self-invoking functions and closures](part0020_split_000.html#page
    "Self-invoking functions and closures")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: higher-order functions / [Higher-order functions](part0020_split_000.html#page
    "Higher-order functions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pure functions / [Pure functions](part0020_split_000.html#page "Pure functions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anonymous functions / [Anonymous functions](part0020_split_000.html#page "Anonymous
    functions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: methods, chaining / [Method chains](part0020_split_000.html#page "Method chains")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: recursive function / [Recursion](part0020_split_000.html#page "Recursion")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lazy evaluation / [Lazy evaluation](part0020_split_000.html#page "Lazy evaluation")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Functors](part0033_split_000.html#page "Functors")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: creating / [Creating functors](part0033_split_000.html#page "Creating functors")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function compositions / [Function compositions, revisited](part0033_split_000.html#page
    "Function compositions, revisited")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: G
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: global scope, variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Global scope](part0038_split_000.html#page "Global scope")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: H
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Haskell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [What makes a language functional?](part0019_split_000.html#page "What
    makes a language functional?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: higher-order functions / [Higher-order functions](part0020_split_000.html#page
    "Higher-order functions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: homomorphic operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Category theory in a nutshell](part0032_split_000.html#page "Category
    theory in a nutshell")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: identity function morphism / [Arrays and functors](part0033_split_000.html#page
    "Arrays and functors")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: inheritance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Inheritance](part0042_split_000.html#page "Inheritance")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: with Object.create() method / [Inheritance in JavaScript and the Object.create()
    method](part0042_split_000.html#page "Inheritance in JavaScript and the Object.create()
    method")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: J
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: JavaScript
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction"), [Is JavaScript
    a functional programming language?](part0019_split_000.html#page "Is JavaScript
    a functional programming language?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: recursion / [Recursion](part0037_split_000.html#page "Recursion")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: variable scope / [Variable scope](part0038_split_000.html#page "Variable scope")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function declarations / [Function declarations versus function expressions versus
    the function constructor](part0039_split_000.html#page "Function declarations
    versus function expressions versus the function constructor")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function expressions / [Function declarations versus function expressions versus
    the function constructor](part0039_split_000.html#page "Function declarations
    versus function expressions versus the function constructor")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: function constructor / [Function declarations versus function expressions versus
    the function constructor](part0039_split_000.html#page "Function declarations
    versus function expressions versus the function constructor")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: multi-paradigm language / [JavaScript – the multi-paradigm language](part0041_split_000.html#page
    "JavaScript – the multi-paradigm language")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: object-oriented implementation / [JavaScript's object-oriented implementation
    – using prototypes](part0042_split_000.html#page "JavaScript's object-oriented
    implementation – using prototypes")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: versus C++ / [JavaScript's object-oriented implementation – using prototypes](part0042_split_000.html#page
    "JavaScript's object-oriented implementation – using prototypes")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jQuery
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jQuery object
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [jQuery is a monad](part0034_split_000.html#page "jQuery is a monad")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: implementing / [jQuery is a monad](part0034_split_000.html#page "jQuery is a
    monad")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: L
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Lazy.js / [Lazy.js](part0024_split_000.html#page "Lazy.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lazy evaluation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Lazy evaluation](part0020_split_000.html#page "Lazy evaluation")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: benefits / [Lazy evaluation](part0020_split_000.html#page "Lazy evaluation")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lens() function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: writing / [Lenses](part0034_split_000.html#page "Lenses")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lenses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Lenses](part0034_split_000.html#page "Lenses")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LINQ (Language Integrated Query)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Honorable mentions](part0024_split_000.html#page "Honorable mentions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lisp
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [What makes a language functional?](part0019_split_000.html#page "What
    makes a language functional?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: local scope, variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Local scope](part0038_split_000.html#page "Local scope")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: M
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: map() function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: parameters / [Array.prototype.map()](part0021_split_000.html#page "Array.prototype.map()")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maybes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Maybes](part0034_split_000.html#page "Maybes")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: writing / [Maybes](part0034_split_000.html#page "Maybes")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: memoization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Memoization](part0037_split_000.html#page "Memoization")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: reference link / [Memoization](part0037_split_000.html#page "Memoization")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mixins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Mixins](part0043_split_000.html#page "Mixins")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: classical mixins / [Classical mixins](part0043_split_000.html#page "Classical
    mixins")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional mixins / [Functional mixins](part0043_split_000.html#page "Functional
    mixins")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: monads
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Monads](part0034_split_000.html#page "Monads")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maybes / [Maybes](part0034_split_000.html#page "Maybes")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: promises / [Promises](part0034_split_000.html#page "Promises")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lenses / [Lenses](part0034_split_000.html#page "Lenses")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jQuery object / [jQuery is a monad](part0034_split_000.html#page "jQuery is
    a monad")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: morphisms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Category theory in a nutshell](part0032_split_000.html#page "Category
    theory in a nutshell"), [Type safety](part0032_split_000.html#page "Type safety")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MVP (model-view-provider) / [Using functional libraries with other JavaScript
    modules](part0025_split_000.html#page "Using functional libraries with other JavaScript
    modules")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: O
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: object-oriented implementation, JavaScript
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: prototypes, using / [JavaScript's object-oriented implementation – using prototypes](part0042_split_000.html#page
    "JavaScript's object-oriented implementation – using prototypes")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: inheritance / [Inheritance](part0042_split_000.html#page "Inheritance")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: prototype chain / [JavaScript's prototype chain](part0042_split_000.html#page
    "JavaScript's prototype chain")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: inheritance, with Object.create() method / [Inheritance in JavaScript and the
    Object.create() method](part0042_split_000.html#page "Inheritance in JavaScript
    and the Object.create() method")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: object-oriented programming
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and functional programming, mixing / [Mixing functional and object-oriented
    programming in JavaScript](part0043_split_000.html#page "Mixing functional and
    object-oriented programming in JavaScript")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Object.create() method
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using / [Inheritance in JavaScript and the Object.create() method](part0042_split_000.html#page
    "Inheritance in JavaScript and the Object.create() method")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: object properties, variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Object properties](part0038_split_000.html#page "Object properties")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: objects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Type safety](part0032_split_000.html#page "Type safety")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ƒ o g symbol
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Category theory in a nutshell](part0032_split_000.html#page "Category
    theory in a nutshell")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: P
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: partial application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Partial function application and currying](part0027_split_000.html#page
    "Partial function application and currying"), [Partial application](part0027_split_000.html#page
    "Partial application")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: left arguments, applying / [Partial application from the left](part0027_split_000.html#page
    "Partial application from the left")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: right arguments, applying / [Partial application from the right](part0027_split_000.html#page
    "Partial application from the right")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: polyadic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Function composition](part0028_split_000.html#page "Function composition")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: polymorphic operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Category theory in a nutshell](part0032_split_000.html#page "Category
    theory in a nutshell")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: production environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Development and production environments](part0025_split_000.html#page
    "Development and production environments")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: promises
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using / [Promises](part0034_split_000.html#page "Promises")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Promises/A+ implementation / [Promises](part0034_split_000.html#page "Promises")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: prototype chain
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [JavaScript's prototype chain](part0042_split_000.html#page "JavaScript's
    prototype chain")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: prototypes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using, for inheritance / [JavaScript's object-oriented implementation – using
    prototypes](part0042_split_000.html#page "JavaScript's object-oriented implementation
    – using prototypes")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pure functions / [Pure functions](part0020_split_000.html#page "Pure functions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pyjs / [Functional languages that compile into JavaScript](part0025_split_000.html#page
    "Functional languages that compile into JavaScript")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Q
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: QuickCheck
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Bilby.js](part0024_split_000.html#page "Bilby.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: R
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: recursion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Recursion](part0037_split_000.html#page "Recursion")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Y-Combinator / [The Y-combinator](part0037_split_000.html#page "The Y-combinator")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: recursive function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Recursion](part0020_split_000.html#page "Recursion")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Divide and Conquer / [Divide and conquer](part0020_split_000.html#page "Divide
    and conquer")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: reduce() function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: parameters / [Array.prototype.reduce()](part0021_split_000.html#page "Array.prototype.reduce()")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roy / [Functional languages that compile into JavaScript](part0025_split_000.html#page
    "Functional languages that compile into JavaScript")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ruby
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: S
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ScalaCheck
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Bilby.js](part0024_split_000.html#page "Bilby.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scheme
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [What makes a language functional?](part0019_split_000.html#page "What
    makes a language functional?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: scope resolutions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Scope resolutions](part0038_split_000.html#page "Scope resolutions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: global scope / [Global scope](part0038_split_000.html#page "Global scope")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: local scope / [Local scope](part0038_split_000.html#page "Local scope")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: object properties / [Object properties](part0038_split_000.html#page "Object
    properties")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: self-invoking function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using / [Self-invoking functions and closures](part0020_split_000.html#page
    "Self-invoking functions and closures")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: server-side JavaScript
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: functional use case / [A functional use case in the server-side environment](part0025_split_000.html#page
    "A functional use case in the server-side environment")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strategy Pattern
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Strategy Pattern](part0043_split_000.html#page "Strategy Pattern")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: T
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: tail-call elimination
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [The Tail-call elimination](part0037_split_000.html#page "The Tail-call
    elimination")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: trampolining / [Trampolining](part0037_split_000.html#page "Trampolining")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tail recursion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Tail recursion](part0037_split_000.html#page "Tail recursion")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tail-call elimination / [The Tail-call elimination](part0037_split_000.html#page
    "The Tail-call elimination")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ternary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Function composition](part0028_split_000.html#page "Function composition")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: this keyword / [Apply, call, and the this keyword](part0027_split_000.html#page
    "Apply, call, and the this keyword")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: thunks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Trampolining](part0037_split_000.html#page "Trampolining")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: toolkit, functional programmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [The functional programmer's toolkit](part0021_split_000.html#page "The
    functional programmer's toolkit")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: callbacks, using / [Callbacks](part0021_split_000.html#page "Callbacks")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Array.prototype.map() / [Array.prototype.map()](part0021_split_000.html#page
    "Array.prototype.map()")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Array.prototype.filter() / [Array.prototype.filter()](part0021_split_000.html#page
    "Array.prototype.filter()")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Array.prototype.reduce() / [Array.prototype.reduce()](part0021_split_000.html#page
    "Array.prototype.reduce()")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Array.prototype.forEach / [Array.prototype.forEach](part0021_split_000.html#page
    "Array.prototype.forEach")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Array.prototype.concat / [Array.prototype.concat](part0021_split_000.html#page
    "Array.prototype.concat")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Array.prototype.reverse / [Array.prototype.reverse](part0021_split_000.html#page
    "Array.prototype.reverse")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Array.prototype.sort / [Array.prototype.sort](part0021_split_000.html#page "Array.prototype.sort")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Array.prototype.every / [Array.prototype.every and Array.prototype.some](part0021_split_000.html#page
    "Array.prototype.every and Array.prototype.some")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Array.prototype.some / [Array.prototype.every and Array.prototype.some](part0021_split_000.html#page
    "Array.prototype.every and Array.prototype.some")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trampolining
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Is JavaScript a functional programming language?](part0019_split_000.html#page
    "Is JavaScript a functional programming language?")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: trampolining
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Trampolining](part0037_split_000.html#page "Trampolining")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TypeScript / [Functional languages that compile into JavaScript](part0025_split_000.html#page
    "Functional languages that compile into JavaScript")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: U
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: UHC / [Functional languages that compile into JavaScript](part0025_split_000.html#page
    "Functional languages that compile into JavaScript")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unary functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Function composition](part0028_split_000.html#page "Function composition")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: underscore.js
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Introduction](part0014_split_000.html#page "Introduction")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Underscore.js / [Underscore.js](part0024_split_000.html#page "Underscore.js")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: V
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: variable scope
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Variable scope](part0038_split_000.html#page "Variable scope")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: scope resolutions / [Scope resolutions](part0038_split_000.html#page "Scope
    resolutions")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: issues / [Closures](part0038_split_000.html#page "Closures")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: features / [Gotchas](part0038_split_000.html#page "Gotchas")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: variadic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [Function composition](part0028_split_000.html#page "Function composition")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Y
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Y-Combinator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: about / [The Y-combinator](part0037_split_000.html#page "The Y-combinator")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: memoization / [Memoization](part0037_split_000.html#page "Memoization")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
