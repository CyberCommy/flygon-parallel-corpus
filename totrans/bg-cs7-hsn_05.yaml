- en: Creating and Using Generic Dictionaries
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you'll learn about generic dictionaries. Dictionaries are used
    to store *key-value pairs*.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a show button to the HTML
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bring up Visual Studio. We need to place a button inside <html>; so, go to Toolbox
    and grab a `Button` control. Drag and drop it below the line beginning with `<form
    id=...`. Change the text on the button to say `Show`. You can delete the `<div>`
    lines, as you don't need them.
  prefs: []
  type: TYPE_NORMAL
- en: Starting a process from a web page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What we will do in this chapter is to learn how to open, for example, Notepad
    and then explore directly from a page. For this, go to `Default.aspx`, and enter
    the Design view. Double-click on the Show button. This takes us into `Default.aspx.cs`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Delete the `Page_Load` block, so that it looks like the screen shown in *Figure
    5.5.1*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/989e1934-e9ed-4a06-9442-12fa95731d2a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.5.1: The initial Default.aspx.cs code for this project'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, below the `using System` line, enter the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You add this line because we are dealing with dictionaries. Then, add one more
    line below this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: You will see shortly why this line is needed. This is how you can start a process.
    A *process*, for example, refers to Notepad.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, between the set of curly braces beneath the line beginning with `protected
    void Button1_Click...`, enter the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Hover your mouse over `Dictionary` and look at the pop-up tip, as shown in
    *Figure 5.5.2*. Do you see where it says TKey? This indicates the type of key,
    and TValue specifies the type of value. In our case, both will be of the `string`
    type:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/009d3309-96e2-4bf2-be1d-970fb765d60b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.5.2: Pop-up tip for Dictionary'
  prefs: []
  type: TYPE_NORMAL
- en: Note that we give the dictionary a name such as `filePrograms`. Next, to make
    memory for it, enter `new Dictionary<string, string>` to indicate the type of
    key and the type of value and close this with a semicolon.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next stage, we will fill this dictionary. So, enter the following directly
    below this line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Making a verbatim string
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the preceding line, you need to specify the key-value pairs within the parentheses.
    The key is `notepad.exe`. If you try to put a path such as `c:\data\samplefile.txt`
    directly into your code, it doesn't work. You see how it gets underlined red?
    The popup says Represents text as a series of Unicode characters. These things
    don't work. So, to fix this, you put the `@` (at) symbol in front of it. Now,
    you have a *verbatim string*.
  prefs: []
  type: TYPE_NORMAL
- en: 'With the old approach, this is how you handled this: `c:\\data\\samplefile.txt`.
    This is called *character escaping*. If you try this with the preceding line,
    notice that the red underline goes away because `c:\` already means something.
    So, to escape the usual meaning, you add the second backslash. This is the old
    way, though. The new way for this situation is to use a verbatim, string so that
    it''s interpreted exactly as it appears.'
  prefs: []
  type: TYPE_NORMAL
- en: In this context here, Notepad is the key and the value is the `samplefile.txt`
    file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, enter the following line directly beneath the preceding one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: So, Internet Explorer will open the [http://www.bing.com](http://www.bing.com)
    page. You see?
  prefs: []
  type: TYPE_NORMAL
- en: Iterating over key-value pairs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, imagine that we want to iterate over these keys, because we potentially
    have many of them. One way to do this is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'You can iterate over key-value pairs like this. Next, enter the following between
    a set of curly braces beneath the preceding line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Here, after `Process.start`, you display the key and the values. So, you can
    say `kvp.key`, which is a property of the key-value pair and `kvp.value` is a
    property of the key-value pair as well.
  prefs: []
  type: TYPE_NORMAL
- en: In a realistic application, where a program could be missing or something else
    could happen, it would be better to put this in a `TryCatch` block and so on,
    but for our purposes, this is sufficient and it keeps it short.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want, you can also iterate over individual keys and values and so on.
    So, as another example, you can do something like the following beneath the closed
    curly brace under the preceding line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: To get the individual keys, you type the name of the dictionary and then the
    name of the keys collection, `Keys`, which appears in the popup.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is how you can access just the keys. If you want to display them, you
    definitely can; to do this, enter the following between a set of curly braces
    under this line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: To show the key, you type `{key}`. Remember to insert the `<br>` tag, the `+=`
    operator to append, the `$` symbol, and close with a semicolon.
  prefs: []
  type: TYPE_NORMAL
- en: Making a directory and creating a file from Command Prompt
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, you want to make sure that you have the `samplefile.txt` file. So, to
    do that in Windows, type `cmd`, which is short for Command Prompt, and open that.
    At the `C:\>` prompt, start by typing `cd..` to go up one level and then `cd..`
    again to go up another level. Then enter `cd data` to change to the data directory.
    The system responds that this path does not exist, as you can see in *Figure 5.5.3*;
    so, we''ll have to create the path and make the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/29a371ac-4c57-45e0-ba03-7e517bba2a76.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.5.3: The system indicates that the path c:\>data does not exist'
  prefs: []
  type: TYPE_NORMAL
- en: 'To create the path, type the following at command prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, enter the following to change into that directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, type the following to show you the list of files in the directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see in the *Figure 5.5.3*, there is nothing inside the directory:
    it''s new, we just created it. So, to open a file in Notepad, type the following
    at the prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'This makes the file. When the screen prompt asks if you want to create a new
    file, click on the Yes button. This will open a blank Notepad file. Enter some
    text, as shown in *Figure 5.5.4*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0d7aed0c-8b5b-45ce-89f3-f25a7949c2bd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.5.4: Enter some text in the new Notepad file you created'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure that you save it in the `C:\data` directory (*Ctrl* + *S*) and then
    you can close it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, take a look. To recall previous commands, you can just press the up arrow
    key or, in this case, type `dir` at command prompt as earlier: `C:\data\dir`.
    Now you can see that `samplefile.txt` is present in the directory, as shown in
    *Figure 5.5.5*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7277312f-5756-498d-a848-6caef44af494.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.5.5: samplefile.txt is now present in the directory'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now launch this in your browser, and take a look at the results. Click on the
    Show button. It''s working as expected: it opened both the Notepad file and the
    Bing home page, as shown in *Figure 5.5.6*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d0d3b7c1-2e6e-44e2-b10f-b4be8f0fa482.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.5.6: The Notepad file and http://www.bing.com are opened with our
    program'
  prefs: []
  type: TYPE_NORMAL
- en: You can now launch any browser, a process of some kind, directly from your page
    and show it and you can open up a file, if you want, directly from a browser.
  prefs: []
  type: TYPE_NORMAL
- en: Note that this works because we are running the page from our local web server
    and thus we have access to Notepad and the browser. In a real internet application,
    things would be different.
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, you can see the listing of the keys, as shown in *Figure 5.5.7*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/54c2b2a7-0a16-4a7f-90c5-357885fe356b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.5.7: The listing of the keys'
  prefs: []
  type: TYPE_NORMAL
- en: So, these are some of the basics of what you can do with a generic dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter review
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For review, the complete version of the `Default.aspx.cs` file for this chapter,
    including comments, is shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned about generic dictionaries. These are known as
    key-value pairs. You started a process from a web page, made a verbatim string,
    iterated over key-value pairs, and made a directory and created a file from command
    prompt.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll take a look at the connection between delegates and
    lambda expressions.
  prefs: []
  type: TYPE_NORMAL
