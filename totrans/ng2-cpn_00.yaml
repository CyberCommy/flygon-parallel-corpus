- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Angular 2 is a leap forward from the previous Angular 1.x framework, which became
    the most popular frontend JavaScript framework in history.
  prefs: []
  type: TYPE_NORMAL
- en: It is a complete re-write, an up-to-date platform that is built upon web standards
    and modern APIs. With Angular 2, you can build JavaScript applications aimed at
    the browser, server, mobile, and desktop, thanks to an architecture that decoupled
    the view layer of Angular from the platform core and services.
  prefs: []
  type: TYPE_NORMAL
- en: 'This book will be focused on the UI layer of Angular: components. We will explore
    the rich API and multiple options available for building and composing UI components
    for powerful user interfaces and views.'
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0014.xhtml#aid-DB7S1 "Chapter 1. Angular 2 Component Architecture"),
    *Angular 2 Component Architecture*, provides an overview of the existing popular
    architectural patterns for building frontend applications, and the new approach
    that relys on composing self-contained custom components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0020.xhtml#aid-J2B81 "Chapter 2. Setting Up an Angular 2 Development
    Environment with angular-cli"), *Setting Up an Angular 2 Development Environment
    with angular-cli*, covers setting up the development environment with angular-cli.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0025.xhtml#aid-NQU21 "Chapter 3. The TypeScript Primer"), *The
    TypeScript Primer*, covers the basics of the TypeScript language and what you
    need to know about TypeScript.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0031.xhtml#aid-TI1E1 "Chapter 4. Building a Basic Component"),
    *Building a Basic Component*, covers the steps to build a basic component.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0038.xhtml#aid-147LC1 "Chapter 5. Building Dynamic Components"),
    *Building Dynamic Components*, covers the steps to transform your static component
    into a dynamic component using core directives and data binding.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0044.xhtml#aid-19UOO1 "Chapter 6. Component Communication"),
    *Component Communication*, covers different ways to make your components communicate
    with each other.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0048.xhtml#aid-1DOR01 "Chapter 7. Putting It All Together"),
    *Putting It All Together*, covers building the accordion component and the component
    life cycle.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0054.xhtml#aid-1JFUC1 "Chapter 8. Integrating Third-Party Components"),
    *Integrating Third-Party Components*, covers the integration of a tooltip widget
    from the popular Bootstrap library.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0059.xhtml#aid-1O8H61 "Chapter 9. Angular 2 Directives"), *Angular
    2 Directives*, covers the usage of directives in Angular 2.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You need to know how to read and write JavaScript. Other technologies, such
    as C# or Java, may help you understand the syntax, but are not mandatory.
  prefs: []
  type: TYPE_NORMAL
- en: Some experience with web development and related technologies such as HTML and
    CSS is required, so make sure you are familiar with that.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a frontend developer with some experience in Angular who wants to
    understand Angular 2 components and use them to create powerful user interfaces,
    then this book is for you.
  prefs: []
  type: TYPE_NORMAL
- en: This books is also for angular 1.x developers who want to upgrade their knowledge
    and skills.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the **Next** button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
