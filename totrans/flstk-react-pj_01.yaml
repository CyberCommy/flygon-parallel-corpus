- en: Unleashing React Applications with MERN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: React may have opened up new frontiers for frontend web development and changed
    the way we program JavaScript user interfaces, but we still need a solid backend
    to build a complete web application. Although there are myriad options when selecting
    backend technologies, the benefits and appeal of using a full JavaScript stack
    are undeniable, especially when there are robust and widely-adopted backend technologies
    such as Node, Express, and MongoDB. Combining the potential of React with these
    industry-tested, server-side technologies creates a diverse array of possibilities
    when developing real-world web applications.
  prefs: []
  type: TYPE_NORMAL
- en: This book guides you through setting up for MERN-based web development, to building
    real-world web applications of varying complexities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before diving into the development of these web applications, we are going
    to answer the following questions in this chapter to set the context for using
    MERN:'
  prefs: []
  type: TYPE_NORMAL
- en: What is the MERN stack?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why is MERN relevant today?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When is MERN a good fit for developing web apps?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How is this book organized to help master MERN?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MERN stack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MongoDB, Express, React, and Node are used in tandem to build web applications
    and make up the MERN stack. In this lineup, Node and Express bind the web backend
    together, MongoDB serves as the NoSQL database, and React makes the frontend that
    the user sees and interacts with.
  prefs: []
  type: TYPE_NORMAL
- en: All four of these technologies are free, open-source, cross-platform, and JavaScript-based,
    with extensive community and industry support. Each technology has a unique set
    of attributes, which when integrated together make a simple but effective full
    JavaScript stack for web development.
  prefs: []
  type: TYPE_NORMAL
- en: Node
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Node was developed as a JavaScript runtime environment built on Chrome's V8
    JavaScript engine. Node made it possible to start using JavaScript on the server-side
    to build a variety of tools and applications beyond previous use cases that were
    limited to within a browser.
  prefs: []
  type: TYPE_NORMAL
- en: Node has an event-driven architecture capable of asynchronous, non-blocking
    I/O. Its unique non-blocking I/O model eliminates the waiting approach to serving
    requests. This allows building scalable and lightweight real-time web applications
    that can efficiently handle many requests.
  prefs: []
  type: TYPE_NORMAL
- en: Node's default package management system, the Node package manager or npm, comes
    bundled with the Node installation. Npm gives access to hundreds of thousands
    of reusable Node packages built by developers all over the world and boasts that
    it is currently the largest ecosystem of open source libraries in the world.
  prefs: []
  type: TYPE_NORMAL
- en: Learn more about Node at [https://nodejs.org/en/](https://nodejs.org/en/) and
    browse through available npm modules at [https://www.npmjs.com/](https://www.npmjs.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Express
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Express is a basic framework for building web applications and APIs with a Node
    server. It provides a simple layer of fundamental web application features that
    complements Node.
  prefs: []
  type: TYPE_NORMAL
- en: In any web application developed with Node, Express can be used as a routing
    and middleware web framework that has minimal functionality of its own—an Express
    application is essentially a series of middleware function calls.
  prefs: []
  type: TYPE_NORMAL
- en: '**Middleware** functions are functions that have access to the HTTP request
    and response objects, and also the next middleware function in the web application''s
    request-response cycle.'
  prefs: []
  type: TYPE_NORMAL
- en: It is possible to insert almost any compatible middleware of your choice into
    the request handling chain, in almost any order, making Express very flexible
    to work with.
  prefs: []
  type: TYPE_NORMAL
- en: Find out what is possible with Express.js at [expressjs.com](http://expressjs.com).
  prefs: []
  type: TYPE_NORMAL
- en: MongoDB
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MongoDB is a top choice when deciding on a NoSQL database for any application.
    It is a document-oriented database that stores data in flexible, JSON-like documents.
    This means fields can vary from document to document and data models can evolve
    over time in response to changing application requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Applications that place a high priority on availability and scalability benefit
    from MongoDB's distributed architecture features. It comes with built-in support
    for high availability, horizontal scaling using sharding, and multi-data center
    scalability across geographic distributions.
  prefs: []
  type: TYPE_NORMAL
- en: MongoDB has an expressive query language, enabling ad hoc queries, indexing
    for fast lookups, and real-time aggregation that provides powerful ways to access
    and analyze data while maintaining performance even when data size grows exponentially.
  prefs: []
  type: TYPE_NORMAL
- en: Explore MongoDB features and services at [https://www.mongodb.com/](https://www.mongodb.com/).
  prefs: []
  type: TYPE_NORMAL
- en: React
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: React is a declarative and component-based JavaScript library for building user
    interfaces. Its declarative and modular nature makes it easy for developers to
    create and maintain reusable, interactive, and complex user interfaces.
  prefs: []
  type: TYPE_NORMAL
- en: Large applications that display a lot of changing data can be fast and responsive
    if built with React, as it takes care of efficiently updating and rendering just
    the right UI components when specific data changes. React does this efficient
    rendering with its notable implementation of a virtual DOM, setting React apart
    from other web UI libraries that handle page updates with expensive manipulations
    directly in the browser's DOM.
  prefs: []
  type: TYPE_NORMAL
- en: Developing user interfaces using React also forces frontend programmers to write
    well-reasoned and modular code that is reusable, easier to debug, test, and extend.
  prefs: []
  type: TYPE_NORMAL
- en: Check out resources on React at [https://reactjs.org/](https://reactjs.org/).
  prefs: []
  type: TYPE_NORMAL
- en: Since all four technologies are JavaScript-based, these are inherently optimized
    for integration. However, how these are actually put together in practice to form
    the MERN stack can vary based on application requirements and developer preferences,
    making MERN customizable and extensible to specific needs.
  prefs: []
  type: TYPE_NORMAL
- en: Relevance of MERN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: JavaScript has come a long way since its inception and it is ever-growing. The
    MERN stack technologies have challenged the status quo and broken new ground for
    what is possible with JavaScript. But when it comes to developing real-world applications
    that need to be sustainable, is it a worthy choice? Some of the reasons that make
    a strong case for choosing MERN for your next web application are briefly outlined
    in the following.
  prefs: []
  type: TYPE_NORMAL
- en: Consistency across the technology stack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As JavaScript is used throughout, developers don't need to learn and change
    gears frequently to work with very different technologies. This also enables better
    communication and understanding across teams working on different parts of the
    web application.
  prefs: []
  type: TYPE_NORMAL
- en: Less time to learn, develop, deploy, and extend
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Consistency across the stack also makes it easy to learn and work with MERN,
    reducing the overhead of adopting a new stack and the time to develop a working
    product. Once the working base of a MERN application is set up and a workflow
    established, it takes less effort to replicate, further develop, and extend any
    application.
  prefs: []
  type: TYPE_NORMAL
- en: Widely adopted in the industry
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Organizations of all sizes have been adopting the technologies in this stack
    based on their needs because they can build applications faster, handle highly
    diverse requirements, and manage applications more efficiently at scale.
  prefs: []
  type: TYPE_NORMAL
- en: Community support and growth
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Developer communities surrounding the very popular MERN stack technologies are
    quite diverse and growing on a regular basis. With lots of people continuously
    using, fixing, updating, and willing to help grow these technologies, the support
    system will remain strong for the foreseeable future. These technologies will
    continue to be maintained, and resources are very likely to be available in terms
    of documentation, add-on libraries, and technical support.
  prefs: []
  type: TYPE_NORMAL
- en: The ease and benefits of using these technologies are already widely recognized.
    Because of the high-profile companies that continue adoption and adaptation, and
    the growing number of people contributing to the code bases, providing support,
    and creating resources, technologies in the MERN stack will continue to be relevant
    for a long time to come.
  prefs: []
  type: TYPE_NORMAL
- en: Range of MERN applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Given the unique features attributed to each technology, along with the ease
    of extending functionalities of this stack by integrating other technologies,
    the range of applications that can be built with this stack is actually quite
    diverse.
  prefs: []
  type: TYPE_NORMAL
- en: These days, web applications are, by default, expected to be rich client apps
    that are immersive, interactive, and don't fall short on performance and availability.
    The grouping of MERN strengths makes it perfect for developing web applications
    that meet these very aspects and demands.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, novel and upcoming attributes of some of these technologies, such
    as low-level operation manipulation with Node, large file streaming capabilities
    with MongoDB GridFS, and virtual reality features on the web using React 360,
    make it possible to build even more complex and unique applications with MERN.
  prefs: []
  type: TYPE_NORMAL
- en: It may seem reasonable to pick specific features in the MERN technologies, and
    argue why these don't work for certain applications. But given the versatile nature
    of how a MERN stack can come together and be extended; these concerns can be addressed
    in MERN on a case-by-case basis. In this book, we will demonstrate how to make
    such considerations when faced with specific requirements and demands in the application
    being built.
  prefs: []
  type: TYPE_NORMAL
- en: MERN applications developed in this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To demonstrate the breadth of possibilities with MERN and how you can easily
    start building a web application with varying features, this book will showcase
    everyday use web applications alongside complex and rare web experiences:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/32a3447c-a28e-46f0-8a79-13201edf6fb5.jpg)The preceding screenshot
    gives a glimpse of the four different MERN applications developed in the rest
    of this book'
  prefs: []
  type: TYPE_NORMAL
- en: Social media platform
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the first MERN application, we will build a basic social media application
    inspired by Twitter and Facebook. This social media platform will implement simple
    features such as post sharing, liking and commenting, following friends, and an
    aggregated news feed.
  prefs: []
  type: TYPE_NORMAL
- en: Online marketplace
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: E-commerce web applications of all sorts are abundant on the internet, and these
    will not go out of style anytime soon. Using MERN, we will build an online marketplace
    application covering core aspects, such as support for seller accounts, product
    listings, a shopping cart for customers, and payment processing.
  prefs: []
  type: TYPE_NORMAL
- en: Media streaming application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To test out some advanced MERN capabilities, a more immersive application, such
    as a media streaming application, is the next pick. Inspired by features from
    Netflix and YouTube, this application will implement content uploading and viewing
    capabilities with a media content upload feature for content providers, and real-time
    content streaming for viewers.
  prefs: []
  type: TYPE_NORMAL
- en: VR game for the web
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The release of React 360 makes it possible to apply web VR capabilities to React
    user interfaces. We will explore how to create rare web experiences with React
    360 in MERN by putting together a basic virtual reality game application for the
    web. Users will be able to make and play VR games, where each game will have animated
    VR objects that the player can collect to complete the game.
  prefs: []
  type: TYPE_NORMAL
- en: Book structure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book aims to help JavaScript developers who have zero-to-some experience
    with the MERN stack, to set up and start developing web applications of varying
    complexity. It includes guidelines for building out and running the different
    applications supplemented with code snippets and explanations of key concepts.
  prefs: []
  type: TYPE_NORMAL
- en: The book is organized into five parts, progressing from basic to advanced topics,
    taking you on a journey of building MERN from the ground up, then using it to
    develop different applications with simple to complex features, while demonstrating
    how to extend the capabilities of the MERN stack based on application requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with MERN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](8a7a0b57-1a6b-4b34-b401-e56d2c0884e2.xhtml), *Unleashing React
    Applications with MERN* and [Chapter 2](844f64fb-8fc2-47a1-94a4-dea6bc8f5665.xhtml),
    *Preparing the Development Environment* set the context for developing web applications
    in a MERN stack and guide you through setting up your development environment.'
  prefs: []
  type: TYPE_NORMAL
- en: Building MERN from the ground up – a skeleton application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 3](b24d9630-844d-4c36-b703-5acd3613ac6d.xhtml),* Building a Backend
    with MongoDB, Express, and Node* and [Chapter 4](e161ddf5-86d2-4511-a7df-558b512f46ed.xhtml),* Adding
    a React Frontend to Complete MERN* show how to bring the MERN stack technologies
    together to form a skeleton web application with minimal and basic features. This
    skeletal MERN application acts as a base for the four main applications developed
    in the rest of the book.'
  prefs: []
  type: TYPE_NORMAL
- en: Developing basic web applications with MERN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, you will become familiar with the core attributes of a MERN stack
    web application by building out two real-world applications—a simple social media
    platform in [Chapter 5](8af4986f-1f37-45f2-ba05-85caa119a652.xhtml)*,* *Starting
    with a Simple Social Media Application*, and an online marketplace in [Chapter
    6](aadad9b8-c30c-4e0a-8ebd-2ea6635d43bb.xhtml)*, Exercising New MERN Skills with
    an Online Marketplace* and [Chapter *7*](b73b9122-dd0c-45dc-ac34-94ce990e0437.xhtml),
    *Extending the Marketplace for Orders and Payments*.
  prefs: []
  type: TYPE_NORMAL
- en: Advancing to complex MERN applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 8](b24d9630-844d-4c36-b703-5acd3613ac6d.xhtml), *Building a Media
    Streaming Application*,[ Chapter 9](3e7c6b91-643a-4af2-8b06-c5ae75356984.xhtml),
    *Customizing Media Player and Improve SEO*, [Chapter 10](b9ae6b12-d545-4832-9d0a-9fb4a84a033e.xhtml)*,
    Developing a Web-Based VR Game*, and [Chapter 11](f9761c7c-dfc5-4247-9cfc-aaebc78b93da.xhtml),
    *Making the VR Game Dynamic using MERN* show how this stack can be used to develop
    applications with more complex and immersive features, such as media streaming
    and virtual reality using React 360.'
  prefs: []
  type: TYPE_NORMAL
- en: Going forward with MERN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finally [Chapter 12](64ad3297-57ae-4fb8-9b31-43641cee1788.xhtml), *Following
    Best Practices and Developing MERN Further* wraps up the preceding chapters and
    applications developed by expanding on best practices to follow to make successful
    MERN applications, suggesting improvements and further developments.
  prefs: []
  type: TYPE_NORMAL
- en: You may choose to use the book out of the prescribed order based on your experience
    level and preference. A developer who is very new to MERN can follow the path
    set out in the book. For a more seasoned JS developer, the chapters in the *Building
    MERN from the ground up* -* a skeleton application* section would be a good place
    to start setting up the base application, then pick any of the four applications
    to build and extend.
  prefs: []
  type: TYPE_NORMAL
- en: Getting the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The content in this book is practical-oriented and covers the implementation
    steps, code, and concepts relevant to building out each MERN application. It is
    recommended that, rather than attempting to just read through the chapters, you
    should run the relevant code in parallel, and browse through the application features
    while following the explanations in the book.
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapters that discuss code implementations will point to GitHub repositories
    containing the complete code with instructions on how to run the code. You can
    pull the code, install, and run it before reading through the chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/0758a73f-e9a3-4256-94f9-ba1e653e30a4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You may consider the recommended following steps outlined to follow the implementations
    in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: Before diving into the implementation details discussed in the chapter, pull
    code from the relevant GitHub repository
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Follow instructions with the code to install and run the application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Browse the features of the running application, while reading the feature descriptions
    in the relevant chapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With the code running in development mode and also open in the editor, refer
    to the steps and explanations in the book to get a deeper understanding of the
    implementations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This book aims to provide a quick onboarding with working code for each application.
    You can experiment with, improve, and extend this code as desired. For an active
    learning experience, you are encouraged to refactor and modify the code while
    following the book. In some examples, the book chooses verbose code over succinct
    and cleaner code because it is easier to reason about for newcomers. In some other
    implementations, the book sticks with more widely used and traditional conventions
    over modern and upcoming JavaScript conventions. This is done to minimize disparity
    when you refer to online resources and documentation while researching the discussed
    technologies and concepts on your own. These instances where the code in the book
    can be updated, serve as good opportunities to explore and grow skills beyond
    what is covered in the book.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discovered the context for developing web applications in
    the MERN stack, and how this book will help you develop with this stack.
  prefs: []
  type: TYPE_NORMAL
- en: MERN stack projects integrate MongoDB, Express, React, and Node to build web
    applications. Each of the technologies in this stack has made relevant strides
    in the world of web development. These are widely adopted and continue to improve
    with the support of growing communities. It is possible to develop MERN applications
    with diverse requirements, ranging from everyday use applications to more complex
    web experiences. The practical-oriented approach in this book can be used to grow
    MERN skills from basic to advanced, or for diving right into building the more
    complex applications.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will start gearing up for MERN application development
    by setting up the development environment.
  prefs: []
  type: TYPE_NORMAL
