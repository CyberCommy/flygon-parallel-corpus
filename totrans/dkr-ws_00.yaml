- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: About the Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Docker containers are the future of highly scalable software systems and make
    it easy to create, run, and deploy apps.
  prefs: []
  type: TYPE_NORMAL
- en: If you're looking to leverage them without getting overwhelmed by the technicalities,
    add *The Docker Workshop* to your reading list!
  prefs: []
  type: TYPE_NORMAL
- en: With this book, you'll be able to jumpstart your knowledge and work with containers
    and Docker using interactive activities.
  prefs: []
  type: TYPE_NORMAL
- en: The workshop starts with an overview of Docker containers, enabling you to understand
    how they work. You'll run third-party Docker images and also create your own images
    using Dockerfiles and multi-stage Dockerfiles. Next, you'll create environments
    for Docker images, and expedite your deployment process with continuous integration.
    Moving ahead, you'll tap into interesting topics and learn how to implement production-ready
    environments using Docker Swarm. To further secure Docker images and ensure that
    production environments are running at maximum capacity, you'll apply best practices.
    Later, you'll gain the skills to successfully move Docker containers from development
    to testing, and then into production. While doing so, you'll learn how to troubleshoot
    issues, clear up resource bottlenecks and optimize the performance of services.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this Docker book, you'll be well-versed with Docker fundamentals
    and be able to use Docker containers in real-world use cases.
  prefs: []
  type: TYPE_NORMAL
- en: Audience
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you're a developer or a Docker beginner who wants to gain a practical understanding
    of Docker containers, this book is the ideal guide. Experience in running command
    shells and knowledge of either the IntelliJ, Atom, or VSCode editor are required
    before you get started with this Docker containers book.
  prefs: []
  type: TYPE_NORMAL
- en: About the Chapters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 1*, *Running My First Docker Container*, begins with a basic introduction
    to Docker, providing a discussion of the background architecture, ecosystem, and
    basic Docker commands.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 2*, *Getting Started with Dockerfiles*, introduces you to the Dockerfile,
    its background, and how to use the Dockerfile to create and run your first Docker
    containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 3*, *Managing Your Docker Images*, provides more details on Docker
    images, image repositories, and publishing your own images.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 4*, *Multi-Stage Dockerfiles*, shows you how to extend your Dockerfile
    further, using a multi-stage Dockerfile in your project.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 5*, *Composing Environments with Docker Compose*, introduces Docker
    Compose and how you can use docker-compose files to generate entire working environments.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 6*, *Introduction to Docker Networking*, explains why networking needs
    to be approached differently in Docker and how you can implement communication
    between services and host systems.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 7*, *Docker Storage*, details the utilization of storage in your Docker
    containers and environments.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 8*, *CI/CD Pipeline*, describes the creation of a continuous integration/continuous
    deployment pipeline using Jenkins.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 9*, *Docker Swarm*, covers the orchestration of your Docker services
    using Swarm.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 10*, *Kubernetes*, takes your orchestration to the next level, introducing
    you to Kubernetes and how to deploy your container images across a basic cluster.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 11*, *Docker Security*, walks you through ways to make your Docker
    images and containers as secure as possible, providing ways in which you can reduce
    risk while using containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 12*, *Best Practices*, provides information on how you can ensure
    that your containers are running as efficiently as possible.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 13*, *Monitoring Docker Metrics*, covers metrics collection for your
    running Docker containers and how to implement Prometheus to help monitor these
    metrics.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 14*, *Collecting Container Logs*, teaches you how to use Splunk to
    collect logs from your running Docker containers, which will allow you to aggregate,
    search, and display your logging details.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 15*, *Extending Docker with Plugins*, covers the ways in which you
    can extend Docker further by creating your own plugins to use with your Docker
    application.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'There is also a bonus chapter, *What''s Next for Docker* available with the
    free interactive edition of this book. You can find it online at: https://courses.packtpub.com/.'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, and user input are shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '"Create a file named `docker-compose.yml` in your current working directory."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code, a terminal command, or text to create a YAML file is set as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'New important words are shown like this: "Docker provides an online repository
    to store your images called **Docker Hub**."'
  prefs: []
  type: TYPE_NORMAL
- en: 'Words that you see on the screen (for example, in menus or dialog boxes) appear
    in the text like this: "On the left sidebar, click on `Settings` and then on `Users`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'Key parts of code snippets are highlighted as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Long code snippets are truncated, and the corresponding names of the code files
    on GitHub are placed at the top of the truncated code. The permalinks to the entire
    code are placed below the code snippet. It should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Dockerfile
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The complete code for this example can be found at [https://packt.live/2E9OErr](https://packt.live/2E9OErr).
  prefs: []
  type: TYPE_NORMAL
- en: Setting Up Your Environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we explore the book in detail, we need to set up specific software and
    tools. In the following section, we shall see how to do that.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You need at least a dual-core CPU with virtualization support, 4 GB of memory,
    and 20 GB of free disk space.
  prefs: []
  type: TYPE_NORMAL
- en: Operating System Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The recommended operating system is Ubuntu 20.04 LTS. If you are using Mac or
    Windows, you should be able to run the commands in this book, but it is not guaranteed
    that they will all work as expected. We suggest you install a virtualized environment
    on your system using an application such as VirtualBox or VMware. We have also
    provided the instructions at the end of this section on how you can set up dual
    boot on your Windows system to use Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: Installation and Setup
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section lists installation instructions for Docker and Git as they are
    the main requirements for this workshop. Installation instructions for any other
    software that's used will be provided in the specific chapter that covers it.
    Since we are recommending Ubuntu, we will use the APT package manager to install
    most of the required software in Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: Updating Your Package Lists
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Before you use APT to install any packages in Ubuntu, make sure that your packages
    are up to date. Use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Furthermore, you may choose to upgrade any upgradable packages on your machine
    by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Installing Git
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The code bundle for this workshop is available on our GitHub repository. You
    can use Git to clone the repository to get all the code files.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the following command to install Git on Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Docker
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Docker is the default containerization engine used by this workshop. You will
    learn more about the application as you move through the chapters.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the following command to install Docker on Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'When the installation is complete, you will need to make sure that the Docker
    daemon is started and running on your system. Do this with the following command,
    making sure that you are running this as an elevated user with the `sudo` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Ensure that the Docker daemon starts the next time you start your system. Run
    the following command to make sure that Docker starts each time you stop or restart
    the system you are installing it on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify the version of Docker you have installed by using the `docker` command
    with the `--version` option. Run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see a similar output to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'There is a good chance that if you are not performing commands as the root
    user, you will not be able to run the majority of the commands needed. If you
    run the example following command, you may experience an access issue connecting
    to the Docker daemon:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'If you are running the command as a user that does not have elevated privileges,
    you may see the following error:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'To resolve this issue, add the current user to the Docker group that was created
    when you installed the application. Use the following command to perform this
    on your system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'To activate these changes, you will need to either log out of your system and
    then log back in, or perform the following command to create a new session for
    your current user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Run the `docker ps` command again to ensure that your changes were successful:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'If everything has worked correctly, you should see an output similar to the
    following, showing that you have no Docker containers running on your system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Dual-Booting Ubuntu for Windows Users
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, you will find instructions on how to dual-boot Ubuntu if you
    are running Windows.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Before installing any operating systems, it is highly recommended that you back
    up your system state and all of your data.
  prefs: []
  type: TYPE_NORMAL
- en: Resizing Partitions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you have Windows set up on your machine, it is most likely that your hard
    disk is completely utilized—that is, all of the available space is partitioned
    and formatted. You will need to have some unallocated space on the hard disk,
    so resize a partition with plenty of free space to make space for your Ubuntu
    partitions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the `Computer Management` utility. Press *Win* + *R* and type `compmgmt.msc`:![Figure
    0.1: The Computer Management utility on Windows'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/B15021_0_01.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.1: The Computer Management utility on Windows'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the left-hand pane, go to the `Storage > Disk Management` option, as shown
    in the following screenshot:![Figure 0.2: Disk Management'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/B15021_0_02.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.2: Disk Management'
  prefs: []
  type: TYPE_NORMAL
- en: You will see a summary of all your partitions in the lower half of the screen.
    You can also see the drive letters associated with all the partitions and information
    about the Windows boot drive. If you have a partition that has plenty of free
    space (20 GB +) and is neither the boot drive (`C:`), nor the recovery partition,
    nor the **Extensible Firmware Interface** (**EFI**) system partition, this will
    be the ideal option to choose. If there is no such partition, then you can resize
    the `C:` drive.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this example, you will choose the `D:` drive. Right-click on any partition
    and open `Properties` to check the free space available:![Figure 0.3: Checking
    the properties of the D: drive'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/B15021_0_03.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.3: Checking the properties of the D: drive'
  prefs: []
  type: TYPE_NORMAL
- en: Now, before you resize the partition, you need to ensure that there are no errors
    on the filesystem or any hardware faults. Do this using the **chkdsk** utility
    on Windows.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open Command Prompt by pressing *Win* + *R* and typing `cmd.exe`. Now, run
    the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Replace the drive letter with the one that you want to use. You should see
    a response similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 0.4: Scanning a drive for any filesystem errors'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B15021_0_04.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.4: Scanning a drive for any filesystem errors'
  prefs: []
  type: TYPE_NORMAL
- en: Note that in *Figure 0.4*, Windows reported that it had scanned the filesystem
    and found no problems. If any problems are encountered for your case, you should
    get them fixed first to prevent the loss of data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, return to the `Computer Management` window, right-click on the desired
    drive, and then click on `Shrink Volume`, as shown in the following screenshot:![Figure
    0.5: Opening the Shrink Volume dialog box'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/B15021_0_05.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.5: Opening the Shrink Volume dialog box'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the prompt window, enter the amount of space that you want to shrink. In
    this example, you are clearing approximately 25 GB of disk space by shrinking
    your `D:` drive:![Figure 0.6: Clearing 25 GB by shrinking the existing volume'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/B15021_0_06.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.6: Clearing 25 GB by shrinking the existing volume'
  prefs: []
  type: TYPE_NORMAL
- en: 'After you shrink your drive, you should be able to see unallocated space on
    your drive:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 0.7: Unallocated space after shrinking the volume'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B15021_0_07.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.7: Unallocated space after shrinking the volume'
  prefs: []
  type: TYPE_NORMAL
- en: Now you are ready to install Ubuntu. But first, you need to download it and
    create a bootable USB, which is one of the most convenient installation mediums.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Bootable USB Drive to Install Ubuntu
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You will need a flash drive with a minimum capacity of 4 GB to create a bootable
    USB drive. Note that all the data on this will be erased:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the ISO image for Ubuntu Desktop from [https://releases.ubuntu.com/20.04/](https://releases.ubuntu.com/20.04/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, burn the ISO image to a USB flash disk and create a bootable USB drive.
    There are many tools available for this, and you can use any of them. In this
    example, you will use Rufus, which is free and open source. You can get it from
    [https://www.fosshub.com/Rufus.html](https://www.fosshub.com/Rufus.html).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have installed Rufus, plug in your USB flash disk and open Rufus. Ensure
    that the proper `Device` option is selected, as shown in *Figure 0.8*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press the `SELECT` button under `Boot selection` and then open the Ubuntu 20.04
    image that you have downloaded.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The choice for `Partition scheme` will depend on how your BIOS and your disk
    drive are configured. `GPT` will be the best option for most modern systems, while
    `MBR` will be compatible with older systems:![Figure 0.8: Configurations for Rufus'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/B15021_0_08.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.8: Configurations for Rufus'
  prefs: []
  type: TYPE_NORMAL
- en: You may leave all other options on their defaults, and then press `START`. After
    completion, close Rufus. You now have a bootable USB drive ready to install Ubuntu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Installing Ubuntu
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now, use the bootable USB drive to install Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
- en: To install Ubuntu, boot using the bootable installation media that you just
    created. In most cases, you should be able to do that by simply having the USB
    drive plugged in while starting up your machine. If you don't automatically boot
    into the Ubuntu setup, go into your BIOS settings and ensure that your USB device
    is at the highest boot priority and that Secure Boot is turned off. The instructions
    for entering the BIOS setup are usually displayed on the splash screen (the screen
    with your PC manufacturer logo when you start up your computer) during POST checks.
    You may also have the option to enter a boot menu while starting up. Usually,
    you have to hold down *Delete*, *F1*, *F2*, *F12*, or some other key while your
    PC boots up. It depends on your motherboard's BIOS.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should see a screen with a `Try Ubuntu` or `Install Ubuntu` option. If you
    don't see this screen, and instead you see a shell with a message that begins
    with `Minimal BASH Like Line Editing is Supported...`, then it is likely that
    there may have been some data corruption while downloading the ISO file or creating
    your bootable USB drive. Check the integrity of the downloaded ISO file by calculating
    the `MD5`, `SHA1`, or `SHA256` hash of your downloaded file and comparing it to
    the ones you can find in the files named `MD5SUMS`, `SHA1SUMS`, or `SHA256SUMS`
    on the Ubuntu download page mentioned earlier. Then, repeat the steps in the previous
    section to reformat and recreate the bootable USB drive.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have set the highest boot priority to the correct USB device in the
    BIOS and you are still unable to boot using your USB device (your system may just
    ignore it and boot into Windows instead), then you are most likely dealing with
    one or both of the following issues:'
  prefs: []
  type: TYPE_NORMAL
- en: '- The USB drive was not properly configured to be recognized as a bootable
    device or the GRUB bootloader was not properly set up. Verifying the integrity
    of your downloaded image and recreating the bootable USB drive should fix this
    in most cases.'
  prefs: []
  type: TYPE_NORMAL
- en: '- You have chosen the wrong `Partition scheme` option for your system configuration.
    Try the other one and recreate the USB drive.'
  prefs: []
  type: TYPE_NORMAL
- en: Once you boot your machine using the USB drive, select `Install Ubuntu`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose the language that you want and then press `Continue`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, choose the appropriate keyboard layout and continue to the
    next screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, select the `Normal installation` option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the `Download updates while installing Ubuntu` and `Install third-party
    software for graphics and Wi-Fi hardware and additional media formats` options.
  prefs: []
  type: TYPE_NORMAL
- en: Then, continue to the next screen.
  prefs: []
  type: TYPE_NORMAL
- en: On the next screen, select `Install Ubuntu alongside Windows Boot Manager`,
    and then click `Install now`. You will see a prompt describing the changes that
    Ubuntu will make to your system, such as the new partitions that will be created.
    Confirm the changes and proceed to the next screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, choose your region and press `Continue`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, set your name (optional), username, computer name, and password,
    and then press `Continue`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The installation should now begin. It will take a while, depending on your system
    configurations. Once the installation is complete, you will be prompted to restart
    your computer. Unplug your USB drive, and then click `Restart Now`.
  prefs: []
  type: TYPE_NORMAL
- en: If you forget to remove your USB drive, you may boot back into the Ubuntu installation.
    In that case, just exit the setup. If a live instance of Ubuntu has been started
    up, restart your machine. Remember to remove the USB drive this time.
  prefs: []
  type: TYPE_NORMAL
- en: If, after restarting, you boot directly into Windows with no option to choose
    the operating system, the likely issue is that the GRUB bootloader installed by
    Ubuntu has not taken precedence over the Windows bootloader. In some systems,
    the precedence/priority for bootloaders on your hard disk is set in the BIOS.
    You will need to explore your BIOS settings menu to find the appropriate setting.
    It may be named something similar to `UEFI Hard Disk Drive Priorities`. Ensure
    that `GRUB`/`Ubuntu` is set to the highest priority.
  prefs: []
  type: TYPE_NORMAL
- en: After installing any operating system, it is a good idea to ensure that all
    of your hardware components are working as expected.
  prefs: []
  type: TYPE_NORMAL
- en: Other Requirements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Docker Hub account**: You can create a free Docker account at [https://hub.docker.com/](https://hub.docker.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Accessing the Code Files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can find the complete code files in our GitHub repository for this workshop,
    at [https://packt.live/2RC99QI](https://packt.live/2RC99QI).
  prefs: []
  type: TYPE_NORMAL
- en: 'After installing Git, you can clone the repository using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: If you have any issues with or questions about installation, please email us
    at `workshops@packt.com`.
  prefs: []
  type: TYPE_NORMAL
