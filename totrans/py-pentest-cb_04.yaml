- en: Data Parsing with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Parsing HTML tables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extracting data from HTML documents
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parsing XML data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we have downloaded the web page in the previous recipes, now we can discuss
    how to handle those files and parse them to get the required information.
  prefs: []
  type: TYPE_NORMAL
- en: Parsing HTML tables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After downloading the HTML pages from the server, we have to extract the required
    data from them. There are many modules in Python to help with this. Here we can
    make use of the Python package `BeautifulSoup`.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As usual, make sure that you install all the required packages. For this script,
    we require `BeautifulSoup` and `pandas`. You can install them with `pip`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '`pandas` is an open source data analysis library in Python.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We can parse HTML tables from the downloaded pages as following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'As usual, we have to import the required modules for the script. Here, we import
    `BeautifulSoup` for parsing HTML and `pandas` for handling the data that is parsed.
    Also, we have to import the `urllib` module for getting the web page from the
    server:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we can get the HTML page from the server; for this, we can use the `urllib`
    module:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, we can use `BeautifulSoup` to parse the HTML and get the `table` from
    it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Here, it will get the first table on the web page.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we can use the `pandas` library to create a `DataFrame` for the table:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This will create a `DataFrame` with three columns and six rows. The columns
    will display the company name, contact details, and country.
  prefs: []
  type: TYPE_NORMAL
- en: Now we have to parse the data and add it to the `DataFrame:`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This will print the `DataFrame`.
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame` is a two-dimensional, labeled data structure with columns of potentially
    different types. It is more like a `dict` of series objects.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This script can be run with Python 3 with some changes, shown as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The main changes are made to the `urllib` module and the `print` statements.
  prefs: []
  type: TYPE_NORMAL
- en: You can learn more about the `pandas` data analysis toolkit at [https://pandas.pydata.org/pandas-docs/stable/](https://pandas.pydata.org/pandas-docs/stable/).
  prefs: []
  type: TYPE_NORMAL
- en: Extracting data from HTML documents
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can extract the parsed data to .csv or Excel format with the help of the
    `pandas` library.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To use the functions in the `pandas` module that export the parsed data to
    Excel, we require another dependent module `openpyxl`, so please make sure you
    install the `openpyxl` with `pip`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We can extract the data from HTML to .csv or Excel documents as following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a .csv file, we can use the `to_csv()` method in `pandas`. We can
    rewrite the previous recipe as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: This will create a .csv file with the name `table.csv`.
  prefs: []
  type: TYPE_NORMAL
- en: In the same way, we can export to Excel with the `to_excel()` method.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Change the last line in the previous script to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Parsing XML data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sometimes, we will get an XML response from the server, and we have to parse
    the XML to extract the data. We can use the `xml.etree.ElementTree` module to
    parse the XML files.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have to install the required module,Â `xml`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here is how we can parse XML data with XML module:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First import the required modules. As this script is in Python 3, make sure
    that you import the correct modules:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Now get the XML file with the `urlopen` method in the `urllib` module:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Now parse the XML file with the `parse` method in the `xml.etree.ElementTree`
    module:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Now iterate and print the details in XML:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'This script can be rewritten to run in Python 2 as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: This can also be exported to Excel or .csv, as we did in the previous recipe.
  prefs: []
  type: TYPE_NORMAL
