- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C++ is one of the most popular legacy programming languages for robotics, and
    a combination of C++ and robotics hardware is used in many leading industries.
    This book will bridge the gap between Raspberry Pi and C/C++ programming and enable
    you to develop applications for Raspberry Pi. To follow along with the projects
    covered in the book, you can implement C programs in Raspberry Pi with the wiringPi
    library.
  prefs: []
  type: TYPE_NORMAL
- en: With this book, you’ll develop a fully functional car robot and write programs
    to move it in different directions. You’ll then create an obstacle-avoiding robot
    using an ultrasonic sensor. Furthermore, you’ll find out how to control the robot
    wirelessly using your PC/Mac. This book will also help you work with object detection
    and tracking using OpenCV, and guide you through exploring face detection techniques.
    Finally, you will create an Android app and control the robot wirelessly with
    an Android smartphone.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you will have gained experience in developing a robot
    using Raspberry Pi and C/C++ programming.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is designed for developers, programmers, and robotics enthusiasts
    interested in leveraging C++ to build exciting robotics applications. Some prior
    knowledge of C++ is necessary.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](096ae3e7-e900-4f15-91d1-bbe0aa2f1b6a.xhtml), *Introduction to the
    Raspberry Pi*, covers different modes of Raspberry Pi and GPIO pin configuration.
    Then, we will set up Raspberry Pi B+ and Raspberry Pi Zero and install the Raspbian
    OS on it. We will also learn how to connect a Raspberry Pi to a laptop wirelessly
    via a Wi-Fi network.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](0db97f63-8947-4436-9265-3680d34bece6.xhtml), *Implementing Blink
    with wiringPi*, covers the installation of the wiringPi library. In this chapter,
    we will understand the wiringPi pin connections for the Raspberry Pi. Then, we
    will write two C++ programs and will upload them onto our Raspberry Pi.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](085b19da-5821-4c63-9a7a-3e63829059f5.xhtml), *Programming the Robot*, covers
    the criteria for selecting a robot chassis. After that, we will construct our
    car, connect the motor driver to the Raspberry Pi, and understand the workings
    of an H-bridge circuit. Finally, we will write programs to move the robot forward,
    backward, left, and right.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](a6ef702a-1576-4aa5-8e2a-b2b431b313bb.xhtml), *Building an Obstacle-Avoiding
    Robot*, looks at how an ultrasonic sensor works, and we will write a program to
    measure distance values. Next, we will program the 16 x 2 LCD to read the ultrasonic
    distance value. We will also look at the I2C LCD, which takes the 16 LCD pin as
    an input and provides four pins as an output, thus simplifying the wiring connections.
    Finally, we will fit the ultrasonic sensor on our robot to create our obstacle-avoiding
    robot. This robot will move freely when there are no obstacles near it, and if
    it approaches an obstacle, it will avoid it by taking a turn.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](fb5dd6fa-51b3-4318-84b8-c483525c850c.xhtml), *Controlling a Robot
    Using a Laptop*, looks at two different techniques for controlling the robot using
    a laptop. In the first technique, we will use the ncurses library to take input
    from the keyboard to move the robot accordingly. In the second technique, we will
    use the QT Creator IDE to create GUI buttons, and then use these buttons to move
    the robot in different directions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](aa39b5e5-18e6-45c7-a71e-bfbb3d6e7493.xhtml), *Accessing Rpi Cam
    with OpenCV*, focuses on the installation of OpenCV on the Raspberry Pi. You will
    also be introduced to the Raspberry Pi camera module and, after setting up the
    Pi camera, you will take pictures and record a short video clip using the Pi camera.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](b5b2dffa-7833-47cc-98d9-e60e6aba7299.xhtml), *Building an Object-Following
    Robot with OpenCV*, covers some of the important functions inside OpenCV libraries.
    After that, we will put these functions to the test and attempt to recognize an
    object from an image. Then, we will learn how to read a video feed from the Pi
    camera, how to threshold a colored ball, and how to place a red dot on top of
    it. Finally, we will use the Pi camera and the ultrasonic sensor to detect the
    ball and follow it.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](c0f9e10d-3ca4-4bbc-85d7-af6306b01bbd.xhtml), *Face Detection and
    Tracking Using Haar Classifier*, uses the Haar face classifier to detect a face
    from a video feed and draw a rectangle around it. Next, we will detect eyes and
    a smile on the given face and create a circle surrounding the eyes and mouth.
    After using this knowledge of face and eye detection, we will first turn the LED
    on/off when the eyes and smile are detected. Next, by creating a white dot in
    the center of the face, we will make the robot follow the face.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](b6cec23f-ebc2-405c-9358-57359000fa23.xhtml), *Building a Voice-Controlled
    Robot*, starts with creating our first Android application, called Talking Pi,
    in which text written inside the textbox will be displayed in a label and also
    read out by the smartphone. We will then develop a voice-controlled Android app
    for the bot, which will recognize our voice and send text to the RPi via Bluetooth.
    After this, using the terminal window, we will pair the Android smartphone''s
    Bluetooth with the RPi''s Bluetooth. Finally, we will look at socket programming
    and write the VoiceBot program to establish a connection with the Android smartphone''s
    Bluetooth in order to control the robot.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get through the code in this book, Raspberry Pi 3B+ or Raspberry Pi Zero
    board is required. The additional hardware and software is mentioned in the *Technical
    requirements* section of each chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-Robotics-Programming-with-Cpp](https://github.com/PacktPublishing/Hands-On-Robotics-Programming-with-Cpp). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/9781789139006_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/9781789139006_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "The code for taking axial and radial turns is added to the
    `RobotMovement.cpp` program."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "Select the Remember password option and press OK."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packt.com/submit-errata](http://www.packt.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in, and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
