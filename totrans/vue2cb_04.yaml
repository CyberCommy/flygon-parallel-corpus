- en: All About Components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, the following recipes will be covered:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating and registering a component
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing data to your components with props
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making components talk to each other
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making components talk with Vuex
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading a child's state
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using components in your own components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using mixins in your components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Content distribution with slots
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Single file components with Webpack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading your components asynchronously
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Having recursive components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reusable component checklist
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vue is very appealing to designers because of its very close relationship with
    raw HTML and CSS. However, Vue is also attractive to frontend engineers because
    it has very sound engineering. The main characteristic of Vue architecture is
    how everything can be discretize as a component.
  prefs: []
  type: TYPE_NORMAL
- en: Having components all the way down makes your program, no matter how big, workable
    in isolated chunks. You can always add a new one without affecting others, and
    you can always throw away what you don't need, being sure that nothing will break.
  prefs: []
  type: TYPE_NORMAL
- en: Actually, this will be the ideal situation. The truth is that writing well isolated
    (loosely coupled) components is not always straightforward. There might be the
    case that two components are meant to work together or they have a specific way
    to communicate with each other.
  prefs: []
  type: TYPE_NORMAL
- en: If you follow the recipes in this chapter with attention and dedication, you
    will take mostly the good sides of components, and you will learn how to avoid
    some common pitfalls.
  prefs: []
  type: TYPE_NORMAL
- en: Creating and registering a component
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first step in dealing with components is to create one. Once the component
    is registered, we need to tell a Vue instance about it so that it can use the
    component. In this recipe, you will build your first component.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will not use any particular knowledge. If you're starting
    off, my only suggestion is to take a look at the recipes in the first chapter.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Writing your first component will be a snap. You will build a lightbulb!
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s the relevant code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The little quote sign just after template-- [PRE1]
  prefs: []
  type: TYPE_NORMAL
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'''
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <light-bulb></light-bulb>
  prefs: []
  type: TYPE_NORMAL
- en: <light-bulb></light-bulb>
  prefs: []
  type: TYPE_NORMAL
- en: <light-bulb></light-bulb>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('light-bulb', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <div class='light-bulb'>
  prefs: []
  type: TYPE_NORMAL
- en: <p>
  prefs: []
  type: TYPE_NORMAL
- en: Eureka!</p>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '`'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'''
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <light-bulb></light-bulb>
  prefs: []
  type: TYPE_NORMAL
- en: <light-bulb></light-bulb>
  prefs: []
  type: TYPE_NORMAL
- en: <light-bulb></light-bulb>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('name-of-component', { ... options ... })
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'vue.js:2643 [Vue warn]: Unknown custom element: <light-bulb> - did you register
    the component correctly? For recursive components, make sure to provide the "name"
    option.'
  prefs: []
  type: TYPE_NORMAL
- en: (found in root instance)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: var lightBulb = {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <div class='light-bulb'>
  prefs: []
  type: TYPE_NORMAL
- en: <p>
  prefs: []
  type: TYPE_NORMAL
- en: Eureka!</p>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '`'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'components: {'
  prefs: []
  type: TYPE_NORMAL
- en: '''light-bulb'': lightBulb'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('light-bulb', {
  prefs: []
  type: TYPE_NORMAL
- en: 'functional: true,'
  prefs: []
  type: TYPE_NORMAL
- en: render (createElement) {
  prefs: []
  type: TYPE_NORMAL
- en: return createElement(
  prefs: []
  type: TYPE_NORMAL
- en: '''div'','
  prefs: []
  type: TYPE_NORMAL
- en: '{ class: ''light-bulb'' },'
  prefs: []
  type: TYPE_NORMAL
- en: '['
  prefs: []
  type: TYPE_NORMAL
- en: createElement('p', '![](img/Image00065.gif)
  prefs: []
  type: TYPE_NORMAL
- en: Eureka!')
  prefs: []
  type: TYPE_NORMAL
- en: ']'
  prefs: []
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('light-bulb', {
  prefs: []
  type: TYPE_NORMAL
- en: 'functional: true,'
  prefs: []
  type: TYPE_NORMAL
- en: render (h) {
  prefs: []
  type: TYPE_NORMAL
- en: return h(
  prefs: []
  type: TYPE_NORMAL
- en: '''div'','
  prefs: []
  type: TYPE_NORMAL
- en: '{ class: ''light-bulb'' },'
  prefs: []
  type: TYPE_NORMAL
- en: '['
  prefs: []
  type: TYPE_NORMAL
- en: h('p', '![](img/Image00065.gif)
  prefs: []
  type: TYPE_NORMAL
- en: Eureka!')
  prefs: []
  type: TYPE_NORMAL
- en: ']'
  prefs: []
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: createElement(
  prefs: []
  type: TYPE_NORMAL
- en: // {String | Object | Function}
  prefs: []
  type: TYPE_NORMAL
- en: '''div'', // in this case a string'
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: '''class'': ...'
  prefs: []
  type: TYPE_NORMAL
- en: 'style: ...'
  prefs: []
  type: TYPE_NORMAL
- en: 'attrs: ...'
  prefs: []
  type: TYPE_NORMAL
- en: 'props: ...'
  prefs: []
  type: TYPE_NORMAL
- en: 'domProps: ...'
  prefs: []
  type: TYPE_NORMAL
- en: 'on: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'click: ...'
  prefs: []
  type: TYPE_NORMAL
- en: 'input: ...'
  prefs: []
  type: TYPE_NORMAL
- en: '...'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'nativeOn: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'input: ...'
  prefs: []
  type: TYPE_NORMAL
- en: '...'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'directives: ...'
  prefs: []
  type: TYPE_NORMAL
- en: 'slot: ...'
  prefs: []
  type: TYPE_NORMAL
- en: 'key: ...'
  prefs: []
  type: TYPE_NORMAL
- en: 'ref: ...'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: '[ ... an array of children ... ]'
  prefs: []
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('sound-icon', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: "<span>{{soundEmojis[level]}}</span>",'
  prefs: []
  type: TYPE_NORMAL
- en: 'props: [''level''],'
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'soundEmojis: ['''
  prefs: []
  type: TYPE_NORMAL
- en: ''', '''
  prefs: []
  type: TYPE_NORMAL
- en: ''', '''
  prefs: []
  type: TYPE_NORMAL
- en: ''', '''
  prefs: []
  type: TYPE_NORMAL
- en: ''']'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'data: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'soundLevel: 0'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <label>Sound level</label>
  prefs: []
  type: TYPE_NORMAL
- en: <input type="number" v-model.number="soundLevel">
  prefs: []
  type: TYPE_NORMAL
- en: <sound-icon :level="soundLevel"></sound-icon>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: <sound-icon :level="soundLevel"></sound-icon>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[Vue warn]: The "data" option should be a function that returns a per-instance
    value in component definitions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'props: [''soundLevel'']'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: <sound-icon :soundLevel="soundLevel"></sound-icon>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: <sound-icon :sound-level="soundLevel"></sound-icon>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'props: [''level'']'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'props: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'level: Number'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[Vue warn]: Invalid prop: type check failed for prop "level". Expected Number,
    got String.'
  prefs: []
  type: TYPE_NORMAL
- en: (found in component <sound-icon>)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'props: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'level: [Number, String]'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'props: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'level: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: Number'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'props: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'level: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: MyObject'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'props: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'level: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'required: true,'
  prefs: []
  type: TYPE_NORMAL
- en: 'default: 0,'
  prefs: []
  type: TYPE_NORMAL
- en: validator (value) {
  prefs: []
  type: TYPE_NORMAL
- en: return value >= 0 && value <= 3
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <blabber></blabber>
  prefs: []
  type: TYPE_NORMAL
- en: <blabber></blabber>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'dialogue: ['
  prefs: []
  type: TYPE_NORMAL
- en: '''hello'','
  prefs: []
  type: TYPE_NORMAL
- en: '''how are you?'','
  prefs: []
  type: TYPE_NORMAL
- en: '''fine thanks'','
  prefs: []
  type: TYPE_NORMAL
- en: '''let''s go drink!'','
  prefs: []
  type: TYPE_NORMAL
- en: '''alright, where?'','
  prefs: []
  type: TYPE_NORMAL
- en: '''to hello''s bar'','
  prefs: []
  type: TYPE_NORMAL
- en: '''hello?'''
  prefs: []
  type: TYPE_NORMAL
- en: ']'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'currentLine: 0,'
  prefs: []
  type: TYPE_NORMAL
- en: 'dialogue: ['
  prefs: []
  type: TYPE_NORMAL
- en: '''hello'','
  prefs: []
  type: TYPE_NORMAL
- en: '''how are you?'','
  prefs: []
  type: TYPE_NORMAL
- en: '''fine thanks'','
  prefs: []
  type: TYPE_NORMAL
- en: '''let''s go drink!'','
  prefs: []
  type: TYPE_NORMAL
- en: '''alright, where?'','
  prefs: []
  type: TYPE_NORMAL
- en: '''to hello''s bar'','
  prefs: []
  type: TYPE_NORMAL
- en: '''hello?'''
  prefs: []
  type: TYPE_NORMAL
- en: ']'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'template: "<p>{{dialogue[currentLine]}}</p>"'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: mounted () {
  prefs: []
  type: TYPE_NORMAL
- en: setInterval(() => {
  prefs: []
  type: TYPE_NORMAL
- en: this.currentLine = line % this.dialogue.length
  prefs: []
  type: TYPE_NORMAL
- en: line += 1
  prefs: []
  type: TYPE_NORMAL
- en: '}, 2000)'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('blabber', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: "<p>{{dialogue[currentLine]}}</p>",'
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'currentLine: 0,'
  prefs: []
  type: TYPE_NORMAL
- en: 'dialogue: ['
  prefs: []
  type: TYPE_NORMAL
- en: '''hello'','
  prefs: []
  type: TYPE_NORMAL
- en: '''how are you?'','
  prefs: []
  type: TYPE_NORMAL
- en: '''fine thanks'','
  prefs: []
  type: TYPE_NORMAL
- en: '''let''s go drink!'','
  prefs: []
  type: TYPE_NORMAL
- en: '''alright, where?'','
  prefs: []
  type: TYPE_NORMAL
- en: '''to hello''s bar'','
  prefs: []
  type: TYPE_NORMAL
- en: '''hello?'''
  prefs: []
  type: TYPE_NORMAL
- en: ']'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: mounted () {
  prefs: []
  type: TYPE_NORMAL
- en: setInterval(() => {
  prefs: []
  type: TYPE_NORMAL
- en: this.currentLine = line % this.dialogue.length
  prefs: []
  type: TYPE_NORMAL
- en: line += 1
  prefs: []
  type: TYPE_NORMAL
- en: '}, 2000)'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: var line = 0
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'''
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'props: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'iceBreaker: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: Boolean,'
  prefs: []
  type: TYPE_NORMAL
- en: 'default: false'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '...'
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'currentLine: this.iceBreaker ? 0 : -1,'
  prefs: []
  type: TYPE_NORMAL
- en: 'dialogue: ['
  prefs: []
  type: TYPE_NORMAL
- en: '...'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <blabber :ice-breaker="true"></blabber>
  prefs: []
  type: TYPE_NORMAL
- en: <blabber></blabber>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: var bus = new Vue()
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: mounted () {
  prefs: []
  type: TYPE_NORMAL
- en: if (this.iceBreaker) {
  prefs: []
  type: TYPE_NORMAL
- en: bus.$emit('line', 0)
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: created () {
  prefs: []
  type: TYPE_NORMAL
- en: bus.$on('line', line => {
  prefs: []
  type: TYPE_NORMAL
- en: // is not the line I just sent
  prefs: []
  type: TYPE_NORMAL
- en: if (line !== this.currentLine) {
  prefs: []
  type: TYPE_NORMAL
- en: setTimeout(() => {
  prefs: []
  type: TYPE_NORMAL
- en: this.currentLine = (line + 1) % this.dialogue.length
  prefs: []
  type: TYPE_NORMAL
- en: bus.$emit('line', this.currentLine)
  prefs: []
  type: TYPE_NORMAL
- en: '}, 2000)'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: const store = new Vuex.Store({})
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'strict: true'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'state: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'currentActor: -1,'
  prefs: []
  type: TYPE_NORMAL
- en: 'currentLine: -1,'
  prefs: []
  type: TYPE_NORMAL
- en: 'actors: [],'
  prefs: []
  type: TYPE_NORMAL
- en: 'dialogue: ['
  prefs: []
  type: TYPE_NORMAL
- en: '''Where are you going?'','
  prefs: []
  type: TYPE_NORMAL
- en: '''To the cinema'','
  prefs: []
  type: TYPE_NORMAL
- en: '''What''s on at the cinema?'','
  prefs: []
  type: TYPE_NORMAL
- en: '''''Quo vadis?'''','
  prefs: []
  type: TYPE_NORMAL
- en: '''Oh, what does it mean?'''
  prefs: []
  type: TYPE_NORMAL
- en: ']'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'mutations: {'
  prefs: []
  type: TYPE_NORMAL
- en: entersScene (state, uuid) {
  prefs: []
  type: TYPE_NORMAL
- en: state.currentLine =
  prefs: []
  type: TYPE_NORMAL
- en: (state.currentLine + 1) % state.dialogue.length
  prefs: []
  type: TYPE_NORMAL
- en: state.actors.push({
  prefs: []
  type: TYPE_NORMAL
- en: uuid,
  prefs: []
  type: TYPE_NORMAL
- en: 'line: state.dialogue[state.currentLine]'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: state.currentActor =
  prefs: []
  type: TYPE_NORMAL
- en: (state.currentActor + 1) % state.actors.length
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: nextLine (state) {
  prefs: []
  type: TYPE_NORMAL
- en: state.currentActor =
  prefs: []
  type: TYPE_NORMAL
- en: (state.currentActor + 1) % state.actors.length
  prefs: []
  type: TYPE_NORMAL
- en: state.currentLine =
  prefs: []
  type: TYPE_NORMAL
- en: (state.currentLine + 1) % state.dialogue.length
  prefs: []
  type: TYPE_NORMAL
- en: state.actors[state.currentActor].line =
  prefs: []
  type: TYPE_NORMAL
- en: state.dialogue[state.currentLine]
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('blabber', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: ''<div class="blabber">{{currentLine}}</div>'','
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'uuid: Math.random()'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'computed: {'
  prefs: []
  type: TYPE_NORMAL
- en: currentLine () {
  prefs: []
  type: TYPE_NORMAL
- en: return store.state.actors.find(actor =>
  prefs: []
  type: TYPE_NORMAL
- en: actor.uuid === this.uuid).line
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: created () {
  prefs: []
  type: TYPE_NORMAL
- en: store.commit('entersScene', this.uuid)
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <blabber></blabber>
  prefs: []
  type: TYPE_NORMAL
- en: <blabber></blabber>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: .blabber {
  prefs: []
  type: TYPE_NORMAL
- en: 'width: 200px;'
  prefs: []
  type: TYPE_NORMAL
- en: 'height: 40px;'
  prefs: []
  type: TYPE_NORMAL
- en: 'background-color: gainsboro;'
  prefs: []
  type: TYPE_NORMAL
- en: 'border: 1px solid grey;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: mounted () {
  prefs: []
  type: TYPE_NORMAL
- en: setInterval(() => {
  prefs: []
  type: TYPE_NORMAL
- en: store.commit('nextLine')
  prefs: []
  type: TYPE_NORMAL
- en: '}, 2000)'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '[{'
  prefs: []
  type: TYPE_NORMAL
- en: uuid:0.9775738039368538,
  prefs: []
  type: TYPE_NORMAL
- en: line:"'Quo vadis?'"
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: uuid:0.7398549831424475,
  prefs: []
  type: TYPE_NORMAL
- en: line:"Oh, what does it mean?"
  prefs: []
  type: TYPE_NORMAL
- en: '}]'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: nextLine (state) {
  prefs: []
  type: TYPE_NORMAL
- en: state.currentActor =
  prefs: []
  type: TYPE_NORMAL
- en: (state.currentActor + 1) % state.actors.length
  prefs: []
  type: TYPE_NORMAL
- en: state.currentLine =
  prefs: []
  type: TYPE_NORMAL
- en: (state.currentLine + 1) % state.dialogue.length
  prefs: []
  type: TYPE_NORMAL
- en: state.actors[state.currentActor].line =
  prefs: []
  type: TYPE_NORMAL
- en: state.dialogue[state.currentLine]
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <blabber></blabber>
  prefs: []
  type: TYPE_NORMAL
- en: <blabber></blabber>
  prefs: []
  type: TYPE_NORMAL
- en: <blabber></blabber>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <child ref="junior"></child>
  prefs: []
  type: TYPE_NORMAL
- en: '<p>Truth: {{childStomach}}</p>'
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('child', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: "<p>{{mouth}}</p>",'
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'mouth: ''I didn''t eat that cookie'','
  prefs: []
  type: TYPE_NORMAL
- en: 'stomach: ''Yummy that cookie was delicious.'''
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'data: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'childStomach: ''unknown'''
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: mounted () {
  prefs: []
  type: TYPE_NORMAL
- en: this.childStomach = this.$refs.junior.stomach
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <child ref="junior"></child>
  prefs: []
  type: TYPE_NORMAL
- en: '<p>Truth: {{$refs.junior.stomach}}</p>'
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('child', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: "<p>Child {{num}}: {{mouth}}</p>",'
  prefs: []
  type: TYPE_NORMAL
- en: 'props: [''num''],'
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'mouth: ''I didn’t eat that cookie'','
  prefs: []
  type: TYPE_NORMAL
- en: 'stomach: `Yummy that cookie was ${this.num} times more delicious.`'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <child v-for="i in 10" ref="junior" :num="i" :key="i"></child>
  prefs: []
  type: TYPE_NORMAL
- en: '<p>Truth for child 4: {{child4Stomach}}</p>'
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'data: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'child4Stomach: ''unknown'''
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: mounted () {
  prefs: []
  type: TYPE_NORMAL
- en: this.child4Stomach = this.$refs.junior[3].stomach
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('dish', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <p class="dish">
  prefs: []
  type: TYPE_NORMAL
- en: '{{ham}} &lt;- Delicious!'
  prefs: []
  type: TYPE_NORMAL
- en: </p>
  prefs: []
  type: TYPE_NORMAL
- en: '`,'
  prefs: []
  type: TYPE_NORMAL
- en: 'props: [''ham'']'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('course', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <section class="course">
  prefs: []
  type: TYPE_NORMAL
- en: <dish v-for="ham in menu" :ham="ham" :key="ham"></dish>
  prefs: []
  type: TYPE_NORMAL
- en: </section>
  prefs: []
  type: TYPE_NORMAL
- en: '`,'
  prefs: []
  type: TYPE_NORMAL
- en: 'props: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'menu: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: Array,'
  prefs: []
  type: TYPE_NORMAL
- en: 'required: true,'
  prefs: []
  type: TYPE_NORMAL
- en: validator (foodArray) {
  prefs: []
  type: TYPE_NORMAL
- en: return foodArray.every(food =>
  prefs: []
  type: TYPE_NORMAL
- en: typeof food === 'string') &&
  prefs: []
  type: TYPE_NORMAL
- en: foodArray.length === 4
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'data: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'menu1: ['''
  prefs: []
  type: TYPE_NORMAL
- en: ''','''
  prefs: []
  type: TYPE_NORMAL
- en: ''','''
  prefs: []
  type: TYPE_NORMAL
- en: ''','''
  prefs: []
  type: TYPE_NORMAL
- en: '''],'
  prefs: []
  type: TYPE_NORMAL
- en: 'menu2: ['''
  prefs: []
  type: TYPE_NORMAL
- en: ''','''
  prefs: []
  type: TYPE_NORMAL
- en: ''','''
  prefs: []
  type: TYPE_NORMAL
- en: ''','''
  prefs: []
  type: TYPE_NORMAL
- en: ''']'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <course :menu="menu1"></course>
  prefs: []
  type: TYPE_NORMAL
- en: <course :menu="menu2"></course>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: .course {
  prefs: []
  type: TYPE_NORMAL
- en: 'border: 1px solid black;'
  prefs: []
  type: TYPE_NORMAL
- en: 'margin: 10px;'
  prefs: []
  type: TYPE_NORMAL
- en: 'padding: 10px;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <course :menu="menu1"></course>
  prefs: []
  type: TYPE_NORMAL
- en: <course :menu="menu2"></course>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('advertising', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: ''<div>Buy our stuff!!!</div>,'
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'show: false'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: <advertising v-if="show"></advertising>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('man', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: ''<p>'
  prefs: []
  type: TYPE_NORMAL
- en: man</p>'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('cat', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: ''<p>'
  prefs: []
  type: TYPE_NORMAL
- en: cat</p>'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'''
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <man></man>
  prefs: []
  type: TYPE_NORMAL
- en: <cat></cat>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: var superPowersMixin = {
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'superPowers: false'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'methods: {'
  prefs: []
  type: TYPE_NORMAL
- en: superMe () {
  prefs: []
  type: TYPE_NORMAL
- en: this.$el.classList.add("super")
  prefs: []
  type: TYPE_NORMAL
- en: this.superPowers = true
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: created () {
  prefs: []
  type: TYPE_NORMAL
- en: this.$options.template =
  prefs: []
  type: TYPE_NORMAL
- en: '`<div><h3 v-show="superPowers">super</h3>` +'
  prefs: []
  type: TYPE_NORMAL
- en: this.$options.template +
  prefs: []
  type: TYPE_NORMAL
- en: '`<button @click="superMe" v-if="!superPowers">'
  prefs: []
  type: TYPE_NORMAL
- en: Super!
  prefs: []
  type: TYPE_NORMAL
- en: </button></div>`
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: .super {
  prefs: []
  type: TYPE_NORMAL
- en: 'filter: hue-rotate(120deg);'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('man', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: ''<p>'
  prefs: []
  type: TYPE_NORMAL
- en: man</p>',
  prefs: []
  type: TYPE_NORMAL
- en: 'mixins: [superPowersMixin]'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: Vue.component('cat', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: ''<p>'
  prefs: []
  type: TYPE_NORMAL
- en: cat</p>',
  prefs: []
  type: TYPE_NORMAL
- en: 'mixins: [superPowersMixin]'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: var Greeter = {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <p>
  prefs: []
  type: TYPE_NORMAL
- en: '{{message}}'
  prefs: []
  type: TYPE_NORMAL
- en: <button @click="greet">greet</button>
  prefs: []
  type: TYPE_NORMAL
- en: </p>`,
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'message: ''...'''
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'methods: {'
  prefs: []
  type: TYPE_NORMAL
- en: greet () {
  prefs: []
  type: TYPE_NORMAL
- en: this.message = 'hello'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: var SuperGreeter = {
  prefs: []
  type: TYPE_NORMAL
- en: 'mixins: [Greeter],'
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <p>
  prefs: []
  type: TYPE_NORMAL
- en: '{{message}}'
  prefs: []
  type: TYPE_NORMAL
- en: <button @click="superGreet">supergreet</button>
  prefs: []
  type: TYPE_NORMAL
- en: </p>`,
  prefs: []
  type: TYPE_NORMAL
- en: 'methods: {'
  prefs: []
  type: TYPE_NORMAL
- en: superGreet () {
  prefs: []
  type: TYPE_NORMAL
- en: this.message = 'SUPER HELLO!'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'components: { Greeter, SuperGreeter }'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <greeter></greeter>
  prefs: []
  type: TYPE_NORMAL
- en: <super-greeter></super-greeter>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('framed', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `<div class="frame">'
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Russian cat mafia
  prefs: []
  type: TYPE_NORMAL
- en: employee of the month</h3>
  prefs: []
  type: TYPE_NORMAL
- en: <slot>Nothing framed.</slot>
  prefs: []
  type: TYPE_NORMAL
- en: </div>`
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: .frame {
  prefs: []
  type: TYPE_NORMAL
- en: 'border: 5px dashed dodgerblue;'
  prefs: []
  type: TYPE_NORMAL
- en: 'width: 300px;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: h3 {
  prefs: []
  type: TYPE_NORMAL
- en: 'font-family: sans-serif;'
  prefs: []
  type: TYPE_NORMAL
- en: 'text-align: center;'
  prefs: []
  type: TYPE_NORMAL
- en: 'padding: 2px 0;'
  prefs: []
  type: TYPE_NORMAL
- en: 'width: 100%;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <framed>
  prefs: []
  type: TYPE_NORMAL
- en: <cat :name="catName"></cat>
  prefs: []
  type: TYPE_NORMAL
- en: </framed>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('cat', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `<div>'
  prefs: []
  type: TYPE_NORMAL
- en: <figure>
  prefs: []
  type: TYPE_NORMAL
- en: <img src="http://lorempixel.com/220/220/cats/"/>
  prefs: []
  type: TYPE_NORMAL
- en: <figcaption>{{name}}</figcaption>
  prefs: []
  type: TYPE_NORMAL
- en: </figure>
  prefs: []
  type: TYPE_NORMAL
- en: </div>`,
  prefs: []
  type: TYPE_NORMAL
- en: 'props: [''name'']'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: h3, figcaption {
  prefs: []
  type: TYPE_NORMAL
- en: 'font-family: sans-serif;'
  prefs: []
  type: TYPE_NORMAL
- en: 'text-align: center;'
  prefs: []
  type: TYPE_NORMAL
- en: 'padding: 2px 0;'
  prefs: []
  type: TYPE_NORMAL
- en: 'width: 100%;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'data: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'names: [''Murzik'', ''Pushok'', ''Barsik'', ''Vaska'', ''Matroskin'']'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'computed: {'
  prefs: []
  type: TYPE_NORMAL
- en: catName () {
  prefs: []
  type: TYPE_NORMAL
- en: return this.names[Math.floor(Math.random() *
  prefs: []
  type: TYPE_NORMAL
- en: this.names.length)]
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <framed></framed>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <framed>
  prefs: []
  type: TYPE_NORMAL
- en: <cat :name="catName"></cat>
  prefs: []
  type: TYPE_NORMAL
- en: </framed>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: <div class="frame">
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Russian cat mafia
  prefs: []
  type: TYPE_NORMAL
- en: employee of the month</h3>
  prefs: []
  type: TYPE_NORMAL
- en: <slot>Nothing framed.</slot>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('organogram', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `<div class="organogram">'
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Scratchy co.</h3>
  prefs: []
  type: TYPE_NORMAL
- en: <div class="boss">
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Boss</h3>
  prefs: []
  type: TYPE_NORMAL
- en: <slot name="boss">No boss</slot>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: <div class="employee">
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Employee</h3>
  prefs: []
  type: TYPE_NORMAL
- en: <slot name="employee">No employee</slot>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: </div>`
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: .organogram {
  prefs: []
  type: TYPE_NORMAL
- en: 'border: 5px dashed dodgerblue;'
  prefs: []
  type: TYPE_NORMAL
- en: 'width: 300px;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: .boss {
  prefs: []
  type: TYPE_NORMAL
- en: 'border: 5px double mediumvioletred;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: .employee {
  prefs: []
  type: TYPE_NORMAL
- en: 'border: 2px outset lightgrey;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: figcaption, h3 {
  prefs: []
  type: TYPE_NORMAL
- en: 'font-family: sans-serif;'
  prefs: []
  type: TYPE_NORMAL
- en: 'text-align: center;'
  prefs: []
  type: TYPE_NORMAL
- en: 'padding: 2px 0;'
  prefs: []
  type: TYPE_NORMAL
- en: 'width: 100%;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <organogram>
  prefs: []
  type: TYPE_NORMAL
- en: <div slot="boss">
  prefs: []
  type: TYPE_NORMAL
- en: <figure>
  prefs: []
  type: TYPE_NORMAL
- en: <img src="http://lorempixel.com/210/210/cats/1"/>
  prefs: []
  type: TYPE_NORMAL
- en: <figcaption>Sylvester</figcaption>
  prefs: []
  type: TYPE_NORMAL
- en: </figure>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: <cat slot="employee" :name="catName"></cat>
  prefs: []
  type: TYPE_NORMAL
- en: </organogram>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('cat', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  prefs: []
  type: TYPE_NORMAL
- en: <figure>
  prefs: []
  type: TYPE_NORMAL
- en: <img :src="'http://lorempixel.com/220/220/cats/?' + name"/>
  prefs: []
  type: TYPE_NORMAL
- en: <figcaption>{{name}}</figcaption>
  prefs: []
  type: TYPE_NORMAL
- en: </figure>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '`,'
  prefs: []
  type: TYPE_NORMAL
- en: 'props: [''name'']'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('organogram', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <div class="organogram">
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Scratchy co.</h3>
  prefs: []
  type: TYPE_NORMAL
- en: <div class="boss">
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Boss</h3>
  prefs: []
  type: TYPE_NORMAL
- en: <slot type="boss">No boss</slot>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: <div class="employee" v-for="rank in 2">
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Employee</h3>
  prefs: []
  type: TYPE_NORMAL
- en: <slot
  prefs: []
  type: TYPE_NORMAL
- en: type="employee"
  prefs: []
  type: TYPE_NORMAL
- en: :rank="rank"
  prefs: []
  type: TYPE_NORMAL
- en: '>'
  prefs: []
  type: TYPE_NORMAL
- en: No employee
  prefs: []
  type: TYPE_NORMAL
- en: </slot>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: </div>`
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <organogram>
  prefs: []
  type: TYPE_NORMAL
- en: <template scope="props">
  prefs: []
  type: TYPE_NORMAL
- en: <div v-if="props.type === 'boss'">
  prefs: []
  type: TYPE_NORMAL
- en: <figure>
  prefs: []
  type: TYPE_NORMAL
- en: <img src="http://lorempixel.com/210/210/cats/1"/>
  prefs: []
  type: TYPE_NORMAL
- en: <figcaption>Sylvester</figcaption>
  prefs: []
  type: TYPE_NORMAL
- en: </figure>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: <div v-else-if="props.type === 'employee'"
  prefs: []
  type: TYPE_NORMAL
- en: :class="'r' + props.rank">
  prefs: []
  type: TYPE_NORMAL
- en: <cat :name="catName()"></cat>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: </template>
  prefs: []
  type: TYPE_NORMAL
- en: </organogram>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: .r1 {
  prefs: []
  type: TYPE_NORMAL
- en: 'font-size: 1.5em;'
  prefs: []
  type: TYPE_NORMAL
- en: 'color: red;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: .r2 {
  prefs: []
  type: TYPE_NORMAL
- en: 'font-size: 1.2em;'
  prefs: []
  type: TYPE_NORMAL
- en: 'color: blue;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: mkdir my-component
  prefs: []
  type: TYPE_NORMAL
- en: cd my-component
  prefs: []
  type: TYPE_NORMAL
- en: vue init webpack-simple
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: npm install
  prefs: []
  type: TYPE_NORMAL
- en: npm run dev
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: <template>
  prefs: []
  type: TYPE_NORMAL
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: </template>
  prefs: []
  type: TYPE_NORMAL
- en: <script>
  prefs: []
  type: TYPE_NORMAL
- en: export default {}
  prefs: []
  type: TYPE_NORMAL
- en: </script>
  prefs: []
  type: TYPE_NORMAL
- en: <style>
  prefs: []
  type: TYPE_NORMAL
- en: </style>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <p>I have a secret message:</p>
  prefs: []
  type: TYPE_NORMAL
- en: <p v-if="show" class="secret">{{message}}</p>
  prefs: []
  type: TYPE_NORMAL
- en: <button v-else @click="show = true">Show Message</button>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: export default {
  prefs: []
  type: TYPE_NORMAL
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'show: false,'
  prefs: []
  type: TYPE_NORMAL
- en: 'message: ''much secret. many reactive. wow!'''
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: .secret {
  prefs: []
  type: TYPE_NORMAL
- en: 'background-color: thistle;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: import Vue from 'vue'
  prefs: []
  type: TYPE_NORMAL
- en: import MyComponent from './MyComponent.vue'
  prefs: []
  type: TYPE_NORMAL
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'render: h => h(MyComponent)'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: 'render: h => h(''div'', {}, [h(MyComponent), h(MyComponent)])'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: <!DOCTYPE html>
  prefs: []
  type: TYPE_NORMAL
- en: <html lang="en">
  prefs: []
  type: TYPE_NORMAL
- en: <head>
  prefs: []
  type: TYPE_NORMAL
- en: <meta charset="utf-8">
  prefs: []
  type: TYPE_NORMAL
- en: <title>my-component</title>
  prefs: []
  type: TYPE_NORMAL
- en: </head>
  prefs: []
  type: TYPE_NORMAL
- en: <body>
  prefs: []
  type: TYPE_NORMAL
- en: <div id="app"></div>
  prefs: []
  type: TYPE_NORMAL
- en: <script src="/dist/build.js"></script>
  prefs: []
  type: TYPE_NORMAL
- en: </body>
  prefs: []
  type: TYPE_NORMAL
- en: </html>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('XuandePeriodVase', (resolve, reject) => {
  prefs: []
  type: TYPE_NORMAL
- en: setTimeout(() => {
  prefs: []
  type: TYPE_NORMAL
- en: if ((new Date()).getDay() !== 6) {
  prefs: []
  type: TYPE_NORMAL
- en: resolve({
  prefs: []
  type: TYPE_NORMAL
- en: 'template: ''<div>'
  prefs: []
  type: TYPE_NORMAL
- en: Buy for only 4000000</div>',
  prefs: []
  type: TYPE_NORMAL
- en: mounted () {
  prefs: []
  type: TYPE_NORMAL
- en: this.$parent.$emit('loaded')
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  prefs: []
  type: TYPE_NORMAL
- en: reject("Today is Sunday, Internet is closed!")
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}, 1000)'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'data: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'loading: true'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: created () {
  prefs: []
  type: TYPE_NORMAL
- en: this.$on('loaded', () => {
  prefs: []
  type: TYPE_NORMAL
- en: this.loading = false
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <span v-if="loading">loading...</span>
  prefs: []
  type: TYPE_NORMAL
- en: <xuande-period-vase></xuande-period-vase>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('comp-name', (resolve, reject) => { ... })
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: if (response.status > 400) { reject('4XX error received') }
  prefs: []
  type: TYPE_NORMAL
- en: setTimeout(() => { reject('connection timeout') }, 5000)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: mounted () {
  prefs: []
  type: TYPE_NORMAL
- en: this.$parent.$emit('loaded')
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: created () {
  prefs: []
  type: TYPE_NORMAL
- en: this.$on('loaded', () => {
  prefs: []
  type: TYPE_NORMAL
- en: this.loading = false
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: new Vue ({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'''
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: 'data: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'living: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'animals: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'invertebrates: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'crab: null,'
  prefs: []
  type: TYPE_NORMAL
- en: 'bee: null,'
  prefs: []
  type: TYPE_NORMAL
- en: 'ant: null'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'vertebrates: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'fish: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'shark: null'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'mammals: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'rabbit: null,'
  prefs: []
  type: TYPE_NORMAL
- en: 'rat: null'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'plants: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'flowering: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'maize: null,'
  prefs: []
  type: TYPE_NORMAL
- en: 'paddy: null'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: '''non-flowering'': {'
  prefs: []
  type: TYPE_NORMAL
- en: 'algae: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'seaweed: null,'
  prefs: []
  type: TYPE_NORMAL
- en: 'spirogyra: null'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'fungi: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'yeast: null,'
  prefs: []
  type: TYPE_NORMAL
- en: 'mushroom: null'
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: 'moss: null,'
  prefs: []
  type: TYPE_NORMAL
- en: 'fern: null'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('taxon', {})
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <li>
  prefs: []
  type: TYPE_NORMAL
- en: <div @click="toggle">
  prefs: []
  type: TYPE_NORMAL
- en: '{{taxon}}'
  prefs: []
  type: TYPE_NORMAL
- en: '<span v-if="hasChildren">[{{open ? ''-'' : ''+''}}]</span>'
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: <ul v-show="open">
  prefs: []
  type: TYPE_NORMAL
- en: <taxon
  prefs: []
  type: TYPE_NORMAL
- en: v-for="(child, taxon) in tree"
  prefs: []
  type: TYPE_NORMAL
- en: :tree="child"
  prefs: []
  type: TYPE_NORMAL
- en: :taxon="taxon"
  prefs: []
  type: TYPE_NORMAL
- en: :key="taxon"
  prefs: []
  type: TYPE_NORMAL
- en: '>'
  prefs: []
  type: TYPE_NORMAL
- en: </taxon>
  prefs: []
  type: TYPE_NORMAL
- en: </ul>
  prefs: []
  type: TYPE_NORMAL
- en: </li>
  prefs: []
  type: TYPE_NORMAL
- en: '`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: 'props: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'tree: Object,'
  prefs: []
  type: TYPE_NORMAL
- en: 'taxon: String'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: data () {
  prefs: []
  type: TYPE_NORMAL
- en: return {
  prefs: []
  type: TYPE_NORMAL
- en: 'open: false'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: 'computed: {'
  prefs: []
  type: TYPE_NORMAL
- en: hasChildren () {
  prefs: []
  type: TYPE_NORMAL
- en: return this.tree !== null
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: 'methods: {'
  prefs: []
  type: TYPE_NORMAL
- en: toggle () {
  prefs: []
  type: TYPE_NORMAL
- en: this.open = !this.open
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <ul>
  prefs: []
  type: TYPE_NORMAL
- en: <taxon :tree="living" taxon="living"></taxon>
  prefs: []
  type: TYPE_NORMAL
- en: </ul>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: span {
  prefs: []
  type: TYPE_NORMAL
- en: 'cursor: pointer;'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <ul>
  prefs: []
  type: TYPE_NORMAL
- en: <taxon :tree="living" taxon="living"></taxon>
  prefs: []
  type: TYPE_NORMAL
- en: </ul>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: var taxon = {
  prefs: []
  type: TYPE_NORMAL
- en: 'name: ''taxon'','
  prefs: []
  type: TYPE_NORMAL
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <li>
  prefs: []
  type: TYPE_NORMAL
- en: '...'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'components: { taxon },'
  prefs: []
  type: TYPE_NORMAL
- en: '...'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: 'vue.js:2658 [Vue warn]: Unknown custom element: <taxon> - did you register
    the component correctly? For recursive components, make sure to provide the "name"
    option.'
  prefs: []
  type: TYPE_NORMAL
- en: (found in component <taxon>)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('matrioska', {
  prefs: []
  type: TYPE_NORMAL
- en: 'template: ''<p>Hello<matrioska></matrioska></p>'''
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <matrioska></matrioska>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: 'vue.js:2269 Uncaught RangeError: Maximum call stack size exceeded'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: Vue.component('dialog-box', {})
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: 'template: `'
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  prefs: []
  type: TYPE_NORMAL
- en: <div class="icon">
  prefs: []
  type: TYPE_NORMAL
- en: <slot name="icon"></slot>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: <slot name="message"></slot>
  prefs: []
  type: TYPE_NORMAL
- en: <div class="buttons">
  prefs: []
  type: TYPE_NORMAL
- en: <button v-if="cancellable"
  prefs: []
  type: TYPE_NORMAL
- en: '@click="cancel()">'
  prefs: []
  type: TYPE_NORMAL
- en: Cancel
  prefs: []
  type: TYPE_NORMAL
- en: </button>
  prefs: []
  type: TYPE_NORMAL
- en: <button @click="ok()">
  prefs: []
  type: TYPE_NORMAL
- en: OK
  prefs: []
  type: TYPE_NORMAL
- en: </button>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: </div>`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: 'props: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'command: String,'
  prefs: []
  type: TYPE_NORMAL
- en: 'cancellable: Boolean'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: 'methods: {'
  prefs: []
  type: TYPE_NORMAL
- en: cancel () {
  prefs: []
  type: TYPE_NORMAL
- en: this.$emit('cancel', this.command)
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  prefs: []
  type: TYPE_NORMAL
- en: ok () {
  prefs: []
  type: TYPE_NORMAL
- en: this.$emit('ok', this.command)
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: <div id="app">
  prefs: []
  type: TYPE_NORMAL
- en: <dialog-box
  prefs: []
  type: TYPE_NORMAL
- en: command="confirmation"
  prefs: []
  type: TYPE_NORMAL
- en: :cancellable="true"
  prefs: []
  type: TYPE_NORMAL
- en: '@cancel="msg = ''cancelled''"'
  prefs: []
  type: TYPE_NORMAL
- en: '@ok="msg = ''confirmed''">'
  prefs: []
  type: TYPE_NORMAL
- en: <span slot="icon">
  prefs: []
  type: TYPE_NORMAL
- en: </span>
  prefs: []
  type: TYPE_NORMAL
- en: <span slot="message">Do you confirm?</span>
  prefs: []
  type: TYPE_NORMAL
- en: </dialog-box>
  prefs: []
  type: TYPE_NORMAL
- en: '<p>Output: {{msg}}</p>'
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: new Vue({
  prefs: []
  type: TYPE_NORMAL
- en: 'el: ''#app'','
  prefs: []
  type: TYPE_NORMAL
- en: 'data: {'
  prefs: []
  type: TYPE_NORMAL
- en: 'msg: ''undefined'''
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  prefs: []
  type: TYPE_NORMAL
- en: '```'
  prefs: []
  type: TYPE_NORMAL
- en: 'Launch the application to see your dialog box take shape:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Image00103.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you build a component that you want to reuse or you want others to reuse,
    you will have some parts that behave in a generic way. In our box, for example,
    the message was customizable, so we can reuse it in other parts of a program with
    different messages. We used a slot so that the user has complete freedom on what
    to put inside (even another component). The cancel button, instead, is better
    controlled by props, so we do not have to pass an entire button into a slot every
    time, we just pass true or false .
  prefs: []
  type: TYPE_NORMAL
- en: Another concern is that our component needs to talk with the external world;
    in the confirmation box case, it needs to tell the main program whether the user
    clicked on OK or Cancel . This is best done through events. In our parent template,
    we specified, directly in the HTML, what should happen when the `cancel` or `ok`
    events are received. This way of passing data is very versatile because we can
    forward these events to other components or even convert them into mutations for
    a Vuex store.
  prefs: []
  type: TYPE_NORMAL
- en: 'I''ll quote the documentation to summarize what we said so that you can have
    a proper checklist when you are in doubt:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Props** : They allow the external environment to pass data into the component'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Events** : They  allow the component to trigger side effects in the external
    environment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Slots** : They  allow the external environment to compose the component with
    extra content'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
