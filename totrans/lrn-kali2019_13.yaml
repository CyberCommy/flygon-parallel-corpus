- en: Network Penetration Testing - Gaining Access
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Gaining access to a system and network is one of the most critical phases during
    a penetration test. This phase tests both the penetration tester's skill set and
    the security controls of the target system and network. The penetration tester
    must always think about all the possible ways in which they can break into the
    target by exploiting various security flaws.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Without gaining access to a corporate network, you will not be able to perform
    any sort of network penetration and exfiltrate data. The purpose of a penetration
    test is to simulate real-world attacks that a real hacker with malicious intent
    would perform. This means gaining unauthorized entry to a corporate network and
    compromising systems.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: As an upcoming cybersecurity professional/penetration tester, you will learn
    how to compromise wireless networks, exploit the Linux and Windows operating systems,
    take advantage of remote access services, and retrieve user account credentials
    to gain access to a system and network. Additionally, you'll learn about various
    countermeasures for securing a wireless network from cyber threats.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will be covering the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: Gaining access
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wired Equivalent Privacy** (**WEP**) cracking'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wi-Fi Protected Access** (**WPA**) cracking'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Securing your wireless network
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring wireless security settings
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploiting vulnerable perimeter systems
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Penetration testing Citrix and **Remote Desktop Protocol** (**RDP**)-based remote
    access systems
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PWN boxes and other tools
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bypassing **Network Access Control** (**NAC**)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To follow along with the instructions in this chapter, please ensure that you
    meet the following hardware and software requirements:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows 7
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless router
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaining access
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Penetration testing and ethical hacking is an exciting topic. Everyone is always
    excited to hack another system, whether it's a computer or even a wireless network.
    The previous chapters focused on gathering enough intelligence on a target prior
    to launching an attack. The exploitation phase of hacking and penetration testing
    can sometimes be challenging.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: It's very important to gather as many details as possible about the target.
    Such background work helps us to determine approximate exploits and a payload
    we can launch against a target system or network. Sometimes, when you launch an
    exploit that's intended for a particular operating system, it may not work, and
    this can be frustrating. One tactic you can adopt is to target the low-hanging
    fruits on a network—that is, attempt to exploit and gain access to systems and
    devices that seem easier and vulnerable to TCP/IP protocols that can be easily
    exploited.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: An example is the **vsftpd** service, which we explored in the previous chapters
    and used to gain entry to the target via a shell interface. Another example is
    the **EternalBlue** vulnerability, which is found on the Windows operating system.
    During your scanning phase, be sure to perform an extensive vulnerability assessment
    on all the devices on your target network.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Begin by exploiting targets that seem to be the most vulnerable and, hence,
    easy to exploit, and then move on to those that are less vulnerable and thus more
    difficult to exploit. To put this into context, imagine appearing for a written
    examination. The question paper has a lot of challenging questions that need to
    be answered within a given time period. In such a scenario, it's always wise to
    answer easier questions first and then move on to the tougher ones. This will
    give you more time to answer questions that you are more likely to get correct
    and maximize the marks that you will score in the exam.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many methods and techniques a penetration tester can apply to gain
    access to systems, such as the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Online and offline password cracking
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cracking the **pre-shared key** (**PSK**) on a wireless network
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social engineering
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing a **Man-in-the-Middle** (**MITM**) attack
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing a brute-force attack on application layer protocols
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: During the gaining-access phase, a penetration tester usually performs various
    types of attack that will assist them in gaining entry to a network. Usually,
    you start by performing online or offline password cracking. Once you've obtained
    a valid username and password, the next step is to access the victim's system
    and escalate your user privileges. Obtaining a higher level of user privilege
    will allow for the execution of any application and tasks on the compromised machine.
    Hiding files such as malicious code is designed to ensure that a hidden backdoor
    is created and that logic bombs (a type of virus that contains a set of instructions
    triggered by a user's action) have been planted. Lastly, when disconnecting from
    a compromised machine, it's always wise to cover your tracks. Covering your tracks
    is the last phase in penetration testing and focuses on removing any log files
    and evidence indicating that an attacker was present on the system or network.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a typical flowchart for gaining access to a system:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/796f50d7-3ee1-487a-87ba-620eb285c8fe.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
- en: In the upcoming sections, we will take a look at various methods we can use
    in order to gain entry to a target system.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: WEP cracking
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By using wireless networking, users with an IEEE 802.11-compatible device such
    as a laptop are able to connect to a wireless access point. This will let them
    access the resources on the local network, just like they would when connected
    physically using a wire. Wireless networking provides a lot of convenience to
    a user, whether at home or in a corporate environment.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: By default, a wireless network is open, thus allowing anyone with a laptop or
    smartphone to establish a connection. This creates a concern about user privacy
    and security. The WEP encryption standard was used in the early generations of
    wireless networking and is still implemented by users at home and by IT administrators.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: The WEP encryption standard uses the **Rivest Cipher 4** (**RC4**) encryption
    cipher, which uses a **40-bit key** for data encryption. When it was developed,
    this was considered very secure, but, by 2002, multiple security weaknesses had
    been found in the standard. An attacker would be able to obtain the encryption
    key within a few hours. Using the 40-bit key, an attacker could capture and decrypt
    traffic very quickly, which compromised the confidentiality of the WEP encryption
    standard. In modern cryptographic standards, a larger encryption key is used to
    prevent such attacks on data encryption.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: As a cybersecurity professional in the field of offensive security, it's important
    to understand the techniques you should apply when performing WEP cracking using
    Kali Linux.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform the following steps to accomplish this:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: 'Enable monitoring mode on your wireless adapter with the following command:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Perform wireless sniffing on nearby access points until you have discovered
    your target:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once you've found your target, make a note of its BSSID, channel, and ESSID
    values.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Stop `airodump-ng` using *Ctrl* + *C* on your keyboard after obtaining the details,
    and then proceed to the next step.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Attempt a packet capture for the target wireless network:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s look at what some of these commands do:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '`--bssid`: Allows you to specify a particular access point by using its BSSID
    value (media access control address of the access point)'
  id: totrans-49
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-c`: Allows you to set the wireless radios so that they listen on a specific
    channel'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-w`: Specific to the output location and filename'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform a deauthentication attack on the target.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Performing a deauthentication attack on the target access point will force
    any connected clients to disassociate. Once the clients are disconnected, they
    will automatically attempt to reconnect to the access point. In doing so, you
    are attempting to capture the WEP key during the clients'' attempt to reauthenticate:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: When you have captured the WEP key (you'll see the notification on the window
    running `airodump-ng`), you can stop the deauthentication attack.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's attempt to crack the WEP and retrieve the secret key.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you''ve captured sufficient data on the target wireless network, stop
    `airodump-ng`. Using the `ls -l` command on the Terminal, you''ll see a `.cap`
    file. In a new Terminal window, execute the following command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Additionally, you can use the following simple command to achieve the same
    task:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following screenshot is an example of the expected output:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a7901ba9-ca30-49e4-86ba-74cc0751c482.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
- en: However, your WEP key will be different based on the value that was set by the
    administrator of the wireless access point. The output key is given in hexadecimal
    format, so you can now take this hex-based key and use it to access the target
    access point.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you are now able to perform WEP cracking on wireless
    networks. In the next section, we will take a deep dive into how to perform WPA
    cracking techniques.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: WPA cracking
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Given the security vulnerabilities found in WEP, WPA was created in 2002 as
    an improved wireless security standard for IEEE 802.11 networks. WPA uses the
    **Temporal Key Integrity Protocol** (**TKIP**), which applies the RC4 encryption
    cipher suite for data privacy between the wireless access point and client devices.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, **Wi-Fi Protected Access 2** (**WPA2**) was later developed to
    solve security flaws in its predecessor. WPA2 uses the **Advanced Encryption Standard**
    (**AES**) for data encryption as opposed to the RC4 cipher. Additionally, WPA2
    implemented **Counter Mode with Cipher Block Chaining Message** **Authentication
    Code Protocol** (**CCMP**), which replaced TKIP.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s get into the fun part, cracking WPA to gain entry to a target wireless
    network:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: 'Enable monitoring mode on your wireless adapter:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Perform wireless sniffing on a nearby access point until you have discovered
    your target:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Once you have found your target, take note of its BSSID, channel, and ESSID
    values. Stop `airodump-ng` after obtaining the details, and then proceed to the
    next step.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: 'Attempt a packet capture for the target wireless network:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Perform a deauthentication attack on the target.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Performing a deauthentication attack on the target access point will force
    any connected clients to disassociate. Once the clients are disconnected, they
    will automatically attempt to reconnect to the access point. In doing so, you
    are attempting to capture the WEP key during the clients'' attempt to reauthenticate:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'When you have captured the WPA handshake, as shown in the following screenshot,
    you can stop the deauthentication attack:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4a2da0c5-c84d-47ea-b804-4e508f497c46.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
- en: Using *Ctrl* + *C*, stop the deauthentication attack and proceed to the next
    step.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: 'To crack the WPA, we are going to use a word list. Using **crunch**, you can
    generate your own custom password word list. Additionally, the following are the
    locations of various word lists that are already pre-installed on Kali Linux:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/294f7162-e739-4c43-b8b2-a1d0c0886a87.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
- en: Once you have found a suitable word list, we can use the `aircrack-ng` tool
    with the `-w` parameter to specify a word list of our choice.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin your password cracking for WPA, use the following command:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '`aircrack-ng` will attempt to perform a dictionary attack using the specific
    word list and will stop when the **key** is found, as shown in the following screenshot:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/49ada9bd-1b9a-43c1-b3f9-5087bb7a54b0.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
- en: Sometimes, a word list may not contain the password, and the result may not
    be fruitful. Create a custom word list using the **crunch** tool, or try using
    a word list from the `SecLists` GitHub repository at [https://github.com/danielmiessler/SecLists](https://github.com/danielmiessler/SecLists).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have completed this section on cracking wireless security, let's
    take a look at the following section, which covers how to secure your wireless
    network against cyber attacks.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: Securing your network from the aforementioned attacks
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you saw in the previous section, a penetration tester or malicious hacker
    can attempt to hack your wireless network and obtain the secret key (password).
    Whether you're a student taking a computer security course, an IT professional,
    or simply an enthusiast, the topics covered in this section are some methods and
    techniques that you can use to secure your network from such attacks.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following sections, we will cover the following topics:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: SSID management
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MAC filtering
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The power level of antennas
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong passwords
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Securing enterprise wireless networks
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's dive in!
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: SSID management
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you buy a new access point or wireless router, the default **service set
    identifier** (**SSID**) is usually that of the manufacturer. For example, the
    default SSID (wireless network name) for a new Linksys access point would contain
    the name `Linksys` as its SSID. Many manufacturers do this to help the user quickly
    identify their wireless network when setting up a new access point. However, many
    individuals and organizations use the default SSID.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Leaving the default SSID as it is can be a security concern. Let's say you acquire
    a new Linksys access point for your home or organization, and, during the setup
    process, you decide to leave the default configurations for the device SSID. The
    word `Linksys` would be part of the network name. As a penetration tester who
    is performing wireless scanning for nearby access points, seeing a manufacturer's
    name can help profile the device and research specific exploits for the `Linksys`
    AP.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: 'Imagine seeing the word `Netgear` while scanning for wireless access points.
    You can simply do a Google search for a list of known security vulnerabilities
    and misconfigurations on this particular brand, as shown in the following screenshot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eb1d2f1a-8608-48ef-9a5e-bda1afa92ab3.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
- en: To put it simply, you should not use any sort of name that may attract hackers
    or give away the identity of the access point and the organization. I often see
    companies create SSIDs with the name of their organization and, at times, incorporate
    the purpose of the SSID as part of the name.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: An example of this is using the name `CompanyName_Admin`. Any penetration tester
    who is performing any sort of wireless security audit will target such networks
    initially.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: Hiding an SSID is good practice, but it can still be discovered using wireless
    sniffing techniques such as `airodump-ng`, as outlined in the previous sections.
    Additionally, on a Windows-based system, you can use **NetStumbler** ([www.netstumbler.com](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=2ahUKEwidnMDXmfjiAhVFTd8KHTPZAS8QFjAAegQIABAB&url=http%3A%2F%2Fwww.netstumbler.com%2Fdownloads%2F&usg=AOvVaw1txhDBmLy67I3rlfCDYpX8))
    and **inSSIDer** ([https://www.metageek.com/products/inssider/](https://www.metageek.com/products/inssider/)).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will discuss the purpose of MAC filtering on a wireless
    network.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: MAC filtering
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Each managed access point and its wireless router provides a basic type of access
    control for connected devices. Enabling MAC filtering on an access point allows
    you to specify a list of permitted and restricted devices that can, and cannot,
    connect to the access point. However, there are techniques, all of which were
    covered in the previous chapter, that allow a penetration tester to capture a
    list of authorized devices (their MAC addresses) and perform spoofing to gain
    unauthorized access. However, this feature should still be applied, since having
    some sort of security is better than having no security at all on your network.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will cover the concept of power levels in antennas.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Power levels for antennas
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Some access points have a feature within their operating system or firmware
    that allows you to manually adjust power levels on the antennas. By lowering the
    power level on the antenna, the broadcast range of the wireless signal will reduce
    in radius. Setting the power levels to 100% will ensure there is maximum coverage
    for the signal. This feature can be handy if you're concerned about others being
    able to see and intercept your data on the wireless network.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 一些接入点在其操作系统或固件中具有一个功能，允许您手动调整天线的功率级别。通过降低天线的功率级别，无线信号的广播范围将减小。将功率级别设置为100%将确保信号具有最大覆盖范围。如果您担心其他人能够在无线网络上看到并拦截您的数据，这个功能可能会很有用。
- en: Now that we have an understanding of the role power levels play on antennas,
    we will cover the essentials of creating strong passwords.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了功率级别在天线上的作用，接下来我们将介绍创建强密码的基本要点。
- en: Strong passwords
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 强密码
- en: 'Cracking a user password usually depends on the complexity of the password
    itself. Many users tend to set simple and easy-to-remember passphrases on their
    devices, especially on a wireless network. However, a complex password will create
    difficulties for the penetration tester or hacker. Complex passwords have the
    following characteristics:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 破解用户密码通常取决于密码本身的复杂性。许多用户倾向于在其设备上设置简单易记的口令，特别是在无线网络上。然而，复杂的密码会给渗透测试人员或黑客带来困难。复杂密码具有以下特点：
- en: They contain uppercase characters
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们包含大写字符
- en: They contain lowercase characters
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们包含小写字符
- en: They contain numbers
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们包含数字
- en: They contain specific symbols
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们包含特定符号
- en: They are over 12 characters in length
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们的长度超过12个字符
- en: They do not contain a name
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们不包含姓名
- en: They do not contain a date of birth
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们不包含出生日期
- en: They do not contain a vehicle's plate number
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们不包含车辆的车牌号码
- en: 'The following is an example of a complex password generated by **LastPass**
    ([www.lastpass.com](http://www.lastpass.com)), a password manager:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是由**LastPass**（[www.lastpass.com](http://www.lastpass.com)）生成的复杂密码的示例：
- en: '![](img/dc788631-cd18-459b-b1e6-75dfe2bb6611.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dc788631-cd18-459b-b1e6-75dfe2bb6611.png)'
- en: The idea is to ensure that nobody can guess or compromise your password easily.
    If a malicious user is able to compromise another person's user credentials, the
    attacker can wreak havoc on the victim's network and/or personal life.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 目的是确保没有人能够轻易猜测或破坏您的密码。如果恶意用户能够破坏另一个人的用户凭据，攻击者可以对受害者的网络和/或个人生活造成严重破坏。
- en: In the following section, we will describe techniques that can be implemented
    on an enterprise network to improve its security posture.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将描述可以在企业网络上实施的技术，以改善其安全状况。
- en: Securing enterprise wireless networks
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护企业无线网络
- en: 'An enterprise wireless network should use the following as techniques to reduce
    the risk of wireless network attacks:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 企业无线网络应该使用以下技术来减少无线网络攻击的风险：
- en: Implement a **wireless intrusion prevention system** (**WIPS**) on each wireless
    network owned and managed by the organization.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在组织拥有和管理的每个无线网络上实施**无线入侵防范系统**（**WIPS**）。
- en: Ensure that all wired and wireless devices have the latest firmware and patches
    installed.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保所有有线和无线设备都安装了最新的固件和补丁。
- en: Ensure that devices and configurations are compliant with the **National Institute
    of Standards and Technology** (**NIST**). Take a look at the *Establishing Wireless
    Robust Security Networks* section in the NIST framework at [https://csrc.nist.gov/publications/detail/sp/800-97/final](https://csrc.nist.gov/publications/detail/sp/800-97/final)
    for more information.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保设备和配置符合**国家标准和技术研究所**（**NIST**）的要求。查看NIST框架中的*建立无线强大安全网络*部分，了解更多信息：[https://csrc.nist.gov/publications/detail/sp/800-97/final](https://csrc.nist.gov/publications/detail/sp/800-97/final)
- en: Whenever possible, implement multi-factor authentication to access the corporate
    network.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能实施多因素身份验证来访问企业网络。
- en: Implement the **Extensible Authentication Protocol** (**EAP**)—**Transport Layer
    Security** (**TLS**) certificate-based method to ensure the confidentiality and
    authenticity of wireless communication.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施**可扩展认证协议**（**EAP**）—**传输层安全**（**TLS**）基于证书的方法，以确保无线通信的机密性和真实性。
- en: Use WPA2-Enterprise with AES encryption.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用带有AES加密的WPA2-企业版。
- en: Implement an isolated guest wireless network.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施一个独立的访客无线网络。
- en: Implementing these techniques and controls can help reduce the security risks
    on an enterprise network. In the following section, we will cover the steps we
    need to follow in order to configure and secure a wireless network.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 实施这些技术和控制措施可以帮助减少企业网络上的安全风险。在接下来的部分，我们将介绍配置和保护无线网络所需遵循的步骤。
- en: Configuring wireless security settings to secure your network
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置无线安全设置以保护您的网络
- en: In this section, we'll discuss how to configure your wireless security features
    on your access point and wireless router so that you can secure your network.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何在接入点和无线路由器上配置无线安全功能，以便您可以保护您的网络。
- en: For this exercise, I am using a Linksys EA6350 wireless router. Please note
    that all wireless routers and access points have the same features within their
    management interface; however, the **graphical user interface** (**GUI**) for
    each manufacturer and device may vary.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我使用的是Linksys EA6350无线路由器。请注意，所有无线路由器和接入点在其管理界面中具有相同的功能；但是，每个制造商和设备的**图形用户界面**（**GUI**）可能会有所不同。
- en: Let's get started!
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: You'll need to log in to your access point or wireless router.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要登录您的接入点或无线路由器。
- en: 'Once logged in, click on the **Wireless** tab within the user interface. Here,
    you''ll be able to change the network name (SSID), set a complex password, set
    a security mode, and broadcast the SSID, as shown in the following screenshot:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，点击用户界面中的**无线**选项卡。在这里，您可以更改网络名称（SSID），设置复杂密码，设置安全模式，并广播SSID，如下图所示：
- en: '![](img/f3b35409-f934-4158-b618-0230245cb37a.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3b35409-f934-4158-b618-0230245cb37a.png)'
- en: 'Using the following guidelines will assist in improving the security posture
    of your wireless network:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下准则将有助于提高无线网络的安全性：
- en: Change the SSID (network name) to something that won't attract prying eyes.
  id: totrans-147
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将SSID（网络名称）更改为不会引起注意的内容。
- en: Hide (broadcast) the SSID.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏（广播）SSID。
- en: Create a complex password. If you're having difficulties, try using an online
    password generator.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个复杂的密码。如果遇到困难，请尝试使用在线密码生成器。
- en: 'Each modern access point and wireless router allows various security modes,
    such as the following:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 每个现代接入点和无线路由器都允许使用各种安全模式，例如以下内容：
- en: '**None**: Disables authentication.'
  id: totrans-151
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无**：禁用认证。'
- en: '**WEP**: Uses the WEP encryption standard.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WEP**：使用WEP加密标准。'
- en: '**WPA Personal**: Uses the WPA encryption standard and allows you to set a
    **pre-shared key** (**PSK**) on the access point. Therefore, any device that requires
    access to the wireless network will be required to provide the PSK.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WPA个人**：使用WPA加密标准，并允许您在接入点上设置**预共享密钥**（**PSK**）。因此，任何需要访问无线网络的设备都需要提供PSK。'
- en: '**WPA Enterprise**: This mode applies the WPA encryption standard, but note
    that the access point stores user credentials in WPA Personal. WPA Enterprise
    queries a central **authentication, authorization, and accounting** (**AAA**)
    server to verify user access on the wireless network.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WPA企业**：此模式应用WPA加密标准，但请注意，接入点将用户凭据存储在WPA个人中。WPA企业查询中央**认证、授权和计费**（**AAA**）服务器，以验证用户在无线网络上的访问。'
- en: '**WPA2 Personal**: Uses the WPA2 encryption standard.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WPA2个人**：使用WPA2加密标准。'
- en: '**WPA2 Enterprise**: Uses the WPA2 encryption standard with the AAA server.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WPA2企业**：使用WPA2加密标准与AAA服务器。'
- en: You can choose to disable the SSID broadcast to cloak your network.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择禁用SSID广播以隐藏您的网络。
- en: Next, you should see another sub-tab that allows you to configure **MAC filtering**.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您应该看到另一个子选项卡，允许您配置**MAC过滤**。
- en: 'Enable the MAC filtering feature. Once enabled, you''ll have the option to
    add MAC addresses to an allow or deny list, as shown in the following screenshot:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用MAC过滤功能。一旦启用，您将有选项将MAC地址添加到允许或拒绝列表中，如下面的屏幕截图所示：
- en: '![](img/1d433110-1f30-400c-b9c5-803663dc8e82.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1d433110-1f30-400c-b9c5-803663dc8e82.png)'
- en: 'Lastly, disable the **Wi-Fi Protected Setup** feature, as shown in the following
    screenshot:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，禁用**Wi-Fi Protected Setup**功能，如下面的屏幕截图所示：
- en: '![](img/e46571b8-224c-45b9-8f97-6ceb26f3b28f.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e46571b8-224c-45b9-8f97-6ceb26f3b28f.png)'
- en: WPS has known security vulnerabilities and should not be used in secure environments.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: WPS存在已知的安全漏洞，不应在安全环境中使用。
- en: Having completed this exercise, you are now able to configure and set up a wireless
    network. In the next section, we will look at the essentials of exploiting perimeter
    systems.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了这个练习，现在您可以配置和设置无线网络。在下一节中，我们将看看如何利用外围系统的基本要点。
- en: Exploiting vulnerable perimeter systems with Metasploit
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用Metasploit攻击易受攻击的外围系统
- en: Exploiting target systems on a network can sometimes be a challenging task.
    Exploits are simply pieces of code that are designed to take advantage of a security
    vulnerability (weakness). In [Chapter 5](474024a2-84fc-4fb6-b1b7-bd64ce91ef0c.xhtml),
    *Passive Information Gathering*, [Chapter 6](a7554e9e-076d-45b8-b0fa-3b02ac270e24.xhtml),
    *Active Information Gathering*, and [Chapter 7](075f58ca-ff2a-48c7-9b90-17ddd4e408c9.xhtml),
    *Working with Vulnerability Scanners*, we took a n in-depth look at establishing
    security flaws in target systems using various tools such as Nmap and Nessus.
    In this section, we are going to leverage the information and skill set we have
    developed thus far and perform exploitation using the Metasploit framework.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络上利用目标系统有时可能是一项具有挑战性的任务。利用程序只是设计用来利用安全漏洞（弱点）的代码片段。在[第5章](474024a2-84fc-4fb6-b1b7-bd64ce91ef0c.xhtml)中，*被动信息收集*，[第6章](a7554e9e-076d-45b8-b0fa-3b02ac270e24.xhtml)中，*主动信息收集*，和[第7章](075f58ca-ff2a-48c7-9b90-17ddd4e408c9.xhtml)中，*使用漏洞扫描器*，我们深入研究了使用各种工具如Nmap和Nessus在目标系统中建立安全漏洞。在本节中，我们将利用迄今为止已经开发的信息和技能，并使用Metasploit框架进行利用。
- en: 'During this exercise, we''ll be using our Kali Linux machine as the attacker,
    and the Metasploitable machine as the target. Let''s get started:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们将使用我们的Kali Linux机器作为攻击者，Metasploitable机器作为目标。让我们开始吧：
- en: 'Let''s perform a **service version scan** on the target using Nmap. This will
    help us to determine the ports, protocols, and service versions that are running.
    Execute the **`nmap -sV <target IP addr>`** command:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用Nmap对目标进行**服务版本扫描**。这将帮助我们确定正在运行的端口、协议和服务版本。执行**`nmap -sV <目标IP地址>`**命令：
- en: '![](img/80890eef-14a0-427b-8839-8c3bd729cfb3.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80890eef-14a0-427b-8839-8c3bd729cfb3.png)'
- en: As we can see, there are many services on the target.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，目标上有许多服务。
- en: 'Start the **Metasploit** framework by enabling the **PostgreSQL** database
    service. Then, initialize the Metasploit framework and execute the following commands
    within a Terminal window:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过启用**PostgreSQL**数据库服务来启动**Metasploit**框架。然后，在终端窗口内初始化Metasploit框架并执行以下命令：
- en: '[PRE11]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The Metasploit framework should take a minute or two to initialize. When it's
    ready, you'll be presented with a fun welcome banner and the **command-line interface**
    (**CLI**).
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit框架应该需要一两分钟来初始化。当准备好时，您将看到一个有趣的欢迎横幅和**命令行界面**（**CLI**）。
- en: Based on our Nmap results, port `21` is open and is running the **File Transfer
    Protocol** (**FTP**). By performing the service version scan, we are able to determine
    whether it's running a **vsftpd 2.3.4** daemon. On your Metasploit interface,
    you can search for modules (scanners, exploits, and so on) using the `search`
    command, followed by a keyword or string.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们的Nmap结果，端口`21`是开放的，并且正在运行**文件传输协议**（**FTP**）。通过执行服务版本扫描，我们能够确定它是否正在运行**vsftpd
    2.3.4**守护程序。在您的Metasploit界面上，您可以使用`search`命令，后跟关键字或字符串，搜索模块（扫描程序，利用程序等）。
- en: 'On your Metasploit console, search for any useful modules that may help us
    compromise the FTP server on the target machine by running the following command:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Metasploit控制台上，通过运行以下命令搜索任何有用的模块，以帮助我们破坏目标机器上的FTP服务器：
- en: '[PRE12]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Metasploit will provide us with a list of results that meet the search criteria.
    You should see the console return a Unix-based exploit called `vsftpd_234_backdoor`.
    To use this exploit on our target, use the following sequence of commands:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Metasploit将为我们提供符合搜索条件的结果列表。您应该看到控制台返回一个名为`vsftpd_234_backdoor`的基于Unix的利用。要在我们的目标上使用此利用，使用以下一系列命令：
- en: '[PRE13]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Within my lab environment, the target is using the `10.10.10.100` IP address.
    Please ensure that you verify the IP address of your target device before setting
    the `RHOSTS` (remote hosts) value on Metasploit. Additionally, there are many
    modules that will require you to set a remote target. You can use the `setg` command
    to set the target globally.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的实验室环境中，目标使用`10.10.10.100` IP地址。在设置`RHOSTS`（远程主机）值之前，请确保验证目标设备的IP地址。此外，许多模块将要求您设置远程目标。您可以使用`setg`命令全局设置目标。
- en: 'Execute the `exploit` command. Metasploit will attempt to push the exploit
    code to the target. Once successful, a shell is created. A shell allows us to
    remotely perform commands from our attacker machine on the target, as shown in
    the following screenshot:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`exploit`命令。Metasploit将尝试将利用代码推送到目标。一旦成功，将创建一个shell。shell允许我们从攻击者机器上远程执行命令到目标上，如下图所示：
- en: '![](img/3a1e0848-b25b-4f21-843c-94d39b60b94b.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a1e0848-b25b-4f21-843c-94d39b60b94b.png)'
- en: 'At this point, any command that''s executed on the console will be executed
    on the target. Execute the `uname -a` command to verify and print the system information:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这一点上，任何在控制台上执行的命令都将在目标上执行。执行`uname -a`命令来验证并打印系统信息：
- en: '![](img/481363eb-6936-42b7-89f4-7baeac5cad09.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/481363eb-6936-42b7-89f4-7baeac5cad09.png)'
- en: Often, when performing a simple port scan on both public-facing and internal
    systems, port `23` is usually open for remote management. However, port `23` is
    the default port that's used for the Telnet protocol. Telnet is an insecure protocol
    that allows a user to remotely access a machine over a network and all traffic
    passing between the user. Any Telnet-enabled device is unencrypted and is susceptible
    to MITM attacks where an attacker can capture user credentials quite easily.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在对公共和内部系统进行简单的端口扫描时，端口`23`通常是用于远程管理的开放端口。但是，端口`23`是Telnet协议使用的默认端口。Telnet是一种不安全的协议，允许用户通过网络远程访问计算机，并且所有通过用户之间传递的流量都是未加密的。任何启用Telnet的设备都容易受到中间人攻击，攻击者可以轻松捕获用户凭据。
- en: 'Let''s use the `search` command to find a useful module to check for valid
    user credentials on a Telnet-enabled device. To begin, use the following command:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用`search`命令查找一个有用的模块，以检查Telnet启用设备上的有效用户凭据。首先，使用以下命令：
- en: '[PRE14]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'As usual, a list of results that comply with the search criteria will be presented
    on the console. For this exercise, we are going to use a specific scanner to check
    for validated user accounts:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，将与搜索条件相符的结果列表呈现在控制台上。在这个练习中，我们将使用特定的扫描程序来检查验证的用户帐户：
- en: '[PRE15]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next, set your remote host(s):'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，设置您的远程主机：
- en: '[PRE16]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If you have a word list containing different usernames, use the following command
    (specify the file path):'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您有包含不同用户名的单词列表，请使用以下命令（指定文件路径）：
- en: '[PRE17]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Optionally, if you have a password list, use the following command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有密码列表，可以选择使用以下命令：
- en: '[PRE18]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'However, if you do not have any word lists, that''s OK. You can specify an
    individual username and password using the following commands:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 但是，如果您没有任何单词列表，也没关系。您可以使用以下命令指定单个用户名和密码：
- en: '[PRE19]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Once you''re done, use the `run` command to execute the `auxiliary` module:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，使用`run`命令执行`auxiliary`模块：
- en: '[PRE20]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Be sure to wait a few seconds for the scanner to start. Sometimes, you won't
    see results appear immediately on the screen.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 确保等待几秒钟让扫描器启动。有时，您不会立即在屏幕上看到结果出现。
- en: We use the `run` command to execute an `auxiliary` module, and the `exploit`
    command to execute an exploit within Metasploit.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`run`命令执行`auxiliary`模块，使用`exploit`命令在Metasploit中执行利用。
- en: 'The following screenshot indicates that a valid username and password were
    found:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图表明找到了有效的用户名和密码：
- en: '![](img/9ee80d39-2897-4f46-937d-54fbad916663.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ee80d39-2897-4f46-937d-54fbad916663.png)'
- en: 'As we''ve already mentioned, you can use **crunch** to generate custom word
    lists to your liking. Additionally, a set of word lists is located in the `/usr/share`
    directory in Kali Linux:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已经提到的，您可以使用**crunch**生成符合您喜好的自定义单词列表。此外，在Kali Linux的`/usr/share`目录中有一组单词列表：
- en: '![](img/586929c6-bddc-4a2c-a4a0-0aa19aa9f797.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![](img/586929c6-bddc-4a2c-a4a0-0aa19aa9f797.png)'
- en: Remember that, when performing a password attack or attempting to discover valid
    user credentials, the task can be very time-consuming and may not always be in
    your favor. However, this illustrates the importance of the reconnaissance (information-gathering)
    phase of penetration testing. The more details we are able to gather about the
    target, the more we'll be able to narrow down a wide range of attacks to specific
    ones for a particular system or network infrastructure.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在进行密码攻击或尝试发现有效的用户凭据时，任务可能非常耗时，而且可能并不总是对您有利。然而，这说明了渗透测试中侦察（信息收集）阶段的重要性。我们能够收集有关目标的更多细节，我们就能够将广泛的攻击范围缩小到特定系统或网络基础设施的特定攻击。
- en: Next, we are going to attempt exploitation and gain access to a target system,
    that is, Microsoft Windows.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将尝试利用并访问目标系统，即Microsoft Windows。
- en: EternalBlue exploitation
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 永恒之蓝利用
- en: 'Let''s attempt to exploit a Windows system and get a shell. For this exercise,
    a Windows 7, 8, 8.1, or 10 operating system can be used as the target/victim machine.
    The following is a diagram of my lab topology displaying the IP assignments for
    the attacker and victim machines:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/67e797b6-45f1-407b-b863-2accfe1856d8.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
- en: 'If your IP scheme is different, ensure that you record the IP addresses of
    each machine before continuing, as you''ll need them. Let''s get started:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let''s attempt to run a vulnerability scan on the target Windows system.
    The following snippet is the result of using the `nmap --script vuln 10.10.10.19`
    command:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a0b55f75-b93e-4433-8764-caf919d82e4b.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
- en: The highlighted area indicates that our target is vulnerable to a remote code
    execution attack for the Microsoft security bulletin ID `ms17-010`, known as **EternalBlue**.
    Further research into this vulnerability tells us that the target is vulnerable
    to exploits by WannaCry, Petya, and other malware.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: The EternalBlue vulnerability allows an attacker to perform remote code execution
    on a Microsoft SMBv1 server.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: 'Within the **Metasploit Framework** (**MSF**) console, use the `search ms17-010`
    command to filter the results for EternalBlue exploits, as shown in the following
    screenshot:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f11fbd64-e7a5-47d2-8c1e-dacc5ca11f97.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
- en: 'The MSF console returned a few results. We will use the `ms-17-010_eternalblue`
    exploit and the **Meterpreter reverse TCP payload** to attempt a reverse connection
    (reverse shell) from the victim''s machine back to our attacker machine. To achieve
    this task, use the following commands, as shown in the following screenshot:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f2b9dc69-f563-4fd6-ab2e-9032a1ec1f9b.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
- en: After executing the exploit, you'll now have a `meterpreter` shell. The `meterpreter`
    shell will allow you to communicate seamlessly between your attacker machine and
    the victim's operating system.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: According to SANS ([www.sans.org](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&cad=rja&uact=8&ved=2ahUKEwjjwcul2N3iAhUpTt8KHZ-9CJUQFjABegQICxAE&url=https%3A%2F%2Fwww.sans.org%2Fsecurity-resources%2Fsec560%2Fmisc_tools_sheet_v1.pdf&usg=AOvVaw0RrqNTtD6wrNTYHi-YFz2N)),
    Meterpreter is a payload within the Metasploit framework that provides control
    over an exploited target system, by running as a DLL that's been loaded inside
    any process on a target machine.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the `hashdump` command, you''ll be able to retrieve the password hashes
    of all locally stored user accounts on the victim''s machine:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c78932a7-61ec-4eb4-9c66-7732adac0843.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
- en: The usernames of the accounts are always displayed in plain text, as shown in
    the preceding screenshot.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: 'The `hashdump` command within Meterpreter is used to retrieve user accounts
    within a Windows system. A user account is made up of three components: the **security
    ID** (**SID**), username, and password. The password is converted into an NTLM
    hash and stored in newer versions of Windows. In an older version of Windows,
    such as Windows XP, the password is stored using the **LAN Manager** (**LM**).
    Therefore, the Windows operating system never actually stores the password for
    a user account; it stores the hash value instead.'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some useful commands that we can use within the `meterpreter`
    shell:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: '`screenshot`: Captures a screenshot of the victim''s desktop'
  id: totrans-226
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '`getsystem`: Attempts an escalation of privileges on the target'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`clearev`: Clears event logs'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sysinfo`: Gathers information about the target'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To obtain a shell on the victim''s machine, type `shell` and press *Enter*:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a2eac98e-3c3b-4867-abcb-a657577493bb.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
- en: You'll now have a Windows Command Prompt interface on your Kali Linux machine.
    Now you'll be able to execute Windows commands remotely.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have covered exploitation briefly, let's gain access using remote
    access systems.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: Penetration testing Citrix and RDP-based remote access systems
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will take a look at performing penetration testing on two
    popular remote access systems in most IT environments: Citrix and Microsoft''s
    **Remote Desktop Protocol** (**RDP**).'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a deep dive into Citrix and RDP penetration testing and gaining access.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: Citrix penetration testing
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most of us have probably heard about Microsoft's RDP, which allows a user to
    remotely access another Windows machine across a network within a **graphical
    user interface** (**GUI**). Citrix is like RDP, but a lot better in terms of performance
    while providing an interactive user interface.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: 'Many organizations use Citrix services and products to efficiently distribute
    access to applications within an organization. An example of using Citrix is running
    applications within an organization''s private data center. Using Citrix, IT administrators
    can provide access to the users of those applications. Each user would require
    a modern web browser to access a virtual desktop interface or centrally access
    applications in the data center. This method eliminates the need to install software
    applications on each employee''s computer. Let''s get started:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use the Nmap NSE script, `citrix-enum-apps`, to discover and extract
    applications. The following is an example of using the script in Nmap:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Additionally, you can specify `-p 1604` since the Citrix WinFrame uses both
    TCP and UDP port `1604`.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you''ve found a Citrix machine, you can attempt to connect to published
    applications by logging on using the following URL:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Once you're logged in, click on an application to download a `launch.ica` file
    to your desktop. Once the file has been downloaded, open the file using Notepad
    or another text editor.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look for a parameter called `InitialProgram` that points to the `LIFE UAT` application.
    Change the parameter to `InitialProgram=explorer.exe` and save the file.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the newly saved file to open the explorer for the Citrix server.
    This will provide us with the capability to read the `lan/auth/login.aspx` file
    and other sensitive files.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have a Citrix Terminal, the environment may be restricted (blank screen).
    Open **Task Manager** and click on **File** | **New Task**. The new task window
    will open. Type `explorer.exe` and click **OK**.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Within Windows Explorer, navigate to the directory holding all `.aspx` files
    to confirm you are on the Citrix server.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This technique allows a user to break out of the **Citrix** virtualized environment.
    In the next section, we will perform penetration testing on Microsoft RDP and
    attempt to gain access.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have completed this section, let's attempt to exploit one of the
    most popular remote access services in an enterprise environment, Microsoft's
    RDP.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: Breaking into RDP
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Microsoft's RDP provides a GUI for the user to establish a connection to a Windows-based
    system over the network. Quite often, system administrators enable the RDP service
    on their client and server machines in an organization for easy access. With RDP
    enabled on a device, a system administrator does not need to physically go to
    the geographic location of a system to check its configurations or make adjustments
    to the operating system. All they have to do is simply log on using RDP. This
    protocol makes the job of IT professionals a bit easier and more efficient.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: 'The protocol was designed for remote access. However, as a penetration tester,
    we can take advantage of systems that have RDP enabled by attempting to discover
    valid user credentials for target systems. Let''s get started:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin, we can use Nmap to scan a network while searching for any device
    that has RDP enabled. RDP uses port `3389` on Windows, and so we can use the following
    Nmap command to scan a target:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The following screenshot indicates a system that has port `3389` open and is
    running `Microsoft Terminal Services`:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/098e69ff-fbd1-483b-b980-d7cd80b77747.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have found a suitable target, we can perform a dictionary attack
    on the live target. Using **Ncrack** (an offline password-cracking tool), we can
    use a list of possible usernames (`usernames.txt`) and passwords (`custom_list.txt`),
    as shown in the following screenshot:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d3968035-9976-4a54-8adb-420ac02a95ad.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
- en: 'The following are descriptions of each of the switches used in the preceding
    snippet:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: '`-v`: Increases the verbosity of the output on the Terminal.'
  id: totrans-262
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-T (0-5)`: Adjusts the timing of the attack. The higher the number, the faster
    the attack is.'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-U`: Allows you to specify a list of usernames.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--user`: Allows you to specify usernames, each separated by a comma.'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-P`: Allows you to specify a list of passwords.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--pass`: Allows you to specify passwords, each separated by a comma.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`service://host`: Ncrack uses this format to specify a service and a target
    device.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you saw, **Ncrack** was able to find a valid username and password combination
    for the target (`10.10.10.19`). Thus, having obtained the user's credentials,
    it's now simple to use them to our advantage.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: At this point, once you've obtained a valid user account, the next step is to
    actually log in to the target using the RDP and other network services (Telnet,
    SSH, VNC, and so on) you found running on the target system.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Another **online password cracking** tool we could use is **Hydra**. To use
    Hydra to perform the same task we just did with Ncrack, you can execute the following
    command:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note that the RDP module within Hydra may not work on modern versions of Windows.
    Further information on Hydra can be found on its official GitHub repository at
    [https://github.com/vanhauser-thc/thc-hydra](https://github.com/vanhauser-thc/thc-hydra).
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: 'Upon receiving a `meterpreter` shell in **Metasploit**, the following are some
    useful commands to help you capture keystrokes and the victim''s screen:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: '`screenshare`: This command is used to watch the remote victim''s desktop in
    real time.'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`screenshot`: Takes a picture of the victim''s desktop.'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`keyscan_start`: Starts keylogging using Meterpreter.'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`keyscan_stop`: Stops keylogging.'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`keyscan_dump`: Produces a dump of the keystrokes captured.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows a live screen view of a victim''s desktop after
    executing the `screenshare` command in Meterpreter:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1be861d2-4175-4fac-abdb-d20fb1aa743c.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
- en: As you can see, it's quite scary what a real hacker can do once they have gained
    access to a network or system.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: You're now able to detect and exploit the EternalBlue vulnerability in the Windows
    operating system. Next, we'll take a look at leveraging user credentials for our
    benefit.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: Leveraging user credentials
  id: totrans-284
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have obtained user credentials for a target Microsoft Windows system,
    let''s attempt to connect remotely. For this exercise, we are going to use the
    **rdesktop** client, which is already pre-installed within Kali Linux. Let''s
    get started:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: '**rdesktop** is an open source protocol that''s used for remote administration,
    similarly to Microsoft''s RDP.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: 'To use rdesktop, open a new Terminal window and use the following syntax:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The following snippet is an example of using the rdesktop tool with all the
    necessary details:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/30161b19-e9e4-42b8-b3dc-e58739d66993.png)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
- en: 'Once you''ve executed the command, rdesktop will attempt to establish a remote
    connection to the target device. Once successful, rdesktop will provide a new
    window with the target''s user interface, as shown in the following screenshot:'
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/85f8e609-6326-462d-85c9-f59daa8037da.png)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
- en: At this point, we have successfully gained entry to the target operating system
    and have control over it.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: 'If your attacker system does not have the rdesktop tool, it can be found at
    its official GitHub repository: [https://github.com/rdesktop/rdesktop](https://github.com/rdesktop/rdesktop).
    For further information on rdesktop, please go to its official website at [www.rdesktop.org](http://www.rdesktop.org).'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: As you saw, we can simply use native tools within Kali Linux with the victim's
    credentials to access resources, systems, and networks during a penetration test.
    In the next section, we'll dive into network implants.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: Plugging PWN boxes and other tools directly into a network
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Quite often, penetration testers tend to plant a tiny, special box within an
    organization''s network. These are known as network implants, and are sometimes
    referred to as PWN boxes. Network implants allow an attacker to establish a connection
    from the internet to a corporate network, by connecting to the implant tool as
    shown in the following screenshot:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cd9bf0fa-5a58-490d-8282-98b8edab69b0.png)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
- en: 'The following is a photo of a network implant that can be inserted to intercept
    network traffic. This device is capable of capturing live packets and storing
    them on a USB flash drive. It has remote access capabilities that can allow a
    penetration tester or system administrator to remotely access the device, thereby
    allowing the user to remotely perform various tasks on the network. This little
    device is called the **Packet Squirrel**, and was created by Hak5:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/951bc163-942d-4e8b-a238-a1bc8216f1cc.png)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
- en: 'Additionally, there''s another device that looks like a USB Ethernet adapter.
    This so-called Ethernet adapter is also another network implant that allows a
    penetration tester to remotely access a network and perform various tasks, such
    as scanning, exploitation, and attack pivoting. This little device is called the
    **LAN Turtle**, another amazing piece of gear that was produced by Hak5:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4235dc6c-a9b6-4c4b-a3f1-358125036ff8.png)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
- en: 'Over the past few years, the **Raspberry Pi** ([www.raspberrypi.org](http://www.raspberrypi.org))
    was introduced to the world of computing. Today, many institutions, organizations,
    and households use the Raspberry Pi for many projects, from learning, to programming,
    to home security monitoring systems. The possibilities are endless with this little
    credit card-sized computer:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d9b80e5f-db68-40d0-941f-b245c29b6bcb.png)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
- en: However, there are many operating systems that are currently available to the
    Raspberry Pi, one of which is the Kali Linux ARM image ([https://www.offensive-security.com/kali-linux-arm-images/](https://www.offensive-security.com/kali-linux-arm-images/)).
    Imagine the possibilities of loading Kali Linux into this portable device, planting
    it into an organization's network, and setting up remote access. The results of
    such a scenario would be grave if it were perpetrated by a real attacker, but
    a penetration tester would be able to help their client a great deal by showing
    them how vulnerable they are to attacks launched from within the internal network.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: There are so many devices and gadgets that facilitate penetration testing that
    the possibilities are limitless. In the next section, we will be covering the
    fundamentals of NAC.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: Bypassing NAC
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: NAC is a system that's designed to control access and ensure compliance. It
    uses a set of processes and technologies that are focused on controlling who and
    what is able to access a network and its resources. NAC does this by authorizing
    devices that have a level of compliance to operate on a corporate network.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: Once a device is connected, the NAC server is able to profile and check whether
    the connected device has met the standard of compliance before allowing access
    to the network resources, security policies, and controls, which are configured
    to ensure that there is some form of restriction that prevents non-compliant devices
    from obtaining network access.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
- en: 'IEEE 802.1x is the NAC standard for both LAN (wired) and WLAN (wireless) networks.
    Within an 802.1x network, there are three main components:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: '**Authentication server**: The authentication server is the device that handles
    **authentication, authorization, and accounting** (**AAA**) services on a network.
    This is where user accounts are created and stored, and where privileges and policies
    are applied. The authentication server runs either **Remote Authentication Dial-In
    User Service** (**RADIUS**) or **Terminal Access Controller Access-Control System
    Plus** (**TACACS+**) as its protocol.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authenticator**: This is typically the network device that you are attempting
    to access, whether it be for administration purposes or to simply access the network.
    Such devices can be a wireless router/access point or a network switch.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Supplicant**: The supplicant is the client device, such as a smartphone or
    laptop computer, that wants to access the network. The supplicant connects to
    the network (wired or wireless) and is prompted with an authentication login window
    provided by the authenticator. When the user submits their user credentials, the
    authenticator queries the authentication server to verify the user and determine
    what policies and privileges to apply while the user is logged on to the network.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bypassing an NAC system can be somewhat challenging. During the course of this
    chapter and the previous chapter, we took a look at how to gather user credentials
    and spoof the identity of our attacker machine (Kali Linux). Using the MAC address
    and user credentials of a valid user on a target network will provide you with
    some sort of access to the secure network.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: However, NAC servers are capable of profiling the operating system and anti-malware
    protection on all connected devices. If your system does not satisfy compliance
    requirements, this can trigger a red flag or not allow access based on policies.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we were able to cover a lot of practical content, such as breaking
    both WEP and WPA wireless encryption standards to recover the key (passphrase).
    Having exploited wireless security, best practices were discussed and demonstrated
    so that we can secure wireless networks from potential hackers.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, a practical approach to penetration testing on both Microsoft's
    RDP and Citrix services was covered. Lastly, we covered the uses of various network
    implants and how they can maintain remote access to a corporate network.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: You now have the skills to gain access to a wireless network, perform exploitation
    on target systems, and gain access to both the Linux and Windows operating systems.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 11](ca54b243-2f79-48cd-bb5c-e25e1c891ee0.xhtml), *Network Penetration
    Testing - Post-Connection Attacks*, we'll explore various tools in the post-connection
    phase.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What algorithm does WPA2 use for data encryption?
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What Nmap script is used to discover servers running Citrix applications?
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the default port that Microsoft's RDP uses?
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are some password cracking tools within Kali Linux?
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What device is typically used to store all user accounts and policies?
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which command can be used to find a module in Metasploit?
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the standard for NAC?
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-329
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are some additional recommended reading resources:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: '**Metasploit Unleashed**: [https://www.offensive-security.com/metasploit-unleashed/](https://www.offensive-security.com/metasploit-unleashed/)'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Additional security tools**: [https://sectools.org/](https://sectools.org/)'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
