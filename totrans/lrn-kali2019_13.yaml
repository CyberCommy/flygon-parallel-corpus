- en: Network Penetration Testing - Gaining Access
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Gaining access to a system and network is one of the most critical phases during
    a penetration test. This phase tests both the penetration tester's skill set and
    the security controls of the target system and network. The penetration tester
    must always think about all the possible ways in which they can break into the
    target by exploiting various security flaws.
  prefs: []
  type: TYPE_NORMAL
- en: Without gaining access to a corporate network, you will not be able to perform
    any sort of network penetration and exfiltrate data. The purpose of a penetration
    test is to simulate real-world attacks that a real hacker with malicious intent
    would perform. This means gaining unauthorized entry to a corporate network and
    compromising systems.
  prefs: []
  type: TYPE_NORMAL
- en: As an upcoming cybersecurity professional/penetration tester, you will learn
    how to compromise wireless networks, exploit the Linux and Windows operating systems,
    take advantage of remote access services, and retrieve user account credentials
    to gain access to a system and network. Additionally, you'll learn about various
    countermeasures for securing a wireless network from cyber threats.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will be covering the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Gaining access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wired Equivalent Privacy** (**WEP**) cracking'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wi-Fi Protected Access** (**WPA**) cracking'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Securing your wireless network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring wireless security settings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploiting vulnerable perimeter systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Penetration testing Citrix and **Remote Desktop Protocol** (**RDP**)-based remote
    access systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PWN boxes and other tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bypassing **Network Access Control** (**NAC**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To follow along with the instructions in this chapter, please ensure that you
    meet the following hardware and software requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows 7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless router
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaining access
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Penetration testing and ethical hacking is an exciting topic. Everyone is always
    excited to hack another system, whether it's a computer or even a wireless network.
    The previous chapters focused on gathering enough intelligence on a target prior
    to launching an attack. The exploitation phase of hacking and penetration testing
    can sometimes be challenging.
  prefs: []
  type: TYPE_NORMAL
- en: It's very important to gather as many details as possible about the target.
    Such background work helps us to determine approximate exploits and a payload
    we can launch against a target system or network. Sometimes, when you launch an
    exploit that's intended for a particular operating system, it may not work, and
    this can be frustrating. One tactic you can adopt is to target the low-hanging
    fruits on a networkâ€”that is, attempt to exploit and gain access to systems and
    devices that seem easier and vulnerable to TCP/IP protocols that can be easily
    exploited.
  prefs: []
  type: TYPE_NORMAL
- en: An example is the **vsftpd** service, which we explored in the previous chapters
    and used to gain entry to the target via a shell interface. Another example is
    the **EternalBlue** vulnerability, which is found on the Windows operating system.
    During your scanning phase, be sure to perform an extensive vulnerability assessment
    on all the devices on your target network.
  prefs: []
  type: TYPE_NORMAL
- en: Begin by exploiting targets that seem to be the most vulnerable and, hence,
    easy to exploit, and then move on to those that are less vulnerable and thus more
    difficult to exploit. To put this into context, imagine appearing for a written
    examination. The question paper has a lot of challenging questions that need to
    be answered within a given time period. In such a scenario, it's always wise to
    answer easier questions first and then move on to the tougher ones. This will
    give you more time to answer questions that you are more likely to get correct
    and maximize the marks that you will score in the exam.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many methods and techniques a penetration tester can apply to gain
    access to systems, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Online and offline password cracking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cracking the **pre-shared key** (**PSK**) on a wireless network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social engineering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing a **Man-in-the-Middle** (**MITM**) attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing a brute-force attack on application layer protocols
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: During the gaining-access phase, a penetration tester usually performs various
    types of attack that will assist them in gaining entry to a network. Usually,
    you start by performing online or offline password cracking. Once you've obtained
    a valid username and password, the next step is to access the victim's system
    and escalate your user privileges. Obtaining a higher level of user privilege
    will allow for the execution of any application and tasks on the compromised machine.
    Hiding files such as malicious code is designed to ensure that a hidden backdoor
    is created and that logic bombs (a type of virus that contains a set of instructions
    triggered by a user's action) have been planted. Lastly, when disconnecting from
    a compromised machine, it's always wise to cover your tracks. Covering your tracks
    is the last phase in penetration testing and focuses on removing any log files
    and evidence indicating that an attacker was present on the system or network.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a typical flowchart for gaining access to a system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/796f50d7-3ee1-487a-87ba-620eb285c8fe.png)'
  prefs: []
  type: TYPE_IMG
- en: In the upcoming sections, we will take a look at various methods we can use
    in order to gain entry to a target system.
  prefs: []
  type: TYPE_NORMAL
- en: WEP cracking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By using wireless networking, users with an IEEE 802.11-compatible device such
    as a laptop are able to connect to a wireless access point. This will let them
    access the resources on the local network, just like they would when connected
    physically using a wire. Wireless networking provides a lot of convenience to
    a user, whether at home or in a corporate environment.
  prefs: []
  type: TYPE_NORMAL
- en: By default, a wireless network is open, thus allowing anyone with a laptop or
    smartphone to establish a connection. This creates a concern about user privacy
    and security. The WEP encryption standard was used in the early generations of
    wireless networking and is still implemented by users at home and by IT administrators.
  prefs: []
  type: TYPE_NORMAL
- en: The WEP encryption standard uses the **Rivest Cipher 4** (**RC4**) encryption
    cipher, which uses a **40-bit key** for data encryption. When it was developed,
    this was considered very secure, but, by 2002, multiple security weaknesses had
    been found in the standard. An attacker would be able to obtain the encryption
    key within a few hours. Using the 40-bit key, an attacker could capture and decrypt
    traffic very quickly, which compromised the confidentiality of the WEP encryption
    standard. In modern cryptographic standards, a larger encryption key is used to
    prevent such attacks on data encryption.
  prefs: []
  type: TYPE_NORMAL
- en: As a cybersecurity professional in the field of offensive security, it's important
    to understand the techniques you should apply when performing WEP cracking using
    Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform the following steps to accomplish this:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Enable monitoring mode on your wireless adapter with the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Perform wireless sniffing on nearby access points until you have discovered
    your target:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Once you've found your target, make a note of its BSSID, channel, and ESSID
    values.
  prefs: []
  type: TYPE_NORMAL
- en: Stop `airodump-ng` using *Ctrl* + *C* on your keyboard after obtaining the details,
    and then proceed to the next step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Attempt a packet capture for the target wireless network:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s look at what some of these commands do:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--bssid`: Allows you to specify a particular access point by using its BSSID
    value (media access control address of the access point)'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-c`: Allows you to set the wireless radios so that they listen on a specific
    channel'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-w`: Specific to the output location and filename'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform a deauthentication attack on the target.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Performing a deauthentication attack on the target access point will force
    any connected clients to disassociate. Once the clients are disconnected, they
    will automatically attempt to reconnect to the access point. In doing so, you
    are attempting to capture the WEP key during the clients'' attempt to reauthenticate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: When you have captured the WEP key (you'll see the notification on the window
    running `airodump-ng`), you can stop the deauthentication attack.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's attempt to crack the WEP and retrieve the secret key.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you''ve captured sufficient data on the target wireless network, stop
    `airodump-ng`. Using the `ls -l` command on the Terminal, you''ll see a `.cap`
    file. In a new Terminal window, execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Additionally, you can use the following simple command to achieve the same
    task:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot is an example of the expected output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a7901ba9-ca30-49e4-86ba-74cc0751c482.png)'
  prefs: []
  type: TYPE_IMG
- en: However, your WEP key will be different based on the value that was set by the
    administrator of the wireless access point. The output key is given in hexadecimal
    format, so you can now take this hex-based key and use it to access the target
    access point.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you are now able to perform WEP cracking on wireless
    networks. In the next section, we will take a deep dive into how to perform WPA
    cracking techniques.
  prefs: []
  type: TYPE_NORMAL
- en: WPA cracking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Given the security vulnerabilities found in WEP, WPA was created in 2002 as
    an improved wireless security standard for IEEE 802.11 networks. WPA uses the
    **Temporal Key Integrity Protocol** (**TKIP**), which applies the RC4 encryption
    cipher suite for data privacy between the wireless access point and client devices.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, **Wi-Fi Protected Access 2** (**WPA2**) was later developed to
    solve security flaws in its predecessor. WPA2 uses the **Advanced Encryption Standard**
    (**AES**) for data encryption as opposed to the RC4 cipher. Additionally, WPA2
    implemented **Counter Mode with Cipher Block Chaining Message** **Authentication
    Code Protocol** (**CCMP**), which replaced TKIP.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s get into the fun part, cracking WPA to gain entry to a target wireless
    network:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Enable monitoring mode on your wireless adapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Perform wireless sniffing on a nearby access point until you have discovered
    your target:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Once you have found your target, take note of its BSSID, channel, and ESSID
    values. Stop `airodump-ng` after obtaining the details, and then proceed to the
    next step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Attempt a packet capture for the target wireless network:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Perform a deauthentication attack on the target.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Performing a deauthentication attack on the target access point will force
    any connected clients to disassociate. Once the clients are disconnected, they
    will automatically attempt to reconnect to the access point. In doing so, you
    are attempting to capture the WEP key during the clients'' attempt to reauthenticate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'When you have captured the WPA handshake, as shown in the following screenshot,
    you can stop the deauthentication attack:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4a2da0c5-c84d-47ea-b804-4e508f497c46.png)'
  prefs: []
  type: TYPE_IMG
- en: Using *Ctrl* + *C*, stop the deauthentication attack and proceed to the next
    step.
  prefs: []
  type: TYPE_NORMAL
- en: 'To crack the WPA, we are going to use a word list. Using **crunch**, you can
    generate your own custom password word list. Additionally, the following are the
    locations of various word lists that are already pre-installed on Kali Linux:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/294f7162-e739-4c43-b8b2-a1d0c0886a87.png)'
  prefs: []
  type: TYPE_IMG
- en: Once you have found a suitable word list, we can use the `aircrack-ng` tool
    with the `-w` parameter to specify a word list of our choice.
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin your password cracking for WPA, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '`aircrack-ng` will attempt to perform a dictionary attack using the specific
    word list and will stop when the **key** is found, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/49ada9bd-1b9a-43c1-b3f9-5087bb7a54b0.png)'
  prefs: []
  type: TYPE_IMG
- en: Sometimes, a word list may not contain the password, and the result may not
    be fruitful. Create a custom word list using the **crunch** tool, or try using
    a word list from the `SecLists` GitHub repository at [https://github.com/danielmiessler/SecLists](https://github.com/danielmiessler/SecLists).
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have completed this section on cracking wireless security, let's
    take a look at the following section, which covers how to secure your wireless
    network against cyber attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Securing your network from the aforementioned attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you saw in the previous section, a penetration tester or malicious hacker
    can attempt to hack your wireless network and obtain the secret key (password).
    Whether you're a student taking a computer security course, an IT professional,
    or simply an enthusiast, the topics covered in this section are some methods and
    techniques that you can use to secure your network from such attacks.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following sections, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: SSID management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MAC filtering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The power level of antennas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong passwords
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Securing enterprise wireless networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's dive in!
  prefs: []
  type: TYPE_NORMAL
- en: SSID management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you buy a new access point or wireless router, the default **service set
    identifier** (**SSID**) is usually that of the manufacturer. For example, the
    default SSID (wireless network name) for a new Linksys access point would contain
    the name `Linksys` as its SSID. Many manufacturers do this to help the user quickly
    identify their wireless network when setting up a new access point. However, many
    individuals and organizations use the default SSID.
  prefs: []
  type: TYPE_NORMAL
- en: Leaving the default SSID as it is can be a security concern. Let's say you acquire
    a new Linksys access point for your home or organization, and, during the setup
    process, you decide to leave the default configurations for the device SSID. The
    word `Linksys` would be part of the network name. As a penetration tester who
    is performing wireless scanning for nearby access points, seeing a manufacturer's
    name can help profile the device and research specific exploits for the `Linksys`
    AP.
  prefs: []
  type: TYPE_NORMAL
- en: 'Imagine seeing the word `Netgear` while scanning for wireless access points.
    You can simply do a Google search for a list of known security vulnerabilities
    and misconfigurations on this particular brand, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eb1d2f1a-8608-48ef-9a5e-bda1afa92ab3.png)'
  prefs: []
  type: TYPE_IMG
- en: To put it simply, you should not use any sort of name that may attract hackers
    or give away the identity of the access point and the organization. I often see
    companies create SSIDs with the name of their organization and, at times, incorporate
    the purpose of the SSID as part of the name.
  prefs: []
  type: TYPE_NORMAL
- en: An example of this is using the name `CompanyName_Admin`. Any penetration tester
    who is performing any sort of wireless security audit will target such networks
    initially.
  prefs: []
  type: TYPE_NORMAL
- en: Hiding an SSID is good practice, but it can still be discovered using wireless
    sniffing techniques such as `airodump-ng`, as outlined in the previous sections.
    Additionally, on a Windows-based system, you can use **NetStumbler** ([www.netstumbler.com](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=2ahUKEwidnMDXmfjiAhVFTd8KHTPZAS8QFjAAegQIABAB&url=http%3A%2F%2Fwww.netstumbler.com%2Fdownloads%2F&usg=AOvVaw1txhDBmLy67I3rlfCDYpX8))
    and **inSSIDer** ([https://www.metageek.com/products/inssider/](https://www.metageek.com/products/inssider/)).
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will discuss the purpose of MAC filtering on a wireless
    network.
  prefs: []
  type: TYPE_NORMAL
- en: MAC filtering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Each managed access point and its wireless router provides a basic type of access
    control for connected devices. Enabling MAC filtering on an access point allows
    you to specify a list of permitted and restricted devices that can, and cannot,
    connect to the access point. However, there are techniques, all of which were
    covered in the previous chapter, that allow a penetration tester to capture a
    list of authorized devices (their MAC addresses) and perform spoofing to gain
    unauthorized access. However, this feature should still be applied, since having
    some sort of security is better than having no security at all on your network.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will cover the concept of power levels in antennas.
  prefs: []
  type: TYPE_NORMAL
- en: Power levels for antennas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Some access points have a feature within their operating system or firmware
    that allows you to manually adjust power levels on the antennas. By lowering the
    power level on the antenna, the broadcast range of the wireless signal will reduce
    in radius. Setting the power levels to 100% will ensure there is maximum coverage
    for the signal. This feature can be handy if you're concerned about others being
    able to see and intercept your data on the wireless network.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have an understanding of the role power levels play on antennas,
    we will cover the essentials of creating strong passwords.
  prefs: []
  type: TYPE_NORMAL
- en: Strong passwords
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cracking a user password usually depends on the complexity of the password
    itself. Many users tend to set simple and easy-to-remember passphrases on their
    devices, especially on a wireless network. However, a complex password will create
    difficulties for the penetration tester or hacker. Complex passwords have the
    following characteristics:'
  prefs: []
  type: TYPE_NORMAL
- en: They contain uppercase characters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They contain lowercase characters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They contain numbers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They contain specific symbols
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They are over 12 characters in length
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They do not contain a name
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They do not contain a date of birth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They do not contain a vehicle's plate number
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following is an example of a complex password generated by **LastPass**
    ([www.lastpass.com](http://www.lastpass.com)), a password manager:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dc788631-cd18-459b-b1e6-75dfe2bb6611.png)'
  prefs: []
  type: TYPE_IMG
- en: The idea is to ensure that nobody can guess or compromise your password easily.
    If a malicious user is able to compromise another person's user credentials, the
    attacker can wreak havoc on the victim's network and/or personal life.
  prefs: []
  type: TYPE_NORMAL
- en: In the following section, we will describe techniques that can be implemented
    on an enterprise network to improve its security posture.
  prefs: []
  type: TYPE_NORMAL
- en: Securing enterprise wireless networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An enterprise wireless network should use the following as techniques to reduce
    the risk of wireless network attacks:'
  prefs: []
  type: TYPE_NORMAL
- en: Implement a **wireless intrusion prevention system** (**WIPS**) on each wireless
    network owned and managed by the organization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure that all wired and wireless devices have the latest firmware and patches
    installed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure that devices and configurations are compliant with the **National Institute
    of Standards and Technology** (**NIST**). Take a look at the *Establishing Wireless
    Robust Security Networks* section in the NIST framework at [https://csrc.nist.gov/publications/detail/sp/800-97/final](https://csrc.nist.gov/publications/detail/sp/800-97/final)
    for more information.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Whenever possible, implement multi-factor authentication to access the corporate
    network.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement the **Extensible Authentication Protocol** (**EAP**)â€”**Transport Layer
    Security** (**TLS**) certificate-based method to ensure the confidentiality and
    authenticity of wireless communication.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use WPA2-Enterprise with AES encryption.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement an isolated guest wireless network.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing these techniques and controls can help reduce the security risks
    on an enterprise network. In the following section, we will cover the steps we
    need to follow in order to configure and secure a wireless network.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring wireless security settings to secure your network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll discuss how to configure your wireless security features
    on your access point and wireless router so that you can secure your network.
  prefs: []
  type: TYPE_NORMAL
- en: For this exercise, I am using a Linksys EA6350 wireless router. Please note
    that all wireless routers and access points have the same features within their
    management interface; however, the **graphical user interface** (**GUI**) for
    each manufacturer and device may vary.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get started!
  prefs: []
  type: TYPE_NORMAL
- en: You'll need to log in to your access point or wireless router.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once logged in, click on the **Wireless** tab within the user interface. Here,
    you''ll be able to change the network name (SSID), set a complex password, set
    a security mode, and broadcast the SSID, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f3b35409-f934-4158-b618-0230245cb37a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Using the following guidelines will assist in improving the security posture
    of your wireless network:'
  prefs: []
  type: TYPE_NORMAL
- en: Change the SSID (network name) to something that won't attract prying eyes.
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: Hide (broadcast) the SSID.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a complex password. If you're having difficulties, try using an online
    password generator.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Each modern access point and wireless router allows various security modes,
    such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**None**: Disables authentication.'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '**WEP**: Uses the WEP encryption standard.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**WPA Personal**: Uses the WPA encryption standard and allows you to set a
    **pre-shared key** (**PSK**) on the access point. Therefore, any device that requires
    access to the wireless network will be required to provide the PSK.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**WPA Enterprise**: This mode applies the WPA encryption standard, but note
    that the access point stores user credentials in WPA Personal. WPA Enterprise
    queries a central **authentication, authorization, and accounting** (**AAA**)
    server to verify user access on the wireless network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**WPA2 Personal**: Uses the WPA2 encryption standard.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**WPA2 Enterprise**: Uses the WPA2 encryption standard with the AAA server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can choose to disable the SSID broadcast to cloak your network.
  prefs: []
  type: TYPE_NORMAL
- en: Next, you should see another sub-tab that allows you to configure **MAC filtering**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enable the MAC filtering feature. Once enabled, you''ll have the option to
    add MAC addresses to an allow or deny list, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1d433110-1f30-400c-b9c5-803663dc8e82.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Lastly, disable the **Wi-Fi Protected Setup** feature, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e46571b8-224c-45b9-8f97-6ceb26f3b28f.png)'
  prefs: []
  type: TYPE_IMG
- en: WPS has known security vulnerabilities and should not be used in secure environments.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this exercise, you are now able to configure and set up a wireless
    network. In the next section, we will look at the essentials of exploiting perimeter
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: Exploiting vulnerable perimeter systems with Metasploit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Exploiting target systems on a network can sometimes be a challenging task.
    Exploits are simply pieces of code that are designed to take advantage of a security
    vulnerability (weakness). In [Chapter 5](474024a2-84fc-4fb6-b1b7-bd64ce91ef0c.xhtml),
    *Passive Information Gathering*, [Chapter 6](a7554e9e-076d-45b8-b0fa-3b02ac270e24.xhtml),
    *Active Information Gathering*, and [Chapter 7](075f58ca-ff2a-48c7-9b90-17ddd4e408c9.xhtml),
    *Working with Vulnerability Scanners*, we took a n in-depth look at establishing
    security flaws in target systems using various tools such as Nmap and Nessus.
    In this section, we are going to leverage the information and skill set we have
    developed thus far and perform exploitation using the Metasploit framework.
  prefs: []
  type: TYPE_NORMAL
- en: 'During this exercise, we''ll be using our Kali Linux machine as the attacker,
    and the Metasploitable machine as the target. Let''s get started:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s perform a **service version scan** on the target using Nmap. This will
    help us to determine the ports, protocols, and service versions that are running.
    Execute the **`nmap -sV <target IP addr>`** command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/80890eef-14a0-427b-8839-8c3bd729cfb3.png)'
  prefs: []
  type: TYPE_IMG
- en: As we can see, there are many services on the target.
  prefs: []
  type: TYPE_NORMAL
- en: 'Start the **Metasploit** framework by enabling the **PostgreSQL** database
    service. Then, initialize the Metasploit framework and execute the following commands
    within a Terminal window:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The Metasploit framework should take a minute or two to initialize. When it's
    ready, you'll be presented with a fun welcome banner and the **command-line interface**
    (**CLI**).
  prefs: []
  type: TYPE_NORMAL
- en: Based on our Nmap results, port `21` is open and is running the **File Transfer
    Protocol** (**FTP**). By performing the service version scan, we are able to determine
    whether it's running a **vsftpd 2.3.4** daemon. On your Metasploit interface,
    you can search for modules (scanners, exploits, and so on) using the `search`
    command, followed by a keyword or string.
  prefs: []
  type: TYPE_NORMAL
- en: 'On your Metasploit console, search for any useful modules that may help us
    compromise the FTP server on the target machine by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Metasploit will provide us with a list of results that meet the search criteria.
    You should see the console return a Unix-based exploit called `vsftpd_234_backdoor`.
    To use this exploit on our target, use the following sequence of commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Within my lab environment, the target is using the `10.10.10.100` IP address.
    Please ensure that you verify the IP address of your target device before setting
    the `RHOSTS` (remote hosts) value on Metasploit. Additionally, there are many
    modules that will require you to set a remote target. You can use the `setg` command
    to set the target globally.
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the `exploit` command. Metasploit will attempt to push the exploit
    code to the target. Once successful, a shell is created. A shell allows us to
    remotely perform commands from our attacker machine on the target, as shown in
    the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3a1e0848-b25b-4f21-843c-94d39b60b94b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'At this point, any command that''s executed on the console will be executed
    on the target. Execute the `uname -a` command to verify and print the system information:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/481363eb-6936-42b7-89f4-7baeac5cad09.png)'
  prefs: []
  type: TYPE_IMG
- en: Often, when performing a simple port scan on both public-facing and internal
    systems, port `23` is usually open for remote management. However, port `23` is
    the default port that's used for the Telnet protocol. Telnet is an insecure protocol
    that allows a user to remotely access a machine over a network and all traffic
    passing between the user. Any Telnet-enabled device is unencrypted and is susceptible
    to MITM attacks where an attacker can capture user credentials quite easily.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s use the `search` command to find a useful module to check for valid
    user credentials on a Telnet-enabled device. To begin, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'As usual, a list of results that comply with the search criteria will be presented
    on the console. For this exercise, we are going to use a specific scanner to check
    for validated user accounts:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, set your remote host(s):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'If you have a word list containing different usernames, use the following command
    (specify the file path):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Optionally, if you have a password list, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'However, if you do not have any word lists, that''s OK. You can specify an
    individual username and password using the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Once you''re done, use the `run` command to execute the `auxiliary` module:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Be sure to wait a few seconds for the scanner to start. Sometimes, you won't
    see results appear immediately on the screen.
  prefs: []
  type: TYPE_NORMAL
- en: We use the `run` command to execute an `auxiliary` module, and the `exploit`
    command to execute an exploit within Metasploit.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot indicates that a valid username and password were
    found:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9ee80d39-2897-4f46-937d-54fbad916663.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As we''ve already mentioned, you can use **crunch** to generate custom word
    lists to your liking. Additionally, a set of word lists is located in the `/usr/share`
    directory in Kali Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/586929c6-bddc-4a2c-a4a0-0aa19aa9f797.png)'
  prefs: []
  type: TYPE_IMG
- en: Remember that, when performing a password attack or attempting to discover valid
    user credentials, the task can be very time-consuming and may not always be in
    your favor. However, this illustrates the importance of the reconnaissance (information-gathering)
    phase of penetration testing. The more details we are able to gather about the
    target, the more we'll be able to narrow down a wide range of attacks to specific
    ones for a particular system or network infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we are going to attempt exploitation and gain access to a target system,
    that is, Microsoft Windows.
  prefs: []
  type: TYPE_NORMAL
- en: EternalBlue exploitation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s attempt to exploit a Windows system and get a shell. For this exercise,
    a Windows 7, 8, 8.1, or 10 operating system can be used as the target/victim machine.
    The following is a diagram of my lab topology displaying the IP assignments for
    the attacker and victim machines:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/67e797b6-45f1-407b-b863-2accfe1856d8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If your IP scheme is different, ensure that you record the IP addresses of
    each machine before continuing, as you''ll need them. Let''s get started:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let''s attempt to run a vulnerability scan on the target Windows system.
    The following snippet is the result of using the `nmap --script vuln 10.10.10.19`
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a0b55f75-b93e-4433-8764-caf919d82e4b.png)'
  prefs: []
  type: TYPE_IMG
- en: The highlighted area indicates that our target is vulnerable to a remote code
    execution attack for the Microsoft security bulletin ID `ms17-010`, known as **EternalBlue**.
    Further research into this vulnerability tells us that the target is vulnerable
    to exploits by WannaCry, Petya, and other malware.
  prefs: []
  type: TYPE_NORMAL
- en: The EternalBlue vulnerability allows an attacker to perform remote code execution
    on a Microsoft SMBv1 server.
  prefs: []
  type: TYPE_NORMAL
- en: 'Within the **Metasploit Framework** (**MSF**) console, use the `search ms17-010`
    command to filter the results for EternalBlue exploits, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f11fbd64-e7a5-47d2-8c1e-dacc5ca11f97.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The MSF console returned a few results. We will use the `ms-17-010_eternalblue`
    exploit and the **Meterpreter reverse TCP payload** to attempt a reverse connection
    (reverse shell) from the victim''s machine back to our attacker machine. To achieve
    this task, use the following commands, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f2b9dc69-f563-4fd6-ab2e-9032a1ec1f9b.png)'
  prefs: []
  type: TYPE_IMG
- en: After executing the exploit, you'll now have a `meterpreter` shell. The `meterpreter`
    shell will allow you to communicate seamlessly between your attacker machine and
    the victim's operating system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: According to SANS ([www.sans.org](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&cad=rja&uact=8&ved=2ahUKEwjjwcul2N3iAhUpTt8KHZ-9CJUQFjABegQICxAE&url=https%3A%2F%2Fwww.sans.org%2Fsecurity-resources%2Fsec560%2Fmisc_tools_sheet_v1.pdf&usg=AOvVaw0RrqNTtD6wrNTYHi-YFz2N)),
    Meterpreter is a payload within the Metasploit framework that provides control
    over an exploited target system, by running as a DLL that's been loaded inside
    any process on a target machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the `hashdump` command, you''ll be able to retrieve the password hashes
    of all locally stored user accounts on the victim''s machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c78932a7-61ec-4eb4-9c66-7732adac0843.png)'
  prefs: []
  type: TYPE_IMG
- en: The usernames of the accounts are always displayed in plain text, as shown in
    the preceding screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `hashdump` command within Meterpreter is used to retrieve user accounts
    within a Windows system. A user account is made up of three components: the **security
    ID** (**SID**), username, and password. The password is converted into an NTLM
    hash and stored in newer versions of Windows. In an older version of Windows,
    such as Windows XP, the password is stored using the **LAN Manager** (**LM**).
    Therefore, the Windows operating system never actually stores the password for
    a user account; it stores the hash value instead.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some useful commands that we can use within the `meterpreter`
    shell:'
  prefs: []
  type: TYPE_NORMAL
- en: '`screenshot`: Captures a screenshot of the victim''s desktop'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '`getsystem`: Attempts an escalation of privileges on the target'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`clearev`: Clears event logs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sysinfo`: Gathers information about the target'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To obtain a shell on the victim''s machine, type `shell` and press *Enter*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a2eac98e-3c3b-4867-abcb-a657577493bb.png)'
  prefs: []
  type: TYPE_IMG
- en: You'll now have a Windows Command Prompt interface on your Kali Linux machine.
    Now you'll be able to execute Windows commands remotely.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have covered exploitation briefly, let's gain access using remote
    access systems.
  prefs: []
  type: TYPE_NORMAL
- en: Penetration testing Citrix and RDP-based remote access systems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will take a look at performing penetration testing on two
    popular remote access systems in most IT environments: Citrix and Microsoft''s
    **Remote Desktop Protocol** (**RDP**).'
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a deep dive into Citrix and RDP penetration testing and gaining access.
  prefs: []
  type: TYPE_NORMAL
- en: Citrix penetration testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most of us have probably heard about Microsoft's RDP, which allows a user to
    remotely access another Windows machine across a network within a **graphical
    user interface** (**GUI**). Citrix is like RDP, but a lot better in terms of performance
    while providing an interactive user interface.
  prefs: []
  type: TYPE_NORMAL
- en: 'Many organizations use Citrix services and products to efficiently distribute
    access to applications within an organization. An example of using Citrix is running
    applications within an organization''s private data center. Using Citrix, IT administrators
    can provide access to the users of those applications. Each user would require
    a modern web browser to access a virtual desktop interface or centrally access
    applications in the data center. This method eliminates the need to install software
    applications on each employee''s computer. Let''s get started:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use the Nmap NSE script, `citrix-enum-apps`, to discover and extract
    applications. The following is an example of using the script in Nmap:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Additionally, you can specify `-p 1604` since the Citrix WinFrame uses both
    TCP and UDP port `1604`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you''ve found a Citrix machine, you can attempt to connect to published
    applications by logging on using the following URL:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Once you're logged in, click on an application to download a `launch.ica` file
    to your desktop. Once the file has been downloaded, open the file using Notepad
    or another text editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look for a parameter called `InitialProgram` that points to the `LIFE UAT` application.
    Change the parameter to `InitialProgram=explorer.exe` and save the file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the newly saved file to open the explorer for the Citrix server.
    This will provide us with the capability to read the `lan/auth/login.aspx` file
    and other sensitive files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have a Citrix Terminal, the environment may be restricted (blank screen).
    Open **Task Manager** and click on **File** | **New Task**. The new task window
    will open. Type `explorer.exe` and click **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Within Windows Explorer, navigate to the directory holding all `.aspx` files
    to confirm you are on the Citrix server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This technique allows a user to break out of the **Citrix** virtualized environment.
    In the next section, we will perform penetration testing on Microsoft RDP and
    attempt to gain access.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have completed this section, let's attempt to exploit one of the
    most popular remote access services in an enterprise environment, Microsoft's
    RDP.
  prefs: []
  type: TYPE_NORMAL
- en: Breaking into RDP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Microsoft's RDP provides a GUI for the user to establish a connection to a Windows-based
    system over the network. Quite often, system administrators enable the RDP service
    on their client and server machines in an organization for easy access. With RDP
    enabled on a device, a system administrator does not need to physically go to
    the geographic location of a system to check its configurations or make adjustments
    to the operating system. All they have to do is simply log on using RDP. This
    protocol makes the job of IT professionals a bit easier and more efficient.
  prefs: []
  type: TYPE_NORMAL
- en: 'The protocol was designed for remote access. However, as a penetration tester,
    we can take advantage of systems that have RDP enabled by attempting to discover
    valid user credentials for target systems. Let''s get started:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin, we can use Nmap to scan a network while searching for any device
    that has RDP enabled. RDP uses port `3389` on Windows, and so we can use the following
    Nmap command to scan a target:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot indicates a system that has port `3389` open and is
    running `Microsoft Terminal Services`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/098e69ff-fbd1-483b-b980-d7cd80b77747.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have found a suitable target, we can perform a dictionary attack
    on the live target. Using **Ncrack** (an offline password-cracking tool), we can
    use a list of possible usernames (`usernames.txt`) and passwords (`custom_list.txt`),
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d3968035-9976-4a54-8adb-420ac02a95ad.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following are descriptions of each of the switches used in the preceding
    snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '`-v`: Increases the verbosity of the output on the Terminal.'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-T (0-5)`: Adjusts the timing of the attack. The higher the number, the faster
    the attack is.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-U`: Allows you to specify a list of usernames.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--user`: Allows you to specify usernames, each separated by a comma.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-P`: Allows you to specify a list of passwords.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--pass`: Allows you to specify passwords, each separated by a comma.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`service://host`: Ncrack uses this format to specify a service and a target
    device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you saw, **Ncrack** was able to find a valid username and password combination
    for the target (`10.10.10.19`). Thus, having obtained the user's credentials,
    it's now simple to use them to our advantage.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, once you've obtained a valid user account, the next step is to
    actually log in to the target using the RDP and other network services (Telnet,
    SSH, VNC, and so on) you found running on the target system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Another **online password cracking** tool we could use is **Hydra**. To use
    Hydra to perform the same task we just did with Ncrack, you can execute the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Note that the RDP module within Hydra may not work on modern versions of Windows.
    Further information on Hydra can be found on its official GitHub repository at
    [https://github.com/vanhauser-thc/thc-hydra](https://github.com/vanhauser-thc/thc-hydra).
  prefs: []
  type: TYPE_NORMAL
- en: 'Upon receiving a `meterpreter` shell in **Metasploit**, the following are some
    useful commands to help you capture keystrokes and the victim''s screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '`screenshare`: This command is used to watch the remote victim''s desktop in
    real time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`screenshot`: Takes a picture of the victim''s desktop.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`keyscan_start`: Starts keylogging using Meterpreter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`keyscan_stop`: Stops keylogging.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`keyscan_dump`: Produces a dump of the keystrokes captured.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows a live screen view of a victim''s desktop after
    executing the `screenshare` command in Meterpreter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1be861d2-4175-4fac-abdb-d20fb1aa743c.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, it's quite scary what a real hacker can do once they have gained
    access to a network or system.
  prefs: []
  type: TYPE_NORMAL
- en: You're now able to detect and exploit the EternalBlue vulnerability in the Windows
    operating system. Next, we'll take a look at leveraging user credentials for our
    benefit.
  prefs: []
  type: TYPE_NORMAL
- en: Leveraging user credentials
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have obtained user credentials for a target Microsoft Windows system,
    let''s attempt to connect remotely. For this exercise, we are going to use the
    **rdesktop** client, which is already pre-installed within Kali Linux. Let''s
    get started:'
  prefs: []
  type: TYPE_NORMAL
- en: '**rdesktop** is an open source protocol that''s used for remote administration,
    similarly to Microsoft''s RDP.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To use rdesktop, open a new Terminal window and use the following syntax:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The following snippet is an example of using the rdesktop tool with all the
    necessary details:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/30161b19-e9e4-42b8-b3dc-e58739d66993.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you''ve executed the command, rdesktop will attempt to establish a remote
    connection to the target device. Once successful, rdesktop will provide a new
    window with the target''s user interface, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/85f8e609-6326-462d-85c9-f59daa8037da.png)'
  prefs: []
  type: TYPE_IMG
- en: At this point, we have successfully gained entry to the target operating system
    and have control over it.
  prefs: []
  type: TYPE_NORMAL
- en: 'If your attacker system does not have the rdesktop tool, it can be found at
    its official GitHub repository: [https://github.com/rdesktop/rdesktop](https://github.com/rdesktop/rdesktop).
    For further information on rdesktop, please go to its official website at [www.rdesktop.org](http://www.rdesktop.org).'
  prefs: []
  type: TYPE_NORMAL
- en: As you saw, we can simply use native tools within Kali Linux with the victim's
    credentials to access resources, systems, and networks during a penetration test.
    In the next section, we'll dive into network implants.
  prefs: []
  type: TYPE_NORMAL
- en: Plugging PWN boxes and other tools directly into a network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Quite often, penetration testers tend to plant a tiny, special box within an
    organization''s network. These are known as network implants, and are sometimes
    referred to as PWN boxes. Network implants allow an attacker to establish a connection
    from the internet to a corporate network, by connecting to the implant tool as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cd9bf0fa-5a58-490d-8282-98b8edab69b0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following is a photo of a network implant that can be inserted to intercept
    network traffic. This device is capable of capturing live packets and storing
    them on a USB flash drive. It has remote access capabilities that can allow a
    penetration tester or system administrator to remotely access the device, thereby
    allowing the user to remotely perform various tasks on the network. This little
    device is called the **Packet Squirrel**, and was created by Hak5:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/951bc163-942d-4e8b-a238-a1bc8216f1cc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Additionally, there''s another device that looks like a USB Ethernet adapter.
    This so-called Ethernet adapter is also another network implant that allows a
    penetration tester to remotely access a network and perform various tasks, such
    as scanning, exploitation, and attack pivoting. This little device is called the
    **LAN Turtle**, another amazing piece of gear that was produced by Hak5:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4235dc6c-a9b6-4c4b-a3f1-358125036ff8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Over the past few years, the **Raspberry Pi** ([www.raspberrypi.org](http://www.raspberrypi.org))
    was introduced to the world of computing. Today, many institutions, organizations,
    and households use the Raspberry Pi for many projects, from learning, to programming,
    to home security monitoring systems. The possibilities are endless with this little
    credit card-sized computer:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d9b80e5f-db68-40d0-941f-b245c29b6bcb.png)'
  prefs: []
  type: TYPE_IMG
- en: However, there are many operating systems that are currently available to the
    Raspberry Pi, one of which is the Kali Linux ARM image ([https://www.offensive-security.com/kali-linux-arm-images/](https://www.offensive-security.com/kali-linux-arm-images/)).
    Imagine the possibilities of loading Kali Linux into this portable device, planting
    it into an organization's network, and setting up remote access. The results of
    such a scenario would be grave if it were perpetrated by a real attacker, but
    a penetration tester would be able to help their client a great deal by showing
    them how vulnerable they are to attacks launched from within the internal network.
  prefs: []
  type: TYPE_NORMAL
- en: There are so many devices and gadgets that facilitate penetration testing that
    the possibilities are limitless. In the next section, we will be covering the
    fundamentals of NAC.
  prefs: []
  type: TYPE_NORMAL
- en: Bypassing NAC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: NAC is a system that's designed to control access and ensure compliance. It
    uses a set of processes and technologies that are focused on controlling who and
    what is able to access a network and its resources. NAC does this by authorizing
    devices that have a level of compliance to operate on a corporate network.
  prefs: []
  type: TYPE_NORMAL
- en: Once a device is connected, the NAC server is able to profile and check whether
    the connected device has met the standard of compliance before allowing access
    to the network resources, security policies, and controls, which are configured
    to ensure that there is some form of restriction that prevents non-compliant devices
    from obtaining network access.
  prefs: []
  type: TYPE_NORMAL
- en: 'IEEE 802.1x is the NAC standard for both LAN (wired) and WLAN (wireless) networks.
    Within an 802.1x network, there are three main components:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Authentication server**: The authentication server is the device that handles
    **authentication, authorization, and accounting** (**AAA**) services on a network.
    This is where user accounts are created and stored, and where privileges and policies
    are applied. The authentication server runs either **Remote Authentication Dial-In
    User Service** (**RADIUS**) or **Terminal Access Controller Access-Control System
    Plus** (**TACACS+**) as its protocol.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authenticator**: This is typically the network device that you are attempting
    to access, whether it be for administration purposes or to simply access the network.
    Such devices can be a wireless router/access point or a network switch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Supplicant**: The supplicant is the client device, such as a smartphone or
    laptop computer, that wants to access the network. The supplicant connects to
    the network (wired or wireless) and is prompted with an authentication login window
    provided by the authenticator. When the user submits their user credentials, the
    authenticator queries the authentication server to verify the user and determine
    what policies and privileges to apply while the user is logged on to the network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bypassing an NAC system can be somewhat challenging. During the course of this
    chapter and the previous chapter, we took a look at how to gather user credentials
    and spoof the identity of our attacker machine (Kali Linux). Using the MAC address
    and user credentials of a valid user on a target network will provide you with
    some sort of access to the secure network.
  prefs: []
  type: TYPE_NORMAL
- en: However, NAC servers are capable of profiling the operating system and anti-malware
    protection on all connected devices. If your system does not satisfy compliance
    requirements, this can trigger a red flag or not allow access based on policies.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we were able to cover a lot of practical content, such as breaking
    both WEP and WPA wireless encryption standards to recover the key (passphrase).
    Having exploited wireless security, best practices were discussed and demonstrated
    so that we can secure wireless networks from potential hackers.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, a practical approach to penetration testing on both Microsoft's
    RDP and Citrix services was covered. Lastly, we covered the uses of various network
    implants and how they can maintain remote access to a corporate network.
  prefs: []
  type: TYPE_NORMAL
- en: You now have the skills to gain access to a wireless network, perform exploitation
    on target systems, and gain access to both the Linux and Windows operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 11](ca54b243-2f79-48cd-bb5c-e25e1c891ee0.xhtml), *Network Penetration
    Testing - Post-Connection Attacks*, we'll explore various tools in the post-connection
    phase.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What algorithm does WPA2 use for data encryption?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What Nmap script is used to discover servers running Citrix applications?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the default port that Microsoft's RDP uses?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are some password cracking tools within Kali Linux?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What device is typically used to store all user accounts and policies?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which command can be used to find a module in Metasploit?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the standard for NAC?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are some additional recommended reading resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Metasploit Unleashed**: [https://www.offensive-security.com/metasploit-unleashed/](https://www.offensive-security.com/metasploit-unleashed/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Additional security tools**: [https://sectools.org/](https://sectools.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
