- en: Chapter 1. Setting Up Your Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。设置您的环境
- en: '*Are you ready to take up the mobile challenge? Is your computer switched on,
    mouse and keyboard plugged in, and screen illuminating your desk? Then let''s
    not wait a minute more!*'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*您准备好接受移动挑战了吗？您的电脑开机了吗，鼠标和键盘插好了吗，屏幕照亮了您的桌子？那么我们就不要再等一分钟了！*'
- en: '>'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '*Developing Android applications requires a specific set of tools. You may
    already know about the Android Software Development Kit for pure Java applications.
    However, getting full access to the power of Android devices requires more: the
    Android Native Development Kit.*'
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*开发Android应用程序需要一组特定的工具。您可能已经知道纯Java应用程序的Android软件开发工具包。然而，要充分利用Android设备的功能，需要更多：Android
    Native Development Kit。*'
- en: Setting up a proper Android environment is not that complicated, however it
    can be rather tricky. Indeed, Android is still an evolving platform and recent
    additions, such as Android Studio or Gradle, are not well supported when it comes
    to NDK development. Despite these annoyances, anybody can have a ready-to-work
    environment in an hour.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 设置一个合适的Android环境并不那么复杂，但可能会相当棘手。事实上，Android仍然是一个不断发展的平台，最近的添加，如Android Studio或Gradle，在NDK开发方面支持不够。尽管存在这些烦恼，任何人都可以在一个小时内拥有一个可用的工作环境。
- en: 'In this first chapter, we are going to:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Install prerequisites packages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装先决条件软件包
- en: Set up an Android development environment
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Android开发环境
- en: Launch an Android emulator
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动Android模拟器
- en: Connect an Android device for development
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接Android设备进行开发
- en: Getting started with Android development
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始Android开发
- en: What differentiates mankind from animals is the use of tools. Android developers,
    the authentic species you belong to, are no different!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 人类与动物的区别在于使用工具。Android开发者，您属于的真正物种，也不例外！
- en: 'To develop applications on Android, we can use any of the following three platforms:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android上开发应用程序，我们可以使用以下三个平台之一：
- en: Microsoft Windows (XP and later)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Windows（XP及更高版本）
- en: Apple OS X (Version 10.4.8 or later)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apple OS X（版本10.4.8或更高）
- en: Linux (distributions using GLibc 2.7 or later, such as latest versions of Ubuntu)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux（使用GLibc 2.7或更高版本的发行版，如Ubuntu的最新版本）
- en: These systems are supported on x86 platforms (that is, PCs with processors such
    as Intel or AMD) in both 32- and 64-bit versions, except for Windows XP (32-bit
    only).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些系统在x86平台上受支持（即具有英特尔或AMD等处理器的PC），包括32位和64位版本，除了Windows XP（仅32位）。
- en: 'This is a good start but, unless you are able to read and write binary code
    as well as speak your mother tongue, having a raw OS is not enough. We also need
    software dedicated to Android development:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很好的开始，但是，除非您能够阅读和编写二进制代码并且能够说母语，拥有原始操作系统是不够的。我们还需要专门用于Android开发的软件：
- en: A **JDK** (**Java Development Kit**)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**JDK**（**Java开发工具包**）
- en: An Android SDK (Software Development Kit)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android SDK（软件开发工具包）
- en: An Android NDK (Native Development Kit)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android NDK（本地开发工具包）
- en: An **IDE** (**Integrated Development Environment**) such as Eclipse or Visual
    Studio (or vi for hard-core coders). Android Studio and IntelliJ are not yet well-suited
    for NDK development, although they provide basic support for native code.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 诸如Eclipse或Visual Studio（或者对于硬核编码者来说是vi）之类的**IDE**（**集成开发环境**）。Android Studio和IntelliJ目前还不太适合NDK开发，尽管它们提供了对本地代码的基本支持。
- en: A good old command-line shell to manipulate all these tools. We will use Bash.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个老式的命令行shell来操作所有这些工具。我们将使用Bash。
- en: Now that we know what tools are necessary to work with Android, let's start
    with the installation and setup process.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了与Android一起工作所需的工具，让我们开始安装和设置过程。
- en: Note
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The following section is dedicated to Windows. If you are a Mac or Linux user,
    you can jump to *Setting up an OS X* or *Setting up Linux* section.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分专门针对Windows。如果您是Mac或Linux用户，您可以跳转到*设置OS X*或*设置Linux*部分。
- en: Setting up Windows
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Windows
- en: Before installing the necessary tools, we need to set up Windows to host our
    Android development tools properly. Although it is not the most natural fit for
    Android development, Windows still provides a fully functional environment.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装必要的工具之前，我们需要设置Windows来正确托管我们的Android开发工具。尽管Windows并不是Android开发的最自然选择，但它仍然提供了一个完全功能的环境。
- en: The following section explains how to set up the prerequisite packages on Windows
    7\. The process is the same for Windows XP, Vista, or 8.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分解释了如何在Windows 7上设置先决条件软件包。对于Windows XP、Vista或8，过程是相同的。
- en: Time for action – preparing Windows for Android development
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间-为Android开发准备Windows
- en: 'To develop with the Android NDK on Windows, we need to set up a few prerequisites:
    Cygwin, a JDK, and Ant.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Windows上使用Android NDK进行开发，我们需要设置一些先决条件：Cygwin，JDK和Ant。
- en: Go to [http://cygwin.com/install.html](http://cygwin.com/install.html) and download
    the Cygwin setup program suitable for your environment. Once downloaded, execute
    it.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://cygwin.com/install.html](http://cygwin.com/install.html)并下载适合您环境的Cygwin安装程序。下载完成后，执行它。
- en: In the installation window, click on **Next** and then **Install from Internet**.![Time
    for action – preparing Windows for Android development](img/9645_01_22.jpg)
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装窗口中，点击**下一步**，然后点击**从互联网安装**。![行动时间-为Android开发准备Windows](img/9645_01_22.jpg)
- en: Follow the installation wizard screens. Consider selecting a download site from
    where Cygwin packages are downloaded in your country.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 按照安装向导屏幕。考虑从您所在国家/地区下载Cygwin软件包的下载站点。
- en: 'Then, when proposed, include the **Devel**, **Make**, **Shells**, and **bash**
    packages:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在提议时，包括**Devel**，**Make**，**Shells**和**bash**软件包：
- en: '![Time for action – preparing Windows for Android development](img/9645_01_23.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间-为Android开发准备Windows](img/9645_01_23.jpg)'
- en: Follow the installation wizard until the end. This may take some time depending
    on your Internet connection.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 按照安装向导进行，这可能需要一些时间，取决于您的互联网连接。
- en: Download Oracle JDK 7 from the Oracle website at [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    (or JDK 8, although it is not officially supported at the time this book is written).
    Launch and follow the installation wizard until the end.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download Ant from its website at [http://ant.apache.org/bindownload.cgi](http://ant.apache.org/bindownload.cgi)
    and unzip its binary package in the directory of your choice (for example, `C:\Ant`).
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After installation, define JDK, Cygwin, and Ant locations in environment variables.
    To do so, open Windows **Control Panel** and go to the **System** panel (or right-click
    on the **Computer** item in the Windows Start menu and select **Properties**).
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, go to **Advanced system settings**. The **System Properties** window appears.
    Finally, select the **Advanced** tab and click on the **Environment Variables**
    button.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Environment Variables window, inside the System variables list, add:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `CYGWIN_HOME` variable with the `Cygwin` installation directory as the value
    (for example, `C:\Cygwin`)
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `JAVA_HOME` variable with the JDK installation directory as the value
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `ANT_HOME` variable with the Ant installation directory as the value (for
    example, `C:\Ant`)
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prepend `%CYGWIN_HOME%\bin;%JAVA_HOME%\bin;%ANT_HOME%\bin;`, all separated by
    a semicolon, at the beginning of your `PATH` environment variable.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – preparing Windows for Android development](img/9645_01_49.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
- en: 'Finally, launch a Cygwin terminal. Your profile files get created on the first
    launch. Check the `make` version to ensure Cygwin works:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You will see the following output:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – preparing Windows for Android development](img/9645_01_27.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
- en: 'Ensure JDK is properly installed by running Java and checking its version.
    Check carefully to make sure the version number corresponds to the newly installed
    JDK:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You will see the following output on the screen:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – preparing Windows for Android development](img/9645_01_28.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
- en: 'From a classic Windows terminal, check the Ant version to make sure it is properly
    working:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You will see the following on the terminal:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – preparing Windows for Android development](img/9645_01_48.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
- en: '*What just happened?*'
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Windows is now set up with all the necessary packages to host Android development
    tools:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Cygwin, which is an open source software collection, allows the Windows platform
    to emulate a Unix-like environment. It aims at natively integrating software based
    on the POSIX standard (such as Unix, Linux, and so on) into Windows. It can be
    considered as an intermediate layer between applications originated from Unix/Linux
    (but natively recompiled on Windows) and the Windows OS itself. Cygwin includes
    `Make`, which is required by the Android NDK compilation system to build native
    code.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Even if Android NDK R7 introduced native Windows binaries, which does not require
    a Cygwin runtime, it is still recommended to install the latter for debugging
    purpose.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: A JDK 7, which contains the runtime and tools necessary to build Java applications
    on Android and run the Eclipse IDE as well as Ant. The only real trouble that
    you may encounter when installing a JDK is some interferences from a previous
    installation, such as an existing **Java Runtime Environment** (**JRE**). Proper
    JDK use can be enforced through the `JAVA_HOME` and `PATH` environment variables.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Defining the `JAVA_HOME` environment variable is not required. However, `JAVA_HOME`
    is a popular convention among Java applications, Ant being one of them. It first
    looks for the `java` command in `JAVA_HOME` (if defined) before looking in `PATH`.
    If you install an up-to-date JDK in another location later on, do not forget to
    update `JAVA_HOME`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Ant, which is a Java-based build automation utility. Although not a requirement,
    it allows building Android applications from the command line, as we will see
    in [Chapter 2](ch02.html "Chapter 2. Starting a Native Android Project"), *Starting
    a Native Android Project*. It is also a good solution to set up a continuous integration
    chain.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ant是一个基于Java的构建自动化工具。虽然不是必需的，但它允许从命令行构建Android应用程序，正如我们将在[第2章](ch02.html "第2章。开始一个本地Android项目")中看到的那样，*开始一个本地Android项目*。它也是设置持续集成链的一个很好的解决方案。
- en: The next step consists of setting up the Android development kits.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的步骤包括设置Android开发工具包。
- en: Installing Android development kits on Windows
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows上安装Android开发工具包
- en: 'Android requires specific development kits to develop applications: the Android
    SDK and NDK. Hopefully, Google has thought about the developer community and provides
    all the necessary tools for free.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Android需要特定的开发工具包来开发应用程序：Android SDK和NDK。幸运的是，Google已经考虑到了开发者社区，并免费提供了所有必要的工具。
- en: In the following part, we will install these kits to start developing native
    Android applications on Windows 7.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将安装这些工具包，以在Windows 7上开始开发本地Android应用程序。
- en: Time for action – installing Android SDK and NDK on Windows
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上安装Android SDK和NDK的操作时间
- en: The Android Studio bundle already contains the Android SDK. Let's install it.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio捆绑包已经包含了Android SDK。让我们安装它。
- en: Open your web browser and download the Android Studio bundle from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html).
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的网络浏览器，从[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)下载Android
    Studio捆绑包。
- en: Run the downloaded program and follow the installation wizard. When requested,
    install all Android components.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 运行下载的程序并按照安装向导进行操作。在要求时，安装所有Android组件。
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_29.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间-在Windows上安装Android SDK和NDK](img/9645_01_29.jpg)'
- en: Then, choose the installation directories for Android Studio and the Android
    SDK (for example, `C:\Android\android-studio` and `C:\Android\sdk`).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，选择Android Studio和Android SDK的安装目录（例如，`C:\Android\android-studio`和`C:\Android\sdk`）。
- en: Launch Android Studio to ensure it is properly working. If Android Studio proposes
    to import settings from a previous installation, select your preferred option
    and click on **OK**.![Time for action – installing Android SDK and NDK on Windows](img/9645_01_26.jpg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Android Studio以确保其正常工作。如果Android Studio建议从先前的安装中导入设置，请选择您喜欢的选项，然后单击**确定**。![操作时间-在Windows上安装Android
    SDK和NDK](img/9645_01_26.jpg)
- en: The Android Studio welcome screen should then appear. Close it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 然后应该出现Android Studio的欢迎屏幕。关闭它。
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_25.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间-在Windows上安装Android SDK和NDK](img/9645_01_25.jpg)'
- en: Go to [http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)
    and download the Android NDK (not SDK!) suitable for your environment. Extract
    the archive inside the directory of your choice (for example, `C:\Android\ndk`).
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)并下载适合您环境的Android
    NDK（不是SDK！）。将存档解压缩到您选择的目录中（例如，`C:\Android\ndk`）。
- en: To easily access Android utilities from the command line, let's declare the
    Android SDK and NDK as environment variables. From now on, we will refer to these
    directories as `$ANDROID_SDK` and `$ANDROID_NDK`.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了方便地从命令行访问Android实用程序，让我们将Android SDK和NDK声明为环境变量。从现在开始，我们将把这些目录称为`$ANDROID_SDK`和`$ANDROID_NDK`。
- en: 'Open the **Environment Variables** system window, as we did previously. Inside
    the System variables list, add the following:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**环境变量**系统窗口，就像我们之前做的那样。在系统变量列表中，添加以下内容：
- en: The `ANDROID_SDK` variable with the SDK installation directory (for example,
    C:\Android\sdk)
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ANDROID_SDK`变量与SDK安装目录（例如，C:\Android\sdk）'
- en: The `ANDROID_NDK` variable with the NDK installation directories (for example,
    C:\Android\ndk)
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ANDROID_NDK`变量与NDK安装目录（例如，C:\Android\ndk）'
- en: Prepend `%ANDROID_SDK%\tools;%ANDROID_SDK%\platform-tools;%ANDROID_NDK%;`, all
    separated by a semicolon, at the beginning of your `PATH` environment variable.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的`PATH`环境变量的开头，以分号分隔的方式添加`%ANDROID_SDK%\tools;%ANDROID_SDK%\platform-tools;%ANDROID_NDK%;`。
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_24.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间-在Windows上安装Android SDK和NDK](img/9645_01_24.jpg)'
- en: 'All Windows environment variables should be imported automatically by Cygwin
    when launched. Open a Cygwin terminal and list the Android devices connected to
    your computer (even if none are currently) with `adb` to check whether SDK is
    working. No error should appear:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当启动Cygwin时，所有Windows环境变量应该会自动导入。打开Cygwin终端并列出连接到计算机的Android设备（即使目前没有连接）使用`adb`来检查SDK是否正常工作。不应该出现错误：
- en: '[PRE3]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_46.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间-在Windows上安装Android SDK和NDK](img/9645_01_46.jpg)'
- en: 'Check the `ndk-build` version to ensure that NDK is working. If everything
    works, the `Make` version should appear:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`ndk-build`版本以确保NDK正常工作。如果一切正常，`Make`版本应该出现：
- en: '[PRE4]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_47.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间-在Windows上安装Android SDK和NDK](img/9645_01_47.jpg)'
- en: Open **Android** **SDK Manager**, located in the ADB bundle directory's root.![Time
    for action – installing Android SDK and NDK on Windows](img/9645_01_45.jpg)
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开位于ADB捆绑包目录根目录的**Android SDK Manager**。![操作时间-在Windows上安装Android SDK和NDK](img/9645_01_45.jpg)
- en: In the opened window, click on **New** to select all the packages and then click
    on the **Install packages...** button. Accept the licenses in the popup that appears
    and start the installation of Android development packages by clicking on the
    **Install** button.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在打开的窗口中，点击**新建**以选择所有包，然后点击**安装包...**按钮。在弹出的窗口中接受许可证并开始安装Android开发包，点击**安装**按钮。
- en: After a few long minutes, all packages are downloaded and a confirmation message
    indicating that the Android SDK manager has been updated appears.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 几分钟后，所有包都被下载，并出现一个确认消息，指示Android SDK管理器已更新。
- en: Validate and close the manager.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '*What just happened?*'
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Android Studio is now installed on the system. Although it is now the official
    Android IDE, we are not going to use it much throughout the book because of its
    lack of support of the NDK. It is, however, absolutely possible to use Android
    Studio for Java development, and command line or Eclipse for C/C++.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: The Android SDK has been set up through the Android Studio package. An alternative
    solution consists of manually deploying the SDK standalone package provided by
    Google. On the other hand, the Android NDK has been deployed manually from its
    archive. Both the SDK and NDK are made available through the command line thanks
    to a few environment variables.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: To get a fully functional environment, all Android packages have been downloaded
    thanks to the Android SDK manager, which aims at managing all the platforms, sources,
    samples, and emulation features available through the SDK. This tool greatly simplifies
    the update of your environment when new SDK API and components are released. There
    is no need to reinstall or overwrite anything!
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: However, the Android SDK Manager does not manage the NDK, which explains why
    we downloaded it separately, and why you will need to update it manually in the
    future.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Installing all Android packages is not strictly necessary. Only the SDK platform
    (and possibly Google APIs) releases targeted by your application are really required.
    Installing all packages may avoid troubles when importing other projects or samples
    though.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: The installation of your Android development environment is not over yet. We
    still need one more thing to develop comfortably with the NDK.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is the end of the section dedicated to the Windows setup. The following
    section is dedicated to OS X.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: Setting up OS X
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Apple computers have a reputation for being simple and easy to use. I must say
    that this adage is rather true when it comes to Android development. Indeed, as
    a Unix-based system, OS X is well adapted to run the NDK toolchain.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: The following section explains how to set up the prerequisite packages on Mac
    OS X Yosemite.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – preparing OS X for Android development
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To develop with the Android NDK on OS X, we need to set up a few prerequisites:
    a JDK, Developer Tools, and Ant.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: A JDK is preinstalled on OS X 10.6 Snow Leopard and below. On these systems,
    Apple's JDK is in version 6\. Since this version is deprecated, it is advised
    to install an up-to-date JDK 7 (or JDK 8, although it is not officially supported
    at the time this book is written).
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the other hand, OS X 10.7 Lion and above does not have a default JDK installed.
    Installing the JDK 7 is thus mandatory.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: To do so, download Oracle JDK 7 from the Oracle website at [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
    Launch the `DMG` and follow the installation wizard until the end.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – preparing OS X for Android development](img/9645_01_25.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
- en: Check the Java version to ensure that the JDK is properly installed.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Time for action – preparing OS X for Android development](img/9645_01_76.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
- en: Tip
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To know if a JDK 6 is installed, check **Java Preferences.app** located by going
    to **Applications** | **Utilities** on your Mac. If you have JDK 7, check whether
    you have the **Java** icon under **System Preferences**.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: 'All Developer Tools are included in the XCode installation package (Version
    5, at the time this book is written). XCode is provided on the AppStore for free.
    Starting from OS X 10.9, the Developer Tools package can be installed separately
    from a terminal prompt with the following command:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Time for action – preparing OS X for Android development](img/9645_01_65.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
- en: Then, from the popup window that appears, select **Install**.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'To build native code with the Android NDK, whether XCode or the single Developer
    Tools package is installed, we need `Make`. Open a terminal prompt and check the
    `Make` version to ensure that it correctly works:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用Android NDK构建本机代码，无论安装了XCode还是单个开发人员工具包，我们都需要`Make`。打开终端提示并检查`Make`版本，以确保它可以正确工作：
- en: '[PRE7]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Time for action – preparing OS X for Android development](img/9645_01_62.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – preparing OS X for Android development](img/9645_01_62.jpg)'
- en: On OS X 10.9 and later, Ant must be installed manually. Download Ant from its
    website at [http://ant.apache.org/bindownload.cgi](http://ant.apache.org/bindownload.cgi)
    and unzip its binary package in the directory of your choice (for example, `/Developer/Ant`).
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在OS X 10.9及更高版本上，必须手动安装Ant。从其网站[http://ant.apache.org/bindownload.cgi](http://ant.apache.org/bindownload.cgi)下载Ant，并将其二进制包解压缩到您选择的目录中（例如`/Developer/Ant`）。
- en: 'Then, create or edit the file `~/.profile` and make Ant available on the system
    path by appending the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建或编辑文件`~/.profile`，并通过追加以下内容使Ant在系统路径上可用：
- en: '[PRE8]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Log out from your current session and log in again (or restart your computer)
    and check whether Ant is correctly installed by checking its version from the
    command line:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 注销当前会话并重新登录（或重新启动计算机），通过从命令行检查其版本来检查Ant是否已正确安装：
- en: '[PRE9]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Time for action – preparing OS X for Android development](img/9645_01_60.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – preparing OS X for Android development](img/9645_01_60.jpg)'
- en: '*What just happened?*'
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: 'Our OS X system is now set up with the necessary packages to host Android development
    tools:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的OS X系统现在已经设置好了必要的软件包来托管Android开发工具：
- en: A JDK 7, which contains the runtime and tools necessary to build Java applications
    on Android and to run the Eclipse IDE as well as Ant.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JDK 7，其中包含构建Java应用程序和运行Eclipse IDE以及Ant所需的运行时和工具。
- en: Developer Tools package, which packages various command-line utilities. It includes
    Make, which is required by the Android NDK compilation system to build native
    code.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员工具包，其中包含各种命令行实用程序。它包括Make，这是Android NDK编译系统构建本机代码所需的。
- en: Ant, which is a Java-based build automation utility. Although not a requirement,
    it allows building Android applications from the command line, as we will see
    in [Chapter 2](ch02.html "Chapter 2. Starting a Native Android Project"), *Starting
    a Native Android Project*. It is also a good solution to set up a continuous integration
    chain.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ant是一个基于Java的构建自动化实用程序。虽然不是必需的，但它允许从命令行构建Android应用程序，正如我们将在[第2章](ch02.html "第2章。开始一个本机Android项目")中看到的那样，*开始一个本机Android项目*。它也是设置连续集成链的一个很好的解决方案。
- en: The next step consists of setting up the Android Development Kit.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是设置Android开发工具包。
- en: Installing Android development kits on OS X
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在OS X上安装Android开发工具包
- en: 'Android requires specific development kits to develop applications: the Android
    SDK and NDK. Hopefully, Google has thought about the developer community and provides
    all the necessary tools for free.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Android需要特定的开发工具包来开发应用程序：Android SDK和NDK。幸运的是，Google已经考虑到了开发人员社区，并免费提供了所有必要的工具。
- en: In the following part, we are going to install these kits to start developing
    native Android applications on Mac OS X Yosemite.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将安装这些工具包，以在Mac OS X Yosemite上开始开发本机Android应用程序。
- en: Time for action – installing Android SDK and NDK on OS X
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Time for action – installing Android SDK and NDK on OS X
- en: The Android Studio bundle already contains the Android SDK. Let's install it.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio捆绑包已经包含了Android SDK。让我们安装它。
- en: Open your web browser and download the Android Studio bundle from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html).
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的网络浏览器，从[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)下载Android
    Studio捆绑包。
- en: Run the downloaded `DMG` file. In the window that appears, drag the **Android
    Studio** icon into **Applications** and wait for Android Studio to be fully copied
    on the system.![Time for action – installing Android SDK and NDK on OS X](img/9645_01_66.jpg)
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行下载的`DMG`文件。在出现的窗口中，将**Android Studio**图标拖到**应用程序**中，并等待Android Studio完全复制到系统中。![Time
    for action – installing Android SDK and NDK on OS X](img/9645_01_66.jpg)
- en: Run Android Studio from Launchpad.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从启动台运行Android Studio。
- en: 'If an error **Unable to find a valid JVM** appears (because Android Studio
    cannot find a suitable JRE when launched), you can run Android Studio from the
    command line as follows (using the appropriate JDK path):'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现错误**无法找到有效的JVM**（因为Android Studio在启动时找不到合适的JRE），您可以按照以下方式从命令行运行Android Studio（使用适当的JDK路径）：
- en: '[PRE10]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Tip
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: To solve the Android Studio startup issue, you can also install the former JDK
    6 package provided by Apple. Beware! This version is outdated and thus, deprecated.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决Android Studio启动问题，您还可以安装由苹果提供的旧版JDK 6软件包。注意！这个版本已经过时，因此不推荐使用。
- en: If Android Studio proposes to import settings from a previous installation,
    select your preferred option and click on **OK**.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Android Studio建议从先前的安装中导入设置，请选择您喜欢的选项，然后单击**确定**。
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_63.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_63.jpg)'
- en: In the next **Setup Wizard** screen that appears, select the **Standard** installation
    type and continue the installation.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在出现的下一个**设置向导**屏幕中，选择**标准**安装类型并继续安装。
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_75.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_75.jpg)'
- en: Complete the installation until the Android Studio welcome screen appears. Then,
    close Android Studio.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 直到出现Android Studio欢迎屏幕为止完成安装。然后关闭Android Studio。
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_77.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_77.jpg)'
- en: Go to [http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)
    and download the Android NDK (not SDK!) archive suitable for your environment.
    Extract it inside the directory of your choice (for example, `~/Library/Android/ndk`).
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)并下载适合您环境的Android
    NDK（不是SDK！）存档。将其解压缩到您选择的目录中（例如`~/Library/Android/ndk`）。
- en: 'To easily access Android utilities from the command line, let''s declare the
    Android SDK and NDK as environment variables. From now on, we will refer to these
    directories as `$ANDROID_SDK` and `$ANDROID_NDK`. Assuming you use the default
    `Bash` command-line shell, create or edit `.profile` (which is a hidden file!)
    in your home directory and append the following instructions (adapt paths according
    to your installation):'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Log out from your current session and log in again (or restart your computer).
    List the Android devices connected to your computer (even if none currently are)
    with `adb` to check whether Android SDK is working. No error should appear:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_68.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
- en: 'Check the `ndk-build` version to ensure that NDK is working. If everything
    works, the `Make` version should appear:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_69.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
- en: 'Open a terminal and start the Android SDK manager with the following command:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_70.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
- en: In the opened window, click on **New** to select all the packages and then click
    on the **Install packages...** button. Accept the licenses in the popup that appears
    and start the installation of all Android packages by clicking on the **Install**
    button.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: After a few long minutes, all packages are downloaded and a confirmation message
    indicating that the Android SDK manager has been updated appears.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: Validate and close the manager.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '*What just happened?*'
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Android Studio is now installed on the system. Although it is now the official
    Android IDE, we will not use it much through the book because of its lack of support
    of the NDK. It is, however, absolutely possible to use Android Studio for Java
    development, and command line or Eclipse for C/C++.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: The Android SDK has been set up through the Android Studio package. An alternative
    solution consists of manually deploying the SDK standalone package provided by
    Google. On the other hand, the Android NDK has been deployed manually from its
    archive. Both the SDK and NDK are made available through the command line, thanks
    to a few environment variables.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: OS X is tricky when it comes to environment variables. They can be easily declared
    in `.profile` for applications launched from a terminal, as we just did. They
    can also be declared using an `environment.plist` file for GUI applications, which
    are not launched from Spotlight.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: To get a fully functional environment, all Android packages have been downloaded
    thanks to the Android SDK manager, which aims at managing all the platforms, sources,
    samples, and emulation features available through the SDK. This tool greatly simplifies
    the update of your environment when new SDK API and components are released. There
    is no need to reinstall or overwrite anything!
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: However, the Android SDK manager does not manage the NDK, which explains why
    we downloaded it separately, and why you will need to update it manually in the
    future.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Installing all Android packages is not strictly necessary. Only the SDK platform
    (and possibly Google APIs) releases targeted by your application are really required.
    Installing all packages may avoid troubles importing other projects or samples
    though.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: The installation of your Android development environment is not over yet. We
    still need one more thing to develop comfortably with the NDK.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is the end of the section dedicated to the OS X setup. The following section
    is dedicated to Linux.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Linux
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Linux is naturally suited for Android development as the Android toolchain is
    Linux-based. Indeed, as a Unix-based system, Linux is well adapted to run the
    NDK toolchain. Beware, however, that commands to install packages may vary depending
    on your Linux distribution.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: The following section explains how to set up the prerequisite packages on Ubuntu
    14.10 Utopic Unicorn.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – preparing Ubuntu for Android development
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To develop with the Android NDK on Linux, we need to set up a few prerequisites:
    Glibc, Make, OpenJDK, and Ant.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Linux上使用Android NDK进行开发，我们需要设置一些先决条件：Glibc、Make、OpenJDK和Ant。
- en: 'From Command Prompt, check whether Glibc (the GNU C standard library) 2.7 or
    later, usually shipped with Linux systems by default, is installed:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令提示符中，检查Glibc（GNU C标准库）2.7或更高版本是否已安装，通常默认情况下已在Linux系统中安装：
- en: '[PRE15]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Time for action – preparing Ubuntu for Android development](img/9645_01_31.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – preparing Ubuntu for Android development](img/9645_01_31.jpg)'
- en: '`Make` is also required to build native code. Install it from the build-essential
    package (requires administrative privilege):'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Make`也是构建本地代码所需的。从build-essential软件包中安装它（需要管理员权限）：'
- en: '[PRE16]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Run the following command to ensure `Make` is correctly installed, in which
    case its version is displayed:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令以确保`Make`已正确安装，如果是这样，它的版本将被显示：
- en: '[PRE17]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Time for action – preparing Ubuntu for Android development](img/9645_01_32.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – preparing Ubuntu for Android development](img/9645_01_32.jpg)'
- en: 'On 64-bit Linux systems, install the 32-bit libraries compatibility package,
    as Android SDK has binaries compiled for 32 bits only. To do so on Ubuntu 13.04
    and earlier, simply install the `ia32-libs` package:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在64位Linux系统上，安装32位库兼容包，因为Android SDK只有为32位编译的二进制文件。要在Ubuntu 13.04及更早版本上执行此操作，只需安装`ia32-libs`软件包：
- en: '[PRE18]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'On Ubuntu 13.10 64 bits and later, this package has been removed. So, install
    the required packages manually:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu 13.10 64位及更高版本中，此软件包已被移除。因此，需要手动安装所需的软件包：
- en: '[PRE19]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Install Java OpenJDK 7 (or JDK 8, although it is not officially supported at
    the time this book is written). Oracle JDK is also fine:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Java OpenJDK 7（或JDK 8，尽管在撰写本书时它没有得到官方支持）。Oracle JDK也可以：
- en: '[PRE20]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Ensure JDK is properly installed by running Java and checking its version:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 确保JDK已正确安装，方法是运行Java并检查其版本：
- en: '[PRE21]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![Time for action – preparing Ubuntu for Android development](img/9645_01_33.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – preparing Ubuntu for Android development](img/9645_01_33.jpg)'
- en: 'Install Ant with the following command (requires administrative privilege):'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装Ant（需要管理员权限）：
- en: '[PRE22]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Check whether Ant is properly working:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 检查Ant是否正常工作：
- en: '[PRE23]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Time for action – preparing Ubuntu for Android development](img/9645_01_34.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – preparing Ubuntu for Android development](img/9645_01_34.jpg)'
- en: '*What just happened?*'
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: 'Our Linux system is now prepared with the necessary packages to host Android
    development tools:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的Linux系统现在已准备好承载Android开发工具所需的必要软件包：
- en: The build-essential package, which is a minimal set of tools for compilation
    and packaging on Linux Systems. It includes Make, which is required by the Android
    NDK compilation system to build native code. **GCC** (the **GNU C Compiler**)
    is also included but is not required as Android NDK already contains its own version.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: build-essential软件包是Linux系统上用于编译和打包的最小工具集。它包括Make，Android NDK编译系统需要它来构建本地代码。**GCC**（**GNU
    C编译器**）也包括在内，但不是必需的，因为Android NDK已经包含了自己的版本。
- en: 32-bit compatibility libraries for 64-bit systems, since the Android SDK still
    uses 32-bit binaries.
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 64位系统的32位兼容库，因为Android SDK仍然使用32位二进制文件。
- en: A JDK 7, which contains the runtime and tools necessary to build Java applications
    on Android and run the Eclipse IDE as well as Ant.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JDK 7包含了在Android上构建Java应用程序和运行Eclipse IDE以及Ant所需的运行时和工具。
- en: Ant, which is a Java-based build automation utility. Although not a requirement,
    it allows building Android applications from the command line, as we will see
    in [Chapter 2](ch02.html "Chapter 2. Starting a Native Android Project"), *Starting
    a Native Android Project*. It is also a good solution to set up a continuous integration
    chain.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ant是一个基于Java的构建自动化工具。虽然不是必需的，但它允许从命令行构建Android应用程序，正如我们将在[第2章](ch02.html "第2章。开始一个本地Android项目")中看到的那样，*开始一个本地Android项目*。它也是设置连续集成链的一个很好的解决方案。
- en: The next step consists of setting up the Android development kits.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是设置Android开发工具包。
- en: Installing Android development kits on Linux
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Linux上安装Android开发工具包
- en: 'Android requires specific development kits to develop applications: the Android
    SDK and NDK. Hopefully, Google has thought about the developer community and provides
    all the necessary tools for free.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: Android需要特定的开发工具包来开发应用程序：Android SDK和NDK。幸运的是，Google已经考虑到了开发者社区，并免费提供了所有必要的工具。
- en: In the following part, we will install these kits to start developing native
    Android applications on Ubuntu 14.10 Utopic Unicorn.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将安装这些工具包，以开始在Ubuntu 14.10 Utopic Unicorn上开发本地Android应用程序。
- en: Time for action – installing Android SDK and NDK on Ubuntu
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始行动-在Ubuntu上安装Android SDK和NDK
- en: The Android Studio bundle already contains the Android SDK. Let's install it.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio捆绑包已经包含了Android SDK。让我们安装它。
- en: Open your web browser and download the Android Studio bundle from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html).
    Extract the downloaded archive in the directory of your choice (for example, `~/Android/Android-studio`).
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的网络浏览器，从[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)下载Android
    Studio捆绑包。在您选择的目录中解压下载的存档（例如`~/Android/Android-studio`）。
- en: Run the Android Studio script `bin/studio.sh`. If Android Studio proposes to
    import settings from a previous installation, select your preferred option and
    click on **OK**.![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_04.jpg)
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行Android Studio脚本`bin/studio.sh`。如果Android Studio建议从先前的安装中导入设置，请选择您喜欢的选项，然后单击**OK**。![Time
    for action – installing Android SDK and NDK on Ubuntu](img/9645_01_04.jpg)
- en: In the next **Setup** **Wizard** screen that appears, select a **Standard**
    installation type and continue installation.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在出现的下一个**设置** **向导**屏幕中，选择**标准**安装类型并继续安装。
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_01.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_01.jpg)'
- en: Complete installation until the Android Studio welcome screen. Then, close Android
    Studio.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 完整安装直到Android Studio欢迎屏幕。然后关闭Android Studio。
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_02.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_02.jpg)'
- en: Go to [http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)
    and download the Android NDK (not SDK!) archive suitable for your environment.
    Extract it inside the directory of your choice (for example, `~/Android/Ndk`).
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)并下载适合您环境的Android
    NDK（不是SDK！）存档。将其解压缩到您选择的目录中（例如`〜/Android/Ndk`）。
- en: 'To easily access Android utilities from the command line, let''s declare the
    Android SDK and NDK as environment variables. From now on, we will refer to these
    directories as `$ANDROID_SDK` and `$ANDROID_NDK`. Edit your `.profile` file (beware
    since this is a hidden file!) in your home directory and add the following variables
    at the end (adapt their path according to your installation directories):'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了方便从命令行访问Android实用程序，让我们将Android SDK和NDK声明为环境变量。从现在开始，我们将把这些目录称为`$ANDROID_SDK`和`$ANDROID_NDK`。编辑您的家目录中的`.profile`文件（注意这是一个隐藏文件！）并在末尾添加以下变量（根据您的安装目录调整其路径）：
- en: '[PRE24]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Log out from your current session and log in again (or restart your computer).
    List the Android devices connected to your computer (even if none currently are)
    with `adb` to check whether Android SDK is working. No error should appear:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注销当前会话并重新登录（或重新启动计算机）。使用`adb`列出连接到计算机的Android设备（即使目前没有连接任何设备）以检查Android SDK是否正常工作。不应出现错误：
- en: '[PRE25]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_35.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间-在Ubuntu上安装Android SDK和NDK](img/9645_01_35.jpg)'
- en: 'Check the `ndk-build` version to ensure that NDK is working. If everything
    works, the `Make` version should appear:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`ndk-build`版本以确保NDK正常工作。如果一切正常，将显示`Make`版本：
- en: '[PRE26]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_32.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间-在Ubuntu上安装Android SDK和NDK](img/9645_01_32.jpg)'
- en: 'Open a terminal and start the Android SDK manager with the following command:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并使用以下命令启动Android SDK管理器：
- en: '[PRE27]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_03.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间-在Ubuntu上安装Android SDK和NDK](img/9645_01_03.jpg)'
- en: In the opened window, click on **New** to select all the packages, and then
    click on the **Install packages...** button. Accept the licenses in the popup
    that appears and start the installation of all Android package by clicking on
    the **Install** button.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在打开的窗口中，单击**新建**以选择所有软件包，然后单击**安装软件包...**按钮。在弹出的窗口中接受许可证并通过单击**安装**按钮开始安装所有Android软件包。
- en: After a few long minutes, all packages are downloaded and a confirmation message
    indicating that the Android SDK manager has been updated appears.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 经过几分钟的下载，所有软件包都已下载并出现了确认消息，指示Android SDK管理器已更新。
- en: Validate and close the manager.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 验证并关闭管理器。
- en: '*What just happened?*'
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: Android Studio is now installed on the system. Although it is now the official
    Android IDE, we are not going to use it much throughout the book because of its
    lack of support of the NDK. It is, however, absolutely possible to use Android
    Studio for Java development, and the command line or Eclipse for C/C++.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio现在已安装在系统上。尽管它现在是官方的Android IDE，但由于其不支持NDK，我们在整本书中不会经常使用它。但是，绝对可以使用Android
    Studio进行Java开发，使用命令行或Eclipse进行C/C++开发。
- en: The Android SDK has been set up through the Android Studio package. An alternative
    solution consists of manually deploying the SDK standalone package provided by
    Google. On the other hand, the Android NDK has been deployed manually from its
    archive. Both the SDK and NDK are made available through the command line, thanks
    to a few environment variables.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 通过Android Studio软件包设置了Android SDK。另一种解决方案是手动部署由Google提供的独立SDK软件包。另一方面，Android
    NDK已从其存档中手动部署。由于一些环境变量，SDK和NDK都可以通过命令行使用。
- en: To get a fully functional environment, all Android packages have been downloaded
    thanks to the Android SDK manager, which aims at managing all the platforms, sources,
    samples, and emulation features available through the SDK. This tool greatly simplifies
    the update of your environment when new SDK API and components are released. There
    is no need to reinstall or overwrite anything!
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得完全功能的环境，通过Android SDK管理器下载了所有Android软件包，该管理器旨在管理SDK提供的所有平台、源代码、示例和仿真功能。当新的SDK
    API和组件发布时，此工具大大简化了环境的更新。无需重新安装或覆盖任何内容！
- en: However, the Android SDK manager does not manage the NDK, which explains why
    we downloaded it separately, and why you will need to update it manually in the
    future.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，Android SDK管理器不管理NDK，这就解释了为什么我们单独下载了NDK，以及为什么您将来需要手动更新它。
- en: Tip
  id: totrans-251
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Installing all Android packages is not strictly necessary. Only the SDK platform
    (and possibly Google APIs) releases targeted by your application are really required.
    Installing all packages may avoid trouble when importing other projects or samples
    though.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 安装所有Android软件包并不是绝对必要的。实际上只有您的应用程序所针对的SDK平台（可能还有Google API）版本是真正需要的。不过，安装所有软件包可能会在导入其他项目或示例时避免麻烦。
- en: The installation of not or Android development environment is not over yet.
    We still need one more thing to develop comfortably with the NDK.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: Android开发环境的安装还没有结束。我们还需要一个东西才能舒适地使用NDK进行开发。
- en: Note
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This is the end of the section dedicated to the Linux setup. The following section
    is for all operating systems.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这是专门用于Linux设置的部分的结束。以下部分适用于所有操作系统。
- en: Installing the Eclipse IDE
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Eclipse IDE
- en: Because of Android Studio limitations, Eclipse is still one of the most appropriate
    IDEs to develop native code on Android. Using an IDE is not required though; command-line
    lovers or `vi` fanatics can skip this part!
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Android Studio的限制，Eclipse仍然是在Android上开发本地代码最合适的IDE之一。但是，并不一定需要使用IDE；喜欢命令行或`vi`的人可以跳过这部分！
- en: In the following section, we will see how to set up Eclipse.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将看到如何设置Eclipse。
- en: Time for action – installing Eclipse with ADT on your OS
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间-在您的操作系统上安装带有ADT的Eclipse
- en: 'Since the latest Android SDK releases, Eclipse and its plugins (ADT and CDT)
    need to be installed manually. To do so execute the following steps:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: Go to [http://www.eclipse.org/downloads/](http://www.eclipse.org/downloads/)
    and download Eclipse for Java developers. Extract the downloaded archive in the
    directory of your choice (for example, `C:\Android\eclipse on Windows`, `~/ Android/Eclipse`
    on Linux, and `~/Library/Android/eclipse` on Mac OS X).
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, run Eclipse. If Eclipse asks for a workspace (which contains Eclipse settings
    and projects) when starting up, define the directory of your choice or leave the
    default settings and then click on **OK**.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: 'When Eclipse has finished loading, close the welcome page. The following window
    should appear:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – installing Eclipse with ADT on your OS](img/9645_01_71.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
- en: Go to **Help** | **Install New Software…**. Enter `https://dl-ssl.google.com/android/eclipse`
    in the **Work with:** field and validate. After a few seconds, a **Developer Tools**
    plugin appears. Select it and click on the **Next** button.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In case this step fails while accessing update sites, check your Internet connection.
    You may be either disconnected or connected behind a proxy. In the latter case,
    you can download the ADT plugin as a separate archive from the ADT web page and
    install it manually, or configure Eclipse to connect through a proxy.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – installing Eclipse with ADT on your OS](img/9645_01_73.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
- en: Follow the wizard and accept conditions when asked. On the last wizard page,
    click on **Finish** to install ADT. A warning may appear indicating that the plugin
    content is unsigned. Ignore it and click on **OK**. When finished, restart Eclipse
    as requested.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: Go back to **Help** | **Install New Software…**. Open the **Work with** combobox
    and select the item containing the Eclipse version name (here, Luna). Then, check
    the **Show only software applicable to target environment** option. Find **Programming
    Languages** in the plugin tree and unfold it. Finally, check all C/C++ plugins
    and click on **Next**.![Time for action – installing Eclipse with ADT on your
    OS](img/9645_01_72.jpg)
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Follow the wizard and accept conditions when asked. On the last wizard page,
    click on **Finish**. Wait until the installation is complete and restart Eclipse.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Windows** | **Preferences...** (**Eclipse** | **Preferences...** on
    Mac OS X) and then select **Android** on the left tree. If everything is fine,
    the SDK Location should be filled with the Android SDK path.![Time for action
    – installing Eclipse with ADT on your OS](img/9645_01_78.jpg)
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, on the same window, go to **Android** | **NDK**. The **NDK Location**
    field should be empty. Fill it with the Android NDK path and validate. If the
    path is wrong, Eclipse complains that the directory is not valid.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – installing Eclipse with ADT on your OS](img/9645_01_74.jpg)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
- en: '*What just happened?*'
  id: totrans-275
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Eclipse is now up and running with the appropriate SDK and NDK configuration.
    Since the ADT package is no longer provided by Google, the Android development
    plugin ADT and the C/C++ Eclipse plugin CDT have to be installed manually in Eclipse.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: Please note that Eclipse has been deprecated by Google and replaced by Android
    Studio. Sadly, Android Studio C/C++ and NDK support is rather limited for the
    moment. The only way to build native code is through Gradle, the new Android build
    system, whose NDK features are still unstable. If a comfortable IDE is essential
    to you, you can still use Android Studio for Java development and Eclipse for
    C/C++ though.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: 'If you work on Windows, maybe you are Visual Studio adept. In that case, I
    advise you that a few projects, shown as follows, bring Android NDK development
    to Visual Studio:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: Android++, which is a free extension for Visual Studio that can be found at
    [http://android-plus-plus.com/](http://android-plus-plus.com/). Although still
    in Beta at the time this book is written, Android++ looks quite promising.
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NVidia Nsight, which can be downloaded with a developer account from the Nvidia
    developer website at [https://developer.nvidia.com/nvidia-nsight-tegra](https://developer.nvidia.com/nvidia-nsight-tegra)
    (if you have a Tegra device). It packages together the NDK, a slightly customized
    version of Visual Studio, and a nice debugger.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VS-Android, which can be found at [https://github.com/gavinpugh/vs-android](https://github.com/gavinpugh/vs-android),
    is an interesting Open Source project, which brings NDK tools to Visual Studio.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Our development environment is now almost ready. The last piece is missing
    though: an environment to run and test our applications.'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Android emulator
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Android SDK provides an emulator to help developers who want to speed up
    their deploy-run-test cycle or want to test, for example, different kinds of resolutions
    and OS versions. Let's see how to set it up.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – creating an Android virtual device
  id: totrans-285
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Android SDK provides everything we need to easily create a new emulator
    **Android Virtual Device** (**AVD**):'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: 'Open **Android SDK Manager** from a terminal by running the following command:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Go to **Tools** | **Manage AVDs...**. Alternatively, click on the dedicated
    **Android Virtual Device Manager** button in the main toolbar of Eclipse.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Then, click on the **New** button to create a new Android emulator instance.
    Fill the form with the following information and click on **OK**:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: '![Time for action – creating an Android virtual device](img/9645_01_40.jpg)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
- en: The newly created virtual device now appears in the **Android Virtual Device
    Manager** list. Select it and click on **Start...**.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you get an error related to `libGL` on Linux, open a command prompt and
    run the following command to install the Mesa graphics library: `sudo apt-get
    install libgl1-mesa-dev`.'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: The **Launch Options** window appears. Tweak the display size depending on your
    screen size if needed and then click on **Launch**. The emulator starts up and
    after some time, your virtual device is loaded:![Time for action – creating an
    Android virtual device](img/9645_01_41.jpg)
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'By default, the emulator SD card is read only. Although this is optional, you
    can set it in write mode by issuing the following command from a prompt:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '*What just happened?*'
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Android emulators can be easily managed through the Android Virtual Device manager.
    We are now able to test the applications we will develop in a representative environment.
    Even better, we can now test them in several conditions and resolutions without
    requiring a costly device. However, if emulators are useful development tools,
    take into account that emulation is not always perfectly representative and lacks
    some features, especially hardware sensors, which can be partially emulated.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: 'Android Virtual Device manager is not the only place where we can manage emulators.
    We can also use the command-line tool emulator provided with the Android SDK.
    For example, to launch the Nexus4 emulator created earlier directly from a terminal
    prompt, enter the following:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: While creating the `Nexus4` AVD, acute readers might have been surprised to
    see we set CPU/ABI to Intel Atom (x86), whereas most Android devices run on ARM
    processors. Indeed, since Windows, OS X, and Linux all run on x86, only x86 Android
    emulator images can benefit from hardware and GPU acceleration. On the other hand,
    ARM ABI can run rather slow without it, but it may be more representative of the
    devices your application may run on.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To benefit from full hardware acceleration with an X86 AVD, you will need to
    install the Intel **Hardware Accelerated Execution Manager** (**HAXM**) on your
    Windows or Mac OS X system. On Linux, you can install KVM instead. These programs
    can work only if your CPU benefits from a Virtualization Technology (which is
    the case most of the time nowadays).
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: Acuter readers may be even more surprised that we have not selected the latest
    Android platform. The reason is simply that x86 images are not available for all
    Android platforms.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Snapshot option allows saving the emulator state before closing it. Sadly,
    this open is incompatible with GPU acceleration. You have to select either one.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
- en: As a final note, know that customizing additional options, such as the presence
    of a GPS, camera, and so on, is also possible when creating an AVD to test an
    application in limited hardware conditions. The screen orientation can be switched
    with *Ctrl* + *F11* and *Ctrl* + *F12* shortcuts. For more information on how
    to use and configure the emulator, check out the Android website at [http://developer.android.com/tools/devices/emulator.html](http://developer.android.com/tools/devices/emulator.html).
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: Developing with an Android device
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although emulators can be of help, they are obviously nothing compared to a
    real device. So, take your Android device in hand, switch it on and let's try
    to connect it to our development platform. Any of the following steps may change
    depending on your manufacturer and phone language. So, please refer to your device
    documentation for specific instructions.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – setting up an Android device
  id: totrans-311
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Device configuration is dependent on your target OS. To do so:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: 'Configure your device driver on your OS if applicable:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you use Windows, installation of a development device is manufacturer-specific.
    More information can be found at [http://developer.android.com/tools/extras/oem-usb.html](http://developer.android.com/tools/extras/oem-usb.html)
    with a full list of device manufacturers. If you have a driver CD with your Android
    device, you can use it. Note that the Android SDK also contains some Windows drivers
    under `$ANDROID_SDK\extras\google\usb_driver`. Specific instructions are available
    for Google development phones, Nexus One, and Nexus S at [http://developer.android.com/sdk/win-usb.html](http://developer.android.com/sdk/win-usb.html).
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you use OS X, simply connecting your development device to your Mac should
    be enough to get it working! Your device should be recognized immediately without
    installing anything. Mac's ease of use is not a legend.
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are a Linux user, connecting your development device to your Distribution
    (at least on Ubuntu) should be enough to get it working too!
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If your mobile device runs Android 4.2 or later, from the application list screen,
    go to **Settings** | **About phone** and tap several times on **Build Number**
    at the end of the list. After some efforts, **Developer options** will magically
    appear in your application list screen.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On Android 4.1 devices and earlier, **Developer options** should be visible
    by default.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: Still on your device, from the application list screen, go to **Settings** |
    **Developer options** and enable **Debugging** and **Stay awake**.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Plug your device into your computer using a data connection cable. Beware! Some
    cables are charge-only cables and will not work for development! Depending on
    your device manufacturer, it may appear as a USB disk.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On Android 4.2.2 devices and later, a dialog **Allow USB debugging?** appears
    on the phone screen. Select **Always allow from this computer** to permanently
    allow debugging and then click on **OK**.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: 'Open Command Prompt and execute the following:'
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![Time for action – setting up an Android device](img/9645_01_50.jpg)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
- en: 'On Linux, if **?????????** appears instead of your device name (which is likely),
    then `adb` does not have proper access rights. A solution might be to restart
    `adb` as root (at your own risk!):'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Another solution to find your Vendor ID and Product ID may be needed. Vendor
    ID is a fixed value for each manufacturer that can be found on the Android developer
    website at [http://developer.android.com/tools/device.html](http://developer.android.com/tools/device.html)
    (for example, HTC is `0bb4`). The device''s Product ID can be found using the
    result of the `lsusb` command in which we look for the Vendor ID (for example,
    here 0c87 is HTC Desire product ID):'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![Time for action – setting up an Android device](img/9645_01_51.jpg)'
  id: totrans-329
  prefs: []
  type: TYPE_IMG
- en: 'Then, with root privilege, create a file `/etc/udev/rules.d/51-android.rules`
    with your Vendor ID and Product ID and change file rights to 644:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Finally, restart the `udev` service and `adb`:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Launch Eclipse and open the **DDMS** perspective (**Window** | **Open Perspective**
    | **Other...**). If working properly, your phone should be listed in the **Devices**
    view.
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-335
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Eclipse is a compound of many views, such as the Package Explorer View, the
    Debug View, and so on. Usually, most of them are already visible, but sometimes
    they are not. In that case, open them through the main menu by navigating to **Window**
    | **Show View** | **Other…**. Views in Eclipse are grouped in **Perspectives**,
    which store workspace layout. They can be opened by going to **Window** | **Open
    Perspective** | **Other…**. Beware that some contextual menus may be available
    only in some perspectives.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
- en: '*What just happened?*'
  id: totrans-337
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our Android device has been switched into development mode and connected to
    our workstation through the Android Debug Bridge daemon. ADB gets started automatically
    the first time it is called, either from Eclipse or the command line.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: We also enabled the **Stay awake** option to stop automatic screen shutdown
    when the phone charges, or when developing with it! And, more important than anything,
    we discovered that HTC means High Tech Computer! Jokes apart, connection process
    can be tricky on Linux, although little trouble should be encountered nowadays.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: 'Still having trouble with a reluctant Android device? That could mean any of
    the following:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: ADB is malfunctioning. In that case, restart the ADB deamon or execute it with
    administrative privilege.
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your development device is not working properly. In that case, try restarting
    your device or disabling and re-enabling development mode. If that still does
    not work, then buy another one or use the emulator.
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your host system is not properly set up. In that case, check your device manufacturer
    instructions carefully to make sure the necessary driver is correctly installed.
    Check hardware properties to see whether it is recognized and turn on USB storage
    mode (if applicable) to see whether it is properly detected. Please refer to your
    device documentation.
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-344
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When the charge-only mode is activated, SD card files and directories are visible
    to the Android applications installed on your phone but not to your computer.
    On the opposite side, when disk drive mode is activated, those are visible only
    from your computer. Check your connection mode when your application cannot access
    its resource files on an SD card.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
- en: More about ADB
  id: totrans-346
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'ADB is a multi-facet tool which is used as a mediator between the development
    environment and devices. It is composed of:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
- en: A background process running on emulators and devices to receive orders or requests
    from your workstation.
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A background server on your workstation communicating with connected devices
    and emulators. When listing devices, the ADB server is involved. When debugging,
    the ADB server is involved. When any communication with a device happens, the
    ADB server is involved!
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A client running on your workstation and communicating with devices through
    the ADB server. The ADB client is what we interacted with to list devices.
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ADB offers many useful options among which some are in the following table:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: '| Command | Description |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
- en: '| `adb help` | To get an exhaustive help with all options and flags available
    |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
- en: '| `adb bugreport` | To print the whole device state |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
- en: '| `adb devices` | To list all Android devices currently connected including
    emulators |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
- en: '| `adb install [-r] <apk path>` | To install an application package. Append
    `-r` to reinstall an already deployed application and keep its data |'
  id: totrans-357
  prefs: []
  type: TYPE_TB
- en: '| `adb kill-server` | To terminate the ADB daemon |'
  id: totrans-358
  prefs: []
  type: TYPE_TB
- en: '| `adb pull <device path> <local path>` | To transfer a file to your computer
    |'
  id: totrans-359
  prefs: []
  type: TYPE_TB
- en: '| `adb push <local path> <device path>` | To transfer a file to your device
    or emulator |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
- en: '| `adb reboot` | To restart an Android device programmatically |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
- en: '| `adb shell` | To start a shell session on an Android device (more on this
    in [Chapter 2](ch02.html "Chapter 2. Starting a Native Android Project"), *Starting
    a Native Android Project*) |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
- en: '| `adb start-server` | To launch the ADB daemon |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
- en: '| `adb wait-for-device` | To sleep until a device or emulator is connected
    to your computer (for example, in a script) |'
  id: totrans-364
  prefs: []
  type: TYPE_TB
- en: 'ADB also provides optional flags to target a specific device when several are
    connected simultaneously:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
- en: '| `-s <device id>` | To target a specific device by its name (device name can
    be found with adb devices) |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
- en: '| `-d` | To target the current physical device if only one is connected (or
    an error message is raised) |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
- en: '| `-e` | To target the currently running emulator if only one is connected
    (or an error message is raised) |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
- en: 'For example, to dump the emulator state when a device is connected at the same
    time, execute the following command:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This is only an overview of what ADB can do. More information can be found on
    the Android developer website at [http://developer.android.com/tools/help/adb.html](http://developer.android.com/tools/help/adb.html).
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-372
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Setting up our Android development platform is a bit tedious but is hopefully
    performed once and for all!
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
- en: In summary, we installed all the prerequisite packages on our system. Some of
    them are specific to the target OS, such as Cygwin on Windows, Developer Tools
    on OS X, or build-essential packages on Linux. Then, we installed the Android
    Studio bundle, which contains both the Android Studio IDE and the Android SDK.
    The Android NDK has to be downloaded and set up separately.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
- en: Even if we will not use it much throughout this book, Android Studio remains
    one of the best choices for pure Java development. It is guaranteed to be maintained
    by Google and may become a good choice when Gradle NDK's integration gets more
    mature.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
- en: Meanwhile, the simplest solution is to go with Eclipse for NDK development.
    We installed Eclipse with the ADT and CDT plugin. These plugins integrate well
    together. They allow combining the power of Android Java and native C/C++ code
    into one single IDE.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we launched an Android emulator and connected an Android device to
    our development platform through the Android Debug Bridge.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-378
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: With the Android NDK being "open", anybody can build its own version. The Crystax
    NDK is a special NDK package built by Dmitry Moskalchuk. It brings advanced features
    unsupported by the NDK (latest toolchains, Boost out of the box… exceptions were
    first supported by the CrystaxNDK). Advanced users can find it on the Crystax
    website at [https://www.crystax.net/en/android/ndk](https://www.crystax.net/en/android/ndk).
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
- en: We now have the necessary tools in our hands to shape our mobile ideas. In the
    next chapter, we will tame them to create, compile, and deploy our first Android
    project!
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
