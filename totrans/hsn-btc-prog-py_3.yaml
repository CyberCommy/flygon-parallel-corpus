- en: Earning Bitcoin Programmatically
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will learn how to start accepting bitcoin as a payment method
    on our websites. We'll also learn how to build API-based microservices to earn
    bitcoin, and explore bitcoin trading bots.
  prefs: []
  type: TYPE_NORMAL
- en: Accepting bitcoin on your website
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: How to enable bitcoin payment on our websites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to BitPay, a third-party bitcoin API service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to generate a bitcoin payment button
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to add a bitcoin payment button to our website
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are a lot of third-party APIs that are available on the web that enable
    developers to start accepting bitcoin for products or services on their website
    quickly. One of the most popular ones is BitPay.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to BitPay
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'BitPay can be used to accept payment in a lot of different ways, including
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: You can use bitcoin to accept online payments on e-commerce websites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrate bitcoin with a lot of different e-commerce solutions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating with shopping carts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can display bitcoin-enabled payment buttons, which work well for accepting
    donations on blogs or podcasts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to generate a bitcoin payment button
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go through the following steps to generate a bitcoin payment button:'
  prefs: []
  type: TYPE_NORMAL
- en: First, sign up and log in to BitPay at [https://bitpay.com/](https://bitpay.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, go to the Payment Tools | Payment Buttons page and create a payment button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/93f292a5-40e9-4e2c-ae66-6b23f2881b74.png)'
  prefs: []
  type: TYPE_IMG
- en: 'New fields require a SERVER IPN for a secure server POST, and the amount gets
    paid when the user clicks on it. You will see the preview of the button at the
    bottom of the page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/4759a749-5b1d-4089-9b53-a1530f49c767.png)'
  prefs: []
  type: TYPE_IMG
- en: To add this button to the website, just copy the HTML code and paste it in the
    required web page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to add a bitcoin payment button to your website
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go through the following steps to add the payment button to your website page:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the source code of your website page in the code editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Paste the HTML code that we copied from the BitPay website in the previous section,
    save the file, and reload the web page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following screenshot shows the web page with a payment button that users
    can use to send payments:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/dcbe546f-cdb5-464e-b2f1-28e9e4a0f1be.png)'
  prefs: []
  type: TYPE_IMG
- en: Building and releasing bitcoin-enabled APIs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introducing the 21.co marketplace
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting started with the 21.co SDK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Starting to sell services for bitcoin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 21.co marketplace
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 21.co is a platform that hosts a virtual marketplace where developers can create
    and sell microservices in return  for bitcoin. For more information please refer
    to [https://earn.com/](https://earn.com/).
  prefs: []
  type: TYPE_NORMAL
- en: We will demonstrate how to join this marketplace and sell microservices to earn
    bitcoin.
  prefs: []
  type: TYPE_NORMAL
- en: To do this, we will use 21.co's SDK.
  prefs: []
  type: TYPE_NORMAL
- en: 21.co SDK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The 21.co SDK is currently supported on Ubuntu and macOS. A demonstration of
    Ubuntu running on AWS will be seen in this section.
  prefs: []
  type: TYPE_NORMAL
- en: You can create an AWS Ubuntu 14.x instance on AWS by following the instructions
    from [https://aws.amazon.com/premiumsupport/knowledge-center/create-linux-instance/](https://aws.amazon.com/premiumsupport/knowledge-center/create-linux-instance/).
  prefs: []
  type: TYPE_NORMAL
- en: After creating the AWS instance, connect to it by following the instructions
    from the AWS documentation page at [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstances.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstances.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once connected to the AWS instance, install the 21.co SDK. You can do this
    by executing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the SDK is installed, log in to your 21.co account by executing the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'If a user does not have a 21.co login, they must create an account on the 21.co website.
    After logging in, first join the 21.co node to the 21.co virtual marketplace.
    You can do this by executing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The status of the user''s join request can be achieved by executing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, test the installation by executing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The preceding command will show that all the tests have been passed and the
    node is set up and joined to the 21.co marketplace.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to get the bitcoin balance, execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The preceding code shows you the bitcoin balance that is being held in the 21.co
    account.
  prefs: []
  type: TYPE_NORMAL
- en: Selling microservices on the 21.co marketplace
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '21.co''s SDK comes bundled with some services. To start all of them, execute
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: There might be a prompt to install a dependency. If so, you should go ahead
    and do it.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, the user might need to log out and log in again to set the changes
    up.
  prefs: []
  type: TYPE_NORMAL
- en: 'For selling microservices on the 21.co marketplace, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: It will show you the listing of all the microservices that are available to
    start selling in the virtual marketplace.
  prefs: []
  type: TYPE_NORMAL
- en: 'To look at the status of your services, execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Once you are done with the services, or if you want to stop it, run the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'To look at all the activity that happened on the node, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: This was a demonstration of how to earn bitcoin by selling and listing microservices
    on the 21.co marketplace.
  prefs: []
  type: TYPE_NORMAL
- en: Building a bitcoin trading bot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: How to get the current bid and asking price for bitcoin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to make a decision whether to buy or sell bitcoin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Triggering the bitcoin trade advice alert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Actual buying and selling of bitcoin won't be covered, as it involves actual
    money. However, we will focus on sending an email alert when it is trying to buy
    or sell bitcoin based on the condition we set.
  prefs: []
  type: TYPE_NORMAL
- en: We will use the bitcoin price API module to fetch the bitcoin price. It is available
    on GitHub at [https://github.com/dursk/bitcoin-price-api](https://github.com/dursk/bitcoin-price-api).
  prefs: []
  type: TYPE_NORMAL
- en: Triggering the bitcoin trade advice alert
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to setup the bitcoin trade advice alert, go through the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, start by importing the bitcoin price API, called `exchanges`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Also import `smtplib`, which we will use for triggering the bitcoin price alert.
    Here, we define a function called `trigger_email`. We then set the server user
    and email details:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Using `smtplib`, send the `sendmail` function to send the price alert email,
    as shown in the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, define the buy and sell price thresholds for bitcoin. Use these thresholds
    to make decisions on whether to sell or buy bitcoin:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Next, we get the current bitcoin price and the current asking price for bitcoin
    from Bitfinex bitcoin exchange using the `exchanges` module that we imported in
    the `bitcoin_trade.py` script. We can also use some other exchanges, such as CoinDesk,
    but for the moment, we will use Bitfinex. We will get these prices in `btc_sell_price`
    and `btc_buy_price`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Once we have the current prices, we can compare them with the threshold prices
    we have set before.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If the buy price is lower than the sell threshold, we call the `trigger_email`
    function to send a buy trigger email alarm:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'If the sell price is greater than the sell threshold, we call the `trigger_email`
    function to send the sell trigger email alert:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: How to get a current bid and asking price for bitcoin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Google search is the simplest way to search for the current bid rate. In  order
    to achieve the buying and selling of bitcoin, the triggering of both should be
    done accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: The triggering of buy bitcoin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are the steps to go through to get the current bid:'
  prefs: []
  type: TYPE_NORMAL
- en: First, check the bitcoin price online.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Modify the script so that the buy alert triggers first. Set the buy threshold
    to higher than the current price. Here, we set the buy threshold to `6500`, as
    shown in the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Save the script and execute it. The following screenshot shows the executed
    script:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/f2b014be-60ca-42e1-9d35-afb6b8934f25.png)'
  prefs: []
  type: TYPE_IMG
- en: The script has been executed and the buy alert should have gone. Check it in
    the email.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows that we have received the bitcoin alert email
    advising us to buy bitcoin, according to the criteria that we have set up in the
    script:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](Images/f282db35-a16e-418a-9130-b5617860f644.png)'
  prefs: []
  type: TYPE_IMG
- en: The triggering of sell bitcoin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Initially, we should set the sell threshold as lower than the current price.
    So, for example, let''s set the threshold for `6400` and execute the script again.
    The following code shows that the `sell_thresh` is set to `6400`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Now, the sell alert should execute. Verify it in the email again.
  prefs: []
  type: TYPE_NORMAL
- en: 'After verifying this, we should see that we have received the email alert advising
    us to sell bitcoin because the current asking price is higher than what we are
    willing to sell for:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/7411d4ff-e5e5-4329-8a85-ad1028db7e5d.png)'
  prefs: []
  type: TYPE_IMG
- en: The script is ready. You can now set it to run automatically on all kinds of
    operating systems. On Windows, use the Task Scheduler.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'From the Action menu, choose Create Task..., and give it the name `Bitcoin
    trade alert`, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/16930c9b-5dc9-4cf0-98f6-b24e9ef7d6a6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'From the Triggers tab, click on New..., as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/db4a9f31-fc7c-4b26-9200-e69ce721a1b3.png)'
  prefs: []
  type: TYPE_IMG
- en: Choose the Daily radio button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Then, in Advanced settings, choose to repeat the task after the required number
    of minutes or hours. Here, we will set it to every 1 hour, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/25ab6125-89c7-4b6c-9179-7726eae677db.png)'
  prefs: []
  type: TYPE_IMG
- en: Next, from the Actions tab, click on the New... button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose the script that was created to be executed whenever the task runs by
    clicking on the Browse... button. Now, this task will run automatically every
    hour, and will check for bitcoin prices and send an email advising us whether
    to buy or sell bitcoin.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/7f832c54-9ef9-424e-9a59-9839c8943f5d.png)'
  prefs: []
  type: TYPE_IMG
- en: You can also choose to trigger the trade right from the script itself, using
    any of the bitcoin exchange APIs, such as coinbase.com. As it involves actual
    money, the user needs to be careful with it.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explored how to enable bitcoin payments on a website, introduced
    you to BitPay, learned about how to generate a bitcoin payment button, and how
    to add the payment button to our websites. We also introduced the 21.co marketplace
    and buying/selling services for bitcoin, as well as writing a bare bones bitcoin
    trading bot. We learned how to get the current bidding and asking prices for bitcoin.
    We also learned how to decide as to whether to buy or sell bitcoins, as well as
    how to send out an email alert advising us whether to execute that thread.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn about performing data analysis on bitcoin
    data.
  prefs: []
  type: TYPE_NORMAL
