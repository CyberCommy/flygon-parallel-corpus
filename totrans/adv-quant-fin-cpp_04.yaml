- en: Chapter 4. Equity Derivatives in C++
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous two chapters, we described the key mathematical models used
    to simulate the behavior of the underlying assets of financial derivatives ([Chapter
    2](part0019_split_000.html#I3QM2-f9cfc61bea324a5db85ec5ea1673cdfd "Chapter 2. Mathematical
    Models"), *Mathematical Models*) and the main numerical methods used to price
    them ([Chapter 3](part0024_split_000.html#MSDG2-f9cfc61bea324a5db85ec5ea1673cdfd
    "Chapter 3. Numerical Methods"), *Numerical Methods*).
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we apply these ingredients to the pricing of equity derivatives.
    We consider two examples: the pricing of a plain vanilla European Call option
    (basic example) and the pricing of an equity basket on the maximum of two assets
    (advanced example). We provide the full working C++ implementation for both. Note
    that if you are new to OOP, it is suggested that you first study the implementation
    in C followed by the implementation in C++, available in the code bundle of the
    chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: Basic example – European Call
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: As part of the input parameters, we ought to define *N* and *M*. Here *N* represents
    the number of time steps to be used in the GBM calculation, while *M* represents
    the number of Monte Carlo simulations to be used. In our example, we consider
    the pricing of a European Call option on Barclays stock (BARC.L), whose spot is
    £100, strike £100, risk-free interest rate 5 percent p.a., an annualized volatility
    of 10 percent, and a maturity of one year. We use *N=500* and *M=10,000*. In my
    computer, the option premium is £6.81 with an execution time of 1.34 seconds.
    The value of the premium and the execution time will vary from computer to computer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that this code can be easily modified to price other payoffs by simply
    changing **STEP 4** in the algorithm. In terms of a C++ implementation, this concept
    can be incorporated using a class to define the payoff. Also, **STEP 4** can be
    slightly modified to include an estimate of the accuracy in the Monte Carlo approximation.
    Please refer to the website for downloadable implementations containing these
    features. An excellent textbook describing this example is *An Introduction to
    Financial Option Valuation: Mathematics, Stochastics and Computation*.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Code 1 – EQ1 – Monte Carlo European Call**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the code snippet for `EQ1_main.cpp` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Code 2 – random.cpp file**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Code 3 – random.h header file**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the code for `random.h` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'After compiling and running the code, you should obtain the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Basic example – European Call](img/00184.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced example – equity basket
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![Advanced example – equity basket](img/00187.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding equation, ![Advanced example – equity basket](img/00188.jpeg)
    are two independent samples from the Gaussian distribution, while ![Advanced example
    – equity basket](img/00189.jpeg) are the two correlated samples that incorporate
    the effect of the correlation ![Advanced example – equity basket](img/00190.jpeg).
    Epsilon_1 and epsilon_2 remain normal variables, as they have unitary variance
    and the expected value of their product ![Advanced example – equity basket](img/00191.jpeg)
    is equal to ![Advanced example – equity basket](img/00190.jpeg).
  prefs: []
  type: TYPE_NORMAL
- en: As we did earlier, we can easily modify the payoff in **STEP 5** and incorporate
    other more complicated payoffs.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, consider the price of the following basket option:'
  prefs: []
  type: TYPE_NORMAL
- en: We have two assets Barclays PLC (BARC.L) and Rolls Royce (RR.L). We want to
    price an option that pays the maximum of the value of these two assets at maturity,
    which is one year. The current spot price of Barclays is £120 and that of Rolls
    Royce is £100\. Their annualized volatilities are 10 percent and 15 percent respectively.
    We choose to discretize time in 300 time steps and use 10,000 simulations. The
    premium for this option under these conditions is £120.48 with an execution time
    of 2.22 seconds.
  prefs: []
  type: TYPE_NORMAL
- en: For further details about basket equity derivatives, you are invited to consult
    *Paul Wilmott on Quantitative Finance, 2nd Edition*.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code 4 – EQ2 – Monte Carlo equity basket**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the code snippet for `EQ2_main.cpp` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'After compiling and running the code, you should obtain the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced example – equity basket](img/00192.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have solved two pricing problems in equity derivatives. We have seen a very
    simple example (what we called the basic) and a more complex one, which included
    an equity basket option. For each, we have provided the complete C++ implementation.
  prefs: []
  type: TYPE_NORMAL
- en: We will now proceed to the next asset class, foreign exchange derivatives, where
    we will also solve two problems, a simple and an advanced one, following the the
    Bento Box template approach in the next chapter.
  prefs: []
  type: TYPE_NORMAL
