- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux is one of the fastest-growing operating systems in the world, and in the
    last few years, the Linux kernel has evolved significantly to support a wide variety
    of embedded devices, with its improved subsystems and a lot of new features.
  prefs: []
  type: TYPE_NORMAL
- en: '*Mastering Linux Device Driver Development* provides complete coverage of kernel
    topics such as video and audio frameworks that usually go unaddressed. You''ll
    delve into some of the most complex and impactful Linux kernel frameworks, such
    as PCI, ALSA for SoC, and Video4Linux2, gaining expert tips and best practices
    along the way. In addition to this, you''ll learn how to leverage frameworks such
    as NVMEM and Watchdog. Once the book has got you started with Linux kernel helpers,
    you''ll gradually progress to working with special device types such as **Multi-Function
    Devices** (**MFDs**), followed by video and audio device drivers.'
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you'll be able to write rock-solid device drivers and
    integrate them with some of the most complex Linux kernel frameworks, including
    V4L2 and ALSA SoC.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is essentially intended for embedded enthusiasts and developers, Linux
    system administrators, and kernel hackers. Whether you are a software developer,
    a system architect, or a maker (electronics hobbyist), looking to dive into Linux
    driver development, this book is for you.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B10985_01_ePub_AM.xhtml#_idTextAnchor015), *Linux Kernel Concepts
    for Embedded Developers*, walks through the Linux kernel helpers for locking,
    blocking I/O, deferring work, and interrupt management.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B10985_02_ePub_AM.xhtml#_idTextAnchor030), *Leveraging the Regmap
    API and Simplifying the Code*, provides an overview of the Regmap framework and
    shows you how to leverage its APIs to ease interrupt management and abstract register
    access.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B10985_03_ePub_AM.xhtml#_idTextAnchor039), *Delving into the
    MFD Subsystem and Syscon API*, focuses on MFD drivers in the Linux kernel, their
    APIs, and their structures, as well as introducing the `syscon` and `simple-mfd`
    helpers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B10985_04_ePub_AM.xhtml#_idTextAnchor047), *Storming the Common
    Clock Framework*, explains the Linux kernel clock framework and explores both
    producer and consumer device drivers, as well as their device tree bindings.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B10985_05_ePub_AM.xhtml#_idTextAnchor124), *ALSA SoC Framework
    – Leveraging Codec and Platform Class Drivers*, discusses ALSA driver development
    for both codec and platform devices and introduces concepts such as `kcontrol`
    and **digital audio power management** (**DAPM**).'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B10985_06_ePub_AM.xhtml#_idTextAnchor204), *ALSA SoC Framework
    – Delving into the Machine Class Drivers*, dives into ALSA machine class driver
    development and shows you how to bind both codec and platform together and how
    to define audio routes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B10985_07_ePub_AM.xhtml#_idTextAnchor287), *Demystifying V4L2
    and Video Capture Device Drivers*, describes V4L2''s key concepts. It focuses
    on bridge video devices, introduces the concept of subdevices, and covers their
    respective device drivers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B10985_08_ePub_AM.xhtml#_idTextAnchor342), *Integrating with
    V4L2 Async and Media Controller Frameworks*, introduces the concept of asynchronous
    probing so that you don''t have to care about bridge and subdevice probing order.
    Finally, this chapter introduces media controller frameworks in order to provide
    video routing and video pipe customizations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B10985_09_ePub_AM.xhtml#_idTextAnchor396), *Leveraging V4L2 API
    from the User Space*, closes our teaching series on V4L2 and deals with V4L2 from
    the user space. It first teaches you how to write C code in order to open, configure,
    and grab data from a video device. It then shows you how to write as little code
    as possible by leveraging user-space video-related tools such as `v4l2-ctl` and
    `media-ctl`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B10985_10_ePub_AM.xhtml#_idTextAnchor455), *Linux Kernel Power
    Management*, discusses power management on Linux-based systems and teaches you
    how to write power-aware device drivers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B10985_11_ePub_AM.xhtml#_idTextAnchor519), *Writing PCI Device
    Drivers*, deals with the PCI subsystem and introduces you to its Linux kernel
    implementation. This chapter also shows you how to write PCI device drivers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B10985_12_ePub_AM.xhtml#_idTextAnchor608), *Leveraging the NVMEM
    Framework*, describes the Linux **Non-Volatile Memory** (**NVEM**) subsystem.
    It first teaches you how to write both provider and consumer drivers as well as
    their device tree bindings. Then, it shows you how to take the most out of the
    device from user space.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B10985_13_ePub_AM.xhtml#_idTextAnchor633), *Watchdog Device
    Drivers*, provides an accurate description of the Linux kernel Watchdog subsystem.
    It first introduces you to Watchdog device drivers and gradually takes you through
    the core of the subsystem, introducing some key concepts such as pre-timeout and
    governors. Toward the end, this chapter teaches you how to manage the subsystem
    from the user space.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B10985_14_ePub_AM.xhtml#_idTextAnchor673), *Linux Kernel Debugging
    Tips and Best Practices*, highlights the most-used Linux kernel debugging and
    tracing techniques using kernel-embedded tools such as `ftrace` and oops message
    analysis.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get the most out of this book, some C and system programming knowledge is
    required. Moreover, the content of the book assumes that you are familiar with
    the Linux system and most of its basic commands.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Preface_Table.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Any necessary packages not listed in the preceding table will be described in
    their respective chapters.
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself. Doing so will help you avoid any potential errors related to
    the copying and pasting of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/9781789342048_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/9781789342048_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "The parent IRQ is not requested here using any of
    the `request_irq()` family methods because `gpiochip_set_chained_irqchip()` will
    invoke `irq_set_chained_handler_and_data()` under the hood."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    Here is an example: "The **simple-mfd** helper was introduced to handle zero conf/hacks
    subdevice registering, and **syscon** was introduced for sharing a device''s memory
    region with other devices."'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '`customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '`copyright@packt.com` with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  prefs: []
  type: TYPE_NORMAL
