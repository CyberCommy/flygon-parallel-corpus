- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The inherent advantages of the use of web services in computer systems development
    are the same that create the need for security management over them. Today, we
    can say that no company is able to work in complete isolation, without the need
    to interact with others and share and consume information. Furthermore, this is
    the most important asset of any company. For this reason, these requirements are
    also common between lines of code. This book presents real scenarios with applicable
    solutions, leading you by the hand all the way, so you can easily learn solutions
    and implementations that will resolve the most common needs that can arise.
  prefs: []
  type: TYPE_NORMAL
- en: RESTful web servicesoffer several advantages over those based on SOAP. For example,
    when handling data types, depending on the programming language or the libraries
    you use to create them, you can find inconsistencies when using empty values ("")
    instead of NULL. Also, you may find difficulties in mapping complex objects and
    compatibility issues in file transferring when using different versions of libraries
    to create/consume the web service. In certain situations, even when consuming
    a web service created in Java from a .NET application, it ends up creating a service
    implemented in Java in the middle of both. This does not occur in RESTful web
    services, since in this case, the functionality is exposed through HTTP method
    invocations.
  prefs: []
  type: TYPE_NORMAL
- en: In order to protect information, the world of securities has many features that
    help to achieve this. For example, understanding how some issues such as authentication
    and authorization assist in the implementation of any selected mechanism, where
    the main objective is to make our applications safer and secure, is essential.
    The selection of each of the different ways to secure applications goes along
    with the problem you want to resolve; for this, we show usage scenarios for each
    of them.
  prefs: []
  type: TYPE_NORMAL
- en: Many times, we have seen large organizations spend time and effort in creating
    their own implementations to handle securities rather than using the standard
    that has already resolved what we need. Through the knowledge that we want to
    share with you, we hope to avoid this process of reinventing the wheel.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Setting Up the Environment"), *Setting Up
    the Environment*, helps us create our first functional application, something
    very similar to a *Hello World* example, but with some more functionality and
    very close to the real world. The main aim of this chapter is to familiarize ourselves
    with the tools we are going to use.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. The Importance of Securing Web Services"),
    *The Importance of Securing Web Services*, goes through all possible models of
    authentication in the Java platform. For your better understanding, we will go
    step by step and dive deep into how we can leverage each available authentication
    model. We will show you how the information is exposed and how it can be intercepted
    by third parties, and we will play with Wireshark, which is a very good tool to
    explain it.'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, in this chapter, we will review the differences between authentication
    and authorization. Both concepts are very important and definitely impossible
    to put aside in the context of securities terms.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Security Management with RESTEasy"), *Security
    Management with RESTEasy*, shows how RESTEasy offers mechanisms to handle security,
    starting from a fairly basic model (coarse-grained) to a more elaborate one (fine-grained)
    in which you can perform more exhaustive controls, including managing not only
    configuration files, but also programmatical files.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. RESTEasy Skeleton Key"), *RESTEasy Skeleton
    Key*, helps us study the OAuth implementation along with the token bearer implementation
    and Single Sign-On. All of them are used in order to limit the way the resources
    are shared. As always, you will get hands-on with code and real examples. We want
    to show you how sharing resources and information between applications through
    these technologies has turned into one of the most useful and powerful techniques
    by allowing clients or users to use their credentials only once to access several
    services, limiting the access to third-party applications to your information
    or data, and implementing access control through the token bearer. You will learn
    to apply these technologies and concepts in order to build secure and flexible
    applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Digital Signatures and Encryption of Messages"),
    *Digital Signatures and Encryption of Messages*, helps us understand the benefits
    of digital signatures using a simple example; you''ll notice how the message''s
    receiver can validate the identity of the sender. In addition, we will simulate
    when an external agent modifies data in transit and see how digital signatures
    can help us to detect it, in order to avoid working with corrupted data.'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we will explain SMIME for body encryption and how it works, with an
    example that encrypts requests and responses for your better understanding.
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to implement and test all the examples in this book, we will use many
    free tools, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Eclipse IDE (or any other Java IDE)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JBoss AS 7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireshark
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SoapUI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for developers, software analysts, architects, or people
    who work with software development and RESTful web services. This book requires
    some previous knowledge of object-oriented programming concepts in Java or any
    other language.
  prefs: []
  type: TYPE_NORMAL
- en: No previous knowledge on security models is required because we explain the
    theory and apply it on practical examples in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    are going to modify the `web.xml` file."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important** words are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "From the pop-up window, select the **SSL Settings** tab."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
