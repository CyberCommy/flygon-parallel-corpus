- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unreal Engine 4 (UE4) is a complete suite of game development tools made by
    game developers for game developers. With more than 80 practical recipes, this
    book is a guide that showcases techniques to use the power of C++ scripting while
    developing games with UE4\. We will start by adding and editing C++ classes from
    within the Unreal Editor. Then we will delve into one of Unreal's primary strengths—the
    ability for designers to customize programmer-developed actors and components.
    This will help you understand the benefits of when and how to use C++ as a scripting
    tool. With a blend of task-oriented recipes, this book will provide actionable
    information about scripting games with UE4 and manipulating the game and the development
    environment using C++. Toward the end of this book, you will be empowered to become
    a top-notch developer with UE4 using C++ as the scripting language.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0015_split_000.html#E9OE1-c0ca69a0411046888a488e5085138121
    "Chapter 1. UE4 Development Tools"), *UE4 Development Tools*, outlines basic recipes
    to get you started with UE4 game development and the basic tools used to create
    the code that makes your game.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0032_split_000.html#UGI01-c0ca69a0411046888a488e5085138121
    "Chapter 2. Creating Classes"), *Creating Classes*, focuses on how to create C++
    classes and structs that integrate well with the UE4 Blueprints Editor. These
    classes will be graduated versions of regular C++ classes called UCLASSES.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0043_split_000.html#190861-c0ca69a0411046888a488e5085138121
    "Chapter 3. Memory Management and Smart Pointers"), *Memory Management and Smart
    Pointers*, takes the reader through using all three types of pointer and mentions
    some common pitfalls regarding automatic garbage collection. This chapter also
    shows readers how to use Visual Studio or XCode to interpret crashes or confirm
    that the functionality is implemented correctly.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0055_split_000.html#1KEEU1-c0ca69a0411046888a488e5085138121
    "Chapter 4. Actors and Components"), *Actors and Components*, deals with creating
    custom actors and components, what purpose each serves, and how they work together.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0070_split_000.html#22O7C1-c0ca69a0411046888a488e5085138121
    "Chapter 5. Handling Events and Delegates"), *Handling Events and Delegates*,
    describes delegates, events, and event handlers, and guides you through creating
    their own implementations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0079_split_000.html#2BASE1-c0ca69a0411046888a488e5085138121
    "Chapter 6. Input and Collision"), *Input and Collision*, shows how to connect
    user input to C++ functions and how to handle collisions in C++ from UE4\. It
    will also provide default handling of game events such as user input and collision,
    allowing designers to override when necessary, using Blueprint.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0089_split_000.html#2KS221-c0ca69a0411046888a488e5085138121
    "Chapter 7. Communication between Classes and Interfaces"), *Communication between
    Classes and Interfaces*, shows you how to write your own UInterfaces, and demonstrates
    how to take advantage of them within C++ to minimize class coupling and help keep
    your code clean.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0102_split_000.html#318PC1-c0ca69a0411046888a488e5085138121
    "Chapter 8. Integrating C++ and the Unreal Editor"), *Integrating C++ and the
    Unreal Editor*, shows you how to customize the editor by creating custom Blueprint
    and animation nodes from scratch. We will also implement custom editor windows
    and custom detail panels to inspect types created by users.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0122_split_000.html#3KB4K1-c0ca69a0411046888a488e5085138121
    "Chapter 9. User Interfaces – UI and UMG"), *User Interfaces – UI and UMG*, demonstrates
    that displaying feedback to the player is one of the most important elements within
    game design, and this will usually involve some sort of HUD, or at least menus,
    within your game.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](part0131_split_000.html#3STPM1-c0ca69a0411046888a488e5085138121
    "Chapter 10. AI for Controlling NPCs"), *AI for Controlling NPCs*, covers recipes
    to control your NPC characters with a bit of Artificial Intelligence (AI).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](part0140_split_000.html#45GEO1-c0ca69a0411046888a488e5085138121
    "Chapter 11. Custom Materials and Shaders"), *Custom Materials and Shaders*, talks
    about creating custom materials and audio graph nodes used in the UE4 editor.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](part0151_split_000.html#4G04U1-c0ca69a0411046888a488e5085138121
    "Chapter 12. Working with UE4 APIs"), *Working with UE4 APIs*, explains that the
    application programming interface (API) is the way in which you, as the programmer,
    can instruct the engine (and so the PC) on what to do. Each module has an API
    for it. To use an API, there is a very important linkage step where you must list
    all APIs that you will use in your build in `ProjectName.Build.cs` file.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Creating a game is an elaborate task that will require a combination of assets
    and code. To create assets and code, we'll need some pretty advanced tools, including
    art tools, sound tools, level-editing tools, and code-editing tools. Assets include
    any visual artwork (2D sprites, 3D models), audio (music and sound effects), and
    game levels. To perform that, we'll set up a C++ coding environment to build our
    UE4 applications. We'll download Visual Studio 2015, install it, and set it up
    for UE4 C++ coding. (Visual Studio is an essential package for code editing when
    editing the C++ code for your UE4 game.)
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for game developers who understand the fundamentals of
    game design and C++ and would like to incorporate native code into the games they
    make with Unreal. They will be programmers who want to extend the engine or implement
    systems and actors that allow designers control and flexibility when building
    levels.
  prefs: []
  type: TYPE_NORMAL
- en: Sections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find several headings that appear frequently (Getting
    ready, How to do it, How it works, There's more, and See also).
  prefs: []
  type: TYPE_NORMAL
- en: 'To give clear instructions on how to complete a recipe, we use these sections
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section tells you what to expect in the recipe, and describes how to set
    up any software or any preliminary settings required for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section contains the steps required to follow the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section usually consists of a detailed explanation of what happened in
    the previous section.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section consists of additional information about the recipe in order to
    make the reader more knowledgeable about the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section provides helpful links to other useful information for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    parameters passed to the `UPROPERTY()` macro specify a couple of important pieces
    of information regarding the variable."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "After you select the tools you''d like to add on to Visual Studio, click
    the **Next** button."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also download the code files by clicking on the **Code Files** button
    on the book's webpage at the Packt Publishing website. This page can be accessed
    by entering the book's name in the **Search** box. Please note that you need to
    be logged in to your Packt account.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Unreal-Engine-4-Scripting-with-CPlusPlus-Cookbook](https://github.com/PacktPublishing/Unreal-Engine-4-Scripting-with-CPlusPlus-Cookbook).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images of this book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/UnrealEngine4ScriptingwithC_Cookbook_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/UnrealEngine4ScriptingwithC_Cookbook_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
