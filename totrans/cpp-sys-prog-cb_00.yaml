- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book aims to provide ready-to-use solutions (to developers) for the essential
    aspects of system programming, using the latest C++ standards wherever possible.
    System programming deals with structuring computer programs that closely interact
    with the operating system and allow computer hardware to interface with the programmer
    and the user. Due to its efficient features, namely, low-level computation, data
    abstraction, and object-oriented features, C++ is the preferred language for system
    programming. You will learn how to create robust and concurrent systems, and you
    will also understand the inter-process communication mechanism with shared memory
    and pipe. Moving forward, you will deep dive into the C++ built-in libraries and
    frameworks in order to design robust systems as per your requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for C++ developers who want to gain practical knowledge of systems
    programming. Though no experience of Linux system programming is assumed, intermediate
    knowledge of C++ is necessary.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](c3cda38c-220e-4aae-89c6-c381df46daec.xhtml), *Getting Started with
    System Programming**,* introduces you to the fundamentals such as learning about
    the shell, users and groups, process IDs, and thread IDs to be able to use a Linux
    system proficiently and so on that you must know for the rest of the book. For
    example you will learn how Linux is designed, the shell, users and groups, process
    ID and thread IDs. Furthermore, you will learn how to develop a simple `Hello
    World` program, write its makefile, execute it, and debug it. This knowledge,
    although basic, is fundamental for the more advanced topics that will appear in
    later chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](1bf083f4-9d12-4b2e-bf5c-35a2e3d99c36.xhtml), *Revisiting C++*,refreshes
    your understanding of C++17, which will be used throughout the entire book. It''ll
    show why C++ represents a great opportunity for writing good quality code that
    is concise and more portable than ever. This chapter contains all the new features
    introduced by C++11/17/20 that you will find useful in this book.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](c27d5a31-a4f2-4925-b883-fa244edeb6ae.xhtml), *Dealing with Processes
    and Threads,* introduces you to processes and threads that are the foundation
    of any elaboration. A program is rarely ever made of just one process. This chapter
    reveals the techniques for dealing with threads and processes in C++. The chapter will demonstrate
    how easy and convenient it is to deal with threads (and tasks) compared to POSIX.
    Although C++ does not have a formal way of creating a process, there are rare
    cases in which a thread cannot do the job*.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](3f0ded06-5d49-4b55-acd0-69421fe2bd9f.xhtml), *Deep Dive into Memory
    Management, *introduces you to memory, which is one of the core concepts of dealing
    with system development. Allocating, freeing, and learning how memory is managed
    and what C++ can offer to simplify and manage memory is crucial. Furthermore,
    this chapter presents recipes on how to check and allocate aligned memory and
    how to deal with memory-mapped I/O.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](5578f31b-bd1e-4cb9-9ab5-da18a155f28d.xhtml), *Using Mutexes, Semaphores,
    and Condition Variables*,shows us the POSIX mechanism solutions and the ones offered
    by C++ to synchronize threads and processes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](b108b814-40ec-42d5-ab03-cc3cd6400641.xhtml), *Pipes, First-In First-Out
    (FIFO), Message Queues, and Shared Memory,* focuses on making the processes communicate
    with each other. There are different solutions available – pipes, FIFO, message
    queues, and shared memory. For each inter-process communication mechanism, a recipe
    is provided.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](edc01b79-661b-4ecd-88f2-a6501eeaa085.xhtml), *Network Programming*, demonstrates
    how communication takes place from the connection to the end. Communication between
    processes on different machines is the foundation of the internet today, and TCP/IP
    is the standard de facto. Both **TCP** (short for **Transmission Control Protocol**)
    and **UDP** (short for **User Datagram Protocol**) will be described in detail,
    as the first represents connection-oriented and the latter represents connectionless-oriented.
    This is quite important these days, especially with the video streaming services
    that are available online.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](9fd0a0ac-d520-4227-866a-24583b98c69d.xhtml), *Dealing with Console
    I/O and Files*,presents you with useful recipes for dealing with files, I/O to
    and from the console, and streams of strings.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](0f6437bb-2a1c-4e83-9a6b-f9eb4df06d10.xhtml), *Dealing with Time
    Interfaces, *provides you with a deep understanding of how to deal with and measure
    time with the features that are provided by both C++ and POSIX. The chapter will
    offer ready-to-use recipes for each method.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](7342b7a0-439a-4907-971c-5110f4953fd3.xhtml), *Managing Signals,*
    introduces us to signals that are software interrupts. They provide a way of managing
    asynchronous events. For example, a user typing the interrupt key from the terminal,
    or another process sending a signal that must be managed. Every signal has a name
    starting with `SIG` (for example, `SIGABRT`). This chapter will show the reader
    how to write code to properly manage software interrupts, what the default actions
    defined by Linux for each signal are, and how to override them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](f0fe2d6f-7fea-444d-83fb-ec4a49836463.xhtml), *Scheduling, *shows
    you how to use POSIX (the C++ standard does not provide this) to set scheduler
    parameters, the scheduler policy, and the scheduler priorities. System programming
    is about interacting with the underlying OS as seen so far. The scheduler is one
    of the main components of every OS and impacts the way processes are allocated
    on CPUs. There are cases where the developer needs control over this or, at least,
    tries to influence the scheduler.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here is a list of requirements for this book:'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate knowledge of C++.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any additional requirements are mentioned in the *Technical requirements* section
    of each chapter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Disclaimer: The C++20 standard has been approved (that is, technically finalized)
    by WG21 in a meeting in Prague at the end of February. This means that the GCC
    compiler version that this book uses, 8.3.0, does not include (or has very, very
    limited support for) the new and cool C++20 features. For this reason, the Docker
    image does not include the C++20 recipe code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GCC keeps the development of the newest features in branches (you have to use
    appropriate flags for that, for example, `-std=c++2a`); therefore, you are encouraged
    to experiment with them by yourself. So, clone and explore the GCC contracts and
    module branches and have fun.
  prefs: []
  type: TYPE_NORMAL
- en: Some recipes (especially in [Chapter 11](f0fe2d6f-7fea-444d-83fb-ec4a49836463.xhtml),
    *Scheduling*) require the Docker image running with admin privileges to execute
    properly. Depending on your Docker configuration, you may be required to run the
    Docker with `sudo`. To avoid that you can create a Linux group (for example, `docker`)
    and add users to it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support) and
    register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Support tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/C-System-Programming-Cookbook](https://github.com/PacktPublishing/C-System-Programming-Cookbook). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781838646554_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781838646554_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Code in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please visit the following link to check out the CiA videos: [http://bit.ly/2uXftdA](http://bit.ly/2uXftdA)
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "In the second step, we started developing the `main` method."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Sections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find several headings that appear frequently (*Getting
    ready*, *How to do it...*, *How it works...*, *There's more...*, and *See also*).
  prefs: []
  type: TYPE_NORMAL
- en: To give clear instructions on how to complete a recipe, use these sections as
    follows.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section tells you what to expect in the recipe and describes how to set
    up any software or any preliminary settings required for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section contains the steps required to follow the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section usually consists of a detailed explanation of what happened in
    the previous section.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section consists of additional information about the recipe in order to
    make you more knowledgeable about the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section provides helpful links to other useful information for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
