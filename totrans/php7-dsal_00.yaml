- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data structures and algorithms are an integral part of software application
    development. Whether we are building a web-based application, a CMS, or a standalone
    backend system using PHP, we need to apply algorithms and data structures all
    the time. Sometimes, we do that without noticing and sometimes without giving
    proper attention to it. Most developers think that these two topics are really
    difficult and there is no point in paying attention to details as PHP has lots
    of built-in support for data structures and algorithms. In this book, we will
    focus on the basics and practical examples of PHP data structures and algorithms
    so that we know what data structures are, why to choose them, and where to apply
    which algorithms. This book is designed for novice as well as experienced PHP
    programmers. The book starts from basic topics and moves on to more advanced topics.
    We have tried to accommodate lots of examples with images and explanations in
    this book so that you can understand the concepts properly in visual form and
    with practical examples.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](text00022.html) , *Introduction to Data Structures and Algorithms*
    , focuses on different data structures, their definitions, properties, and examples.
    This chapter also includes the way in which we analyze algorithms and find their
    complexities, with special emphasis on Big Oh (O) notation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](text00045.html) , *Understanding PHP Arrays* , focuses on a very
    basic and built-in data structure in PHP -- PHP arrays. This also covers what
    we can achieve through PHP arrays and their advantages and disadvantages. We focus
    on how to use arrays to implement other data structures.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](text00065.html) , *Using Linked Lists* , covers the different types
    of linked lists. It focuses on the classification of different variances of linked
    lists and their construction process, with examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](text00098.html) , *Constructing Stacks and Queues* , focuses on
    two of the most important data structures in this chapter--stacks and queues.
    We see how to construct stacks and queues using different methods and discuss
    their operation and usage with examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](text00118.html) , *Applying Recursive Algorithms - Recursion* ,
    focuses on one important topic with algorithms--recursion. We cover the different
    ways in which we can solve a problem using recursive algorithms and the advantages
    and disadvantages of using this technique. We also cover some basic day-to-day
    programming problems that we can solve using recursion.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](text00138.html) , *Understanding and Implementing Trees* , talks
    about a non-hierarchical data structure--the tree. We cover tree properties and
    how to construct them, and understand the cases in which the tree data structure
    will be important to us.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](text00165.html) , *Using Sorting Algorithms* , demonstrates how
    to implement different sorting algorithms and their complexity, as sorting is
    a very important topic in the programming world and the search for an efficient
    sorting algorithm is always on. At the end of the chapter, we also cover the built-in
    PHP sorting algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](text00187.html) , *Exploring Search Options* , states how searching
    is important in the programming world. In this chapter, we focus on different
    searching techniques and when to use which algorithms. We also discuss whether
    we should sort before searching. This chapter contains lots of examples and implementations
    of different algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](text00202.html) , *Putting Graphs into Action* , explains how graph
    algorithms are one of the most widely used algorithms in the programming paradigm.
    In this chapter, we focus on different graph-related problems and solve them using
    different algorithms. We cover implementations of the shortest path algorithm
    and minimal spanning trees with examples and explanations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](text00229.html) , *Understanding and Using Heaps* , talks about
    the last data structure topic in the book--the heap. It is a very efficient data
    structure and is used in many implementations in the real world. We show how to
    build heaps and their uses, including the implementations of the heap sort algorithm.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](text00238.html) , *Solving Problems with Advanced Techniques*
    , focuses on different techniques to solve problems. We focus our discussion on
    topics such as memoization, dynamic programming, greedy algorithms, and backtracking,
    along with examples and solutions for practical problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](text00252.html) , *PHP’s Built-In Support for Data Structures
    and Algorithms* , shows the built-in support we have for data structures and algorithms.
    We talk about PHP’s functions, PECL libraries, and also some references for online
    resources.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](text00263.html) , *Functional Data Structures with PHP* , sheds
    some light on functional programming and functional data structures using PHP,
    as functional programming is creating a lot of hype these days. We introduce a
    functional programming library called Tarsana and show different examples of using
    it.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'All you need to have is the latest PHP version (minimum requirement is PHP
    7.x) installed on your machine. You can run the examples from a command line,
    which does not require a web server. However, if you want, you can install Apache
    or Nginx, or the following:'
  prefs: []
  type: TYPE_NORMAL
- en: PHP 7.x+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nginx/apache (optional)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PHP IDE or code editor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for those who want to learn data structures and algorithms with
    PHP for better control over application-solution, efficiency, and optimization.
    A basic understanding of PHP data types, control structures, and other basic features
    is required.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: Codes are written with a different font from the book text fonts to highlight
    the code block.
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block during
    the explanation, the code is highlighted within the text like this: `**addChildren**`
    .'
  prefs: []
  type: TYPE_NORMAL
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'New terms and important words are shown in bold. Words that you see on the
    screen, for example, in menus or dialog boxes, appear in the text like this: "Clicking
    the Next button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.Tips and tricks appear
    like this.
  prefs: []
  type: TYPE_NORMAL
