- en: Appendix A. Installing Node.js and Using npm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Node.js is an event-driven platform built on top of V8, the JavaScript engine
    of Google Chrome. The platform implements fully non-blocking I/O for V8, and is
    mainly used for building real-time I/O-intensive web applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Node.js installer provides the following two main components:'
  prefs: []
  type: TYPE_NORMAL
- en: the node binary, which can be used to run the JavaScript files written for the
    platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the node package manager **npm**, which can be used to install the node libraries
    and tools written by the node community
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Node.js
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Node.js installers and distributers can be found on its official website
    [http://nodejs.org/](http://nodejs.org/). The installation procedure differs,
    depending on the operating system.
  prefs: []
  type: TYPE_NORMAL
- en: On Windows, two MSI based installers are provided at [http://nodejs.org/download/](http://nodejs.org/download/),
    one for a 32-bit OS, and another for a 64-bit. To install Node.js on Windows,
    simply download and execute the installer.
  prefs: []
  type: TYPE_NORMAL
- en: For Mac OS X, a `pkg` installer is available at the same location; downloading
    and running the PKG file will allow you to install Node.js with the Apple installer.
  prefs: []
  type: TYPE_NORMAL
- en: On Linux, the installation procedure depends on the distribution. Instructions
    for many popular distributions are available on the node wiki at [https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager).
  prefs: []
  type: TYPE_NORMAL
- en: Using npm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The node package manager npm comes with the Node.js installer. npm is used for
    the command line; to use it, we will need to run a terminal program (a command
    prompt).
  prefs: []
  type: TYPE_NORMAL
- en: On Windows, we can use the basic `cmd.exe`, or alternatively, we can download
    and install Console from [http://sourceforge.net/projects/console/](http://sourceforge.net/projects/console/).
  prefs: []
  type: TYPE_NORMAL
- en: On Mac OS X, `Terminal.app` can be used to run commands.
  prefs: []
  type: TYPE_NORMAL
- en: On Linux, use your favorite terminal. The default on Ubuntu Linux is the gnome
    terminal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the terminal and type: `npm`. This command runs npm without any parameters.
    As a result, npm will print a general usage overview listing the available subcommands.'
  prefs: []
  type: TYPE_NORMAL
- en: Installing a local package
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s create an empty directory for our project named `test`, navigate to
    that directory, and install the `underscore` library there, using npm. Run the
    following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The last command will tell npm to run the `install` subcommand with the argument
    `underscore`, which in turn will install the package underscore locally. npm will
    output some progress information as it downloads and installs the package.
  prefs: []
  type: TYPE_NORMAL
- en: When installing a package locally, npm creates a subdirectory in the current
    directory named `node_modules`. Inside that directory, it creates another directory
    for the installed package. In this case, the underscore package will be placed
    inside the `underscore` directory.
  prefs: []
  type: TYPE_NORMAL
- en: Installing a global package
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some npm packages are designed to be installed globally. Global packages add
    new functionality to the operating system. For example, the coffee-script package
    can be installed globally, which will cause the command `coffee` to become available
    on our system.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install global packages we use the -g switch. Have a look at the following
    example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'On some systems it''s necessary to request the administrative privilege to
    run this program. You can do that by using the `sudo` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'npm will download and install coffee-script along with all its dependencies.
    After the process is complete, we can start using the command `coffee`, which
    is now available on our system. We can now run coffee-script code. Lets say we
    want to run a simple hello-world script written in-line; we can use the `-e` switch
    for that. Have a look at the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'To learn more in the global package about npm subcommands, we can use npm''s
    help subcommand. For example, to learn more about the `install` subcommand, run
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: More information about the latest version of npm can be found on the official
    npm documentation at [https://npmjs.org/doc/](https://npmjs.org/doc/).
  prefs: []
  type: TYPE_NORMAL
