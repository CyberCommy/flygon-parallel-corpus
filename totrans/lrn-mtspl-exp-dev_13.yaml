- en: Chapter 13. Using Social Engineering Toolkit and Armitage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Social Engineering Toolkit** (**SET**) is an advanced toolkit that can be
    found nowadays in the arsenal of penetration testers. This is an advanced toolkit
    and incorporates many useful social engineering attacks, all in one interface.
    It is basically a project named devolution and comes bundled along with BackTrack.
    This toolkit has been written by *David Kennedy* and is one of the masters of
    the art of social engineering. The best part about SET is that it can automatically
    generate exploit-hiding web pages and e-mail messages.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using Social Engineering Toolkit and Armitage](img/3589_13_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Image taken from [http://www.toolswatch.org/wp-content/uploads/2012/08/set-box.png](http://www.toolswatch.org/wp-content/uploads/2012/08/set-box.png)
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Social Engineering Toolkit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before using Social Engineering Toolkit, we have to make a few changes in the
    configuration file of SET. So first let us browse to the `SET` directory using
    `root/pentest/exploits/set/config` where we will find the `set_config` file.
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s open the `set_config` file in a text editor and first set the path of
    the `Metasploit` directory; otherwise, the SET will not be able to start and will
    show an error message: **Metasploit not found**. Set the directory in the following
    manner: `METASPLOIT_PATH=/opt/metasploit/msf3`.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Another thing we have to change in this configuration file is to set the **SENDMAIL**
    option to **ON** and set the name of **EMAIL_PROVIDER** to the one that we are
    using; for example, here we are using **GMAIL**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now next thing that we have to do is install a small Sendmail application by
    typing `apt-get install sendmail`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now that everything is set, we can start our SET program by moving into the
    following directory by typing `cd /pentest/exploits/set` and then typing in `./set`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'This shows us the SET menu in the terminal as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding screenshot, we can see that the menu is listed with numbers.
    It is very simple to use, and we have to just select the number and options to
    perform any attacks. So here we select number **1** for **Social-Engineering Attacks**
    and then press *Enter*.
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we can see that after selecting the **Social-Engineering Attacks** option,
    there is another menu that gets opened. Here we can see in the menu that there
    are 10 types of attacks that can be performed. We cannot show all of them, so
    first we are going to demonstrate the **Mass Mailer Attack** option that is number
    **5** in the menu. So select **5** and then press *Enter*, and it will ask the
    following: **Start Sendmail?**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Type `yes` to start the **Sendmail** attack. After that, we will be shown two
    options for attacking: the first is **E-Mail Attack Single Email Address** and
    the second is **E-Mail Attack Mass Mailer**. Here we are selecting option **1**
    for an e-mail attack on a single e-mail address. Type in `1`; after this option
    has been selected, you will be asked for the e-mail address that has to be attacked.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: So for example, here we are using xxxxxxx@gmail.com as the victim's e-mail address.
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Social Engineering Toolkit](img/3589_13_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Attack options
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After we have given the target address, two options for attack will be shown.
    The first option is **Use a gmail account for your email attack** and the second
    option is **Use your own server or open relay**. For this attack, the second option
    is the best option. If you have an open relay or your own server, you can send
    mail from any domain address; but in this case, we don't have our own server or
    open relay, so we would be using a Gmail account and selecting option number **1**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack options](img/3589_13_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After we have selected option number **1**, we will be asked for the Gmail address
    from which we will attack; for example, here we are using yyyyy@gmail.com as an
    attacker address.
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack options](img/3589_13_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After we have provided the e-mail address, it will now ask us for **Email password**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack options](img/3589_13_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Set the e-mail password; then we will be asked to flag if the message priority
    is high with either **yes** or **no**. Type `yes` to give high priority to the
    message.
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack options](img/3589_13_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Next we will be asked for the **Email subject**; for example, here we give the
    message subject as `hello`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack options](img/3589_13_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Next we will be asked for the format in which we want to send the message; for
    example, in either the HTML format or in the plain text format. Here we are typing
    `p` for the plain text format.
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack options](img/3589_13_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now enter the body of the message that has to be sent to the victim. Here we
    are just writing `you are hacked`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack options](img/3589_13_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After writing the message, press *Ctrl* + *C* for ending the message body, and
    the message to the target e-mail address will be sent. Then press *Enter* to continue.
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack options](img/3589_13_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let us check our mailbox to see whether our spoof e-mail has reached into the
    victim's inbox or not. When we check the **Inbox** folder, we do not find the
    e-mail because gmail filters these types of mails into its **Spam** folder. When
    we check our **Spam** folder, we see our spoof message e-mail.
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack options](img/3589_13_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Armitage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We move on to another great tool known as Armitage ([http://www.fastandeasyhacking.com/](http://www.fastandeasyhacking.com/)).
    It is a graphical tool based on Metasploit and has been developed by Raphael Mudge.
    It is used for visualizing targets, automatically recommending exploits for known
    vulnerabilities along with using advanced capabilities of the framework.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now let us start with Armitage hacking; first we will learn how to start Armitage.
    Open the terminal and type in `armitage`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After a few seconds, a connect box prompt will appear; leave it with the default
    settings and click on **Connect**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After connecting, it will again prompt for an option box and ask us to start
    Metasploit; click on **Yes**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now Armitage has started to connect with our localhost address as we can see
    in the preceding screenshot. After successfully connecting to it, we can see that
    our **Armitage** console is ready.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We will start with the scanning process. For this, go to **Hosts** | **MSF Scans**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After **MSF Scans** has been selected, we will be asked for the IP address range
    for scanning. So you can either give the range or give it a particular IP address
    for scanning; for example, here we are giving our target's IP address, which is
    `192.168.0.110`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After giving the target IP, we can see in the preceding screenshot that our
    target has been detected and is a Windows system. Now we will perform an **Nmap
    Scan** for checking its open ports and the services running on it. Go to **Hosts**
    | **Nmap Scan** | **Intense Scan**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After we have selected the scan type, we will be asked for the IP address. Give
    the target IP address and click on **OK**. Here we are using `192.168.0.110` for
    the target.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After successfully completing the **Nmap Scan**, a message box will appear showing
    the message **Scan Complete**; click on **OK**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We can see the **Nmap Scan** result in the terminal panel section. The result
    of the **Nmap Scan** shows us that there are four open ports listed with their
    services and versions.
  prefs: []
  type: TYPE_NORMAL
- en: '![Armitage](img/3589_13_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Working with Hail Mary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now we move to the attack part of Armitage. Go to **Attacks** | **Hail Mary**.
    Hail Mary is a very neat feature in Armitage, with which we can search for automatic
    matching exploits and launch an exploit on the target.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now Hail Mary will start to launch all the matching exploits for the target
    machine as we can see in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After a few minutes, we see that our target machine icon has turned red as shown
    in the following screenshot. This is a sign that symbolizes that we successfully
    compromised the system by one of the exploits. We can also see that **Meterpreter**
    sessions are available in terminal section two.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_34.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now right-click on the compromised system; we will see some interesting options
    over there. We can see the **Attack** option, two **Meterpreter** sessions, and
    the **Login** options. So now we will try using some of these options.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Go to the **Meterpreter1** option; here we will see some more options, such
    as **Interact**, **Access**, **Explore**, and **Pivoting**. All the options have
    already been used in Metasploit by typing in lots of commands, but in Armitage,
    we just have to click on a particular option to use it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Next, we are going to use some of the Meterpreter options. We will use the **Interact**
    option to interact with the victim's system. Go to **Interact** | **Desktop (VNC)**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After this, we will see a message box showing the message that a **VNC bind
    tcp stager** connection has been established and that for using the VNC viewer,
    we need to connect to `127.0.0.1:5901`; click on **OK**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Again, a second message box prompt appears that shows some detailed information
    about our VNC bind stager and our `notepad.exe` process that is running with the
    process ID 1360\. Click on **OK**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_39.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The last and final message box will show that our VNC payload is running successfully
    on the victim's system and that to use the VNC viewer, we need to connect to `127.0.0.1:5901`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_40.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let us connect to the VNC viewer by opening the terminal and typing in `vncviewer`.
    A **vncviewer** box will appear; we need to give the IP and port number to be
    connected to as shown in the following screenshot. In our case, we are giving
    `127.0.0.1:5901`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_41.jpg)'
  prefs: []
  type: TYPE_IMG
- en: And here we go; we can see the victim's desktop and easily access it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_42.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now we will try another option of Meterpreter that is the **Explore** option.
    Go to **Explore** | **Browse Files**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_43.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Using the **Explore** option, we can browse the victim''s drive and see the
    victim''s `C:` drive along with its files. There are two more options: one is
    for uploading files and the other is for making a directory in the target system.
    We can see that both the options in the following screenshot are marked with a
    red box.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Hail Mary](img/3589_13_44.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Meterpreter—access option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now we are going to use another Meterpreter option—the **Access** option. Under
    this option, there are more options available; so here we are going to use the
    **Dump Hashes** option. Go to **Access** | **Dump Hashes** | **lsass method**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Meterpreter—access option](img/3589_13_45.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After a few seconds, a message box will prompt that the hashes were dumped successfully
    and that to see them we can use **View** | **Credentials**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Meterpreter—access option](img/3589_13_46.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let us see the dumped hashes by going to **View** | **Credentials**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Meterpreter—access option](img/3589_13_47.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We can see all the usernames along with their hashed passwords in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Meterpreter—access option](img/3589_13_48.jpg)'
  prefs: []
  type: TYPE_IMG
- en: If we want to crack all these dumped hashes, we can click on **Crack Passwords**.
    A window will appear, after which we will click on **Launch**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Meterpreter—access option](img/3589_13_49.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We can see the cracked hashes' results; note that the **Administrator** password
    hash has successfully been cracked with the password **12345**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Meterpreter—access option](img/3589_13_50.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Just as we used different types of Meterpreter options, there are some other
    options available as well, such as the **Services** that is used for checking
    the services running on the victim's system.
  prefs: []
  type: TYPE_NORMAL
- en: '![Meterpreter—access option](img/3589_13_51.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned how to use the add-on tools of the Metasploit framework
    and further master our skills of exploitation. The social engineering attack is
    still one of the strongest ways to attack a victim and is one of the most widely
    used. So this is why we covered the Social Engineering Toolkit to demonstrate
    how to attack a victim. We also mastered the art of graphical exploitation with
    Armitage, making things extremely easy for exploitation. Vulnerability analysis
    and exploitation was an easy show with this tool. With this chapter, we come to
    the end of the book. We have covered extensive information-gathering techniques,
    exploitation basics, post exploitation tricks, the art of exploitation, and other
    add-on tools, such as SET and Armitage.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are some helpful references that shed further light on some of
    the topics covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.social-engineer.org/framework/Computer_Based_Social_Engineering_Tools:_Social_Engineer_Toolkit_(SET)](http://www.social-engineer.org/framework/Computer_Based_Social_Engineering_Tools:_Social_Engineer_Toolkit_(SET))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://sectools.org/tool/socialengineeringtoolkit/](http://sectools.org/tool/socialengineeringtoolkit/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[www.exploit-db.com/wp-content/themes/exploit/docs/17701.pdf‎](http://www.exploit-db.com/wp-content/themes/exploit/docs/17701.pdf%E2%80%8E)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://wiki.backbox.org/index.php/Armitage](http://wiki.backbox.org/index.php/Armitage)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://haxortr4ck3r.blogspot.in/2012/11/armitage-tutorial.html](http://haxortr4ck3r.blogspot.in/2012/11/armitage-tutorial.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://blog.right-technology.net/2012/11/21/armitage-gui-for-metasploit-tutorial/](http://blog.right-technology.net/2012/11/21/armitage-gui-for-metasploit-tutorial/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
