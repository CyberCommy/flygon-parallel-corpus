- en: Writing Reports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Generating reports using Dradis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using MagicTree
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will go through one of the most important steps of a pentesting
    project, the report. A good report must contain every detail of the vulnerability.
    Our agenda is to keep it as detailed as possible, which may help the right person
    in the department understand all the details and work around it with a perfect
    patch.
  prefs: []
  type: TYPE_NORMAL
- en: There are different ways to create a pentesting report. In this chapter, you
    will learn a few tools that we can use to create a good report that covers everything
    in detail.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at some of the key points that should always be included in the
    report:'
  prefs: []
  type: TYPE_NORMAL
- en: Details of the vulnerability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The CVSS score
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Impact of the bug on the organization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recommendations to patch the bug
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Common Vulnerability Scoring System** (**CVSS**) is a standardized method
    for rating IT vulnerabilities and determining the urgency of a response.'
  prefs: []
  type: TYPE_NORMAL
- en: You can read more about CVSS at [https://www.first.org/cvss](https://www.first.org/cvss).
  prefs: []
  type: TYPE_NORMAL
- en: Generating reports using Dradis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Dradis is an open source browser-based application, which can be used to combine
    the output of different tools and generate a report. It is extremely easy to use
    and comes preinstalled with Kali. However, running it may show errors. So, we
    will reinstall it and then learn how to use it.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Following is the recipe for using Dradis:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to install the dependencies by running the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We then use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2bde2850-758e-4af0-813f-88d02f812ae3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, we change our directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0273e317-4f29-4381-9361-8e549f28ecd6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We run this command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'To start the server, we run this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/33243ba7-2252-4e31-914b-63336457a486.png)'
  prefs: []
  type: TYPE_IMG
- en: We can access Dradis on `https://localhost:3000` now.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Here, we can set up our password to access the framework and log in with the
    password:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9fd71832-36cd-4327-b42d-75a36eff1bfd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will be redirected to the dashboard:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/543f982c-0025-4e3e-b025-aea5a80919ae.png)'
  prefs: []
  type: TYPE_IMG
- en: The free version of Dradis supports plugins of various tools such as Nmap, Acunetix,
    and Nikto.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Dradis allows us to create methodologies. It can be considered a checklist,
    which can be used while performing a pentest activity for an organization:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/75a33756-f055-48ca-8534-218808dcddaa.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To create a checklist, we go to Methodologies and click on Add new:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/eee1c455-b33b-4992-bfd1-10d0191ec2e3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We then assign a name and click on Add to Project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cd7d1baa-f159-4f30-906e-d2b15511640d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We should now see a sample list created for us. We can edit it by clicking
    on the Edit button on the right-hand side:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/05d6fe1d-bd33-425f-9230-c161151e2bdd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, we see that the list is created in XML. We can edit and save it by clicking
    on Update methodology:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/36fb2a19-2958-4d46-b893-f21537f34208.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now let''s look at how we can organize our scan reports better. We go to the
    nodes option on the left-hand side menu and click on the + sign; a pop-up box
    will open and we can add a network range and then click on Add:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/264b8c46-b5b9-4a3e-a7c7-5aa7834c06ef.png)'
  prefs: []
  type: TYPE_IMG
- en: To add a new subnode, we select the node from the left-hand side pane and then
    choose the Add subnode option. This can be used to organize a network-based activity
    based on the host's IP addresses.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, we can add notes and screenshots as PoC of the bugs we find:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/73c0eb4d-6d57-41ea-a10a-464c1bdb06db.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can even import results of various tools to Dradis. This can be done by
    choosing Upload Output from tool from the top menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f8b61bd5-33fa-49e1-84f1-22240d23588d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, we upload our output file. Dradis has inbuilt plugins, which can parse
    reports of different tools:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/63ee1013-f5db-40e0-af90-4d1decb5fb0e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the import is done, we will see the results on the left-hand side pane
    under the title `plugin output`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/016478e1-ad38-49a0-b468-a9fff5af8020.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can see the output of the scan results we just imported:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/20455b67-a224-4193-9cf6-79a5ac5d8105.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Similarly, different scans can be imported and combined together and can be
    exported as one single report using the Dradis framework:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/578aa9db-6bfa-4608-83f9-03b91d921d13.png)'
  prefs: []
  type: TYPE_IMG
- en: More information on Dradis can be found on the official website at [https://dradisframework.com/](https://dradisframework.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Using MagicTree
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MagicTree is a data management and reporting tool similar to Dradis. It is preinstalled
    on Linux and it organizes everything using a tree and node structure. It also
    allows us to execute commands and export the results as a report. In this recipe,
    we will look at some of the things we can do using MagicTree to ease our pentesting
    task.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Following is the recipe for using MagicTree:'
  prefs: []
  type: TYPE_NORMAL
- en: We can run it from the Application menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We accept the terms and the application will open up:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d8d5a10c-d92d-48a6-84e6-c78d1036f669.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we create a new node by going to Node | AutoCreate:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6b6e3df0-387e-4076-a332-d2eeb300030b.png)'
  prefs: []
  type: TYPE_IMG
- en: In the box that opens, we type the IP address of the host we want to be added.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the node is added, it will appear in the left-hand side pane:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b715dac3-c125-4ecd-b1c0-5bcba3cbf016.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To run a scan on a host, we go to the Table View; at the bottom, we will see
    an input box titled Command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/18bec02e-f01d-406b-b1a3-ce323cd5ab10.png)'
  prefs: []
  type: TYPE_IMG
- en: We will run an Nmap scan on the host we just added.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'MagicTree allows you to query the data and send it to the shell. We click on
    the Q* button, and it will automatically select the hosts for us:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b7cd78ed-5159-4b94-a6ce-8b8f82db14be.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we just need to type the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/98ef321a-875a-441d-b9a5-1badc992b223.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Since hosts are already identified, we do not need to mention them here. Then,
    we click on Run:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e2318ae2-b4ed-4ea4-94f4-6fb8f3dd3823.png)'
  prefs: []
  type: TYPE_IMG
- en: We will see a window that shows the scan being executed along with the output.
    Once the scan is complete, we can click on Import, and it will be imported into
    the tool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Similarly, we can run any other tool and import its report to MagicTree. We
    can generate a report by navigating to Report | Generate Report...:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d62a6dce-4fa3-426b-b211-b4876559c4cd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the next window, we can browse the list of templates we would like to use
    to save the report:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/93f5323a-9f25-460d-9133-9449540a01df.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, we click on the Generate Report button, and we will see a report being
    generated:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/76fc3be9-3641-4ded-b6a8-8a5c0868bb6b.png)'
  prefs: []
  type: TYPE_IMG
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are other tools that can be used for report generation, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Serpico**: [https://github.com/SerpicoProject/Serpico](https://github.com/SerpicoProject/Serpico)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Vulnreport**: [http://vulnreport.io/](http://vulnreport.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
