- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The demand for timely, actionable information is pushing software systems to
    process an increasing amount of data in a decreasing amount of time. Additionally,
    as the number of connected devices increases and as these devices are applied
    to a broadening spectrum of industries, that demand is becoming increasingly pervasive.
    Traditional enterprise operational systems are being forced to operate on scales
    of data that were originally associated only with Internet-scale companies. This
    monumental shift is forcing the collapse of more traditional architectures and
    approaches that separated online transactional systems and offline analysis. Instead,
    people are reimagining what it means to extract information from data. Frameworks
    and infrastructure are likewise evolving to accommodate this new vision.
  prefs: []
  type: TYPE_NORMAL
- en: Specifically, data generation is now viewed as a series of discrete events.
    Those event streams are associated with data flows, some operational and some
    analytical, but processed by a common framework and infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Storm is the most popular framework for real-time stream processing. It provides
    the fundamental primitives and guarantees required for fault-tolerant distributed
    computing in high-volume, mission-critical applications. It is both an integration
    technology as well as a data flow and control mechanism. Many large companies
    are using Storm as the backbone of their big data platforms.
  prefs: []
  type: TYPE_NORMAL
- en: Using design patterns from this book, you will learn to develop, deploy, and
    operate data processing flows capable of processing billions of transactions per
    hour/day.
  prefs: []
  type: TYPE_NORMAL
- en: '*Storm Blueprints: Patterns for Distributed Real-time Computation* covers a
    broad range of distributed computing topics, including not only design and integration
    patterns but also domains and applications to which the technology is immediately
    useful and commonly applied. This book introduces the reader to Storm using real-world
    examples, beginning with simple Storm topologies. The examples increase in complexity,
    introducing advanced Storm concepts as well as more sophisticated approaches to
    deployment and operational concerns.'
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Distributed Word Count"), *Distributed Word
    Count*, introduces the core concepts of distributed stream processing with Storm.
    The distributed word count example demonstrates many of the structures, techniques,
    and patterns required for more complex computations. In this chapter, we will
    gain a basic understanding of the structure of Storm computations. We will set
    up a development environment and understand the techniques used to debug and develop
    Storm applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Configuring Storm Clusters"), *Configuring
    Storm Clusters*, provides a deeper look into the Storm technology stack and the
    process of setting up and deploying to a Storm cluster. In this chapter, we will
    automate the installation and configuration of a multi-node cluster using the
    Puppet provisioning tool.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Trident Topologies and Sensor Data"), *Trident
    Topologies and Sensor Data*, covers Trident topologies. Trident provides a higher-level
    abstraction on top of Storm that abstracts away the details of transactional processing
    and state management. In this chapter, we will apply the Trident framework to
    process, aggregate, and filter sensor data to detect a disease outbreak.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Real-time Trend Analysis"), *Real-time Trend
    Analysis*, introduces trend analysis techniques using Storm and Trident. Real-time
    trend analysis involves identifying patterns in data streams. In this chapter,
    you will integrate with Apache Kafka and will implement a sliding window to compute
    moving averages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Real-time Graph Analysis"), *Real-time Graph
    Analysis*, covers graph analysis using Storm to persist data to a graph database
    and query that data to discover relationships. Graph databases are databases that
    store data as graph structures with vertices, edges, and properties and focus
    primarily on relationships between entities. In this chapter, you will integrate
    Storm with Titan, a popular graph database, using Twitter as a data source.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Artificial Intelligence"), *Artificial Intelligence*,
    applies Storm to an artificial intelligence algorithm typically implemented using
    recursion. We expose some of the limitations of Storm, and examine patterns to
    accommodate those limitations. In this chapter, using **Distributed Remote Procedure
    Call** (**DRPC**), you will implement a Storm topology capable of servicing synchronous
    queries to determine the next best move in tic-tac-toe.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Integrating Druid for Financial Analytics"),
    *Integrating Druid for Financial Analytics*, demonstrates the complexities of
    integrating Storm with non-transactional systems. To support such integrations,
    the chapter presents a pattern that leverages ZooKeeper to manage the distributed
    state. In this chapter, you will integrate Storm with Druid, which is an open
    source infrastructure for exploratory analytics, to deliver a configurable real-time
    system for analysis of financial events.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Natural Language Processing"), *Natural Language
    Processing*, introduces the concept of Lambda architecture, pairing real time
    and batch processing to create a resilient system for analytics. Building on the
    [Chapter 7](ch07.html "Chapter 7. Integrating Druid for Financial Analytics"),
    *Integrating Druid for Financial Analytics* you will incorporate the Hadoop infrastructure
    and examine a MapReduce job to backfill analytics in Druid in the event of a host
    failure.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Deploying Storm on Hadoop for Advertising
    Analysis"), *Deploying Storm on Hadoop for Advertising Analysis*, demonstrates
    converting an existing batch process, written in Pig script running on Hadoop,
    into a real-time Storm topology. To do this, you will leverage Storm-YARN, which
    allows users to leverage YARN to deploy and run Storm clusters. Running Storm
    on Hadoop allows enterprises to consolidate operations and utilize the same infrastructure
    for both real time and batch processing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Storm in the Cloud"), *Storm in the Cloud*,
    covers best practices for running and deploying Storm in a cloud-provider hosted
    environment. Specifically, you will leverage Apache Whirr, a set of libraries
    for cloud services, to deploy and configure Storm and its supporting technologies
    to infrastructure provisioned via **Amazon Web Services** (**AWS**) **Elastic
    Compute Cloud** (**EC2**). Additionally, you will leverage Vagrant to create clustered
    environments for development and testing.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following is a list of software used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Chapter number | Software required |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | Storm (0.9.1) |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | Zookeeper (3.3.5)Java (1.7)Puppet (3.4.3)Hiera (1.3.1) |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | Trident (via Storm 0.9.1) |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | Kafka (0.7.2)OpenFire (3.9.1) |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | Twitter4J (3.0.3)Titan (0.3.2)Cassandra (1.2.9) |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | No new software |'
  prefs: []
  type: TYPE_TB
- en: '| 7 | MySQL (5.6.15)Druid (0.5.58) |'
  prefs: []
  type: TYPE_TB
- en: '| 8 | Hadoop (0.20.2) |'
  prefs: []
  type: TYPE_TB
- en: '| 9 | Storm-YARN (1.0-alpha)Hadoop (2.1.0-beta) |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | Whirr (0.8.2)Vagrant (1.4.3) |'
  prefs: []
  type: TYPE_TB
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Storm Blueprints: Patterns for Distributed Real-time Computation* benefits
    both beginner and advanced users, by describing broadly applicable distributed
    computing patterns grounded in real-world example applications. The book presents
    the core primitives in Storm and Trident alongside the crucial techniques required
    for successful deployment and operation.'
  prefs: []
  type: TYPE_NORMAL
- en: Although the book focuses primarily on Java development with Storm, the patterns
    are applicable to other languages, and the tips, techniques, and approaches described
    in the book apply to architects, developers, systems, and business operations.
  prefs: []
  type: TYPE_NORMAL
- en: Hadoop enthusiasts will also find this book a good introduction to Storm. The
    book demonstrates how the two systems complement each other and provides potential
    migration paths from batch processing to the world of real-time analytics.
  prefs: []
  type: TYPE_NORMAL
- en: The book provides examples that apply Storm to a broad range of problems and
    industries, which should translate to other domains faced with problems associated
    with processing large datasets under tight time constraints. As such, solution
    architects and business analysts will benefit from the high-level system architectures
    and technologies introduced in these chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "All
    the Hadoop configuration files are located in `$HADOOP_CONF_DIR`. The three key
    configuration files for this example are: `core-site.xml`, `yarn-site.xml`, and
    `hdfs-site.xml`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "From the **Filter** drop-down menu at the top of the page select **Public images**."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you would report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **errata** **submission** **form** link,
    and entering the details of your errata. Once your errata are verified, your submission
    will be accepted and the errata will be uploaded on our website, or added to any
    list of existing errata, under the Errata section of that title. Any existing
    errata can be viewed by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyright material on the Internet is an ongoing problem across all
    media. At Packt, we take the protection of our copyright and licenses very seriously.
    If you come across any illegal copies of our works, in any form, on the Internet,
    please provide us with the location address or website name immediately so that
    we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors, and our ability to bring
    you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    if you are having a problem with any aspect of the book, and we will do our best
    to address it.
  prefs: []
  type: TYPE_NORMAL
