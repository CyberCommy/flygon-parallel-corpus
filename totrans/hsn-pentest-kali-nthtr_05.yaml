- en: Intelligence-Gathering Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's move into actually using Kali NetHunter. We will start this journey by
    looking at the tools that are useful for gathering intelligence from a target
    host or network. The tools we will be encountering in this chapter will be those
    that tend to be deployed during the first phase of pentesting, with the potential
    to be deployed again during later phases.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Objectives of intelligence gathering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tools for gathering useful information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading and copying a website
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google hacking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social networking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using WHOIS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nslookup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To complete the chapter, you'll need to install Kali NetHunter ([http://kali.org](http://kali.org)).
    Please see [Chapter 1](b476b62d-1c2f-445a-b334-eabdf1f15847.xhtml), *Introduction
    to Kali NetHunter* to learn about installing Kali NetHunter on an Android device.
  prefs: []
  type: TYPE_NORMAL
- en: Objectives of intelligence gathering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before you can effectively deploy any tools used to break into a system or otherwise
    compromise it, you must learn whatever information you can about it. Depending
    on the amount of care you take and depth you need to go into, this process can
    take a short period of time or a considerable period of time. To accelerate this
    process, NetHunter provides a full range of tools designed just for this purpose.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since we don''t have a specific target in mind for this book, we will explore
    a range of tools designed to gather different types of information. We will assume
    that there is a good amount of information to be gathered about the target and
    we must simply deploy the right tools to get it. Keep in mind that, in the real
    world, you may be approached to perform a pentest using one of three popular approaches
    based on the client''s needs. With this in mind, let''s go over the three popular
    approaches to a pentest based on the amount of information that is provided or
    needs to be gathered:'
  prefs: []
  type: TYPE_NORMAL
- en: '**White box**: A term used to describe a test where complete information is
    provided to the tester prior to the start of the test and additional questions
    can be asked later. Typically, this test is used in situations where the client
    needs to perform an audit, and simulating an actual attack is not necessary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Grey box**: In this type of test, limited information is provided to the
    tester in order to either guide the test or control the extent of the test. For
    example, a client may provide a list of server names and IP addresses which, if
    discovered, would be the point where you contact the client for further instructions
    on how to proceed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Black box**: In this type of test, no information is provided and the attacker
    must gain all information on their own. This type of test most closely emulates
    the actual environment that an outside attacker would face, having to gain information
    along the way.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is important that, before you engage in the test, that you understand the
    client's goals and the type of test that they want. For this book, we will assume
    that we are running a black box test and have to dig for and earn the information
    we need to proceed to later phases of the pentesting process.
  prefs: []
  type: TYPE_NORMAL
- en: There are many other types of testing formats in the field of penetration testing,
    but we will not be including them in this book. Instead, we will keep things simple
    by limiting ourselves to just these three types.
  prefs: []
  type: TYPE_NORMAL
- en: Information for the taking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As you may already be aware, thanks to the internet, there is a seemingly endless
    number of resources available that you only need take the time and effort to make
    use of. There is aÂ wealth of knowledge which we can draw upon; however there is
    a very real downside to having this much information available: you can get overwhelmed
    if you''re not careful. Once you have been testing long enough and are familiar
    with the types of information that can be revealed, you will learn what is more
    valuable.'
  prefs: []
  type: TYPE_NORMAL
- en: In my own experience, as well as with those I have mentored over the years,
    I have found that it takes a while to learn to identify useful information quickly.
    Typically, you will find yourself, as a beginner, gathering far more information
    than you will actually use, while possibly missing some items that don't appear
    to be of much use. As you gain experience with the different actions that can
    be taken during pentesting, you will learn to recognize useful information, be
    it information that is immediately useful or that will be useful later.
  prefs: []
  type: TYPE_NORMAL
- en: Types of information available
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To stay focused during your intelligence-gathering, it is important to briefly
    list the types of information that you can uncover.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get things started by determining what types of information we are looking
    for or might encounter that would be of use later. It is important to set expectations
    ahead of time regarding what information you are looking for, as it helps you
    get a handle on what tools from Kali you should use to reach your goal. I want
    to know what information has the best chance of being useful, but I also try to
    prioritize that information as well as identifying those items that I can collect
    with various tools.
  prefs: []
  type: TYPE_NORMAL
- en: Network information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Obtaining information about the network can be useful during our pre-attack
    phase of the penetration test. We aim to determine what transactions are taking
    place between devices, the services being used, IP and MAC addresses, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a short list of information we can extract from a network:'
  prefs: []
  type: TYPE_NORMAL
- en: DNS information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IP addresses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rogue or unmonitored websites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TCP/UDP services that are running
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual private network** (**VPN**) information'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Telephone numbers, including analog and VoIP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Authentication systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User and group information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Banner information from running services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System architecture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Host names
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Usernames and associated passwords
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Organizational data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Organizational information** is anything that describes and outlines the
    inner workings and processes of a business or organization. This information could
    take many forms, but expect things such as organizational charts, business plans,
    social media, or administrative data.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Information that may be located relating to an organization include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Employee information, such as name, job title, and email address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Company website
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Organizational employee directory (for example, phonebook)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Company's physical address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comments within the coding of a company's website
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Organizational Security policies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That's a lot of information, and we can collect it all, and then some, with
    what is available in Kali NetHunter. You can expect to gather a good amount of
    information just by running a few basic scripts and tools that will present the
    information to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'Methods of information-gathering include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Open Source Intelligence** (**OSINT**): OSINT gathers information from various
    online resources; this is both an effective and relatively easy way to learn about
    a target. OSINT uses internet search engines, social media websites, blogs, forums,
    and other sources to gather information about a target.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You may also find yourself engaging in a number of passive methods designed
    to harvest information from a target. For a method to be considered passive, you
    must not directly engage or query the target, leaving less opportunity for detection
    and having your efforts thwarted. Furthermore, the passive method also reasonably
    emulates many of the methods that are used to gain information from public sources,
    also known as gaining OSINT.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You may wonder why, in this book, we sometimes use tools that are not native
    to Kali. This is because in many cases I am either trying to show the normal way
    of doing things, as opposed to the more complete, efficient, and better way of
    carrying out the same task using Kali's own tools.
  prefs: []
  type: TYPE_NORMAL
- en: It's also important to illustrate that there are other tools available that
    can validate the results if you wish to double-check your data.
  prefs: []
  type: TYPE_NORMAL
- en: Tools for gathering useful information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: NetHunter has a number of tools designed to gather information about a target,
    each one offering something that the others don't. In this book, we will cover
    many of the tools in NetHunter, but not all, as there are so many. We will cover
    the more powerful tools and the ones you are most likely to use in your work;
    however, you may find other tools you wish to use when doing your own exploring
    outside.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, there is a mix of tools both in Kali as well as ones that exist
    outside of the software. The idea behind showing both these types of tools is
    to demonstrate not only how to get information in other ways, but how to combine
    information from multiple sources to assist you in the process.
  prefs: []
  type: TYPE_NORMAL
- en: If a target, such as an organization, has a website, that might be a good place
    to start conducting reconnaissance. A company's website provides lots of details,
    such as email addresses for internal contacts, phone numbers, and extensions.
    If a career page is available, it will have details about the type of vacancies
    available with the technologies being used within the company. The website is
    a representation of the organization in the digital world.
  prefs: []
  type: TYPE_NORMAL
- en: 'When starting out, examine a website to look for information that may be of
    use. Pay attention to the following details:'
  prefs: []
  type: TYPE_NORMAL
- en: Email addresses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Physical location
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Job postings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Telephone directory listing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Shodan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the more useful tools in the NetHunter arsenal is a third-party app for
    accessing Shodan. **Shodan** is a powerful search engine that looks for devices
    that are attached to the internet. With Shodan, it is possible to identify several
    pieces of hardware and software inside a target organization with little effort.
  prefs: []
  type: TYPE_NORMAL
- en: Why the weird name? Shodan gets its name from the game System Shock. TheÂ *SHODAN*Â character
    name is an acronym for Sentient Hyper-Optimized Data Access Network for the main
    antagonist of the cyberpunk-horror-themed games.
  prefs: []
  type: TYPE_NORMAL
- en: In order to unlock the full power of Shodan, you need to become adept at using
    keywords creatively. Keywords can be any number of different items, but in this
    case, they typically are the name of the manufacturer and the device model number.
    In some cases, it could even be the name of an unusual device, such as an embedded
    device or an **Internet of Things** (**IoT**) gadget. Once you have an idea of
    keywords to use, you can use these within Shodan to search for devices. You can
    even refine your results if you get overwhelmed by utilizing filter commands.
  prefs: []
  type: TYPE_NORMAL
- en: Shodan has been around for about a decade and has continued to become more capable
    and effective. Shodan is unlike other search engines in that it has the ability
    to search for devices attached to the internet. Originally it was expected to
    be capable of finding computers and printers attached to the internet, but today
    it has the ability to locate devices, such as named IoT objects. Basically, as
    long as it can be accessed or viewed from the Internet, the possibility exists
    that it can be searched for using Shodan.
  prefs: []
  type: TYPE_NORMAL
- en: As a pentester, you will find that you can very quickly and easily find devices
    or systems that shouldn't be connected to the internet or have any public exposure.
    The search engine can also become a very useful tool for finding unauthorized
    or rogue devices on your own network if the need arises.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to get started with Shodan, you will need to visit their site at [shodan.io](http://shodan.io)
    to register and create an account. Once this is done, you will be given a unique
    **Application Programming Interface**Â (**API**) key to enter into the Shodan app:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/3f667681-d97b-4e3f-84e8-64709add0e41.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Shodan website
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to use Shodan, you will need to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Start the Shodan App located in your list of applications.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter your API key if this is the first time you have used the app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a keyword search and tap the **Search** button
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After a few moments, Shodan will return a list of individual systems that meet
    your search criteria. Much like other search engines, click on any one of the
    results to get more detailed information on the target, including items such as
    ports and services. On some results, you will even be able to click on the **+**
    signs near the port numbers for service and other associated information.
  prefs: []
  type: TYPE_NORMAL
- en: If you cannot locate the Shodan app on your device, this may be due to the fact
    that you did not choose to install it during the installation of Kali NetHunter.
    If you did not install it, you can easily install it after the fact using Google
    Play and searching for the Shodan app.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/27db31ef-c2c0-472f-a500-bcfde0e4f62d.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Results of a Shodan search
  prefs: []
  type: TYPE_NORMAL
- en: Working with filters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With Shodan, you employ a filter either separately or together with others to
    filter and narrow down your results and focus your searches to specific criteria,
    such as countries, cities, products, or versions. However, we can use keywords
    to search; these keywordsÂ include something specific for the target. Let's say
    you want to find Cisco devices; the keyword would be "cisco".
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, in order to discover webservers that are running Apache web server
    version 3.2.8, you can use the following keywords:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'While this type of search works and you will learn that a more effective searches
    can be done by combining both search terms and filters. For example, you could
    search for all of an organization''s Microsoft web servers running IIS/8.5 in
    Sacramento:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Using Metagoofil
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Metagoofil** is a powerful tool to have at your fingertips and Kali NetHunter
    provides it to you as a way to gather information. In a nutshell, Metagoofil searches
    for, and downloads information from Google based on the criteria you provide.
    The metadata information that is gathered is from public documents (such as PDF,
    Doc, XLS, PPT, Docx, PPTX, and XLSX files) from the target company you specify.
    It downloads and saves these files to the local drive and then uses built-in libraries
    to extract metadata from the files. The following figure shows Metagoofil at the
    Terminal window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/b3400dc0-09db-4f7f-920a-2e4db86af2ee.jpg)'
  prefs: []
  type: TYPE_IMG
- en: So, what is metadata? Well, metadata is information that describes something,
    such as a file, on a computer. In practice, a good example of metadata would be
    the properties attached to a file saved to a hard drive. If this file was an image,
    we could view its properties and find ourselves able to see what device took the
    picture along with color depth, size, and other information, such as GPS data
    in some cases. Depending on the file type being analyzed, it is possible that
    the information that can be displayed could include usernames, software versions,
    and servers or machine names.
  prefs: []
  type: TYPE_NORMAL
- en: '**Metadata** is present on many types of objects, including all types of files
    and data repositories. In fact, many applications and devices in use today embed
    metadata in the information they create by default. This is the case with many
    of the images created by digital cameras and smartphones, as well as files created
    by products such as Microsoft Word. This metadata is responsible for storing details
    such as the coordinates of where a picture was takenÂ â thisÂ information can be
    retrieved and will reveal things that the creator may wish to keep secret.'
  prefs: []
  type: TYPE_NORMAL
- en: Exercise using Metagoofil to collect information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this exercise, we will use Metagoofil to extract metadata from documents
    within a targeted domain.
  prefs: []
  type: TYPE_NORMAL
- en: 'Depending on which version of NetHunter you are running, you may be able to
    immediately run this utility from the command line while some updates seem to
    have removed it. If you type the `metagoofil`Â command at the Terminal window and
    you get a message indicating it is not available, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Let's use Metagoofil to scan a domain for metadata. To keep things safe, we
    will use the [kali.org](https://www.kali.org/) website, but you can replace the
    domain with one of your choosing.
  prefs: []
  type: TYPE_NORMAL
- en: 'Metagoofil offers us a number of options to scan this domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '`-d`: Specifies the domain to search.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-t`: Filetype(s) to download.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-l`:Â  This Limits the results ( it will showÂ default value till 200 if nothing
    is specified) Too large a value will take longer while a smaller value will speed
    performance, but yield fewer results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-n`: Limits the files that are downloaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-o`: Location to save downloaded files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-f`: Name of the output file with the summary of operation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At the command prompt, typeÂ `metagoofil -d kali.org -t pdf,xls -l 200 -n 25
    -f results.html`Â and then press *Enter*.
  prefs: []
  type: TYPE_NORMAL
- en: 'The results will take a while to be returned, but it will include details similar
    to the following screenshot, which was returned from my own search. I ran this
    against a different domain, whose name I have removed. Note the list of user names,
    software used to create files that were retrieved, and even email addresses:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/e7901dc8-4a3a-49d4-aeb8-c3cce37c21a0.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Results of Metagoofil viewed in a browser
  prefs: []
  type: TYPE_NORMAL
- en: This information would be saved to a file (or should be) using the `-f` switch.
  prefs: []
  type: TYPE_NORMAL
- en: The actual results were much longer and had more detail, but couldn't all be
    displayed here in the interest of brevity.
  prefs: []
  type: TYPE_NORMAL
- en: Using Nikto
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One way to gain even more information about a target and their website is to
    use Nikto. **Nikto** is a web server scanner that is designed to test a web server
    for various issues, including 6,700+ dangerous files and programs, check for outdated
    versions of servers, and identify version-specific problems of around 300 different
    server types. In addition, it has the ability to check for server configuration
    issues, HTTP server options, and will also attempt to fingerprint web servers
    and software. Finally, scan items and plugins are frequently updated and can be
    automatically updated.
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind that not every issue is necessarily something that you can exploit,
    but with some research, you will find many of them are. Some of the data returned
    from a scan will reveal informational items that can be used to add more information
    that may be useful later. There are also some checks for unknown items that have
    been seen scanned for in log files.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the results of scanning a website using Nikto:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/0b1a641e-6a17-4229-b819-60a3eb7feb9c.png)'
  prefs: []
  type: TYPE_IMG
- en: Results of a Nikto scan
  prefs: []
  type: TYPE_NORMAL
- en: Let's do some exercise with Nikto to show how it works and provide some helpful
    options.
  prefs: []
  type: TYPE_NORMAL
- en: ExerciseÂ â working with Nikto
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nikto is a command-line utility, so open a Terminal window to start working
    with the application.
  prefs: []
  type: TYPE_NORMAL
- en: 'To run the most basic type of scan, we just have to issue the following command
    and press *Enter*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This command tells Nikto to target (using the `-h` switch) a host name or IP
    address of your choosing. In my case, I chose the website [webscantest.com](http://webscantest.com/),
    which is set up for this type of activity/practice. Note the results will take
    a few moments to be returned, so don't worry if it looks like the command has
    hung or is otherwise not working.
  prefs: []
  type: TYPE_NORMAL
- en: When you get the results, take a careful look at what is returned.
  prefs: []
  type: TYPE_NORMAL
- en: In my results, I noted the information indicating the presence of a `robots.txt`
    file. I used my browser to open this file by entering [www.webscantest.com/robots.txt](http://www.webscantest.com/robots.txt)
    and I received some simple information about the site, including content types
    and folders. I also noted the information indicating the presence of a login page
    at [www.webscantest.com/login.php](http://www.webscantest.com/login.php). This
    might be good information to note for password-cracking attempts later. Finally,
    I also should point out that the results told me the type and version of the webserver,
    as well as the operating system which, in this case, is Apache 2.4.7 running on
    Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: There are other results included, such as vulnerabilities, which will vary depending
    on your target.
  prefs: []
  type: TYPE_NORMAL
- en: 'Want to see if you can become a little stealthier? Well, you can use the `-evasion`
    or `-e` switch and specify an option. In my case, I used `1` to specify random
    encoding . This may help fool or evade some detective mechanisms enough to keep
    your attack under the radar. You can use this option as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: I won't go through all the options here, but I encourage you to use the help
    option to try some other switches. You can access this by entering `nikto -Help`
    to show all the available switches.
  prefs: []
  type: TYPE_NORMAL
- en: 'One last tip on this tool: save your results to a file by using the `-o` switch,
    like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: I usually specify the filename as an HTML file, such as `test.html`. Just save
    your results as this saves time later when you need to refer to the information
    for that nugget of useful information.
  prefs: []
  type: TYPE_NORMAL
- en: What is robots.txt?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sometimes search engines are not enough to get what you want as they don't show
    everything you may want. Search engines only show a small fraction of the information
    available on the web and many take advantage of this shortcoming to keep things
    from showing up in a search engine. One of these ways is by tweaking a file known
    as `robots.txt`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The owner of a website can make use of the `robots.txt` file in an attempt
    to take control of who sees what within a site. In practice, the file is put in
    the root of a website and comes into play when a robot or bot visits a site in
    an attempt to catalog content. A robot visits a website such as [www.sample.com](http://www.sample.com).
    However, before it does it checks for the existence of the `robots.txt` file.
    If the file exists, it reads the file to see whether it is allowed to proceed,
    and if so, where. In this case, let''s say that `robots.txt` is found in [www.sample.com/robots.txt](http://www.sample.com/robots.txt)
    and it has the following contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '`User-agent: *` indicates that the information applies to all robots.Â `Disallow:
    /`Â tells the robot not to visit any pages on the website. In practice,Â `robots.txt`
    is supposed to be read by any robot visiting the site to catalog its content.
    When it reads the file, it should process the directives and react accordingly,
    but let''s point out the reality of the situation.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In practice, there are two key points to remember regarding this file:'
  prefs: []
  type: TYPE_NORMAL
- en: While the intention is forÂ `robots.txt` to be universally accepted, in reality,
    robots can ignore your `/robots.txt`. This would especially be the case for malicious
    web crawlers that scan the website and web servers for security vulnerabilities,
    and email-address harvesters used by spammers. All will tend to ignore the file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The actual `robots.txt` file can be viewed by anyone as it is publicly accessible
    by default. Someone finding this file (for example, by using a Google hack) can
    see what portions of a site have been put off limits and then browse there anyway.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The bottom line here is that `robots.txt` does work as designed. All it takes
    is a piece of malware or a simple Google search to either learn about the structure
    of the site or a piece of malware that doesn''t respect the file and causes potential
    issues. This means you should not use the file to hide information as it is simple
    to locate, read, and bypass. The file only serves to *suggest* the sections of
    the site that shouldn''t be visited; it doesn''t enforce them:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/fddc3659-0902-4125-a7ba-1725c7677f4a.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of the contents of a robots.txt
  prefs: []
  type: TYPE_NORMAL
- en: Using Parsero
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In terms of Kali, there actually are tools that will look for the `robots.txt`
    of a site and read the contents. One such tool, **Parsero**, is specifically designed
    to look at the contents of the file with attention paid to the *disallow* entries
    that are used to keep bots from visiting those locations. The following screenshot
    shows Parsero in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/b1d278c9-9a1f-4a04-8de9-e9fa78156c32.png)'
  prefs: []
  type: TYPE_IMG
- en: The Parsero welcome screen
  prefs: []
  type: TYPE_NORMAL
- en: 'Parsero reads the `robots.txt` file of a web server, looks at the Disallow
    entries, and then checks to see whether the location is accessible. In practice,
    an entry in the file would look like this `Disallow: /portal/ login`Â means that
    the content on this website or linkÂ [www.chieforiyano.com/portal/login](http://www.chieforiyano.com/portal/login)
    should not be indexed by spiders. It may seem pretty straightforward and simple,
    but it can be an obstacle if you want to gather information for a pentest; fortunately,
    we can get around this file.'
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes the paths in the Disallows entries are accessible by users who simply
    type the path into their web browser. However, since there can be many disallow
    entries inÂ `robots.txt`, it is possible that there may be a long list of entries
    to check. Parsero can be used to check a long list of entries and see which are
    valid, so you know which paths to investigate without wasting time.
  prefs: []
  type: TYPE_NORMAL
- en: ExerciseÂ â working with Parsero
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this exercise, we are going to explore a few examples of using Parsero.
  prefs: []
  type: TYPE_NORMAL
- en: If your installation of Kali does not have Parsero installed, use theÂ `apt-get
    install parsero`Â command and choose `Yes` to install it.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, if we want to index a site to see which disallow entries are valid,
    we use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Or, we can use this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Second, if we want to see which paths are valid using a search engine, we can
    alter the command to look like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Or you can use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: In this case Parsero, will search bing for results.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have a list of verified directories, you can use a web browser or other
    tool to view the path on the server to see what files or information may be present.
  prefs: []
  type: TYPE_NORMAL
- en: Using wget
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You may find it useful to download a copy of a website for local examination
    and to use it to run other tests on. If this is something you wish to do, the
    easiest and simplest way is to use theÂ `wget`Â command, which is a standard Linux
    tool used to retrieve information from websites. The `wget` utility is a non-interactive
    downloader.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that this technique of using `wget` or a similar utility
    to download a website is not completely passive and is more semi-passive. While
    passive information-gathering avoids direct engagement with the target and thus
    makes the process anonymous and impossible to track, semi-passive leaves more
    behind. Semi-passive information-gathering engages the target much more directly
    and can leave information in logs, which can be analyzed by the target and the
    activities revealed. The key is that the information is found after the fact and
    our activities do not draw attention to themselves while they are occurring.
  prefs: []
  type: TYPE_NORMAL
- en: ExerciseÂ â working with wget
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To keep things simple, for this exercise I recommend that you use a small website
    or personal one as it will make the process faster as there will be less to download.
    However, if you do need to download a larger website, be aware that the bandwidth
    demands and storage-space demands will increase accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Although we are covering how to download the contents of a website to a local
    system, there are some things to keep in mind here: first, on a mobile device,
    storage space may be at a premium, meaning you need to make sure you have enough
    storage space to store the contents of your targeted website. If you run out of
    space, the command will fail, or if you come close to exhausting the space on
    your system without using it all up, you may run into other problems with your
    device.'
  prefs: []
  type: TYPE_NORMAL
- en: Second, make sure that if you are doing this operation, you are aware that,
    if you are performing it over a cellular data link, you will be rapidly eating
    up your data allotment if you have one.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we want to download the website into a directory on the system with
    the same name as the target. To do this, issueÂ the following at the command line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The `-m` option creates a mirror image of the website.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you need to download an entire site, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: This command downloads all the pages on specified URL, using both the `-r` and
    `--level=1` parameters. The components, such as images, will be included within
    the downloaded version.
  prefs: []
  type: TYPE_NORMAL
- en: If you have targeted a small site, neither of these commands should take that
    long to finish (maybe a few seconds to just a few minutes), and you should find
    the contents copied to your local system. Once you have the content downloaded,
    you can open them in your web browser and perform actions such as looking at the
    source code to see whether you can find any comments or clues about the site.
    You can also search through the files looking for keywords or phrases that might
    give you information that could prove useful.
  prefs: []
  type: TYPE_NORMAL
- en: Using HTTrack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Of course, wget is just a regular Linux tool; let's download a websiteÂ in a
    different way using the HTTrack tool. This tool is included with Kali and offers
    far more options than wget does on its own.
  prefs: []
  type: TYPE_NORMAL
- en: '**HTTrack** is a website copier. It allows a person to use either the graphical
    user interface (GUI) or the command-line interface (CLI) to create an offline
    mirror version of a website, allowing for offline browsing.'
  prefs: []
  type: TYPE_NORMAL
- en: HTTrack also possesses the ability to update an existing downloaded site and
    resume interrupted downloads.
  prefs: []
  type: TYPE_NORMAL
- en: Let's try using HTTrack to download a website.
  prefs: []
  type: TYPE_NORMAL
- en: ExerciseÂ âÂ using HTTrack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To use HTTrack, let''s start with the basic options:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a Terminal window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type theÂ `mkdir test`Â command. This will create a directory named test. You
    can use whatever name you want; however, this will be the place we store our download.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type `cd test`Â or whatever you used for your directory name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type theÂ `httrack <website name>`Â command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press *Enter*. Depending on the size of the site you have targeted, downloading
    may take some time. For my testing, I used `www.webscantest.com` to practice.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the download has completed, browse to the folder with the file manager
    (the blue folder icon on the toolbar).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on any file and the appropriate application will be launched, such as
    your web browser. It may take a little poking around, but you may stumble across
    something interesting. For example, consider the following page I found:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](img/50afb66e-82b8-446d-bafb-3cbb9349308c.jpg)'
  prefs: []
  type: TYPE_IMG
- en: A login page from the targeted website
  prefs: []
  type: TYPE_NORMAL
- en: 'On larger sites, you may want to consider fine-tuning your request a bit so
    you limit the results. You can do this by issuing the command with the `-r` switch,
    like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: In this example, the `-r` switch is used with the 2 option, which tells it to
    go only two levels deep on the site. Note that the switch is a lowercase r; if
    an uppercase R is used, this will not work.
  prefs: []
  type: TYPE_NORMAL
- en: 'Want to have a little more guidance when running `httrack`? Well a wizard-type
    help system is available to walk you through the process. You can use this feature
    by enabling the `-W` (uppercase) switch:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Try different options; you can see the vast array of them by usingÂ `httrack
    -h`.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have completed this command, you can browse to the folder you created
    and review the content that has been downloaded.
  prefs: []
  type: TYPE_NORMAL
- en: Google Hacking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One resource we should not overlook when gathering information is search engines.
    In this section, we are going to focus specifically on Google and a process known
    as Google hacking. As it stands, Google is a very powerful tool for gathering
    information just by performing simple keyword searches, but what if you wanted
    to be more specific and fine-tune your searches to get better-quality results?
    Have you ever put a keyword or set of terms into the search box on google hoping
    to get that useful piece of information only to get several pages of results with
    very little, if anything, to do with what you were looking for? If you have, you
    are not alone with this problem, but the good news is that the use of Google hacking
    can greatly improve your results and help you get what is relevant.
  prefs: []
  type: TYPE_NORMAL
- en: Google hacking (or Google dorking, as some call it) makes use of special keywords
    to construct queries designed to refine a search to gather information. Under
    a skilled and patient hand, it is more than possible to retrieve useful pieces
    of information, such as passwords, configurations data, and login portals.
  prefs: []
  type: TYPE_NORMAL
- en: ExerciseÂ â what's the Right Search Engine
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to be successful with a Google hack, we need to lay the groundwork
    by first covering what are known as **operators**. Operators are special keywords
    or terms that are used to direct Google to look for information of a certain time
    or format. Operators can be used within the context of any search and can even
    be strung together to create a more complex and targeted search. While we will
    discuss the proper usage of each, I would strongly recommend you spend some time
    working with them, learning different ways to use them in your own queries or
    how to refine your searches:'
  prefs: []
  type: TYPE_NORMAL
- en: The Cache keyword displays the cache versions of websites that Google previously
    stored on their servers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Usage: `cache:<website URL>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Link keyword displays websites that have a link to the specified URL.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Usage: `link:<website URL>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Info provides information about the website.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Usage: `info:<website URL>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Site restricts the searches for the locations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Usage: `<keyword> site:<website name>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allintitle returns pages with specified keywords in the titles.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Usage: `allintitle:<keywords>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filetype is used to return only files of a specific type.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Usage: `filetype:<file extension> <keywords>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allinurl returns results with a specific query.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Usage: `allinurl:<keywords>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With these keywords in mind, let''s discuss a few examples to show you how
    to use each. I will put some queries here and provide a description of what should
    be returned if you were to try them yourself:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Allinurl network cameras**: This query would return any URL that has a combination
    of the words *network* and *cameras* in it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Allintitle virus description**: This query would return any page that has
    the words *virus* and *description* in the title.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Filetype:xls username password email**: This would return any XLS (Microsoft
    Excel file) containing the keywords *username*, *password*, and *email*. It is
    also possible to combine keywords to make even more refined and powerful queries.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Allinurl:nuke filetype:xls**: This query would look for URLs that contain
    the word *nuke* and then look for XLS files and return the results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you find yourself stuck for ideas, look at the **Google Hacking Database**
    (**GHDB**). You can locate the website at [www.hackersforcharity.com](http://www.hackersforcharity.com/).
    Here, you'll find many examples of both simple and complex uses of google hacks
    that you can examine, dissect, and modify to learn how to get more out of your
    results.
  prefs: []
  type: TYPE_NORMAL
- en: Location
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A lot of organizations tend to insert their business address on various online
    maps to help customers find their physical locations more easily. Sites such as
    Google Maps, Bing Maps, Waze, and MapQuest help everyone find their way around
    a country. However, this also helps penetration testers to find a target organization
    much more quickly if they are conducting a black-box test or do not have the phyiscal
    address of the target company.
  prefs: []
  type: TYPE_NORMAL
- en: Social networking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the purpose of gathering information about an individual, not too many sources
    can compete with social networking. These networks have not only become extremely
    prolific, but are a very valuable tool for information-gathering. This is largely
    because users of these services tend to overshare information. For most people,
    sharing things online is more exciting than keeping things a secret. Of course,
    when used with care, social networking is a good way for communicating with friends
    and family; however, in some circumstances it could provide a wealth of information
    on both personal and professional relationships.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common social platforms to gain information about a target are as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Facebook
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Twitter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google+ (*recently been discontinued by Google*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LinkedIn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instagram
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tumblr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Echosec
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of my favorite tools for mining the data revealed on these social networking
    services is known as **Echosec**. This service offers more than just a service
    used to locate information on social networking sites; it aggregates the information
    from multiple sites and then locates where the post was made using geographic
    data. Yes, you read that right; it can show you on a map where a post to a network
    was made and even allow you to adjust the timeframe.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows the Echosec interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/bfe1be3c-2032-4a24-b7ea-5856f13c9b23.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Echosec works in part because social networks either use location data embedded
    in the post or use other features to place it on a map (such as IP address). Services
    such as Facebook, Twitter, and Instagram can include information from the GPS
    built into just about every modern device in the posts you make. While this sounds
    cool as it allows you to show your friends and family where you have been, it
    also has a downside: it allows other people to see that same information. This
    can allow a malicious party to see where you work, play, and live, not to mention
    where you have traveled. All of this information is useful in identifying an individual''s
    habits as well as other personal information.'
  prefs: []
  type: TYPE_NORMAL
- en: As a pentester, you should not overlook the value of this information. We can
    retrieve this information through a service known as Echosec, atÂ [http://app.echo](http://app.echosec.net/)[sec.net](http://app.echosec.net/).
    To use this service, you only need a location and a little time.
  prefs: []
  type: TYPE_NORMAL
- en: ExerciseÂ â working with Echosec
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to use Echosec to analyze theÂ  social media posts from a location,
    see the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to [https://app.echosec.net](https://app.echosec.net).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Select Area**Â button. Draw a box around the target area.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll down to view the results.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It is possible that pornographic images may sometimes appear in the search results.
    Even if it is not common, it happens from time to time.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Recon-Ng
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Do you want to speed up the process of information-gathering and overall reconnaissance
    of a target? Recon-Ng is for you! While it is true that you will become more adept
    and therefore faster at gathering information manually, tools such as Recon-Ng
    will only improve the speed and efficiency of this process. So, let's take a closer
    look at this tool to get an appreciation of how it works.
  prefs: []
  type: TYPE_NORMAL
- en: '**Recon-Ng** is a powerful tool designed to mimic the interface and design
    of similar tools known as **frameworks**. The tool is based around a design that
    incorporates standalone modules, interactions with the database, interactive help,
    and whichÂ  automatically completes commands for a user. However, Recon-Ng is not
    designed to compete with existing frameworks and is more of a complement to the
    other penetration-testing tools that are already popular.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Recon-Ng comes with 80 recon modules, 2 discovery modules, 2 exploitation modules,
    7 reporting modules, and 2 import modules. The following are some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '`command_injector`: Remote Command Injection Shell Interface'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`csv_file`: Advanced CSV File Importer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`email_validator`: Verifies email'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mailtester`: MailTester Email Validator'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`migrate_contacts`: Contacts to Domains Data Migrator'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`facebook_directory`: Facebook Directory Crawler'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metacrawler`: Metadata Extractor'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`instagram`: Instagram Geolocation Search'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`twitter`: Twitter Geolocation Search'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dev_diver`: Dev Diver Repository Activity Examiner'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`linkedin_crawl`: LinkedIn Profile Crawler'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can view the entire list of Recon-Ng modules at [https://www.darknet.org.uk/2016/04/recon-ng-web-reconnaissance-framework/](https://www.darknet.org.uk/2016/04/recon-ng-web-reconnaissance-framework/).
  prefs: []
  type: TYPE_NORMAL
- en: Going for technical data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When gathering information during the reconnaissance process, you also want
    to try to acquire as much technical data as is possible and reasonable to collect.
    Fortunately, there are a lot of methods today to help us gather information; many
    are right at your fingertips, built into your favorite operating system, while
    others require different methods.
  prefs: []
  type: TYPE_NORMAL
- en: Using WHOIS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: WHOIS has been around for quite some time now, but is a very useful utility.
  prefs: []
  type: TYPE_NORMAL
- en: ExerciseÂ â getting the most from WHOIS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At the Kali NetHunter Terminal, type `whoisÂ <domainname>`, for example:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will show you all the publicly-accessible information about the
    registration of the domain name, such as the person who did the registration,
    contact details for the company, the company''s address, and the domain creation,
    renewal, and expiration date:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/69f44cfb-e07d-4d30-a006-da4b997ba924.png)'
  prefs: []
  type: TYPE_IMG
- en: Results of WHOIS for verisign
  prefs: []
  type: TYPE_NORMAL
- en: Domain registrars usually provide an option for privacy to their customers.
    This would restrict a purchaser's information from being made available for public
    records.
  prefs: []
  type: TYPE_NORMAL
- en: nslookup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A technical area we should also focus on is DNS, or Domain Name System, which
    is responsible for resolving hostnames to IPs and IPs to hostnames. This service
    is extremely common to find running on a network, and is essentially a required
    service within most environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you recall from your networking experience, DNS is a database that contains
    information about the relationships between IP addresses and corresponding hostnames.
    When a client wishes to obtain the IP address that goes with a given hostname
    (in a query known as a forward-lookup), a process goes on within DNS where the
    hostname is located in the database and the address returned. Each of these IP-to-hostname
    relationships in the database is known as a record. Not all records in DNS are
    the same and they exist as many different types, each leading to a different type
    of resource. Looking for the IP for a file server? That''s an A record. Looking
    for a mail server? That''s an MX record. The following table lists these different
    records:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Record type** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| A | Resolves hostnames to IPv4 addresses |'
  prefs: []
  type: TYPE_TB
- en: '| AAAA | Same as an "A" record, but for IPv6 |'
  prefs: []
  type: TYPE_TB
- en: '| MX | Record for the location of the mail server for that domain |'
  prefs: []
  type: TYPE_TB
- en: '| NS | Lists name servers for a domain |'
  prefs: []
  type: TYPE_TB
- en: '| CNAME | Creates an alias |'
  prefs: []
  type: TYPE_TB
- en: '| SOA | Displays who has authority for a domain |'
  prefs: []
  type: TYPE_TB
- en: '| SRV | Service record |'
  prefs: []
  type: TYPE_TB
- en: '| PTR | Opposite of an A record |'
  prefs: []
  type: TYPE_TB
- en: '| RP | Who is responsible for administration |'
  prefs: []
  type: TYPE_TB
- en: '| HINFO | Host information |'
  prefs: []
  type: TYPE_TB
- en: '| TXT | Simple text record may be used for comments |'
  prefs: []
  type: TYPE_TB
- en: Now that we know this information, how do we put it to use? Well that's where
    nslookup comes in. Nslookup allows us to interact with a DNS server and query
    it for different record types. Executing queries to retrieve HINFO or TXT records
    can yield information such as notes or other details that may be useful to you.
    Additionally, retrieving other records, such as an MX record, could yield you
    the address of a mail server or an NS record could tell you the address of the
    target's DNS servers.
  prefs: []
  type: TYPE_NORMAL
- en: Running `nslookup` requires using the terminal window or command line to issue
    the commands directly.
  prefs: []
  type: TYPE_NORMAL
- en: 'In its default mode of operation, `nslookup` will return the IP address that
    corresponds to a hostname or the other way around, depending on which you provide.
    For example, let''s find out the IP address of website.com by running the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'It would return something similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Here, `8.8.8.8` is the address of the DNS server the local host is configured
    to use.
  prefs: []
  type: TYPE_NORMAL
- en: Directly after this, we see the information for `website.com`. In this case,
    the DNS server returned two answers, indicating that the website uses a load-balancing
    system commonly known as a round robin. Essentially, this means that when you
    browse to this website, you will be sent to one of these two addresses and your
    queries will be resolved and answered appropriately.
  prefs: []
  type: TYPE_NORMAL
- en: It's also important to note the text in the response that states "Non-authoritative
    answer" to our query. This response indicates that the DNS server we are querying
    does not contain complete information for the domain being queried. This answer
    typically indicates that you have been provided information that is cached from
    the last request made by a client.
  prefs: []
  type: TYPE_NORMAL
- en: Reverse DNS Lookups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It is possible to perform reverse lookup queries by providing the IP address
    instead, like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'This will return information resembling the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Non-authoritative answer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Looking up an NS record
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The NS record of a domain contains the IP addresses of the name servers that
    are authoritative for that domain. Retrieving an NS record is simple: we just
    run a query much like before, but now we include the -type switch to tell the
    utility to return only NS records:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'The response will resemble the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is the non-authoritative answer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Querying an MX record
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The MX record of a domain contains the IP addresses of the mail servers that
    handle messages for the domain. When you send an email to a domain, for example
    `@website.com`, mail is routed to the website's MX servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the `-type=mx` option to query a domain for its MX record. For
    example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'It will respond with output resembling the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Here''s the non-authoritative answer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Querying an SOA record
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The **Start Of Authority** (**SOA**) record for a domain provides technical
    information about the domain itself. It can be retrieved by using the -`type=soa`
    option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Here''s the non-authoritative answer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Querying another DNS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Nslookup, by design, will query the same DNS server that the host system is
    currently configured to use. However, if you wish to change the DNS server that
    is being queried by `nslookup`, you can use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'This command will provide us with the authoritative answer to our previous
    query of `microsoft.com`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: This is useful not only for gaining authoritative information, but also for
    retrieving the information a certain DNS currently has cached.
  prefs: []
  type: TYPE_NORMAL
- en: Also note that a closer examination of the WHOIS result,Â  the nameservers which
    are authoritative for the domain are located at the bottom of the result. You
    could use those servers returned from a WHOIS query with nslookup.
  prefs: []
  type: TYPE_NORMAL
- en: Using dnsenum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s use another tool to that is built into Kali, known as **dnsenum**, to
    examine DNS information. Simply put, dnsenum is a script designed to extract DNS
    information from a domain and reveal non-contiguous IP blocks. Here is a short
    list of the features of this script:'
  prefs: []
  type: TYPE_NORMAL
- en: Get the host's address record
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get the nameservers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get the MX record
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform AXFR queries on nameservers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get extra names and subdomains via google scraping
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute-force subdomains from the file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calculate C class domain-network ranges and perform WHOIS queries on them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write to `domain_ips.tx`t file IP blocks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's take a quick look at how to use dnsenum.
  prefs: []
  type: TYPE_NORMAL
- en: ExerciseÂ âÂ working with dnsenum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Dnsenum** is a fast and very efficient way of acquiring the same info as
    nslookup without having to jump through as many hoops.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To use dnsenum at its most basic, simply issue the following at the Terminal
    window:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: This will return a list of results about records including name servers, MX
    servers, and A records. It will also attempt to perform a zone transfer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Want to try querying a different DNS server for the same name? Use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: The use of `dnsserver` is particularly helpful when you are trying to query
    the authoritative server for a domain.
  prefs: []
  type: TYPE_NORMAL
- en: Using DNSMAP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another effective way to learn about subdomains, IP addresses, and build a picture
    or map of a network is through the use of DNSMAP. This utility is capable of performing
    several actions, but let's look at it right now as a way to learn about subdomains
    and associated IP addresses for a target.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use DNSMAP to perform any of the following actions:'
  prefs: []
  type: TYPE_NORMAL
- en: Find remote servers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Find domain names that will allow you to map non-obvious/hard-to-find net blocks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ability to locate internal DNS names and IP addresses using brute-force
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To use DNSMAP to locate subdomains, simply execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, it will be seen like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'There is another tool that is effective at gathering information from DNS:
    Fierce. **Fierce** is in the sameÂ  as other tools of its type, but it is still
    worth covering because it offers another attractive alternative.'
  prefs: []
  type: TYPE_NORMAL
- en: Fierce is, at its heart, a scanner that helps locate non-contiguous IP space
    and hostnames of targeted domains. It's meant, in many ways, to be a way to gather
    information to be used in tools such as nmap. It locates potential targets both
    inside and outside a target network.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use Fierce to perform a scan of a DNS namespace, issue the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'An example using an actual domain name looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the results of this example scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/ec3dc835-f92f-442a-acc2-f3212b316098.png)'
  prefs: []
  type: TYPE_IMG
- en: Using traceroute
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Traceroute** is designed using the ICMP protocol as a component. Traceroute
    allows an administrator to map the path a packet would take between the source
    to the destination. Traceroute exists both in the Windows and Linux systems.'
  prefs: []
  type: TYPE_NORMAL
- en: Traceroute sends packets by slightly increasing the TTL value, initially with
    a TTL value of `1`. The first router receives the packet, decreases the TTL value,
    and then leaves the packet because it has a TTL value of `0`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The router sends an ICMP Time Exceeded message back to the source:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/efd3d30d-3324-4ab0-bd91-ab18611a8b33.png)'
  prefs: []
  type: TYPE_IMG
- en: There are many non-command-line versions of traceroute, if you find them easier
    to use.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is a wealth of resources available for you to get details about the target
    sources which you should be familiar with when performing a penetration test.
    In this chapter, we learned how to research a target and use the information collected
    to understand the victim.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will build on the lessons learned during information-gathering
    and move to acting on this information through the use of scanning and enumeration.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can check outÂ [http://kali.tools.org](http://kali.tools.org)Â for more information
    about the topics covered inÂ this chapter.
  prefs: []
  type: TYPE_NORMAL
