- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Nowadays, computer systems (and other related systems, such as tablets or smartphones)
    allow you to do several tasks simultaneously. This can be possible because they
    have concurrent operating systems that control several tasks at the same time.
    You can also have one application that executes several tasks (read a file, show
    a message, or read data over a network) if you work with the concurrency API of
    your favorite programming language. Java includes a very powerful concurrency
    API that allows you to implement any kind of concurrency application with little
    effort. This API increases the features provided to programmers in every version.
    Now, in Java 8, it has included the stream API and new methods and classes to
    facilitate the implementation of concurrent applications. This book covers the
    most important elements of the Java concurrency API, showing you how to use them
    in real-world applications. These elements are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The executor framework, to control the execution of lots of task
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Phaser class, to execute tasks that can be divided into phases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Fork/Join framework, to execute the tasks that solve a problem using the
    divide and conquer technique
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The stream API, to process big sources of data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Concurrent data structures, to store the data in concurrent applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Synchronization mechanisms, to organize concurrent tasks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'However, it includes much more: a methodology to design concurrency applications,
    design patterns, tips and tricks to implement good concurrency applications, and
    tools and techniques to test concurrency applications.'
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0014_split_000.html#DB7S2-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 1. The First Step – Concurrency Design Principles"), *The First Step
    – Concurrency Design Principles*, will teach you the design principles of concurrency
    applications. They will also learn the possible problems of concurrency applications
    and a methodology to design them followed by some design patterns, tips, and tricks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0022_split_000.html#KVCC1-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 2. Managing Lots of Threads – Executors"), *Managing Lots of Threads
    – Executors*, will teach you the basic principles of the executor framework. This
    framework allows you to work with lots of threads without creating or managing
    them. You will implement the k-nearest neighbors algorithm and a basic client/server
    application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0028_split_000.html#QMFO1-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 3. Getting the Maximum from Executors"), *Getting the Maximum from Executors*,
    will teach you some advanced characteristics of executors, including cancelation
    and scheduling of tasks to execute a task after a delay or every certain period
    of time. You will implement an advanced client/server application and a news reader.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0033_split_000.html#VF2I1-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 4. Getting Data from the Tasks – The Callable and Future Interfaces"),
    *Getting Data from the Tasks – The Callable and Future Interfaces*, will teach
    you how to work in an executor with tasks that return a result using the Callable
    and Future interfaces. You will implement a best-matching algorithm and an application
    to build an inverted index.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0037_split_000.html#1394Q1-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 5. Running Tasks Divided into Phases – The Phaser Class"), *Running Tasks
    Divided into Phases – The Phaser class,* will teach you how to use the Phaser
    class to execute tasks that can be divided into phases in a concurrent way. You
    will implement a keyword extraction algorithm and a genetic algorithm.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0041_split_000.html#173722-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 6. Optimizing Divide and Conquer Solutions – The Fork/Join Framework"),
    *Optimizing Divide and Conquer Solutions – The Fork/Join Framework*, will teach
    you how to use a special kind of executor optimized by those problems that can
    be resolved using the divide and conquer technique: the Fork/Join framework and
    its work-stealing algorithm. You will implement the k-means clustering algorithm,
    a data filtering algorithm, and the merge-sort algorithm.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0047_split_000.html#1CQAE2-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 7. Processing Massive Datasets with Parallel Streams – The Map and Reduce
    Model"), *Processing Massive Datasets with Parallel Streams – The Map and Reduce
    Model,* will teach you how to work with streams to process big datasets. In this
    chapter, you will learn how to implement map and reduce applications using the
    stream API and much more functions of streams. You will implement a numerical
    summarization algorithm and an information retrieval search tool.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0051_split_000.html#1GKCM1-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 8. Processing Massive Datasets with Parallel Streams – The Map and Collect
    Model"), *Processing Massive Datasets with Parallel Streams – The Map and Collect
    Model*, will teach you how to use the collect() method of the stream API to perform
    a mutable reduction of a stream of data into a different data structure, including
    the predefined collectors defined in the Collectors class. You will implement
    a tool to search data without indexing, a recommendation system, and an algorithm
    to calculate the list of common contacts of two persons in a social network.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0056_split_000.html#1LCVG2-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 9. Diving into Concurrent Data Structures and Synchronization Utilities"),
    *Diving into Concurrent Data Structures and Synchronization Utilities,* will teach
    you how to work with the most important concurrent data structures (data structures
    that can be used in concurrent applications without causing data race conditions)
    and all the synchronization mechanisms included in the Java concurrency API to
    organize the execution of tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](part0059_split_000.html#1O8H61-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 10. Integration of Fragments and Implementation of Alternatives"), *Integration
    of Fragments and Implementation of Alternatives*, will teach you how to implement
    a big application made by fragments of concurrent applications with their own
    concurrency techniques using shared memory or message passing. You will also learn
    different implementation alternatives to the examples presented in the book.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](part0063_split_000.html#1S2JE2-2fff3d3b99304faa8fa9b27f1b5053ba
    "Chapter 11. Testing and Monitoring Concurrent Applications"), *Testing and Monitoring
    Concurrent Applications*, teaches you how to obtain information about the status
    of some of the Java concurrency API elements (thread, lock, executor, and so on).
    You will also learn how to monitor a concurrent application using the Java VisualVM
    application and how to test concurrent applications with the MultithreadedTC library
    and the Java Pathfinder application.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To follow this book, you need basic knowledge of the Java programming language.
    A basic knowledge of concurrency concepts is welcome too.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a Java developer who knows the basic principles of concurrent programming
    but you want to get an expert knowledge of the Java concurrency API to develop
    optimized applications that takes advantage of all the hardware resources of computers,
    then this book is for you.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    `Product` class stores the information about a product."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'New terms and important words are shown in bold. Words that you see on the
    screen, for example, in menus or dialog boxes, appear in the text like this: "Leave
    the default value and click on the **Next** button."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: eBooks, discount offers, and more
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Did you know that Packt offers eBook versions of every book published, with
    PDF and ePub files available? You can upgrade to the eBook version at [www.PacktPub.com](http://www.PacktPub.com)
    and as a print book customer, you are entitled to a discount on the eBook copy.
    Get in touch with us at `<[customercare@packtpub.com](mailto:customercare@packtpub.com)>`
    for more details.
  prefs: []
  type: TYPE_NORMAL
- en: At [www.PacktPub.com](http://www.PacktPub.com), you can also read a collection
    of free technical articles, sign up for a range of free newsletters, and receive
    exclusive discounts and offers on Packt books and eBooks.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
