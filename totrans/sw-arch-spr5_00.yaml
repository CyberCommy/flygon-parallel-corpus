- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Today we count on different software architecture styles that can be applied
    in different scenarios. In this book, we will review the most common software
    architecture styles and how they can be implemented using Spring Framework, which
    is one of the most widely adopted frameworks within the Java ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: At the beginning, we'll review some key concepts inherent to software architecture
    in order to understand the fundamental theory before diving into technical details.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is aimed at experienced Spring developers who are aspiring to become
    architects of enterprise-grade applications and at software architects who would
    like to leverage Spring to create effective application blueprints.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](21088489-d3dd-4c4d-8969-ac7ec0844132.xhtml), *Software Architecture
    Today*, provides an overview of how software architectures are managed today and
    why they are still important. It discusses how the most recent needs of the software
    industry are handled by the new emerging architecture models and how they can
    help you to solve these new challenges.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](2bcd4115-15c2-48a3-9cca-4ace426554ff.xhtml), *Software Architecture
    Dimensions*, reviews the dimensions associated with software architectures and
    how they influence the building process of your applications. We will also introduce
    the C4 model used to document software architectures.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](3e3d6f59-38ed-4f0f-808e-edabd07cc4b4.xhtml), *Spring Projects*,
    speaks about some of the most useful Spring Projects. It''s important to know
    which tools are inside your toolbox because Spring provides a wide variety of
    tools that fit your needs and can be used to boost your development process.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](e3dbe5c7-7ae9-49a8-816b-69d18300218b.xhtml), *Client-Server Architectures*,
    covers how client-server architectures work and the most common scenarios where
    this style of architecture can be applied. We will go through various implementations,
    starting from simple clients such as desktop applications to modern and more complex
    usages such as devices connected to the internet.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](218e4202-6930-4310-9777-7e23d708a85d.xhtml), *MVC Architectures*,
    speaks about MVC, which is one of the most popular and widely known architecture
    styles. In this chapter, you will get an in-depth understanding of how MVC architectures
    work.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](47f3823d-e7cd-4384-b392-71c7daf27b2d.xhtml), *Event-Driven Architectures*,
    explains the underlying concepts related to event-driven architectures and which
    issues they handle using a hands-on approach.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](c5c3f9e5-157a-4f24-bebf-fb42488ee995.xhtml), *Pipe-and-Filter Architectures*,
    focuses heavily on Spring Batch. It explains how to build pipelines, which encapsulate
    an independent chain of tasks aimed to filter and process big amount of data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](7c38500a-5a66-422b-a41b-21f4fd18de51.xhtml), *Microservices*, provides
    an overview about how to implement microservice architectures using the spring
    cloud stack. It details every component and how they interact with each other
    in order to provide a fully functional microservice architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](e43eb939-ae8d-4ae1-9fc5-101a46110923.xhtml), *Serverless Architectures*,
    speaks about many services on the internet that are ready-to-use and can be used
    as part of software systems, allowing companies to just focus on their own business
    core concerns. This chapter shows a new way to think about building applications
    around a series of third-party services to solve common problems such as authentication,
    file storage, and infrastructure. We will also review what FaaS approach is and
    how to implement it using Spring.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](8762b4ca-6a2e-4b00-acf3-3f8f5e2f00b9.xhtml), *Containerizing Your
    Applications*, explains that containers are one of the most handy technologies
    used in the last few years. They help us to get rid of manual server provisioning
    and allow us to forget the headaches related to building production environments
    and the maintenance tasks for servers. This chapter shows how to generate an artifact
    ready for production that can be easily replaced, upgraded, and interchanged eliminating
    the common provisioning issues. Through this chapter, we will also introduce container
    orchestration and how to deal with it using Kubernetes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](81e880b2-2345-4231-b7d5-d558f3c55955.xhtml), *DevOps and Release
    Management*, explains that Agile is one of the most common approaches to organizing
    teams and making them work together to build products more quickly. DevOps is
    an inherent technique of these teams, and it helps them to break unnecessary silos
    and boring processes, giving teams the chance to be in charge of the whole software
    development process from writing code to deploy applications in production. This
    chapter shows how to achieve this goal by embracing automation to reduce manual
    tasks and deploy applications using automated pipelines in charge of validating
    the written code, provisioning the infrastructure, and deploying the required
    artifacts in a production environment.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](f58465fa-861d-4800-a2a3-fe19c06e8789.xhtml), *Monitoring*, explains
    that once the application is published, unexpected behaviors are not uncommon
    and that it''s essential to notice them so that they can be fixed as quickly as
    possible. This chapter gives some recommendations regarding techniques and tools
    that can be used to monitor the performance of an application bearing in mind
    technical and business metrics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](645d19fb-b708-4610-a98e-cb484bd48bb3.xhtml), *Security*, explains
    that often security is one of the fields that teams do not pay close attention
    to when they are working on developing their products. There are a few key considerations
    that developers should keep in mind when they are writing code. Most of them are
    pretty obvious, while others aren''t, so we will discuss all of them here.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](c6d6a971-69cd-489e-be1c-55f51c611f42.xhtml), *High Performance*,
    explains that there is nothing more disappointing in a job than dealing with issues
    in production when an application is behaving in an unexpected way. In this chapter,
    we''ll discuss some simple techniques that can be applied to get rid of these
    annoying problems by applying simple recommendations on a daily basis.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A good understanding of Java, Git, and Spring Framework is necessary before
    reading this book. A deep knowledge of OOP is desired, although some key concepts
    are reviewed in the first two chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Software-Architecture-with-Spring-5.0](https://github.com/PacktPublishing/Software-Architecture-with-Spring-5.0).
    We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/SoftwareArchitecturewithSpring5_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/SoftwareArchitecturewithSpring5_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "This object is represented by a `Servlet` interface."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
