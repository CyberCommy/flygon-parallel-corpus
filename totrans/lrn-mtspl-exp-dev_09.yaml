- en: Chapter 9. Post Exploitation – Cleaning Up Traces
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We covered the privilege escalation techniques using Metasploit in the previous
    chapter. Next, we move on to the next phase of post exploitation, which is cleaning
    tracks and traces through log deletion and staying undetected by disabling the
    firewall and antivirus systems. In this chapter we will learn how to evade firewall
    and antivirus system alerts once a system is compromised. Another important matter
    for a hacker is how invisibly he performs his work. This is known as cleaning
    tracks and traces; here, a malicious hacker clears logs and any alerts that may
    have been created because of his intrusion.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Disabling firewalls and other network defenses
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why is a firewall important? A firewall is basically software or hardware that
    blocks unauthorized entry to a system or network. A firewall also keeps track
    of intrusions and security breaches. If the firewall is well-configured, each
    unauthorized entry is blocked and logged in the security logs. It controls the
    incoming and outgoing network traffic and analyzes the data packets; based on
    this, it decides whether it should allow the packet through the firewall or not.
    So if a malicious user is able to exploit a system remotely, the first step should
    be to disable the firewall so that no further alerts can be logged by the firewall,
    which could show evidence of the intrusion.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls and other network defenses](img/3589_09_01.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
- en: 'A firewall is classified into three different types:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '**Packet Filter Firewall**: These types of firewalls are associated with the
    first three layers of the OSI Model with a little help from the transport layer
    as well, for the source and destination port numbers. When a packet travels towards
    the packet filter firewall, it is analyzed with the help of set rules to match
    against. If the packet passes through the filters of the firewall, it is allowed
    to enter the network, otherwise it is blocked.'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Stateful Firewall**: These are also called second-generation firewalls. As
    the name suggests, these firewalls work on the states of a network connection.
    Throughout the state, it determines whether to allow the packet into the network
    or not.'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Application Firewall**: These are known as third-generation firewalls. Application
    firewalls work on applications and protocols like HTTP, SMTP, and SSH. They also
    help in detecting if an unwanted protocol is trying to bypass the firewall on
    an allowed port.'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A firewall is one of the greatest enemies of a malicious user. It stops a malicious
    user from using post-exploitation scripts and creating backdoors to compromised
    systems. Hence an attacker's first objective should be to disable the firewall
    once he compromises the system. In this chapter we will see how we can actually
    disable the firewall through Metasploit and then work on unauthorized zones.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will show you how to disable the firewall in the victim's
    system. Before doing this, we will check the status of the firewall in the victim's
    system; that is, is it enabled or disabled. To do this, we will use a post-exploitation
    script. So type in `run getcountermeasure`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls and other network defenses](img/3589_09_02.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
- en: We can see in the preceding screenshot that the firewall is enabled in the victim's
    system. There is another way to check the firewall settings in the victim's system
    – by accessing his/her command prompt. For this, we have to open the victim's
    shell from Meterpreter. The technique to open the shell from Meterpreter has already
    been covered in previous chapters. We access the command prompt and type in `netsh
    firewall show opmode`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls and other network defenses](img/3589_09_03.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
- en: Now we can check the firewall settings of the system firewall. Let us verify
    it by checking the victim's system to see if the firewall is enabled or not.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls and other network defenses](img/3589_09_04.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
- en: We can clearly see that the firewall is in the active state. So now we need
    to disable it. Type in `netsh firewall show opmode mode=disable`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls and other network defenses](img/3589_09_05.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
- en: After executing the previous command, the command will disable the firewall
    permanently. Let us now check the firewall status in the victim's system.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls and other network defenses](img/3589_09_06.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
- en: Disabling firewalls through VBScript
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is another way to disable the firewall, that is, by executing a small
    Visual Basic Script on the victim's system. Firstly, we have to write three lines
    of code in a text file.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now save this code with a `.vbs` extension. For example, here we have named
    it as `disable.vbs`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls through VBScript](img/3589_09_07.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
- en: Our script is ready; now we have to upload this script into the victim's system.
    For uploading, we will use the Meterpreter upload command. Type in `upload <source
    file path> <destination file path>`; for example, in our case, we type in `upload
    root/Desktop/disable.vbs C:\`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls through VBScript](img/3589_09_08.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
- en: Thus, we have uploaded our `disable.vbs` script into the victim's `C:` drive.
    Let us check in the victim's `C:` drive to see if the script is uploaded or not.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls through VBScript](img/3589_09_09.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
- en: We can see our `disable.vbs` file in the victim's `C:` drive. We can now execute
    this script remotely. To execute this script, we have to go to this drive by typing
    in `cd C:\`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls through VBScript](img/3589_09_10.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
- en: We are in the victim's `C:` drive now and we can execute the script. So type
    in `disable.vbs` and it will be executed in the victim's system.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls through VBScript](img/3589_09_11.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
- en: Let us check if the victim's system firewall has been disabled or not by our
    script.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling firewalls through VBScript](img/3589_09_12.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: Yes, the firewall has been disabled successfully by our VBScript code.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: Antivirus killing and log deletion
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let us take a look at some of the exploitation issues in an antivirus program.
    There are various things that an attacker needs to take care of after exploiting
    a system. This is important if he wants to play safe and stay undetected. Antivirus
    software is one of the main defense systems for a legitimate user, and if an attacker
    is able to disable it, he has successfully gained full control over the system
    and can stay undetected. Hence it is very important for an attacker to disable
    the antivirus system as a precautionary measure to hide his/her existence. In
    this chapter, we will learn how to disable and kill different antivirus programs
    through Meterpreter post-exploitation scripts.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_13.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
- en: In this section we will see how to stop antiviruses by killing their processes.
    For this purpose, we will use a post-exploitation Meterpreter script known as
    killav. We will show you the source code of the killav script and see how this
    script is able to kill processes of the antivirus program.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Open the `killav.rb` script with a text editor, which is located at `opt/framework/msf3/scripts/killav.rb`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_14.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
- en: We can see a list of the names of processes of well-known antiviruses that are
    included in the killav script. When we run this script, it looks for the process
    name in the victim's system, which should also be included in this script, and
    then kills the process.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: In our case, the victim is using AVG 2012 Antivirus. So first of all we will
    check the process name for the AVG antivirus from the victim's task manager.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_15.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
- en: We can see that the process name `avgrsx.exe` is running for the AVG antivirus
    program. Let us check if the process name is included in the `killav.rb` script.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_16.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
- en: We can see that the process name is already included, so the script will work
    successfully. Type in `run killav`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_17.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
- en: We can see from the result in the preceding screenshot that the process has
    been killed. Now we will access the victim's command prompt and type in `tasklist`
    for checking all the processes that are running in the victim's system.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_18.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
- en: We can also see a lot of processes running in the victim's system; we are now
    going to categorize the processes to see which group they belong to. Type in `tasklist
    /svc`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_19.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: We are interested only in the AVG Antivirus services and not in the other services
    that are being shown in the task list. So we will refine our search by typing
    in `tasklist /svc | find /I "avg"`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_20.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
- en: After executing the command as shown in the preceding screenshot, we can see
    that only the AVG-related processes are being shown. We have to kill all the processes,
    but the two processes `avgwdsvc.exe` and `AVGIDSAgent.exe` will cause trouble
    at the time of killing. The reason for this trouble is that these are not stoppable
    as seen in the following screenshot. Here, we see the properties of `avgwd` by
    typing in `sc queryex avgwd`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_21.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
- en: You may notice in the state section in the preceding screenshot that this service
    is not stoppable and cannot be paused either. But we can disable this service
    to get rid of our problem.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Let us check the properties of another process, `AVGIDSAgent`. Type in `sc queryex
    AVGIDSAgent`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_22.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
- en: We can see the same result here – the service is not stoppable and cannot be
    paused.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Now we are going to disable the `avgwd` process. Type in `sc config avgwd start=
    disabled`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_23.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
- en: The `avgwd` service has been disabled as we can see in the preceding screenshot.
    Now let us disable another process, `AVGIDSAgent`. Type in `sc config AVGIDSAgent
    start= disabled`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_24.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: Now we exit the victim's command prompt and reboot the victim's system by typing
    the `reboot` command in the Meterpreter session.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_25.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: After a successful reboot, we again enter a Meterpreter session in the victim's
    system. Now what we have to do is search for all the AVG processes from the victim's
    tasklist and verify whether the two processes that we had disabled are still running.
    We open the shell and type in `tasklist /svc | find /I "avg"`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_26.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
- en: We can see that the two processes, `avgwd` and `AVGIDSAgent`, are not showing
    up in the preceding screenshot. This means that the processes have been successfully
    disabled. We can easily terminate the other AVG processes. For terminating a process,
    type in `taskkill /F /IM "avg*"`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_27.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
- en: After executing the command, we can see that all the processes are successfully
    terminated.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: The next phase of clearing tracks will be to clear the system logs. System and
    application logs are events that are logged by the operating system and the applications
    running on it. These have utmost importance from the forensics perspective, as
    they show the state of changes or events that occurred in the system. Any suspicious
    activity is also logged; hence it becomes important for an attacker to clear these
    logs to remain hidden.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '![Antivirus killing and log deletion](img/3589_09_28.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
- en: Image taken from [https://paddle-static.s3.amazonaws.com/HR/CleanMyPC-BDJ/CleanMyPC-icon.png](https://paddle-static.s3.amazonaws.com/HR/CleanMyPC-BDJ/CleanMyPC-icon.png)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: After successfully disabling the firewall and the antivirus, the last thing
    we have to do that is to clean all evidence such as logs in the computer system.
    First we will check in the victim's system using the Event Viewer to see if any
    logs were created or not.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 成功禁用防火墙和杀毒软件后，我们要做的最后一件事就是清理计算机系统中的所有日志等证据。首先，我们将使用事件查看器在受害者系统中检查是否创建了任何日志。
- en: '![Antivirus killing and log deletion](img/3589_09_29.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_29.jpg)'
- en: We can see in the preceding screenshot that there are three logs, classified
    as **Application**, **Security**, and **System**. In the **Application** section,
    we can see that there are 118 events being created. Now we have to clear all these
    logs. For cleaning the logs, we will use the Meterpreter command `clearev`, which
    will wipe all the logs from the victim's system. So type in `clearev`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在上一个截图中看到有三个日志，分为**应用程序**，**安全**和**系统**。在**应用程序**部分，我们可以看到有118个事件被创建。现在我们必须清除所有这些日志。为了清理日志，我们将使用Meterpreter命令`clearev`，它将从受害者系统中清除所有日志。因此输入`clearev`。
- en: '![Antivirus killing and log deletion](img/3589_09_30.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_30.jpg)'
- en: After executing the command, we may see the result in the preceding screenshot
    – 118 application records and 467 system records have been wiped off. Let us confirm
    this using Event Viewer in the victim's system.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 执行命令后，我们可以在上一个截图中看到结果-已删除了118个应用程序记录和467个系统记录。让我们在受害者系统中使用事件查看器确认一下。
- en: '![Antivirus killing and log deletion](img/3589_09_31.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_31.jpg)'
- en: We can see that all logs have been successfully deleted from the victim's system.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到所有日志已成功从受害者系统中删除。
- en: Summary
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned the strategies for clearing our tracks and avoiding
    getting caught by the administrator by the use of simple Meterpreter scripts.
    Since firewalls and antiviruses are the main defenses against the attack vectors
    of an attacker, it becomes extremely important for an attacker to pay heed to
    these things. We also came across multiple techniques for disabling a system firewall
    and hence the victim's defenses. We followed the approach of an attacker and were
    able to hack safely into the system by clearing our traces. So, until now, we
    have covered the second phase of post-exploitation, which is one of the most important
    phases in the exploitation process. In the next chapter we will cover the techniques
    of working with backdoors and setting them up on the victim's system for retaining
    permanent access.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了使用简单的Meterpreter脚本清除我们的痕迹并避免被管理员抓住的策略。由于防火墙和杀毒软件是对抗攻击者攻击向量的主要防御手段，攻击者非常重视这些事情。我们还学习了多种禁用系统防火墙和受害者防御的技术。我们按照攻击者的方式，并且成功地清除了我们的痕迹，安全地侵入了系统。因此，到目前为止，我们已经涵盖了渗透测试的第二阶段，这是渗透过程中最重要的阶段之一。在下一章中，我们将介绍与后门合作的技术，并在受害者系统上设置后门以保持永久访问。
- en: References
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'The following are some helpful references that shed further light on some of
    the topics covered in this chapter:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些有用的参考资料，进一步阐明了本章涉及的一些主题：
- en: '[http://en.wikipedia.org/wiki/Firewall_(computing)](http://en.wikipedia.org/wiki/Firewall_(computing))'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/Firewall_(computing)](http://en.wikipedia.org/wiki/Firewall_(computing))'
- en: '[http://pentestlab.wordpress.com/2012/04/06/post-exploitation-disable-firewall-and-kill-antivirus/](http://pentestlab.wordpress.com/2012/04/06/post-exploitation-disable-firewall-and-kill-antivirus/)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://pentestlab.wordpress.com/2012/04/06/post-exploitation-disable-firewall-and-kill-antivirus/](http://pentestlab.wordpress.com/2012/04/06/post-exploitation-disable-firewall-and-kill-antivirus/)'
- en: '[http://www.securitytube.net/video/2666](http://www.securitytube.net/video/2666)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.securitytube.net/video/2666](http://www.securitytube.net/video/2666)'
