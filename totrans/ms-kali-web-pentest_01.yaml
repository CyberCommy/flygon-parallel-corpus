- en: Chapter 2. Guidelines for Preparation and Testing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Understanding how target applications are built, as discussed in [Chapter 1](000.html#),
    *Common Web Applications and Architectures*, will certainly help us go further
    than a cursory pen test. All of this understanding can be a double-edged sword.
    More complex applications can overwhelm the most technically skilled testers.
    When we're testing, we need to ensure we are covering the entire scope of the
    requirements. It may be tempting to do this on-the- fly, but if you are anything
    like me, we're going to need to have a plan. Having a rigorous process and well-understood
    rules will help us provide consistent, valuable information to our customers.
    This extra formal treatment will also ensure we get full coverage of the scope
    that we've agreed upon with our customers.
  prefs: []
  type: TYPE_NORMAL
- en: These plans can exist as either a part of the customer's process or as something
    that we bring through a contract â�� we maybe internal employees andÂ contractors
    or brought in as outside consultants. In the first case, you maybe tasked with
    testing against your own employer's environment or products. In this case, your
    orders will likely flow from internal processes or project requirements. Ad hoc
    testing ordered by management isn't uncommon, but be sure that the scope and processes
    are formally agreed upon to ensure all parties are protected.Â  In the latter
    case, you or your employer may be hired by a customer to provide testing.Â  In
    these cases, the scope, **Statement of Work** (**SOW**), and contract, as a whole,
    will need to be vetted by both parties to ensure that boundaries are preserved.Â
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the entire process, keep in mind why we are there â�� we're there
    to help the customers, not to humiliate or *show up*Â their staff.Â  Whether your
    involvement in testing is by invite or mandate, the ethical hacking community
    should commend organizations that submit to testing, as it maybe our personal
    data or financial status someday that is at stake. Let's do what we can to make
    sure we're not tomorrow's victims.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll discuss the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Some of the comprehensive testing frameworks that we can draw upon and modify
    for our own use
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ethical and legal principles that can guide our conduct
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guidance on setting up aÂ lab and sanctioned targets to rehearse the testing
    skills, which we'll be exploring for the duration of thisÂ book
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Picking your favorite testing framework
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: In the race to establish leadership in the fields of penetration testing and
    web app pen testing in particular, several organizations, companies, and councils
    have sprung up. Some of these organizations offer a product-neutral methodology,
    while others have perspectives that unabashedly drive their recommended pen testing
    approach or *framework*. This testing framework's contents and format will vary
    greatly, so we'll need to sort through the options and see which one makes sense.
  prefs: []
  type: TYPE_NORMAL
- en: Government supported centers and institutes such as the **United States Computer
    Emergency Readiness Teams**Â (**USÂ CERT**), **Computer Security Resource Center**
    (**CSRC**) at the **National Institute of Standards and Technology** (**NIST**),
    and the newly established **European Union Agency for Network and Information
    Security** ([https://www.enisa.europa.eu](https://www.enisa.europa.eu/) ) tend
    to be focused on guidelines for defenders, thatÂ offer some guidance that can
    certainly be turned into test requirements and focus areas.
  prefs: []
  type: TYPE_NORMAL
- en: So, back to the potential paths; picking a framework often comes down to one's
    comfort zone and familiarity with the program or perspective. For many industries,
    compliance and regulations will also drive the choice. There is no *right*Â answer,
    but the selection can have an impact on the architecture and result in strengths
    and weaknesses in the end result. Many a times our own training budgets, schedules,
    product set, and backgrounds will dictate how we arrive at our process.Â  We may
    get there through a certification track, a project affiliation, or through something
    organic to our employer. Let's take a look at some of the most popular methodologies.
  prefs: []
  type: TYPE_NORMAL
- en: Frameworks through a product
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is a book focused on Kali Linux, but it's worthwhile to mention that there
    is a slew of products that attempt all-in-one web pen testing. Some of these are
    very well crafted and maintained, while others have been neglected in recent years
    but still find advocates based on a unique feature set or an interface.
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali Linux itself has some tool suites that it can host to provide a comprehensive
    coverage of the testing lifecycle.Â  Here is a list of some of the more prevalent
    options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**IronWASP** ([http://ironwasp.org/index.html](http://ironwasp.org/index.html)):
    This free and open source package runs on Mac and Windows or WINE on Linux, and
    it comes with a ton of great out-of-the-box capabilities. What makes it really
    powerful, however, is that you can craft your own or borrow someone else''s modules
    written in VB.NET, C#, Ruby, or Python to make the tool your own! Its website
    provides well-scripted detailed videos to show you what the tool can do.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Veracode** ([http://www.veracode.com/products/dynamic-analysis-dast/web-application-security-testing](http://www.veracode.com/products/dynamic-analysis-dast/web-application-security-testing)):
    A new entry into the arena is the SaaS offering Veracode to perform cloud-hosted
    web application penetration testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IBM Security AppScan** ([http://www-03.ibm.com/software/products/en/appscan](http://www-03.ibm.com/software/products/en/appscan)):
    This all-in-one web and mobile application test suite can be turned loose on target
    applications to automatically report back on compliance, vulnerabilities, and
    suggested fixes. It is a popular on-premise option for larger enterprises and
    has offerings for all phases of the **Software Development Life Cycle** (**SDLC**).
    More recently, they have begun to offer cloud-hosted variants. IBM''s solution
    also sets itself apart from the rest, thanks greatly to its integration with similar
    security and development ecosystems. They offer differentiation thanks toÂ synergies
    between their **System Event and Incident Manager** (**SEIM**), QRadar, and their
    portfolio of web-focused IDS/IPS products and code development platforms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rapid7 appspider** ([https://www.rapid7.com/products/appspider/](https://www.rapid7.com/products/appspider/)):
    Where IBM focuses on its own ecosystem, Rapid7 has a similar suite of capabilities
    but focuses on integration with technology partners. Appspider is capable of many
    of the same things but is geared toward integration with DevOps tools and a comprehensive
    list of SEIM, IDS/IPS, and WAF tools. It can even automate patching, replay attacks,
    and can automatically generate rules; it is a top-end performer with respect to
    speed, coverage, and usability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HP WebInspect** ([http://www8.hp.com/us/en/software-solutions/webinspect-dynamic-analysis-dast/](http://www8.hp.com/us/en/software-solutions/webinspect-dynamic-analysis-dast/)):
    Much like IBM''s offerings, WebInspect is quite focused on a single-vendor approach
    for all things such as security, development, and coding, and then penetration
    testing and remediation. The costs and complexity of this solution make it a better
    option for in-house analysis rather than for outside pen testers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Acunetix** ([http://www.acunetix.com](http://www.acunetix.com)): Unlike the
    IBM, Rapid7, and HP WebInspect options, the Acunetix web vulnerability scanner
    concentrates on pen testing support and reporting,Â and does not delve intoÂ automating
    rules and patching.Â  This is not a bad thing; what it does, it does well; Â Often,
    these features are unused when an external pen tester is at work.Â  Acunetix offers
    rich reporting and frequently finishes the head of the class in efficacy, coverage,
    and features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Train like you play
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Certifications are a great means by which you can climb up the learning curve
    and launch your web pen testing career. Chances are if you are reading this book,
    you have one or more of these specialized certifications already under your belt.
    Most certification blueprints walk the ethical hacker through the flow of a test,
    which closely mimics the Lockheed MartinÂ **Cyber Kill ChainÂ **Â® ([http://www.lockheedmartin.com/us/what-we-do/aerospace-defense/cyber/cyber-kill-chain.html](http://www.lockheedmartin.com/us/what-we-do/aerospace-defense/cyber/cyber-kill-chain.html)
    shown in the following figure). While these are not frameworks in name, they can
    provide a *soup to nuts*Â methodology that can be integrated and adapted for use
    in your own process.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B03918_02_01.png)'
  prefs: []
  type: TYPE_IMG
- en: The Cyber Kill Chain drives most of the attack and test methodologies, and forms
    the basis for most of theÂ industry certifications.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Lockheed Martin is credited with having created the Cyber Kill Chain Â in a
    paper calledÂ *Intelligence-Driven Computer Network Defense Informed by Analysis
    of Adversary Campaigns and Intrusion Kill Chains*Â ([http://www.lockheedmartin.com/content/dam/lockheed/data/corporate/documents/LM-White-Paper-Intel-Driven-Defense.pdf](http://www.lockheedmartin.com/content/dam/lockheed/data/corporate/documents/LM-White-Paper-Intel-Driven-Defense.pdf)).
  prefs: []
  type: TYPE_NORMAL
- en: Two leading internationalÂ organizations, EC-Council and GIAC/SANS, established
    themselves as certification-focused organizations that have gained mindshare through
    qualifying security professionals, which, in turn, speaks wellÂ for their programs.
    Offensive Security (the creators/maintainers of Kali Linux) has also offered well-respected
    Kali-focused certifications that are revered for their practical testing approach.
  prefs: []
  type: TYPE_NORMAL
- en: The EC-Council approach
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The EC-Council's Hacking and Hardening Corporate Web App/Web Site CAST 613 course
    ([https://www.eccouncil.org/programs/web-application-security/](https://www.eccouncil.org/programs/web-application-security/))
    tackles a selection of the most impactful and feared attacks. Their course touches
    on the highlights and is focused on assisting developers in understanding how
    to better secure and test their applications. Given that the EC-Council does not
    have an offensive certification focused on purely web app pen testing, this course
    and certification can augment a more general pen testing methodology as learned
    in the EC Council's **Certified Ethical Hacker** (**CEH**) certification. As with
    many EC-Council certifications, materials are available either through their training
    courses or through third-party texts available at bookstores and online.
  prefs: []
  type: TYPE_NORMAL
- en: We'll refer to some more of the ethical guidelines from the EC-Council, but
    given that this is not as popular a path as their CEH, look at more established
    standards for web pen testing in particular.
  prefs: []
  type: TYPE_NORMAL
- en: The GIAC/SANS approach
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: GIAC and SANS together offer events, training paths, and a robust community
    that is often considered a favorite for US and NATO government cyber security
    professionals, and it is often listed in requirements for the many roles there.
    Among their offerings is the **GIAC Web Application Penetration Tester** (**GWAPT**)
    certification. GWAPT is a standalone certification that closely mirrors the Cyber
    Kill Chain, and their curriculum is available only at conferences and through
    online courses.
  prefs: []
  type: TYPE_NORMAL
- en: The high cost of their training is considered well worth it, but it often limits
    the breadth of audience that can access their methodology and framework. Consider
    the GWAPT a more advanced certification, well-worth pursuing as a next-step in
    your web pen testing career.
  prefs: []
  type: TYPE_NORMAL
- en: The Offensive Security approach
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Offensive Security is the organization that brings us Kali Linux, as well as
    some active blogs and thought leadership in the area of penetration testing and
    forensics. While they are most known in the certification realm for their **Offensive
    Security Certified Profession** (**OSCP**), they also offer the **Offensive Security
    Web Expert** (**OSWE**,Â [https://www.offensive-security.com/information-security-certifications/oswe-offensive-security-web-expert/](https://www.offensive-security.com/information-security-certifications/oswe-offensive-security-web-expert/))
    . This rigorous training features a 24-hour practical exam that is the hallmark
    of their certification strategy. While Offensive Security is focused on practical
    aspects, they do, in fact, teach a hands-on methodology that many use as their
    baseline. Their operating system, Kali Linux, is the focus, so we'll certainly
    heed their guidance in many areas in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Open source methodologies and frameworks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Open source advocates provide us with some very thorough options that we can
    select for our starting point. Each option offers a structure that is typically
    free or biased toward a specific vendor or toolset. In fact, most of the open
    source frameworks developed by not-for-profit organizations can only be implemented
    with a cross-section of tools for full coverage. Additional guidance from organizations
    such as the **World Wide Web Consortium** (**W3C**, [https://www.w3.org](https://www.w3.org)
    ) and the **Web Applications Security Council** (**WASC**, [http://www.webappsec.org](http://www.webappsec.org)
    ) can assist in rounding out your processes.
  prefs: []
  type: TYPE_NORMAL
- en: ISECOM's OSSTMM
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The **Institute for Security and Open Methodologies** (**ISECOM**) publishes
    a paywall-protected version of their most recent **Open Source Security Testing
    Methodology Manual** (**OSSTMM**,Â [http://www.isecom.org/research/osstmm.html](http://www.isecom.org/research/osstmm.html));
    and version 4 is the latest one.Â  A s*ilver*Â or higher-status member can access
    the document, but earlier versions are accessible for free.
  prefs: []
  type: TYPE_NORMAL
- en: The OSSTMM works at a higher level to describe the processes for all forms of
    penetration testing, with web application testing elements sprinkled throughout.Â 
    We'll refer to it occasionally as we proceed, but consider this an optional reference
    for this book.
  prefs: []
  type: TYPE_NORMAL
- en: ISSAF
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The **Information Systems Security Assessment Framework** (**ISSAF**, [https://sourceforge.net/projects/isstf/](https://sourceforge.net/projects/isstf/))
    is, for all intents and purposes, a mothballed project that nevertheless provides
    great information. It can help understand an entire enterprise-grade assessment
    process, which not only includes pen testing, but also covers incident and change
    control programs, **Security Operations** (**SecOps**) procedures, and the physical
    security of the environment, for instance. What the ISSAF lacks more current application
    testing guidance, it makes up for this in providing sample NDAs, contracts, questionnaires,
    and other useful templates that can help craft the appropriate deliverables.
  prefs: []
  type: TYPE_NORMAL
- en: 'Of note to us is that the ISSAF covers these discipline areas, among others:'
  prefs: []
  type: TYPE_NORMAL
- en: Project management, guidelines, and best practices throughout the assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The assessment methodology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical control assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unix /Linux, Windows, Novell, and database system security assessments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web application security assessments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Internet user security and social engineering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The legal aspects of security assessment projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Templates for **Non-Disclosure Agreement** (**NDA**) and security assessment
    contracts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A **Request for Proposal** (**RFP**) template
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some guidelines for penetration testing lab design (covered later in this chapter)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NIST publications
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: NIST has, for almost three decades, released special publications to provide
    best practices and guidance in many technology areas, and the **Computer Security
    Resource Center** (**CSRC**) has led the way in providing many freely accessible
    publications in the area of cyber security defense. NIST has also released valuable
    guides for testing the efficacy and coverage of an organization's security approach.
  prefs: []
  type: TYPE_NORMAL
- en: NIST's first foray into this area, their special publication,Â *Technical Guide
    to Information Security Testing and Assessment* (NIST 800-115 ([http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-115.pdf](http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-115.pdf)),
    is somewhat dated and now is no longer maintained manually. It is worth the time
    to reference SP 800-115, as it still provides useful information for all forms
    of penetration testing, web applications included. Technical currency aside, its
    value lies in its methodical treatment of testing data, maintaining proper controls,
    and building your testing toward a valuable report.
  prefs: []
  type: TYPE_NORMAL
- en: The more recent SP of interest is *Assessing Security and Privacy Controls in
    Federal Information Systems and Organizations*Â (SP 800-53A, available atÂ [http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53Ar4.pdf)](http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53Ar4.pdf).Â 
    This presentation is less focused on the administrative process and more so on
    providing guidelines around how to best craft your own policies. SP 800-53A also
    offers guidance on incorporating their rightful place within the SDLC (as mentioned
    inÂ [Chapter 1](000.html#), *Common Web Applications and Architectures*). As an
    added bonus, SP 800-53A includes several appendices that offer some assessment
    and reporting information; Appendix F includes a completeÂ suite of tests that
    can be incorporated into your own process. NIST test scenarios are ranked by coverage
    and criticality, offering some much-needed rigor to an otherwise massive cache
    of publically known vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: OWASP's OTG
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The most widely accepted reference in web pen testing is the OWASP Testing Guide
    also known asÂ OTG, Version 4 ([https://www.owasp.org/index.php/OWASP_Testing_Project](https://www.owasp.org/index.php/OWASP_Testing_Project)).
    The OWASP has led the field for many years due to heavy participation from the
    community and its stellar reputation for anticipating trends and teaching the
    community to test against them. OWASP's influence is a major driver in presentations
    at conferences such as those run by SANS, Black Hat, and DevCon, and their top
    10 web security threats are a must-read for any of us.
  prefs: []
  type: TYPE_NORMAL
- en: The OTG, much like the NIST guidance, provides some tips and pointers for incorporating
    testing in appropriate phases. OWASP maintains the OTG more regularly that the
    other full-coverage frameworks discussed previously, with new releases of both
    the top 10 and the OTG every three to four years. The bulk of the OTG, however,
    dives right into the web-specific testing that can provide full coverage of not
    only the top 10 threats but a whole host of vulnerabilities that are actively
    tracked by the OWASP team.
  prefs: []
  type: TYPE_NORMAL
- en: 'While the OTG covers a lot of ground, it begins with a primer including OWASP''s
    best practices in the SDLC and the proper phases for tests. The OTS also goes
    beyond technical vulnerabilities to show how target customers may benefit from
    *red teaming* (conducting mock security intrusions) and the many recons and footprinting
    aspects particular to web pen testing. Once this foundation is discussed, the
    following sections break the web app pen testing down into logical groups focused
    on a specific area of the architecture that can be covered by similar tests, tools,
    and in similar phases of development or deployment:'
  prefs: []
  type: TYPE_NORMAL
- en: Identity management, authentication, and authorization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Session management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Input validation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Error handling
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cryptography
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business logic (the processing and manipulation of data based on inputs or updates)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Client-side (typically victim browsers)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you haven't guessed by now, the OWASP testing guide is what we'll be referring
    to as our foundation through this book. In practice, other frameworks may work
    better for you, but the currency, focus, completeness, and the accessibility of
    their documentation as well as the tests they recommend provide a firm foundation
    for us to use it with Kali Linux in testing our target applications.
  prefs: []
  type: TYPE_NORMAL
- en: Keeping it legal and ethical
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'Wouldn''t it be great if our testing processes kept us out of jail and reduced
    the risk for us and our customers? There is an exponentially growing body of laws
    at the national, provincial, state, and local levels in most countries. The many
    news stories we are all bombarded with make it clear that government bodies at
    all levels throughout the world are still trying to determine how to find the
    right balance of privacy, confidentiality, and accountability for cyber-security
    related events. It turns out that, in the vast majority of government bodies,
    those making the laws might be ill-suited to understand the complexities and form
    effective regulations. One Complication for us is the fact that we are very rarely
    operating in a single jurisdiction: interstate and international entanglements
    are perilous and dynamic. How can we save ourselves from constant paralysis and
    fear in doing our job?'
  prefs: []
  type: TYPE_NORMAL
- en: What is legal?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: First, the locations of the sites and theÂ legal jurisdiction governing the
    businessesÂ that we are testing will each present distinct laws and regulations
    that we should be aware of. In the United States and European Union, actions that
    cross state or member borders fall under the primary jurisdiction of their overarching
    regulations. To avoid running afoul of these laws, you maybe well served to search
    on your governing body's laws (for the EU, [http://eur-lex.europa.eu/homepage.html](http://eur-lex.europa.eu/homepage.html))
    that offer a good starting place, while the US Department of Justice offers similar
    search capabilities but summarizes national code in the guide calledÂ *Prosecuting
    Computer Crimes*Â [https://www.justice.gov/sites/default/files/criminal-ccips/legacy/2015/01/14/ccmanual.pdf)](https://www.justice.gov/sites/default/files/criminal-ccips/legacy/2015/01/14/ccmanual.pdf)).
    US laws, which are similar to theÂ Computer Fraud and Abuse Act of 1984, the Economic
    Espionage Act of 1996, theÂ **Federal Information Security Management Act** (**FISMA**),Â Cyber
    Security Enhancement Act of 2002, andÂ **Uniting and Strengthening America by
    Providing Appropriate Tools Required to Intercept and Obstruct Terrorism** (**USA
    PATRIOT**, from 2001), also impact the legal precedent and principles of American
    cyber laws. Regulations such as Sarbanes-Oxley, the **Health Insurance Portability
    and Accountability Act** (**HIPAA**), and the **Payment Card Industry Digital
    Security Standard** (**PCI-DSS**) maybeÂ applied to many of the customers that
    we'll be interacting with, depending on their function and governing agencies.
  prefs: []
  type: TYPE_NORMAL
- en: The EU just enacted a new far-reaching regulation called the **General Data
    Protection Regulation** (**GDPR**, [http://www.eugdpr.org](http://www.eugdpr.org))
    that helps define the responsibilities of companies, and it will certainly impact
    our roles for projects involving companies doing business in the EU. The Indian
    Government recently instituted its own comprehensiveÂ National Cyber Security
    Strategy of 2013 and provides access to all of them through their Ministry of
    Electronics and Information Technology siteÂ ([http://meity.gov.in/content/cyber-laws-security](http://meity.gov.in/content/cyber-laws-security)).
    Many other Asian and African nations have also continually revised their own laws.
    It is worth investing in reference books and legal journals that cover the constantly
    evolving legal landscape, which can help you stay on the right side of the law.Â
  prefs: []
  type: TYPE_NORMAL
- en: As your practice grows, it maybe worth having a lawyer or firm, concentrating
    on laws around cyber security, data, privacy, and ethical hacking, on a retainer
    toÂ help craft you legally sound contracts and provide representation in the event
    of any legal action with which you and your company maybe involved.
  prefs: []
  type: TYPE_NORMAL
- en: What is ethical?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While not legally binding, ethical guidelines can be a bellwether for where
    laws and regulations are heading and, at the very least, a higher bar than most
    government entities. What they lack in legal language, they than make up for in
    plain terms that typically steer us away from any legally questionable areas that
    may arise. The EC-CouncilÂ and GIAC/SANS both publish a Code of Ethics ([https://www.eccouncil.org/code-of-ethics/](https://www.eccouncil.org/code-of-ethics/)
    and [https://www.giac.org/about/ethics)](https://www.giac.org/about/ethics)),
    as do many other industry institutions and certifying authorities. Some commercial
    tool vendors or providers also have expectations for proper use and frown upon
    nefarious activities using their toolsets. By enrolling as a member or holding
    their certifications, you are expected to uphold their standards. Â
  prefs: []
  type: TYPE_NORMAL
- en: In the natural evolution of a pen testing practice, it is likely that issues
    will be encountered as projects are discussed or completed, which maybe ambiguous
    withinÂ the established standard operating procedures, code of ethics, or law.
    In these cases, it is best to step back and assess the potential short- and long-term
    harm or benefits that may arise with each of the options available. Having agreed
    to a set of legal and ethical boundaries can be an asset here - sometimes the
    best approach is to avoid ethical or legal gray areas altogether and stick with
    processes and actions that are firmly justified.
  prefs: []
  type: TYPE_NORMAL
- en: Labbing - practicing what we learn
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: So you are probably asking, When can we have some pen testing fun? Let's just
    say *soon*. We have to establish a safe yet representative environment that can
    provide ripe targets for the various tests we'd like to run. We also want to push
    the limits without impacting the performance of some real production applications
    or their underlying systems or supporting networks. As *variety is the spice of
    life*, it also holds true in penetration testing. Your efficacy in testing will
    be greatly improved with some exposure and knowledge of a variety of platforms.
    There are some great resources such as Packt's own *Building Virtual Pentesting
    Labs for Advanced Penetration Testing - Second Edition* by *Kevin Cardwell* ([https://www.packtpub.com/networking-and-servers/building-virtual-pentesting-labs-advanced-penetration-testing-second-edition](https://www.packtpub.com/networking-and-servers/building-virtual-pentesting-labs-advanced-penetration-testing-second-edition)),
    if you would like to dive into a more rigorous all-purpose pen testing range.
    In this section, we'll briefly discussÂ the sandbox or laboratory that we'll be
    using in this book to rehearse our pen testing approaches.
  prefs: []
  type: TYPE_NORMAL
- en: 'For reference, my lab for this book looked similar to the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B03918_02_02-1.png)'
  prefs: []
  type: TYPE_IMG
- en: The book'sÂ penetration testing virtual lab provides plenty of room toÂ explore
    and rehearse new attack methods.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a virtualized environment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: White hats, just like any IT professionals, often have zealous allegiance to
    a specific platform and operating system. I fully expect that readers of this
    book will be using a laptop running some flavor of Microsoft Windows, Mac OS (X
    or Sierra), or Linux/BSD (Ubuntu/Debian, Fedora/RedHat, SUSE, FreeBSD, and so
    on). Don't sweat the small stuff - so long as it is a fairly new and well-provisioned
    laptop or desktop (4 CPU modern cores, Ethernet and wireless, some USB (version
    2 or 3) sockets, and 16 GB RAM minimum), it should at least get you started.
  prefs: []
  type: TYPE_NORMAL
- en: At the risk of opening yet another fanatical debate, we'll want to select a
    virtualization platform to run on the top of this (sorry!). Virtualization helps
    us level the playing field and actually improve our lab's versatility by employing
    a virtualization platform to establish a virtual network segment and install and
    access virtual machines (VMs) for Windows and Linux desktop and server variants.
    Choose what fits within your budget and preference. Options such as Oracle's Virtual
    Box, VMWare's Workstation or Fusion, Citrix Xen, or even Parellels (on the Mac)
    are popular. Performance in web application penetration testing isn't as big a
    deal as in some other forms, as we won't be doing real-time cracking or hashing
    in most of our work.
  prefs: []
  type: TYPE_NORMAL
- en: It should be noted that you can certainly use dedicated servers or barebones
    (physical) hosts and network equipment to build a lab, but we'll be able to do
    everything in this book using our virtual sandbox. In actual practice, it is more
    common to see professional pen testers use virtual machines to perform their testing,
    as it helps assure customers that proper sanitization and isolation are occurring.
    The tester can merely host the VM on a removable or networked drive and delete
    the VM when the project is complete.
  prefs: []
  type: TYPE_NORMAL
- en: Our penetration testing host
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We'll be using the latest (2016.2 at the time of writing this book) version
    of Kali Linux, using the readymade VMs from their repository ([https://www.offensive-security.com/kali-linux-vmware-virtualbox-image-download/](https://www.offensive-security.com/kali-linux-vmware-virtualbox-image-download/)).
    I would encourage modifying the image to have a larger partition (I used a 1 TB
    hybrid USB 3.0 drive to store all images, and set the Kali image to a single partition
    of 100GB). Â This larger footprint will accommodate the extensive archives of
    websites and data collection. You can also enable additional virtual network interfaces
    cards (NICs) if you so desire, but I mapped the single NIC to the appropriate
    interface for each form of connectivity required using VMWare Fusion's machine
    settings. For MITM attacks, we'll provision a second NIC.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a target-rich environment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A majority of the server targets that we'll encounter will be hosted on the
    Linux or Windows operating systems, and the clients will be Linux, Windows, Mac
    OS, or mobile (Android, iOS, Windows Phone, or Blackberry). Let's take the server
    and client sides separately.
  prefs: []
  type: TYPE_NORMAL
- en: Finding gullible serversÂ
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If you have an active **Microsoft Developers Program** (**MSDP**) license, you
    can use these images to test; but for the rest of us without the budget to support
    this, you can download full versions of almost any operating system or software
    package from Microsoft for an evaluation term of 60 to 180 days at their evaluation
    centerÂ website ([https://www.microsoft.com/en-us/evalcenter/](https://www.microsoft.com/en-us/evalcenter/)).
    Both options are suitable, but the frequent need to start fresh and the non-existentÂ cost
    of the evaluation licenses make the latter a perfectly suitable option. I would
    recommend having access to images for MS Server 2008, 2012, and 2016 at a minimum,
    with images configured for IIS and other important web services.
  prefs: []
  type: TYPE_NORMAL
- en: Linux clients are easier. You can locate options for pretty much any variant
    you need; and for enterprise/commercial variants, you can find a free and community-supported
    approximation that is extremely close. Most Linux implementations for web services
    include not only the Linux OS but also the appropriate Apache web server, MySQL
    database, and PHP versions, which together form the LAMP web stack. Having a current
    image of a Debian, Ubuntu, CentOS (for Red Hat targets), Fedora, or SuSE Linux
    can ensure you are ready for any potential scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: The best thing to happen to aspiring pen testers is the advent of the hackable
    server VMs, of which there are several that allow practicing attempts against
    a wide variety of vulnerabilities. Rapid7 released and supported theÂ Metasploitable
    VM ([https://information.rapid7.com/metasploitable-download.html](https://information.rapid7.com/metasploitable-download.html)),
    which is a little longer in the tooth but is well worth in practicing against
    for general penetration testing. Web penetration testing, however, benefits from
    an appropriate image with preconfiguredÂ applications, so we can get right to
    the fun stuff. Â The images of interest are the **Damn Vulnerable Web Application**
    (**DVWA**,Â [http://www.dvwa.co.uk](http://www.dvwa.co.uk)), the OWASP Broken
    Web App ([https://sourceforge.net/projects/owaspbwa/files/](https://sourceforge.net/projects/owaspbwa/files/))
    and the Beebox VM (a VM-based version of the Buggy Web Application or *bwAPP*Â module,
    available atÂ [http://www.itsecgames.com](http://www.itsecgames.com)). Additional
    VMs for practice can be found at VulnHub ([https://www.vulnhub.com/](https://www.vulnhub.com/)).
  prefs: []
  type: TYPE_NORMAL
- en: Unwitting clients
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If you are averse to disclosing your information and creating an account just
    to download a suitable MS desktop OS, you can also download OS and browser combination
    images that Microsoft encourages for the use of testers and developers ([https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/](https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/)).
    You'll want a selection of Windows 7, 8, and 10 hosts to play with for the sake
    of completeness; at various points in the book, it will make sense to try each
    of the multitude of browsers available (Internet Explorer/Edge, Firefox, Chrome,
    and so on).Â While the MSDN, Eval Center, and developer downloads will all work,Â for
    ease of setting up new environments, the latter approach sufficed for most of
    my preparatory work.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile device operating systems can be run virtually with varying success, with
    iOS being the lone holdout (good luck getting iOS running virtually!)Â Most of
    our techniques will exploit the browsers alone, so using a browser plugin or developer
    tool configuration can do the trick. A quick search from Firefox or Chrome for
    *user agent browser changer*Â will yield tools that allow a desktop browser to
    emulate any number of other browsers, both mobile and desktop based. I used the
    Kali VM's Firefox or Iceweasel browser whenever possible, falling back on Chrome
    on the same VM or IE/Edge, Safari, or others on the appropriate Windows VM, or
    my laptop's browser as needed.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Web application penetration testing can be a big undertaking. Failing to plan
    is planning to fail; it is essential that we have a well-defined process or testing
    framework in place that is both well understood by our technical team, as well
    as sanctioned by the customer's management for use in their environment. Pen testing
    inevitably forces us to understand some non-technical aspects of the job too.
    When we are targeting applications we do not own, across infrastructures that
    are provided by third parties, we will most certainly have to abide by the various
    rules and ethical norms of those many stakeholders. Â There are a lot of different
    angles to achieving this understanding, so at the very least this should be a
    deliberate and a well-thought out process.Â
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, weÂ took a look at some of the more prevalent testing methodologies
    and frameworks that we can draw from to establish our own process and practice.
    Â We also spent some time looking at how to scope our legal and ethical responsibilities.
    Unlike the black hat hackers out there, we are here to help insulate our customers
    against attacks, so we have rules to follow. All of the homework in defining our
    process and understanding our boundaries is tested against the sandbox we put
    together, and we covered some aspects of establishing a sandbox or lab of your
    own. Your own environment may look very different: different strokes for different
    folks!'
  prefs: []
  type: TYPE_NORMAL
- en: In our next chapter, we will finally start to delve into how we can recon and
    scope our targets. We will look at the tools available to make non-intrusive scans
    and stay off our target site's radar, as we plunge into how they are structured,
    reveal potential vectors for access, and catalog adjacencies and notes of interest
    that can help us in later phases of the test. Â Let's get to it!
  prefs: []
  type: TYPE_NORMAL
