- en: Kill the Process
  prefs: []
  type: TYPE_NORMAL
- en: Any program that is running on your system is a process. In this chapter, you
    will learn all about Linux processes. You will learn how to view process information.
    You will also learn how to send different signals to a process. Furthermore, you
    will understand the differences between foreground and background processes.
  prefs: []
  type: TYPE_NORMAL
- en: What is a process?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A process is simply an instance of a running program. So any program running
    on your system is a process. All of the following are examples of processes:'
  prefs: []
  type: TYPE_NORMAL
- en: Firefox or any web browser running on your system is a process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your Terminal that you are running right now is a process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any game you may play on your system is a process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Copying files is a process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And just like the case with files, every process is owned by a specific user.
    The owner of a process is simply the user who started that process.
  prefs: []
  type: TYPE_NORMAL
- en: 'To list all the processes that are owned by a specific user, you can run the
    command `ps -u` followed by the username:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, to list all the processes that are owned by `elliot`, you can
    run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The first column in the output lists the **process identifiers** (**PIDs**).
    The PID is a number that uniquely identifies a process, just like with file `inodes`.
    The last column of the output lists the process names.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the `ps -e` command to list all the processes that are running
    on your system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also use the `-f` option to get more information:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The first column of the output lists the usernames of the process owners. The
    third column of the output lists the **parent process identifiers** (**PPIDs**).
    Well, what the heck is a parent process?
  prefs: []
  type: TYPE_NORMAL
- en: Parent process versus child process
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A parent process is a process that has started one or more child processes.
    A perfect example will be your terminal and your bash shell; when you open your
    terminal, your bash shell is started as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get the PID of a process, you can use the `pgrep` command followed by the
    process name:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, to get the PID of your terminal process, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The PID of my terminal is `10009`. Now, let''s get the PID of the bash process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The PID of my bash shell is `10093`. Now, you can get the information of your
    bash process by using the `-p` option followed by the bash PID:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'You can see from the output that the PPID of my bash process is equal to the
    PID of my terminal process. This proves that the terminal process has started
    the bash process. In this case, the bash process is referred to as the child process
    of the terminal process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c2580a3e-58f9-4bee-a96a-f64ba220be44.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: Parent process versus child process'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `top` command is a very useful command that you can use to view processes''
    information in real time. You can check its `man` page to learn how to use it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The output for the preceding command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/af6b849c-c266-4a45-8ac4-416ca8afc82e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: The top command'
  prefs: []
  type: TYPE_NORMAL
- en: Foreground versus background processes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are two types of processes in Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: Foreground processes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Background processes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A foreground process is a process that is attached to your terminal. You have
    to wait for a foreground process to finish before you can continue using your
    terminal.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, a background process is a process that is not attached to
    your terminal, and so you can use your terminal while a background process is
    running.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `yes` command outputs any string that follows it repeatedly until killed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, to output the word `hello` repeatedly on your terminal, you can
    run the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that it will keep running, and you can''t do anything else on your terminal;
    this is a prime example of a foreground process. To claim back your terminal,
    you need to kill the process. You can kill the process by hitting the *Ctrl* +
    *C* key combination as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'As soon as you hit *Ctrl* + *C*, the process will be killed, and you can continue
    using your terminal. Let''s do another example; you can use the `firefox` command
    to start up Firefox from your terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The Firefox browser will start, but you will not be able to do anything on your
    terminal until you close Firefox; this is another example of a foreground process.
    Now, hit *Ctrl* + *C* to kill the Firefox process so you can claim back your terminal.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can start up Firefox as a background process by adding the ampersand character
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Firefox is now running as a background process, and you can continue using your
    terminal without having to close Firefox.
  prefs: []
  type: TYPE_NORMAL
- en: Sending signals to processes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can interact and communicate with processes via signals. There are various
    signals, and each signal serves a different purpose. To list all available signals,
    you can run the `kill -L` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Notice that every signal has a numeric value. For example, `19` is the numeric
    value for the `SIGSTOP` signal.
  prefs: []
  type: TYPE_NORMAL
- en: 'To see how signals work, let''s first start Firefox as a background process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that the PID of Firefox is `4218` on my system. I can kill (terminate)
    Firefox by sending a `SIGKILL` signal as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'This will immediately shut down Firefox. You can also use the numeric value
    of the `SIGKILL` signal instead:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'In general, the syntax for the `kill` command is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s start Firefox again as a background process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that the PID of Firefox is `4907` on my system. Now go ahead and start
    playing a YouTube video on Firefox. After you have done that, go back to your
    terminal and send the `SIGSTOP` signal to Firefox:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'You will notice that Firefox becomes unresponsive and your YouTube video is
    stopped; no problem – we can fix that by sending the `SIGCONT`signal to Firefox:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: This will resurrect Firefox, and your YouTube video will now resume.
  prefs: []
  type: TYPE_NORMAL
- en: 'So far, you have learned three signals:'
  prefs: []
  type: TYPE_NORMAL
- en: '`SIGKILL`: Terminates a process'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SIGSTOP`: Stops a process'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SIGCONT`: Continues a process'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can use process names instead of process identifiers with the `pkill` command.
    For example, to close your terminal process, you can run the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s do something funny; open your terminal and run the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Haha! Your terminal is now frozen. I will let you handle that!
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many other signals that you can send to processes; check the following
    `man` page to understand the use of each signal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Working with process priority
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Each process has a priority that is determined by the niceness scale, which
    ranges from **-20** to **19**. The lower the nice value, the higher the priority
    of a process, so a nice value of **-20** gives the highest priority to a process.
    On the other hand, a nice value of **19** gives the lowest priority to a process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9505008f-5775-4723-9777-c7c8e53e87ac.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3: The Niceness Scale'
  prefs: []
  type: TYPE_NORMAL
- en: 'You might be asking yourself: *Why do we care about a process priority?* The
    answer is efficiency! Your CPU is like a waiter in a busy restaurant. An efficient
    waiter goes around all the time to ensure that all the customers are happily served.
    Similarly, your CPU allocates time to all processes running on your system. A
    process with a high priority gets a lot of attention from the CPU. On the other
    hand, a process with a low priority doesn''t get as much attention from the CPU.'
  prefs: []
  type: TYPE_NORMAL
- en: Viewing a process priority
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Start Firefox as a background process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use the `ps` command to view a process'' nice value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: My Firefox process has a nice value of **0**, which is the default value (average
    priority).
  prefs: []
  type: TYPE_NORMAL
- en: Setting priorities for new processes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can use the `nice` command to start a process with your desired priority.
    The general syntax of the `nice` command goes as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s say you are about to upgrade all the packages on your system; it would
    be wise to give such a process the highest priority possible. To do that, you
    can run the following command as the `root` user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Changing a process priority
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can use the `renice` command to change the priority of a running process.
    We have already seen that Firefox was running with a default process priority
    of zero; let''s change Firefox''s priority and give it the lowest priority possible:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Cool! Now I hope Firefox will not be very slow for me; after all, I just told
    my CPU not to give much attention to Firefox!
  prefs: []
  type: TYPE_NORMAL
- en: The /proc directory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Every process in Linux is represented by a directory in `/proc`. For example,
    if your Firefox process has a PID of `6849`, then the directory `/proc/6849` will
    represent the Firefox process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'Inside a process'' directory, you can find a lot of valuable and insightful
    information about the process. For  example, you will find a soft link named `exe`
    that points to the process'' executable file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'You will also find the `status` file, which stores various pieces of information
    about a process; these include the process state, the PPID, the amount of memory
    used by the process, and so on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'The `limits` file displays the current limits set for the process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'The `fd` directory will show you all the files that the process is currently
    using on your system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b80b52ee-796b-450e-8186-b7e7ee62705c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4: fd directory'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also use the `lsof` command to list all the files a process is using:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cccfab95-38f4-4dd3-b54a-8116d9054551.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5: lsof command'
  prefs: []
  type: TYPE_NORMAL
- en: Knowledge check
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the following exercises, open up your Terminal and try to solve the following
    tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: List the process ID of your running terminal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: List the parent process ID of your running terminal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `kill` command to close your terminal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start Firefox as a background process.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change Firefox's priority to a maximum priority.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
