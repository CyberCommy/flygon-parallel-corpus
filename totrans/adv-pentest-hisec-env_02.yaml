- en: Chapter 2. Advanced Reconnaissance Techniques
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Actionable information is the key to success when performing a penetration
    test. The amount of public data that is available on the Internet is staggering,
    and sifting through it all to find useful information can be a daunting task.
    Luckily, there are tools available that assist in gathering and sorting through
    this wealth of knowledge. In this chapter, we will be reviewing some of these
    tools and will focus on how to use the information to ensure your penetration
    tests are efficient, focused, and effective. Key topics covered include:'
  prefs: []
  type: TYPE_NORMAL
- en: What is reconnaissance and why do we need it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reconnaissance types
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using DNS to quickly identify potential targets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using search engines data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using metadata to your advantage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Throughout this chapter we will use the domain names `example.com, example.org`,
    and `example.net` which are owned and maintained by IANA. DO NOT USE THESE FOR
    PRACTICE PURPOSES.
  prefs: []
  type: TYPE_NORMAL
- en: These domain names are used as a representation of a domain that you **own and/or
    have permission to use** as a target for your testing. Ideally, you would set
    up a segmented and controlled virtual lab with DNS servers that allows you to
    test all of these commands at your leisure.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to reconnaissance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Penetration testing is most effective when you have a good grasp on the environment
    being tested. Sometimes this information will be presented to you by the corporation
    that hired you, other times you will need to go out and perform your reconnaissance
    to learn even the most trivial of items. In either case, make sure to have the
    scope clarified in the rules of engagement prior to conducting any work, including
    reconnaissance.
  prefs: []
  type: TYPE_NORMAL
- en: Many corporations are not aware of the types of data that can be found and used
    by attackers in the wild. A penetration tester will need to bring this information
    to light. You will be providing the business with real data that they can then
    act upon in accordance to their risk appetite. The information that you will be
    able to find will vary from target to target, but will typically include items
    such as IP ranges, domain names, e-mail addresses, public financial data, organizational
    information, technologies used, job titles, phone numbers, and much more. Sometimes
    you may even be able to find confidential documents or private information that
    is readily available to the public via the Internet. It is possible to fully profile
    a corporation prior to sending a single packet to the organization's network.
  prefs: []
  type: TYPE_NORMAL
- en: The primary goal of the passive reconnaissance stage is to gather as much actionable
    data as possible while at the same time leaving few indicators that anyone has
    searched for the data.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Passive reconnaissance avoids direct contact with the target network.
  prefs: []
  type: TYPE_NORMAL
- en: The information gained will be used to recreate the types of systems that you
    expect to encounter while testing, provide the information necessary to perform
    effective social engineering attacks or physical breaches, and determine if there
    are vulnerable externally facing devices such as routers or switches that still
    use the default usernames and passwords. Odds are that in a highly secured environment
    things will not be quite that easy, but making assumptions is not recommended
    when performing penetration testing. Things that should be common sense are sometimes
    overlooked when dealing with complex network configurations that support thousands
    of users.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Reconnaissance as described in this book would most closely relate to the "Intelligence
    Gathering" category of the PTES.
  prefs: []
  type: TYPE_NORMAL
- en: The types of reconnaissance we will be focused on include **OSINT (Open Source
    Intelligence)** and footprinting. All of the sources we use will be freely available,
    but it is important to note that there are pay sites on the Internet that could
    be used as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open Source Intelligence (OSINT): Consists of gathering, processing, and analyzing
    publically available data and turning it into information that is actionable.
    Publically available data sources include, but are not limited to:'
  prefs: []
  type: TYPE_NORMAL
- en: Public data from courthouses, tax forms, and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Search engines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conferences
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Academic sources
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blogs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Research reports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata from pictures, executables, documents, and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Publicly available documents
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Footprinting: Used to non-intrusively enumerate the network environment. The
    results are used to locate where possible vulnerabilities are, and to provide
    information about the types of systems, software, and services that are running
    on the target network. The types of information that can be gained while performing
    non-intrusive footprinting include:'
  prefs: []
  type: TYPE_NORMAL
- en: Nameservers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IP ranges
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Banners
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operating Systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determining if IDS/IPS is used
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technologies used
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network device types
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This wealth of information is extremely useful when conducting a penetration
    test.
  prefs: []
  type: TYPE_NORMAL
- en: Reconnaissance workflow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Reconnaissance is most effective when performed procedurally. There are three
    major stages that should be followed when performing your recon:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Reconnaissance workflow](img/7744_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As an example of how this workflow is to be used, let's pretend we are working
    on a penetration test involving a fictional company. This company has publically
    available information regarding it's externally facing routers.
  prefs: []
  type: TYPE_NORMAL
- en: '**Phase 1:** We were able to validate that the IP ranges that we were given
    during the initial planning stage actually belong to our client.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Phase 2:** Sifting through the data we find that several routers are configured
    in a default state, and logon credentials have never been changed. We verify the
    information is accurate and move on to the next phase.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Phase 3:** Based on the validated information gathered, we determine our
    best method of gaining a toe-hold on the network is to compromise the external
    routers and work our way in from there.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have demonstrated a simplified example of how this workflow can be used.
    In the real world there will be many variables that will influence your decisions
    on which systems to target. The information you gather during the reconnaissance
    phase of your testing will be a determining factor in how successful and thorough
    your penetration test will be.
  prefs: []
  type: TYPE_NORMAL
- en: DNS recon
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Domain Name System (DNS)** can provide valuable data during the reconnaissance
    phase. If you do not already understand DNS, you may want to take some time to
    get a good grasp on the service and how it works. At a *very* basic level, DNS
    is used to translate domain names into IP addresses. Luckily for us, there are
    many tools available that are excellent at extracting the data that we need from
    nameservers. An example of the information you are able to gather includes:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Record** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| CNAME | Alias, used to tie many names to a single IP. An IP address can have
    multiple CNAME records associated with it. |'
  prefs: []
  type: TYPE_TB
- en: '| A | Used to translate a domain or subdomain name to a thirty-two bit IP address.
    It can also store additional useful information. |'
  prefs: []
  type: TYPE_TB
- en: '| MX | Ties a domain name to associated mail servers. |'
  prefs: []
  type: TYPE_TB
- en: There are other record types that can be collected from DNS tools as well; the
    records listed in the table are the most popular and often, the most useful.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DNS reconnaissance is considered active footprinting due to the fact that you
    will need to interact with client owned assets to receive your information.
  prefs: []
  type: TYPE_NORMAL
- en: Nslookup — it's there when you need it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**nslookup** is a DNS querying tool that can be used to resolve IP addresses
    from domain names or vice versa. This tool is used to query any given nameserver
    for specific records. Although `nslookup` is not the most powerful DNS tool in
    our testing toolkit, you can rely on the fact that it will be installed when you
    need it. `nslookup` is cross-platform, and will be found preinstalled on most
    operating systems.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: During the following examples we have modified the command output to maximize
    the learning experience.
  prefs: []
  type: TYPE_NORMAL
- en: We intend to help you understand the format and the meaning of the output. In
    many cases, we have substituted the original domain name(s) that was used with
    `example.com/net/org` and fictional IP addresses (usually non routable IPs). Do
    not expect to replicate the output directly, instead focus on the concepts described,
    and then practice these steps on domains and servers that you have proper permission
    to perform testing on.
  prefs: []
  type: TYPE_NORMAL
- en: Default output
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To perform a quick lookup for the IP address of the domain name `example.com`
    we enter the following into a BackTrack terminal session:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: You will be presented with output in the following **format:**
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The server at `8.8.8.8` is a public DNS server made available by Google™. #53
    UDP is the port being used when making the request. The preceding example output
    would indicate that `example.com` resolves to `127.1.72.107`.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Any IP address starting with 127.x.x.x will be redirected to localhost. Be aware
    of this when reviewing DNS records and selecting potential targets.
  prefs: []
  type: TYPE_NORMAL
- en: Changing nameservers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Results can be validated by using alternative DNS nameservers. In the following
    example we change the DNS nameserver to `156.154.70.22` which is the IP address
    of a nameserver offered by Comodo Secure DNS® to provide secure browsing to the
    public. It is beneficial to have a listing of several publicly available DNS servers
    when performing your testing. These can be used as a sanity check of sorts when
    dealing with a compromised DNS server. We also query for nameservers associated
    with `example.com:`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This example began by initializing `nslookup` and then proceeded to establish
    the variables from within nslookups command console. We started by typing `server`
    which displayed the current value of `8.8.8.8`. After that we determined that
    we wanted to use a different server, consequently we typed `server 156.154.70.22`
    because we were specifically looking at example.com's nameservers. We defined
    the type to be **ns** (nameservers) by entering `set type=ns`.
  prefs: []
  type: TYPE_NORMAL
- en: Once the variables have been set, we can query as countless domain names by
    typing the name, such as `example.com` and pressing *Enter*.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To leave the console type `exit` and then press *Enter*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Everything that we have done thus far can be simplified into a single command
    line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'We have invoked `nslookup`, used an option of `type=ns` to pull the associated
    nameservers, provided the domain name that we want the information as `example.com`,
    and finally, we specified that we would like to use `156.154.70.22` as our resolving
    DNS nameserver. This will result in the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Any time that a command-line tool is executed the output can be sent to a file
    for later review. This is especially important once you start to build your own
    scripts to automate your testing. For example, `nslookup example.com > example-resolv.txt`.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an automation script
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As previously stated, `nslookup` is an excellent choice given that it is generally
    preinstalled on all platforms. If you are using a pivot point for instance, you
    can be rest assured that this is one tool that you will have available by default.
    As `nslookup` can be run from a single command-line prompt you can easily create
    a script that automates the task of extracting information about many domain or
    hostnames, then have the output placed into a text file.
  prefs: []
  type: TYPE_NORMAL
- en: In BackTrack, open a terminal session and type `nano AutoM8` and press *Enter*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the nano editor, type the following code in which we initiate the **bourne**
    shell with `#!/bin/sh`, parse each line item in the `DomainNames.txt` file into
    the `HOSTNAME` variable and then output the string "Getting `name servers for`"
    followed by the current `HOSTNAME` being parsed. We then use the `nslookup` command
    to perform the nameserver lookup using our specified public nameserver at `8.8.8.8:`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Press *Ctrl + O* then press *Enter* to confirm saving your data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press *Ctrl + X* to exit back to the terminal screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type `nano DomainNames.txt`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In **nano** enter the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Substitute domains that you have permission to test instead of the** `example.com/net/org`
    **domains used in the following listing!!!**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Press *Ctrl + O* followed by *Ctrl + X* to save the file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the terminal we will need to make the `AutoM8` file executable by typing:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Now run the `AutoM8` script by typing:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see the output similar to the following format:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Now type:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: You have now created a simple script named `AutoM8` that can be used to append
    the output into any file you like. We have validated this by using `cat` to look
    into the `NameServerListing.txt` file.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Challenge yourself to make the previous code more efficient and reusable. Several
    of the tools you will learn about in this book could be automated in this fashion.
    Try using `grep` and `awk` to parse out your results in a cleaner fashion.
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, you will be using tools that have an XML output available to you so
    that results can easily be imported into MagicTree or Dradis, but when performing
    penetration testing on a daily basis you will want to know how to create some
    basic tools for your own special needs. Shell scripting can be very powerful;
    python, which is the tool of choice for many penetration testers, is even better.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Every Penetration Tester should know at least one basic scripting language.
  prefs: []
  type: TYPE_NORMAL
- en: What did we learn?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you take a look at the output of the various examples you should note that
    we learned a great deal about our targets already. We know which nameservers are
    used, and we know that all three domains use the same nameservers. We have also
    validated that the domain names we have resolve to certain IP addresses. This
    is the type of data that will be very useful in later stages of your penetration
    test. Now let's move on to some of the more powerful tools we have at our disposal.
  prefs: []
  type: TYPE_NORMAL
- en: Domain Information Groper (Dig)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Domain Information Groper (Dig)** is a powerful alternative to `nslookup`.
    It has the capability to run either command-line options, or a file can be piped
    into it directly when multiple lookups need to be performed. Dig will use the
    `/etc/resolve.conf` file to cycle through your nameservers unless a nameserver
    is specified. Dig has a very long list of options that can be used to gather exactly
    what you are looking for.'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There is a website at [http://www.digwebinterface.com/](http://www.digwebinterface.com/)
    that provides dig functionality to the public.
  prefs: []
  type: TYPE_NORMAL
- en: Default output
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To initiate the basic command from BackTrack type `dig example.com` from the
    terminal command line. Here is an example of this command when run on a domain
    that is owned by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The output from your commands may differ depending on the domain you are targeting.
  prefs: []
  type: TYPE_NORMAL
- en: If you follow along with the commands, you'll be replacing `example.com` with
    domain names that you own or have permission to test.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: This verbose output indicates the version of Dig, which global options were
    selected by default, if there were any errors, and of course that the `A` record
    for `example.com` contains `10.1.1.1`. We also learn that the currently used nameserver
    is at `8.8.8.8`. In addition, we are provided with the time that the query was
    run, which can be very useful when piecing together data at a later date. DNS
    records can be changed, and having the date stamp from previous runs of Dig can
    be useful.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s dig a little deeper. We will pull all records for the `example.com`
    domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'This will pull all DNS records that are available for the `example.com` domain
    due to the `any` option, and the `+qr` switch will print the outgoing query. The
    result will include the header and footer data as seen previously, but will also
    list the following records:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Zone transfers using Dig
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Zone transfers (AXFR) will allow you to pull an entire record set down from
    a nameserver at once. If successful, you will be provided with a listing of all
    information on the nameserver from one simple command. In secured environments
    it is highly unlikely that zone transfers are enabled as it gives an attacker
    a wealth of data in regards to hostnames and other information. We will now review
    the steps necessary to perform a zone transfer on the domain `example.com`. As
    with everything discussed within this book, you need to have the **proper permission**
    to perform this type of activity for your client.
  prefs: []
  type: TYPE_NORMAL
- en: Open up a BackTrack terminal window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type the following and press *Enter:*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Review the results:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Our results indicate that the transfer has failed. In this case the administrator
    of the nameserver has properly disabled the ability to perform zone transfers.
    Now we will try another nameserver on the same domain and see if zone transfers
    are disabled on it as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Type:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Review the results:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: When reviewing the record pulled for `example.com` we find several points of
    interest. It seems that `example.com` has several subdomains that are directed
    at the same IP address. If this site had not been set up strictly as an example,
    you would have real IP addresses to systems that could be enumerated. Also, there
    is a TXT record containing trivial information. In addition, it can be said that
    the naming convention is both inconsistent and informative.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is very important that *all* of your nameservers are restricted to serving
    zone transfers to only trusted servers, or that zone transfers are completely
    disallowed.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to learn more about zone transfers I highly suggest that you take
    a look at `zonetransfer.me` which will redirect you to [http://www.digininja.org/projects/zonetransferme.php](http://www.digininja.org/projects/zonetransferme.php).
    The owner of that website has done an excellent job of detailing how zone transfers
    work.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced features of Dig
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We have been discussing the basic usage of dig. Now we will touch upon a more
    advanced usage of this tool.
  prefs: []
  type: TYPE_NORMAL
- en: Shortening the output
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Dig is versatile and allows you to extract the data in many different output
    formats.
  prefs: []
  type: TYPE_NORMAL
- en: We can eliminate the command information section of the output by using `+nocmd`.
    It must precede the domain name in order to be effective.
  prefs: []
  type: TYPE_NORMAL
- en: '`+noall` informs dig that we do not want the display flags as part of the command
    output.'
  prefs: []
  type: TYPE_NORMAL
- en: '`+answer` can be toggled to display only the answer section.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'This will result in the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Any options discussed within this section can be used when shortening your output
    results. This makes it easy to use tools such as `awk` and `grep` to further manipulate
    your results.
  prefs: []
  type: TYPE_NORMAL
- en: Listing the bind version
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This command will allow you to determine the version of bind the nameserver
    is running unless it has been specifically restricted or changed by the server
    administrator. Remember to substitute `example.com` with a nameserver that you
    have permission to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'This will result in the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: We have determined that this particular nameserver is running bind 8.4.X. This
    information can prove to be extremely valuable when enumerating vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Reverse DNS lookup using Dig
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'At times it will be necessary to resolve IP addresses to domain names. There
    is no need to swap back to `nslookup` to perform this task as you can simply type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Your output would look something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: The previous command allowed us to determine the domain name associated with
    `192.168.0.1`.
  prefs: []
  type: TYPE_NORMAL
- en: Multiple commands
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We can chain commands using dig. In the following example, we use our shortened
    output format to provide us with the `A` record of `example.com` and `example.net`
    and then request a reverse lookup on `192.0.43.10`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting output is as follows (domain name has been replaced with `example.org`
    in this output):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Tracing the path
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If you would like to see the route that dig is taking to resolve your domain
    name you can use the `+trace` option as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Batching with dig
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Instead of having to write a script to loop that evaluates a list of domain
    names in a file like we had to when using `nslookup`, dig can use the `-f` option.
    We can use the dig command format to perform these batch jobs.
  prefs: []
  type: TYPE_NORMAL
- en: We will begin by creating a new TXT file using the nano text editor included
    in BackTrack. Open up a terminal shell in BackTrack and type `nano digginIt.txt`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In nano type the following code. Note that each command needs to be on its
    own line to function properly:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Press *Ctrl + O* to write save the file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press *Ctrl + X* to exit back to the terminal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Invoke the dig command using:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'The results will be displayed on your screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: We have successfully created and executed a dig batch job. This could be put
    to many uses including creating and checking against baselines, performing repetitive
    tasks from one penetration test to the next, or simply keeping track of the commands
    used to perform this portion of your reconnaissance. Store the text file used
    in the batch job so that you can at a later time validate the findings.
  prefs: []
  type: TYPE_NORMAL
- en: DNS brute forcing with fierce
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In a secured environment DNS brute forcing is likely to be your best bet in
    determining which hosts are used in non-contiguous IP space. BackTrack contains
    several tools that address this need. We will be discussing fierce, created by
    RSnake, which is fast and efficient at DNS brute forcing. It will begin with determining
    the IP address of the domain, looking up the associated nameservers, and then
    working its way through your dictionary word list. The tool supplies an example
    word list that can be used for testing, but you should replace or supplement it
    with dictionary words more specific to your needs as soon as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Default command usage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In BackTrack we will open up a terminal session and change directory to where
    the `fierce.pl` perl script is located:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '`fierce.pl` contains a help section that can be accessed using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'The most basic method of using fierce is to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'This will result in output similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: This output indicates that the first step taken was to locate the nameservers
    for the `example.com` domain. The next step is to check the server to see if a
    zone transfer can be performed. As we have learned previously, zone transfers
    will extract all known domain information from the server with one command. There
    would be no need to brute force domain names if you can simply pull the entire
    record set at once.
  prefs: []
  type: TYPE_NORMAL
- en: Some domains include wildcard DNS records. This will cause any subdomain you
    use to be resolved regardless of if it exists or not. In this case there were
    no wildcard DNS entries found.
  prefs: []
  type: TYPE_NORMAL
- en: The number of tests that are run will be determined by how many words are in
    your supplied word list. As we did not specify which list to use in the preceding
    example, `hosts.txt` which resides in the `/fierce` directory on Backtrack will
    be used by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here `fierce.pl` is used against a domain that allows for zone transfers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'In this case, the brute forcing functionality of the tool is not necessary
    and thus not initialized. See the following results for details:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Looking at the results we can see that `fierce.pl` indicated that this setting
    is a misconfiguration which should be yet another indicator that allowing open
    AXFR is not advisable under any circumstance.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a custom wordlist
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If we already have an idea of what we would like to check for, or we have a
    word list that may be more appropriate as we understand the naming convention
    of the site being tested, then making a custom word list is recommended.
  prefs: []
  type: TYPE_NORMAL
- en: Open up Nano using `nano myWordList.txt`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Type the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Press *Ctrl + O* and press *Enter* to accept writing the file out to `myWordList.txt`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press *Ctrl + X* to exit back to the terminal shell.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now that we have created our custom word list named `myWordList.txt`, let''s
    give it a try:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'After a short delay we will be presented with the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Although this server no longer allowed us to use zone transfers, we were still
    able to map several of the subdomains through the use of a good word list.
  prefs: []
  type: TYPE_NORMAL
- en: When you are unable to perform a zone transfer there are still methods that
    can be used to effectively enumerate the subdomains and hostnames on a network.
    An internal DNS nameserver will be able to provide you with a tremendous amount
    of information that can later be used to evaluate the network for vulnerabilities,
    and ultimately be used to exploit the environment. `fierce.pl` is a very useful
    addition to our arsenal of penetration testing utilities, and can be used to accomplish
    a great deal more than simple DNS brute forcing.
  prefs: []
  type: TYPE_NORMAL
- en: Gathering and validating domain and IP information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When a person or corporate entity registers a domain name there is a lot of
    information that is gathered. Depending on the registration privacy settings,
    you can collect this information and use it to verify your IP space, find information
    about other sites owned by the same individual or corporation, or even phone numbers
    and addresses of key employees. This type of reconnaissance is considered passive
    as it does not directly contact client-owned assets to pull information.
  prefs: []
  type: TYPE_NORMAL
- en: We will need to locate the registrar that the domain has been registered with
    to obtain useful information. Here is a listing of the top registrars.
  prefs: []
  type: TYPE_NORMAL
- en: '| AFRINIC | [http://www.afrinic.net](http://www.afrinic.net) |'
  prefs: []
  type: TYPE_TB
- en: '| APNIC | [http://www.apnic.net](http://www.apnic.net) |'
  prefs: []
  type: TYPE_TB
- en: '| ARIN | [http://ws.arin.net](http://ws.arin.net) |'
  prefs: []
  type: TYPE_TB
- en: '| IANA | [http://www.iana.com](http://www.iana.com) |'
  prefs: []
  type: TYPE_TB
- en: '| ICANN | [http://www.icann.org](http://www.icann.org) |'
  prefs: []
  type: TYPE_TB
- en: '| LACNIC | [http://www.lacnic.net](http://www.lacnic.net) |'
  prefs: []
  type: TYPE_TB
- en: '| NRO | [http://www.nro.net](http://www.nro.net) |'
  prefs: []
  type: TYPE_TB
- en: '| RIPE | [http://www.ripe.net](http://www.ripe.net) |'
  prefs: []
  type: TYPE_TB
- en: '| InterNic | [http://www.internic.net](http://www.internic.net) |'
  prefs: []
  type: TYPE_TB
- en: Gathering information with whois
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Domain and IP space registration information can be found by using **whois**.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Be aware of the specific restrictions and rules that you need to abide by when
    using **whois**. For example, you are not allowed to automate your queries or
    to use the results for commercial or personal gain. Read the legal text headers
    that appear when you run a simple `whois example.com` query from the command line.
    Heed the warnings and follow the rules.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most basic usage of whois is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'This will perform a quick lookup of the `example.com` domain and provide you
    with the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: Whois usage agreements and legal headers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Domain name
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Registrar the domain name is registered with
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Whois server that was used
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The primary DNS nameservers associated with the domain
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Domain creation and expiration dates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Registrant information such as First Name, Last Name, Organization, physical
    address, phone number, and e-mail address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assigned domain administrator information such as First Name, Last Name, Organization,
    physical address, phone number, and e-mail address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Domain billing contact information such as First Name, Last Name, Organization,
    physical address, phone number, and e-mail address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Domain technical contact information such as First Name, Last Name, Organization,
    physical address, phone number, and e-mail address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Specifying which registrar to use
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There may be times when you will need to specify which registrar you would like
    to query. **whois** makes this simple by allowing the usage of the `-h` "connect
    to host" option.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Where in the world is this IP?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can use **whois** to find the originating country an IP address is assigned
    to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'What we have done here is use the `-h` option to specify `whois.arin.net` to
    extract the record associated with `192.0.43.10` because we specifically wanted
    the country information relating to this IP. We used the `grep` command to pull
    out the `Country:` row. Here is the resulting output which indicates this IP address
    is located in The United States of America:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You will find the output format will vary from one registrar to the next. Take
    some time and get familiar with the different outputs so that you know what to
    grep for in the future. This could potentially save you a lot of time in the long
    run.
  prefs: []
  type: TYPE_NORMAL
- en: Defensive measures
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you or your clients register domains, you should opt in on privacy options.
    These will restrict the information that is available to the public. The data
    will be replaced with the information provided by your privacy proxy. In case
    there are situations that require someone to get in contact with you they would
    contact your proxy whom would in turn let you know that there is an issue that
    needs to be addressed.
  prefs: []
  type: TYPE_NORMAL
- en: Using search engines to do your job for you
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Search engines can produce an absolute overload of information if not used efficiently.
    Not only can you find information about the financials of your targets, but also
    information about key employees, usernames and passwords, confidential documents
    such as network diagrams, information indicating what types of software or hardware
    you use or have in place, and even if systems are in a default state. This information
    can be devastating in the wrong hands. As a penetration tester your focus should
    be to bring this type of information forth and show the clients how it can be
    used to gain access to the clients' most critical assets (and hopefully, you will
    tell them how to fix the problem as well!).
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are search engines that cache information for quick access, and there
    are search engines that will archive sites and documents for years on end. There
    are even search engines that focus strictly on networking equipment such as wireless
    access points or publically facing routers, switches, servers, and more.
  prefs: []
  type: TYPE_NORMAL
- en: SHODAN
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will continue our footprinting reconnaissance efforts with **Shodan**. This
    search engine is specialized in indexing the information found in banners served
    by devices attached to the Internet. The search engine primarily indexes finding
    from port 80, but also indexes some Telnet, SSH, and FTP banners. SHODAN is a
    web application and can be accessed by going to [http://www.shodanhq.com](http://www.shodanhq.com).
  prefs: []
  type: TYPE_NORMAL
- en: '![SHODAN](img/7744_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: With **Shodan** you can find information on devices connected to the Internet.
    In addition to allowing you to search by IP address or hostname it also allows
    you to search by geographical location. Exporting the search results into XML
    is a premium feature which would require you to purchase credits. There is an
    example export available if you want to build a transform for MagicTree or some
    other data centralization tool before you decide if you want to spend money on
    the export.
  prefs: []
  type: TYPE_NORMAL
- en: Filters
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There are several free filters that make narrowing the searches down much simpler.
    Most filters use the same format: *searchterm filter:{filterterm}*; an example
    would be a search for `IIS 6.0 os:"Windows 2000`". These filters can also be used
    in conjunction with each other in order to pull some very interesting results.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a listing of several important filters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**net:** Possibly one of the most useful filters for a penetration tester.
    You can search your IP ranges using IP/CIDR notation (for example, 127.1.1.0/24)
    to see if all of your devices are configured as expected, or if there are indicators
    that a vulnerable server or network device configuration is externally facing
    and ready to be compromised during testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**city:** This will limit the search to the city listed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**country:** Restricts the search to devices in the country of choice. This
    is also very important for pentesting, as there may be times when a client provides
    you with IP ranges (which you validated, right?), and then places certain assets
    out of scope due to location. A client may chose to not test against systems located
    in Singapore for instance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**port:** Will restrict the search to the port indicated. Remember that SHODAN
    does not scan and index banners for all ports, only for 80, 21, 22, and 23.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**before:** Search for systems scanned before a specified date.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**after:** Search for systems scanned after this date.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**os:** Which operating systems do you want to include or exclude in your search?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding banners
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In order to perform affective searching in Shodan you must have some understanding
    of the types of banners that are indexed and what sort of information they typically
    contain.
  prefs: []
  type: TYPE_NORMAL
- en: FTP, Telnet, and SSH banners will vary, but each will provide useful versioning
    information.
  prefs: []
  type: TYPE_NORMAL
- en: HTTP banners
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Banners can be collected by using `nc example.com:80` and then typing `HEAD
    / HTTP/1.0` which results in the typical banner format you will see in your SHODAN
    results. As the HTTP banners are often the most difficult to understand we walk
    through some of the commonly found sections:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: The `HTTP/1.1 200` status code highlighted will provide a response to your query
    indicating the status of your request. In this case the `HEAD/ HTTP/1.0` was accepted
    and processed successfully thus initiating a status code of `200 OK`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Content-Length:` Indicated the length of the content in decimal number of
    OCTETs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Content-Type:` Will list the type of content being sent. Could be image/GIF,
    text/HTML, or other types.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Accept-Ranges:` Indicates if the server will accept a byte range. Setting
    this to none will let the client know that range requests could be denied.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ETag:` Provides the client with the current entity tag value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Server:` Will provide you with the version and type of software being used
    to service the request. This is one of the most important banner results for a
    penetration tester. Clients should be advised to hide this information. You will
    use this information to establish what attack types may be usable on the machine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`X-Powered-By:` Flag is not a standard header, but can provide useful information
    to an attacker. It can also be changed or disabled completely.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Common status codes include:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **HTTP status code** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 200 | A successful query resulting in displaying the result. |'
  prefs: []
  type: TYPE_TB
- en: '| 301 | Document has been moved permanently. |'
  prefs: []
  type: TYPE_TB
- en: '| 302 | Document has been moved temporarily. |'
  prefs: []
  type: TYPE_TB
- en: '| 307 | A temporary redirect is being used. |'
  prefs: []
  type: TYPE_TB
- en: '| 400 | Syntax error - Cannot process your request. |'
  prefs: []
  type: TYPE_TB
- en: '| 401 | Request requires authentication. Usually indicates a login is required.
    |'
  prefs: []
  type: TYPE_TB
- en: '| 403 | Request is forbidden. |'
  prefs: []
  type: TYPE_TB
- en: '| 404 | The page was not found on the server. |'
  prefs: []
  type: TYPE_TB
- en: '| 502 | The server is not available at the moment. Unable to get the resource
    on behalf of the client. |'
  prefs: []
  type: TYPE_TB
- en: '| 501 | Internal server errors cause the server to be unable to complete the
    request. - Request was not supported. |'
  prefs: []
  type: TYPE_TB
- en: '| 505 | Unsupported HTTP version was used. |'
  prefs: []
  type: TYPE_TB
- en: Finding specific assets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Just as with most search engines the tool is extremely user friendly. To perform
    a basic search, simply type the search string into the input box at the top of
    the screen and you will be presented with a listing of results. You can search
    using any of the filters we have previously discussed, or you can try your hand
    at looking for specific banner fields.
  prefs: []
  type: TYPE_NORMAL
- en: Finding people (and their documents) on the web
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this day and age, everything is becoming interconnected. People are using
    their personal devices for work, sending out corporate e-mails using personal
    accounts on publicly owned mail servers, and watching lots of videos. One trend
    that has occurred over the years is that people have become so comfortable with
    the Internet that they are willing to share their information with unknown individuals
    and websites around the world. We will now discuss some of the methods you can
    use to verify that your clients are not unintentionally or intentionally leaking
    actionable or confidential data onto the public Internet.
  prefs: []
  type: TYPE_NORMAL
- en: Google hacking database
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There have been many books written on Google hacking, that speaking of the details
    and tricks involved would quickly divert the focus of this book.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you are not familiar with Google hacking, perform a search for Johnny Long
    and visit his website at [http://www.hackersforcharity.com](http://www.hackersforcharity.com),
    and check out The Google Hacking Database (GHDB), which was the original Google
    Dorks repository.
  prefs: []
  type: TYPE_NORMAL
- en: Exploit-DB at `exploit-db.com` has taken over and updated Mr. Long's Google
    Dorks database. This is now the official GHDB site. You should use these tools
    in tandem with good filters to ensure that you get only the data you need. Here
    are some examples of how this can be done.
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to [http://exploit-db.com/google-dorks](http://exploit-db.com/google-dorks)
    and choose a query. Here is a random entry:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'Enter it into `Google.com` with the following modifications. Add the `site:`
    option followed by a domain name that is part of your rules of engagement:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: In the case of this example, if there are any results found, you have located
    a MS Excel file that contains some form of "password". Mind that results will
    vary and the best Google search queries are usually focused on determining the
    versions of installed software, seeking out known vulnerable installations that
    will later be targeted if allowed by the rules of engagement.
  prefs: []
  type: TYPE_NORMAL
- en: You should also be performing focused searches that locate all major document
    types such as `.pdf, .doc, .txt, .xls`, and more. However, there are some additional
    tools that will help us with this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Warning: Do not open random files on your primary testing machine. You should
    have a separate machine that is not connected to your network or the Internet
    that can be used to open unknown (that is potentially harmful) files and media.
    One of the easiest methods of gaining access to a machine is through sending a
    file to a user that uses exploits to open a system up to an attacker. Opening
    unknown files in an uncontrolled environment would be reckless. Don''t be that
    user.'
  prefs: []
  type: TYPE_NORMAL
- en: Google filters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To understand the types of queries you will see when browsing Exploit-DB''s
    **Google Hacking Database (GHDB)** you must understand the types of operators
    that are used. Here is a list of the more common advanced operators:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Filter** | **Description** | **Example** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `allinurl` | Search for all terms in URL | `allinurl:example company` |'
  prefs: []
  type: TYPE_TB
- en: '| `allintext` | Search for all terms in page text | `allintext:company name`
    |'
  prefs: []
  type: TYPE_TB
- en: '| `intitle` | Search for term in page title | `intitle:ftp` |'
  prefs: []
  type: TYPE_TB
- en: '| `cache` | Displays cached pages | `cache:example.com` |'
  prefs: []
  type: TYPE_TB
- en: '| `phonebook` | Searches the phonebook listings | `phonebook:CompanyName` |'
  prefs: []
  type: TYPE_TB
- en: '| `author` | Search Google Groups for items by specific author (Use Google
    Groups search for this) | `author:anonymous` |'
  prefs: []
  type: TYPE_TB
- en: '| `filetype` | Searches for all documents of a specific type | `filetype:pdf`
    |'
  prefs: []
  type: TYPE_TB
- en: '| `site` | Restrict your search to a specific site (or domain) | `site:example.com`
    |'
  prefs: []
  type: TYPE_TB
- en: '| `link` | Find all pages that point to a specified URL | `link:example.com`
    |'
  prefs: []
  type: TYPE_TB
- en: Metagoofil
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Metagoofil, a powerful metadata gathering tool created by Christian Martorella
    ([http://www.edge-security.com](http://www.edge-security.com)), can be used to
    automate search engine document retrieval and analysis. It also has the capability
    to provide MAC addresses, username listings, and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'BackTrack has the Metagoofil Blackhat Arsenal Edition installed by default.
    Open up a terminal and type the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Metagoofil is a Python script and can be launched by typing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'Which results in the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s give `metagoofil.py` a try on the `example.com` domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'As a penetration tester you would want to find some documents that provide
    you all sorts of information about your client when running this tool. We do not
    currently have any such documents on the `example.com` domain so the output is
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: As indicated in the preceding output, if this site had any information that
    was searchable via Google, it would have provided a nice HTML report of Usernames,
    E-mail Addresses, Software, Servers, and Paths. All of this is accomplished with
    one simple command sequence. You can change the variables to look for any documentation
    type that Google can find based on the `filetype:` option.
  prefs: []
  type: TYPE_NORMAL
- en: Searching the Internet for clues
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By now you should have some usernames, and possibly even some phone numbers
    and job titles. This information will come in handy if you are planning on performing
    a social engineering test.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Search engines such as Google can be used to search for information that corporate
    employees are dropping on the Internet as easily as you could search for a pie
    recipe. Be sure to verify that your client wants you to do research on employees
    before you start, not after. There are many laws that protect the privacy of an
    employee and only a lawyer can let you know what is and what is not acceptable.
  prefs: []
  type: TYPE_NORMAL
- en: One practice that seems to be prominent in penetration testing is to search
    for forum and group postings made by employees that may include information relating
    to work assets. Most of the information will not be shared with the world in a
    malicious manner, but rather innocently. This does not change the fact that attackers
    have access to this information and could possible use it against a targeted company.
    Look for things such as an administrator of the company asking for help on configuring
    a specific firewall type, or other network devices. A security professional that
    posts questions on a public forum may be unintentionally providing clues as to
    which standards their company complies with. These are the types of information
    that gives both you the penetration tester, as well as an advanced attacker, the
    knowledge necessary to penetrate an otherwise secured environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some tools that would assist you in finding more information:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **Description** | **Location** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| SecApps Google Hacking Database Explorer | Web application that allows you
    to put in the site and query modifiers to automate your GHDB queries. | [http://www.secapps.com/a/ghdb](http://www.secapps.com/a/ghdb)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Site Digger 3.0 | Searches Googles cache. Finds all sorts of information.
    Requires .NET Framework 3.5 to work. | [http://www.mcafee.com/us/downloads/free-tools/sitedigger.aspx](http://www.mcafee.com/us/downloads/free-tools/sitedigger.aspx)
    |'
  prefs: []
  type: TYPE_TB
- en: '| The Harvester | Searches for Subdomains, Hostnames, Users, Employee E-mails,
    and Names from search engines and PGP servers. | Included in BackTrack or [https://code.google.com/p/theharvester](http://https://code.google.com/p/theharvester)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Lullar.com | Search for people by Name, E-mail, or Usernames. | [http://com.lullar.com/](http://com.lullar.com/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| White Pages | Good to find business information. | [http://www.whitepages.com/](http://www.whitepages.com/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| PeekYou | Search for people by Username, Last Name, or First Name. | [http://www.peekyou.com/](http://www.peekyou.com/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| TinEye | Find your images across the Web. | [http://www.tineye.com/](http://www.tineye.com/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Internet Archive | Personal favorite, archives copies of websites and files
    for years and years. | [http://www.archive.org/web/web.php](http://www.archive.org/web/web.php)
    |'
  prefs: []
  type: TYPE_TB
- en: Metadata collection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we have already touched upon metadata when discussing `Metagoofil`.
    Metadata can provide very useful information to a penetration tester. Many users
    are not even aware that this information is being attached to their files. A good
    example of this would be the **Exif** data associated with different image formats.
    You can find out what type of camera was used, when the photo was taken, where
    it was taken if there is GPS data available at the time (phone cameras…), and
    much more. Pictures are not the only files that have this type of extensive data
    available. The same goes for PDF documents, and more. **Foca** is an excellent
    program with an intuitive user interface, and its usage is highly advised, but
    it is a Windows program and is difficult to install on BackTrack (although not
    impossible by any means!). Thus we will review other options that come preinstalled
    on our penetration testing toolkit of choice — BackTrack.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If your clients use Windows 7 or Windows Server 2008 please make them aware
    that there is an option to erase all personal metadata from certain file types
    with a few clicks of the mouse.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting metadata from photos using exiftool
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**exiftool** comes preinstalled on BackTrack 5 and can be used to list all
    of the Exif data associated with many file types. This tool is extremely powerful
    and allows you to export your results into many different formats, write to file
    metadata, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: We will use a picture named `FotoStation.jpg` that is included at `/pentest/misc/exiftool/t/images`
    for our first usage example.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start **exiftool** you can open up a terminal session and type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: If you run the default `exiftool` you will be presented with the tool help selection.
    It is quite extensive, so be prepared for a lot of reading. Here we initiate a
    simple check against `FotoStation.jpg:`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'This results in the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: 'We can see that this provides a tremendous amount of data, but nothing that
    could really be used for your penetration testing. Now let''s try a different
    file format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'This provides us the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'This is the metadata that you are looking for when testing. In this particular
    example, the information has been scrubbed for learning purposes but some fields
    of interest should include:'
  prefs: []
  type: TYPE_NORMAL
- en: Title
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Subject
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Author
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Company
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manager
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hyperlinks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Current User
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All of this data starts to make a pretty picture when it is all combined in
    your data collection and centralization tool. You can use **exiftool** to pull
    or to write to metadata from Flash, PPT, and MANY more. You can obtain a complete
    listing of supported file types from [http://www.sno.phy.queensu.ca/~phil/exiftool/#supported](http://www.sno.phy.queensu.ca/~phil/exiftool/#supported).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have reviewed many specialized methods of gathering freely
    available information. Using this information we are able to create a larger picture
    of the networks we are targeting.
  prefs: []
  type: TYPE_NORMAL
- en: After performing the initial reconnaissance we should be able to determine if
    the network space provided to us by our clients is accurate. We should also be
    able to successfully determine which documents are searchable on the Internet
    and we are able to read the metadata associated with said documents. At this point
    of a penetration test we should be getting an idea of just how difficult or easy
    this job will be. One such indicator will be the results you gather from search
    engines such as Shodan. One last note, be very diligent in collecting the data
    you have found. Documentation is critical and will make your life as a penetration
    tester much easier in the long run.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next chapter, we will start to put the information we have gathered
    to use. You will have a chance to directly enumerate networks. We also begin to
    build out a functional lab that allows you to follow along with each and every
    step of the process. Some of the topics covered in [Chapter 3](ch03.html "Chapter 3. Enumeration:
    Choosing Your Targets Wisely"), *Enumeration: Choosing your targets wisely*, include
    understanding how and when to use NMAP, using SNMP to your advantage, various
    avoidance techniques, and more!'
  prefs: []
  type: TYPE_NORMAL
