- en: Working with Vulnerability Scanners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The discovery and analysis of security vulnerabilities play important roles
    during a penetration test. Before a penetration tester or an ethical hacker can
    successfully launch an exploit, they must be able to identify the security weaknesses
    on the attack surface. The attack surface is the area where an attacker can attempt
    to gain entry to or exfiltrate data from a system. A strategic approach to quickly
    identifying vulnerabilities and obtaining a severity rating is to use a known
    and reputable vulnerability scanner.
  prefs: []
  type: TYPE_NORMAL
- en: There are many popular and reputable vulnerability scanners, such as Acunetix,
    OpenVAS, Qualys, Nexpose, Nikto, Retina Network Security Scanner, and Nessus,
    to name a few in the industry. Having knowledge about all these tools is a good
    idea, but you won't want to run every tool as some of these are commercial and
    subscription-based services.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing a vulnerability scanner as your preferred choice is quite important
    because there are many times a vendor of a product may not provide updates quickly
    enough to detect threats and weaknesses within a system, and this may be crucial
    to you as a penetration tester. Imagine running a scan to identify whether a system
    is susceptible to a particular exploit and the tool you're using doesn't contain
    the signature update to detect such a vulnerability; the results may not be fruitful.
  prefs: []
  type: TYPE_NORMAL
- en: During the course of this chapter, we will explore using Nessus as our preferred
    vulnerability scanner.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will be exploring the following vulnerability assessment
    tools and topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Nessus and its policies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanning using Nessus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exporting Nessus results
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyzing Nessus results
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using web application scanners
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are the technical requirements for this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali Linux: [https://www.kali.org/](https://www.kali.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Nessus (Essentials): [https://www.tenable.com/products/nessus/nessus-essentials](https://www.tenable.com/products/nessus/nessus-essentials)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'WordPress Server: [https://www.turnkeylinux.org/wordpress](https://www.turnkeylinux.org/wordpress)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nessus and its policies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Nessus is one of the most popular and reputable vulnerability scanners in the
    industry and is used by many professionals within the field of cybersecurity.
    It has become the de facto industry standard for performing vulnerability assessments
    among cybersecurity professionals. Some of the benefits of using Nessus include
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Discovery of over 45,000 **Common Vulnerabilities and Exposures** (**CVEs**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains over 100,000 plugins (used to discover vulnerabilities)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frequent updates of new plugins for newly disclosed vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Able to identify over 100 zero-day vulnerabilities for the past three years
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s log in to Nessus on our Kali Linux machine; firstly, you''ll need to
    enable the Nessus service using the following command within a Terminal window:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the service has been successfully enabled, open the web browser in Kali
    Linux, enter `https://localhost:8834` within the address bar, and hit *Enter*.
    You should see the following login portal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fb77e4c8-5a1c-4d26-aec0-9468a0086906.png)'
  prefs: []
  type: TYPE_IMG
- en: Log in using your user account, which was created during the setup process.
    Once you are logged in, the main dashboard is available. Here you'll be able to
    configure and access policies and plugin rules, create new scans, and view results.
    The Nessus user interface is a very simple-to-use interface, and in a very short
    time you'll be very familiar with it.
  prefs: []
  type: TYPE_NORMAL
- en: Nessus policies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Within the Nessus application, there are many existing policies for various
    purposes, and new ones are added to the database quite often. Nessus policies
    are the parameters that control the technical aspects of a scan on a target system.
    To elaborate further, the technical aspects of a scan may include the number of
    host devices to scan, the port numbers and services, protocol type (TCP, UDP,
    and ICMP), the type of port scanner, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Nessus policies also allow the use of credentials (usernames and passwords)
    for local scanning on Windows-based operating systems, database applications such
    as Oracle platforms, and other application-layer protocols such as FTP, POP, and
    HTTP.
  prefs: []
  type: TYPE_NORMAL
- en: There are preinstalled policies that help security practitioners to perform
    compliance auditing on systems. An example is checking whether a network that
    handles payment card transactions is vulnerable, using an **internal PCI network
    scan**. This policy would check for any vulnerability according to the **Payment
    Card Industry Data Security Standard** (**PCI DSS**).
  prefs: []
  type: TYPE_NORMAL
- en: The Nessus policies allow the scanning of malware infections on Windows operating
    systems by comparing the hash checksums against both good and malicious files
    on a target system. This policy is quite handy when determining the number of
    hosts infected with a type of malware on the network.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with policies on Nessus, ensure you are currently logged in
    to Nessus. On the left pane, click on **Policies**. The following screenshot shows
    the currently available policies within the home edition of Nessus. However, if
    you would like to unlock the other plugins and policies, you''ll need to acquire
    the professional edition:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b135b42a-ed67-434d-89fa-f46683d73f04.png)'
  prefs: []
  type: TYPE_IMG
- en: As mentioned before, a policy contains predefined configurations for scanning
    a target in search of specific vulnerabilities and to ensure a system meets the
    compliance standard. However, as a security professional, you will need to customize
    your own scanning policies to perform vulnerability assessments on various types
    of systems.
  prefs: []
  type: TYPE_NORMAL
- en: Scanning with Nessus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Performing a vulnerability scan using Nessus is quite simple. In this section,
    I will guide you through the process of creating a customized scan.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new scan, use the following procedure:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the top-right corner, click on the New Scan button as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/01b05641-c312-4780-ace5-427ba051f846.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You''ll have the option of using one of the predefined policies available.
    If you would like to create a custom scan for a target, select the Advanced Scan
    policy as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d4501827-db6d-4afe-bc1b-e8b0e36e4181.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The policy/scan wizard will open, providing you with many options to customize
    your new scan. On the General tab, ensure you insert a name and description as
    they will aid in identifying the purpose of this new scan/policy; be sure to include
    your target(s):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a8b353cf-cded-45c8-b632-54d768fcd696.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You''ll have the option to schedule how often the scan/policy should run: once,
    daily, weekly, monthly, or yearly. This feature allows the automation of running
    periodic vulnerability scans on target systems. Should you decide to create a
    schedule for the scan, you can use the options to set the date and time, the time
    zone, and how often to repeat:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e9d1e526-598e-4059-9728-4667a4b05a66.png)'
  prefs: []
  type: TYPE_IMG
- en: If you'd like to receive email notifications of the status of a scan, simply
    click on the Notifications tab and enter the recipient's email address. However,
    ensure you've configured the SMTP server settings, which will handle the delivery
    of email notifications.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To access the SMTP server settings, go to `https://localhost:8834/#/settings/smtp-server`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Discovery tab contains the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Host Discovery: Provides options available to discover host devices on a network
    by using ping methods (ARP, TCP, UDP, and ICMP), discovering network printers,
    Novell NetWare hosts, and operational technology devices.'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Port Scanning: Provides customizable options for scanning a range of ports
    or a single port, performing enumeration of **Secure Shell** (**SSH**), **Windows
    Management Instrumentation** (**WMI**) using the **netstat** tool and **Simple
    Network Management Protocol** (**SNMP**). Performs network scanning on TCP and
    UDP ports and stealth scanning.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Service Discovery: Allows the mapping of each found service to a port number.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Assessment tab contains the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Brute Force**: Performs brute force testing on the Oracle database, and attempts
    logins to websites using Hydra.'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Web Application**: Web application vulnerability testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Windows**: Attempts to enumerate domain and local user accounts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Malware**: Scans for malware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot displays the options as outlined in the preceding
    section:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0efc3502-4c3c-4384-ab0e-ca8979605f5e.png)'
  prefs: []
  type: TYPE_IMG
- en: Once you've completed customizing your policy, click on Save. The new policy/scan
    will be available in the My Scans folder (left panel). To launch the newly created
    policy/scan, click the scan and select Launch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that you have an understanding of how to perform a scan using Nessus, let's
    take a deep dive into understanding the results Nessus produces in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Exporting Nessus results
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whenever a scan has been completed, we can simply click on it to access a very
    nice dashboard with the statistics. Exporting the results in various formats,
    such as PDF, HTML, CSV, and so on, is quite simple. Exporting the results will
    allow you to save the report offline. This will be beneficial as a penetration
    tester for either revisiting the vulnerability assessment details at a later time
    or providing the report to the people concerned (clients or team members).
  prefs: []
  type: TYPE_NORMAL
- en: 'To export the results of a Nessus scan, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the scan and click on Export:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fbce6399-42d4-45f4-b0f4-d066c0feb706.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You''ll have the option to select the output format. Then, the export wizard
    will provide another option to generate the final output as an Executive Summary
    or to customize a report to your personal preference:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/289075d1-1ada-4d68-adb9-745c816fccfa.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Should you choose to create a custom report, the following options are available:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c0eb3d9a-1d44-44a4-a972-453e8aa2a4d8.png)'
  prefs: []
  type: TYPE_IMG
- en: The executive report is better suited for upper management staff who are not
    concerned about all the technical details of the vulnerability assessment but
    rather the main overview of the report. The custom report can be used to include
    or remove specific details, based on what is required and the reader's interest.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a sample of the executive report generated for a vulnerability
    scan on the Metasploitable VM within our lab:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b9990e04-4c13-41bb-bb81-5ab899852b75.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, a severity rating and a score are assigned to each vulnerability
    found on the target. The **Common Vulnerability Scoring System** (**CVSS**) is
    a quantitative vulnerability scoring system that helps security professionals
    to determine the severity of a threat, exploit, or even a security weakness.
  prefs: []
  type: TYPE_NORMAL
- en: Further information on CVSS can be found on the FIRST website at [https://www.first.org/cvss/](https://www.first.org/cvss/).
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you have learned about the various formats for exporting Nessus
    results, the benefits of exporting reports offline, and types of reports. In the
    upcoming section, we will dive deep into analyzing the output/results provided
    by Nessus.
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing Nessus results
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Creating and performing a vulnerability scan with Nessus is quite easy; however,
    the mindset of a cybersecurity professional is most needed during the analysis
    phase. Nessus makes the analysis of the results easy. When a scan has been completed,
    you''ll be able to view the list of vulnerabilities found by selecting the Vulnerabilities
    tab, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c7506863-7e0e-4645-9721-d8fe1e923d78.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, we are able to see a list of vulnerabilities found on the target. Nessus
    provides us with the severity rating, name of the vulnerability, and the amount
    found:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/764420b9-1569-4b13-9643-d2eb66c381cb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To get more details on a vulnerability, click on the specific vulnerability,
    such as the one highlighted in the preceding screenshot. Nessus will provide you
    with a detailed description of the selected vulnerability, the risk information,
    plugin details, remediation, and external referencing, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/123f1914-d3f3-4c6f-b040-f50d8e989031.png)'
  prefs: []
  type: TYPE_IMG
- en: Using this information, a penetration tester can quickly identify the weakest
    points on a target, and narrow the scope when choosing payloads to exploit the
    target.
  prefs: []
  type: TYPE_NORMAL
- en: Now you have a firm understanding of Nessus and its capabilities. In the next
    section, we will use various web application scanners to assist us in detecting
    web vulnerabilities on a target server.
  prefs: []
  type: TYPE_NORMAL
- en: Using web application scanners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web application scanners focus primarily on detecting and identifying vulnerabilities
    on web servers, websites, and web applications. In your career in cybersecurity,
    whether as a penetration tester or a security practitioner, you may be tasked
    to perform some sort of security auditing on a target website or web server.
  prefs: []
  type: TYPE_NORMAL
- en: However, as a penetration tester, we need to be able to discover security misconfigurations
    and weaknesses on a target website and web server. An organization may contract
    you to perform a penetration test on their website rather than on their network,
    or even both. Remember the goal of having a penetration test done on an object
    such as a website is to identify the vulnerabilities and remediate them as soon
    as possible before an actual hacker is able to compromise the system and exfiltrate
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many web application scanners available on the market, from commercial
    to free and open source; here are some of them:'
  prefs: []
  type: TYPE_NORMAL
- en: Acunetix vulnerability scanner (commercial)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: w3af (free)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikto (free)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Burp Suite (commercial and free)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IBM AppScan (commercial)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the remaining sections of this chapter, we will cover various exercises using
    Nikto, WPScan, and Burp Suite to detect and identify security vulnerabilities
    on a target web server.
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a deep dive into learning about Nikto in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Nikto
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nikto is a popular open source web vulnerability scanner and is preinstalled
    in Kali Linux. This command-line tool is capable of identifying security flaws
    on a target website and providing detailed referencing for each issue found. Nikto
    is not a stealth-oriented tool and can be a bit noisy while performing its scan.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of its features are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Checking for any outdated components on a web server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Capable of identifying installed applications via headers and files on a target
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SSL support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performs subdomain guessing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache username enumeration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To get started with Nikto, we will perform a web vulnerability scan on our Metasploitable
    VM. If you recall, in the previous chapter, we performed a port scan on Metasploitable
    and saw that port `80` was open. By default, web servers open port `80` to allow
    inbound and outbound communication between a client and the web server.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open a new Terminal window using the `nikto -h <target>` syntax, where `-h`
    specifies a host (hostname or IP address). We use the `nikto -h 10.10.10.100`
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/024cb038-8c09-4d03-9861-e0e2667a56ed.png)'
  prefs: []
  type: TYPE_IMG
- en: If you provide a hostname, Nikto will be able to perform an IP lookup via the
    **Domain Name System** (**DNS**). During the initial phase, Nikto attempts to
    perform an operating system and service version fingerprinting; our target is
    using Ubuntu as its operating system and Apache 2.2.8 as the web server application.
  prefs: []
  type: TYPE_NORMAL
- en: '**Nikto** can be found under the Applications | 02 – Vulnerability Analysis
    tab in Kali Linux.'
  prefs: []
  type: TYPE_NORMAL
- en: Each point on the output is an indication of an issue Nikto has detected, whether
    a configuration is missing, access to a sensitive directory or file was found,
    or even an application version is outdated. For each security issue found, an
    **Open Source Vulnerability Database** (**OSVDB**) reference ID is associated
    with the issue. The OSVBD is an independent and open source database that contains
    information about web application security vulnerabilities. Once Nikto is able
    to identify a security flaw on a target, it provides an associated OSVDB reference
    ID. Once the OSVDB ID has been obtained, you can head over to [http://cve.mitre.org/data/refs/refmap/source-OSVDB.html](http://cve.mitre.org/data/refs/refmap/source-OSVDB.html)
    to reference the OSVDB IDs with CVE entries.
  prefs: []
  type: TYPE_NORMAL
- en: Further information about Nikto can be found at [https://cirt.net/Nikto2](https://cirt.net/Nikto2)
    and [https://github.com/sullo/nikto](https://github.com/sullo/nikto).
  prefs: []
  type: TYPE_NORMAL
- en: Now you have the essential skills to use Nikto, let's take a look at using WPScan
    in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: WPScan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Creating a website for a company involves a lot of programming and work. There
    are many **Content Management Systems** (**CMSes**) that allow you to create,
    manage, and publish a website quite easily. Imagine having to statically code
    web languages for multiple pages of a website or multiple websites; this would
    be a daunting task requiring good knowledge of web languages. A CMS allows a web
    administrator to easily manage and update the contents of a website seamlessly
    while being able to integrate additional third-party web plugins, allowing more
    functionality to the users.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many CMSes available; here are some of them:'
  prefs: []
  type: TYPE_NORMAL
- en: WordPress
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joomla
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drupal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plone
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On the internet, one of the most popular CMSes currently being used is WordPress.
    Whether you're a blogger, a freelancer, a start-up, or a large organization, many
    people are using WordPress as their preferred choice for a CMS. WordPress is an
    open source CMS that is based on MySQL and PHP. Since WordPress is very popular
    on the internet, we will use the **WPScan** tool within Kali Linux to scan for
    web vulnerabilities on a WordPress web server.
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin, you''ll need to install a WordPress server within your virtual lab
    environment. To do this, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to [https://www.turnkeylinux.org/wordpress](https://www.turnkeylinux.org/wordpress)
    and download the ISO image or the VM file (using the virtual machine files is
    easier to set up the VM).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once installed within your hypervisor, ensure the network configurations are
    enabled for the same network as your Kali Linux machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Power on the WordPress VM. It will receive an IP address automatically from
    the **Dynamic Host Configuration Protocol** (**DHCP**) service within the hypervisor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using your Kali Linux machine, perform a network and port scan to identify the
    WordPress server IP address.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the IP address into the Kali Linux web browser, and you should see the
    WordPress default web page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Using the `http://<ip address>/wp-login.php` URL will display the administrator
    login page as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5e7602b3-6b19-4260-b895-6e09d532d20f.png)'
  prefs: []
  type: TYPE_IMG
- en: This is the default login page for WordPress servers.
  prefs: []
  type: TYPE_NORMAL
- en: Optionally, the WPScan tool can be found under the Applications | 03 – Web Application
    Analysis | CMS & Framework Identification tab within the Kali Linux menu.
  prefs: []
  type: TYPE_NORMAL
- en: 'On your Kali Linux machine, we are going to perform a vulnerability scan on
    the WordPress web server by using the `wpscan --url <target IP or hostname>` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/44bdc057-e991-4940-bd3c-6e36c70f55c5.png)'
  prefs: []
  type: TYPE_IMG
- en: WPScan will provide the server platform; in our case, it's Apache.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, it will attempt to discover and list all the known vulnerabilities found
    and provide fixes and references for each as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7855b5f3-2c95-4704-8dc1-aecc728251d2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'WPScan is not only a vulnerability scanner for WordPress but has also the ability
    to perform user account enumeration. Let''s attempt to extract the user accounts
    on our WordPress server; use the `wpscan --url 10.10.10.100 -e u vp` command to
    perform user enumeration:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0f41445e-763d-4692-914c-894b97f9dd18.png)'
  prefs: []
  type: TYPE_IMG
- en: As you saw in our results, the `admin` user was discovered. Next, we can attempt
    to perform password cracking on the `admin` account using the brute force technique.
  prefs: []
  type: TYPE_NORMAL
- en: To create a custom wordlist for password cracking, you can use the **crunch**
    tool with Kali Linux. Additionally, you can download a wordlist from the internet.
    A good source is [https://github.com/danielmiessler/SecLists](https://github.com/danielmiessler/SecLists).
  prefs: []
  type: TYPE_NORMAL
- en: To perform password cracking using WPScan with an offline wordlist (ours is
    called `custom_list.txt`), we use the `wpscan --url 10.10.10.100 -e u --passwords
    custom_list.txt` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following snippet, we were able to crack the password for the user account:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e4a68ffe-793e-4bfa-8410-a2a312030523.png)'
  prefs: []
  type: TYPE_IMG
- en: As a penetration tester has obtained the username and password, the account
    is compromised. We can now log in to the control panel of the WordPress server
    to perform various malicious actions.
  prefs: []
  type: TYPE_NORMAL
- en: Password cracking can be a very time-consuming process and can take a few minutes
    or a few hours to complete.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have acquired the skills to perform a vulnerability
    assessment on a WordPress server using WPScan. In the next section, we will learn
    about another web vulnerability assessment tool, Burp Suite.
  prefs: []
  type: TYPE_NORMAL
- en: Burp Suite
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Burp Suite ([https://portswigger.net/burp](https://portswigger.net/burp)) is
    a **graphical user interface** (**GUI**) web application vulnerability scanner
    that has the capability to identify over 100 generic vulnerabilities, such as
    all the vulnerabilities found in the OWASP top 10 list of critical web application
    security risks.
  prefs: []
  type: TYPE_NORMAL
- en: The OWASP top 10 list can be found at [https://www.owasp.org/index.php/Category:OWASP_Top_Ten_2017_Project](https://www.owasp.org/index.php/Category:OWASP_Top_Ten_2017_Project).
  prefs: []
  type: TYPE_NORMAL
- en: Burp Suite applications allow a penetration tester to intercept all HTTP and
    HTTPS requests and responses between the web server (web application) and the
    browser, via its HTTP proxy component. By intercepting web traffic, Burp Suite
    can test various types of vulnerabilities and attacks such as fuzzing, brute force
    password attacks, decoding, obtaining hidden URLs via spidering, and a lot more.
  prefs: []
  type: TYPE_NORMAL
- en: Before getting started with Burp Suite, ensure your OWASP **Broken Web Applications**
    (**BWA**) virtual machine (victim machine) is online and has received an IP address.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the OWASP BWA VM is online, you should be presented with the following
    screen; however, your IP address details may be different from what is shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9403a26f-82d1-4260-8803-b436ab1989fc.png)'
  prefs: []
  type: TYPE_IMG
- en: On your Kali Linux machine, ensure there is end-to-end connectivity by pinging
    the OWASP BWA virtual machine. Once you've verified connectivity, it's time to
    open the Burp Suite application.
  prefs: []
  type: TYPE_NORMAL
- en: 'To complete this task, use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to Applications | 03 – Web Application Analysis | Web Application Proxies
    | Burp Suite.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now the application is open, the wizard will ask whether you would like to create
    a Temporary project, a New project on disk, or Open existing project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select Temporary project and click Next:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6a2b5a49-a6e2-49be-9934-9c62ec217318.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The next window will ask whether Burp Suite should use the default setting
    or load configurations from a file. Select the Use Burp defaults option, and click
    Start Burp to launch the user dashboard:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cf70a015-1a2e-4bff-9032-b9e56e6a287c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Traffic sent between your web browser and the target web server is not monitored
    or intercepted by Burp Suite. Burp Suite contains an HTTP proxy that allows the
    application to intercept HTTP traffic between a web browser and a target web server.
    The web browser does not directly interact with the web server; traffic is sent
    from the web browser to the Burp Suite HTTP proxy, then the HTTP proxy forwards
    the traffic to the target web server and vice versa. The following is a diagram
    showing the flow of traffic between a web browser and a web server:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3847ad67-9b44-4801-b88e-24cb6c6837fe.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Burp Suite works as an intercepting proxy application. By default, Burp Suite
    is not able to intercept any traffic between our Kali Linux machine and the OWASP
    BWA virtual machine. To configure our web browser to work with Burp Suite, use
    the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Open Firefox and click on the menu icon | Preferences (Options).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the default tab, scroll down until you see the Network Proxy settings ( Network
    Settings) and click on Settings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select Manual proxy configurations and use the configurations displayed in
    the next screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/03c0f462-1a21-48cb-8d59-51ca68a87b87.png)'
  prefs: []
  type: TYPE_IMG
- en: Ensure the No proxy for field is blank.
  prefs: []
  type: TYPE_NORMAL
- en: Click on OK to save your settings in Firefox.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now that we''ve configured our web browser to work with the Burp Suite HTTP
    proxy service, let''s head back over to the Burp Suite application to allow the
    interception of traffic. To do so, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on Proxy| Intercept, and click on the Intercept is on icon to toggle
    enable/disable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c4764ba2-2bf4-42e6-8366-067609b9e4e9.png)'
  prefs: []
  type: TYPE_IMG
- en: Ensure your configurations are set properly or the exercise won't work as it's
    intended to.
  prefs: []
  type: TYPE_NORMAL
- en: If the Intercept icon says on, Burp Suite is able to intercept traffic between
    the web browser and the web server. Additionally, be sure to forward requests;
    otherwise, they will stay within the interceptor and not be forwarded, and eventually
    the request will time out.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, enter the IP address of the OWASP BWA virtual machine within the address
    bar in Firefox on your Kali Linux machine. The default web page should load perfectly.
    On Burp Suite, click on Target | Site Map to see the HTTP requests and responses:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/736a5bde-14b8-4b2d-b56c-e74c676dc7e0.png)'
  prefs: []
  type: TYPE_IMG
- en: On the web browser, enter the URL (or IP address) of the OWASP BWA virtual machine.
    The HTTP requests and responses will appear on the Target | Site Map tab on Burp
    Suite.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that we've outlined how to intercept web traffic using Burp Suite, let's
    go a step further to perform an offensive attack on our Metasploitable machine.
    In the next section, we will use Burp Suite to perform a brute force attack.
  prefs: []
  type: TYPE_NORMAL
- en: Using Intruder for brute force
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Intruder component/module within Burp Suite allows a penetration tester
    to perform online password attacks using the brute force method. Let''s attempt
    to obtain the password to log in to the `http://<target ip addr>/mutillidae` URL:'
  prefs: []
  type: TYPE_NORMAL
- en: Using the Firefox web browser click on Mutillidae II. On Burp Suite, you should
    see the `mutillidae` folder appearing under the left pane of the Site map tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, right-click on the `mutillidae` folder, and select Add to scope as shown
    in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e2dbfa59-b1db-44e6-a420-6c3836564f61.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following Proxy history logging window will appear; simply click on Yes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f165eed0-2ab3-4771-ae0f-ddf66c92f9bf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To verify our scope has been added successfully, go to the Target | Scope tab:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/17d87000-4f8f-4137-b053-4c480b58ef6b.png)'
  prefs: []
  type: TYPE_IMG
- en: Now your scope has been added, head back to your web browser. At the top of
    the Mutillidae web page, you'll see a link that allows a user to perform login
    attempts. Use `admin` for the username and `password` for the password. The login
    attempt should fail; however, we need Burp Suite to capture specific details about
    the login field on the web page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's head back to Burp Suite to continue our exercise.
  prefs: []
  type: TYPE_NORMAL
- en: 'On Burp Suite, click on the Proxy | HTTP history tab and select the HTTP **POST**
    message, which has the login attempt from our browser (your `#` message may be
    different from what is shown in the following snippet). Once selected, right-click
    and choose Send to Intruder:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/23946f1b-1912-4561-98a7-b7229c9c005d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, click on the Intruder | Target tab to see the target IP address that
    has been set:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cf9e8bf2-7bfe-42d6-ae39-fde58aed0f26.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Within the Intruder tab, there are a few sub-tabs, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Target: Allows you to set a specific target and port number.'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Positions: Allows you to select where a payload will be inserted into the HTTP
    request.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Payloads: Provides the ability to configure the type of payload.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Options: Additional options can be set on this tab.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the Positions tab and click on the Clear button to clear all selections.
    By default, Burp Suite has selected certain areas of the HTTP request message
    to insert its payload. However, for our exercise, the payload is to be inserted
    in the password field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Highlight the word `password` and click on Add. This will allow Burp Suite
    to insert its payload on the selected field:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f282e168-49c6-4ae2-b4ed-e0c9f449c64e.png)'
  prefs: []
  type: TYPE_IMG
- en: The red text is the data sent from the browser to the web server. As you can
    see, the word `password` is the value we used during our login attempt.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Payloads tab. Enter `admin` in the text field and click Add; this
    will be our custom payload:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bc6bbd45-7c9b-40dc-a217-61378a647bcc.png)'
  prefs: []
  type: TYPE_IMG
- en: Ensure everything else is left as default in the remaining portions of the Payloads
    and Options tabs.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you''re ready to launch the payload, click on Start attack:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/66ea3971-6dd5-46e1-afd5-d180966f55e1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'When the attack has been completed, Intruder will open a new window to provide
    a summary. On the Results tab, notice we have an HTTP request message with a 302
    status code; this means an HTTP redirect took place. In other words, Intruder
    was able to successfully log in to Mutillidae. The details can be seen in the
    following screenshot with `username` and `password`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/50073b97-1646-4ee5-ad04-3644a5253edf.png)'
  prefs: []
  type: TYPE_IMG
- en: Selecting the HTTP request message with the **302** status code, you see the
    `username` and `password` that were sent from the web browser on the Request tab.
  prefs: []
  type: TYPE_NORMAL
- en: 'To view the response from the web server, click on the Response | Render tab.
    Here you will be able to see how the web application responded to the payload:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/02be4c19-8d9f-4fce-adb7-6abd14412ef1.png)'
  prefs: []
  type: TYPE_IMG
- en: Looking closely, you'll see the `admin` user account was successfully logged
    in. Please note that the user account shown in the preceding screenshot is the
    default administration account for the intentionally vulnerable Metasploitable
    virtual machine. Furthermore, do not try any sort of attack on devices or networks
    where you have not acquired legal permission to do so. This exercise was conducted
    in a lab environment.
  prefs: []
  type: TYPE_NORMAL
- en: The *Burp Suite Cookbook* by Sunny Wear contains a lot of recipes to perform
    web-based assessments. This title can be found at [https://www.packtpub.com/networking-and-servers/burp-suite-cookbook](https://www.packtpub.com/networking-and-servers/burp-suite-cookbook).
  prefs: []
  type: TYPE_NORMAL
- en: As you saw, Burp Suite is a very powerful application for web penetration testing
    and vulnerability assessments. This tool should definitely be part of your go-to
    list of tools whenever you're tasked with performing security auditing on a web
    server and website.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During the course of this chapter, we discussed the need to discover security
    weaknesses on a system and even a web server. We took a look at performing vulnerability
    scanning, customizing policies, and reporting using Nessus. Additionally, we learned
    about Nikto, an open source web vulnerability scanner, and using WPScan to detect
    security misconfigurations and flaws in WordPress. Lastly, we closed the chapter
    by covering the fundamentals of using the Burp Suite applications and performing
    a brute force attempt to gain entry into a website.
  prefs: []
  type: TYPE_NORMAL
- en: Upon completing this chapter, you now have the ability to successfully perform
    a vulnerability assessment on a target network and system using Nessus, and to
    perform website penetration testing using Burp Suite, Nikto, and WPScan.
  prefs: []
  type: TYPE_NORMAL
- en: I do hope this chapter has been informative and will help on your journey in
    the field of cybersecurity. In the next chapter, we will explore the basic concepts
    of wireless penetration testing.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are some questions based on the topics we have covered in this
    chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: After installing Nessus in Kali Linux, what command is used to enable the Nessus
    service?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Many financial institutions provide their customers with card payment functionality.
    To ensure the institution is compliant with industry standards, what framework
    should be used?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What types of reports can be exported from Nessus?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can you name two or three web vulnerability scanners that are preinstalled in
    Kali Linux?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What tool can be used to scan WordPress websites for security vulnerabilities?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For more information on Nessus, please visit [https://www.tenable.com/products/nessus/nessus-p](https://www.tenable.com/products/nessus/nessus-professional).[rofessional.](https://www.tenable.com/products/nessus/nessus-professional)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further information on PCI DSS can be found on the Security Standards Council
    website at [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
