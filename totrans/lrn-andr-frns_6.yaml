- en: Chapter 6. Recovering Deleted Data from an Android Device
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The extraction and acquisition techniques that you have learned so far will
    help you access various details such as call logs, messages, and so on. However,
    these techniques do not help us see the data that is deleted from the device.
    In this chapter, you will learn about data-recovery techniques that will enable
    you to view the data that is deleted on the device. Deleted data could contain
    highly sensitive information, and thus, data recovery is a crucial aspect of mobile
    forensics. In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: An overview of data recovery
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recovering data deleted from an SD card
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recovering data deleted from a phone's internal storage
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An overview of data recovery
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data recovery is a powerful concept within digital forensics. It is the process
    of retrieving deleted data from a device or SD card when it cannot be accessed
    normally. Being able to recover data that is deleted by a user could help solve
    several civil and criminal cases. This is because most of the accused just delete
    the details on the device, hoping that the evidence will be destroyed. Thus, in
    most of the criminal cases, deleted data can be crucial, because it may contain
    information the user wanted to erase from the Android device. For example, consider
    the scenario where a mobile phone has been seized from a terrorist.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Wouldn't it be of the greatest importance to know which items have been deleted
    by them? Access to any deleted SMS messages, pictures, dialed numbers, and so
    on can be of critical importance, as they may reveal a lot of sensitive information.
    From a normal user's point of view, recovering data that has been deleted would
    usually refer to the operating system's built-in solutions, such as the Recycle
    Bin in Windows. While it's true that data can be recovered from these locations,
    due to an increase in user awareness, these options don't often work. For instance,
    on a desktop computer, people now use *Shift* + *Delete* whenever they want to
    delete a file completely from their desktop. Similarly, within mobile environments,
    users are aware of restore operations provided by apps and so on. In spite of
    this, data recovery techniques allow a forensic investigator to access the data
    that is deleted from the device.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'With respect to Android, it is possible to recover most of the deleted data,
    including SMS, pictures, application data, and so on. However, it is important
    to seize the device in a proper manner and follow certain procedures, without
    which the data might be deleted permanently. To ensure that the deleted data is
    not lost forever, it is recommended that you keep the following points in mind:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Do not use the phone for any activity after seizing it. The deleted data exists
    on the device until the space is needed by some other incoming data. Hence, the
    phone must *not* be used for any sort of activity so that the data is not overwritten.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Even when the phone is not used, without any intervention from our end, data
    can be overwritten. For instance, an incoming SMS would automatically occupy the
    space that overwrites the deleted data. Also, remote wipe commands can wipe the
    content present on the device. To prevent the occurrence of such events, you can
    consider the option of placing the device in Faraday bags, as explained in [Chapter
    1](part0014.xhtml "Chapter 1. Introducing Android Forensics"), *Introducing Android
    Forensics*. Thus, care should be taken to prevent delivery of any new messages
    or data through any means of communication.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How can deleted files be recovered?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When a user deletes any data from the device, the data is not actually erased
    and continues to exist on the device. What gets deleted is the pointer to this
    data. All filesystems contain metadata that maintains information about the hierarchy
    of files, file names, and so on. Deletion does not actually erase the data, but
    instead, it removes the filesystem metadata. Just deleting the metadata increases
    the performance of operating systems; deleting the pointer and marking the space
    as available is an extremely fast operation compared to actually erasing all the
    data. Thus, when text messages or any other files are deleted, they are just made
    invisible to the user. However, the files are still present on the device as long
    as they are not overwritten by some other data.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Hence, it is possible to recover them before new data comes in and occupies
    the space.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'Recovering deleted data on Android involves two scenarios:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Recovering data that is deleted from an SD card, such as pictures, videos, and
    so on
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recovering data that is deleted from a device's internal storage, such as SMS,
    dialed numbers, browsing history, application data, chat logs, and so on
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following sections cover the techniques that can be used to recover deleted
    data from both the SD card and internal storage of an Android device.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Recovering data deleted from an SD card
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data present on an SD card can reveal a lot of information that is useful during
    a forensic investigation. The fact that pictures, videos, voice recordings, application
    data, and so on are stored on the SD card adds weight to this. As mentioned in
    the previous chapters, Android devices often use the FAT32 filesystem on the SD
    card. The main reason for this is that the FAT32 filesystem is widely supported
    in most operating systems, including Windows, Linux, and Mac OS X. The maximum
    file size on a FAT32-formatted drive is around 4 GB. With increasingly high resolution
    formats that are now available, this limit is commonly reached. Recovering the
    data deleted from an external SD can be pretty easy if it can be mounted as a
    drive.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: If the SD card is removable, it can be mounted as a drive by connecting it to
    a computer using a card reader. Any files can be transferred to the SD card while
    it's mounted. Some of the older devices that use USB mass storage also mount the
    device as a drive when connected through a USB cable. As explained earlier, in
    forensics, in order to make sure that the original evidence is not modified, a
    physical image of the disk is taken, and all further experimentation is done on
    the image itself. Similarly, in the case of SD card analysis, an image of the
    SD card needs to be taken. The process of imaging is similar to the one explained
    in [Chapter 5](part0040.xhtml "Chapter 5. Extracting Data Physically from Android
    Devices"), *Extracting Data Physically from Android Devices*. Once the imaging
    is done, we get a `dd` image file. In our example, we will use a free tool, FTK
    Imager. This tool is an imaging utility, and in addition to creating disk images,
    it can also be used to explore the contents of a disk image.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'The following steps are required to recover the contents of an SD card using
    FTK Imager:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Start FTK Imager. Click on **File** and then on **Add Evidence Item** in the
    menu.![Recovering data deleted from an SD card](img/image00376.jpeg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adding evidence in FTK Imager
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Select **Image File** in the **Select Source** dialog and click on **Next**.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Select File** dialog, browse to the location where you downloaded the
    `sdcard.dd` file. Select the file and click on **Finish**:![Recovering data deleted
    from an SD card](img/image00377.jpeg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Selecting the image file for analysis in FTK Imager
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: FTK Imager's default display will appear with the contents of the SD card visible
    in the **View** pane in the lower-right corner. You can also click on the **Properties**
    tab below the lower left pane to view the properties for the disk image.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the left pane, the drive has opened. You can open folders by clicking on
    the **+** sign. When you highlight a folder, its contents are shown on the right
    pane. When a file is selected, its contents can be seen in the bottom pane.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As shown in the following screenshot, the deleted files will have a red cross
    over the icons derived from their file extensions:![Recovering data deleted from
    an SD card](img/image00378.jpeg)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deleted files shown with red cross over the icons
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: To export the file, right-click on the file that contains the picture and select
    **Export Files**:![Recovering data deleted from an SD card](img/image00379.jpeg)
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Exporting the deleted files in FTK Imager
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 'Sometimes, only a fragment of the file is recoverable. This file fragment cannot
    be read or viewed directly. In this case, we need to look through unallocated
    spaces for more data. Carving can be used to recover from unallocated spaces.
    Winhex, Scalpel, Foremost, and Photorec are some of the tools that can help you
    do this. Most of the latest Android devices do not mount as a mass storage. This
    is because these devices do not support USB mass storage and, instead, use the
    MTP or PTP protocol. With USB mass storage, the computer would need exclusive
    access to the storage. In other words, the external storage needs to be completely
    disconnected from the Android OS when it is connected to a workstation. This leads
    to several other complications with respect to mobile apps. When an Android device
    uses MTP, it appears to the computer as a media device and not as removable storage,
    as shown in the following screenshot:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '![Recovering data deleted from an SD card](img/image00380.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: An Android device shown under Portable Devices in Windows
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: However, the normal data-recovery tools would need a mount drive in order to
    perform a scan, though this is not a recommended procedure as it might result
    in changes being made to the device. Hence, most of the latest devices that use
    MTP/PTP are not treated as mount drives. So, the traditional data-recovery tools
    that work for computers do not work on these devices.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: For the reasons mentioned earlier, when the device uses MTP/PTP and is not mounted
    as a drive, the recovery can be done by certain Android-specific data-recovery
    tools that need the USB debugging option to be turned on. Almost all the Android
    data-recovery tools on the market need you to enable USB debugging so that your
    device and the SD card can be recognized before starting Android data recovery.
    Also, these tools work only on rooted devices. We will now look at recovering
    data deleted from the internal memory of an Android device.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Recovering data deleted from internal memory
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Recovering files deleted from Android''s internal memory, such as app data
    and so on, is not supported by most analytical tools. This is for two main reasons.
    First, unlike the common filesystems used in SD cards, the filesystems used by
    internal memory may not be recognized and mounted by forensic tools. Second, the
    examiner cannot get access to the raw partitions of the internal memory of an
    Android phone, unless the phone is rooted. The following are some of the other
    issues the examiner may face when attempting to recover data from the internal
    memory on Android devices:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: To get access to the internal memory, you can try to root the phone. However,
    the rooting process might involve writing some data to the `/data` partition.
    This process could overwrite valuable data on the device.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unlike SD cards, the internal filesystem here is not FAT32 (which is widely
    supported by forensic tools). The internal filesystem could be YAFFS2 (in older
    devices), EXT3, EXT4, RFS, or something proprietary built to run on Android. Therefore,
    many of the recovery tools designed for use with Windows filesystems won't work.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application data on Android devices is commonly stored in the SQLite format.
    While most forensic tools provide access to the database files, they may have
    to be exported and viewed in a native browser. The examiner must examine the raw
    data to ensure that the deleted data is not overlooked by the forensic tool.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For these reasons, recovering data deleted from the internal memory of an Android
    device is difficult, but not impossible. The internal memory of Android devices
    holds the bulk of the user data and the possible keys to your investigation. As
    mentioned earlier, the device must be rooted in order to access the raw partitions.
    It's important to note that most of the Android-recovery tools on the market do
    not highlight the fact that they work only on rooted phones. Hardware-based solutions,
    such as UFED and XRY, are fully capable of recovering deleted data from internal
    memory as well as SD cards. Let's now see how we can recover deleted data from
    an Android phone.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Recovering deleted data by parsing SQLite files
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Most of the application data in Android is stored in SQLite files. Data related
    to text messages, e-mails, and most app data is stored in SQLite files. SQLite
    databases can store deleted data within the database itself. Files marked for
    deletion by the user no longer appear in the active SQLite database files. Therefore,
    it is possible to recover the deleted data, such as text messages, contacts, and
    more, by analyzing these SQLite files. There are two areas within a SQLite page
    that can contain deleted data: unallocated blocks and free blocks. Most of the
    commercial tools that recover deleted data scan the unallocated blocks and free
    blocks of the SQLite pages. Parsing the deleted data can be done using the available
    forensic tools such as Oxygen Forensics SQLite Viewer. The trial version of the
    SQLite Viewer can be used for this purpose. However, there are certain limitations
    on the amount of data that you can recover.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: 'For our example, we will recover the deleted SMS messages from an Android device.
    Recovering deleted SMS messages from an Android phone is quite often requested
    as part of forensic analysis on a device, mainly because it''s the most popular
    form of communication. There are different ways to recover deleted text messages
    on an Android device. However, with respect to recovery through parsing SQLite
    files, we need to understand where the messages are being stored on the device.
    In [Chapter 4](part0031.xhtml "Chapter 4. Extracting Data Logically from Android
    Devices"), *Extracting Data Logically from Android Devices*, we explained the
    important locations on the Android device where user data is stored. Here is a
    quick recap:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Every application stores its data in the `/data/data` folder (again, this requires
    root access to acquire data)
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The files at `/data/data/com.android.providers.telephony/databases` contain
    details about SMS/MMS
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deleted text messages can be recovered by examining an SQLite database file
    named mmssms.db stored in /data/data/com.android.providers.telephony/databases.
    Here are the steps required:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Extract the SMS database SQLite file (`mmssms.db`). This can be done using logical
    data-extraction techniques, which are covered under [Chapter 4](part0031.xhtml
    "Chapter 4. Extracting Data Logically from Android Devices"), *Extracting Data
    Logically from Android Devices*.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once the files are extracted to the local machine, you can use available tools
    such as Cellebrite. These tools may extract the deleted details automatically.
    You can also manually check for fragments using a Hex viewer or a SQLite Viewer,
    such as Oxygen Forensics SQLite Viewer.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One way to view the deleted data is by clicking on the **Blocks containing deleted
    data** tab in the Oxygen Forensics SQLite Viewer, as shown in the following screenshot
    (referenced from [http://az4n6.blogspot.in/2013/02/finding-and-reverse-engineering-deleted_1865.html](http://az4n6.blogspot.in/2013/02/finding-and-reverse-engineering-deleted_1865.html)):![Recovering
    deleted data by parsing SQLite files](img/image00381.jpeg)
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deleted data shown in Oxygen Forensics SQLite Viewer
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: You can also try the available open source Python scripts ([http://az4n6.blogspot.in/2013/11/python-parser-to-recover-deleted-sqlite.html](http://az4n6.blogspot.in/2013/11/python-parser-to-recover-deleted-sqlite.html))
    that parse the SQLite files for deleted records.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Recovering deleted data through file carving techniques
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**File carving** is an extremely useful method in forensics, because it allows
    hidden or deleted data to be recovered for analysis. In simple terms, file carving
    is the process of reassembling files from fragments in the absence of filesystem
    metadata. In file carving, specified file types are searched for and extracted
    across the binary data to create a forensic image of a partition or an entire
    disk. File carving recovers files from the unallocated space in a drive based
    merely on file structure and content, without any matching filesystem metadata.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Unallocated space refers to the part of the drive for which there are no longer
    any pointers in file system structures such as file tables .
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Files can be recovered or reconstructed by scanning the raw bytes of the disk
    and reassembling them. This can be done by examining the header (the first few
    bytes) and footer (the last few bytes) of a file.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: File-carving methods are categorized based on the underlying technique in use.
    The header-footer carving method relies on recovering the files based on the header
    and footer information. For instance, the JPEG files start with 0xffd8 and ends
    with 0xffd9\. The locations of the header and footer are identified, and everything
    between these two endpoints is carved. Similarly, the file structure carving method
    is based on the internal layout of a file to reconstruct the file. However, the
    traditional file-carving techniques, such as the ones we've already explained,
    may not work if the data is fragmented. To overcome this, new techniques, such
    as smart carving, use the fragmentation characteristics of several popular filesystems
    to recover the data.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the phone is imaged, it can be analyzed using tools such as **Scalpel**.
    Scalpel is a powerful open source utility to carve files. This tool analyzes the
    block database storage and identifies the deleted files and recovers them. Scalpel
    is filesystem independent and is known to work on various filesystems including,
    FAT, NTFS, EXT2, EXT3, HFS, and so on. The following steps explain how to recover
    files using Scalpel on an Ubuntu workstation:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Install Scalpel on the Ubuntu workstation using the `sudo apt-get install scalpel`
    command.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The `scalpel.conf` file present in the `/etc/scalpel` directory contains information
    about the supported file types, as shown in the following screenshot:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Recovering deleted data through file carving techniques](img/image00382.jpeg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: Scalpel configuration file
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: This file needs to be modified in order to include the files that are related
    to Android. A sample `scalpel.conf` file can be downloaded from [https://asecuritysite.com/scalpel.conf.txt](https://asecuritysite.com/scalpel.conf.txt).
    You can also uncomment the files and save the `conf` file to select the file types
    of your choice. Once this is done, replace the original `conf` file with the one
    that is downloaded.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Scalpel needs to be run along with the preceding configuration file on the `dd`
    image being examined. You can run the tool using the command shown in the following
    screenshot, by inputting the configuration file and the `dd` file. Once the command
    is run, the tool starts to carve the files and build them accordingly.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '![Recovering deleted data through file carving techniques](img/image00383.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
- en: Running the Scalpel tool on the image file
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: 'The output folder specified in the preceding command now contains a list of
    folders based on the file types. Each of these file types contains data based
    on the folder name. For instance, `jpg 2-0` contains the recovered files related
    to the `.jpg` extension:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '![Recovering deleted data through file carving techniques](img/image00384.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: Output of the Scalpel tool
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in the preceding screenshot, each folder contains recovered data from
    the Android device, such as images, `.pdf` files, `.zip` files, and so on. While
    some pictures are recovered completely, some are not recovered to a full extent,
    as shown in the following screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '![Recovering deleted data through file carving techniques](img/image00385.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
- en: Data recovered using the Scalpel tool
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: Applications such as DiskDigger can be installed on Android devices to recover
    different types of files from both the internal memory and SD cards. Applications
    such as DiskDigger include support for `.jpg` files, `.mp3` and .`wav` audio,
    `.mp4` and `.3gp` video, raw camera formats, Microsoft Office files (`.doc`, `.xls`,
    and `.ppt`), and so on. However, as mentioned earlier, the application requires
    root privileges on the Android device in order to recover the content from the
    internal memory. Thus, file-carving techniques play a very important role in recovering
    important deleted files from the device's internal memory.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing backups
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It is also recommended that you check whether the device has any backup applications
    or files installed. The initial release of Android did not include a mechanism
    for the users to back up their personal data. Hence, several backup applications
    have been used extensively by the users. Using these apps, users have the ability
    to back up their data either to the SD card or to the cloud. For example, the
    `Super Backup` app contains the options to back up call logs, contacts, SMS, and
    so on, as shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '![Analyzing backups](img/image00386.jpeg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
- en: The Super Backup Android app
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: On detection of a backup application, the forensic examiners must attempt to
    determine where the data is stored. The data saved in a backup may contain important
    information, so looking for any third-party backup app on the device could be
    very helpful.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also restore the contacts on the device using the **Restore Contacts**
    option through the Google account configured on the device. This would work if
    the user of the device has previously synced their contacts using the **Sync Settings**
    option available in Android. This option synchronizes the contacts and other details
    and stores them in the cloud. A forensic examiner with legal authority or proper
    consent can restore the deleted contacts if they can get access to the Google
    account configured on the device. Once the account is accessed, perform the following
    steps to restore the data:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Gmail account.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Gmail** in the top-left corner and select **Contacts**, as shown
    in the following screenshot:![Analyzing backups](img/image00387.jpeg)
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Contacts menu in Gmail
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Click on **More**, which is present above the contacts list.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Restore Contacts**, and the following screen appears:![Analyzing
    backups](img/image00388.jpeg)
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Restore Contacts dialog box
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Using this technique, you can restore the contact list to the state that it
    was in at any point within the past 30 days.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data recovery is the process of retrieving deleted data from the device. Thus,
    it is a very important concept in forensics. In this chapter, we saw various techniques
    to recover deleted data from both an SD card and internal memory. While recovering
    the data from a removable SD card is easy, recovering data from internal memory
    involves a few complications. SQLite file-parsing and file-carving techniques
    aid a forensic analyst in recovering the deleted items that are present in the
    internal memory of the Android device. Checking for any installed backup apps
    on the device is recommended as it saves both time and effort.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 数据恢复是从设备中检索已删除数据的过程。因此，这是取证中一个非常重要的概念。在本章中，我们看到了从SD卡和内部存储器中恢复已删除数据的各种技术。虽然从可移动SD卡中恢复数据很容易，但从内部存储器中恢复数据涉及一些复杂性。SQLite文件解析和文件刻录技术可以帮助取证分析人员恢复安卓设备内部存储器中存在的已删除项目。建议检查设备上是否安装了任何备份应用程序，因为这样可以节省时间和精力。
- en: In the next chapter, we will try to understand the forensic perspective on analysis
    of Android apps.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将尝试了解对安卓应用程序进行取证分析的视角。
