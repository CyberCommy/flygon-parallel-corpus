- en: Part 2. *The Delivery Phase*
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2部分。*交付阶段*
- en: '*[Physical Attacks and Social Engineering](ch07.html "Chapter 7. Physical Attacks
    and Social Engineering")*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*[物理攻击和社会工程](ch07.html "第7章。物理攻击和社会工程")*'
- en: '*[Exploiting Wireless Communications](ch08.html "Chapter 8. Exploiting Wireless
    Communications")*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*[利用无线通信](ch08.html "第8章。利用无线通信")*'
- en: '*[Reconnaissance and Exploitation of Web-based Applications](ch09.html "Chapter 9. Reconnaissance
    and Exploitation of Web-based Applications")*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*[对基于Web的应用程序进行侦察和利用](ch09.html "第9章。对基于Web的应用程序进行侦察和利用")*'
- en: '*[Exploiting Remote Access Communications](ch10.html "Chapter 10. Exploiting
    Remote Access Communications")*'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*[利用远程访问通信](ch10.html "第10章。利用远程访问通信")*'
- en: '*[Client-side Exploitation](ch11.html "Chapter 11. Client-side Exploitation")*'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*[客户端利用](ch11.html "第11章。客户端利用")*'
- en: '*[Installing Kali Linux](apa.html "Appendix A. Installing Kali Linux")*'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*[安装Kali Linux](apa.html "附录A。安装Kali Linux")*'
- en: Chapter 7. Physical Attacks and Social Engineering
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。物理攻击和社会工程
- en: Social engineering, especially when combined with physical access to the target
    system, is the single most successful attack vector used for penetration testing
    or an actual attack.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 社会工程，特别是与对目标系统的物理访问相结合时，是用于渗透测试或实际攻击的最成功的攻击向量。
- en: As an attack route supporting the kill chain, social engineering focuses on
    the nontechnical aspects of an attack that take advantage of a person trust and
    innate helpfulness to deceive and manipulate them into compromising a network
    and its resources.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 作为支持杀链的攻击路径，社会工程侧重于攻击的非技术方面，利用人们的信任和天生的乐于助人来欺骗和操纵他们，使其妥协网络及其资源。
- en: 'The success of social engineering attacks relies on two key factors:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 社会工程攻击的成功依赖于两个关键因素：
- en: The knowledge that is gained during the reconnaissance phase. The attacker must
    know the names and usernames associated with the target; more importantly, the
    attacker must understand the concerns of the users on the network.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在侦察阶段获得的知识。攻击者必须了解与目标相关的名称和用户名；更重要的是，攻击者必须了解网络用户的关注点。
- en: Understanding how to apply this knowledge to convince potential targets to activate
    the attack by clicking on a link, or executing a program. For example, if the
    target company has just merged with a former competitor, the job security of employees
    will likely be the top-of-mind concern. Therefore, e-mails or documents with titles
    associated with that subject will likely be opened by targeted individuals.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解如何应用这些知识来说服潜在目标通过点击链接或执行程序来激活攻击。例如，如果目标公司刚刚与以前的竞争对手合并，员工的工作安全可能是最关注的问题。因此，与该主题相关的电子邮件或文件很可能会被目标个人打开。
- en: Kali Linux provides several tools and frameworks that have an increased chance
    of success if social engineering is used as a pretext to influence victims to
    open files or execute certain operations. Examples include script attacks (includes
    Visual Basic, WMI, and PowerShell scripts), executables created by the Metasploit
    Framework, and the **BeEF** (**The Browser Exploitation Framework**).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux提供了几种工具和框架，如果以社会工程为借口影响受害者打开文件或执行某些操作，成功的几率会增加。例如脚本攻击（包括Visual Basic、WMI和PowerShell脚本）、由Metasploit
    Framework创建的可执行文件，以及**BeEF**（**浏览器利用框架**）。
- en: In this chapter, we'll focus on Social Engineering Toolkit or SEToolkit. The
    techniques used in employing these tools will serve as the model for using social
    engineering to deploy attacks from other tools.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将专注于社会工程工具包或SEToolkit。使用这些工具的技术将作为使用社会工程从其他工具部署攻击的模型。
- en: 'By the end of this chapter, you will learn how to use the SEToolkit to do the
    following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将学会如何使用SEToolkit执行以下操作：
- en: Obtain a remote shell using spear phishing and Java applet attacks
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用鱼叉式网络钓鱼和Java小程序攻击获取远程shell
- en: Harvest or collect usernames and passwords using the credential harvester attack
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用凭证收割者攻击收集用户名和密码
- en: Launch the tabnabbing and webjacking attacks
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动tabnabbing和webjacking攻击
- en: Employ the multi-attack web method
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用多攻击网络方法
- en: Use PowerShell's alphanumeric shellcode injection attack
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用PowerShell的字母数字shellcode注入攻击
- en: 'To support SET''s social engineering attacks, the following general implementation
    practices will be described:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为支持SET的社会工程攻击，将描述以下一般实施做法：
- en: Hiding malicious executables and obfuscating the attacker's URL
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏恶意可执行文件和混淆攻击者的URL
- en: Escalating an attack using DNS redirection
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过DNS重定向升级攻击
- en: You will also learn how to create and implement hostile physical devices based
    on the Raspberry PI microcomputer.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将学习如何创建和实施基于Raspberry PI微型计算机的敌对物理设备。
- en: Social Engineering Toolkit
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社会工程工具包
- en: Social-Engineer Toolkit (SEToolkit) was created and written by David Kennedy
    (ReL1K), and it is maintained by an active group of collaborators ([www.social-engineer.org](http://www.social-engineer.org)).
    It is an open source python-driven framework that is specifically designed to
    facilitate social engineering attacks.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Social-Engineer Toolkit（SEToolkit）是由David Kennedy（ReL1K）创建和编写的，并由一群活跃的合作者维护（[www.social-engineer.org](http://www.social-engineer.org)）。它是一个开源的Python驱动框架，专门设计用于促进社会工程攻击。
- en: A significant advantage of SEToolkit is its interconnectivity with the Metasploit
    Framework which provides the payloads needed for exploitation, the encryption
    to bypass anti-virus, and the listener module that connects to the compromised
    system when it sends a shell back to the attacker.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: SEToolkit的一个重要优势是它与Metasploit Framework的互连性，提供了所需的利用载荷、用于绕过防病毒的加密，以及当被攻击系统向攻击者发送shell时连接到受损系统的监听器模块。
- en: Before launching SEToolkit, you may wish to make some modifications to the configuration
    file.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动SEToolkit之前，您可能希望对配置文件进行一些修改。
- en: 'The social engineering toolkit is preconfigured with common default settings;
    however, these settings can be altered to adapt the kit to specific attack scenarios.
    In Kali, the configuration file is `/usr/share/set/config/set_config`. Modifying
    this file allows you to control the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 社会工程工具包预先配置了常见的默认设置；但是，这些设置可以被修改以适应特定的攻击场景。在Kali中，配置文件是`/usr/share/set/config/set_config`。修改此文件允许您控制以下内容：
- en: Metasploit variables, including the location, the database to use, how many
    times a payload should be encoded, and commands to automatically run once a meterpreter
    session has been established.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit变量，包括位置、要使用的数据库、有效负载应该被编码的次数以及一旦建立了meterpreter会话后自动运行的命令。
- en: '**Ettercap** and **dsniff** switches to facilitate DNS redirection attacks
    and capture of authentication credentials. By controlling the DNS, an attacker
    can automatically direct groups of people to false sites created using the `setoolkit`.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ettercap**和**dsniff**开关用于促进DNS重定向攻击和捕获认证凭据。通过控制DNS，攻击者可以自动将一群人引导到使用`setoolkit`创建的虚假网站。'
- en: Configuration of `sendmail` or other mail programs for use in attacks requiring
    spoofed e-mail addresses; this allows the social engineer to enhance the credibility
    of attacks by using an e-mail address that appears to come from a trusted source,
    such as a senior manager in the same company.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`sendmail`或其他邮件程序以在需要伪造电子邮件地址的攻击中使用；这允许社会工程师通过使用看似来自可信来源的电子邮件地址（例如同一公司的高级经理）来增强攻击的可信度。
- en: The e-mail provider to be used, including Gmail, Hotmail, and Yahoo.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用的电子邮件提供程序，包括Gmail、Hotmail和Yahoo。
- en: Creating self-signed Java applets with a spoofed publisher, activating SSL certificates,
    and stealing digital signatures.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用伪造的发布者创建自签名的Java小程序，激活SSL证书，并窃取数字签名。
- en: Other variables such as the IP address, port assignments, and encoding parameters.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他变量，如IP地址、端口分配和编码参数。
- en: 'To open Social Engineering Toolkit (SET) in Kali distribution, go to **Applications**
    | **Kali Linux** | **Exploitation Tools** | **Social Engineering Toolkit** | **setoolkit**,
    or enter `setoolkit` at a shell prompt. You will be presented with the main menu,
    as shown in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Kali发行版中打开社会工程工具包（SET），请转到**应用程序** | **Kali Linux** | **利用工具** | **社会工程工具包**
    | **setoolkit**，或在shell提示符下输入`setoolkit`。将显示主菜单，如下截图所示：
- en: '![Social Engineering Toolkit](img/3121OS_07_01.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包](img/3121OS_07_01.jpg)'
- en: 'If you select `1) Social-Engineering Attacks`, you will be presented with the
    following submenu:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选择“1）社会工程攻击”，将显示以下子菜单：
- en: '![Social Engineering Toolkit](img/3121OS_07_02.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包](img/3121OS_07_02.jpg)'
- en: 'The following is a brief explanation of the social engineering attacks :'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对社会工程攻击的简要解释：
- en: '`Spear-Phishing Attack Vector` allows an attacker to create e-mail messages
    and send them to targeted victims with attached exploits.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`鱼叉式网络钓鱼攻击向量`允许攻击者创建电子邮件消息并将其发送给有附加攻击的目标受害者。'
- en: '`Website Attack Vectors` utilize multiple web-based attacks, including the
    following:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`网站攻击向量`利用多种基于Web的攻击，包括以下内容：'
- en: '`Java Applet Attack Method` spoofs a Java certificate and delivers a Metasploit-based
    payload. This is one of the most successful attacks, and it is effective against
    Windows, Linux, or OSX targets.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Java小程序攻击方法`伪造Java证书并传递基于Metasploit的有效负载。这是最成功的攻击之一，对Windows、Linux或OSX目标有效。'
- en: '`Metasploit Browser Exploit Method` delivers a Metasploit payload using an
    iFrame attack.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Metasploit浏览器利用方法`使用iFrame攻击传递Metasploit有效负载。'
- en: '`Credential Harvester Attack Method` clones a website and automatically rewrites
    the POST parameters to allow an attacker to intercept and harvest user credentials;
    it then redirects the victim back to the original site when harvesting is completed.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`凭证收割者攻击方法`克隆一个网站并自动重写POST参数，以允许攻击者拦截和收割用户凭证；然后在收割完成后将受害者重定向回原始网站。'
- en: '`Tabnabbing Attack Method` replaces information on an inactive browser tab
    with a cloned page that links back to the attacker. When the victim logs in, the
    credentials are sent to the attacker.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Tabnabbing攻击方法`用克隆页面替换非活动浏览器选项卡上的信息，该页面链接回攻击者。当受害者登录时，凭证将发送给攻击者。'
- en: '`Web Jacking Attack Method` utilizes iFrame replacements to make the highlighted
    URL link appear legitimate; however, when it is clicked, a window pops up, and
    is then replaced with a malicious link.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`网络劫持攻击方法`利用iFrame替换使突出显示的URL链接看起来合法；但是，当它被点击时，会弹出一个窗口，然后被恶意链接替换。'
- en: '`Multi-Attack Web Method` allows an attacker to select some or all of several
    attacks that can be launched at once, including `The Java Applet Attack Method`,
    `The Metasploit Browser Exploit Method`, `Credential Harvester Attack Method`,
    `Tabnabbing Attack Method`, and `Man Left in the Middle Attack Method`.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`多攻击Web方法`允许攻击者选择一次性发动的几种攻击，包括`Java小程序攻击方法`、`Metasploit浏览器利用方法`、`凭证收割者攻击方法`、`Tabnabbing攻击方法`和`中间人攻击方法`。'
- en: '`Infectious Media Generator` creates an `autorun.inf` file and Metasploit payload.
    Once burned or copied to a USB device or physical media (CD or DVD) and inserted
    into the target system, it will trigger an autorun (if an autorun is enabled)
    and compromise the system.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`传染性媒体生成器`创建一个`autorun.inf`文件和Metasploit有效负载。一旦刻录或复制到USB设备或物理媒体（CD或DVD）并插入目标系统，它将触发自动运行（如果自动运行已启用）并
    compromise系统。'
- en: The `Create a Payload and Listener` module is a rapid menu-driven method of
    creating a Metasploit payload. The attacker must use a separate social engineering
    attack to convince the target to launch it.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`创建有效负载和监听器`模块是一种快速的菜单驱动方法，用于创建Metasploit有效负载。攻击者必须使用单独的社会工程攻击来说服目标启动它。'
- en: '`MassMailer Attack` allows the attacker to send multiple customized e-mails
    to a single e-mail address or a list of recipients.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MassMailer攻击`允许攻击者向单个电子邮件地址或收件人列表发送多个定制的电子邮件。'
- en: '`Arduino-Based Attack Vector` programs Arduino-based devices, such as the Teensy.
    Because these devices register as a USB keyboard when connected to a physical
    Windows system, they can bypass security based on disabling the autorun or other
    endpoint protection.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`基于Arduino的攻击向量`程序化Arduino设备，如Teensy。因为这些设备在连接到物理Windows系统时注册为USB键盘，它们可以绕过基于禁用自动运行或其他端点保护的安全性。'
- en: '`SMS Spoofing Attack Vector` allows the attacker to send a crafted Short Message
    Service text to a person''s mobile device, and spoof the source of the message.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`短信欺骗攻击向量`允许攻击者向某人的移动设备发送精心制作的短信服务文本，并伪装消息的来源。'
- en: '`Wireless Access Point Attack Vector` will create a fake wireless access point
    and DHCP server on the attacker''s system and redirect all DNS queries to the
    attacker. The attacker can then launch various attacks, such as the Java Applet
    Attack or a credential harvester attack.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`无线接入点攻击向量`将在攻击者系统上创建一个虚假的无线接入点和DHCP服务器，并将所有DNS查询重定向到攻击者。攻击者随后可以发动各种攻击，如Java小程序攻击或凭证窃取攻击。'
- en: '`QRcode Generator Attack Vector` creates a QRCode with a defined URL associated
    with an attack.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QR码生成器攻击向量`创建一个与攻击相关的定义URL的QR码。'
- en: '`Powershell Attack Vectors` allow the attacker to create attacks that rely
    on PowerShell, a command-line shell and scripting language available on all Windows
    Vista and higher versions.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Powershell攻击向量`允许攻击者创建依赖于PowerShell的攻击，PowerShell是一种命令行shell和脚本语言，适用于所有Windows
    Vista及更高版本。'
- en: '`Third Party Modules` allow the attacker to use the **Remote Administration
    Tool Tommy Edition** (**RATTE**), as part of a Java Applet Attack or as an isolated
    payload. RATTE is a text menu-driven remote access tool.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`第三方模块`允许攻击者使用**远程管理工具Tommy Edition**（**RATTE**），作为Java小程序攻击的一部分或作为独立有效载荷。RATTE是一个文本菜单驱动的远程访问工具。'
- en: SEToolkit also gives a menu item for `Fast-Track Penetration Testing`, which
    gives rapid access to some specialized tools that support brute force identification
    and password cracking of SQL databases, as well as some customized exploits that
    are based on Python, SCCM attack vectors, Dell computer DRAC/chassis exploitation,
    user enumeration, and PSEXEC PowerShell injection.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: SEToolkit还提供了`快速跟踪渗透测试`的菜单项，该菜单项可以快速访问一些支持SQL数据库的暴力识别和密码破解的专门工具，以及一些基于Python、SCCM攻击向量、戴尔计算机DRAC/机箱利用、用户枚举和PSEXEC
    PowerShell注入的定制利用。
- en: The menu also gives options for updating the Metasploit Framework, SEToolkit,
    and the SEToolkit configuration. However, these additional options should be avoided
    as they are not fully supported by Kali, and may cause conflicts with dependencies.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单还提供了更新Metasploit Framework、SEToolkit和SEToolkit配置的选项。但是，应避免使用这些附加选项，因为它们在Kali上得到的支持不完整，并且可能会导致依赖冲突。
- en: As an initial example of the SEToolkit's strengths, we'll see how it can be
    used to gain a remote shell—a connection made from the compromised system back
    to the attacker's system.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 作为SEToolkit优势的一个初始示例，我们将看到如何使用它来获得远程shell——从受损系统到攻击者系统的连接。
- en: Spear Phishing Attack
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络钓鱼攻击
- en: Phishing is an e-mail fraud attack carried out against a large number of victims,
    such as a list of known American Internet users. The targets are generally not
    connected, and the e-mail does not attempt to appeal to any specific individual.
    Instead, it contains an item of general interest (for example, "Click here for
    bargain medications") and a malicious link or attachment. The attacker plays the
    odds that at least some people will click on the link attachment to initiate the
    attack.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 网络钓鱼是针对大量受害者进行的电子邮件欺诈攻击，比如已知的美国互联网用户名单。目标通常没有联系，电子邮件也不试图吸引任何特定个人。相反，它包含一个普遍感兴趣的项目（例如，“点击这里购买便宜的药物”）和一个恶意链接或附件。攻击者打赌至少有一些人会点击链接或附件来发起攻击。
- en: On the other hand, spear phishing is a highly specific form of phishing attack—by
    crafting the e-mail message in a particular way, the attacker hopes to attract
    the attention of a specific audience. For example, if the attacker knows that
    the sales department uses a particular application to manage its customer relationships,
    he may spoof an e-mail pretending that it is from the application's vendor with
    a subject line of "Emergency fix for <application> - Click link to download".
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，钓鱼攻击是一种高度特定的网络钓鱼攻击形式——通过以特定方式制作电子邮件消息，攻击者希望吸引特定受众的注意。例如，如果攻击者知道销售部门使用特定应用程序来管理其客户关系，他可能伪装成应用程序供应商发送一封电子邮件，主题是“<应用程序>的紧急修复-点击链接下载”。
- en: Tip
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The success rate of a phishing attack is typically less than five percent; however,
    the success rate of a spear phishing attack ranges from forty to eighty percent.
    This is why information from the reconnaissance phase is critical to the success
    of this type of attack.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 网络钓鱼攻击的成功率通常低于5%；然而，网络钓鱼攻击的成功率范围为40%至80%。这就是为什么侦察阶段的信息对于这种类型的攻击的成功至关重要。
- en: On average, only ten to fifteen e-mails need to be sent to a target before at
    least one is clicked on.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 平均而言，只需要向目标发送十到十五封电子邮件，就至少会有一封被点击。
- en: Before launching the attack, ensure that `sendmail` is installed on Kali (`apt-get
    install sendmail`) and change the `set_config` file from `SENDMAIL=OFF` to `SENDMAIL=ON`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在发动攻击之前，请确保Kali上安装了`sendmail`（`apt-get install sendmail`）并将`set_config`文件从`SENDMAIL=OFF`更改为`SENDMAIL=ON`。
- en: 'To launch the attack, select `Social Engineering Attacks` from the main SEToolkit
    menu, and then select `Spear-Phishing Attack Vectors` from the submenu. This will
    launch the start options for the attack, as shown in the following screenshot:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要发动攻击，请从主SEToolkit菜单中选择`社会工程攻击`，然后从子菜单中选择`网络钓鱼攻击向量`。这将启动攻击的开始选项，如下截图所示：
- en: '![Spear Phishing Attack](img/3121OS_07_03.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![网络钓鱼攻击](img/3121OS_07_03.jpg)'
- en: 'Select `1` to perform a mass e-mail attack; you will then be presented with
    a list of attack payloads, as shown in the following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 选择`1`执行大规模电子邮件攻击；然后将显示攻击有效负载列表，如下截图所示：
- en: '![Spear Phishing Attack](img/3121OS_07_04.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![鱼叉式网络钓鱼攻击](img/3121OS_07_04.jpg)'
- en: One of the most effective attacks is `15) Adobe PDF Embedded EXE Social Engineering`;
    however, the attack selected will vary with the attacker's knowledge of available
    targets gained during the reconnaissance phase.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最有效的攻击之一是`15) Adobe PDF Embedded EXE Social Engineering`；然而，所选择的攻击将取决于攻击者在侦察阶段获得的可用目标的知识。
- en: When prompted to use your own PDF or a built-in blank PDF for the attack as
    shown in the following screenshot, select `2` for the built-in blank payload.
    You will then be prompted to select the payload.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在提示要使用您自己的PDF还是内置的空白PDF进行攻击时，选择内置的空白有效载荷的选项`2`，如下面的屏幕截图所示。然后将提示您选择有效载荷。
- en: '![Spear Phishing Attack](img/3121OS_07_05.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![鱼叉式网络钓鱼攻击](img/3121OS_07_05.jpg)'
- en: Through testing on multiple networks, we have found that options `1` and `2`
    (`Windows Reverse TCP shell`, and `Windows Meterpreter Reverse TCP`) are the most
    reliable payloads. For this example, we will select `Windows Meterpreter Reverse
    TCP`—when the PDF is opened, it will execute a reverse shell back to the attacking
    system.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在多个网络上进行测试，我们发现选项`1`和`2`（`Windows Reverse TCP shell`和`Windows Meterpreter
    Reverse TCP`）是最可靠的有效载荷。在本示例中，我们将选择`Windows Meterpreter Reverse TCP`——当打开PDF时，它将执行一个反向shell返回到攻击系统。
- en: In instances where stealth is more important than reliability, `Windows Meterpreter
    Reverse HTTPS` is the best option.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在隐蔽性比可靠性更重要的情况下，`Windows Meterpreter Reverse HTTPS`是最佳选择。
- en: SEToolkit will prompt for the payload listener (the attacker's IP address) and
    listening port, with the default port of `443`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: SEToolkit将提示输入有效载荷侦听器（攻击者的IP地址）和侦听端口，默认端口为`443`。
- en: 'The next menu prompts for changing the filename of the PDF file; the default
    name is `moo.pdf`, as shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个菜单提示更改PDF文件的文件名；默认名称为`moo.pdf`，如下面的屏幕截图所示。
- en: '![Spear Phishing Attack](img/3121OS_07_06.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![鱼叉式网络钓鱼攻击](img/3121OS_07_06.jpg)'
- en: The default name will not likely entice a potential victim to open the file;
    furthermore, it may be identified by client-side security. For these reasons,
    the filename should be changed. The name should reflect the intended audience
    being attacked. For example, if you are targeting the finance group, give the
    PDF file a title such as Tax Law Amendments.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 默认名称不太可能吸引潜在受害者打开文件；此外，它可能会被客户端安全识别。出于这些原因，文件名应更改。名称应反映被攻击的目标受众。例如，如果您的目标是财务组，给PDF文件一个标题，比如税法修正案。
- en: You will now be offered the option of either attacking a single e-mail address,
    or mass-mailing (for example, an employee list of the target company, or a specific
    group within the company). Option `1` was selected for this example.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将被提供攻击单个电子邮件地址或群发邮件的选项（例如，目标公司的员工列表或公司内的特定群体）。本示例选择了选项`1`。
- en: 'SEToolkit will then prompt to use a predefined template or craft a one-time
    e-mail template. If you select a predefined template, the following options will
    be available:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: SEToolkit然后会提示您使用预定义模板或制作一次性电子邮件模板。如果您选择预定义模板，将提供以下选项：
- en: '![Spear Phishing Attack](img/3121OS_07_07.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![鱼叉式网络钓鱼攻击](img/3121OS_07_07.jpg)'
- en: 'An effective social engineering attack is crafted for the target; therefore,
    select option `2`, `One-Time Use Email Template`, to create a one-time use e-mail
    template, as shown in the following screenshot:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的社会工程攻击是为目标而制定的；因此，选择选项`2`，`一次性使用电子邮件模板`，以创建一次性使用电子邮件模板，如下面的屏幕截图所示：
- en: '![Spear Phishing Attack](img/3121OS_07_08.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![鱼叉式网络钓鱼攻击](img/3121OS_07_08.jpg)'
- en: 'You will be offered the option of using your own Gmail account to launch the
    attack (`1`) or use your own server or open relay(`2`). If you use a Gmail account,
    it is likely that the attack will fail, and you will receive the following message:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被提供使用您自己的Gmail帐户发动攻击（`1`）或使用您自己的服务器或开放中继（`2`）的选项。如果您使用Gmail帐户，攻击很可能会失败，您将收到以下消息：
- en: '[PRE0]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Gmail inspects outgoing emails for malicious files, and is very effective at
    identifying payloads produced by SEToolkit and the Metasploit Framework. If you
    have to send a payload using GMail, use `Veil-Evasion` to encode it first.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Gmail检查出站电子邮件中的恶意文件，并且非常有效地识别SEToolkit和Metasploit Framework生成的有效载荷。如果您必须使用GMail发送有效载荷，请使用`Veil-Evasion`对其进行编码。
- en: It is recommended that you use the `sendmail` option to send executable files;
    furthermore, it allows you to spoof the source of the e-mail to make it appear
    as though it originated from a trusted source.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 建议您使用`sendmail`选项发送可执行文件；此外，它允许您伪造电子邮件的来源，使其看起来好像来自可信任的来源。
- en: 'The target will receive the following e-mail message:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 目标将收到以下电子邮件消息：
- en: '![Spear Phishing Attack](img/3121OS_07_09.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![鱼叉式网络钓鱼攻击](img/3121OS_07_09.jpg)'
- en: 'To ensure that an e-mail is effective, the attacker should take care of the
    following points:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保电子邮件的有效性，攻击者应该注意以下几点：
- en: The content should provide a "carrot" (the new server will be faster, have improved
    anti-virus) and a "stick" (changes you will have to make *before* you can access
    your e-mail). Most people respond to immediate calls for action, particularly
    when affects them.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容应提供“胡萝卜”（新服务器将更快，具有改进的防病毒功能）和“棍棒”（您必须在访问电子邮件之前进行的更改）。大多数人对立即行动的呼吁做出反应，特别是当它影响到他们时。
- en: In the sample given previously, the attached document is titled `template.doc`.
    In a real-world scenario, this would be changed to `Email instructions.doc`.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在先前给出的示例中，附加的文档标题为`template.doc`。在实际情况下，这将更改为`Email instructions.doc`。
- en: Ensure that your spelling and grammar are correct, and the tone of the message
    matches the content.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保您的拼写和语法正确，并且消息的语气与内容相匹配。
- en: The title of the individual sending the e-mail should match the content. If
    the target organization is small, you may have to spoof the name of a real individual
    and send the e-mail to a small group that does not normally interact with that
    person.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送电子邮件的个人的标题应与内容相匹配。如果目标组织很小，您可能需要伪造一个真实个人的名字，并将电子邮件发送给一个通常不与该人互动的小组。
- en: Include a phone number—it makes the e-mail look more "official", and there are
    various ways to use commercial voice over IP solutions to obtain a short-term
    phone number with a local area code.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括电话号码 - 这使得电子邮件看起来更“正式”，并且有各种方法可以使用商业VoIP解决方案获得带有本地区号的临时电话号码。
- en: Once the attack e-mail is sent to the target, successful activation (the recipient
    launches the executable) will create a reverse Meterpreter tunnel to the attacker's
    system. The attacker will then employ Meterpreter and other tools to conduct typical
    post-exploitation activities.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦攻击邮件发送给目标，成功激活（接收者启动可执行文件）将在攻击者的系统上创建一个反向Meterpreter隧道。然后，攻击者将利用Meterpreter和其他工具进行典型的后渗透活动。
- en: Using a website attack vector – Java Applet Attack Method
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用网站攻击向量 - Java小程序攻击方法
- en: The `Java Applet Attack Method` uses an infected Java applet to load a malicious
    application onto the target system. This attack is favored by many attackers because
    it is highly reliable, and it is effective against Windows, Linux, and Mac OS
    X systems.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`Java小程序攻击方法`使用感染的Java小程序将恶意应用加载到目标系统上。许多攻击者青睐这种攻击，因为它非常可靠，并且对Windows、Linux和Mac
    OS X系统都有效。'
- en: 'To launch the attack, open SEToolkit and select option `2) Website Attack Vectors`,
    from the main menu. Then select option `1) Java Applet Attack Method`, to launch
    the initial menu, as shown in the following screenshot:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要发动攻击，打开SEToolkit并从主菜单中选择选项`2) 网站攻击向量`。然后选择选项`1) Java小程序攻击方法`，启动初始菜单，如下截图所示：
- en: '![Using a website attack vector – Java Applet Attack Method](img/3121OS_07_10.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - Java小程序攻击方法](img/3121OS_07_10.jpg)'
- en: The options for web template are `Java Required`, `Gmail`, `Google`, `Facebook`,
    `Twitter`, and `Yahoo`. The **Java Required** page, as shown in the following
    screenshot, is usually effective because it directly prompts the user to update
    a vital piece of software before continuing.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 网页模板的选项包括`Java Required`、`Gmail`、`Google`、`Facebook`、`Twitter`和`Yahoo`。如下截图所示的**Java
    Required**页面通常很有效，因为它直接提示用户在继续之前更新重要的软件。
- en: '![Using a website attack vector – Java Applet Attack Method](img/3121OS_07_11.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - Java小程序攻击方法](img/3121OS_07_11.jpg)'
- en: You can also choose to clone an existing site, such as the target's corporate
    website.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以选择克隆现有网站，比如目标公司的网站。
- en: 'After making the selection, the attacker is then prompted to determine if they
    use Port/NAT forwarding and provide the IP address of the attacking machine for
    the reverse connection, as shown in the following screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在做出选择后，攻击者将被提示确定是否使用端口/NAT转发，并提供攻击机器的IP地址进行反向连接，如下截图所示：
- en: '![Using a website attack vector – Java Applet Attack Method](img/3121OS_07_12.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - Java小程序攻击方法](img/3121OS_07_12.jpg)'
- en: Tip
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Word wrapping is not well handled by the SEToolkit, and it is common that a
    typed response will wrap back and overwrite a part of the command line.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: SEToolkit对文字换行处理不佳，通常输入的响应会回卷并覆盖命令行的一部分。
- en: After providing the required URL, SEToolkit will start the site cloning process,
    as shown in the following screenshot. When completed, the application will start
    generating the payload and supporting files (the `.jar` archive and the cloned
    `index.html` file).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在提供所需的URL后，SEToolkit将开始网站克隆过程，如下截图所示。完成后，应用程序将开始生成有效载荷和支持文件（`.jar`存档和克隆的`index.html`文件）。
- en: '![Using a website attack vector – Java Applet Attack Method](img/3121OS_07_13.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - Java小程序攻击方法](img/3121OS_07_13.jpg)'
- en: 'The next stage includes the selection of the payload. If stealth is especially
    important, use option `17` to select an executable that has been encoded using
    `veil`, as shown in the following screenshot:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 下一阶段包括有效载荷的选择。如果隐蔽特别重要，使用选项`17`选择使用`veil`编码的可执行文件，如下截图所示：
- en: '![Using a website attack vector – Java Applet Attack Method](img/3121OS_07_14.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - Java小程序攻击方法](img/3121OS_07_14.jpg)'
- en: 'Select the encoding option to bypass local anti-virus on the target system;
    the most effective of them is the fourth option, `Backdoored Executable`, as shown
    in the following screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 选择编码选项以绕过目标系统上的本地防病毒软件；其中最有效的是第四个选项`Backdoored Executable`，如下截图所示：
- en: '![Using a website attack vector – Java Applet Attack Method](img/3121OS_07_15.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - Java小程序攻击方法](img/3121OS_07_15.jpg)'
- en: 'The application will prompt for the listening port, and then start generating
    code for common ports (`25`, `53`, `80`, `443`, and so on) on the victim''s machine,
    as shown in the following screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 该应用程序将提示输入监听端口，然后开始在受害者的计算机上生成常用端口（`25`、`53`、`80`、`443`等）的代码，如下截图所示：
- en: '![Using a website attack vector – Java Applet Attack Method](img/3121OS_07_16.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - Java小程序攻击方法](img/3121OS_07_16.jpg)'
- en: Now comes the social engineering step—the attacker has to convince the targeted
    person to connect to the IP address of the listening system. If the target enters
    that system, they will be directed to the cloned site hosted on the listener.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是社会工程学的步骤 - 攻击者必须说服目标人员连接到监听系统的IP地址。如果目标进入该系统，他们将被引导到监听器上托管的克隆站点。
- en: The site will present the targeted person with a security warning, as shown
    in the following screenshot, indicating that an application needs to be executed
    in order to access the site.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 该网站将向目标人员显示安全警告，如下截图所示，指示需要执行应用程序才能访问该网站。
- en: '![Using a website attack vector – Java Applet Attack Method](img/3121OS_07_17.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - Java小程序攻击方法](img/3121OS_07_17.jpg)'
- en: If the person chooses to execute the application, a reverse shell (depending
    on the selected payload) will be formed between their computer and the attacker's
    computer.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户选择执行该应用程序，将在他们的计算机和攻击者的计算机之间形成一个反向shell（取决于所选的有效负载）。
- en: The two attacks presented demonstrate the different approaches used by the SEToolkit
    to gain control of a target's computer using a reverse shell or a similar payload.
    An attacker can extend the control in a number of ways, such as using a VNC payload
    or placing a RATTE.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 所呈现的两种攻击展示了SEToolkit用于使用反向shell或类似有效载荷控制目标计算机的不同方法。攻击者可以通过多种方式扩展控制，例如使用VNC有效载荷或放置RATTE。
- en: However, these attacks are intrusive—it is possible that the reverse shell may
    trigger an egress alarm at the firewall as it connects to the attacker's machine.
    More importantly, the payload may be reverse engineered to identify information
    about the attacker.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这些攻击是具有侵入性的 - 反向shell可能会触发防火墙的出站警报，因为它连接到攻击者的机器。更重要的是，有效载荷可能被反向工程化以识别有关攻击者的信息。
- en: Finally, the goal of the attack may not be an immediate compromise; instead,
    the attacker may wish to collect user credentials to support a later attack, or
    to reuse the credentials at multiple places on the Internet. So, let's examine
    a credential harvesting attack.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，攻击的目标可能不是立即妥协；相反，攻击者可能希望收集用户凭证以支持以后的攻击，或在互联网上的多个地方重复使用凭证。因此，让我们来看一下凭证收割攻击。
- en: Using a website attack vector – Credential Harvester Attack Method
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用网站攻击向量 - 凭证收割者攻击方法
- en: Credentials, generally the username and password, give a person access to networks,
    computing systems, and data. An attacker can use this information indirectly (by
    logging on to the victim's Gmail account and sending e-mails to facilitate an
    attack against the victim's trusted connections), or directly against the user's
    account. This attack is particularly relevant given the extensive reuse of credentials—users
    typically reuse passwords in multiple places.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 凭证通常是用户名和密码，可以让一个人访问网络、计算系统和数据。攻击者可以间接使用这些信息（通过登录受害者的Gmail帐户并发送电子邮件来促成对受害者信任连接的攻击），或直接针对用户的帐户。鉴于凭证的广泛重复使用，这种攻击尤其相关
    - 用户通常在多个地方重复使用密码。
- en: Particularly prized are the credentials of a person with privileged access,
    such as a system administrator or a database administrator, which can give an
    attacker access to multiple accounts and data repositories.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 特别珍贵的是具有特权访问权限的人的凭证，例如系统管理员或数据库管理员，这可以让攻击者访问多个帐户和数据存储库。
- en: The SEToolkit's credential harvesting attack uses a cloned site to collect credentials.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: SEToolkit的凭证收割攻击使用克隆站点来收集凭证。
- en: To launch this attack, select `Website Attack Vectors` from the main menu, and
    then select `Credential Harvester Attack Method`. For this example, we will follow
    the menu selections to clone a website, such as Facebook.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要发动这种攻击，从主菜单中选择`网站攻击向量`，然后选择`凭证收割者攻击方法`。在这个例子中，我们将按照菜单选择来克隆一个网站，比如Facebook。
- en: Again, the target IP address must be sent to the intended target. When the target
    clicks on the link or enters the IP address, they will be presented with a cloned
    page that resembles the regular entry page for Facebook, and they will be prompted
    to enter their usernames and passwords.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，目标IP地址必须发送给预定目标。当目标点击链接或输入IP地址时，他们将看到一个类似于Facebook常规登录页面的克隆页面，并被提示输入他们的用户名和密码。
- en: Once this is done, the users will be redirected to the regular Facebook site,
    where they will be logged in to their account.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，用户将被重定向到常规的Facebook网站，在那里他们将登录到他们的帐户。
- en: 'In the background, their access credentials will be collected and forwarded
    to the attacker. They will see the following entry in the listener window:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在后台，他们的访问凭证将被收集并转发给攻击者。他们将在监听窗口中看到以下条目：
- en: '![Using a website attack vector – Credential Harvester Attack Method](img/3121OS_07_18.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - 凭证收割者攻击方法](img/3121OS_07_18.jpg)'
- en: When the attacker has finished collecting credentials, entering *CTRL* + *C*
    will generate two reports in the `/SET/reports` directory in the XML and HTML
    formats.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当攻击者收集完凭证后，输入*CTRL* + *C* 将在`/SET/reports`目录中以XML和HTML格式生成两份报告。
- en: 'A similar attack option is the `Web Jacking Attack`. When the victims open
    the attacker''s link, they will be presented with a page informing them that their
    selected page has been moved, as shown in the following screenshot:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 类似的攻击选项是`Web Jacking Attack`。当受害者打开攻击者的链接时，他们将看到一个页面，通知他们选择的页面已经移动，如下面的屏幕截图所示：
- en: '![Using a website attack vector – Credential Harvester Attack Method](img/3121OS_07_19.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - 凭证收割者攻击方法](img/3121OS_07_19.jpg)'
- en: When the users click on the link to go to the new location, they will be presented
    with a cloned page that appears to be the one expected, as shown in the following
    screenshot; again, the page will be harvesting their login credentials.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击链接前往新位置时，他们将看到一个看起来像预期页面的克隆页面，如下面的屏幕截图所示；同样，页面将收割他们的登录凭证。
- en: '![Using a website attack vector – Credential Harvester Attack Method](img/3121OS_07_20.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![使用网站攻击向量 - 凭证收割者攻击方法](img/3121OS_07_20.jpg)'
- en: Note
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that the address in the URL bar is not the valid address for Google; most
    users will recognize that something is wrong if they can see the address. A successful
    exploit requires the attacker to prepare the victim with a suitable pretext, or
    story, to make the victim accept the unusual URL. For example, send an e-mail
    to a targeted group of nontechnical managers to announce that a "local Google
    mail site is now being hosted by IT to reduce delays in the mail system."
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，URL栏中的地址不是Google的有效地址；大多数用户如果能看到这个地址，就会意识到有问题。成功的利用需要攻击者准备好一个合适的借口或故事，使受害者接受异常的URL。例如，向一个非技术经理的目标群体发送电子邮件，宣布“本地Google邮件站现在由IT托管，以减少邮件系统中的延迟”。
- en: The Credential harvesting attack is an excellent tool for assessing the security
    of a corporate network. To be effective, the organization must first train all
    employees on how to recognize and respond to a phishing attack. Approximately
    two weeks later, send a corporate-wide e-mail that contains some obvious mistakes
    (incorrect name of the corporate CEO or an address block that contains the wrong
    address) and a link to a program that harvests credentials. Calculate the percentage
    of recipients who responded with their credentials, and then tailor the training
    program to reduce this percentage.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Using a website attack vector – Tabnabbing Attack Method
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Tabnabbing exploits a user's trust by loading a fake page in one of the open
    tabs of a browser. By impersonating a page of a site such as Gmail, Facebook,
    or any other site that *posts* data (usually usernames and passwords), a tabnabbing
    attack can collect a victim's credentials. The Social Engineering Toolkit invokes
    the credential harvester attack that we previously described.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: To launch this attack, launch the Social Engineering Toolkit from a console
    prompt, and then select `1) Social-Engineering Attacks`. In the next menu, select
    `2) Website Attack Vectors`. The tabnabbing attack is launched by selecting `4)
    Tabnabbing Attack Method`.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: When the attack is launched, you will be prompted with three options to generate
    the fake websites that will be used to gather credentials. The attacker can allow
    `setoolkit` to import a list of predefined web applications, clone a website (such
    as Gmail), or import their own website. For this example, we will select `2) Site
    Cloner`.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: This will prompt the attacker to enter the IP address that the server will POST
    to; this is usually the IP address of the attacker's system. The attacker will
    then be prompted to enter the URL of the website to be cloned. In the following
    screenshot, Gmail's website has been selected.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: 'The attacker must then employ social engineering to force the victim to visit
    the IP address for the post back action (for example, URL shortening). The victim
    will receive a message that the site is loading (as the attack script loads the
    cloned site under a different tab in the browser, as shown in the following screenshot):'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '![Using a website attack vector – Tabnabbing Attack Method](img/3121OS_07_21.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
- en: The target will then be presented with the fake page (with the false IP address
    still visible). If the users enter their usernames and passwords, the data will
    be posted to the listener on the attacker's system. As you can see in the following
    screenshot, it has captured the username and the password.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: '![Using a website attack vector – Tabnabbing Attack Method](img/3121OS_07_22.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
- en: Using a website attack vector - Multi-Attack Web Method
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The "hail Mary" attack for website attack vectors is `Multi-Attack Web Method`,
    which allows the attacker to implement several different attacks at one time,
    should they choose to. By default, all attacks are disabled, and the attacker
    chooses the ones to run against the victim, as shown in the following screenshot:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '![Using a website attack vector - Multi-Attack Web Method](img/3121OS_07_23.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
- en: This is an effective option if you are unsure which attacks will be effective
    against a target organization; select one employee, determine the successful attack(s),
    and then reuse these against the other employees.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Using the PowerShell alphanumeric shellcode injection attack
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Social Engineering Toolkit also incorporates the more effective attacks
    based on PowerShell, which is available on all Microsoft operating systems after
    the release of Microsoft Vista. Because PowerShell shellcode can easily be injected
    into the target's physical memory, attacks using this vector do not trigger anti-virus
    alarms.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: To launch a PowerShell injection attack using `setoolkit`, select `1) Social-Engineering
    Attacks` from the main menu. Then select `10) Powershell Attack Vectors` from
    the next menu.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: This will give the attacker four options for attack types; for this example,
    select `1` to invoke `PowerShell Alphanumeric Shellcode Injector`.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这将给攻击者四种攻击类型的选择；在这个例子中，选择`1`来调用`PowerShell字母数字shellcode注入器`。
- en: This will set the attack parameters and prompt the attacker to enter the IP
    address for the payload listener, which will usually be the IP address of the
    attacker. When this has been entered, the program will create the exploit code
    and start a local listener.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这将设置攻击参数，并提示攻击者输入载荷监听器的IP地址，通常是攻击者的IP地址。输入后，程序将创建利用代码并启动本地监听器。
- en: The PowerShell shellcode that launches the attack is stored at `/root/.set/reports/powershell/x86_powershell_injection.txt`.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 启动攻击的PowerShell shellcode存储在`/root/.set/reports/powershell/x86_powershell_injection.txt`中。
- en: The social engineering aspect of the attack occurs when the attacker convinces
    the intended victim to copy the contents of `x86_powershell_injection.txt` on
    a command prompt, as shown in the following screenshot, and executes the code.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当攻击者说服受害者在命令提示符上复制`x86_powershell_injection.txt`的内容，并执行代码时，社会工程攻击的一部分就发生了，如下截图所示。
- en: '![Using the PowerShell alphanumeric shellcode injection attack](img/3121OS_07_24.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![使用PowerShell字母数字shellcode注入攻击](img/3121OS_07_24.jpg)'
- en: As shown in the following screenshot, execution of the shellcode did not trigger
    an anti-virus alarm on the target system. Instead, when the code was executed,
    it opened a meterpreter session on the attacking system and allowed the attacker
    to gain an interactive shell with the remote system.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，执行shellcode并没有在目标系统上触发反病毒警报。相反，当代码执行时，它在攻击系统上打开了一个meterpreter会话，并允许攻击者与远程系统建立交互式shell。
- en: '![Using the PowerShell alphanumeric shellcode injection attack](img/3121OS_07_25.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![使用PowerShell字母数字shellcode注入攻击](img/3121OS_07_25.jpg)'
- en: Hiding executables and obfuscating the attacker's URL
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隐藏可执行文件并混淆攻击者的URL
- en: As shown in the previous examples, there are two keys to success in launching
    a social engineering attack. The first is to obtain the information needed to
    make it work—usernames, business information, and supporting details about networks,
    systems, and applications.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的例子所示，发动社会工程攻击的成功有两个关键。第一个是获取使其生效所需的信息——用户名、业务信息以及有关网络、系统和应用程序的支持细节。
- en: However, the majority of the work effort is focused on the second aspect—crafting
    the attack to entice the target into opening an executable or clicking on a link.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，大部分工作重点放在第二个方面上——精心设计攻击，诱使目标打开可执行文件或点击链接。
- en: 'Several attacks produce modules that require the victim to execute them in
    order for the attack to succeed. Unfortunately, users are increasingly wary about
    executing unknown software. However, there are some ways to increase the possibility
    of successful execution of the attack, including the following:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 几种攻击会生成需要受害者执行才能成功的模块。不幸的是，用户越来越警惕执行未知软件。然而，有一些方法可以增加攻击成功执行的可能性，包括以下方法：
- en: Attack from a system that is known and trusted by the intended victim, or spoof
    the source of the attack. If the attack appears to originate from the help desk
    or IT support, and claims to be an "urgent software update", it will likely be
    executed.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从受害者已知和信任的系统发起攻击，或者欺骗攻击源。如果攻击似乎来自帮助台或IT支持，并声称是“紧急软件更新”，那么它很可能会被执行。
- en: Rename the executable to resemble trusted software, such as "Java Update".
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将可执行文件重命名为类似于受信任软件的名称，比如“Java更新”。
- en: Embed the malicious payload into a benign file such as a PDF file using an attack
    such as Metasploit's `adobe_pdf_embedded_exe_nojs` attack. Executables can also
    be bound to Microsoft Office files, MSI install files, or BAT files configured
    to run silently on the desktop.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将恶意载荷嵌入到诸如PDF文件之类的良性文件中，使用Metasploit的`adobe_pdf_embedded_exe_nojs`攻击之类的攻击。可执行文件也可以绑定到Microsoft
    Office文件、MSI安装文件或配置为在桌面上静默运行的BAT文件。
- en: Have the user click on a link that downloads the malicious executable.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让用户点击一个链接，下载恶意可执行文件。
- en: 'Since the SEToolkit uses the attacker''s URL as the destination for its attacks,
    a key success factor is to ensure that the attacker''s URL is believable to the
    victim. There are several techniques to accomplish this, including the following:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 由于SEToolkit使用攻击者的URL作为其攻击的目的地，关键的成功因素是确保攻击者的URL对受害者是可信的。有几种技术可以实现这一点，包括以下方法：
- en: Shorten the URL using a service such as [goo.gl](http://goo.gl) or [tinyurl.com](http://tinyurl.com).
    The shortened URLs are common among social media such as Twitter, and victims
    rarely use precautions when clicking on such links.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用像[goo.gl](http://goo.gl)或[tinyurl.com](http://tinyurl.com)这样的服务缩短URL。缩短的URL在Twitter等社交媒体中很常见，受害者很少在点击此类链接时采取预防措施。
- en: Enter the link on a social media site such as Facebook or LinkedIn; the site
    will create its own link to replace yours, with an image of the destination page.
    Then, remove the link that you entered, leaving behind the new social media link.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在社交媒体网站上输入链接，如Facebook或LinkedIn；该网站将创建自己的链接来替换你的链接，并附上目标页面的图片。然后，删除你输入的链接，只留下新的社交媒体链接。
- en: Create a fake web page on LinkedIn or Facebook—as the attacker, you control
    the content, and can create a compelling story to drive members to click on links
    or download executables. A well-executed page will not only target employees,
    but also vendors, partners, and their clients, maximizing the success of a social
    engineering attack.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在LinkedIn或Facebook上创建一个假的网页——作为攻击者，你控制内容，并可以创建一个引人注目的故事，驱使成员点击链接或下载可执行文件。一个精心设计的页面不仅会针对员工，还会针对供应商、合作伙伴和他们的客户，最大程度地提高社会工程攻击的成功率。
- en: Embed the link in a file such as PowerPoint.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将链接嵌入到诸如PowerPoint之类的文件中。
- en: 'To embed a link in PowerPoint, launch it and create a slide show by saving
    the extension as `.pps`. Give the presentation a title that will be of interest
    to the target person, and create a couple of generic content files. On the front
    page, insert a text box and drag the box to cover the entire surface of that slide.
    Click on **Insert**, and then select the Action tab. In the dialog box, click
    on the **Hyperlink** to radio button, and select **URL** from the drop-down menu.
    Enter the URL used to launch the attack, as shown in the following screenshot:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: '![Hiding executables and obfuscating the attacker''s URL](img/3121OS_07_26.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
- en: When the file is opened, it starts as a fullscreen slide show. Because the attack
    is launched via a mouse over, the users will launch the attack when they attempt
    to close the document.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: Escalating an attack using DNS redirection
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If an attacker or penetration tester has compromised a host on the internal
    network, they can escalate the attack using DNS redirection. This is generally
    considered to be a horizontal attack (it compromises persons of roughly the same
    access privileges); however, it can also escalate vertically if credentials from
    privileged persons are captured.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we will use ettercap which acts as a sniffer, interceptor,
    and logger for switched LANs. It facilitates man-in-the-middle attacks, but we
    will use it to launch a DNS redirection attack to divert users to sites used for
    our social engineering attacks.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: 'To start the attack, we must first modify the ettercap configuration file located
    at `/etc/ettercap/etter.dns` to redirect queries to our hostile site. A sample
    using Microsoft''s site is found in the configuration file; replicate the same
    details to direct the target site request to the malicious IP address, as shown
    in the following screenshot:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: '![Escalating an attack using DNS redirection](img/3121OS_07_27.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
- en: 'Start ettercap in graphical mode by typing `ettercap –G` at a command prompt.
    From the **Sniff** tab, select **Unified** sniffing from the drop-down menu, as
    shown in the following screenshot:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: '![Escalating an attack using DNS redirection](img/3121OS_07_28.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
- en: When prompted to select the network interface, select **eth0** for the internal
    network (as you can see, ettercap will also support wireless attacks when you
    select a different interface). You should see that the tabbed menu change, giving
    you more options.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: 'From the **Hosts** tab, select **Scan for hosts** from the drop-down menu.
    It will conduct a rapid scan, and then report that "x hosts added to the hosts
    list". From the **Hosts** tab, select **Hosts list** to see a list of possible
    target systems, as shown in the following screenshot:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '![Escalating an attack using DNS redirection](img/3121OS_07_29.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
- en: Highlight the identified systems that you wish to target (for example, all hosts
    located on the same segment of a switched LAN) and select the **Add to Target
    1** tab.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: 'When this is done, select the **Plugins** tab, which will provide you with
    a list of the ettercap plugins that are available for use. Select the **ec_dns_spoof.so**
    plugin, as shown in the following screenshot:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '![Escalating an attack using DNS redirection](img/3121OS_07_30.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
- en: To launch the attack, select the **Mitm** tab, and choose **Arp poisoning**
    from the pull-down menu, as shown in the following screenshot. Ettercap will poison
    the Address Resolution Protocol table or cache, on the selected systems.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '![Escalating an attack using DNS redirection](img/3121OS_07_31.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
- en: When ARP poisoning is selected, you will be offered optional parameters. Select
    the parameter to sniff remote connections. Then, go to the **Start** tab, and
    select to start unified sniffing.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: When a user on any of the targeted systems attempts to go to Facebook, their
    cache table will not provide them with the location on the Internet. Ettercap
    will divert their lookups to the URL that you supplied in the configuration file,
    and the users will instead be directed to the hostile web page prepared by the
    attacker, and will be subject to an attack such as credential harvesting.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: At all times, the persons being attacked will see the apparently correct URL
    in their browser window.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: DNS redirection can be used to facilitate all attacks that rely on the user
    clicking on a URL link to initiate the attack, and this works on both wired and
    wireless networks.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: Physical access and hostile devices
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kali and SEToolkit also facilitate attacks where the intruder has direct physical
    access to systems and the network. This can be a risky attack, as the intruder
    may be spotted by an observant human, or caught on a surveillance device. However,
    the reward can be significant, because the intruder can compromise specific systems
    that have valuable data.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: 'Physical access is usually a direct result of social engineering, especially
    when impersonation is used. Common impersonations include the following:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: A person who claims to be from the help desk or IT support, and just needs to
    quickly interrupt the victim by installing a system upgrade.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A vendor who drops by to talk to a client, and then excuses himself to talk
    to someone else or visit a restroom.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A delivery person dropping off a package. Attackers can opt to buy a delivery
    uniform online; however, since most people assume that anyone who is dressed all
    in brown and pushing a handcart filled with boxes is a UPS delivery person, uniforms
    are rarely a necessity for social engineering!
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tradespersons wearing work clothes, carrying a "work order" that they have printed
    out, are usually allowed access to wiring closets and other areas, especially
    when they claim to be present at the request of the building manager.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dress in an expensive suit, carry a clipboard, and walk fast—employees will
    assume that you're an unknown manager. When conducting this type of penetration,
    we usually inform people that we are auditors, and our inspections are rarely
    questioned.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The goal of hostile physical access is to rapidly compromise selected systems;
    this is usually accomplished by installing a backdoor or similar device on the
    target.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: One of the classic attacks is to place a CD-ROM, DVD, or USB key in a system
    and let the system install it using the autoplay option; however, many organizations
    disable autoplay across the network.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: 'Attackers can also create "poisoned bait" traps—mobile devices that contain
    files with names that invite a person to click the file and examine its contents.
    Some of the examples include the following:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: USB keys with labels such as Employee Salaries or Medical Insurance Updates.
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metasploit allows an attacker to bind a payload, such as a reverse shell, to
    an executable such as a screensaver. The attacker can create a screensaver using
    publicly available corporate images, and mail CDs to employees with the new *endorsed
    screensaver*. When the user installs the program, the backdoor is also installed,
    and it connects to the attacker.
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you know that employees have attended a recent conference, attackers can
    impersonate a vendor who was present and send the target a letter insinuating
    that it is a follow-up from the vendor show. A typical message will be, "If you
    missed our product demonstration and one-year free trial, please review the slide
    show on the attached USB key by clicking start.exe".
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One interesting variant is the SanDisk U3 USB key, or Smart Drive. The U3 keys
    were preinstalled with launchpad software that automatically allowed the keys
    to write files or registry information directly to the host computer when inserted
    to assist in the repaid launching of approved programs. The `u3-pwn` tool (**Kali
    Linux** | **Maintaining Access** | **OS Backdoors** | **u3**-**pwn**) removes
    the original ISO file from the Sandisk U3 and replaces it with a hostile Metasploit
    payload, which is then encoded to avoid detection on the target system.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, support for these USB devices is lessening, and they remain vulnerable
    to the same degree of detection as other Metasploit payloads.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: An emerging option is the use of Teensy—a small integrated circuit device that
    registers as a USB keyboard when inserted into a Windows-based system. This allows
    it to bypass systems that disable autorun or use client-side anti-virus software.
    A Teensy can be purchased online from Amazon for approximately $20 to $25.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: 'The `setoolkit` generates the code required by a Teensy to turn it into an
    attack vector, as shown in the following screenshot:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '![Physical access and hostile devices](img/3121OS_07_32.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
- en: A Teensy configured as a hostile agent is quite powerful; during penetration
    testing of corporate clients, our testers have demonstrated a hundred percent
    chance of being able to infect at least one system on each network being tested!
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, these devices suffer a significant limitation—they can do only
    what they are programmed to do, and the attacker or penetration tester has limited
    ability to capitalize on any discoveries that are made post compromise.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: To remedy this short-fall, attackers are now using microcomputers, such as the
    Raspberry Pi, as the attack vector.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: Raspberry Pi attack vectors
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Raspberry Pi is a microcomputer—it measures approximately 8.5 cm X 5.5 cm
    in size, but manages to pack 512 MB RAM, two USB ports, and an Ethernet port supported
    by a Broadcom chip using an ARM processor running at 700 MHz (which can be overclocked
    to 1 GHz). It doesn't include a hard drive, but uses an SD card for data storage.
    As shown in the following image, the Raspberry Pi is approximately two-third the
    length of a pen; it is easy to hide on a network (behind workstations or servers,
    placed inside of server cabinets, or hidden beneath floor panels in the data center).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '![Raspberry Pi attack vectors](img/3121OS_07_33.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
- en: 'To configure Raspberry Pi as an attack vector, the following items are required:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: Raspberry Pi Model B, or newer Version
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An HDMI cable
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A micro USB cable and charging block
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Ethernet cable or mini-wireless adaptor
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A SD card, Class 10, of at least 8 GB
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Together, all supplies are typically available online for a total of less than
    $100.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: To configure Raspberry, download the latest version of Kali Linux ARM edition,
    and extract it from the source archive. If you are configuring from a Windows-based
    desktop, then download and extract Win32DiskImager ([http://sourceforge.net/projects/win32diskimager/](http://sourceforge.net/projects/win32diskimager/)).
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: Using a card reader, connect the SD card to the Windows-based computer and open
    the **Win32DiskImager**. Select the ARM version of Kali, `kali-custom-rpi.img`,
    which was downloaded and previously extracted, and write it to the SD card. This
    will take some time.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: Separate instructions for flashing the SD card from Mac or Linux systems are
    available on the Kali website.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: Insert the newly flashed SD card into the Raspberry Pi and connect the Ethernet
    cable or wireless adapter to the Windows workstation, the HDMI cable to a monitor,
    and the Micro USB power cable to a power supply. Once supplied with power, it
    will boot directly into Kali Linux. The Raspberry relies on external power, and
    there is no separate on/off switch; however, Kali can still be shut down from
    the command line.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: Once Kali is installed, ensure that it is up to date using the apt-get command.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: 'Make sure the SSH host keys are changed as soon as possible, as all Raspberry
    Pi images have the same keys. Use the following command:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: At the same time, make sure the default username and password are changed.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to configure Raspberry to connect back to the attacker's computer
    (using a static IP address or a dynamic DNS addressing service) at a regular interval
    using **cron**.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: An attacker must then physically access the target's premises and connect Raspberry
    to the network. The majority of networks automatically assigns devices a DHCP
    address and has limited controls against this type of attack.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: Once Raspberry connects back to the attacker's IP address, the attacker can
    run reconnaissance and exploit applications against the victim's internal network
    from a remote location using SSH to issue commands.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: If a wireless adapter is connected, such as EW-7811Un, the 150 Mbps wireless
    802.11b/g/nNano USB adaptor, the attacker can connect wirelessly, or use the Pi
    to launch wireless attacks ([Chapter 8](ch08.html "Chapter 8. Exploiting Wireless
    Communications"), *Exploiting Wireless Communications*).
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Social engineering is a methodology of *hacking the human*—taking advantage
    of a person's innate trust and helpfulness to attack a network and its devices.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we examined how social engineering can be used to facilitate
    attacks designed to harvest network credentials, activate malicious software,
    or assist in launching further attacks. Most of the attacks rely on the Social
    Engineering Toolkit; however, Kali has several other applications that can be
    improved using a social engineering methodology. We also examined how physical
    access, usually in conjunction with social engineering, can be used to place hostile
    devices on a target network.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will examine how to conduct reconnaissance against wireless
    networks, and attack open networks as well as networks that are protected with
    encryption schemes based on WEP, WPA, and WPA2\. We will also examine general
    weaknesses in wireless protocols that render them vulnerable to the denial of
    service attacks, as well as impersonation attacks.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 8. Exploiting Wireless Communications
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the dominance of mobile devices and the need to provide instant network
    connectivity, wireless networks have become the ubiquitous access point to the
    Internet. Unfortunately, the convenience of wireless access is accompanied with
    an increase in effective attacks that result in theft of access and data as well
    as the denial of service of network resources. Kali provides several tools to
    configure and launch these wireless attacks, allowing organizations to improve
    security.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will examine several housekeeping tasks and wireless attacks,
    including:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Kali for wireless attacks
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless reconnaissance
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bypassing MAC address authentication
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compromising WEP encryption
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attacking WPA and WPA2
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless attacks and social engineering—cloning an access point
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intercepting communications—man-in-the-middle wireless attacks
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Man-in-the-middle wireless attacks
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Denial-of-service** (**DoS**) attacks against wireless communications'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring Kali for wireless attacks
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kali Linux was released with several tools to facilitate the testing of wireless
    networks; however, these attacks require extensive configuration to be fully effective.
    In addition, testers should acquire a strong background in wireless networking
    before they implement attacks or audit a wireless network.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: The most important tool in wireless security testing is the wireless adaptor,
    which connects to the wireless access point. It must support the tools that are
    used, especially the `aircrack-ng` suite of tools; in particular, the card's chipset
    and drivers must possess the ability to inject wireless packets into a communication
    stream. This is a requirement for attacks that require specific packet types to
    be injected into the traffic stream between the target and the victim. The injected
    packets can cause a denial of service, allowing an attacker to capture handshake
    data needed to crack encryption keys or support other wireless attacks.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: The `aircrack-ng` site ([www.aircrack-ng.org](http://www.aircrack-ng.org)) contains
    a list of known compatible wireless adaptors.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: The most reliable adapters that can be used with Kali are the ALFA NETWORK cards,
    especially the **AWUS036NH** adaptors, which support wireless 802.11 b, g, and
    n protocols. The Alfa cards are readily available online and will support all
    the tests and attacks delivered using Kali.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: Wireless reconnaissance
  id: totrans-265
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first step to conduct a wireless attack is to conduct reconnaissance—this
    identifies the exact target access point and highlights the other wireless networks
    that could impact testing.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are using a USB-connected wireless card to connect to a Kali virtual
    machine, make sure that the USB connection has been disconnected from the host
    operating system and is attached to the VM by clicking on the USB connection icon
    , which is indicated by an arrow in the following screenshot:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '![Wireless reconnaissance](img/3121OS_08_01.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
- en: 'Next, determine which wireless interfaces are available by running `iwconfig`
    from the command line, as shown in the following screenshot:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: '![Wireless reconnaissance](img/3121OS_08_02.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
- en: 'For certain attacks, you may wish to increase the power output of the adapter.
    This is especially useful if you are colocated with a legitimate wireless access
    point, and you want the targets to connect to a false access point under your
    control rather than the legitimate access point. These false, or **rogue**, access
    points allow an attacker to intercept data and to view or alter it as needed to
    support an attack. Attackers will frequently copy or clone a legitimate wireless
    site and then increase its transmission power compared to the legitimate site
    as a means of attracting victims. To increase power, the following command is
    used:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Many attacks will be conducted using `aircrack-ng` and its related tools. To
    start, we need to be able to intercept or monitor wireless transmissions; therefore,
    we need to set the Kali communication interface with wireless capabilities to
    *monitor mode* using the `airmon-ng` command:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: '![Wireless reconnaissance](img/3121OS_08_03.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
- en: 'Note that the description that is returned indicates that there are some processes
    that *could cause trouble*. The most effective way to deal with these processes
    is to use a comprehensive kill command as follows:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To view the local wireless environment, use the following command:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The previous command lists all the identified networks that can be found within
    the range of the wireless adaptor at that particular point of time. It provides
    the BSSID of the wireless nodes on the network as identified by the MAC addresses,
    an indication of the relative output power, information on data packets sent,
    bandwidth information including the channel used, and data, information on the
    encryption used, and the ESSID which provides the name of the wireless network.
    This information is shown in the following screenshot; non-essential ESSIDs have
    been blurred out:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: '![Wireless reconnaissance](img/3121OS_08_04.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
- en: 'The `airodump` command cycles through the available wireless channels and identifies
    the following:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: The **Basic Service Set Identifier** (**BSSID**), which is the unique MAC address
    that identifies a wireless access point or router.
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `PWR`, or power, of each network. Although `airodump-ng` incorrectly shows
    power as being negative, this is a reporting artefact. To obtain the proper positive
    values, access a terminal and run `airdriver-ng unload 36` and then run `airdriver-ng
    load 35`.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CH` shows the channel that is being used to broadcast.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ENC` shows the encryption in use—it is `OPN`, or open, for no encryption being
    used, or `WEP` or `WPA`/`WPA2` if encryption is being used. `CIPHER` and `AUTH`
    provide additional encryption information.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Extended Service Set Identifier** (**ESSID**) is the common name of the
    wireless network that is made up of the access points that share the same SSID
    or name.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the lower section of the terminal window, you will see the stations attempting
    to connect, or that are connected to the wireless network.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we can interact with any of these (potential) target networks, we have
    to confirm that our wireless adapter is capable of packet injection. To do this,
    run the following command from a terminal shell prompt:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The execution of the previous command is shown in the following screenshot.
    Here `-9` indicates an injection test.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: '![Wireless reconnaissance](img/3121OS_08_05.jpg)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
- en: Kismet
  id: totrans-294
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the most important tools for wireless reconnaissance is Kismet, an 802.11
    wireless detector, sniffer, and intrusion detection system.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: 'Kismet can be used to gather the following information:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: Name of the wireless network, ESSID
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Channel of the wireless network
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The MAC address of the access point, BSSID
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The MAC address of the wireless clients
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can also be used to sniff data from 802.11a, 802.11b, 802.11g, and 802.11n
    wireless traffic. Kismet also supports plugins that allow it to sniff other wireless
    protocols.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: To launch Kismet, enter `kismet` from a command prompt in a terminal window.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: When Kismet is launched, you will be faced with a series of questions that will
    allow you to configure it during the start up process. Respond with **Yes** to
    **Can you see colors**, accept **Kismet is running as root**, and select **Yes**
    to **Start Kismet Server**. In the Kismet start up options, uncheck **Show Console**
    as it will obscure the screen. Allow Kismet to start.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: You will be prompted to add a capture interface; usually, `wlan0` will be selected.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: Kismet will then start sniffing packets and collecting information about all
    the wireless systems located in the immediate physical neighborhood.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: '![Kismet](img/3121OS_08_06.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
- en: Selecting a network by double-clicking on it will bring you to a network view
    that provides additional information on the wireless network.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
- en: You can also drill down to identify specific clients that connect to the various
    wireless networks.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: Use Kismet as an initial reconnaissance tool to launch some specific attacks
    (such as sniffing-transmitted data) or to identify networks. Because it passively
    collects connectivity data, it is an excellent tool for identifying networks that
    are hidden, especially when the SSID is not being publicly transmitted.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
- en: Bypassing a Hidden Service Set Identifier
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'ESSID is the sequence of characters that uniquely identify a wireless local
    area network. Hiding the ESSID is a poor method of attempting to achieve *security
    through obscurity*; unfortunately, the ESSID can be obtained by:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: Sniffing the wireless environment and waiting for a client to associate to a
    network and then capturing that association
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Actively deauthenticating a client to force the client to associate and then
    capturing that association
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `aircrack` tools are particularly well suited to capture the data needed
    to unhide a hidden ESSID, as shown in the following steps:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: 'At the command prompt, confirm that wireless is enabled on the attacking system
    by entering the following command:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Next, use the following `ifconfig` command to review the available interfaces
    and to determine the exact name used by your wireless system:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Enable your wireless interface by entering the following (you may need to replace
    `wlan0` with an available wireless interface that was identified in the previous
    step):'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you reconfirm with `ifconfig`, you will see that there is now a monitoring
    or `mon0` address in use. Now, use `airodump` to confirm the available wireless
    networks, as given in the following command:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Bypassing a Hidden Service Set Identifier](img/3121OS_08_07.jpg)'
  id: totrans-323
  prefs: []
  type: TYPE_IMG
- en: 'As you can see, the first network''s ESSID is identified only as `<length:
    9>`. No other name or designation is used. The length of the hidden ESSID is identified
    as being composed of nine characters; however, this value may not be correct because
    the ESSID is hidden. The true ESSID length may actually be shorter or longer than
    nine characters.'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: What is important is that there may be clients attached to this particular network.
    If clients are present, we will deauthenticate the client, forcing them to send
    the ESSID when they reconnect to the access point.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: 'Rerun `airodump`, and filter out everything but the target access point. In
    this particular case, we will focus on collecting data from the hidden network
    on channel six using the following command:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Executing the command removes the output from the multiple wireless sources,
    and allows the attacker to focus on the target ESSID, as shown in the following
    screenshot:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: '![Bypassing a Hidden Service Set Identifier](img/3121OS_08_08.jpg)'
  id: totrans-329
  prefs: []
  type: TYPE_IMG
- en: The data that we get when the `airodump` command is executed indicates that
    there is one station (`00:0E:2E:CF:8C:7C`) connected to the BSSID (`00:18:39:D5:5D:61`)
    which is in turn associated with the hidden ESSID.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: To capture the ESSID as it is being transmitted, we have to create a condition
    where we know it will be sent—during the initial stage of the connection between
    a client and the access point.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, we will launch a deauthentication attack against both the client
    and the access point by sending a stream of packets that breaks the connection
    between them and forces them to reauthenticate.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: 'To launch the attack, open a new command shell and enter the command as shown
    in the following screenshot (`0` indicates that we are launching a deauthentication
    attack, `10` indicates that we will send 10 deauthentication packets, `-a` is
    the target access point, and `c` is the client''s MAC address):'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: '![Bypassing a Hidden Service Set Identifier](img/3121OS_08_09.jpg)'
  id: totrans-334
  prefs: []
  type: TYPE_IMG
- en: After all the deauthentication packets have been sent, return to the original
    window that monitors the network connection on channel six, as shown in the following
    screenshot. You will now see the ESSID in the clear.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: '![Bypassing a Hidden Service Set Identifier](img/3121OS_08_10.jpg)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
- en: Knowing the ESSID helps an attacker to confirm that they are focused on the
    correct network (because most ESSIDs are based on the corporate identity) and
    facilitates the logon process.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: Bypassing the MAC address authentication
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The **Media Access Control** (**MAC**) address uniquely identifies each node
    in a network. It takes the form of six pairs of hexadecimal digits (0 to 9 and
    the letters A to F) that are separated by colons or dashes and usually appears
    like this: `00:50:56:C0:00:01`.'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: The MAC address is usually associated with a network adaptor or a device with
    networking capability; for this reason, it's frequently called the physical address.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: The first three pairs of digits in the MAC address are called the **Organizational
    Unique Identifier**, and they serve to identify the company that manufactured
    or sold the device. The last three pairs of digits are specific to the device
    and can be considered to be a *serial number*.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
- en: Because a MAC address is unique, it can be used to associate a user to a particular
    network, especially a wireless network. This has two significant implications—it
    can be used to identify a hacker or a legitimate network tester who has tried
    to access a network, and it can be used as a means of authenticating individuals
    and granting them access to a network.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
- en: During penetration testing, the tester may prefer to appear anonymous to a network.
    One way to support this anonymous profile is to change the MAC address of the
    attacking system.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be done manually using the `ifconfig` command. To determine the existing
    MAC address, run the following from a command shell:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'To manually change the IP address, use the following commands:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Substitute different hexadecimal pairs for the "xx" expressions. This command
    will allow us to change the attacking system's MAC address to one that is used
    is accepted by the victim network. The attacker must ensure that the MAC address
    is not already in use on the network, or the repeated MAC address may trigger
    an alarm if the network is monitored.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-349
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The wireless interface must be brought down before changing the MAC address.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali also permits the use of an automated tool, `macchanger`. To change the
    attacker''s MAC address to a MAC address of a product produced by the same vendor,
    use the following `macchanger` command from a terminal window:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To change the existing MAC address to a completely random MAC address, use
    the following command:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Bypassing the MAC address authentication](img/3121OS_08_11_new.jpg)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
- en: Some attackers use automated scripts to change their MAC addresses on a frequent
    basis during testing to anonymize their activities.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: Many organizations, particularly large academic groups such as colleges and
    universities, use MAC address filtering to control who can access their wireless
    network resources. MAC address filtering uses the unique MAC address on the network
    card to control access to network resources; in a typical configuration, the organization
    maintains a **whitelist** of the MAC addresses that are permitted to access the
    network. If an incoming MAC address is not on the approved access list, it is
    restricted from connecting to the network.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, MAC address information is transmitted in the clear. An attacker
    can use `airodump` to collect a list of accepted MAC addresses and then manually
    change their MAC address to one of the addresses that is accepted by the target
    network. Therefore, this type of filtering provides almost no real protection
    to a wireless network.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: The next level of wireless network protection is provided using encryption.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
- en: Compromising a WEP encryption
  id: totrans-360
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Wireless Equivalent Privacy** (**WEP**) originated in 1999 as a means of
    providing a degree of confidentiality to 802.11 wireless networks that was comparable
    to what was available on a wired network. Multiple flaws were quickly discovered
    in its implementation of cryptography, and by 2004 it was superseded by the **WiFi
    Protected Access** (**WPA**) protocol.'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-362
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: WEP remains in use today, particularly in the older networks that can't support
    the resource requirements of the new wireless routers. In a recent wireless survey
    of a major metropolitan centre, almost 25 percent of the encrypted wireless networks
    continued to use WEP. Many of these networks were associated with financial companies.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: One of primary flaws of WEP was first identified in the reuse of the **initialization
    vector** (**IV**). WEP relies on the RC4 encryption algorithm, which is a stream
    cipher—the same encryption key cannot be repeated. IVs were introduced to guard
    against key reuse by introducing an element of *randomness* into the encrypted
    data. Unfortunately, the 24-bit IV is too short to prevent repetition; furthermore,
    there is a 50 percent probability that the same IV will repeat after only 5,000
    packets have been transmitted.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
- en: An attacker can eavesdrop or intercept WEP-encrypted traffic. Depending on the
    number of intercepted packets available for inspection, key recovery can occur
    quickly. In practice, most WEP keys can be recovered, or *cracked*, within three
    minutes.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
- en: 'To make WEP cracking work, you will also need to know the following information
    about the target:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: The name of the wireless network or ESSID
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The MAC address of the access point, BSSID
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The wireless channel used
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A MAC address of the wireless client
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The most common attack against WEP can be done by performing the following
    steps:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
- en: 'First, identify the available wireless network interfaces using the following
    command:'
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Stop the interface to change the MAC address to the address that is being used
    by an existing client already associated with the target network. You can also
    use `macchanger` for this step. When the MAC address has been changed, restart
    `airmon-ng`. Use the following commands to perform these steps:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Using a known and accepted MAC address simplifies the attack. However, this
    is not always the case. This attack assumes that you do *not* know the MAC address.
    Instead, we will make a fake association with the network.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the following `airodump` command to locate the target wireless network:'
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: When `airodump` locates the target, press *Ctrl* + *C* to stop the search. Copy
    the MAC address in the BSSID, and note the channel. When `airodump` locates the
    target, press *Ctrl* + *C* to stop the search. Copy the MAC address in the BSSID,
    and note the channel; in the example shown in the following screenshot, the target
    network `dd_wep` is operating on channel six at a speed of 11 MB.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising a WEP encryption](img/3121OS_08_12.jpg)'
  id: totrans-380
  prefs: []
  type: TYPE_IMG
- en: 'Start `airodump-ng` to sniff wireless traffic and collect IVs using the following
    command, where `--bssid` allows us to select the target''s BSSID, `-c` indicates
    the channel, and `-w` allows us to write the name of the output file (`wep_out`):'
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now we have to increase the number of transmitted IV packets. Open a second
    terminal window (do not close the first) and enter the following command to fake
    an authentication to the targeted wireless access point:'
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Here,`-1` signals a fake authentication and `0` is the reassociation timing
    in seconds (a setting of `0` might alert the defender, so an attacker might set
    it to 30 or even higher).
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
- en: With the fake authentication in place, we will generate traffic that appears
    to come from a trusted MAC address and route it to the target wireless access
    point.
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This attack is known as an ARP injection or ARP replay attack. Normally, the
    target access point will rebroadcast the ARP packets and generate a new IV each
    time; therefore, this is a quick way to cultivate the necessary IVs.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising a WEP encryption](img/3121OS_08_13.jpg)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
- en: 'Let''s generate some additional packets while the ARP injection continues.
    Open another terminal window, and start an interactive packet replay attack by
    entering the following command:'
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Here, `-2` indicates that we are using an interactive replay attack, `-p 0841`
    sets the Frame Control field of the packet to make it appear as if it is being
    sent from a wireless client, `-c FF:FF:FF:FF:FF:FF` sets the destination (in this
    case, the `FF` notation sends the packet to all the hosts on the network), `-b`
    is the MAC address of the BSSID, and `-h` is the MAC address of the packets being
    transmitted that should match the tester's MAC address.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising a WEP encryption](img/3121OS_08_14_new.jpg)'
  id: totrans-395
  prefs: []
  type: TYPE_IMG
- en: 'Another technique to make the network appear busy is to open multiple command
    shells on the attacking system, and enter the following command replacing (`IP
    address`) with the target''s IP address:'
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: After enough packets have been collected and saved, the following `aircrack-ng`
    command can be used to crack the WEP key, where `-a 1` forces the attack mode
    to be static WEP, `-b` is the BSSID, and `dd_wep.cap` is the capture file containing
    the captured IVs.
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: As you can see in the following screenshot, the attack was successful, and the
    key was identified. (Although it appears as a hexadecimal number, you can simply
    enter it to log onto the WEP network.)
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising a WEP encryption](img/3121OS_08_15.jpg)'
  id: totrans-401
  prefs: []
  type: TYPE_IMG
- en: Although this demonstration focused on a 64-bit key, longer keys do not take
    significantly more time to crack once you have harvested the IVs from the access
    point.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
- en: The `aircrack-ng` suite of tools is the "gold standard" and provides the most
    reliable and effective way to gain access. However, Kali comes with several other
    tools that can assist you in compromising encrypted wireless networks.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
- en: 'One of these is the Fern WiFi Cracker, which is a Python GUI that incorporates
    `aircrack-ng`. It can automatically scan for wireless networks and identify WEP,
    WPA, and WPA2 networks. Once the networks are identified, an attacker can take
    advantage of several features, including the following:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: WEP cracking using a variety of attacks, including fragmentation, Chop Chop,
    Caffe Latte, Hirte, ARP request replay, or WPS attack
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WPA and WPA2 cracking using dictionary or WPS-based attacks
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automatic saving of the key in a database following a successful crack
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Internal man-in-the-middle engine supports session hijacking
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute-force attacks against HTTP, HTTPS, Telnet, and FTP
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The interface of Fern is very clean, and the setup directs the user to select
    the interface and scan for an access point. It will report the access points for
    WEP and WPA/WPA2; from this point onwards, it is just a matter of clicking on
    the appropriate button to launch the attack. The initial launch screen for Fern
    is shown in the following screenshot:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising a WEP encryption](img/3121OS_08_16.jpg)'
  id: totrans-411
  prefs: []
  type: TYPE_IMG
- en: Although Fern is an excellent tool, most testers do not rely on it exclusively—if
    there is a failure to identify a key or gain access to a network, the reason for
    this failure can remain hidden behind the GUI, making troubleshooting difficult.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
- en: 'A similar application is the Wifite wireless auditor, which presents a text-based
    interface to support testing. It has proven to be very effective during field
    testing, and it takes advantage of features that include the following:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: Wifite supports anonymity by changing the attacker's MAC address to a random
    MAC address before attacking and then changing it back when all the attacks are
    complete
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It sorts targets by signal strength (in dB) to crack the closest access points
    first
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It automatically deauthenticates clients of hidden networks to reveal the SSIDs
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It supports multiple attack types
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the example shown in the following screenshot, a single target, `dd_wep`,
    was selected for attack. No other interaction with the application was required;
    it completed the full compromise and saved the cracked key to a database by itself.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising a WEP encryption](img/3121OS_08_17.jpg)'
  id: totrans-419
  prefs: []
  type: TYPE_IMG
- en: Although the vulnerability of the deprecated WEP is well known and has been
    proven by some basic tools available on Kali, how well does the stronger WPA encryption
    protocol stand up to attack?
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
- en: Attacking WPA and WPA2
  id: totrans-421
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**WiFi Protected Access** (**WPA**) and **WiFi Protected Access 2** (**WPA2**)
    are wireless security protocols that were intended to address the security shortcomings
    of WEP. Because the WPA protocols dynamically generate a new key for each packet,
    they prevent the statistical analysis that caused WEP to fail. Nevertheless, they
    are vulnerable to some attack techniques.'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
- en: WPA and WPA2 are frequently deployed with a **pre-shared key** (**PSK**) to
    secure communications between the access point and the wireless clients. The PSK
    should be a random passphrase of at least 13 characters in length; if not, it
    is possible to determine the PSK using a brute-force attack by comparing the PSK
    to a known dictionary. This is the most common attack. (Note that if configured
    in the Enterprise mode, which provides authentication using a RADIUS authentication
    server, WPA is "unbreakable" from our perspective!)
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: Brute-force attacks
  id: totrans-424
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unlike WEP, which can be broken using a statistical analysis of a large number
    of packets, WPA decryption requires the attacker to create specific packet types
    that reveal details, such as the handshake between the access point and the client.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
- en: 'To attack a WPA transmission, the following steps should be performed:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: Start the wireless adaptor and use the `ifconfig` command to ensure that the
    monitor interface is created.
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use `airodump-ng –wlan0` to identify the target network.
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Start capturing traffic between the target access point and the client using
    the following command:'
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Set `-c` to monitor a specific channel, the `--showack` flag to ensure that
    the client computer acknowledges your request to deauthenticate it from the wireless
    access point, and `-w` to write the output to a file for a dictionary attack later.
    A typical output from this attack is shown in the following screenshot:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
- en: '![Brute-force attacks](img/3121OS_08_18.jpg)'
  id: totrans-432
  prefs: []
  type: TYPE_IMG
- en: 'Leave this terminal window open, and open a second terminal window to launch
    a deauthentication attack; this will force a user to reauthenticate to the target
    access point and re-exchange the WPA key. The deauthentication attack command
    is shown as follows:'
  id: totrans-433
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
- en: '![Brute-force attacks](img/3121OS_08_19.jpg)'
  id: totrans-436
  prefs: []
  type: TYPE_IMG
- en: A successful deauthentication attack will show `ACKs`, which indicate that the
    client who was connected to the target access point has acknowledged the deauthentication
    command that was just sent.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
- en: Review the original command shell that was kept open to monitor the wireless
    transmission, and ensure that you capture the 4-way handshake. A successful WPA
    handshake will be identified in the top-right hand corner of the console . In
    the following example, the data indicates the WPA handshake value is `28:10:7B:61:20:32`:![Brute-force
    attacks](img/3121OS_08_20.jpg)
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use `aircrack` to crack the WPA key using a defined wordlist. The filename defined
    by the attacker for collecting handshake data will be located in the root directory,
    and the `-01.cap` extension will be appended to it.
  id: totrans-439
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In Kali, wordlists are located in the `/usr/share/wordlists` directory. Although
    several wordlists are available, it is recommended that you download lists that
    will be more effective in breaking common passwords.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
- en: In the previous example, the key was preplaced in the password list. Undertaking
    a dictionary attack for a long, complex password can take several hours depending
    on the system configuration. The following command uses `words` as the source
    wordlist.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The following screenshot shows the results from a successful cracking of the
    WPA key; the key to the network gaffer was found to be `princessmouse` after testing
    44 keys.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
- en: '![Brute-force attacks](img/3121OS_08_21.jpg)'
  id: totrans-444
  prefs: []
  type: TYPE_IMG
- en: 'If you don''t have a custom password list at hand or wish to rapidly generate
    a list, you can use the crunch application in Kali. The following command instructs
    crunch to create a wordlist of words with a minimum length of 5 characters and
    a maximum length of 25 characters using the given character set:'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: You can also improve the effectiveness of the brute-force attack using GPU-based
    password cracking tools (oclHashcat for AMD/ATI graphics cards and cudaHashcat
    for NVIDIA graphics cards).
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
- en: 'To implement this attack, first convert the WPA handshake capture file, `psk-01.cap`
    to a hashcat file using the following command:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'When the conversion is completed, run the hashcat against the new capture file
    (choose the version of hashcat that matches your CPU architecture and your graphics
    card) using the following command:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Attacking wireless routers with Reaver
  id: totrans-452
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: WPA and WPA2 are also vulnerable to attacks against an access point's Wi-Fi
    Protected Setup, WPS, and pin number.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
- en: Most access points support the **Wi-Fi Protected Setup** (**WPS**) protocol,
    which emerged as a standard in 2006 to allow users to easily set up and configure
    access points and add new devices to an existing network without having to re-enter
    large and complex passphrases.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, the pin is an 8-digit number (100,000,000 possible guesses),
    but the last number is a checksum value. Because the WPS authentication protocol
    cuts the pin in half and validates each half separately, it means that there are
    10⁴ (10,000) values for the first half of the pin, and 10³ (1,000) possible values
    for the second half—the attacker only has to make a maximum of 11,000 guesses
    to compromise the access point!
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
- en: Reaver is a tool designed to maximize the guessing process (although Wifite
    also conducts WPS guesses).
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
- en: 'To start a Reaver attack, use a companion tool called `wash` to identify any
    vulnerable networks as given in the following command:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'If there are any vulnerable networks, launch an attack against them using the
    following command:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Testing this attack in Kali has demonstrated that the attack is slow and is
    prone to failure; however, it can be used as a background attack or can supplement
    other routes of attack to compromise the WPA network.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
- en: Cloning an access point
  id: totrans-462
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the more interesting attacks against wireless networks relies on cloning
    the access point and then monitoring the information that is transmitted when
    users attempt to connect to it. An attacker can not only gain access to authentication
    credentials but can also employ a man-in-the-middle attack to intercept or redirect
    network traffic.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
- en: Several tools included in Kali claim to support cloning or producing a rogue
    access point; however, at this time there are shortcomings in these tools. For
    example, the Social Engineering Toolkit and Websploit do not integrate with the
    DHCP server that comes preinstalled in Kali.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
- en: Most attackers look for external tools, including scripts such as Gerix, or
    easy-creds; however, the `aircrack-ng` suite also includes a tool. `airbase-ng`,
    for cloning access points.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
- en: 'To make a fake wireless access point, an attacker will:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
- en: 'Start `wlan0` in monitor mode, which will create a `mon0` interface for monitoring,
    using the following command:'
  id: totrans-467
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Set up the access point (AP) on `mon0` using the following command. Social
    engineering can have a significant impact on the success of the AP, so use a name
    that will attract the target clients. For this example, we will use a generic
    name of an open Wi-Fi network. It will be established on the WiFi channel six:'
  id: totrans-469
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Install the bridge utilities using the following command:'
  id: totrans-471
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-472
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: In another terminal window, create a bridge (`rogue`) and link `at0` (the `at0`
    interface is created by the previous command) to `eth0` using the bridge utilities
    (note that bridge utilities must first be installed using `apt-get install bridge-utils`).
  id: totrans-473
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Because the two interfaces are integrated into the virtual bridge, you can
    release their IP addresses using the following commands:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Enable IP forwarding across the bridge using the following command:'
  id: totrans-477
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-478
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Configure the bridge with an IP address of the LAN where it connects to `eth0`
    using the following commands:'
  id: totrans-479
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Start the AP to sniff authentication handshakes using the following command:'
  id: totrans-481
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Denial-of-service attacks
  id: totrans-483
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The final attack against wireless networks that we''ll evaluate is the denial-of-service
    attack, where an attacker deprives a legitimate user of access to a wireless network
    or makes the network unavailable by causing it to crash. Wireless networks are
    extremely susceptible to DoS attacks, and it is difficult to localize the attacker
    on a distributed wireless network. Examples of DoS attacks include the following:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
- en: Injecting crafted network commands, such as reconfiguration commands, onto a
    wireless network can cause a failure of routers, switches, and other network devices.
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some devices and applications can recognize that an attack is taking place and
    will automatically respond by disabling the network. A malicious attacker can
    launch an obvious attack and then let the target create the DoS itself!
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bombarding the wireless network with a flood of data packets can make it unavailable
    for use; for example, an HTTP flood attack making thousands of page requests to
    a web server can exhaust its processing ability. In the same way, flooding the
    network with authentication and association packets blocks users from connecting
    to the access points.
  id: totrans-487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attackers can craft specific deauthentication and disassociation commands, which
    are used in wireless networks to close an authorized connection and to flood the
    network and stop legitimate users from maintaining their connection to a wireless
    access point.
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To demonstrate this last point, we will create a denial-of-service attack by
    flooding a network with deauthentication packets. Because the wireless 802.11
    protocol is built to support deauthentication upon the receipt of a defined packet
    (so that a user can break a connection when it is no longer required), this can
    be a devastating attack—it complies with the standard, and there is no way to
    stop it from happening.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
- en: 'The easiest way to "bump" a legitimate user off a network is to target them
    with a stream of deauthentication packets. This can be done with the help of the
    `aircrack-ng` tool suite using the following command:'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This command identifies the attack type as `-0`, indicating that it is for a
    deauthentication attack. The second `0` (zero) launches a continuous stream of
    deauthentication packets, making the network unavailable to its users.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
- en: The Websploit framework is an open source tool used to scan and analyze remote
    systems. It contains several tools, including tools that are specific to wireless
    attacks. To launch it, open a command shell and simply type `websploit`.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
- en: The Websploit interface is similar to that of `recon-ng` and the Metasploit
    Framework, and it presents the user with a modular interface.
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
- en: Once launched, use the `show modules` command to see the attack modules present
    in the existing version. Select the WiFi jammer (a stream of deauthentication
    packets) using the `use wifi/wifi_jammer` command. As shown in the following screenshot,
    the attacker just has to use the `set` commands to set the various options and
    then select `run` to launch the attack.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
- en: '![Denial-of-service attacks](img/3121OS_08_22.jpg)'
  id: totrans-496
  prefs: []
  type: TYPE_IMG
- en: Summary
  id: totrans-497
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we examined several management tasks required for a successful
    attack against a wireless network, including the selection of the wireless adaptor,
    configuration of the wireless modem, and reconnaissance using tools such as aircrack-ng
    Kismet. We focused on using the `aircrack-ng` suite of tools to identify hidden
    networks, bypass MAC authentication, and compromise WEP and WPA/WPA2 encryption.
    We also saw how to clone, or copy, a wireless access point, and how to perform
    a denial-of-service attack against a wireless network.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter, will focus on how attackers target a website and its services.
    We'll examine the tools used for reconnaissance, especially client-side proxies
    and vulnerability scanners. We'll see how attackers take advantage of these vulnerabilities
    with automated tools, such as exploit frameworks and online password cracking.
    More importantly, we'll examine some discrete attacks that usually require manual
    intervention, such as injection attacks and cross-site scripting. Finally, we'll
    look at the peculiarities of online services and why and how they're vulnerable
    to the DoS attacks.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 9. Reconnaissance and Exploitation of Web-based Applications
  id: totrans-500
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we reviewed the attacker's kill chain—the specific
    approach used to compromise networks and devices, and disclose data or hinder
    access to network resources. In [Chapter 7](ch07.html "Chapter 7. Physical Attacks
    and Social Engineering"), *Physical Attacks and Social Engineering*, we examined
    the routes of attack, starting with physical attacks and social engineering. In
    [Chapter 8](ch08.html "Chapter 8. Exploiting Wireless Communications"), *Exploiting
    Wireless Communications*, we saw how wireless networks could be compromised. In
    this chapter, we'll focus on one of the most common attack routes, through websites
    and web-based applications.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
- en: Websites that deliver content and web-based services (for example, e-mails and
    FTP) are ubiquitous, and most organizations allow remote access to these services
    with almost constant availability. To penetration testers and attackers, however,
    websites expose back-end services occurring on the network, client-side activities
    of the users accessing the website, and the connection between users and the website's
    data frequent attacks. This chapter will focus on the attacker's perspective of
    websites and web services, and we will review attacks against connectivity in
    [Chapter 10](ch10.html "Chapter 10. Exploiting Remote Access Communications"),
    *Exploiting Remote Access Communications* and client-side attacks in [Chapter
    11](ch11.html "Chapter 11. Client-side Exploitation"), *Client-side Exploitation*.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this chapter, you will have learned the following:'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
- en: Extending the principles of reconnaissance to web services
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability scanning
  id: totrans-505
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using client-side proxies
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploiting vulnerabilities in web services
  id: totrans-507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintaining access to compromised systems with web backdoors
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-509
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For many exercises, we'll use NOWASP or Mutillidae as a target website that
    contains known vulnerabilities that can be exploited; it can be downloaded from
    [www.owasp.org/index.php/Category:OWASP_Mutillidae](http://www.owasp.org/index.php/Category:OWASP_Mutillidae).
    This web application can be installed directly onto Linux or Windows using LAMP,
    WAMP, and XAMPP. It is also preinstalled on the SamauraiWTF and Metasploitable
    testing environments. Refer to the [Appendix](apa.html "Appendix A. Installing
    Kali Linux"), *Installing Kali Linux* for instructions on creating a Metasploitable
    test environment.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
- en: Conducting reconnaissance of websites
  id: totrans-511
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Websites, and the delivery of services from those sites, are particularly complex.
    Typically, services are delivered to the end user using a multi-tiered architecture
    with web servers that are accessible to the public Internet, while communicating
    with back-end servers and databases located on the network.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
- en: 'The complexity is increased by several additional factors that must be taken
    into account during testing, which include the following:'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
- en: Network architecture, including security controls (firewalls, IDS/IPS, and honeypots),
    and configurations such as load balancing
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Platform architecture (hardware, operating system, and additional applications)
    of systems that host web services
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications, middleware, and final-tier databases, which may employ different
    platforms (Unix or Windows), vendors, programming languages, and a mix of commercial
    and proprietary software
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Authentication and authorization processes, including the process for maintaining
    the session state across the application
  id: totrans-517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The underlying business logic that governs how the application will be used
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Client-side interactions and communications with the web service
  id: totrans-519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Given the proven complexity of web services, it is important for a penetration
    tester to be adaptable to each site's specific architecture and service parameters.
    At the same time, the testing process must be applied consistently and ensure
    that nothing is missed. Several methodologies have been proposed to accomplish
    these goals. The most widely accepted one is the **Open Web Application Security
    Project** (**OWASP**) ([www.owasp.org](http://www.owasp.org)) and its list of
    the top 10 vulnerabilities.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
- en: As a minimum standard, OWASP has provided a strong direction to testers. However,
    focusing on only the top 10 vulnerabilities is short-sighted, and the methodology
    has demonstrated some gaps, particularly when applied to finding vulnerabilities
    in the logic of how an application should work to support business practices.
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the kill chain approach, some activities specific to web service reconnaissance
    to be highlighted include the following:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
- en: Identifying the target site, especially with regards to where and how it is
    hosted.
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enumerating the site directory structure and files of the target website, including
    determining if a **content management system** (**CMS**) is in use. This may include
    downloading the website for offline analysis, including document metadata analysis,
    and using the site to create a custom wordlist for password cracking (using a
    program such as crunch). It also ensures that all support files are also identified.
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying the authentication and authorization mechanisms and determining
    how the session state is maintained during a transaction with that web service.
    This will usually involve an analysis of cookies and how they are used.
  id: totrans-525
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enumerating all forms. As these are the primary means for a client to input
    data and interact with the web service, these are the specific locations for several
    exploitable vulnerabilities, such as SQL injection attacks and cross-site scripting.
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying other areas that accept input, such as pages that allow for file
    upload as well as any restrictions on accepted upload types.
  id: totrans-527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying how errors are handled, and the actual error messages that are received
    by a user; frequently, the error will provide valuable internal information such
    as version of software used, or internal file names and processes.
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determining which pages require and maintain Secure Sockets Layer or other secure
    protocols (refer to [Chapter 10](ch10.html "Chapter 10. Exploiting Remote Access
    Communications"), *Exploiting Remote Access Communications*).
  id: totrans-529
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The first step is to conduct the passive and active reconnaissance previously
    described (refer to [Chapter 2](ch02.html "Chapter 2. Identifying the Target –
    Passive Reconnaissance"), *Identifying the Target – Passive Reconnaissance* and
    [Chapter 3](ch03.html "Chapter 3. Active Reconnaissance and Vulnerability Scanning"),
    *Active Reconnaissance and Vulnerability Scanning*); in particular, ensure that
    hosted sites are identified, and then use DNS mapping to identify all the hosted
    sites that are delivered by the same server (one of the most common and successful
    means of attack is to attack a non-target site hosted on the same physical server
    as the target website, exploit weaknesses in the server to gain root access, and
    then use the escalated privileges to attack the targeted site).
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to identify the presence of network-based protective devices,
    such as firewalls, IDS/IPS, and honeypots. An increasingly common protective device
    is the **Web Application Firewall** (**WAF**).
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
- en: If a WAF is being used, testers will have to ensure that the attacks, especially
    those that rely on crafted input, are encoded to bypass the WAF.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
- en: WAFs can be identified by manually inspecting cookies (some WAFs tag or modify
    the cookies that are communicated between the web server and the client), or by
    changes to the header information (identified when a tester connects to port 80
    using a command line tool such as Telnet).
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
- en: 'The process of WAF detection can be automated using the `nmap` script, `http-waf-detect.nse`,
    as shown in the following screenshot:'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting reconnaissance of websites](img/3121OS_09_01.jpg)'
  id: totrans-535
  prefs: []
  type: TYPE_IMG
- en: The nmap script identifies that a WAF is present; however, testing of the script
    has demonstrated that it is not always accurate in its findings, and that the
    returned data may be too general to guide an effective strategy to bypass the
    firewall.
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
- en: 'The wafw00f script is an automated tool to identify and fingerprint web-based
    firewalls; testing has determined that it is the most accurate tool for this purpose.
    The script is easy to invoke from Kali, and ample output is shown in the following
    screenshot:'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting reconnaissance of websites](img/3121OS_09_02.jpg)'
  id: totrans-538
  prefs: []
  type: TYPE_IMG
- en: '**Load balancing detector** (**lbd**) is a bash shell script that determines
    if a given domain uses DNS and/or HTTP load balancing. This is important information
    from the perspective of a tester, as it can explain seemingly anomalous results
    that occur when one server is tested, and then the load balancer switches requests
    to a different server. Lbd uses a variety of checks to identify the presence of
    load balancing; a. A sample output is shown in the following screenshot:'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting reconnaissance of websites](img/3121OS_09_03.jpg)'
  id: totrans-540
  prefs: []
  type: TYPE_IMG
- en: The website should be inspected to determine the CMS that may be used to build
    and maintain it. CMS applications such as Drupal, Joomla, and WordPress, among
    others, may be configured with a vulnerable administrative interface that allows
    access to the elevated privileges, or may contain exploitable vulnerabilities.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali includes an automated scanner, **BlindElephant**, which fingerprints a
    CMS to determine version information. A sample output is shown in the following
    screenshot:'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting reconnaissance of websites](img/3121OS_09_04.jpg)'
  id: totrans-543
  prefs: []
  type: TYPE_IMG
- en: BlindElephant reviews the fingerprint for components of the CMS and then provides
    a best guess for the versions that are present. However, like other applications,
    we have found that it may fail to detect a CMS that is present; therefore, always
    verify results against other scanners that crawl the website for specific directories
    and files, or manually inspect the site.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
- en: One particular scanning tool, automated web crawlers, can be used to validate
    information that has already been gathered, as well as determine the existing
    directory and file structure of a particular site. Typical findings of web crawlers
    include administration portals, configuration files (current and previous versions)
    that may contain hardcoded access credentials and information on the internal
    structure, backup copies of the website, administrator notes, confidential personal
    information, and source code.
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
- en: Kali supports several web crawlers, including Burp Suite, DirBuster, OWASP-ZAP,
    Vega, WebScarab, and WebSlayer. The most commonly used tool is DirBuster.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
- en: 'DirBuster is a GUI-driven application that uses a list of possible directories
    and files to perform a brute-force analysis of a website''s structure. Responses
    can be viewed in a list or a tree format that reflects the site''s structure more
    accurately. Output from executing this application against a target website is
    shown in the following screenshot:'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting reconnaissance of websites](img/3121OS_09_05.jpg)'
  id: totrans-548
  prefs: []
  type: TYPE_IMG
- en: It is also possible to copy a website directly to the tester's location. This
    "website cloning" allows a tester the leisure to review the directory structure
    and its contents, extract metadata from local files, and use the site's contents
    as an input to a program such as `crunch`, which will produce a personalized wordlist
    to support password cracking.
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
- en: To clone a website to a local system, use HTTrack. If it is not present in Kali,
    it can be downloaded using the `apt-get` command and then executed by typing `httrack`
    in the command prompt. You will be prompted to select a directory location to
    store the downloaded website. Once the program has executed, you will have a backup
    of the target website.
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
- en: Once you have mapped out the basic structure of the website and/or web services
    that are being delivered, the next stage of the kill chain is to identify the
    vulnerabilities that can be exploited.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability scanners
  id: totrans-552
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Scanning for vulnerabilities using automated tools can be problematic. Web vulnerability
    scanners suffer the common shortcomings of all scanners (a scanner can only detect
    the signature of a known vulnerability; they cannot determine if the vulnerability
    can actually be exploited; there is a high incidence of *false-positive* reports).
    Furthermore, web vulnerability scanners cannot identify complex errors in business
    logic, and they do not accurately simulate the complex chained attacks used by
    hackers.
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
- en: In an effort to increase reliability, most penetration testers use multiple
    tools to scan web services; when multiple tools report that a particular vulnerability
    may exist, this consensus will direct the tester to areas that may require manually
    verify the findings.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali comes with an extensive number of vulnerability scanners for web services,
    and provides a stable platform for installing new scanners and extending their
    capabilities. This allows penetration testers to increase the effectiveness of
    testing by selecting scanning tools that:'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
- en: Maximize the completeness (the total number of vulnerabilities that are identified)
    and accuracy (the vulnerabilities that are real and not false-positive results)
    of testing.
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Minimize the time required to obtain usable results.
  id: totrans-557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Minimize the negative impacts on the web services being tested. This can include
    slowing down the system due to an increase of traffic throughput. For example,
    one of the most common negative effects is a result of testing forms that input
    data to a database and then e-mail an individual providing an update of the change
    that has been made—uncontrolled testing of such forms can result in more than
    30,000 e-mails being sent!
  id: totrans-558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There is significant complexity in choosing the most effective tool. In addition
    to the factors already listed, some vulnerability scanners will also launch the
    appropriate exploit and support the post-exploit activities. For our purposes,
    we will consider all tools that scan for exploitable weaknesses to be "vulnerability
    scanners." Kali provides access to several different vulnerability scanners, including
    the following:'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
- en: Scanners that extend the functionality of traditional vulnerability scanners
    to include websites and associated services (Metasploit Framework and Websploit)
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanners that extend the functionality of non-traditional applications, such
    as web browsers, to support web service vulnerability scanning (OWASP Mantra)
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanners that are specifically developed to support reconnaissance and exploit
    detection in websites and web services (Arachnid, Nikto, Skipfish, Vega, w3af,
    and so on)
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extending the functionality of traditional vulnerability scanners
  id: totrans-563
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The best example of this type of vulnerability scanner is the `wmap` module
    that is packaged with the Metasploit Framework of Rapid7\. To use this module,
    you must first ensure that the `postgresql` database service has been started;
    use the following command:'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-565
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Next, launch `msfconsole` from a command prompt and enter the `load wmap` command.
    Like most of the framework applications, typing `help` or `-h` in the command
    prompt will display the commands that are available for use.
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
- en: 'To manage the target sites, use the `wmap_sites` command. The `–a` option will
    add the target''s IP address to the application''s database. The `–l` option provides
    a list of the available sites to target for testing, as shown in the following
    screenshot:'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
- en: '![Extending the functionality of traditional vulnerability scanners](img/3121OS_09_06.jpg)'
  id: totrans-568
  prefs: []
  type: TYPE_IMG
- en: 'With the target selected, the tester is now able to run the `wmap` modules
    using the following command:'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
- en: '![Extending the functionality of traditional vulnerability scanners](img/3121OS_09_07.jpg)'
  id: totrans-572
  prefs: []
  type: TYPE_IMG
- en: Executing this command may take some time to reach completion (it depends on
    the number of pages in the website, as well as the site's structural complexity,
    as well as how the selected modules operate to detect vulnerabilities).
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
- en: The Metasploit Framework was not designed for the complexities of websites and
    web services; this is visible in the limited amount of findings that result from
    using this product versus using vulnerability scanners that were specifically
    designed for websites and web services. Nevertheless, because it is always undergoing
    updates, it is worth monitoring the changes in its scanning abilities.
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
- en: The **Websploit** application also uses the `wmap` modules.
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
- en: Extending the functionality of web browsers
  id: totrans-576
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Web browsers are designed to interact with web services. As a result, it is
    natural that they are selected as vulnerability assessment and exploit tools.
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
- en: 'The best example of this type of toolset is OWASP''s Mantra—a collection of
    third-party security utilities built on the Firefox web browser. OWASP''s Mantra
    supports Windows, Linux, and Macintosh test systems, and provides access to utilities
    that support the following activities:'
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
- en: '**Information gathering**: These utilities provide passive reconnaissance,
    reporting on the target''s physical location, uncovering the underlying site technologies,
    and searching and testing of the site''s hyperlinks'
  id: totrans-579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Editors**: A collection of utilities that edit, debug, and monitor HTML,
    CSS, and JavaScript'
  id: totrans-580
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Proxy**: Utilities that provide proxy management tools, including FoxyProxy,
    a tool that facilitates switching back and forth among proxies'
  id: totrans-581
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network utilities**: These utilities provide clients for FTP and SSH communications,
    and simplify DNS cache management'
  id: totrans-582
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application auditing**: These switch between various user agents, access
    to web developer tools, control what gets sent as the HTTP referrer on a per-site
    basis, find SQL injection and XSS vulnerabilities, allow testers to tamper with
    the data, and access to the Websecurify tools'
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Miscellaneous**: Generate scripts, manage sessions and downloads, and access
    encryption, decryption, and hashtag functions'
  id: totrans-584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Mantra framework can be used to facilitate a semi-automated reconnaissance
    of a website.
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
- en: In the example shown in the following screenshot, the Mutillidae login page
    has been opened in the Mantra browser. Using the drop-down menu (activated from
    the blue logo in the upper-right corner), the SQL Inject Me application has been
    selected from among the available tools, and is displayed in the left-hand panel.
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
- en: '![Extending the functionality of web browsers](img/3121OS_09_08.jpg)'
  id: totrans-587
  prefs: []
  type: TYPE_IMG
- en: Web-service-specific vulnerability scanners
  id: totrans-588
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Vulnerability scanners are automated tools that crawl an application to identify
    the signatures of known vulnerabilities.
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
- en: Kali comes with several different preinstalled vulnerability scanners; they
    can be accessed by navigating to **Kali Linux** | **Web Applications** | **Web
    Vulnerability Scanners**. Penetration testers will typically use two or three
    comprehensive scanners against the same target to ensure valid results. Note that
    some of the vulnerability scanners also include an attack functionality.
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability scanners are quite "noisy", and are usually detected by the victim.
    However, scans frequently get ignored as part of regular background probing across
    the Internet. In fact, some attackers have been known to launch large-scale scans
    against a target to camouflage the real attack or to induce the defenders to disable
    detection systems to reduce the influx of reports that they have to manage.
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
- en: 'A quick survey of the most important vulnerability scanners include the following:'
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
- en: '| Application | Description |'
  id: totrans-593
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-594
  prefs: []
  type: TYPE_TB
- en: '| Arachnid | An open-source Ruby framework that analyzes HTTP responses received
    during scanning to validate responses and eliminate false-positives. |'
  id: totrans-595
  prefs: []
  type: TYPE_TB
- en: '| GoLismero | It maps web applications and detects common vulnerabilities.
    The results are saved in TXT, CVS, HTML, and RAW formats. |'
  id: totrans-596
  prefs: []
  type: TYPE_TB
- en: '| Nikto | A Perl-based open-source scanner that allows IDS evasion and user
    changes to scan modules; however, this "original" web scanner is beginning to
    show its age, and is not as accurate as some of the more modern scanners. |'
  id: totrans-597
  prefs: []
  type: TYPE_TB
- en: '| Skipfish | This scanner completes a recursive crawl and dictionary-based
    crawl to generate an interactive sitemap of the targeted website that is annotated
    with the output from additional vulnerability scans. |'
  id: totrans-598
  prefs: []
  type: TYPE_TB
- en: '| Vega | It is a GUI-based open-source vulnerability scanner. As it is written
    in Java, it is a cross-platform (Linux, OS X, and Windows) and can be customized
    by the user. |'
  id: totrans-599
  prefs: []
  type: TYPE_TB
- en: '| w3af | This scanner provides both a graphical and command-line interface
    to a comprehensive Python-testing platform. It maps a target website and scans
    for vulnerabilities. This project is acquired by Rapid7, so there will be a closer
    integration with the Metasploit Framework in the future. |'
  id: totrans-600
  prefs: []
  type: TYPE_TB
- en: '| Wapiti | It is a Python-based open source vulnerability scanner. |'
  id: totrans-601
  prefs: []
  type: TYPE_TB
- en: '| Webscarab | This is OWASP''s Java-based framework for analyzing HTTP and
    HTTPS protocols. It can act as an intercepting proxy, a fuzzer, and a simple vulnerability
    scanner. |'
  id: totrans-602
  prefs: []
  type: TYPE_TB
- en: '| Webshag | This is a Python-based website crawler and scanner that can utilize
    complex IDS evasion. |'
  id: totrans-603
  prefs: []
  type: TYPE_TB
- en: '| Websploit | This is a framework for wired and wireless network attacks. |'
  id: totrans-604
  prefs: []
  type: TYPE_TB
- en: 'Most testers start testing a website by using Nikto, a simple scanner (particularly
    with regards to reporting) that generally provides accurate but limited results;
    a sample output of this scan is shown in the following screenshot:'
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
- en: '![Web-service-specific vulnerability scanners](img/3121OS_09_09.jpg)'
  id: totrans-606
  prefs: []
  type: TYPE_IMG
- en: The next step is to use more advanced scanners that scan a larger number of
    vulnerabilities; in turn, they can take significantly longer to run to completion.
    It is not uncommon for complex vulnerability scans (as determined by the number
    of pages to be scanned as well as the site's complexity, which can include multiple
    pages that permit user input such as search functions or forms that gather data
    from the user for a back-end database) to take several days to be completed.
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
- en: One of the most effective scanners based on the number of verified vulnerabilities
    discovered is Subgraph's Vega. As shown in the following screenshot, it scans
    a target and classifies the vulnerabilities as high, medium, low, or information.
    The tester is able to click on the identified results to "drill down" to specific
    findings. The tester can also modify the search modules, which are written in
    Java, to focus on particular vulnerabilities or identify new vulnerabilities.
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
- en: '![Web-service-specific vulnerability scanners](img/3121OS_09_10.jpg)'
  id: totrans-609
  prefs: []
  type: TYPE_IMG
- en: 'Another scanner worth using is the **Web Application Attack and Audit Framework**
    (**w3af**), a Python-based open-source web application security scanner. It provides
    preconfigured vulnerability scans in support of standards such as OWASP. The breadth
    of the scanner''s options comes at a price—it takes significantly longer than
    other scanners to review a target, and it is prone to failure over long testing
    periods. A w3af instance configured for a full audit of a sample website is shown
    in the following screenshot:'
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
- en: '![Web-service-specific vulnerability scanners](img/3121OS_09_11.jpg)'
  id: totrans-611
  prefs: []
  type: TYPE_IMG
- en: Kali also includes some application-specific vulnerability scanners. For example,
    WPScan is used specifically against **WordPress CMS** applications.
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
- en: Testing security with client-side proxies
  id: totrans-613
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unlike automated vulnerability scanners, client-side proxies require extensive
    human interaction in order to be effective. A client-side proxy intercepts HTTP
    and HTTPS traffic, allowing a penetration tester to examine communications between
    the user and the application. It allows the tester to copy the data or interact
    with requests that are sent to the application.
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
- en: Kali comes with several client-side proxies, including Burp Suite, OWASP ZAP,
    Paros, ProxyStrike, the vulnerability scanner Vega, and WebScarab. After extensive
    testing, we have come to rely on Burp Proxy, with ZAP as a back-up tool.
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
- en: 'Burp is primarily used to intercept HTTP(S) traffic; however, it is part of
    a larger suite of tools that has several additional functions, including:'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
- en: An application-aware spider that crawls the site
  id: totrans-617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A vulnerability scanner, including a sequencer to test the randomness of session
    tokens, and a repeater to manipulate and resend requests between the client and
    the website (the vulnerability scanner is not included with the free version of
    Burp proxy that is packaged in Kali)
  id: totrans-618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An intruder tool that can be used to launch customized attacks (there are speed
    limitations in the free version of the tool included with Kali; these are removed
    if you purchase the commercial version of the software)
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ability to edit existing plugins or write new ones in order to extend the
    number and type of attacks that can be used
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To use Burp, ensure that your web browser is configured to use a local proxy;
    usually, you will have to adjust the network settings to specify that HTTP and
    HTTPS traffic must use the localhost (127.0.0.1) at port 8080.
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
- en: After setting up the browser and the proxy to work together, manually map the
    application. This is accomplished by turning off the proxy interception and then
    browsing the entire application. Follow every link, submit the forms, and log
    in to as many areas of the site as possible. Additional content will be inferred
    from various responses. The site map will populate an area under the **Target**
    tab (automated crawling can also be used by right-clicking on the site and selecting
    **Spider This Host**; however, the manual technique gives the tester the opportunity
    to become deeply familiar with the target, and it may identify areas to be avoided).
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the target is mapped, define the Target – Scope by selecting branches
    within the site map and using the **Add to Scope** command. Once this is completed,
    you can hide items that are not of interest on the site map using display filters.
    A site map created of a target website is shown in the following screenshot:'
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing security with client-side proxies](img/3121OS_09_12.jpg)'
  id: totrans-624
  prefs: []
  type: TYPE_IMG
- en: Once spidering has been completed, manually review the directory and file list
    for any structures that do not appear to be part of the public website, or that
    appear to be unintentionally disclosed. For example, directories titled admin,
    backup, documentation, or notes should be manually reviewed.
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
- en: 'Manual testing of the login page using a single quote as the input produced
    an error code suggesting that it may be vulnerable to a SQL injection attack;
    a sample return of the error code is shown in the following screenshot:'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing security with client-side proxies](img/3121OS_09_13.jpg)'
  id: totrans-627
  prefs: []
  type: TYPE_IMG
- en: The real strength of a proxy is its ability to intercept and modify commands.
    For this particular example, we'll use the Mutillidae website—a "broken" site
    that is installed as part of the Metasploitable testing framework to perform an
    attack to bypass SQL injection authentication.
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
- en: To launch this attack, ensure that the Burp proxy is configured to intercept
    communications by going to the **Proxy** tab and selecting the **Intercept** subtab.
    Click on the **Intercept is on** button, as shown in the next screenshot. When
    this is completed, open a browser window and access the Mutillidae logon page
    by entering `<IP address>/mutillidae/index.php?page=login.php`. Enter variables
    in the name and password fields, and then click on the login button.
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
- en: If you return to the Burp proxy, you will see that the information that the
    user entered into the form on the webpage was intercepted.
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing security with client-side proxies](img/3121OS_09_14.jpg)'
  id: totrans-631
  prefs: []
  type: TYPE_IMG
- en: Click on the **Action** button and select the option **Send to Intruder**. Open
    the main **Intruder** tab, and you will see four subtabs—**Target**, **Positions**,
    **Payloads**, and **Options**, as shown in the following screenshot. If you select
    **Positions**, you will see that five payload positions were identified from the
    intercepted information.
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing security with client-side proxies](img/3121OS_09_15.jpg)'
  id: totrans-633
  prefs: []
  type: TYPE_IMG
- en: This attack will use the sniper mode of the Burp proxy, which takes a single
    input from a list provided by the tester and sends this input to a single payload
    position at a time. For this example, we will target the username field, which
    we suspect is vulnerable based on the returned error message.
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
- en: To define the payload position, we select the subtab **Payloads**.
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing security with client-side proxies](img/3121OS_09_16.jpg)'
  id: totrans-636
  prefs: []
  type: TYPE_IMG
- en: To launch the attack, select **Intruder** from the top menu, and then select
    **Start Attack**. The proxy will iterate the wordlist against the selected payload
    positions as legitimate HTTP requests, and it will return the server's status
    codes. As you can see in the following screenshot, most options produce a status
    code of **200** (request succeeded); however, some of the data return a status
    code of **302** (request found; indicates that the requested resource is presently
    located under a different URI).
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing security with client-side proxies](img/3121OS_09_17.jpg)'
  id: totrans-638
  prefs: []
  type: TYPE_IMG
- en: The **302** status indicates successful attacks, and the data obtained can be
    used to successfully log on to the target site.
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, this is too brief of an overview of Burp proxy and its capabilities.
    The free version included with Kali will suffice for many testing tasks; however,
    serious testers (and attackers) should consider purchasing the commercial version.
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
- en: Server exploits
  id: totrans-641
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As they have an extensive "attack surface" (communication channels, client software,
    server operating systems, applications, middleware, and backend databases), web
    services are vulnerable to multiple attack types. The range of possible attacks
    would require their own book; therefore, we will only show a couple of types to
    highlight the capabilities of Kali.
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
- en: For this example, we will demonstrate how Kali can be used to launch a denial-of-service
    (**DoS**) attack against a network server.
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
- en: In general, attacking the operating system of a host system that provides web
    services follows the methodology previously described; however, their architecture
    is particularly vulnerable to DoS attacks.
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
- en: Kali includes several tools that are described as stress-testing applications
    because they simulate high activity loads against a server in order to assess
    how well it will cope with the additional stress. If the server or its applications
    fail, then it has suffered a DoS.
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
- en: Many of the tools rely on an IPv4 system's inability to handle the newer IPv6
    protocol (denail6, dos-new-ip6, flood_advertise6, and so on).
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
- en: 'However, the most successful DoS attack tool—**Low Orbit Ion Cannon** (**LOIC**)—must
    be manually added to Kali using the following steps:'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the `apt-get install` command, install the following packages and their
    dependencies: `mono-gmcs`, `mono-mcs`, `monodevelop`, and `liblog4net-cil-dev`.'
  id: totrans-648
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the LOIC from GitHub ([https://github.com/NewEraCracker/LOIC/downloads](https://github.com/NewEraCracker/LOIC/downloads))
    into a separate folder. Extract the compressed files into the folder using the
    unzip command.
  id: totrans-649
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Navigate to the folder and compile the application using the following command:'
  id: totrans-650
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-651
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The compiled build of the application will be in the `/<path> bin/Debug/LOIC.exe`
    directory.
  id: totrans-652
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the attack parameters have been entered, LOIC can be launched against
    the target website. The attack is launched using the intuitive GUI interface,
    as shown in the following screenshot:'
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
- en: '![Server exploits](img/3121OS_09_18.jpg)'
  id: totrans-654
  prefs: []
  type: TYPE_IMG
- en: Application-specific attacks
  id: totrans-655
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Application-specific attacks outnumber the attacks against specific operating
    systems; when one considers the misconfigurations, vulnerabilities, and logic
    errors that can affect each online application, it is surprising that any application
    can be considered "secure." We will highlight some of the more important attacks
    against web services.
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
- en: Brute-forcing access credentials
  id: totrans-657
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the most common initial attacks against a website or its services is
    a brute-force attack against the access authentication—guessing the username and
    password. This attack has a high success rate because users tend to select easy-to-remember
    credentials or reuse credentials, and also because system administrators frequently
    don't control multiple access attempts.
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali comes with hydra, a command-line tool, and hydra-gtk, which has a GUI
    interface. Both tools allow a tester to brute force or iterate possible usernames
    and passwords against a specified service. Multiple communication protocols are
    supported, including FTP, FTPS, HTTP, HTTPS, ICQ, IRC, LDAP, MySQL, Oracle, POP3,
    pcAnywhere, SNMP, SSH, VNC, and others. The following screenshot shows hydra using
    a brute-force attack to determine access credentials on an HTTP page:'
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
- en: '![Brute-forcing access credentials](img/3121OS_09_19.jpg)'
  id: totrans-660
  prefs: []
  type: TYPE_IMG
- en: Injection attacks against databases
  id: totrans-661
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The most common and exploitable vulnerability in websites is the injection vulnerability,
    which occurs when the victim site does not monitor the user input, thereby allowing
    the attacker to interact with backend systems. An attacker can craft the input
    data to modify or steal contents from a database, place an executable onto the
    server, or issue commands to the operating system.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
- en: One of the most useful tools for assessing SQL injection vulnerabilities is
    **sqlmap**, a Python tool that automates the reconnaissance and exploitation of
    Firebird, Microsoft SQL, MySQL, Oracle, PostgreSQL, Sybase, and SAP MaxDB databases.
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
- en: We'll demonstrate an SQL injection attack against the Mutillidae database. The
    first step is to determine the web server, the backend database management system,
    and the available databases.
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
- en: 'Launch a Metasploitable virtual machine, and access the Mutillidae website.
    When this is completed, review the web pages to identify one that accepts user
    input (for example, the user login form that accepts username and password from
    a remote user); these pages may be vulnerable to SQL injection. Then, open Kali,
    and from a command prompt, enter the following (using the appropriate target IP
    address):'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-666
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Sqlmap will return data, as shown in the following screenshot:'
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
- en: '![Injection attacks against databases](img/3121OS_09_20.jpg)'
  id: totrans-668
  prefs: []
  type: TYPE_IMG
- en: 'The most likely database to store the application''s data is the `owasp10`
    database; therefore, we will check for all tables of that database using the following
    command:'
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-670
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The returned data from executing that command is shown in the following screenshot:'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
- en: '![Injection attacks against databases](img/3121OS_09_21.jpg)'
  id: totrans-672
  prefs: []
  type: TYPE_IMG
- en: 'Of the six tables that were enumerated, one was titled `accounts`. We will
    attempt to dump the data from this part of the table. If successful, the account
    credentials will allow us to return to the database if further SQL injection attacks
    fail. To dump the credentials, use the following command:'
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-674
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '![Injection attacks against databases](img/3121OS_09_22.jpg)'
  id: totrans-675
  prefs: []
  type: TYPE_IMG
- en: Similar attacks can be used against the database to extract credit card numbers.
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
- en: Maintaining access with web backdoors
  id: totrans-677
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once a web server and its services have been compromised, it is important to
    ensure that secure access can be maintained. This is usually accomplished with
    the aid of a web shell—a small program that provides stealth backdoor access and
    allows the use of system commands to facilitate post-exploitation activities.
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
- en: Kali comes with several web shells; here we will use a popular PHP web shell
    called **Weevely**.
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
- en: 'Weevely simulates a Telnet session and allows the tester or attacker to take
    advantage of more than 30 modules for post-exploitation tasks, including the following:'
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
- en: Browsing the target filesystem
  id: totrans-681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: File transfer to and from the compromised system
  id: totrans-682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing audits for common server misconfigurations
  id: totrans-683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute-forcing SQL accounts through the target system
  id: totrans-684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spawning reverse TCP shells
  id: totrans-685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Executing commands on remote systems that have been compromised, even if PHP
    security restrictions have been applied
  id: totrans-686
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Finally, Weevely endeavors to hide communications in HTTP cookies to avoid
    detection. To create Weevely, issue the following command from the command prompt:'
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-688
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'This will create the file `weevely.php` in the root directory. Executing commands
    on remote systems that have been compromised, even if PHP security restrictions
    have been applied:'
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
- en: '![Maintaining access with web backdoors](img/3121OS_09_23.jpg)'
  id: totrans-690
  prefs: []
  type: TYPE_IMG
- en: Using a file upload vulnerability or any other compromise, including ones that
    give access to the meterpreter file upload functions, upload `weevely.php` onto
    the compromised website.
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
- en: 'To communicate with the web shell, issue the following command from the command
    prompt, ensuring that the target IP address, directory, and password variables
    are changed to reflect those of the compromised system:'
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-693
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: In the example shown in the following screenshot, we have verified that we are
    connected to the web shell using the `whoami` command (which identifies the correct
    directory) and the `ls` command in order to obtain a file list (which again confirms
    the source of the connection as `weevely.php`). The `cat /etc/password` command
    was used to view passwords.
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
- en: '![Maintaining access with web backdoors](img/3121OS_09_24.jpg)'
  id: totrans-695
  prefs: []
  type: TYPE_IMG
- en: The web shell can also be used to establish a reverse shell connection back
    to the tester, using either Netcat or the Metasploit Framework as the local listener.
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-697
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we examined websites and the services that they provide to
    authorized users from the perspective of an attacker. We applied the kill chain
    perspective to web services in order to understand the correct application of
    reconnaissance and vulnerability scanning.
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
- en: Several different vulnerability scanners were presented; we focused on making
    and using modifications to existing scanners to support the assessment of websites
    and web services, the use of browser-based vulnerability scanners, and vulnerability
    scanners that are specifically designed to assess websites and their services.
    Only a select few exploits were reviewed, and we completed the chapter with an
    examination of a web shell that is specific for web services.
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn how to identify and attack remote access
    communications that connect users to the web services.
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 10. Exploiting Remote Access Communications
  id: totrans-701
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 9](ch09.html "Chapter 9. Reconnaissance and Exploitation of Web-based
    Applications"), *Reconnaissance and Exploitation of Web-based Applications*, we
    applied the kill chain methodology against web-based applications. We reviewed
    reconnaissance, vulnerability scanning, and exploitation methodologies that are
    particular to websites and other applications. We also reviewed the unique tools
    that are required for assessing web-based applications, especially client-side
    proxies and post-exploitation tools such as web shells.
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we'll focus on compromising the remote access communications
    to the devices and applications that have proliferated over the Internet.
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
- en: 'Attackers are taking advantage of the pervasiveness of these remote access
    communications to achieve the following goals:'
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
- en: Exploit pre-existing communication channels to gain direct remote access to
    target systems
  id: totrans-705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intercept communications
  id: totrans-706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deny authenticated users access to regular communications and force them to
    use insecure channels that might be vulnerable to other attacks
  id: totrans-707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Since most users feel they are using communications tools that are "secure"
    (even banks rely on SSL protocols to secure online banking), these attacks can
    have a significant impact on both the communication that is compromised as well
    as the victim's trust in other online communications.
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will focus on the reconnaissance and exploit phases of the kill
    chain as they pertain to remote access communications. It will not cover subjects
    such as war dialing, voice over IP and related telephony issues, highly proprietary
    systems such as specialized kiosks, and complex applications that deserve their
    own book.
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this chapter, you will have learned the following:'
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
- en: Exploiting operating system communications protocols (RDP and SSH)
  id: totrans-711
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploiting remote access applications (VNC)
  id: totrans-712
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring Kali for Secure Sockets Layerv2 scanning
  id: totrans-713
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reconnaissance and exploitation of Secure Sockets Layer, including man-in-the-middle
    and denial of service attacks
  id: totrans-714
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attacking a virtual private network
  id: totrans-715
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploiting operating system communication protocols
  id: totrans-716
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Some protocols transmit access credentials in the clear (Telnet and FTP). Using
    a packet sniffer such as Wireshark will allow an attacker to intercept and reuse
    the credentials.
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
- en: However, most remote access protocols, especially those embedded in the operating
    system, are now protected with access controls and encryption. Although this adds
    a degree of security, they are still subject to attacks that may occur due to
    misconfigurations or the use of poor encryption keys. In this section, we will
    examine other risks that can be exploited to compromise supposedly secure communication
    channels.
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
- en: Compromising Remote Desktop Protocol
  id: totrans-719
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Remote Desktop Protocol** (**RDP**) is a proprietary Microsoft communication
    protocol which allows a client to connect with another computer using a graphical
    interface. Although the protocol is encrypted, access to the server can be gained
    if the attacker guesses the username and password.'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-721
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It should be noted that the most common compromise of RDP is using social engineering.
    The user is contacted by a remote service technician who convinces the user that
    they need remote access to fix something on the user's system. Malware attacks
    that target the RDP protocol are also becoming more common.
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
- en: From a tester's (or attacker's) perspective, the first step in compromising
    a target's RDP service is to locate the RDP server and characterize the strength
    of the cryptography that is in use. This reconnaissance is normally conducted
    using a tool such as `nmap`, configured to scan for the standard RDP port 3389.
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
- en: 'The `nmap` tool now includes specialized scripts that provide additional details
    about RDP, including the configuration of the encryption. If time permits, and
    if stealth is not an issue, these should be used during the initial scanning stage.
    The command line to invoke the script that enumerates supported encryption protocols
    is as follows:'
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-725
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising Remote Desktop Protocol](img/3121OS_10_01.jpg)'
  id: totrans-727
  prefs: []
  type: TYPE_IMG
- en: Some RDP vulnerabilities have been identified (especially MS12-020), and these
    can be remotely exploited using crafted packets.
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
- en: 'To determine whether the current version of RDP is vulnerable, use the appropriate
    `nmap` script, by invoking the following command line:'
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-730
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising Remote Desktop Protocol](img/3121OS_10_02.jpg)'
  id: totrans-732
  prefs: []
  type: TYPE_IMG
- en: Once a vulnerable system has been identified using `nmap`, it can be exploited
    using the Metasploit Framework's `auxiliary/dos/windows/rdp/ms12_020_maxchannelids`
    module to cause a denial of service.
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
- en: The most common method to compromise RDP is to use a brute-force attack based
    on a dictionary of the most common usernames and passwords (target-specific dictionaries
    can also be constructed to be target specific using tools such as **CeWL** and
    **crunch**; brute force attempts using these dictionaries are faster than attempts
    using generic dictionaries, and are stealthier because they generate less network
    traffic).
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
- en: Kali provides several tools to brute-force access, including **hydra**, **medusa**,
    **ncrack**, and **patator**. Through testing, we have found `ncrack` to be the
    most reliable in terms of speed and effectiveness.
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-736
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Lists of common usernames and passwords are available from several sources.
    Most cracking tools, especially `hydra` **,** `ncrack`, and `john` (John the Ripper),
    include lists in the application's home directory. Testers can also download lists
    of various types from online sources. Lists derived from compromised user accounts
    are particularly useful because they reflect the real-world usage of the authentication
    information. No matter what list you use, you may wish to personalize it for testing
    by adding names of the current and former employees (for usernames) or wordlists
    that have been created using tools such as CeWL, which crawls the target's website
    to create words of a defined length.
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
- en: 'The `ncrack` tool is a high-speed authentication cracking tool that supports
    the FTP, HTTP(S), POP3, RDP, SMB, SSH, Telnet, and VNC protocols. It is invoked
    from the terminal window using the following command:'
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-739
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising Remote Desktop Protocol](img/3121OS_10_03.jpg)'
  id: totrans-741
  prefs: []
  type: TYPE_IMG
- en: The `ncrack` tool discovered the access credentials for all users in approximately
    1,700 seconds. However, the amount of time required will depend on the overall
    size of the dictionaries used and how many guesses must be made before we get
    a successful hit.
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
- en: Compromising Secure Shell
  id: totrans-743
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **secure shell** (**SSH**) protocol is a network protocol that is used to
    establish an encrypted channel across an open network between a server and a client.
    In general, a public-private key pair allows users to log in to a system without
    requiring the password. The public key is present on all systems that require
    a secure connection, while the user keeps the private key secret. The authentication
    is based on the private key; SSH verifies the private key against the public key.
    On the target systems, the public key is verified against a list of authorized
    keys that are permitted to remotely access the system. This supposedly secure
    communication channel fails when the public key is not cryptographically strong
    and can be guessed.
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
- en: Like RDP, SSH is vulnerable to a brute-force attack that guesses the user's
    access credentials. For this particular example, we'll use a tool called `hydra`.
    The `hydra` tool is probably the oldest brute-force tool and is definitely the
    most feature-rich tool. It also supports attacks against the greatest number of
    target protocols.
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
- en: 'The `hydra` tool can be found by navigating to **Kali Linux** | **Password
    Attacks** | **Online Attacks**, and it can also be invoked directly from the command
    line. There are two versions of `hydra`: the command-line version (`hydra`) and
    the GUI version (hydra-gtk). For this example, we will invoke `hydra` from the
    command line using the following command:'
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-747
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The command parameters are described in the following list:'
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
- en: '`-s` designates the port to be used. Although it does not need to be entered
    when the default port is intended to be used, it is used to remove ambiguities
    and because it speeds up testing, in this case.'
  id: totrans-749
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-v` and `-V` select the maximum verbosity of reports.'
  id: totrans-750
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-L` selects the login, or username file.'
  id: totrans-751
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-P` selects the password file.'
  id: totrans-752
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-t` selects the number of parallel tasks or connections. The greater the number,
    the faster the testing will occur. However, if the number is too high, errors
    may be introduced and correct passwords will be missed.'
  id: totrans-753
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screen capture presents the verbose output of the initial brute-force
    attack:'
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising Secure Shell](img/3121OS_10_04.jpg)'
  id: totrans-755
  prefs: []
  type: TYPE_IMG
- en: When a successful login is achieved using the dictionary, `hydra` reports the
    port, the protocol, the host, and the login credentials. It then continues to
    use the dictionaries to identify the other possible accounts. In the top-most
    line of the following screenshot, Hydra has correctly identified an SSH account
    with `DigitalDefence` as the `login` and `darkstar` as the `password`; the screenshot
    also shows the other attempts made by Hydra as it attempts to identify additional
    accounts.
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
- en: '![Compromising Secure Shell](img/3121OS_10_05.jpg)'
  id: totrans-757
  prefs: []
  type: TYPE_IMG
- en: 'If you know the password configuration, you can also use `hydra` to autocreate
    the password list on the fly, using the following command:'
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-759
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'The parameters used in the previous command are described in the following
    list:'
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
- en: '`-x` directs Hydra to automatically create the passwords used in the brute-force
    attack. The passwords will be created according to the parameters that follow
    `-x`.'
  id: totrans-761
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`6:8` indicates a minimum password length of six characters and a maximum password
    length of eight characters.'
  id: totrans-762
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`aA1` will automatically create the passwords using a combination of letters
    and numbers. It will use all lowercase letters (denoted by `a`) and all uppercase
    letters (denoted by `A`), and the numerals 0 to 9 (denoted by `1`).'
  id: totrans-763
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can also add special characters to the generated list, however, you need
    to add single quotes around the `–x` option, as shown in the following command:'
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-765
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Exploiting third-party remote access applications
  id: totrans-766
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Applications that bypass system protocols to provide remote access were quite
    popular at one time. Although they are presently being replaced with online services
    such as **GoToMyPC** **or LogMeIn**, they remain quite common. Examples of such
    programs include pcAnywhere and VNC.
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
- en: It should be noted that instances of these tools may be present on the network
    due to the legitimate actions of a system administrator. However, they may also
    be present because the network has been compromised and the attacker wanted a
    means to remotely access the network.
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
- en: In the following example, we'll compromise VNC using the built-in functionality
    of the Metasploit Framework.
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
- en: Locate the remote access software on the target using `nmap`. As shown in the
    following screenshot, VNC is usually found on TCP port `5900`.![Exploiting third-party
    remote access applications](img/3121OS_10_06.jpg)
  id: totrans-770
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Activate the Metasploit Framework using the `msfconsole` command from a terminal
    window. From the `msf` prompt, configure it to compromise VNC, as shown in the
    following screenshot:![Exploiting third-party remote access applications](img/3121OS_10_07.jpg)
  id: totrans-771
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Initiate the `run` command, as shown in the following screenshot, and watch
    for a successful run:![Exploiting third-party remote access applications](img/3121OS_10_08.jpg)
  id: totrans-772
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Finally, once Metasploit has determined the credentials, validate them by logging
    in to the VNC client using `vncviewer`. From the command prompt in a terminal
    window, enter the following:'
  id: totrans-773
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-774
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'This will connect to the remote host and prompt you to enter the appropriate
    credentials. When the authentication is successful, a new window will be opened,
    giving you remote access to the target system. Verify that you are on the target
    system by issuing the `whoami` query, as shown in the following screenshot, and
    request the system''s ID or IP address:'
  id: totrans-775
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploiting third-party remote access applications](img/3121OS_10_09.jpg)'
  id: totrans-776
  prefs: []
  type: TYPE_IMG
- en: Attacking Secure Sockets Layer
  id: totrans-777
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Secure Sockets Layer** (**SSL**) and its successor, **Transport Layer Security**
    (**TLS**), are cryptographic protocols used to provide secure communications across
    the Internet. These protocols have been widely used in secure applications such
    as Internet messaging and e-mail, web browsing, and voice-over-IP.'
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
- en: These protocols are ubiquitous across the Internet, however, they originated
    in the mid-1990s and are increasingly coming under attack as they age. SSL Version
    2.0 (Version 1.0 was never publicly released) contains a significant number of
    flaws that can be exploited, such as poor key control and a weakness to man-in-the
    middle attacks. Although most users have implemented Version 3.0 of that protocol
    or newer versions of TLS, misconfigured systems may still permit the use of the
    earlier insecure version.
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Kali for SSLv2 scanning
  id: totrans-780
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before beginning the reconnaissance phase, verify that Kali has been configured
    to scan for SSL version 2 protocols. At the time of writing this book, this was
    not the case.
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
- en: 'From a terminal window, enter the following command:'
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-783
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: If this returns an `unknown option -ssl2` error (shown in the following screenshot),
    then additional configuration will be required.
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring Kali for SSLv2 scanning](img/3121OS_10_10.jpg)'
  id: totrans-785
  prefs: []
  type: TYPE_IMG
- en: 'To apply the fix, you must re-patch the OpenSSL application using the following
    steps (ensure that the path used reflects the download directory used):'
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
- en: 'Install **quilt**, a program used to manage multiple patches to an application''s
    source code, using the following command:'
  id: totrans-787
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-788
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Download the `openssl` source code, verify patches that have been applied,
    update the configuration files, and then rebuild the application. Use the following
    commands:'
  id: totrans-789
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-790
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Edit the /`openssl-1.0.1e/debian/patches/series` file, and delete the following
    line from the file:'
  id: totrans-791
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-792
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Edit the /`openssl-1.0.1e/debian/rules` file, and delete the `no-ssl2` argument.
    Then, reapply patches to `openssl`. Use the following commands:'
  id: totrans-793
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-794
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'When this is complete, rebuild the `openssl` package, and then reinstall it.
    This step can be performed with the following commands:'
  id: totrans-795
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-796
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Confirm that patches have been successfully applied by reissuing the command
    to connect using SSLv2, as shown in the following screenshot:![Configuring Kali
    for SSLv2 scanning](img/3121OS_10_11.jpg)
  id: totrans-797
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Kali scripts that rely on `openssl`, particularly `sslscan`, will need to be
    recompiled. To recompile, first download the source and then rebuild it. When
    this is complete, reinstall it using the following commands:'
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-799
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Kali's issue with SSLv2 may be fixed in a future release, therefore, verify
    this before testing the SSL connectivity.
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
- en: Reconnaissance of SSL connections
  id: totrans-801
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The reconnaissance phase of the kill chain remains important when assessing
    the SSL connectivity, especially when reviewing the following items:'
  id: totrans-802
  prefs: []
  type: TYPE_NORMAL
- en: The **x.509** certificate used to identify the parties involved in establishing
    the secure SSL connection
  id: totrans-803
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The type of encryption being used
  id: totrans-804
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The configuration information, such as whether automatic renegotiation of SSL
    sessions is permitted
  id: totrans-805
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The SSL certificate can provide information that may be used to facilitate social
    engineering.
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
- en: More frequently, a tester or attacker wants to determine whether the certificate
    is valid or not. Certificates that are invalid may result from an error in checking
    the signature, a broken certificate chain, the domain specified in the certificate
    does not match the system, or the certificate has expired, been revoked, or is
    known to have been compromised.
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
- en: If a user has previously accepted an invalid certificate, they will most likely
    accept a new invalid certificate, making the attacker's job significantly easier.
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
- en: 'The type of encryption used to secure an SSL connection is particularly important.
    Encryption ciphers are divided into the following categories:'
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
- en: '**Null ciphers**: These ciphers are used to verify the authenticity and/or
    integrity of a transmission. Because no encryption is applied, they do not provide
    any security.'
  id: totrans-810
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Weak ciphers**: This is a term used to descript all of the ciphers with a
    key length of 128 bits or less. Ciphers that use the **Diffie-Hellman algorithm**
    for a key exchange may also be considered to be weak as they are vulnerable to
    man-in-the-middle attacks. The use of MD5 hashes may be considered to be weak
    due to collision attacks. Finally, recent attacks against RC4 have also called
    its continued use into question.'
  id: totrans-811
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Strong ciphers**: These are those ciphers that exceed 128 bits. Presently,
    the accepted, most secure option is the AES encryption with a 256-bit key. If
    possible, this should be used with the Galois/Counter mode, a modern block cipher
    that supports both authentication and encryption.'
  id: totrans-812
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SSL and TLS rely on cipher suites (specific combinations of authentication,
    encryption, and message authentication code algorithms) to establish the security
    settings for each connection. There are more than 30 such suites, and the complexity
    of selecting the best option for each security requirement frequently results
    in users defaulting to less secure options. Therefore, each SSL and TLC connection
    must be thoroughly tested.
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
- en: To conduct reconnaissance against SSL connections, use the NSE modules of `nmap`
    or SSL-specific applications. The `nmap` NSE modules are described in the following
    table.
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
- en: '| Nmap NSE module | Module Function |'
  id: totrans-815
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-816
  prefs: []
  type: TYPE_TB
- en: '| `ssl-cert` | Retrieves a server''s SSL certificate. The amount of information
    returned depends on the verbosity level (none, `-v`, and `-vv`). |'
  id: totrans-817
  prefs: []
  type: TYPE_TB
- en: '| `ssl-date` | Retrieves a target host''s date and time from its TLS ServerHello
    response. |'
  id: totrans-818
  prefs: []
  type: TYPE_TB
- en: '| `ssl-enum-ciphers` | Repeatedly initiates SSL and TLS connections, each time
    trying a new cipher and recording if the host accepts or rejects it. Ciphers are
    shown with a strength rate. This is a highly intrusive scan, and may be blocked
    by the target. |'
  id: totrans-819
  prefs: []
  type: TYPE_TB
- en: '| `ssl-google-cert-catalog` | Queries Google''s Certificate Catalogue for information
    that pertains to the SSL certificate retrieved from the target. It provides information
    on how recently, and for how long, Google has been aware of the certificate. If
    a certificate is not recognized by Google, it may be suspicious/false. |'
  id: totrans-820
  prefs: []
  type: TYPE_TB
- en: '| `ssl-known-key` | Checks whether the SSL certificate used by a host has a
    fingerprint that matches a databases of compromised or faulty keys. Presently,
    it uses the LittleBlackBox database. However, any database of fingerprints can
    be used. |'
  id: totrans-821
  prefs: []
  type: TYPE_TB
- en: '| `sslv2` | Determines whether the server supports the obsolete and less secure
    SSL Version 2 and which ciphers are supported. |'
  id: totrans-822
  prefs: []
  type: TYPE_TB
- en: 'To invoke a single script from the command line, use the following command:'
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-824
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'In the following example, the `ssl-cert` script was invoked with the `-vv`
    option for maximum verbosity. The data on from this script is shown in the following
    screenshot:'
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
- en: '![Reconnaissance of SSL connections](img/3121OS_10_12.jpg)'
  id: totrans-826
  prefs: []
  type: TYPE_IMG
- en: 'During the reconnaissance, a tester can elect to launch all SLL-specific modules
    using the following command:'
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-828
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Kali''s reconnaissance and attack tools that are specific to SSL and TLS can
    be invoked from the command line or selected from the menu by navigating to **Kali
    Linux** | **Information Gathering** | **SSL Analysis**. The tools are summarized
    in the following table:'
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
- en: '| Tool | Function |'
  id: totrans-830
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-831
  prefs: []
  type: TYPE_TB
- en: '| `sslcaudit` | Automates the testing of SSL and TLS clients to determine the
    resistance against man-in-the-middle attacks. |'
  id: totrans-832
  prefs: []
  type: TYPE_TB
- en: '| `ssldump` | Conducts network protocol analysis of SSLv3 and TLS communications.
    If provided with the appropriate encryption key, it will decrypt SSL traffic and
    display it in the clear. |'
  id: totrans-833
  prefs: []
  type: TYPE_TB
- en: '| `sslscan` | Queries SSL services to determine which ciphers are supported.
    Output includes the preferred SSL ciphers and is displayed in text and XML formats.
    |'
  id: totrans-834
  prefs: []
  type: TYPE_TB
- en: '| `sslsniff` | Enables man-in-the-middle attack conditions on all SSL connections
    over a particular LAN, dynamically generating certificates for the domains that
    are being accessed on the fly. |'
  id: totrans-835
  prefs: []
  type: TYPE_TB
- en: '| `sslsplit` | Performs man-in-the-middle attacks against SSL and TLS networks.
    Connections are transparently intercepted through a network address translation
    engine and redirected to `sslsplit`, which terminates the original connection
    and initiates a new connection to the original destination while logging all the
    transmitted data. It supports plain TCP, SSL, HTTP/HTTPs, and IPv4 and IPv6. |'
  id: totrans-836
  prefs: []
  type: TYPE_TB
- en: '| `sslstrip` | Designed to transparently hijack the HTTP traffic on a network,
    watch for HTTPS links, and redirect and then map these links to spoofed HTTP or
    HTTPS links. It also supports modes to supply a favicon that looks like a lock
    icon as well as selective logging of intercepted communications. |'
  id: totrans-837
  prefs: []
  type: TYPE_TB
- en: '| `sslyze` | Analyzes the SSL configuration of a server. |'
  id: totrans-838
  prefs: []
  type: TYPE_TB
- en: '| `tlssled` | Unifies the use and output of several other SSL-specific applications,
    checks for encryption strength, certificate parameters, and renegotiation capabilities.
    |'
  id: totrans-839
  prefs: []
  type: TYPE_TB
- en: The most commonly used program is `sslscan`, which queries the SSL services
    in order to determine the certificate details and the supported ciphers. The output
    is in text and XML formats.
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
- en: When testing a particular connection, use the `--no-failed` option, as shown
    in the following screenshot, to have `sslscan` show only the accepted cipher suites.
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
- en: '![Reconnaissance of SSL connections](img/3121OS_10_13.jpg)'
  id: totrans-842
  prefs: []
  type: TYPE_IMG
- en: The `sslyze` python tool analyzes a server's SSL configuration and validates
    the certificate, tests for weak cipher suites, and identifies the configuration
    information that may support additional attacks. In the sample output, shown in
    the following screenshot, it has identified a certificate mismatch that could
    support some attack types.
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
- en: '![Reconnaissance of SSL connections](img/3121OS_10_14.jpg)'
  id: totrans-844
  prefs: []
  type: TYPE_IMG
- en: Another SSL reconnaissance tool is `tlssled`, as shown in the following screenshot.
    It is very fast, simple to operate, and the output is user friendly.
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
- en: '![Reconnaissance of SSL connections](img/3121OS_10_15.jpg)'
  id: totrans-846
  prefs: []
  type: TYPE_IMG
- en: No matter what approach you use for the SSL reconnaissance, make sure that you
    cross validate your results by running at least two different tools. In addition,
    not all SSL configured devices will be online at the same time. Therefore, on
    large networks, make sure that you scan for the SSL vulnerabilities several times
    during the course of the testing.
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-848
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A new tool that is presently emerging from development is OWASP's O-Saft ([www.owasp.org/index.php/O-Saft](http://www.owasp.org/index.php/O-Saft)),
    which provides a comprehensive overview of the SSL configuration, ciphers, and
    certificate data.
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
- en: Using sslstrip to conduct a man-in-the-middle attack
  id: totrans-850
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Despite the security offered by the SSL protection, there are some effective
    attacks against the protocol. In 2009, Moxie Marlinspike demonstrated `sslstrip`,
    a tool that transparently hijacks the HTTP traffic on a network and redirects
    the traffic to look like HTTP or HTTPS links. It removes the SSL protection and
    returns the *secured* lock icon to the victim's browser so that the interception
    cannot be readily detected.
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
- en: In short, `sslstrip` launches a man-in-the-middle attack against SSL, allowing
    the previously secured data to be intercepted.
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
- en: 'To use `sslstrip`, you must first configure the intercept system into the forwarding
    mode using the following command:'
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-854
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Next, set up the `iptables` firewall to redirect the HTTP traffic to `sslstrip`
    using the following command:'
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  id: totrans-856
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: In this example, the listening port has been set to port 5353.
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that the configuration is complete, run `sslstrip` using the following
    command:'
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  id: totrans-859
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'The execution of the previous commands is shown in the following screenshot:'
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
- en: '![Using sslstrip to conduct a man-in-the-middle attack](img/3121OS_10_16.jpg)'
  id: totrans-861
  prefs: []
  type: TYPE_IMG
- en: 'Minimize the active terminal window that is executing `sslstrip`, and open
    a new terminal window. Use `ettercap` to spoof ARP and redirect the traffic from
    the network or target system directly to the intercepting system using the following
    command:'
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  id: totrans-863
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Here, the `ettercap -T` switch selects the text-only interface, `-q` forces
    the console into the quiet mode, and the `–M` option activates the man-in-the-middle
    attack to hijack and redirect data packets. The `arp:remote` switch implements
    the ARP poisoning attack and places the attacker as a man-in-the-middle with the
    ability to view and modify packets in the transmission. The `remote` portion of
    the switch is required if you want to view the remote IP addresses and communications
    that pass through a gateway.
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
- en: '![Using sslstrip to conduct a man-in-the-middle attack](img/3121OS_10_17.jpg)'
  id: totrans-866
  prefs: []
  type: TYPE_IMG
- en: If the target system goes to access SSL-secured content, their queries are directed
    through the gateway to the intercepting system.
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
- en: From the user's perspective, they will be directed to the site and presented
    with a **There is a problem with the site's security certificate** security alert,
    prompting them with a decision to proceed. If they select **Yes**, they will be
    directed to their selected page. The lock icon in the lower-right corner of the
    browser will still indicate that SSL is engaged, indicating that their communications
    are secure.
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
- en: 'In the background, the `sslstrip` tool removes SSL, leaving raw content that
    can be viewed in the `ettercap` log, as shown in the following screenshot:'
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
- en: '![Using sslstrip to conduct a man-in-the-middle attack](img/3121OS_10_18.jpg)'
  id: totrans-870
  prefs: []
  type: TYPE_IMG
- en: This attack is only effective from the same Layer 2 network segment. However,
    it is successful on both wired and wireless networks. Although the ARP redirect
    can be applied against a network segment, such an attack will impact the network
    bandwidth, which may be detected. Therefore, it is most effective to direct this
    attack against single devices.
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-872
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To disable the PREROUTING rule, replace `–A` with `–D`. To clear the firewall
    rules, use `iptables –t nat –F` (to flush the commands) and `iptables –t nat –L`
    (to verify that the tables have been cleared).
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
- en: Denial-of-service attacks against SSL
  id: totrans-874
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When an SSL connection is established, the server must complete a series of
    computationally intense calculations to initiate the handshake and start the encryption.
    This involves a small amount of computational effort on the part of the client
    and a more significant amount by the server.
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
- en: If a client initiates an SSL connection but rejects the server's response, the
    SSL connection will not be established. However, if the SSL server is configured
    to automatically renegotiate the connection, the computational workload will result
    in a DoS.
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux has several tools that will allow you to determine whether automatic
    renegotiation is permitted, including `sslyze` and `tssled`.
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
- en: 'If the automatic renegotiation is permitted, then entering the following command
    will allow a tester to assess the resilience to the DoS attack:'
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  id: totrans-879
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
- en: '![Denial-of-service attacks against SSL](img/3121OS_10_19.jpg)'
  id: totrans-881
  prefs: []
  type: TYPE_IMG
- en: Attacking an IPSec Virtual Private Network
  id: totrans-882
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A **virtual private network** (**VPN**), uses the Internet to provide secure
    (encrypted) communications between remote locations or users within the same network.
    There are two types of VPNs: **IPSec** and **SSL**.'
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
- en: IPSec is the most commonly used protocol to establish secure connections between
    networks and connect hosts in virtual private networks.
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
- en: 'Within IPSec, there are several subsidiary protocols that perform specific
    functions, such as the following:'
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
- en: '**Authentication Header** (**AH**): This provides proof of origin for IP packets,
    protecting them against replay attacks.'
  id: totrans-886
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Encapsulation Security Protocol** (**ESP**): This protocol provides the origin
    authenticity, integrity, and confidentiality of the transmitted data.'
  id: totrans-887
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security Association**: This is the set of algorithms used to encrypt and
    authenticate the transmitted data. Because SA is associated with data transmission
    in one direction, two-way communications are secured by a pair of security associations.
    Security associations are established using **Internet Security Association and
    Key Management Protocol** (**ISAKMP**), which can be implemented by several means.
    When testing the security of VPN, one of the most vulnerable configurations relies
    on pre-shared secrets, **Internet Key Exchange** (**IKE**).'
  id: totrans-888
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To assess the security of VPN, testers follow these basic steps:'
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
- en: Scan for the presence of VPN gateways.
  id: totrans-890
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fingerprint the VPN gateway to determine the vendor and configuration details.
  id: totrans-891
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look for vulnerabilities associated with the VPN vendor or related products.
  id: totrans-892
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Capture pre-shared keys.
  id: totrans-893
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perform offline PSK cracking.
  id: totrans-894
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check for the default user accounts.
  id: totrans-895
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scanning for VPN gateways
  id: totrans-896
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To scan for the presence of VPN gateways, use `nmap` or `ike-scan`. To use
    `nmap`, issue the following command:'
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  id: totrans-898
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: In this example, `-sU` instructs `nmap` to scan the host range for possible
    targets using UDP packets (instead of TCP), `-Pn` ensures that `nmap` will not
    send a ping scan (which can alert the target about the scan and identify the tester),
    and `–p 500` identifies the specific port to be scanned.
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
- en: The `nmap` tool does not locate all VPN gateways due to how it handles the IKE
    packets; the most effective tool is one that sends a correctly formatted IKE packet
    to the target system and displays the returned message.
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
- en: 'The best tool to locate a VPN gateway is `ike-scan` (which can be found by
    navigating to **Kali Linux** | **Information Gathering** | **VPN Analysis**).
    The `ike-scan` command-line tool uses the IKE protocol to discover and fingerprint
    private networks. It also supports pre-shared key cracking in the IKE aggressive
    mode. To use `ike-scan` to locate targets, issue the following command:'
  id: totrans-901
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  id: totrans-902
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
- en: '![Scanning for VPN gateways](img/3121OS_10_20.jpg)'
  id: totrans-904
  prefs: []
  type: TYPE_IMG
- en: The `-M` switch returns each payload in a line, simplifying the output.
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
- en: 'The `ike-scan` tool tests various transforms against the target device. A transform
    contains a number of attributes: the encryption algorithm (DES and 3DES), the
    hash algorithm (MD5 and SHA1), the authentication method (the pre-shared key),
    the Diffie-Hellman group (option one is 768 bit and option two is 1024 bit) and
    the lifetime (28,800 seconds). It will identify which transforms elicited a successful
    response.'
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
- en: 'After completing `ike-scan` of each identified device, the program will return
    one of the following:'
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
- en: '`0 returned handshake; 0 returned notify`: This indicates that the target is
    not an IPSec gateway'
  id: totrans-908
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`0 returned handshake; 1 returned notify`: This indicates that although a VPN
    gateway is present, none of the transforms provided to it by `ike-scan` are acceptable'
  id: totrans-909
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`1 returned handshake; 0 returned notify`: As shown in the previous screenshot,
    this indicates that the target is configured for IPSec and will perform an IKE
    negotiation against one or more of the transforms that have been provided to it'
  id: totrans-910
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fingerprinting the VPN gateway
  id: totrans-911
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you can establish a handshake with the VPN gateway, you can conduct the
    fingerprinting of the device to return the following information:'
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
- en: The vendor and model
  id: totrans-913
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The software version
  id: totrans-914
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This information is used to identify a vendor-specific attack or fine tune a
    generic attack.
  id: totrans-915
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-916
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If VPN is hosted by a firewall, the fingerprinting will also identify the firewall
    in use.
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
- en: Because IKE does not guarantee the reliability for transmitted packets, most
    VPN gateway vendors use a proprietary protocol to deal with traffic that appears
    to be lost. The `ike-scan` tool sends IKE probe packets to the VPN gateway, but
    it does not reply to the response that it receives. The server responds as if
    the packets have been lost and implements its backoff strategy to resend the packets.
    By analyzing the time difference between the packets and the amount of retries,
    `ike-scan` can fingerprint the vendor.
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
- en: In the example shown in the following screenshot, the `–M` option causes each
    payload to be shown on a separate line, making the output easier to read. The
    `-showbackoff` option (as shown in the following screenshot) of `ike-scan` records
    the response time of all the packets that were sent and received and then records
    the delays for 60 seconds before displaying the results.
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
- en: '![Fingerprinting the VPN gateway](img/3121OS_10_21.jpg)'
  id: totrans-920
  prefs: []
  type: TYPE_IMG
- en: In the previous screenshot, the **Vendor ID** (**VID**) is an MD5 hash text
    string that is specific to the vendor and is used to recognize a proprietary communication
    or specific communications details.
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
- en: The `ike-scan` tool can also be used to determine whether the gateway supports
    the aggressive mode. If it does, it can be difficult to establish the handshake
    with the server, because it will not respond until a valid ID is supplied as part
    of the identification payload.
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
- en: Capturing pre-shared keys
  id: totrans-923
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `ike-scan` tool can be used to push a VPN gateway into the aggressive mode.
    This is significant because the aggressive mode of IPSec does not protect the
    pre-shared keys. The authentication credentials are sent as cleartext, which can
    be captured and then cracked using offline tools.
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
- en: 'The following example, issued against a Cisco VPN concentrator, uses the following
    command:'
  id: totrans-925
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  id: totrans-926
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'The execution of the previous command is shown in the following screenshot:'
  id: totrans-927
  prefs: []
  type: TYPE_NORMAL
- en: '![Capturing pre-shared keys](img/3121OS_10_22.jpg)'
  id: totrans-928
  prefs: []
  type: TYPE_IMG
- en: 'If you wish to pipe the results to a text file for additional analysis and
    offline password cracking, use the following command:'
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  id: totrans-930
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Performing offline PSK cracking
  id: totrans-931
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before cracking the captured hash of the pre-shared key using an offline tool,
    edit the output file to include only the hash value (it should contain nine colon-separated
    values). The most effective tool to crack the key is `psk-crack`, which supports
    the dictionary, brute force, and hybrid-mode cracking.
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
- en: '![Performing offline PSK cracking](img/3121OS_10_23.jpg)'
  id: totrans-933
  prefs: []
  type: TYPE_IMG
- en: Like all offline cracking exercises, success is a measure of the work and the
    effort involved (the time, computational effort, and investment of energy on power
    systems). A strong pre-shared key, such as the one shown in the previous screenshot,
    will take a long time to crack.
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
- en: Identifying default user accounts
  id: totrans-935
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Like most other hardware devices, VPN gateways usually contain default user
    accounts at the time of the installation. These may not be changed by the administrator.
    Using the information gathered during the fingerprinting process, a tester can
    conduct a web search to identify the standard user accounts.
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
- en: If the tester has access to a user's computer, the username credential is usually
    stored as plaintext in the system registry. Furthermore, if a tester has access
    to a system's memory, it is possible to obtain the password directly from the
    client system's memory dump.
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-938
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**VulnVPN** ([www.rebootuser.com](http://www.rebootuser.com)) is a virtual
    operating system and vulnerable VPN server. It allows you to apply the tools described
    in this chapter to compromise the application and gain root access without damaging
    a production system.'
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-940
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we examined how to exploit common remote access applications,
    including ones that have been encrypted to provide additional security. We exploited
    operating system communications protocols (RDP and SSH) and applications such
    as VNC. We also learned how to conduct reconnaissance of secure socket layer connections
    and virtual private networks and attack types that reduce the effectiveness of
    encryption.
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will see the result of combined attacks against specific
    communications channels with attacks against human beings. In examining the effectiveness
    of these client-side exploits, we will review several types of attacks as well
    as the **Browser Exploitation Framework** (**BeEF**) project.
  id: totrans-942
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 11. Client-side Exploitation
  id: totrans-943
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The greatest challenge for an attacker or an effective penetration tester is
    to bypass a target's security controls to achieve a compromise. This can be difficult
    when targeting systems located on a network because the attacker usually needs
    to bypass firewalls, proxies, intrusion detection systems, and other elements
    of a defense-in-depth architecture.
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
- en: A successful workaround strategy is to directly target the client-side applications.
    The user initiates the interaction with the client application, allowing attackers
    to take advantage of the existing trust that exists between the user and the application.
    The use of social engineering methodologies will enhance the success of client-side
    attacks.
  id: totrans-945
  prefs: []
  type: TYPE_NORMAL
- en: Client-side attacks target systems that typically lack the security controls
    (especially, firewalls and intrusion detection systems) found on enterprise systems.
    If these attacks are successful and persistent communication is established, the
    client device can be used to launch attacks if it is reattached to the target's
    network.
  id: totrans-946
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this chapter, you will have learned how to attack client-side
    applications using the following:'
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
- en: Hostile script attacks (VBScript and PowerShell)
  id: totrans-948
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Cross-Site Scripting Framework
  id: totrans-949
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Browser Exploitation Framework
  id: totrans-950
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attacking a system using hostile scripts
  id: totrans-951
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Client-side scripts, such as JavaScript, VBScript, and PowerShell, were developed
    to move application logic and actions from the server to the client''s computer.
    From an attacker''s or tester''s perspective, there are several advantages of
    using these scripts, as follows:'
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
- en: They're already part of the target's natural operating environment; the attacker
    does not have to transfer large compilers or other helper files such as encryption
    applications to the target system.
  id: totrans-953
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scripting languages are designed to facilitate computer operations such as configuration
    management and system administration. For example, they can be used to discover
    and alter system configurations, access the registry, execute programs, access
    network services and databases, and move binary files via HTTP or e-mail. Such
    standard scripted operations can be readily adopted for use by testers.
  id: totrans-954
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Because they are native to the operating system environment, they do not usually
    trigger antivirus alerts.
  id: totrans-955
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They are easy to use since writing a script requires a simple text editor. There
    are no barriers to using scripts in order to launch an attack.
  id: totrans-956
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Historically, JavaScript was the scripting language of choice to launch attacks
    due to its widespread availability on most target systems. Because JavaScript
    attacks have been well characterized, we''ll focus on how Kali facilitates attacks
    using newer scripting languages: VBScript and PowerShell.'
  id: totrans-957
  prefs: []
  type: TYPE_NORMAL
- en: Conducting attacks using VBScript
  id: totrans-958
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Visual Basic Scripting Edition** (**VBScript)** is an **Active Scripting
    language** developed by Microsoft. It was designed to be a lightweight, Windows-native
    language that could execute small programs. VBScript has been installed by default
    on every desktop release of Microsoft Windows since Windows 98, making it an excellent
    target for client-side attacks.'
  id: totrans-959
  prefs: []
  type: TYPE_NORMAL
- en: 'To launch an attack using VBScript, we''ll invoke Metasploit''s `msfpayload`
    from the command line:'
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  id: totrans-961
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Note that `V` designates that the output will be a VBS macro script. The output
    will appear as a text file with two specific parts, as shown in the following
    screenshot:'
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting attacks using VBScript](img/3121OS_11_01.jpg)'
  id: totrans-963
  prefs: []
  type: TYPE_IMG
- en: To use the script, open a Microsoft Office document and create a macro (the
    specific command will depend on the version of Microsoft Windows in use). Copy
    the first part of the text given in the following information box (from `Sub Auto_Open()`
    to the final `End Sub`) into the macro editor and save it with macros enabled.
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  id: totrans-965
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Next, copy the shellcode into the actual document. A partial excerpt of the
    shellcode is shown in the following screenshot:'
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting attacks using VBScript](img/3121OS_11_02.jpg)'
  id: totrans-967
  prefs: []
  type: TYPE_IMG
- en: The shellcode is recognizable as a script that may be used to perform an attack,
    so you may wish to hide or otherwise obfuscate the shellcode by minimizing the
    font size and making the color match the document's background.
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
- en: The attacker must set up a listener on Metasploit. After entering `msfconsole`
    at a command prompt, the attacker will typically enter the following commands
    and set the options for host, port, and payload; in addition, the attacker will
    configure the connection to automatically migrate to the more stable `explorer.exe`
    process, as shown in the following command lines.
  id: totrans-969
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  id: totrans-970
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: When the file is sent to the target, it will launch a pop-up security warning
    when it is opened; therefore, attackers will use social engineering to force the
    intended victim to select the **Enable** option. One of the most common methods
    to do this is to embed the macro in a Microsoft Word document or Excel spreadsheet
    that has been configured to play a game.
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
- en: Launching the document will create a reverse TCP shell back to the attacker,
    allowing the attacker to ensure a persistent connection with the target and conduct
    post-exploit activities.
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
- en: To extend this attack methodology, we can convert any executable to VBScript
    using `exe2vba.rb` located at `/usr/share/metasploit-framework/tools`.
  id: totrans-973
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, first create a backdoor using the Metasploit framework. Note that
    `X` designates that the backdoor will be created as an executable (`attack.exe`),
    as shown in the following screenshot:'
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
- en: '![Conducting attacks using VBScript](img/3121OS_11_03.jpg)'
  id: totrans-975
  prefs: []
  type: TYPE_IMG
- en: 'Next, execute `exe2.vba` to convert the executable to VBScript using the following
    command (ensure that correct pathnames are used):'
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  id: totrans-977
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: This will allow the executable to be placed in a Microsoft macro-enabled document
    and sent to a client. VBScript can be used to execute the reverse shell and to
    alter the system registry in order to ensure that the shell remains persistent.
    We have found attacks of this type to be one of the most effective ways to bypass
    network security controls and maintain a connection to a secured network.
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
- en: 'From an attacker''s perspective, there are some significant advantages of using
    exploits based on VBScript (this continues to be a powerful tool). However, its
    use is rapidly being replaced by a more powerful scripting language: PowerShell.'
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
- en: Attacking systems using Windows PowerShell
  id: totrans-980
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Windows PowerShell is a command-line shell and scripting language intended to
    be used for system administration. Based on the .NET framework, it extends the
    capabilities that were available in VBScript. The language itself is quite extensible.
    Since it is built on .NET libraries, you can incorporate code from languages such
    as C# or VB.NET. You can also take advantage of third-party libraries. In spite
    of this extensibility, it is a concise language. VBScripts that require more than
    100 lines of code can be reduced to as little as 10 lines of PowerShell!
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
- en: Perhaps, the best feature of PowerShell is that it is available by default on
    most modern Windows-based operating systems (Windows 7 and higher versions) and
    cannot be removed.
  id: totrans-982
  prefs: []
  type: TYPE_NORMAL
- en: We will use PowerShell scripts included with the Metasploit Framework to support
    the attack phase of the kill chain.
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
- en: 'To launch the attack, we will use the PowerShell Payload Web Delivery module
    of the Metasploit Framework. The purpose of this module is to rapidly establish
    a session on the target system. The attack does not write to the disk, so it is
    less likely to trigger detection by the client-side antivirus. Launching of the
    attack and the available module options are shown in the following screenshot:'
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
- en: '![Attacking systems using Windows PowerShell](img/3121OS_11_04.jpg)'
  id: totrans-985
  prefs: []
  type: TYPE_IMG
- en: 'The Metasploit Framework will generate a one-line macro that can be embedded
    in a document and used to launch the attack, as shown in the following sample
    code:'
  id: totrans-986
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  id: totrans-987
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Before the attack is completed, the attacker must prepare a listener for the
    incoming shell (`URIPATH` was generated randomly by Metasploit; make sure that
    the correct `URIPATH` is set for the listener). The commands to create a listener
    are as follows:'
  id: totrans-988
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  id: totrans-989
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: A successful attack will create an interactive shell on the attacker's system.
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-991
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'It is possible to make `psh_web_delivery` persistent using the `schtask` command.
    The following command will create a scheduled task, `MSOfficeMngmt`, which will
    implement `powershell.exe` (by default, located in the `Windows\system32` directory)
    at logon:'
  id: totrans-992
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  id: totrans-993
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Additional PowerShell scripts designed to support post-exploit activities can
    be found in Kali's PowerSploit directory. In spite of the flexibility of PowerShell,
    it has some disadvantages.
  id: totrans-994
  prefs: []
  type: TYPE_NORMAL
- en: For example, if the document containing the macro is closed by the end user
    before a persistence mechanism can be applied, the connection is lost.
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
- en: More importantly, scripts such as VBScript and PowerShell are only useful against
    Microsoft environments. To extend the reach of client-side attacks, we need to
    look for a common client-side vulnerability that can be exploited regardless of
    its operating system environment. One particular example of such a vulnerability
    is cross-site scripting.
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
- en: The Cross-Site Scripting Framework
  id: totrans-997
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Cross-Site Scripting** (**XSS**) vulnerabilities are reportedly the most
    common exploitable vulnerabilities found in websites. It is estimated that they
    are present in up to 80 percent of all applications.'
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
- en: XSS vulnerabilities occur when an application, usually web-based, violates the
    concept of trust known as the **same-origin policy** and displays content that
    has been provided by a user that has not been sanitized to remove malicious statements.
  id: totrans-999
  prefs: []
  type: TYPE_NORMAL
- en: 'There are at least two primary types of XSS vulnerabilities: **non-persistent**
    and **persistent**.'
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
- en: The most common type is non-persistent or reflected vulnerabilities. These occur
    when the data provided by the client is used immediately by the server to display
    a response. An attack of this vulnerability can occur via e-mail or a third-party
    website providing a URL that appears to reference a trusted website but contains
    the XSS attack code. If the trusted site is vulnerable to this particular attack,
    executing the link can cause the victim's browser to execute a hostile script
    that may lead to a compromise.
  id: totrans-1001
  prefs: []
  type: TYPE_NORMAL
- en: Persistent (stored) XSS vulnerabilities occur when the data provided by the
    attacker is saved by the server and then is permanently displayed on trusted web
    pages to other users during the course of their browsing. This commonly occurs
    with online message boards and blogs that allow users to post HTML-formatted messages.
    An attacker can place a hostile script on the web page that is not visible to
    incoming users, but which compromises visitors who access the affected pages.
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
- en: Several tools exist on Kali Linux to find XSS vulnerabilities, including **xsser**
    and various vulnerability scanners. However, there are some tools that allow a
    tester to fully exploit an XSS vulnerability, demonstrating the gravity of the
    weakness.
  id: totrans-1003
  prefs: []
  type: TYPE_NORMAL
- en: 'The **Cross-Site Scripting Framework** (**XSSF**) is a multiplatform security
    tool that exploits XSS vulnerabilities to create a communication channel with
    the target, supporting attack modules that include:'
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
- en: Conducting reconnaissance of a target browser (fingerprinting and previously
    visited URLs), the target host (detecting virtual machines, getting system info,
    registry keys, and wireless keys), and the internal network.
  id: totrans-1005
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sending an alert message pop up to the target. This simple "attack" can be used
    to demonstrate the XSS vulnerability, however, more complex alerts can mimic logon
    prompts and capture user authentication credentials.
  id: totrans-1006
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stealing cookies that enable an attacker to impersonate the target.
  id: totrans-1007
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Redirecting the target to view a different web page. A hostile web page may
    automatically download an exploit onto the target system.
  id: totrans-1008
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading PDF files or Java applets onto the target, or stealing data such as
    SD card contents from Android mobile devices.
  id: totrans-1009
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching Metasploit attacks, including `browser_autopwn`, as well as denial-of-service
    attacks.
  id: totrans-1010
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching social engineering attacks, including autocomplete theft, clickjacking,
    Clippy, fake flash updates, phishing, and tabnabbing.
  id: totrans-1011
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, the **XSSF Tunnel** function allows an attacker to impersonate
    the victim and browse websites using their credentials and session. This can be
    an effective method to access an internal corporate intranet.
  id: totrans-1012
  prefs: []
  type: TYPE_NORMAL
- en: The API is well documented, allowing new attack modules to be easily created.
    Because it is written in Ruby, the API integrates with the Metasploit Framework,
    allowing attackers to launch additional attacks.
  id: totrans-1013
  prefs: []
  type: TYPE_NORMAL
- en: 'To use XSSF, it must be installed and configured to support an attack using
    the following steps:'
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
- en: 'XSSF does not come with Kali. First, the user must open a terminal window and
    set the appropriate directory using the following command:'
  id: totrans-1015
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE82]'
  id: totrans-1016
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Install XSSF using the following command:'
  id: totrans-1017
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE83]'
  id: totrans-1018
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Make sure that you use `svn export` instead of `svn checkout`, as the latter
    command will break the existing MSF `svn` files. An excerpt of a successful installation
    is shown in the following screenshot:'
  id: totrans-1019
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cross-Site Scripting Framework](img/3121OS_11_05.jpg)'
  id: totrans-1020
  prefs: []
  type: TYPE_IMG
- en: From the Metasploit Framework console, load the XSSF plugin using the `load
    xssf` command, as shown in the following screenshot:![The Cross-Site Scripting
    Framework](img/3121OS_11_06.jpg)
  id: totrans-1021
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Identify the XSSF commands, as shown in the following screenshot, by typing
    `helpxssf`:![The Cross-Site Scripting Framework](img/3121OS_11_07.jpg)
  id: totrans-1022
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'From the console, access the URLs associated with the plugin using the following
    command:'
  id: totrans-1023
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE84]'
  id: totrans-1024
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'The execution of the previous command is given in the following screenshot,
    as you can see, several URLs are identified:'
  id: totrans-1025
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cross-Site Scripting Framework](img/3121OS_11_08.jpg)'
  id: totrans-1026
  prefs: []
  type: TYPE_IMG
- en: 'The most important URL is the XSSF server, which is located on the localhost.
    Several other URLs are identified, including the following:'
  id: totrans-1027
  prefs: []
  type: TYPE_NORMAL
- en: '`Generic XSS injection`: This is the target that you are attempting to get
    the victim to click on or execute.'
  id: totrans-1028
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`XSSF test page`: XSSF provides access to a local test page that is susceptible
    to XSS attacks. This can be used to validate attacks and results before launching
    the attacks during actual testing.'
  id: totrans-1029
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`XSSF Tunnel Proxy`: XSSF allows an attacker to surf using the identity of
    a compromised host while retaining their security identity.'
  id: totrans-1030
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`XSSF logs page`: This logs attacks and the information received. Unfortunately,
    the log page provides a very dark background, and it is difficult to see the returned
    information. During testing, we usually access log information via the command
    line, which is cleaner and can be scripted.'
  id: totrans-1031
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`XSSF statistics page`.'
  id: totrans-1032
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`XSSF help page`.'
  id: totrans-1033
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We'll use the vulnerable web application, **Mutillidae**, to demonstrate that
    the XSSF. Mutillidae is part of the Metasploitable project, which can be downloaded
    from [http://sourceforge.net/projects/metasploitable/files/Metasploitable2/](http://sourceforge.net/projects/metasploitable/files/Metasploitable2/).
    Refer to [Appendix](apa.html "Appendix A. Installing Kali Linux"), *Installing
    Kali Linux* for notes on installing this vulnerable target.
  id: totrans-1034
  prefs: []
  type: TYPE_NORMAL
- en: Once Mutillidae is opened, navigate to the blog page; this page is known to
    be vulnerable to XSS (you can use a vulnerability scanning tool against Mutillidae
    to identify other potential insertion points).
  id: totrans-1035
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To launch the attack against the target client, do not enter a regular posting
    into the blog. Instead, enter script elements that contain the the target URL
    and port:'
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  id: totrans-1037
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: The following screenshot shows the placement of the attack code on the target
    website's blog page.
  id: totrans-1038
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cross-Site Scripting Framework](img/3121OS_11_09.jpg)'
  id: totrans-1039
  prefs: []
  type: TYPE_IMG
- en: 'When this is entered and the victim clicks on **Save Blog Entry**, their system
    will be compromised. From the Metasploit Framework console, the tester can get
    information about each victim using the `xssf_victims` and `xssf_information`
    commands. On executing the `xssf_victims` command, information about each victim
    is displayed, as shown in the following screenshot:'
  id: totrans-1040
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cross-Site Scripting Framework](img/3121OS_11_10.jpg)'
  id: totrans-1041
  prefs: []
  type: TYPE_IMG
- en: 'The most common XSS attack at this point is to send a brief and relatively
    innocuous message or *alert* to the client. Using the Metasploit Framework, this
    can be achieved relatively simply by entering the following commands:'
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  id: totrans-1043
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'After reviewing the options, an alert can be rapidly sent from the command
    line, as shown in the following screenshot:'
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cross-Site Scripting Framework](img/3121OS_11_11.jpg)'
  id: totrans-1045
  prefs: []
  type: TYPE_IMG
- en: 'The victim will see a message, as shown in the following screenshot:'
  id: totrans-1046
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cross-Site Scripting Framework](img/3121OS_11_12.jpg)'
  id: totrans-1047
  prefs: []
  type: TYPE_IMG
- en: Generally, most testers and their clients validate cross-site scripting using
    such simple alert messages. These prove that a "vulnerability" exists.
  id: totrans-1048
  prefs: []
  type: TYPE_NORMAL
- en: However, simple alerts lack emotional impact. Frequently, they identify a real
    vulnerability, but the client does not respond and mediate the vulnerability because
    alert messages are not perceived to be a significant threat. Fortunately, XSSF
    allows testers to "up the ante" and demonstrate more sophisticated and dangerous
    attacks.
  id: totrans-1049
  prefs: []
  type: TYPE_NORMAL
- en: 'XSSF can be used to steal cookies by using the following commands:'
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  id: totrans-1051
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'The execution of the `run` command is shown in the following screenshot:'
  id: totrans-1052
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cross-Site Scripting Framework](img/3121OS_11_13.jpg)'
  id: totrans-1053
  prefs: []
  type: TYPE_IMG
- en: 'When the attack has been completed, the cookie can be found by reviewing the
    results on the XSSF logs page or directly from the command line using the command,
    as shown in the following screenshot:'
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cross-Site Scripting Framework](img/3121OS_11_14.jpg)'
  id: totrans-1055
  prefs: []
  type: TYPE_IMG
- en: 'Some other useful commands in `auxiliary/xssf/public/misc` include:'
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
- en: '`check_connected`: This command checks whether the victim has opened any social
    networking sites (Gmail, Facebook, or Twitter)'
  id: totrans-1057
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`csrf`: It launches a cross-site request forgery attack'
  id: totrans-1058
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`keylogger`: This command invokes a keylogger on the client side'
  id: totrans-1059
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`load_applet` and `load_pdf`: These commands load hostile Java applets and
    PDF files on the client side and invoke them to launch preconfigured malicious
    software'
  id: totrans-1060
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`redirect`: It redirects the client to a specified web page'
  id: totrans-1061
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`webcam_capture`: This command captures images from the client''s webcam'
  id: totrans-1062
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is an incomplete list, but it shows the extent to which the tool has been
    developed. Also, there are some modules for network scanning and launching a denial-of-service
    attack, as well as some modules to ensure persistence after an attack has been
    completed.
  id: totrans-1063
  prefs: []
  type: TYPE_NORMAL
- en: 'XSSF can also be used with ettercap to compromise an internal network. For
    example, ettercap can be used to replace the `</head>` data with a link to the
    malicious page by placing the following code in a filter named `attack`:'
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  id: totrans-1065
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'The filter script must then be converted into a binary file using the following
    command:'
  id: totrans-1066
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  id: totrans-1067
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'To launch this attack against all of the users on a network, execute `ettercap`
    with the following command:'
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  id: totrans-1069
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'XSSF, especially when integrated into the Metasploit Framework, is a very powerful
    tool for exploiting XSS vulnerabilities. However, a new star has recently emerged
    that can help you to achieve similar attacks: the Browser Exploitation Framework.'
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
- en: The Brower Exploitation Framework – BeEF
  id: totrans-1071
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'BeEF is an exploitation tool that focuses on a specific client-side application:
    the web browser.'
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
- en: BeEF allows an attacker to inject a JavaScript code into a vulnerable HTML code
    using an attack such as XSS or SQL injection. This exploit code is known as **hook**.
    A compromise is achieved when the hook is executed by the browser. The browser
    (**zombie**) connects back to the BeEF application, which serves JavaScript commands
    or modules to the browser.
  id: totrans-1073
  prefs: []
  type: TYPE_NORMAL
- en: 'BeEF''s modules perform tasks such as the following:'
  id: totrans-1074
  prefs: []
  type: TYPE_NORMAL
- en: Fingerprinting and the reconnaissance of compromised browsers. It can also be
    used as a platform to assess the presence of exploits and their behavior under
    different browsers.
  id: totrans-1075
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  id: totrans-1076
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that BeEF allows us to hook multiple browsers on the same client, as well
    as multiple clients across a domain, and then manage them during the exploitation
    and post-exploitation phases.
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
- en: Fingerprinting the target host, including the presence of virtual machines.
  id: totrans-1078
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detecting software on the client (Internet Explorer only) and obtaining a list
    of the directories in the `Program Files` and `Program Files (x86)` directories.
    This may identify other applications that can be exploited to consolidate our
    hold on the client.
  id: totrans-1079
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taking photos using the compromised system's webcam; these photos have a significant
    impact in reports.
  id: totrans-1080
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting searches of the victim's data files and stealing data that may contain
    authentication credentials (clipboard content and browser cookies) or other useful
    information.
  id: totrans-1081
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing browser keystroke logging.
  id: totrans-1082
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting network reconnaissance using ping sweeps and fingerprint network
    appliances and scanning for open ports.
  id: totrans-1083
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching attacks from the Metasploit Framework.
  id: totrans-1084
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the tunneling proxy extension to attack the internal network using the
    security authority of the compromised web browser.
  id: totrans-1085
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Because BeEF is written in Ruby, it supports multiple operating systems (Linux,
    Windows, and OS X). More importantly, it is easy to customize new modules in BeEF
    and extend its functionality.
  id: totrans-1086
  prefs: []
  type: TYPE_NORMAL
- en: Installing and configuring the Browser Exploitation Framework
  id: totrans-1087
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'BeEF is not a part of the Kali distribution, however, it has been packaged
    with required dependencies to support automated installation in Kali. To install
    BeEF, use the following command:'
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  id: totrans-1089
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'BeEF will be installed in the /`usr/share/beef-xss` directory. By default,
    it is not integrated with the Metasploit Framework. To integrate BeEF, you will
    need to perform the following steps:'
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
- en: 'Edit the main configuration file located at `/usr/share/beef-xss/config.yaml`
    to read:'
  id: totrans-1091
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE92]'
  id: totrans-1092
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Edit the file located at `/usr/share/beef-xss/extensions/metasploit/config.yml`.
    You need to edit the lines `host`, `callback_host`, and `os 'custom', path` to
    include your IP address and the location for the Metasploit Framework A correctly
    edited `config.yml` file is shown in the following screenshot:![Installing and
    configuring the Browser Exploitation Framework](img/3121OS_11_15.jpg)
  id: totrans-1093
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start `msfconsole`, and load the `msgrpc` module, as shown in the following
    screenshot. Make sure that you include the password as well:![Installing and configuring
    the Browser Exploitation Framework](img/3121OS_11_16.jpg)
  id: totrans-1094
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Start BeEF using the following commands:'
  id: totrans-1095
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE93]'
  id: totrans-1096
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Confirm startup by reviewing the messages generated during program launch. They
    should indicate that **Successful connection with Metasploit** occurred, which
    will be accompanied with an indication that Metasploit exploits have been loaded.
    A successful program launch is shown in the following screenshot:![Installing
    and configuring the Browser Exploitation Framework](img/3121OS_11_17.jpg)
  id: totrans-1097
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-1098
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you restart BeEF, use the `-x` switch to reset the database.
  id: totrans-1099
  prefs: []
  type: TYPE_NORMAL
- en: In this example, the BeEF server is running on `192.168.222.129` and the "hook
    URL" (the one that we want the target to activate) is `192.168.222.129:80/hook.js`.
  id: totrans-1100
  prefs: []
  type: TYPE_NORMAL
- en: Most of the administration and management of BeEF is done via the web interface.
    To access the control panel, go to `http://<IP Address>:3000/ui/panel`.
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
- en: The default login credentials are `Username:beef` and `Password:beef`, as shown
    in the following screenshot, unless these were changed in `config.yaml`.
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing and configuring the Browser Exploitation Framework](img/3121OS_11_18.jpg)'
  id: totrans-1103
  prefs: []
  type: TYPE_IMG
- en: A walkthrough of the BeEF browser
  id: totrans-1104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When the BeEF control panel is launched, it will present the **Getting Started**
    screen, featuring links to the online site as well as the demonstration pages
    that can be used to validate the various attacks. The BeEF control panel is shown
    in the following screenshot:'
  id: totrans-1105
  prefs: []
  type: TYPE_NORMAL
- en: '![A walkthrough of the BeEF browser](img/3121OS_11_19.jpg)'
  id: totrans-1106
  prefs: []
  type: TYPE_IMG
- en: 'If you have hooked a victim, the interface will be divided into two panels:'
  id: totrans-1107
  prefs: []
  type: TYPE_NORMAL
- en: On the left-hand side of the panel, **Hooked Browsers**, the tester can see
    every connected browser listed with information about its host operating system,
    browser type, IP address, and installed plugins. Because BeEF sets a cookie to
    identify victims, it can refer back to this information and maintain a consistent
    list of victims.
  id: totrans-1108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The right-hand side of the panel is where all of the actions are initiated and
    the results are obtained. In the **Commands** tab, we see a categorized repository
    of the different attack vectors that can be used against hooked browsers. This
    view will differ based on the type and version of each browser.
  id: totrans-1109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'BeEF uses a color-coding scheme to characterize the commands on the basis of
    their usability against a particular target. The colors used are as follows:'
  id: totrans-1110
  prefs: []
  type: TYPE_NORMAL
- en: '**Green**: This indicates that the command module works against the target
    and should be detected by the victim'
  id: totrans-1111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Orange**: This indicates that the command module works against the target,
    but it may be detected by the victim'
  id: totrans-1112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Gray**: This indicates that the command module is not yet verified against
    the target'
  id: totrans-1113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Red**: This indicates that the command module does not work against the target.
    It can be used, but its success is not guaranteed, and its use may be detected
    by the target'
  id: totrans-1114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Take these indicators with a grain of salt since variations in the client environment
    can make some commands ineffective, or may cause other unintended results.
  id: totrans-1115
  prefs: []
  type: TYPE_NORMAL
- en: 'To start an attack or hook a victim, we need to get the user to click on the
    hook URL, which takes the form of `<IP ADDRESS>:<PORT>/hook.js`. This can be achieved
    using a variety of means, including:'
  id: totrans-1116
  prefs: []
  type: TYPE_NORMAL
- en: The original XSS vulnerabilities
  id: totrans-1117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Man-in-the-middle attacks (especially, those using **BeEF Shank**, **an ARP**
    spoofing tool that specifically targets intranet sites on internal networks)
  id: totrans-1118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social engineering attacks, including the BeEF web cloner and mass e-mailer,
    custom hook point with iFrame impersonation, or the QR code generator
  id: totrans-1119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once the browser has been hooked, it is referred to as a zombie. Select the
    IP address of the zombie from the **Hooked Browsers** panel on the left-hand side
    of the command interface and then refer to the available commands.
  id: totrans-1120
  prefs: []
  type: TYPE_NORMAL
- en: In this example shown in the following screenshot, there are several different
    attacks and management options available for the hooked browser. One of the easiest
    attack options to use is the social engineering Clippy attack.
  id: totrans-1121
  prefs: []
  type: TYPE_NORMAL
- en: When **Clippy** is selected from the **Module Tree** under **Commands**, a specific
    **Clippy** panel is launched on the far right, as shown in the following screenshot.
    It allows you to adjust the image, the text delivered, and the executable that
    will be launched locally if the victim clicks on the supplied link. By default,
    the custom text informs the victim that their browser is out of date, offers to
    update it for them, downloads an executable (non-malicious), and then thanks the
    user for performing the upgrade. All of these options can be changed by the tester.
  id: totrans-1122
  prefs: []
  type: TYPE_NORMAL
- en: '![A walkthrough of the BeEF browser](img/3121OS_11_20.jpg)'
  id: totrans-1123
  prefs: []
  type: TYPE_IMG
- en: 'When Clippy is executed, the victim will see a message as shown in the following
    screenshot on their browser:'
  id: totrans-1124
  prefs: []
  type: TYPE_NORMAL
- en: '![A walkthrough of the BeEF browser](img/3121OS_11_21.jpg)'
  id: totrans-1125
  prefs: []
  type: TYPE_IMG
- en: This can be a very effective social engineering attack. When testing with clients,
    we have had success rates (the client downloaded a non-malicious indicator file)
    of approximately 70 percent.
  id: totrans-1126
  prefs: []
  type: TYPE_NORMAL
- en: The prompt module works in a similar manner. Instead of sending a simple alert
    to the victim's browser, it sends a notification request prompting the victim
    to enter data. In many cases, if the victim is prompted for undefined data, they
    will automatically re-enter their password. The prompt can ask for specific data,
    or it can be used to direct the victim to a website to download a system patch
    that contains malware. The following screenshot shows one of the simplest, and
    most effective attacks for obtaining a user's password.
  id: totrans-1127
  prefs: []
  type: TYPE_NORMAL
- en: '![A walkthrough of the BeEF browser](img/3121OS_11_22.jpg)'
  id: totrans-1128
  prefs: []
  type: TYPE_IMG
- en: 'One of the more interesting attacks is Pretty Theft, which asks users for their
    username and password for popular sites. For example, the Pretty Theft option
    for Facebook can be configured by the tester, as shown in the following screenshot:'
  id: totrans-1129
  prefs: []
  type: TYPE_NORMAL
- en: '![A walkthrough of the BeEF browser](img/3121OS_11_23.jpg)'
  id: totrans-1130
  prefs: []
  type: TYPE_IMG
- en: 'When the attack is executed, the victim is presented with a pop up that appears
    to be legitimate, as shown in the following screenshot:'
  id: totrans-1131
  prefs: []
  type: TYPE_NORMAL
- en: '![A walkthrough of the BeEF browser](img/3121OS_11_24.jpg)'
  id: totrans-1132
  prefs: []
  type: TYPE_IMG
- en: 'In BeEF, the tester reviews the history log for the attack and can derive the
    username and password from the **data** field in the **Command results** column,
    as shown in the following screenshot:'
  id: totrans-1133
  prefs: []
  type: TYPE_NORMAL
- en: '![A walkthrough of the BeEF browser](img/3121OS_11_25.jpg)'
  id: totrans-1134
  prefs: []
  type: TYPE_IMG
- en: Integrating BeEF and Metasploit attacks
  id: totrans-1135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Both BeEF and the Metasploit Framework were developed using Ruby and can operate
    together to exploit a target. Because it uses client-side and server-side fingerprinting
    to characterize a target, `browser_autopwn` is one of the most successful attacks.
  id: totrans-1136
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the target has been hooked, start the Metasploit console and configure
    the attack using the following commands:'
  id: totrans-1137
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  id: totrans-1138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Wait until all of the relevant exploits have finished loading. In the example
    shown in the following screenshot, 18 exploits are loaded. Note the target URL
    for the attack as well. In this example, the target URL is `http://192.168.43.130:8080/ICprp4Tnf4Z`:'
  id: totrans-1139
  prefs: []
  type: TYPE_NORMAL
- en: '![Integrating BeEF and Metasploit attacks](img/3121OS_11_26.jpg)'
  id: totrans-1140
  prefs: []
  type: TYPE_IMG
- en: There are several methods to direct a browser to click on a targeted URL, however,
    if we have already hooked the target browser, we can use BeEF's `redirect` function.
    In the BeEF control panel, go to **Browser** | **Hooked Domain** | **Redirect
    Browser**. When prompted, use this module to point to the target URL and then
    execute the attack.
  id: totrans-1141
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Metasploit console, you will see the selected attacks being successively
    launched against the target. A successful attack will open a Meterpreter session,
    as shown in the following screenshot:'
  id: totrans-1142
  prefs: []
  type: TYPE_NORMAL
- en: '![Integrating BeEF and Metasploit attacks](img/3121OS_11_27.jpg)'
  id: totrans-1143
  prefs: []
  type: TYPE_IMG
- en: To see the list of open sessions with the compromised target, type `sessions
    -l`. To interactively connect with a specific session, for example, session 1,
    type `sessions -i 1`.
  id: totrans-1144
  prefs: []
  type: TYPE_NORMAL
- en: Using BeEF as a tunneling proxy
  id: totrans-1145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Tunneling is the process of encapsulating a payload protocol inside a delivery
    protocol, such as IP. Using tunneling, you can transmit incompatible protocols
    across a network, or you can bypass firewalls that are configured to block a particular
    protocol. BeEF can be configured to act as a tunneling proxy that mimics a reverse
    HTTP proxy: the browser session becomes the tunnel, and the hooked browser is
    the exit point. This configuration is extremely useful when an internal network
    has been compromised because the tunneling proxy can be used to:'
  id: totrans-1146
  prefs: []
  type: TYPE_NORMAL
- en: Browse authenticated sites in the security context (client-side SSL certificates,
    authentication cookies, NTLM hashes, and so on) of the victim's browser
  id: totrans-1147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spider the hooked domain using the security context of the victim's browser
  id: totrans-1148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facilitate the use of tools such as SQL injection
  id: totrans-1149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To use the tunneling proxy, select the hooked browser that you wish to target
    and right-click on its IP address. In the pop-up box, as shown in the following
    screenshot, select the **Use as Proxy** option:'
  id: totrans-1150
  prefs: []
  type: TYPE_NORMAL
- en: '![Using BeEF as a tunneling proxy](img/3121OS_11_28.jpg)'
  id: totrans-1151
  prefs: []
  type: TYPE_IMG
- en: Configure a browser to use the BeEF tunneling proxy as an HTTP proxy. By default,
    the address of the proxy is `127.0.0.1` and port is 6789.
  id: totrans-1152
  prefs: []
  type: TYPE_NORMAL
- en: If you visit a targeted website using the browser configured as the HTTP proxy,
    all raw request/response pairs will be stored in the BeEF database, which can
    be analyzed by navigating to **Rider** | **History** (an excerpt of the log is
    shown in the following screenshot).
  id: totrans-1153
  prefs: []
  type: TYPE_NORMAL
- en: '![Using BeEF as a tunneling proxy](img/3121OS_11_29.jpg)'
  id: totrans-1154
  prefs: []
  type: TYPE_IMG
- en: 'Once an attack has been completed, there are some mechanisms to ensure that
    a persistent connection is retained, including:'
  id: totrans-1155
  prefs: []
  type: TYPE_NORMAL
- en: '**Confirm close**: A module that presents the victim with a **Confirm Navigation
    - are you sure you want to leave this page** pop up when they try to close a tab.
    If the user elects to **Leave this Page**, it will not be effective, and the **Confirm
    Navigation** pop up will continue to present itself.'
  id: totrans-1156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pop-under module**: This is configured to autorun in `config.yaml`. This
    module attempts to open a small pop-under window to keep the browser hooked if
    the victim closes the main browser tab. This may be blocked by pop-up blockers.'
  id: totrans-1157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**iFrame keylogger**: Rewrites all of the links on a web page to an iFrame
    overlay that is 100 percent of the height and width of the original. For maximum
    effectiveness, it should be attached to a JavaScript keylogger. Ideally, you would
    load the login page of the hooked domain.'
  id: totrans-1158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Man-in-the-browser**: This module ensures that whenever the victim clicks
    on any link, the next page will be hooked as well. The only way to avoid this
    behavior is to type a new address in the address bar.'
  id: totrans-1159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, although BeEF provides an excellent series of modules to perform the
    reconnaissance, as well as the exploit and post-exploit phases of the kill chain,
    the known default activities of BeEF `(/hook.js` and server headers) are being
    used to detect attacks, reducing its effectiveness. Testers will have to obfuscate
    their attacks using techniques such as Base64 encoding, whitespace encoding, randomizing
    variables, and removing comments to ensure full effectiveness in the future.
  id: totrans-1160
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-1161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we examined the attacks against systems that are generally
    isolated from protected networks. These client-side attacks focus on the vulnerabilities
    in specific applications. We reviewed hostile scripts, especially VBScript and
    PowerShell, which are particularly useful in testing and compromising Windows-based
    networks. We then examined the Cross-Site Scripting Framework, which can compromise
    XSS vulnerabilities, as well as the BeEF tool, which targets the vulnerabilities
    in a web browser. Both XSSF and BeEF integrate with reconnaissance, exploitation,
    and post-exploitation tools on Kali to provide comprehensive attack platforms.
  id: totrans-1162
  prefs: []
  type: TYPE_NORMAL
- en: This chapter concludes *Mastering Kali Linux for Advanced Penetration Testing*.
    We hope that this book has helped you to understand how attackers use tools such
    as Kali to compromise networks, and how you can use the same tools to understand
    your network's vulnerabilities and mediate them before your own network is compromised.
  id: totrans-1163
  prefs: []
  type: TYPE_NORMAL
- en: Appendix A. Installing Kali Linux
  id: totrans-1164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kali Linux is a Linux-based operating system that acts as a platform to support
    several hundred different applications used to audit the security of a network.
    Its complexity is matched by the diversity of methods to install and use it during
    testing. This chapter will cover some of the considerations to be made when installing
    Kali, and will focus on how to get a secure virtual machine up and running as
    quickly as possible. It will also examine how to set up and maintain an inexpensive
    site to test the material covered in this book.
  id: totrans-1165
  prefs: []
  type: TYPE_NORMAL
- en: Downloading Kali Linux
  id: totrans-1166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are multiple options for downloading and installing Kali Linux. At the
    time of this publication, the most recent Version is release 1.06; however, Version
    1.07 is due for imminent release. The current version is available from the official
    website ([www.kali.org/downloads/](http://www.kali.org/downloads/)) in 32- and
    64-bit compilations.
  id: totrans-1167
  prefs: []
  type: TYPE_NORMAL
- en: '**Offensive Security** has made the preconfigured version of **Advanced RISC
    Machines** (**ARM**), processors (for example, Galaxy Note 10.1, Raspberry Pi,
    and Samsung Chromebooks) available for download; both ARMEL and ARMHL platforms
    are supported. In addition, premade VMware images are also available online at
    [http://www.offensive-security.com/kali-llnux-vmware-arm-image-download/](http://www.offensive-security.com/kali-llnux-vmware-arm-image-download/).'
  id: totrans-1168
  prefs: []
  type: TYPE_NORMAL
- en: After you have downloaded the appropriate image, ensure that the SHA1 checksum
    file was generated by Kali (it will be signed using the official Kali encryption
    key, which is available online to verify the authenticity of the download), and
    inspect the SHA1 checksum to verify the integrity of the image. Verification tools
    are built into Linux and OSX operating systems; however, you will have to use
    a third-party tool such as **hashtab** ([http://www.implbits.com/HashTab/HashTabWindows.aspx](http://www.implbits.com/HashTab/HashTabWindows.aspx))
    for Windows operating systems.
  id: totrans-1169
  prefs: []
  type: TYPE_NORMAL
- en: If you wish to build a custom version of Kali, especially one that features
    an alternate desktop or toolset, you can use the live-build scripts available
    at [http://docs.kali.org/live-build/generate-updated-kali-iso](http://docs.kali.org/live-build/generate-updated-kali-iso).
  id: totrans-1170
  prefs: []
  type: TYPE_NORMAL
- en: Basic Installation of Kali Linux
  id: totrans-1171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once you have obtained a suitable distribution of Kali Linux, it must be installed
    for use. The following installation options are available:'
  id: totrans-1172
  prefs: []
  type: TYPE_NORMAL
- en: Install to an i386, AMD64, or ARM system hard drive. Kali Linux will be the
    sole host operating system when the device boots up.
  id: totrans-1173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dual-boot a system. Usually, this option is selected when using an MS Windows
    operating system. During boot-up, the user has the option to boot the system as
    Kali Linux or as the Windows operating system. This offers more flexibility than
    installing Kali directly to the hard drive; however, it does make switching back
    and forth between the two systems difficult.
  id: totrans-1174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Install directly to a DVD drive or a USB device. This is especially useful if
    the host system can be configured to boot from the USB device; however, additional
    configuration changes are required if the USB device needs to be *persistent*
    (retains all changes to the based operating system, applications, and data that
    are made during the testing process).
  id: totrans-1175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Install as a virtual machine using products such as VMware or VirtualBox. We
    have found this to be the most flexible option to support penetration testing.
  id: totrans-1176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali supports two types of network installs—the **mini ISO** install and the
    **network PXE** install. The mini ISO installs a truncated Kali distribution on
    a system and then relies on a fast network connection to install the remainder
    of the applications needed for an effective final product. The network PXE install
    supports terminals (no CD-ROM and no USB ports) during the booting process, obtaining
    the IP address information and installing Kali.
  id: totrans-1177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali can now be used from the cloud—a 64-bit minimal image of Kali is available
    from the Amazon EC2 marketplace ([https://aws.amazon.com/marketplace/pp/B00HW50E0M](https://aws.amazon.com/marketplace/pp/B00HW50E0M)).
    The Kali image is free, and users are only charged for regular AWS usage.
  id: totrans-1178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-1179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Due to Amazon's regulations, this version of Kali does not use the root account
    by default. Once you have obtained your SSH key from Amazon, you have to connect
    to the Kali instance as a user, and then sudo to root. You may have to download
    additional tools to support testing. Finally, you have to inform Amazon that it
    is being used for legitimate security testing and not as an attack tool.
  id: totrans-1180
  prefs: []
  type: TYPE_NORMAL
- en: Installing Kali Linux to a virtual machine
  id: totrans-1181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this book, Kali was configured as a **virtual machine** (**VM**). A VM has
    the following advantages when used for penetration testing:'
  id: totrans-1182
  prefs: []
  type: TYPE_NORMAL
- en: A common test VM can be developed and maintained, ensuring that testers are
    familiar with the toolset and their impact on typical target systems.
  id: totrans-1183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMs facilitate rapid switching between the host and guest operating systems,
    allowing the tester to move between Windows and Linux platforms in order to find
    the optimum mix of tools for testing.
  id: totrans-1184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMs are mobile—they can be moved to different systems and operating platforms.
  id: totrans-1185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMs can be retained in a library to facilitate regression testing. After a toolset
    has been used to validate the security of a network or system, testers are often
    asked if their methodology and tools would have detected a particular vulnerability
    present at the time of testing. Testers can go back and retest for the vulnerability
    using the archived VM to determine whether it would have been detected or the
    network was at a risk of attacks.
  id: totrans-1186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Although premade VMs are available for download, most testers create their own
    using validated ISO images (the process of installing Kali to a VM is almost identical
    to installing it to a hard drive or media, such as a USB key). Kali supports both
    VMware and Oracle VirtualBox VMs.
  id: totrans-1187
  prefs: []
  type: TYPE_NORMAL
- en: 'In general, the process is simple and guided by application wizards that walk
    you through the process. When using VMware, for example, the process would be
    as follows:'
  id: totrans-1188
  prefs: []
  type: TYPE_NORMAL
- en: Select the **Create a New Virtual Machine** icon to create a new virtual machine.
  id: totrans-1189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose to create the VM using an ISO image.
  id: totrans-1190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the guest operating system.
  id: totrans-1191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the name and location for the ISO image.
  id: totrans-1192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the disk space; the minimum used should be 12 GB, but set aside at least
    20-25 GB. A minimum of 1 GB memory should be made available to the VM; however,
    if you are testing a large network and will be using multithreaded tools, you
    may wish to increase this to at least 3 GB.
  id: totrans-1193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Review the hardware configuration.
  id: totrans-1194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-1195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Make sure that the VM is configured to be visible only to the host operating
    system, especially if it has not been updated. If you are configuring a VM to
    use as a target, beware that if it is visible to the Internet, your test platform
    may be compromised by an external attacker.
  id: totrans-1196
  prefs: []
  type: TYPE_NORMAL
- en: Start the VM. The boot menu will provide several options; select **Graphical
    Install**.
  id: totrans-1197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Follow the prompts to select the normal language, time zone, hostname, and set
    root password.
  id: totrans-1198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When setting the disk partition, and if you're not using the dual boot option,
    you can set the full partition as the virtual disk. It is recommended that you
    select this option for full disk encryption at this time.
  id: totrans-1199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The VM application will complete partitioning, write the changes to the disk,
    and then install the system files. After prompting for some additional configuration
    information, the VM will reboot.
  id: totrans-1200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At this point, the system is live. Configure to support penetration testing
    as described in [Chapter 1](ch01.html "Chapter 1. Starting with Kali Linux"),
    *Starting with Kali Linux*.
  id: totrans-1201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-1202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Preconfigured distributions of Kali usually rely on the default username and
    password and may have pregenerated SSH host keys. These should be changed as soon
    as possible.
  id: totrans-1203
  prefs: []
  type: TYPE_NORMAL
- en: Full disk encryption and nuking the master key
  id: totrans-1204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Penetration testers typically have sensitive information in their possession—a
    successful test can reveal flaws in a client's network, and even the tools used
    to conduct a penetration test may be classified as illegal in some jurisdictions.
    Therefore, testers frequently secure their systems using full-disk encryption.
  id: totrans-1205
  prefs: []
  type: TYPE_NORMAL
- en: 'During the partitioning phase of installation to a hard drive or virtual machine,
    Kali can be set to use full-disk encryption using a combination of **Logical Volume
    Management** (**LVM**) and the **Linux Unified Key Setup** (**LUKS**), which is
    the standard application for Linux hard drive encryption. This is shown in the
    following screenshot:'
  id: totrans-1206
  prefs: []
  type: TYPE_NORMAL
- en: '![Full disk encryption and nuking the master key](img/3121OS_Appendix_01.jpg)'
  id: totrans-1207
  prefs: []
  type: TYPE_IMG
- en: Access to the encrypted drive requires a passphrase, and it is recommended that
    the passphrase have a length of 20 or more characters. Unfortunately, given the
    recent emergence of state-sponsored surveillance, there are concerns that testers
    could be compelled to give their passphrase to a government agent, removing the
    benefits of encryption.
  id: totrans-1208
  prefs: []
  type: TYPE_NORMAL
- en: The solution is to provide a passphrase that will nuke, or destroy, the master
    key. This will ensure confidentiality, making it impossible to decrypt the drive.
    This capability was recently added to Kali Linux release 1.06.
  id: totrans-1209
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux incorporates LUKS, which is a platform-independent encryption specification
    that allows a user to encrypt partitions on a hard drive. LUKS allows multiple
    user keys to decrypt the master key, allowing multiple users to encrypt and decrypt
    the data, and permits the use of backup keys.
  id: totrans-1210
  prefs: []
  type: TYPE_NORMAL
- en: When a LUKS-encrypted container is created, a random master key is generated.
    This master key is encrypted using the passphrase. The advantage of this approach
    is that the passphrase is not directly linked to the data—if two identical volumes
    are encrypted and the same passphrase is used, the master keys remain unique to
    their volume and cannot be swapped.
  id: totrans-1211
  prefs: []
  type: TYPE_NORMAL
- en: This means that if the master key is lost or destroyed, it is impossible to
    recover the encrypted data. This property allows us to nuke the recovery of an
    encrypted volume or hard drive by deliberately wiping the master key if a specific
    passphrase is entered. The emergency self-destruction functionality was added
    to Kali Linux release 1.06 and can be implemented using the cryptsetup utility.
  id: totrans-1212
  prefs: []
  type: TYPE_NORMAL
- en: 'To use the nuke functionality:'
  id: totrans-1213
  prefs: []
  type: TYPE_NORMAL
- en: Install Kali with the **Full Disk Encryption** option. Before Kali is installed,
    all partitions will be erased; this will result in a slow installation.
  id: totrans-1214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Verify the LUKS header information for the encrypted hard drive using the following
    command:'
  id: totrans-1215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE95]'
  id: totrans-1216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '**Key Slot 0**, associated with the password for the disk encryption, is enabled.
    The remaining key slots are unused. The execution of the previous command is given
    in the following screenshot:'
  id: totrans-1217
  prefs: []
  type: TYPE_NORMAL
- en: '![Full disk encryption and nuking the master key](img/3121OS_Appendix_02.jpg)'
  id: totrans-1218
  prefs: []
  type: TYPE_IMG
- en: 'Add the `Nuke` key using the following command:'
  id: totrans-1219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE96]'
  id: totrans-1220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'The system will prompt you for the existing passphrase to validate identity
    and then will ask you the new passphrase to be used for the nuke option. Be careful—it
    does not prompt the user to repeat the passphrase twice in order to guard against
    a miskey during entry. The execution of the previous command is shown in the following
    screenshot:'
  id: totrans-1221
  prefs: []
  type: TYPE_NORMAL
- en: '![Full disk encryption and nuking the master key](img/3121OS_Appendix_03.jpg)'
  id: totrans-1222
  prefs: []
  type: TYPE_IMG
- en: To confirm that the nuke key has been enabled, review the list of available
    key slots, using the command shown in the following screenshot:![Full disk encryption
    and nuking the master key](img/3121OS_Appendix_04.jpg)
  id: totrans-1223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Key slot 1` is now enabled; it contains the nuke key.'
  id: totrans-1224
  prefs: []
  type: TYPE_NORMAL
- en: 'Back up the keys using the following command:'
  id: totrans-1225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE97]'
  id: totrans-1226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'Once the master key file has been backed up, encrypt it and transfer it off
    the system for secure storage. Several applications are available for encryption
    (for example, 7 Zip, bcrypt, ccrypt, and GnuPG), or you can use an internal command
    such as `openssl`. A sample command is as follows:'
  id: totrans-1227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE98]'
  id: totrans-1228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: When the backup file has been secured, your system is protected against forced
    password extraction. If the nuke password is entered, the local copy of the master
    key will be destroyed, making it impossible to access the encrypted files.
  id: totrans-1229
  prefs: []
  type: TYPE_NORMAL
- en: 'If you dump the LUKS headers after issuing the nuke password, you will see
    an output as shown in the following screenshot:'
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
- en: '![Full disk encryption and nuking the master key](img/3121OS_Appendix_05.jpg)'
  id: totrans-1231
  prefs: []
  type: TYPE_IMG
- en: 'What if you want to restore a drive that you were forced to nuke? As long as
    you can retrieve the encrypted header from the remote storage location, this is
    a simple matter; you will be able to decrypt the hard drive and recover your data.
    Once the encrypted header has been decrypted (using the appropriate decryption
    command based on the method used to protect the file), enter the following command:'
  id: totrans-1232
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  id: totrans-1233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'This will generate the following warning:'
  id: totrans-1234
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  id: totrans-1235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: When you are prompted, type `YES`. This will replace the header and allow you
    to decrypt the hard drive.
  id: totrans-1236
  prefs: []
  type: TYPE_NORMAL
- en: Setting up a test environment
  id: totrans-1237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before testing a production environment, it is important for the tester to fully
    understand how to use the testing tools, the impact that they will have on the
    target system, and how to interpret the data in relation to the activities performed
    against the target.
  id: totrans-1238
  prefs: []
  type: TYPE_NORMAL
- en: 'Testing controlled environments frequently produces results that are different
    from same tests when they are run on a production system for several reasons,
    including the following:'
  id: totrans-1239
  prefs: []
  type: TYPE_NORMAL
- en: The operating system in the target environment differs from the operating system
    in the test environment, including different versions of the operating system.
    (XP is clearly different from Windows 8.1, but there are also differences between
    Windows 8.1 Pro and Enterprise versions or between 32-bit and 64-bit operating
    system.) Operating system modifications to support local languages can also have
    a significant impact on the presence of vulnerabilities.
  id: totrans-1240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The target environment has different service packs, patches, or upgrades applied.
  id: totrans-1241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The target environment has different third-party applications installed; these
    can conflict with network traffic, introduce new vulnerabilities, or impact a
    tester's ability to exploit the existing vulnerabilities.
  id: totrans-1242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Targets configured as virtual machines in a host environment may react differently
    from target systems installed directly on bare metal.
  id: totrans-1243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Targets are protected by various network and system devices and applications.
  id: totrans-1244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To obtain the best possible results, testers (and attackers) typically use a
    two-stage testing process. Testers first perform the attack using a well-defined
    virtual machine (such as Windows XP) to determine the most effective attack tools
    and methodologies; once this simple test case is proven, testers revalidate the
    attack using a more complex virtual or physical network that mirrors the target
    network as closely as possible.
  id: totrans-1245
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerable operating systems and applications
  id: totrans-1246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Testers usually maintain a library of the current and historical operating systems.
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
- en: When testing Microsoft operating systems, WinXP is used as the *reference standard*
    to test vulnerabilities. Although Windows XP will be deprecated in 2014 and no
    longer supported by Microsoft, it will remain on many networks in servers and
    workstations as well as embedded in devices such as printers and point-of-sale
    terminals.
  id: totrans-1248
  prefs: []
  type: TYPE_NORMAL
- en: When testing vulnerable Windows operating systems, a subscription to MSDN ([http://msdn.microsoft.com/en-ca/subscriptions/aa336858](http://msdn.microsoft.com/en-ca/subscriptions/aa336858))
    is invaluable in order to gain access to current Microsoft products to test in
    the lab.
  id: totrans-1249
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-1250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Do not use operating systems downloaded from public file-sharing services such
    as Torrent sites. DigitalDefence recently evaluated 40 downloads of Microsoft
    operating systems from Torrent sites—every download was infected with a backdoor
    to permit remote access to an attacker.
  id: totrans-1251
  prefs: []
  type: TYPE_NORMAL
- en: 'To test older third-party Windows applications that possess specific vulnerabilities,
    testers can access online repositories that retain old copies of the applications;
    many of these include exploitable vulnerabilities. Examples of such repositories
    can be seen at the following links:'
  id: totrans-1252
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.oldapps.com](http://www.oldapps.com)'
  id: totrans-1253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[www.oldversion.com](http://www.oldversion.com)'
  id: totrans-1254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Due to their open source nature, multiple versions of Unix-like operating systems
    (Linux, BSD, and Solaris) are available for download and testing.
  id: totrans-1255
  prefs: []
  type: TYPE_NORMAL
- en: 'The following projects will allow you to test Unix operating system installations
    with known vulnerabilities, you can access:'
  id: totrans-1256
  prefs: []
  type: TYPE_NORMAL
- en: Damn Vulnerable Linux ([http://sourceforge.net/projects/virtualhacking/files/os/dvl/](http://sourceforge.net/projects/virtualhacking/files/os/dvl/))
  id: totrans-1257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LAMPSecurity ([http://sourceforge.net/projects/lampsecurity/](http://sourceforge.net/projects/lampsecurity/))
  id: totrans-1258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metasploitable2 ([http://sourceforge.net/projects/virtualhacking/files/os/metasploitable/](http://sourceforge.net/projects/virtualhacking/files/os/metasploitable/))
  id: totrans-1259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Older Unix applications with known vulnerabilities are usually available for
    download at the application's website.
  id: totrans-1260
  prefs: []
  type: TYPE_NORMAL
- en: 'Complex environments for testing (operating system and vulnerable applications)
    can be downloaded from the VulnHub repository at [http://vulnhub.com](http://vulnhub.com).
    These images are usually accompanied by walk-throughs that demonstrate various
    ways to exploit the images. Some of the images include the following:'
  id: totrans-1261
  prefs: []
  type: TYPE_NORMAL
- en: '**bWAPP**: This provides several ways to deface a sample website'
  id: totrans-1262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VulnVPN**: This allows the tester to exploit the VPN service in order to
    access the server and internal services and gain root access'
  id: totrans-1263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VulnVoIP**: This allows the tester to practice reconnaissance and allows
    the exploitation of a VoIP network'
  id: totrans-1264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, testers will want to take advantage of some of the vulnerable web-based
    applications that are available for testing.
  id: totrans-1265
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the most common testing targets is the Linux image called Metasploitable.
    The base operating system has multiple vulnerabilities; in addition, it loads
    vulnerable web applications when it starts. To access the applications, open Metasploitable
    as a VM and then start a separate VM with Kali Linux. In the Kali VM, open a browser
    and enter the IP address of the Metasploitable VM. You will see the menu options,
    as shown in the following screenshot:'
  id: totrans-1266
  prefs: []
  type: TYPE_NORMAL
- en: '![Vulnerable operating systems and applications](img/3121OS_Appendix_06.jpg)'
  id: totrans-1267
  prefs: []
  type: TYPE_IMG
- en: 'The web-based applications can be useful to support enterprise testing as well
    as specific attacks against web applications. The five applications are as follows:'
  id: totrans-1268
  prefs: []
  type: TYPE_NORMAL
- en: '**TWiki**: This is a wiki application that supports enterprise collaboration
    during the testing process; it uses structured content to create simple workflow
    systems'
  id: totrans-1269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**phpmyadmin**: Allows remote administration of MySQL databases over the Web'
  id: totrans-1270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**webdav**: The **Web-based Distributed Authoring and Versioning** set of extensions
    to the HTTP protocol, which allows users to collaboratively edit and manage files
    on remote web servers'
  id: totrans-1271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mutillidae**: A vulnerable web-hacking application composed of PHP scripts
    that are vulnerable to the top 10 vulnerabilities of OWASP'
  id: totrans-1272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see in the following screen excerpt, the top 10 vulnerabilities are
    available in a drop-down menu. For example, selecting the option **A2 - Cross
    Site Scripting** (**XSS**) gives you access to submenus matched to specific vulnerability
    types (**Reflected**, **Persistent**, **DOM Injection**, and so on).
  id: totrans-1273
  prefs: []
  type: TYPE_NORMAL
- en: '![Vulnerable operating systems and applications](img/3121OS_Appendix_07.jpg)'
  id: totrans-1274
  prefs: []
  type: TYPE_IMG
- en: Tip
  id: totrans-1275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The database specified in the `Mutillidae` configuration file is incorrect,
    and you may receive multiple errors for operations that require database access.
    To fix these, log in to Metasploitable2 and edit the `/var/www/mutillidae/config.inc`
    file; change the `dbname` field from `metasploit` to `owasp10`.
  id: totrans-1276
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the Metasploitable framework launches the **Damn Vulnerable Web Application**
    (**DVWA**) that provides a different set of challenges to practice attacks against
    specific vulnerabilities.![Vulnerable operating systems and applications](img/3121OS_Appendix_08.jpg)
  id: totrans-1277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Other vulnerable web-based apps that have been well characterized include the
    following:'
  id: totrans-1278
  prefs: []
  type: TYPE_NORMAL
- en: '**Hackxor**: This is a web application hacking game that forces players to
    progress through a story to solve challenges related to various vulnerabilities
    ([http://hackxor.sourceforge.net/cgi-bin/index.pl](http://hackxor.sourceforge.net/cgi-bin/index.pl)).'
  id: totrans-1279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Foundstone**: This has released a series of vulnerable web applications,
    including a bank, bookstore, casino, shipping, and a travel site ([www.mcafee.com/us/downloads/free-tools/index.aspx](http://www.mcafee.com/us/downloads/free-tools/index.aspx)).'
  id: totrans-1280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**LAMPSecurity**: This provides a series of vulnerable VMs designed to teach
    Linux, Apache, PHP, and database security ([http://sourceforge.net/projects/lampsecurity/files/](http://sourceforge.net/projects/lampsecurity/files/)).'
  id: totrans-1281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OWASP Broken Web Applications Project**: This is a collection of vulnerable
    web applications ([http://code.google.com/p/owaspbwa/](http://code.google.com/p/owaspbwa/)).'
  id: totrans-1282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**WebGoat**: This is an insecure J2EE web application that attempts to provide
    a realistic testing environment. It is maintained by OWASP ([https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project](https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project)).'
  id: totrans-1283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Web Security Dojo**: This training application released by Maven Security
    ([https://www.mavensecurity.com/web_security_dojo/](https://www.mavensecurity.com/web_security_dojo/)),
    contains several target images, including Damn Vulnerable Web App, Google''s Gruyere,
    Hackme''s Casino, OWASP''s Insecure Web App and WebGoat, w3af''s test website,
    and several vulnerability-specific targets. It also contains a toolset to support
    exploitation.'
  id: totrans-1284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
