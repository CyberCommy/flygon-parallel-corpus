- en: Chapter 7. Post-Exploitation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。后期利用
- en: Post-exploitation is an often overlooked aspect of penetration testing. In the
    past, many even considered the job to be complete the moment that a shell is popped
    open on a remote target machine. Goal-oriented pentesting will require more than
    this. There must be a specific goal, such as accessing a critical database, or
    obtaining key credentials that would allow an attacker to read private corporate
    e-mails, for the penetration test to be of value. Business owners and managers
    are concerned with protecting the confidentiality, integrity, and availability
    of their assets and data. Reporting that a random system was easily compromised
    means very little compared to providing tangible proof that an attacker could
    effortlessly cost the company millions of dollars in missed sales due to a vulnerability
    affecting a critical system that is externally facing.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试中经常被忽视的是后期利用。过去，许多人甚至认为一旦在远程目标机器上打开了一个shell，工作就完成了。目标导向的渗透测试将需要更多。必须有一个具体的目标，比如访问关键数据库，或者获取关键凭证，使攻击者能够阅读私人企业电子邮件，才能使渗透测试具有价值。业主和经理们关心保护其资产和数据的机密性、完整性和可用性。报告说一个随机系统很容易被攻破，与提供攻击者可能轻松造成公司数百万美元的损失的有关关键系统的漏洞的具体证据相比，意义不大。
- en: 'In this chapter, we will be covering many areas of interest including:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖许多感兴趣的领域，包括：
- en: Rules of engagement in regards to post-exploitation
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于后期利用的规则的参与
- en: Data gathering techniques
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据收集技术
- en: Gaining stored credentials
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取存储的凭证
- en: Elevation of privilege
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 权限提升
- en: Tip
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: As much as we would like to, we cannot provide a direct step-by-step instructional
    guide for every situation you will face as a penetration tester. We do hope that
    we are providing the guidance necessary to develop the skill set and mindset necessary
    to properly inspect and verify the security of secured environments. Penetration
    testing requires dedication and the ability to find and act upon clues. There
    are many recipes for specific exploitation and post-exploitation, but without
    the proper technical understanding and background these recipes will only lead
    to confusion. Taking the time to fully understand the operating systems and technologies
    being tested is critical and of utmost importance to any penetration test.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们很想这样做，但我们无法为您作为渗透测试人员所面临的每种情况提供直接的逐步指导。我们希望我们提供的指导能够帮助您发展必要的技能和心态，以正确检查和验证受保护环境的安全性。渗透测试需要奉献精神和发现并采取行动的能力。有许多特定利用和后期利用的方法，但如果没有适当的技术理解和背景，这些方法只会导致混乱。花时间充分了解正在测试的操作系统和技术对于任何渗透测试来说都是至关重要的。
- en: Rules of engagement
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规则的参与
- en: During a goal-oriented penetration test, the environment will be evaluated using
    similar techniques used by attackers in the wild. With this in mind, the rules
    of engagement are absolutely critical and must be followed carefully. During the
    post-exploitation phase of a penetration test there is a good chance that sensitive
    data could be disclosed; systems that must follow government regulations may be
    targeted or passwords that are hardcoded may be found. Be sure to make clients
    aware of this fact, and prepare the necessary documentation that specifically
    details what is and what is not acceptable. In some cases, you may be able to
    test development environments in tandem with the production environment; if this
    is the case be sure to look out for password reuse from development to production.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在目标导向的渗透测试期间，环境将使用类似于野外攻击者使用的技术进行评估。在此情况下，规则的参与是绝对关键的，必须仔细遵守。在渗透测试的后期利用阶段，可能会泄露敏感数据；必须遵循政府法规的系统可能会成为目标，或者可能会发现硬编码的密码。务必让客户意识到这一事实，并准备必要的文件，明确详细说明什么是可以接受的，什么是不可以接受的。在某些情况下，您可能能够同时测试开发环境和生产环境；如果是这种情况，请务必注意从开发到生产的密码重用。
- en: Note
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**WARNING:** The Rules of Engagement are very important for all phases of the
    penetration test, but this is particularly the case when it comes to post-exploitation.
    If you have any questions about the Rules of Engagement in regards to post-exploitation
    or any other phase, please seek legal counsel **prior** to performing a penetration
    test for anyone to ensure that all bases are covered.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**警告：**规则的参与对于渗透测试的所有阶段都非常重要，但在后期利用方面尤为重要。如果您对后期利用或任何其他阶段的规则的参与有任何疑问，请在为任何人执行渗透测试之前寻求法律咨询，以确保所有方面都得到覆盖。'
- en: What is permitted?
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是允许的？
- en: Assess the goal of the penetration test and determine what will need to be accomplished
    to prove the existence of one or more exploitable vulnerabilities that allow the
    goal to be achieved. For example, if a denial of service attack that diverts local
    resources to resolving the issue is required, are you allowed to perform it? Will
    the business understand that attacking one seemingly unimportant system may give
    you the opening you need to take on something more important while they are busy
    trying to resolve the "problem"? How many people on your team are allowed to perform
    the agreed upon tasks? Think of all possibilities and then ensure that they are
    all necessary, and approved, before you proceed with the test. Simply gaining
    a VNC session on a system could break your rules of engagement unless this has
    been discussed with your client prior to testing.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 评估渗透测试的目标，并确定需要完成什么才能证明存在一个或多个可利用的漏洞，从而实现目标。例如，如果需要进行一次拒绝服务攻击，将本地资源转移到解决问题上，您是否被允许执行？企业是否明白，攻击一个看似不重要的系统可能会给您提供攻击更重要目标的机会，而他们正忙于解决“问题”？您的团队中有多少人被允许执行商定的任务？考虑所有可能性，然后确保它们都是必要的，并且在进行测试之前得到批准。除非事先与客户讨论过，否则仅仅获得系统上的VNC会话可能会违反您的参与规则。
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Video and voice capture (think VOIP) may be off limits depending on the laws
    of your country or region. **Do not break the law**. Research everything, and
    seek legal counsel when needed.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Can you modify anything and everything?
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Does the environment you are targeting allow you to add or remove accounts,
    change log files, or launch internal attacks via pivoting? If so, does your client
    approve of this and all associated risks involved? As simple as it seems, everything
    needs to be addressed in the rules of engagement. No assumptions should be made.
    To test an actual secured environment will take a lot of planning and forethought
    to ensure you have the permissions necessary to truly test the environment and
    mimic the attacks that an actual attacker is likely to use.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Only perform attacks that are truly needed to achieve your goal. For instance,
    dropping a database table would not be a good idea in most environments. Generally
    there are less intrusive methods of proving that admin access to a critical database
    server was achieved.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Are you allowed to add persistence?
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When performing a test on a large network it may be necessary to add persistence
    to key systems. This will allow you to bypass any restrictions or changes made
    during the test. It also mimics the typical action an attacker would take. After
    all, how frustrating would it be to gain a rootshell on a system only to have
    the corporate patch cycle kick in and stop you in your tracks. But, if this does
    happen, be sure to compliment the security team!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: There are different types of persistence that should be considered; are you
    allowed to root kit a machine or just install a process that waits on a port?
    What about back doors to existing services or even setting up tasks that kick
    off when you knock on certain ports? There are different levels of persistence
    and depending on the size and configuration, persistence can make a tester's life
    much easier. Make a determination of what is necessary to reach your goal, and
    ensure that you have all of the permissions covered BEFORE you test.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: How is the data that is collected and stored handled by you and your team?
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The data collected from client-owned assets should be guarded carefully. Set
    up ground rules before testing in regards to password management, reporting, third-party
    involvement (what are you using to crack those password hashes?), and everything
    else that involves client data. Agree in advance upon how this data will be transferred,
    stored, and cleaned so that there are no questions or doubts after the fact. Another
    item of note includes how you will handle any incident or information that indicates
    there is an unknown and possibly hostile attacker already in the network. Third-party
    security incident response teams have very specific methods of handling these
    situations to ensure the incident is handled properly.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Employee data and personal information
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Find out what the laws and regulations as well as the policies regarding employee
    information are in regards to each specific job. If the information contained
    on a system does not belong to the client, are they even able to grant you permission
    to view, possibly copy and store any of this data? A good contract that has been
    properly reviewed by legal counsel that is familiar with this type of work is
    advised.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Data gathering, network analysis, and pillaging
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once a system had been compromised it is advisable to fully enumerate the device.
    Any valuable clues or information need to be located and properly managed in a
    quick and efficient manner. During this phase the focus should be on gathering
    credentials and fully enumerating installed services, network configurations,
    and access history. It may also be beneficial to determine what type of network
    or environment the system is running in. Is the network segmented, are there multiple
    IPs associated with the device, or is it actually virtualized such as our test
    network?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Creating a list of commands and procedures used when reviewing a compromised
    system will increase the efficiency and effectiveness of the entire test. Having
    such a plan of action also makes the reporting phase easier and eliminates the
    chance that something important was missed during the testing phases.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: Linux
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many corporations are moving toward open source operating systems to save money
    and remain competitive. Each flavor will have subtle differences that should be
    noted and understood when attempting to find important settings or information.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Important directories and files
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Files that should be reviewed on a compromised system that is running a Linux-based
    operating system include the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '| **Directory or file** | **Description** |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
- en: '| `/etc/passwd` | This file contains a listing of all system user accounts.
    |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
- en: '| `/etc/ftpusers` | Provides a listing of users that are allowed to access
    the FTP server. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
- en: '| `/etc/pam.d` | Very useful directory that contains Pluggable Authentication
    Module (PAM) configuration files. Older installations may use `/etc/pam.conf`
    instead. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
- en: '| `/etc/shadow` | Passwords are stored in this file. They will need to be decrypted.
    |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
- en: '| `/etc/hosts.allow` | A list of hostnames that are allowed to access this
    system. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
- en: '| `/etc/hosts.deny` | Access control mechanism that will restrict access to
    systems listed. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
- en: '| `/etc/securetty` | A listing of TTY interfaces that will permit a root login.
    |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
- en: '| `/etc/shutdown.allow` | A listing of user accounts that may shut down the
    system. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
- en: '| `/etc/security` | Security policies. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
- en: '| `/etc/init.d or /etc/rc.d/init.d` | Service and program startup files (such
    as `/etc/init.d/apache 2)`. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
- en: '| `/etc/ssh` | Read or modify the SSH configuration. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
- en: '| `/etc/sysctl.conf` | Kernel options. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
- en: '| `/etc/sysconfig` | System configuration files. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
- en: '| `/etc/dhcpc` | Contains information about DHCP connections. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
- en: '| `/var/log` | Most likely place to find locally stored log files. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
- en: '| `/var/log/messages` | Very interesting log file that stores system messages.
    |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
- en: '| `/var/log/wtmp` | Log file that shows the currently logged-in users. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
- en: '| `/var/log/lastlog` | The last command pulls from this log file. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
- en: Tip
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Be sure to look for backup files as well, they may contain critical data that
    you could not otherwise access!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Important commands
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| **Command** | **Description** |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
- en: '| `ls -oaF` | Lists all files with symbols that make it easier to determine
    directories, executables, and so on in an ordered column. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
- en: '| `locate` | Performs a search. Example: (locate `awesomeVPNClient` would locate
    any instances of awesomeVPNClient. Something that would be very helpful if you
    had a listing of popular VPN client names). |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
- en: '| `updatedb` | Updates the locate db. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
- en: '| `grep` | Very powerful command that allows you to search for strings within
    files. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
- en: '| `less` | Use less to read files. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
- en: '| `cat` | Can also be used to display the contents of a file. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
- en: '| `df -H` | Provides disk information. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
- en: '| `date` | Can be used to attempt to get an idea of which time zone the system
    is in. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
- en: '| `free` | Provides memory information. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
- en: '| `arch` | Provides information about the system architecture. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
- en: '| `echo` | Can be used to automate writing files. Simply outputs the specified
    text. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
- en: '| `last` | Will display the `/var/last` log file. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
- en: '| `logname` | Provides your logged-in name. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
- en: '| `pwd` | Prints working directory. Shows where you are in the directory structure.
    |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
- en: '| `uname -a` | Provides information about the operating system. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
- en: '| `netstat` | Provides connection information. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
- en: '| `ifconfig or /sbin/ifconfig` | Network interface configuration. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
- en: '| `udevd version` | Prints the udev version. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
- en: '| `find / -type f perm 777` | Finds all files with 777 permissions. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
- en: There are many other commands that are useful as well, but these should provide
    the basic information necessary to enumerate a remote system and gather most,
    if not all, interesting information.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Administrators will at times make certain files immutable. When you run into
    a situation where you cannot seem to delete a certain file, use `lsattr` to review
    the file attributes.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Putting this information to use
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have an idea of what types of files and command output we want to
    review let's put some of this to use. In order to follow along with this section
    you will require the virtual pfSense, Backtrack, and Kioptrix level 1 guest machines
    to be connected to VLAN1 using the 192.168.75.0/24 IP space.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: Enumeration
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We will begin with exploiting the Kioptrix system from BackTrack. Before we
    can perform post-exploitation we will need to find and exploit a system. As usual
    we start by performing a quick scan of our local subnet:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Your results will vary, but you should be able to find the Kioptrix machine
    on your network:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now that the IP address of the target has been determined we will perform a
    more thorough scan. Use the command of your choice to gather the necessary system
    information:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Exploitation
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We reuse our previous samba exploit to gain access to the system `samba-2.2.8
    < remote root exploit by eSDee ([www.netric.org|be](http://www.netric.org|be))`.
    In case you did not follow along in the exploitation chapter go to `/pentest/exploits/exploitdb`,
    search for the `samba exploit 10.c`, clean up the code and compile it in a directory
    as SambaVuln_10 via `gcc -o SambaVuln_10 10.c`. If you have trouble compiling
    this code please revisit the appropriate chapter for a step-by-step walkthrough.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Remember that you can perform Exploit-DB searches of your local exploit repository
    by going to `/pentest/exploits/exploitdb` and using the `./searchexploit` command
    followed by the search variables such as `./searchsploit openssl`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Were connected, now what?
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we are connected remotely it is important to start gathering data about
    the system.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Please note that the functionality of your remote shell does not equal that
    of your standard Linux shell.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: 'You have probably already noticed that you do not receive a command prompt.
    Take a look at which `tty` you are connected to:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'As you are currently running as root most commands we want to access will be
    available:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'As an example, if you wanted to connect directly back to your BackTrack (`192.168.75.25`)
    machine using SSH you would run into an issue such as this:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This can be frustrating when time is short and there are many systems that
    need to be reviewed before the test can be considered complete. You can try to
    spawn a shell using Python:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Unfortunately, this will not always work. Luckily, once we have sufficient
    access levels on a target system there are plenty of other methods to bypass this.
    Here is the output if you try to spawn a shell on the Kioptrix level 1 machine
    using our current shell:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is a good example of the mindset that is required of a penetration tester.
    When one method fails it is important to try another. Giving up is not an option
    when performing a penetration test especially when testing environments that have
    many security controls and processes in place.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: Which tools are available on the remote system
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'It can be beneficial to perform a quick enumeration of available tools before
    getting started. For instance, knowing that there is already a GCC compiler installed
    and ready to use can make a difference as to what type of post-exploitation activity
    you would like to proceed with. Here are some of the tools and features we should
    check for before starting our endeavors:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '| **Tool** | **Command** | **Kioptrix output** |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
- en: '| bash | `which bash` | `/bin/bash` |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
- en: '| curl | `which curl` | `/usr/bin/curl` |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
- en: '| ftp | `which ftp` | `/usr/bin/ftp` |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
- en: '| gcc | `which gcc` | `/usr/bin/gcc` |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
- en: '| iptables | `which iptables` | `which: no iptables in (/usr/local/bin:/bin:/usr/bin)`
    |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
- en: '| nc | `which nc` | `which: no nc in (/usr/local/bin:/bin:/usr/bin)` |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
- en: '| nmap | `which nmap` | `/usr/bin/nmap` |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
- en: '| ssh | `which ssh` | `/usr/bin/ssh` |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
- en: '| telnet | `which telnet` | `/usr/bin/telnet` |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| telnet | `which telnet` | `/usr/bin/telnet` |'
- en: '| tftp | `which tftp` | `which: no tftp in (/usr/local/bin:/bin:/usr/bin)`
    |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| tftp | `which tftp` | `which: no tftp in (/usr/local/bin:/bin:/usr/bin)`
    |'
- en: '| wget | `which wget` | `/usr/bin/wget` |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| wget | `which wget` | `/usr/bin/wget` |'
- en: '| sftp | `which sftp` | `/usr/bin/sftp` |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| sftp | `which sftp` | `/usr/bin/sftp` |'
- en: By fully understanding the capabilities of the target machine we can determine
    what our next plan of action is. In the case of the Kioptrix machine, it is of
    note that `nmap` is already installed! If the system had access to multiple networks
    we would be able to leverage this tool and scan the remote network from `192.168.75.14`.
    This is especially important if you have gained a root shell from outside of a
    firewall and cannot simply run the scan from your own machine.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 通过充分了解目标机器的能力，我们可以确定下一步的行动计划。在Kioptrix机器的情况下，值得注意的是`nmap`已经安装！如果系统可以访问多个网络，我们将能够利用这个工具从`192.168.75.14`扫描远程网络。如果您已经从防火墙外部获得了root
    shell，并且无法简单地从自己的机器上运行扫描，这一点尤为重要。
- en: Finding network information
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找网络信息
- en: 'First thing we would want to do is to determine which networks the system is
    connected to. We need to gather the network information from the device:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先要做的是确定系统连接到哪些网络。我们需要从设备中收集网络信息：
- en: '[PRE14]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This system has only one Ethernet connection set up and it is the one we already
    know about (eth0 at `192.168.75.14)`. It is important to pay attention to network
    configurations that may contain more than one network card. If the system is virtualized
    or multi-homed there is a small possibility it could be used to pivot into another
    network that was previously inaccessible. You would also want to know if the system
    is set up as a router. Multiple networks in `ifconfig` is a good indicator that
    there may be more to find.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 该系统只设置了一个以太网连接，我们已经知道了它（eth0在`192.168.75.14`）。重要的是要注意可能包含多个网络卡的网络配置。如果系统是虚拟化的或多宿主的，有可能用于进入以前无法访问的另一个网络。您还需要知道系统是否设置为路由器。`ifconfig`中的多个网络是可能有更多内容可发现的良好指标。
- en: Tip
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: We will be reviewing data from many commands and files. This data will be needed
    when writing the report or attempting to recreate the network in your own lab
    for further testing. The simplest method is to pipe the output of your commands
    into a single file that can then be downloaded for review.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将审查许多命令和文件的数据。在撰写报告或尝试在您自己的实验室中重新创建网络进行进一步测试时，将需要这些数据。最简单的方法是将您的命令输出导入到一个单个文件中，然后可以下载进行审查。
- en: The system contains a lot of other network information. Let's pull some of this
    data down for review.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 系统包含许多其他网络信息。让我们下载一些这些数据进行审查。
- en: 'Taking a look at the ARP tables we determine that there is a pfSense machine
    on the targets network:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 查看ARP表后，我们确定目标网络上有一台pfSense机器：
- en: '[PRE16]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: We need to take a look at our hosts files to determine if there are any restrictions
    we did not know about. If there are certain systems that are specified in the
    hosts, by using `hosts.allow` or `hosts.deny` we can use the information to assist
    in setting attack priorities. The files contain comments that are very descriptive;
    thus we will not reiterate their use.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要查看我们的主机文件，以确定是否有我们不知道的任何限制。如果主机中指定了某些系统，我们可以使用`hosts.allow`或`hosts.deny`中的信息来帮助设置攻击优先级。文件包含非常描述性的注释；因此我们不会重复它们的用途。
- en: '[PRE18]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Note
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If your target system is running a DNS server you should review the DNS cache.
    The DNS cache can contain a large set of information about the network you are
    testing.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的目标系统正在运行DNS服务器，您应该查看DNS缓存。DNS缓存可能包含有关您正在测试的网络的大量信息。
- en: To find additional DHCP information that is stored on the system we must first
    change directories to `/etc/dhcpc`.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到存储在系统上的其他DHCP信息，我们必须首先切换到`/etc/dhcpc`目录。
- en: Tip
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If the system is using a statically configured IP the information can be found
    on RedHat at `/etc/sysconfig/network-scripts/ifcfg <interface name>` or in Ubuntu
    at `/etc/network/interfaces`.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统使用静态配置的IP，则可以在RedHat的`/etc/sysconfig/network-scripts/ifcfg <interface name>`或Ubuntu的`/etc/network/interfaces`中找到信息。
- en: We then follow up by using cat to review the contents of `dhcpcd-eth0.info:`
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们使用cat来查看`dhcpcd-eth0.info`的内容：
- en: '[PRE24]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Now we know the gateway that is used, the domain, DNS, and so on. This type
    of information will allow us to paint a broader picture of the system and the
    network we are dealing with. After all, in goal-oriented pentesting we should
    be working towards finding something that actually has a business impact.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了使用的网关、域、DNS等信息。这种类型的信息将使我们能够更全面地了解系统和我们正在处理的网络。毕竟，在面向目标的渗透测试中，我们应该努力找到实际对业务有影响的东西。
- en: Determine connections
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确定连接
- en: Listening services can sometimes provide additional information about the system
    you are on. Outbound connections give an idea of what the purpose of the system
    is. They may also indicate potential targets on the network. If there is an active
    connection to a network service on another server, it may be using credentials
    that can be harvested in later stages. Let's take a look at the services running
    on the machine.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 监听服务有时可以提供有关您所在系统的额外信息。出站连接可以让您了解系统的目的是什么。它们还可能指示网络上的潜在目标。如果在另一台服务器上有一个网络服务的活动连接，它可能正在使用稍后阶段可以收集的凭据。让我们来看看机器上运行的服务。
- en: '[PRE25]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Unfortunately, we do not have anything really interesting to look at here.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，我们在这里没有什么有趣的东西可以看。
- en: Note
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that our connection is visible. If someone were watching for connections
    they would be able to block your IP and possibly foil your attack. When performing
    a Whitebox test there is also a possibility that an administrator could shut you
    down after you make a successful connection to a server. Depending on the goal
    of the penetration test, this may be the appropriate action for the administrator
    or security professional to take.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意我们的连接是可见的。如果有人在观察连接，他们将能够阻止你的IP，可能挫败你的攻击。在进行白盒测试时，还有可能在成功连接到服务器后，管理员会关闭你的连接。根据渗透测试的目标，这可能是管理员或安全专业人员采取的适当行动。
- en: Ideally, we would see connections to the services being made from other servers
    on the network. This information can assist you when determining next steps, or
    even when shaping your priorities. For instance, if there is an administrator
    connecting to this machine using SSH we would want to know where he is connecting
    from so that we could try to gain access to his machine as well.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，我们会看到来自网络上其他服务器的服务连接。这些信息可以帮助你确定下一步的步骤，甚至在确定你的优先级时。例如，如果有一个管理员使用SSH连接到这台机器，我们会想知道他是从哪里连接的，这样我们就可以尝试访问他的机器。
- en: Checking installed packages
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查已安装的软件包
- en: Now we need to see what type of software is installed on the system. We have
    enough information to indicate that this system is running Red Hat. Use RPM to
    list out which packages are installed. You can use the `--last` option to show
    the last time the package was modified. We will truncate the output, but if you
    are following along you will see why it important to pipe this information into
    a file for later review. Please note that different versions of Linux use different
    package installers. RPM will work for some, but not all. Use the appropriate package
    listing command for your target operating system.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要查看系统上安装了什么类型的软件。我们有足够的信息表明这个系统正在运行Red Hat。使用RPM列出已安装的软件包。你可以使用`--last`选项来显示软件包最后修改的时间。我们将截断输出，但如果你跟着做，你会明白为什么将这些信息导入文件以供以后审查是很重要的。请注意，不同版本的Linux使用不同的软件包安装程序。RPM对某些软件包有效，但不是全部。使用适合你目标操作系统的适当软件包列表命令。
- en: '[PRE26]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Package repositories
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 软件包存储库
- en: 'One interesting fact is that many corporations use local package repositories
    to update their Linux-based systems. If you are able to compromise one of these
    repositories you could technically arrange to have a backdoor installed on all
    systems using these repositories. Take a look at your **BackTrack** system and
    try the following command:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，许多公司使用本地软件包存储库来更新他们的基于Linux的系统。如果你能够破坏其中一个存储库，你可以在使用这些存储库的所有系统上安排安装后门。查看你的**BackTrack**系统，并尝试以下命令：
- en: '[PRE27]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: As you can see we have a very specific set of repositories that we pull our
    data from. These repositories are accessed by people across the world to update
    their BackTrack instances. If you're on a network that uses their own repositories
    to stage their updates, ensure that these systems are totally secure. All systems
    pointed at these will obtain their files from these trusted sources…
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们从一组非常具体的存储库中获取数据。这些存储库被世界各地的人访问，以更新他们的BackTrack实例。如果你所在的网络使用他们自己的存储库来进行更新，确保这些系统是完全安全的。所有指向这些存储库的系统都将从这些受信任的来源获取他们的文件…
- en: Programs and services that run at startup
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在启动时运行的程序和服务
- en: 'Understanding which programs and services run at startup is also very important.
    At the Kioptrix shell type the following command:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 了解在启动时运行的程序和服务也非常重要。在Kioptrix shell中输入以下命令：
- en: '[PRE28]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'If we take a look at the `rc.local` file we see the following:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看`rc.local`文件，我们会看到以下内容：
- en: '[PRE29]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The Kioptrix crew has set up several items that launch at system startup. For
    more control of these processes they would probably be pointed at a script to
    start in their respective rc0-6s.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Kioptrix团队已经设置了几个项目，在系统启动时启动。为了更好地控制这些进程，它们可能会指向一个脚本，在它们各自的rc0-6s中启动。
- en: Searching for information
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 搜索信息
- en: 'Be sure to enumerate the directory structure of the targeted device. Many times
    it is possible to determine what the purpose of the server is simply from looking
    at the installed programs and the associated directory structure. Take a look
    at the Kioptrix filesystem:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要枚举目标设备的目录结构。很多时候，仅仅从安装的程序和相关的目录结构中看，就可以确定服务器的用途。看一下Kioptrix文件系统：
- en: '[PRE31]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now that we know how the partitions are set up, let''s take a look at what
    we are dealing with:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道分区是如何设置的，让我们看看我们正在处理什么：
- en: '[PRE32]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Here can see that there are at least two user home directories. If we want to
    pull down the entire directory structure and a listing of all files so we can
    review it later, we can use tree and put the output out into a file to be transferred
    later.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里可以看到至少有两个用户主目录。如果我们想要下载整个目录结构和所有文件的列表，以便以后审查，我们可以使用tree并将输出放入文件中以供以后传输。
- en: '[PRE33]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: This command provides us with a recursive directory listing. We chose not to
    print the indentations with `-i`, show **all** files including those that are
    hidden with `-a`, wanted to see the entire **file** path with `-f`, appended characters
    to the end to let us know if we are looking at files or directories and more with
    `-F`, and finally chose to view the file **permissions** with `-p`.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令为我们提供了一个递归的目录列表。我们选择不用`-i`打印缩进，用`-a`显示**所有**文件，包括隐藏的文件，想要用`-f`看到整个**文件**路径，用`-F`在末尾添加字符，让我们知道我们是在查看文件还是目录，最后选择用`-p`查看文件**权限**。
- en: Note
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The generated file is large, and on some systems could even cause a momentary
    spike in resource usage, so proceed with caution.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的文件很大，在某些系统上甚至可能会导致资源使用量短暂增加，所以请谨慎操作。
- en: 'If we look at the head and tail of the file we can see our output in a reasonable
    fashion:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看文件的头部和尾部，我们可以以合理的方式看到我们的输出：
- en: '[PRE34]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This particular system has over 50,000 files that would have to be reviewed.
    Grepping for interesting filenames would save a lot of time. Also, check out the
    file permissions carefully. Perhaps, there is a world readable and writable directory
    that could be used to set up some persistence at a later time.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这个特定的系统有超过50,000个文件需要审查。 使用有趣的文件名进行Grep搜索会节省大量时间。 还要仔细检查文件权限。 也许有一个可读可写的全局目录，可以在以后用于设置一些持久性。
- en: History files and logs
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 历史文件和日志
- en: The history files and logs can be reviewed to determine what the system has
    recently been used for.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 可以审查历史文件和日志，以确定系统最近被用于什么目的。
- en: '[PRE35]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: We can list the contents of the root directory to look for clues.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以列出根目录的内容以寻找线索。
- en: '[PRE36]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Take a look inside the `.bash_history` files to see which commands were used
    recently:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 查看`.bash_history`文件，看看最近使用了哪些命令：
- en: '[PRE37]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'We have found a few interesting commands that have been run by the root user
    such as `mail` and `nano /etc/issue`. Cat out `/etc/issue` and you will see the
    following:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现root用户运行了一些有趣的命令，如`mail`和`nano /etc/issue`。 查看`/etc/issue`，您将看到以下内容：
- en: '[PRE38]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Looking at the mail command you will see that there are several log messages
    that are being sent to the system administrator. You would want to clean these
    up as they contain information that may alert the administrator that you have
    been trying to access this system. We will revisit this when we discuss detection
    avoidance in the next chapter.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 查看邮件命令，您将看到有几条日志消息发送给系统管理员。 您会想要清理这些，因为它们包含可能会提醒管理员您一直在尝试访问该系统的信息。 在下一章中讨论检测规避时，我们将重新讨论这个问题。
- en: Keep in mind there is a `.bash_history` of note for every interactive user on
    the system. These should be checked to see if there are any files or applications
    that are being used frequently that may contain data that will assist in the penetration
    test.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，系统上每个交互式用户都有一个`.bash_history`。 应该检查这些，看看是否有任何经常使用的文件或应用程序，可能包含有助于渗透测试的数据。
- en: '[PRE39]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Tip
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Usage of wildcards can be very helpful when reviewing a target system. As an
    example, try `ls -al /home/*/` or cat `/home/*/.bash_history`. These commands
    are tremendous time savers and are excellent when scripting for unknown system
    configurations.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查目标系统时，使用通配符可能非常有帮助。 例如，尝试`ls -al /home/*/`或cat`/home/*/.bash_history`。 这些命令是巨大的时间节省者，并且在为未知的系统配置编写脚本时非常出色。
- en: 'We will need to take a look at some of the logs in `/var/log` as well:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要查看`/var/log`中的一些日志：
- en: '[PRE40]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Browse through some of these and ensure that at minimum the important files
    such as `messages, secure`, and others are reviewed. A penetration tester should
    become as familiar with these files as a day-to-day administrator would be. If
    you do not understand the operating system you are working with, your ability
    to fully test will be limited. Take a look at the security log and see how much
    information can be found:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览其中一些文件，并确保至少审查了重要文件，如`messages, secure`等。 渗透测试人员应该熟悉这些文件，就像日常管理员一样。 如果您不了解正在使用的操作系统，您的完全测试能力将受到限制。
    查看安全日志，看看能找到多少信息：
- en: '[PRE41]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: There are too many log files to review within one chapter of a book. Make sure
    to familiarize yourself with the data you can find on the system.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在一本书的一个章节内审查太多日志文件。 确保熟悉您可以在系统上找到的数据。
- en: Configurations, settings, and other files
  id: totrans-215
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置、设置和其他文件
- en: 'There are many additional files that will provide critical system information
    that pertains to your penetration test. Take a look at some of the following:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他文件将提供与您的渗透测试相关的关键系统信息。 查看以下一些文件：
- en: '[PRE43]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Crontab allows us to schedule tasks. This can be used to set up persistence
    or to run programs that you do not have access to run. Crontab will run the task
    as the root user.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: Crontab允许我们安排任务。 这可以用于设置持久性或运行您无权运行的程序。 Crontab将以root用户身份运行任务。
- en: '`fstab` is the configuration file that controls how the partitions are mounted.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`fstab`是控制分区挂载方式的配置文件。'
- en: '[PRE44]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Here is a listing of other configuration files that might be of interest:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可能感兴趣的其他配置文件列表：
- en: '`/etc/master.passwd`'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/master.passwd`'
- en: '`/etc/resolv.conf`'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/resolv.conf`'
- en: '`/etc/apache2/httpd.conf` or `/etc/httpd/conf/httpd.conf`'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/apache2/httpd.conf`或`/etc/httpd/conf/httpd.conf`'
- en: '`/etc/exports`'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/exports`'
- en: '`/etc/ldap/ldap.conf`'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/ldap/ldap.conf`'
- en: '`/etc/samba/smb.conf`'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/samba/smb.conf`'
- en: Tip
  id: totrans-228
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Challenge:** Browse around the target system and find the files that you
    find most interesting, then create a script that allows you to automate the entire
    thing!'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '**挑战：** 浏览目标系统，找到您最感兴趣的文件，然后创建一个允许您自动化整个过程的脚本！'
- en: Other files that can provide valuable information include `/mnt, /media, /tmp,
    /opt`, and of course specific configuration or data files that relate to items
    installed on the target machine. For example, if the system targeted contains
    an instance of Apache or any other specific software you would want to check the
    configuration and log files.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 其他可以提供有价值信息的文件包括`/mnt, /media, /tmp, /opt`，当然还有与目标机器上安装的项目相关的特定配置或数据文件。 例如，如果目标系统包含Apache的实例或任何其他特定软件，您会想要检查配置和日志文件。
- en: Users and credentials
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户和凭据
- en: There are several files that control user access to the system and its files.
    Besides gathering networking and service data about the rest of the network this
    is probably the most important portion of post-exploitation. If you are able to
    determine both username and passwords that work on other systems throughout the
    network then the likelihood of the penetration test being a total success increases
    dramatically. With a Linux system there are several files that can be used to
    try to gain user credentials.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个文件控制用户访问系统及其文件。 除了收集有关网络和服务数据的其他部分，这可能是渗透后最重要的部分。 如果能够确定用户名和密码在网络中其他系统上有效，那么渗透测试成功的可能性将大大增加。
    对于Linux系统，有几个文件可用于尝试获取用户凭据。
- en: 'We should also use `w` to check who is already on the system:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还应该使用`w`来检查谁已经在系统上：
- en: '[PRE45]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: We can determine who was the last person to log on by typing `last:`
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过输入`last:`来确定最后登录的人是谁。
- en: '[PRE46]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: It looks like there are no actual user logins. As indicated in the previous
    output, reboots are also displayed when using the `last` command.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来没有实际的用户登录。如前面的输出所示，使用`last`命令时也会显示重新启动。
- en: 'One method of determining if there are any local user accounts that have accessed
    the system recently is to use `lastlog` which will present a listing of all user
    accounts and the time they last logged in:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 确定最近是否有任何本地用户帐户访问系统的一种方法是使用`lastlog`，它将列出所有用户帐户和他们最后登录的时间：
- en: '[PRE47]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: From the output we can determine that the users `john` and `harold` have both
    logged into the system. One logged in from the `192.168.1.100` network, the other
    from `192.168.75.12`. Once we get the passwords from these two accounts we should
    first determine if these systems are within scope of our test, and if they are,
    we should attempt to log into any available services using the credentials we
    collect from the Kioptrix machine.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中我们可以确定用户`john`和`harold`都已经登录到系统。一个是从`192.168.1.100`网络登录的，另一个是从`192.168.75.12`登录的。一旦我们从这两个帐户中获取了密码，我们应该首先确定这些系统是否在我们测试的范围内，如果是的话，我们应该尝试使用我们从Kioptrix机器收集到的凭据登录任何可用的服务。
- en: 'While we are at it the SSH keys should be enumerated as well. We can take a
    look in the `/root/.ssh` directory to see if there is any indication that any
    such keys exist:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在此期间，我们还应该枚举SSH密钥。我们可以查看`/root/.ssh`目录，看看是否有任何迹象表明存在这样的密钥：
- en: '[PRE48]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'In this case there are no SSH keys available on the Kioptrix machine. Let''s
    take a look at our BackTrack machine and see if the result is similar. Ideally,
    you would find the keys needed to connect to a remote machine. Note: This machine
    must have connected to other machines via SSH.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，Kioptrix机器上没有可用的SSH密钥。让我们看看我们的BackTrack机器，看看结果是否类似。理想情况下，你会找到连接到远程机器所需的密钥。注意：这台机器必须通过SSH连接到其他机器。
- en: '[PRE49]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Once we have the basics out of the way we need to collect the `/etc/passwd`
    and shadow files so that we can try our luck at cracking the passwords:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们把基本工作做完，我们需要收集`/etc/passwd`和shadow文件，这样我们就可以尝试破解密码了。
- en: '[PRE50]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The shadow file contains all of the hashed user account passwords. We will need
    to unshadow these passwords for them to be useful to us.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: shadow文件包含了所有的哈希用户帐户密码。我们需要将这些密码解密才能对我们有用。
- en: Note
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Using a third party to crack passwords for your client is NOT a good idea unless
    your client fully understands that you are sending the passwords to an environment
    that you have no control over and realizes the inherent risk in such a process.
    If this is the case be sure to **"get it in writing**" to ensure you are covered
    if something goes wrong and the passwords are leaked on the net… NOTE: A real
    attacker would have no qualms about sending these files off to an unknown party
    to get cracked, but there are limits to everything and losing control of customer
    data is NOT a good idea. After all, unlike the real world attacker, you should
    care about the safety of the environment you are testing!'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 使用第三方来破解客户的密码并不是一个好主意，除非你的客户完全明白你正在将密码发送到一个你无法控制的环境，并意识到这一过程中的固有风险。如果是这种情况，请确保**"书面确认"**以确保如果出了问题密码泄露到网络上，你有所覆盖……注意：一个真正的攻击者会毫不犹豫地将这些文件发送给一个未知的第三方进行破解，但是一切都有限度，失去对客户数据的控制并不是一个好主意。毕竟，与真实世界的攻击者不同，你应该关心你正在测试的环境的安全性！
- en: Moving the files
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 移动文件
- en: There has been a lot of data to cross the screen at this point. Most often,
    you will want to push this data back to a system that is under your control. Be
    it a compromised system that you have set up internally as a repository, or a
    direct connection back to the attacking system, you will need to come up with
    some method of transferring this data back.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止屏幕上已经有了很多数据。通常情况下，你会希望将这些数据推送回一个在你控制之下的系统。无论是一个你内部设置的受损系统作为存储库，还是直接连接回攻击系统，你都需要想出一些方法将这些数据传回。
- en: Note
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Do not use a production level open web server to store or transfer confidential
    files! The rule of thumb is that you should treat customer data as if it was your
    own, and placing critical password files on an open share or any other uncontrolled
    storage is a **really** bad idea. In a real-life situation you would set up a
    secured transfer mechanism where you have full control over the data. It should
    also be encrypted whenever possible, especially when being routed over the Internet.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 不要使用生产级别的开放Web服务器来存储或传输机密文件！一个经验法则是，你应该把客户数据当作自己的数据来对待，并且将关键的密码文件放在一个开放共享或任何其他不受控制的存储中是一个**非常**糟糕的主意。在现实生活中，你会建立一个安全的传输机制，在这个机制中你对数据有完全的控制。尽可能地，它还应该进行加密，特别是在通过互联网路由时。
- en: 'The Kioptrix machine has an open web server installed so one of the easiest
    methods to get a file back would to be to simply copy it to the `/var/www/html`
    directory which is open to everyone. In the Kioptrix shell type:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: Kioptrix机器安装了一个开放的Web服务器，所以最简单的方法之一是将文件复制到对所有人开放的`/var/www/html`目录中。在Kioptrix
    shell中输入：
- en: '[PRE51]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Pick up the files on BackTrack by typing the following which will create a
    directory named `kioptrixFiles`, change `pwd` to that directory and then pull
    over the files from the Kioptrix web server:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 通过输入以下内容在BackTrack上获取文件，这将创建一个名为`kioptrixFiles`的目录，将`pwd`更改为该目录，然后从Kioptrix
    Web服务器上拉取文件：
- en: '[PRE52]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '`shadow` and `passwd` are both in the BackTrack `kioptrixFiles` directory now.
    Before proceeding we should remove the two files from the web server on the Kioptrix
    machine:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`shadow`和`passwd`现在都在BackTrack的`kioptrixFiles`目录中。在继续之前，我们应该从Kioptrix机器上的Web服务器中删除这两个文件：'
- en: '[PRE53]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: On the BackTrack machine open up a shell and browse to your `/pentest/passwords/john`
    directory where we will use unshadow to combine the Kioptrix `passwd` and `shadow`
    files into `kioptrixPW.db`.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Now that we have the necessary file we can use john to attempt cracking the
    hashes in `kioptrixPW.db`.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that cracking passwords may take a few minutes, hours, or even days depending
    on the complexity of the passwords used...
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: A faster method of accessing the system without using an exploit is to modify
    an existing account. Open up a shell to your Kioptrix machine using the samba
    (or any other exploit that allows root access) and then type the following in
    to change the games account enough to allow login and root access.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Because of the restrictions imposed on us in the reverse shell we use `awk`
    to create a modified version of the file. We change the user and group UID to
    equal that of root and add the `/bin/bash` shell so that we can log in remotely.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Before we change any existing files we should back them up first. This is especially
    important when performing a test for a client.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: We copy the modified test file to overwrite `passwd`.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Changing the permissions back to match those of the original file may prevent
    future complications.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: We add a password to the games account. The current SSH account does not allow
    for blank passwords.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: 'Open up a new terminal on your BackTrack machine and connect back to Kioptrix
    using your new account. Use the password you created for the games account (1funnypassword
    if you followed along exactly):'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: We have connected to the SSH server using the modified games account. All previous
    shell restrictions are now removed and we could use any command on the system
    such as `visudo` without error.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Windows™ post-exploitation
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most environments you test will have many Windows™-based systems. It is important
    to understand where the important files and settings are and also how they can
    be obtained and reviewed when dealing with the restrictions imposed by your exploit
    shell. Here we will discuss the various methods used to obtain this data. We cannot
    account for every operating system or eventuality, but we can provide the basic
    knowledge necessary for someone to get started.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Windows-based operating systems use GPOs that contain almost any piece of data
    you would want, to properly perform post-exploitation information gathering on
    Microsoft Windows operating systems.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to follow along with this section you will need to have:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: 'One registered copy of Microsoft Windows XP SP2: This machine will need an
    additional virtual NIC assigned to the Vlab_1 virtual network as well (192.168.50.0/24).
    If you have followed along with previous chapters you will already have VirtualBox
    assigning IP addresses to that virtual segment.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kioptrix Level 1 connected to Vlab_1 (192.168.50.0/24).
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BackTrack guest machine connected on VLAN1 (192.168.75.0/24).
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pfSense guest machine to provide the VLAN1 network with its DHCP addresses.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All examples will be clearly documented in case you do not have a Windows machine
    available for testing purposes.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: Important directories and files
  id: totrans-291
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There are many important files and directories in a Windows machine. Some of
    these include the following:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: '| **File** | **Path** |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
- en: '| `*.log` | `%WINDIR%\system32\CCM\logs\*.log` |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
- en: '| `AppEvent.Evt` | `%WINDIR%\system32\config\AppEvent.Evt` |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
- en: '| `boot.ini` | `%SYSTEMDRIVE%\boot.ini` |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
- en: '| `default.sav` | `%WINDIR%\system32\config\default.sav` |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
- en: '| `hosts` | `%WINDIR%\System32\drivers\etc\hosts` |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
- en: '| `index.dat` | `Content.IE5\index.dat and other locations` |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
- en: '| `NetSetup.log` | `%WINDIR%\debug\NetSetup.log` |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
- en: '| `ntuser.dat` | `%USERPROFILE%\ntuser.dat` |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
- en: '| `pagefile.sys` | `%SYSTEMDRIVE%\pagefile.sys` |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
- en: '| `SAM` | `%WINDIR%\repair\sam` |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
- en: '| `SecEvent.Evt` | `%WINDIR%\system32\config\SecEvent.Evt` |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
- en: '| `security.sav` | `%WINDIR%\system32\config\security.sav` |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
- en: '| `software.sav` | `%WINDIR%\system32\config\software.sav` |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
- en: '| `system` | `%WINDIR%\repair\system` |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
- en: '| `system.sav` | `%WINDIR%\system32\config\system.sav` |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
- en: '| `win.ini` | `%WINDIR%\win.ini` |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
- en: Using Armitage for post-exploitation
  id: totrans-311
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'At this point we should already be comfortable to using "old school" methods
    of manual exploitation. Understanding the nuts and bolts of how penetration testing
    occurs will increase the ability to troubleshoot more powerful tools when something
    goes wrong. It also allows you to become comfortable enough to eventually create
    your own modules and proof of concept exploit code. The pentesting process does
    not really change from test to test: Enumeration and data gathering, exploitation,
    followed by post-exploitation. There are many different tools and methods that
    can be used to accomplish these tasks however. In this section we will be taking
    advantage of the ease and simplicity of Armitage which according to its website
    and author is a "comprehensive red team collaboration tool for Metasploit…" -
    [www.fastandeasyhacking.com/manual](http://www.fastandeasyhacking.com/manual)
    . Armitage was created by Raphael Mudge and is available to the public at [http://fastandeasyhacking.com/](http://fastandeasyhacking.com/)
    and is also preinstalled on BackTrack. The manual that is freely available at
    the site is well written and easy to follow.'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: 'Open up a new terminal and type:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: This will update the Metasploit framework on your BackTrack machine. You will
    need to be connected to the Internet for this command to work properly.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: This command will invoke the armitage program. When the **Connect..**. window
    appears click on the **Connect** button. When prompted if you would like to the
    Metasploit RPC server choose **Yes**. The first time you run Armitage it may take
    a few minutes to fully load.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: '![Using Armitage for post-exploitation](img/77440S_07_01.jpg)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
- en: Please take a few moments to familiarize yourself with the Armitage graphical
    user interface before continuing.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: Enumeration
  id: totrans-320
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Armitage allows for several methods of gathering data. We will use the nmap
    functionality to review what is on the sample network. In the top Armitage navigation
    bar choose **Hosts** | **Nmap Scan** | **Quick Scan (OS detect)**.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: '![Enumeration](img/77440S_07_02.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
- en: Enter `192.168.75.0/24` to scan the proper VLAN1 subnet.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: '![Enumeration](img/77440S_07_03.jpg)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
- en: The scan will take a few moments to complete. Once it has you will be presented
    with a message stating that your scan is complete and that the **Find Attacks**
    option should be used to…find attacks.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: '![Enumeration](img/77440S_07_04.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
- en: 'If the network is set up properly you should see something similar to the following
    screenshot:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: '![Enumeration](img/77440S_07_05.jpg)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
- en: That's it! We have successfully enumerated the VLAN1 network and our systems
    are displayed graphically within Armitage.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: Exploitation
  id: totrans-330
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Exploitation using Armitage is a breeze and so simple that one has to be very
    careful when selecting targets. After ensuring that the targets enumerated are
    within scope, select **Attacks** | **Find Attacks**. When the process has completed
    you will be presented with a pop up stating that the analysis is complete.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploitation](img/77440S_07_06.jpg)'
  id: totrans-332
  prefs: []
  type: TYPE_IMG
- en: Now it is time to take over this Windows XP machine using the ms08_067 vulnerability.
    Rarely has exploiting a vulnerability been as consistent and easy as this one.
    Right-click on the Windows system icon in the workspace and select **Attack**
    | **smb** | **ms08_067_netapi**.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploitation](img/77440S_07_07.jpg)'
  id: totrans-334
  prefs: []
  type: TYPE_IMG
- en: A configuration menu will appear. Everything will be filled out and ready to
    go. Click on **Launch** to continue.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploitation](img/77440S_07_08.jpg)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
- en: 'If everything worked properly the icon in the workspace will change to resemble
    the following screenshot:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploitation](img/77440S_07_09.jpg)'
  id: totrans-338
  prefs: []
  type: TYPE_IMG
- en: The lightning bolts are a graphical indicator that you have successfully compromised
    this machine.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: Were connected, now what?
  id: totrans-340
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Congratulations, the Windows system has been compromised and we are now able
    to take advantage of the combination of Armitage and Meterpreter to perform our
    post-exploitation processes. By right-clicking the image of the compromised machine
    we are able to select from a large menu of options. Let's begin by reviewing what
    is on the target system by right clicking on the host and choosing **Meterpreter
    <#>| Explore** | **Browse Files**. Not only are we presented with a nice listing
    of files, but it is in an easy to use graphical explorer format. For those of
    us who are more comfortable with a GUI than with the command line this should
    be a breath of fresh air!
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
- en: '![Were connected, now what?](img/77440S_07_10.jpg)'
  id: totrans-342
  prefs: []
  type: TYPE_IMG
- en: 'Using the menu''s we can quickly look at the system processes as well using
    the **Meterpreter 3** | **Explore** | **Show Processes** menu option:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
- en: '![Were connected, now what?](img/77440S_07_11.jpg)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
- en: Regardless of operating system, we still need to know what types of tools we
    have available on the target system. It is also very important that we determine
    what type of system we are interacting with. This can be determined by reviewing
    the running processes, installed software, user history, and more. We will need
    to take advantage of the meterpreter shell to pull some of this data.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
- en: We should start with some of the more basic commands. In Armitage right-click
    on the compromised system and choose **Meterpreter 3** | **Interact** | **Meterpreter
    Shell**. At the meterpreter prompt type `sysinfo`.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
- en: '![Were connected, now what?](img/77440S_07_12.jpg)'
  id: totrans-347
  prefs: []
  type: TYPE_IMG
- en: Well, according to the output we see here, we can determine that we are accessing
    an x86-based Windows XP service pack 2 machine. Let's get some more information
    about the compromised system.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
- en: Networking details
  id: totrans-349
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As with Linux, it is very important to gather networking information as soon
    as possible. Meterpreter allows the use of the `ipconfig` command.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: '![Networking details](img/77440S_07_13.jpg)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
- en: This is definitely the type of information that is a joy to see in the real
    world. This particular system has two distinct network cards, and the possibility
    that the system could be used to explore the 192.168.50.0/24 network is high.
    Before we move on we should take a look at the routing table and other networking
    information.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
- en: '![Networking details](img/77440S_07_14.jpg)'
  id: totrans-353
  prefs: []
  type: TYPE_IMG
- en: The route command eliminates any reservations we may have had that the secondary
    networking card was just a diversion. In order to get a better idea of what we
    have here we should review further details. Let's launch a shell on the compromised
    host. This can be obtained by typing `shell` from the meterpreter console. Open
    up a shell and browse to the `c:\windows\system32\drivers\etc` directory.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: We can take a look at the host file by using the type command which is very
    similar to cat in Unix.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Nothing very interesting here; not every file you find will lead to dramatic
    and exciting discoveries. That aside, it is still very important to be as thorough
    as possible. Penetration testing can be very similar to detective work where you
    are constantly looking for clues that will lead to the next step.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: '![Networking details](img/77440S_07_15.jpg)'
  id: totrans-359
  prefs: []
  type: TYPE_IMG
- en: Tip
  id: totrans-360
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Remember that the type command is to be used just as you would use cat in a
    Unix or Linux based environment.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
- en: Now we need to determine if there are any interesting network connections coming
    from this machine. These connections could very well lead us to our next targets
    and assist us in setting overall priorities. Your time to test the network is
    almost certainly limited and you should focus on the most attractive targets to
    ensure efficiency. Remember to look for more than just gaining shells on machines;
    the business units need to understand their true exposure, not see how many unknown
    systems you could pop.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use `netstat -an` to look at the connections just as we did earlier
    with Linux:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: '![Networking details](img/77440S_07_16.jpg)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
- en: Now we have something interesting. Take a look at the connection between this
    host and `192.168.50.103` on port `80`. Looks like we may have a web server running
    on that machine! This is definitely good news. At this point we seem to have more
    interesting devices on the 192.168.50.0/24 network than we do on the 192.168.75.0/24
    subnet. If the tools exist on the target machine we could already launch a scan
    from this host.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
- en: Finding installed software and tools
  id: totrans-366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'At this point we have already reviewed the local processes, network connections,
    and had access to the file structure. Now we are at the point where we may want
    to take a look at some of the other networks this system has access to and determine
    if nmap or other tools are installed that could be valuable. Here is how we can
    `find` information on a Windows-based operating system. It is a bit of a workaround
    as there does not seem to be a direct replacement for `locate` or `which` available
    on Windows systems:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: This command will pipe all directories into the find command which will look
    for the NMAP string "important" in the filenames regardless of case.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: '![Finding installed software and tools](img/77440S_07_17.jpg)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
- en: Note
  id: totrans-371
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Beware that this command will sometimes lock up Armitage when using BackTrack
    5 R1\. If this is the case you will need to restart Armitage.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: This command will come in handy when trying to find any installed software or
    trying to locate interesting files.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
- en: The simple method of finding installed software on a Windows machine would be
    to take a look at the installed programs especially with desktops; the odds are
    the system has all of the default Windows tools available. What you will be interested
    in are the more obscure items like a TFTP server or a network scanner that you
    can take advantage of.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at the installed programs the old fashioned `reg.exe` way:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'With this command we export the registry information contained in the `HKLM\Software\Microsoft\Windows\CurrentVersion\Uninstall`
    key. We can review the findings directly with the type command:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '![Finding installed software and tools](img/77440S_07_18.jpg)'
  id: totrans-379
  prefs: []
  type: TYPE_IMG
- en: One portion of this file is interesting indeed. Take a look at the virtualbox
    guest additions field. At this point we should begin to understand that we may
    be dealing with a virtualized system. Of course, ideally we would be pulling down
    the ENTIRE registry as it has a tremendous amount of data available that should
    be sifted through on your own machine. There is no sense in staying connected
    to a machine longer than you need to.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-381
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'At this point you should be able to look through the registry and filesystem
    and find what you need in an orderly fashion. If you really want to learn more
    about post-exploitation then I can think of no better place to start than with
    the recent recording of darkoperator''s (Carlos Perez) presentation titled "Tactical
    Post Exploitation" from DerbyCon 2011\. You can find a link to this and many other
    great and interesting presentations at Adrian Crenshaw''s website: [www.irongeek.com](http://www.irongeek.com).'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
- en: Pivoting
  id: totrans-383
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Armitage makes pivoting trivial. We know that there is another network available
    to us from the compromised Windows machine, and now it is just a matter of being
    able to scan the network and launch attacks from this system. There are manual
    methods of accomplishing this, but the simplest is to right-click on the graphical
    representation of the target machine in Armitage and select your **Meterpreter**
    | **Pivoting** | **Setup** option.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
- en: '![Pivoting](img/77440S_07_19.jpg)'
  id: totrans-385
  prefs: []
  type: TYPE_IMG
- en: You will be presented with a menu to select your pivot point. Select `192.168.50.0`
    and click on **Add Pivot**.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: '![Pivoting](img/77440S_07_20.jpg)'
  id: totrans-387
  prefs: []
  type: TYPE_IMG
- en: 'This will add the proper route information to allow you to perform scanning
    and other attacks through the victim machine. Let''s give it a try:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: Select your compromised Windows machine.
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At the top navigation bar choose **Hosts** | **MSF Scans**.
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type in `192.168.50.0/24` and continue. This may take some time.
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Review the findings and choose **Find Attacks** from the top **Attacks** menu
    selection.
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should see something similar to the following screenshot:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: '![Pivoting](img/77440S_07_21.jpg)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
- en: Right-click on your new found hosts and select scan to pull over more information
    about the system. The green lines provide guidance on which systems your pivot
    points are going through. This can be especially useful when dealing with large,
    diverse networks.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-396
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have reviewed the steps necessary to locate and gather information
    from compromised hosts. We have also discussed the risk involved with improper
    preparation and just how important it is that the rules of engagement are agreed
    upon and followed exactly BEFORE any testing occurs. In addition, we have provided
    the base information needed for you to understand the thought process behind post-exploitation
    and what needs to occur to ensure a successful penetration test.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
- en: It is important to remember that there are other commands, tools, and methods
    that should be used when pilfering the target system. Remember to focus on the
    goal and not waste too much time trying to dig into information that will not
    be beneficial to the test. Every testing team (and tester) has a set of commands
    and output formats they prefer, as long as the critical information is found
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: At this point it is advisable to start getting used to logging your work. We
    address reporting more in future chapters, but keep in mind that in order to report
    you will need data. It is also important to have a log of any and all system commands
    you may have run on a remote system, in case there are problems down the road
    or you simply want to repeat the exact test again in the future to see if progress
    has been made in securing the units in question.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will delve into bypassing firewalls and avoiding intrusion
    detection systems. This is important when testing not only the environment, but
    also the response of the security and network staff at a site. We will cover the
    logic behind bypassing intrusion detection systems and also how to mimic commonly
    seen traffic patterns to avoid detection.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
