- en: Mobile Penetration Testing with Kali NetHunter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kali NetHunter is specifically designed to run on the Android mobile platform,
    giving penetration testers a greater degree of flexibility and mobility.
  prefs: []
  type: TYPE_NORMAL
- en: Kali NetHunter has many of the tools we have discussed and some additional tools
    that allow for more mobile penetration testing. In this chapter, we will discuss
    installing Kali NetHunter and how the key tools can be put into action. Finally,
    there will be a discussion of use cases where the NetHunter platform has a significant
    advantage over trying to use a more traditional method of Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we are going to discuss the following:'
  prefs: []
  type: TYPE_NORMAL
- en: An overview of Kali Linux NetHunter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying NetHunter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: General overview of installing NetHunter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tools and techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Human interface device attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this chapter, both OnePlus One and Nexus 4 devices were used to run NetHunter.
    The full list of compatible devices is available at [https://github.com/offensive-security/kali-nethunter/wiki.](https://github.com/offensive-security/kali-nethunter/wiki.)
  prefs: []
  type: TYPE_NORMAL
- en: Kali NetHunter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'NetHunter is the first mobile penetration testing operating system built on
    the open source Android platform. It was a collaborative development between Offensive
    Security and the Kali community member Binky Bear. NetHunter can be installed
    on the following Google Nexus devices: Nexus 5, Nexus 6, Nexus 7, Nexus 9, Nexus
    10, and the OnePlus One. The full list of compatible devices is available at [https://github.com/offensive-security/kali-nethunter/wiki](https://github.com/offensive-security/kali-nethunter/wiki).
    Offensive Security provides a number of NetHunter images based upon the device
    and, in some cases, the year of manufacture.'
  prefs: []
  type: TYPE_NORMAL
- en: Deployment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Due to its size, NetHunter can be deployed in three general ways. Each of these
    leverages tools within the NetHunter platform as well as additional hardware that
    can easily be acquired. These deployment strategies allow penetration testers
    to test a wide range of security measures found in a variety of environments.
  prefs: []
  type: TYPE_NORMAL
- en: Network deployment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The vast majority of the previous chapters have been devoted to the tools and
    techniques available to the penetration tester for testing either remote or local
    networks. These tools require access to these networks through a physical connection.
    NetHunter has the same ability. Utilizing a combination of a USB Android adapter
    and a USB Ethernet adapter, the penetration tester can connect directly into a
    wall jack or, if they are able to gain access to network hardware, directly into
    a switch.
  prefs: []
  type: TYPE_NORMAL
- en: This deployment strategy is good for those testers who may want to surreptitiously
    gain access to areas without the bulk of a laptop. Using a Nexus smartphone or
    even a small tablet, the penetration tester can connect to the physical network,
    compromise a local system and set up persistence there, and move on. This approach
    is also useful when testing the security around publicly available network jacks.
  prefs: []
  type: TYPE_NORMAL
- en: Wireless deployment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: NetHunter includes a great many of the same tools in a portable package. In
    certain penetration tests, the ability to move around a large campus identifying
    networks and capturing wireless traffic for later cracking is made much easier
    with a tablet or smartphone testing platform rather than a laptop.
  prefs: []
  type: TYPE_NORMAL
- en: To deploy NetHunter in such a fashion requires the use of an external antenna
    and a USB to Android adapter. Once connected, these hardware tools allow for the
    full use of NetHunter's wireless tools.
  prefs: []
  type: TYPE_NORMAL
- en: Host deployment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One advantage that the NetHunter platform has over the Kali Linux platform is
    the native USB support found in the Android OS. This gives a penetration tester
    the ability to connect the NetHunter platform directly to hosts such as laptops
    and desktops. This ability allows the penetration tester to utilize tools that
    carry out human interface device attacks. In these attacks, the penetration tester
    is able to leverage tools that allow for connection to host devices and mimic
    what are known as **Human Interface Devices** (**HIDs**). HIDs are devices such
    as keyboards and mice that connect to the host via USB.
  prefs: []
  type: TYPE_NORMAL
- en: HID attacks use this feature to force the host system to perform commands or
    to download payload scripts directly to the system. What makes this attack significantly
    more difficult to stop is that event with data loss prevention controls that do
    not allow USB storage devices to connect, HID devices are allowed.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Kali NetHunter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In general, the process for installing NetHunter involves rooting the device,
    restoring it to a factory image, and then flashing the Kali NetHunter image onto
    the device. You should give yourself an hour to work through the entire process.
    What is presented is an overview, so that you have a good starting point for gathering
    the necessary tools and images.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the resources you will need to root your device,
    place a recovery image, and finally, install the NetHunter image:'
  prefs: []
  type: TYPE_NORMAL
- en: Install the Android SDK toolset on your local system. This is available at [https://developer.android.com/studio/index.html](https://developer.android.com/studio/index.html).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The TWRP recovery image will be used in the process; you can locate that at [https://twrp.me](https://twrp.me).
    [](https://twrp.me)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To root your device from Windows, you will need the specific rooting toolkits.
    Nexus rooting information is available at [http://www.wugfresh.com/nrt/](http://www.wugfresh.com/nrt/)
    and the Oneplus Bacon Root Toolkit can be found at [http://www.wugfresh.com/brt/](http://www.wugfresh.com/brt/). A
    guide on installing NetHunter using a Windows machine is available at [https://github.com/offensive-security/kali-nethunter/wiki/Windows-install](https://github.com/offensive-security/kali-nethunter/wiki/Windows-install).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The NetHunter images are available at [https://www.offensive-security.com/kali-linux-nethunter-download/](https://www.offensive-security.com/kali-linux-nethunter-download/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure that you follow directions carefully and in the correct order. There
    is no rushing in this process.
  prefs: []
  type: TYPE_NORMAL
- en: NetHunter icons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once NetHunter has been installed on your device, there are two icons that
    are installed as part of the image. You will find these in the Apps menu. You
    will be utilizing these icons quite extensively, so I recommend you move them
    to the top-level screen. The first icon is the Kali NetHunter menu. This menu
    includes configuration settings and tools that are commonly used in penetration
    testing. First, click on the NetHunter icon:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/96471e97-baa3-4583-b79b-14c15394907f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You will be brought to a home screen with a list of tools, along with the some
    of the configuration setting menus. The one menu that we want to examine now is
    the Kali Services menu. This menu allows you to configure the different services
    available on NetHunter without having to use the command line:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5b49e14e-0a6b-4170-bbc1-ef049bc3d94f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In this menu, you can configure a number of services to start on boot or to
    toggle on and off depending on your specific requirements. Two specific services
    that we have covered in other chapters include the Apache web server and the Metasploit
    service. Both of these can be started from this menu:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/94852bbb-ed2d-47e4-8a68-483157ece7cc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In addition to the menu options, NetHunter has an icon for accessing the command
    line. To access the Terminal, click on NetHunter Terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f8c748fe-b808-4537-ad1e-961ff0156751.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This will then open the Command Prompt, which looks like the standard interface
    that we have seen throughout the previous chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/de7cfd46-6aba-451b-bd93-e35d1c2baf60.png)'
  prefs: []
  type: TYPE_IMG
- en: The three vertical dots in the upper-right corner will allow you to access options
    that allow you to use special keys, access the help menu, and set your preferences,
    among other options. In addition, Kali NetHunter comes preconfigured with Hacker's
    Keyboard. Navigate to the Apps pages in the tablet menu. You will find an icon
    for Hacker's Keyboard. This keyboard is a little more user-friendly, which is
    useful when using the command line.
  prefs: []
  type: TYPE_NORMAL
- en: NetHunter tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Because it is based on the Kali Linux OS, many of the tools that we have explored
    over the previous chapters are part of the NetHunter platform. As a result, the
    same commands and techniques can be employed during a penetration test. In the
    next section, we will address two tools that are the most often utilized in penetration
    testing, as well as examining some of the additional tools that can be made part
    of an individual NetHunter platform.
  prefs: []
  type: TYPE_NORMAL
- en: Nmap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One of those tools that is most often used and which we have covered in detail
    is Nmap. While you can run Nmap at the command line in NetHunter with all of the
    same features as Kali Linux, the NetHunter Nmap screen cuts down on the effort
    necessary to enter those commands. To get to NMAP, click on the NetHunter icon
    and then navigate to Nmap. Here we have the interface that allows us to enter
    a single IP address, a range, or CIDR notation. In this case, we are going to
    use a single IP address for a router:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/abb9cbb2-cf70-482a-b210-44be392d74d5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The NetHunter interface allows you to set the type of NMAP scan, operating
    system detection, service detection, and support for IPv6\. There is also the
    ability to set specific port scanning options. Penetration testers can set the
    scanning to their own specifications or choose the NMAP app options to limit their
    port scanning:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f2854514-91e3-436b-bf56-5ce172d92e83.png)'
  prefs: []
  type: TYPE_IMG
- en: 'By clicking on Select timing template, the scan timing can be set. Just as
    with the command-line version of NMAP, the timing of the scan can be tailored
    to the situation. Finally, the type of scan can be set as well. Clicking on Select
    scan techniques brings up the options for the types of scans that are available.
    This includes options such as a SYN or TCP scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9e74cead-3a83-480d-9e71-409c152a9268.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the scan is configured to run, hit the SCAN button. NetHunter will open
    a command window and run the scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/92bc430b-3e5d-4dad-8964-9eca6bd52a65.png)'
  prefs: []
  type: TYPE_IMG
- en: The GUI included with NetHunter is excellent for running simple scans such as
    this. For more detailed scans or the use of scripts, you will have to shift to
    the command-line version of NMAP.
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the number of powerful penetration testing tools that we have discussed
    in previous chapters is Metasploit. The Metasploit framework is included with
    NetHunter and functions in exactly the same way as Kali Linux. For example, let's
    use the NetHunter platform to attempt to leverage a backdoor vulnerability in
    a target system running Metasploitable.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we click on the NetHunter Terminal icon and then type the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We are going to be leveraging the backdoor vulnerability in the IRC daemon
    in Metasploitable. As a result, we will use the `unreal_ircd_3281_backdoor` exploit.
    We enter the following into the command line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we set the remote host to our Metasploitable machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we run the exploit. The following screenshot shows the output of the
    preceding commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/218e5ae8-bd57-4579-871d-fec195655ffc.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the exploit is triggered, we can run the `whoami` command and identify
    this as a root command shell. As we can see through this example, NetHunter has
    the same functionality in terms of the Metasploit framework as the Kali Linux
    OS. This allows the penetration tester to utilize the NetHunter platform to carry
    on attacks in a smaller and more portable platform. One drawback to utilizing
    the Metasploit framework is entering commands on the tablet or phone.
  prefs: []
  type: TYPE_NORMAL
- en: 'Just as in Kali Linux, NetHunter also includes the Msfvenom Payload Creator
    for Metasploit. This GUI can be utilized to generate custom payloads for use with
    the Metasploit framework. To access this tool, click the NetHunter icon and then
    navigate to Metasploit Payload Generator. You will be brought to the following
    menu:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6f51441f-0ee6-4908-aada-81fb869f5291.png)'
  prefs: []
  type: TYPE_IMG
- en: From this menu, we have the same options that we saw with the Kali Linux version
    of Msfvenom. In addition, this GUI allows us to create the specific payloads and
    save them to the SD card for further use.
  prefs: []
  type: TYPE_NORMAL
- en: Another tool within NetHunter that can be used together with Metasploit is Searchsploit.
    This tool queries the Exploit Database at [https://www.exploit-db.com/](https://www.exploit-db.com/)
    and allows the user to search for additional exploits that can be used in conjunction
    with those within Metasploit.
  prefs: []
  type: TYPE_NORMAL
- en: MAC changer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Changing the MAC address of the NetHunter platform may be necessary when performing
    attacks against a target wireless network, or in cases where you are connected
    to the physical network. To facilitate this, NetHunter comes installed with MAC
    Changer. To access MAC Changer, click on the NetHunter icon and then on MAC Changer.
    You will be brought to the following screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fb883575-5a08-496c-a8a2-5e3eb487a422.png)'
  prefs: []
  type: TYPE_IMG
- en: MAC Changer allows you to set the hostname to one of your choosing. Setting
    the hostname to mimic the target organization's naming convention allows you to
    mask your activities in the event that there are systems in place that log activity
    on the network. In addition, MAC Changer allows you to set the MAC or allow the
    tool to randomly assign a MAC address for each interface.
  prefs: []
  type: TYPE_NORMAL
- en: Third-party Android applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Along with your NetHunter installation, you should notice six other installed Android
    applications by browsing through your main menu.
  prefs: []
  type: TYPE_NORMAL
- en: The installed applications are the **NetHunter Terminal Application, DriveDroid,
    USB Keyboard, Shodan, Router Keygen**, and **cSploit**. Although these third-party
    applications are listed as a work-in-progress within the NetHunter documentation,
    I've found that they all work. Depending on your mobile device and its hardware,
    certain apps or features within the apps may not work.
  prefs: []
  type: TYPE_NORMAL
- en: The NetHunter Terminal Application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Much like the Terminal within Kali and NetHunter, the NetHunter Terminal Application
    allows the user to choose between various types of terminals, including a Kali
    Terminal, an Android Terminal and an AndroidSU (root Android) Terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/609e26bf-a5c5-450f-b3c9-1e18eeee1e32.png)'
  prefs: []
  type: TYPE_IMG
- en: DriveDroid
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DriveDroid allows your Android device to emulate a bootable flash drive or DVD.
    The device itself can then be used as bootable media (such as a bootable flash
    drive) when booting from a PC.
  prefs: []
  type: TYPE_NORMAL
- en: 'The DriveDroid app allows the user to choose from locally stored or downloaded
    OS images (`.iso`) when creating the bootable Android drive. DriveDroid can also
    be downloaded directly from the Google Play store at [https://play.google.com/store/apps/details?id=com.softwarebakery.drivedroid&hl=en](https://play.google.com/store/apps/details?id=com.softwarebakery.drivedroid&hl=en):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d25822b1-6412-4075-9cb4-8ed1d9f1cee5.png)'
  prefs: []
  type: TYPE_IMG
- en: USB Keyboard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This feature, as the name suggests, allows for the use of a USB keyboard. The
    ability to use this feature may depend on the model of the Android device being
    used.
  prefs: []
  type: TYPE_NORMAL
- en: Shodan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Shodan tool, commonly known as the hacker's search engine, also comes in
    a mobile version for NetHunter users. Use of the Shodan app also requires an API
    key, which you have already been assigned if you signed up for an account in [Chapter
    4](3f028d3d-19bd-4fcf-85d3-6b3f72afdba1.xhtml), *Footprinting and Information
    Gathering*. Visit [http://www.shodan.io](http://www.shodan.io) and log in (or
    sign up) to view your API key at the top-right corner of the browser. Enter the
    API key into the Shodan app on your mobile device when prompted.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you''ve acquired and entered your code, you can use the Shodan app in
    the very same manner as you would within a browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4402a6c4-f89c-43ee-9330-d8f6d721f105.png)'
  prefs: []
  type: TYPE_IMG
- en: Router Keygen
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Router Keygen is a key generator for routers that support WEP and WPA encryption.
    The app first scans Wi-Fi networks to try to determine whether the attack is supported
    or unsupported:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f97fe1c5-cc49-4754-ae0f-8c04dd94a620.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Tapping on a supported network generates keys that may possibly be used to
    connect to routers and networks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/89d5c1eb-cd0b-4c06-9be6-7c664d60f76a.png)'
  prefs: []
  type: TYPE_IMG
- en: Router Keygen can also be directly downloaded from the Google Play store at
    [https://play.google.com/store/apps/details?id=io.github.routerkeygen&hl=en_US](https://play.google.com/store/apps/details?id=io.github.routerkeygen&hl=en_US).
  prefs: []
  type: TYPE_NORMAL
- en: cSploit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The cSploit app allows for easy information-gathering, session-hijacking, and
    **Denial-of-Service** (**DoS**) and **Man-in-the-Middle** (**MitM**) attacks,
    with the tap of a button. Upon startup, cSploit first prompts the user to select
    a target network. The user is then presented with several modules, as seen in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4fe39d02-f51e-412e-8c9b-889e3c0ab99f.png)'
  prefs: []
  type: TYPE_IMG
- en: This tool is rather impressive considering that all modules can be run from
    a mobile device and  can be hidden on the penetration tester's person or easily
    concealed while the attacks are carried out for as long as the battery lasts.
  prefs: []
  type: TYPE_NORMAL
- en: Wireless attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the distinct advantages to using the NetHunter platform is its size and
    the ability to be discreet. This is a useful advantage if you are tasked with
    testing the wireless security of a site while trying to maintain a level of covertness.
    Sitting in the lobby of a target location with your laptop open and external antenna
    attached may attract some unwanted attention. Rather, deploying NetHunter on a
    Nexus 5 phone and having a discrete external antenna hidden behind a newspaper
    or day planner is a better way to keep a low profile. Another key advantage of
    the NetHunter platform in conducting wireless penetration testing is the ability
    to cover a wider area, such as a campus environment, without having to cart around
    a large laptop.
  prefs: []
  type: TYPE_NORMAL
- en: Wireless scanning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As was discussed in the previous chapter, identifying wireless target networks
    is a critical step in wireless penetration testing. There are tools that are contained
    within the NetHunter platform that can perform wireless scanning and target identification.
    There are also third-party applications that have the added benefit of a user-friendly
    interface that can often gather the same, or more detailed, information about
    a possible target network.
  prefs: []
  type: TYPE_NORMAL
- en: 'NetHunter includes the Aircrack-ng suite of tools that was discussed in [Chapter
    11](0c6d1d6c-d447-4672-9647-e6f6d4a8ea0d.xhtml)*,* *Wireless Penetration Testing*,
    and works in the same way from the command line. Here, we  will open up a command
    shell and type in `airoddump-ng` to identify potential target networks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/54dada2f-d77f-4130-84f2-14201ba8156a.png)'
  prefs: []
  type: TYPE_IMG
- en: Just as in the Kali Linux OS, we are able to determine the BSSID, the channel,
    and the SSID that is being broadcast.
  prefs: []
  type: TYPE_NORMAL
- en: WPA/WPA2 cracking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we previously discussed, the Aircrack-ng suite of tools that we examined
    in [Chapter 11](0c6d1d6c-d447-4672-9647-e6f6d4a8ea0d.xhtml)*, Wireless Penetration
    Testing*, is included with NetHunter. This allows us to perform the same attacks
    without any modification to commands or technique. Furthermore, we can utilize
    the same antenna that was used in [Chapter 11](https://cdp.packtpub.com/kali_linux_assuring_security_by_penetration_testing__fourth_edition/wp-admin/post.php?post=377&action=edit#post_343)*,
    Wireless Penetration Testing*, along with the external adapter. The following
    cracking was done against the same access point with the same BSSID that we discussed
    in [Chapter 11](https://cdp.packtpub.com/kali_linux_assuring_security_by_penetration_testing__fourth_edition/wp-admin/post.php?post=377&action=edit#post_343)*,
    Wireless Penetration Testing*. All of this was done with the NetHunter command
    line.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following screenshot, we see the output of the `#airodump-ng -c 6 --bssid
    -w NetHunter` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8f84ff58-f389-4ecd-8e81-9a8f0e11a99b.png)'
  prefs: []
  type: TYPE_IMG
- en: Aircrack-ng is able to grab the four-way handshake, just like the Kali Linux
    version. As we discussed in [Chapter 11](https://cdp.packtpub.com/kali_linux_assuring_security_by_penetration_testing__fourth_edition/wp-admin/post.php?post=377&action=edit#post_343)*,
    Wireless Penetration Testing*, we can then take this four-way handshake and reverse
    the passcode using a preconfigured list. For demonstration purposes, the preconfigured
    list is short.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `#aircrack-ng -w wifipasscode.txt -b 44:94:FC:37:10:6E NetHunter-01.cap` command  produces
    the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f8059557-81b7-471e-a80f-c069606a7198.png)'
  prefs: []
  type: TYPE_IMG
- en: Using the NetHunter keyboard may get a bit tedious in terms of cracking the
    passcode of a target network, but it can be done. Furthermore, this attack is
    useful in situations where sitting with a laptop and external antenna would draw
    undue attention. Another useful technique is to use the NetHunter platform to
    scan and capture the handshake and then transfer the capture file to your Kali
    Linux platform and run the cracking program there. This produces the same results,
    while giving the penetration tester the ability to stay incognito.
  prefs: []
  type: TYPE_NORMAL
- en: WPS cracking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'While typing the commands into the NetHunter keyboard can cause a bit of frustration,
    NetHunter also makes use of the Wifite tool, which we addressed in [Chapter 11](https://cdp.packtpub.com/kali_linux_assuring_security_by_penetration_testing__fourth_edition/wp-admin/post.php?post=377&action=edit#post_343)*,
    Wireless Penetration Testing*. This tool allows us to conduct our attack with
    the simple entering of a number. Open a Kali command shell, and type the `wifite` command,
    and hit Enter. This produces the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c782b594-b89e-405c-ba41-3846062f427f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As we can see, there are some minor differences with the NetHunter output.
    There are two WLAN interfaces: the internal wireless interface and our own external
    antenna. There is also the `P2P0` interface. This the Android OS Peer-to-Peer
    wireless interface. We then put our WLAN1 interface into monitor mode by entering
    in the number `3`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This produces the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8e9afa46-c059-4ce7-925d-0170f144a74c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As in [Chapter 11](https://cdp.packtpub.com/kali_linux_assuring_security_by_penetration_testing__fourth_edition/wp-admin/post.php?post=377&action=edit#post_343)*,
    Wireless Penetration Testing*, we see the same network we tested before. After
    we stop the scan and enter in the number `15` and then *Enter*, Wifite runs the
    same attack as before:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4f6ff15d-e07e-4383-afbf-dee9a1126c71.png)'
  prefs: []
  type: TYPE_IMG
- en: Looking at the preceding screenshot, we can see that we have come up with the
    same WPA and PIN for the wireless network Brenner.
  prefs: []
  type: TYPE_NORMAL
- en: Evil AP attack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An **Evil Access Point **(**evil AP**) attack is a type of wireless MitM attack.
    In this attack, we are attempting to have a target device or devices connect to
    a wireless access point we have set up that masquerades as a legitimate access
    point. Our target, thinking that this is a legitimate network, connects to it.
    The traffic to and from the client is sniffed while it is forwarded to the legitimate
    access point downstream. Any traffic that comes from the legitimate access point
    is also routed through our AP that we have set up and, again, we have the ability
    to sniff that traffic.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram illustrates this attack. On the left is our target''s
    laptop. In the middle is our NetHunter platform. To the right is a legitimate
    access point with a connection to the internet. When the target connects to our
    NetHunter platform, we are able to sniff the traffic before it is forwarded to
    the legitimate access point. Any traffic from the access point is also sniffed
    and then forwarded to the client:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/38679e0c-2c1b-4109-9135-2c43e17adefa.png)'
  prefs: []
  type: TYPE_IMG
- en: This is simply a variation on the MitM attacks we have discussed in the past.
    What makes this different is that we do not need to know anything about the client
    or what network they are on, since we will be controlling the network they use.
    This is an attack that often occurs in public areas that make use of free wireless
    internet, such as airports, coffee shops, and hotels.
  prefs: []
  type: TYPE_NORMAL
- en: Mana evil AP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The tool that we will use in the NetHunter platform is the **Mana Wireless Toolkit**.
    Navigate from the NetHunter icon to Mana Wireless Toolkit. The first page that
    you are brought to is the `hostapd-karma.conf` screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'This allows us to configure our evil AP wireless access point:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1f94fd6f-5ad2-4c6c-acb6-f1f5e97607aa.png)'
  prefs: []
  type: TYPE_IMG
- en: The first consideration is that you will need to ensure you have two wireless
    interfaces available. The Android wireless interface, most likely WLAN0, will
    need to be connected to an access point with internet connectivity. This can be
    controlled by you, or could simply be the free wireless internet available at
    our location. The WLAN1 interface will be our external antenna, which will provide
    the fake access point. Next, you can configure the BSSID to a MAC that mimics
    an actual access point's. In addition, we can also configure the SSID to broadcast
    any access-point identification. The other settings involve attacking using the
    Karma exploit. This is a variation on the evil AP. (For more information, see
    [https://insights.sei.cmu.edu/cert/2015/08/instant-karma-might-still-get-you.html.](https://insights.sei.cmu.edu/cert/2015/08/instant-karma-might-still-get-you.html.))
    We can leave those as default. In this scenario, we will keep the default settings
    and navigate to the three vertical dots and hit Start mana.
  prefs: []
  type: TYPE_NORMAL
- en: 'This will start the fake access point:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/73419b43-828c-4e42-84c6-e3e6fb420aed.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the previous screenshot, we can see the Mana evil AP flushing out cached
    information and setting up a new access point. If we shift over to a device, we
    can see the wireless access point, Free_Internet. Also, we are able to connect
    without any authentication:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f54dee87-5e00-4c40-b369-79fd1a3f6c85.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, in another Terminal on the NetHunter platform, we configure our packet
    capture by configuring a `tcpdump` capture utilizing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This produces the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fec682b0-1e06-4ab1-be6e-efba7626927e.png)'
  prefs: []
  type: TYPE_IMG
- en: As the device that is connected receives and transmits frames, we are able to
    sniff that traffic. An additional option that is available is to capture the traffic
    in the form of a `.pcap` file and then offload it to view it in Wireshark.
  prefs: []
  type: TYPE_NORMAL
- en: This is a useful attack in public areas of a target organization. Another key
    aspect to this attack is that more than one target device can connect. It is important
    to note, though, that if several devices do connect, there is the possibility
    that the traffic will be noticeably slower to the target. Another technique that
    can be used leverages this tool and a vulnerability found in a number of mobile
    devices. Many mobile devices are automatically configured to connect to any previously
    connected-to network. This automatic connection does not look at the MAC address
    of a wireless access point, but rather the SSID that is being broadcast. In this
    scenario, we can call our Mana evil AP a common SSID found at locations. As people
    pass by, their mobile devices will automatically connect, and as long as they
    are in range, they are routing their traffic through our device.
  prefs: []
  type: TYPE_NORMAL
- en: HID attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: NetHunter has several built-in tools that allow you to configure an HID attack.
    In one of these tools, NetHunter leverages the standard command line to perform
    several commands in succession. To access the HID attack menu, click on NetHunter
    and then HID Attacks. Once on the HID Attacks screen, we will see two options.
    One is a PowerSploit attack and the second is the Windows CMD attack. For this
    section, we will look at the Windows CMD attack in detail.
  prefs: []
  type: TYPE_NORMAL
- en: In this scenario, we are going to use the NetHunter platform and connect it
    to a target machine. Our attack will leverage the HID vulnerability to run the
    `ipconfig` command and add a user, `offsec`, to the system using the `net user
    offsec NetHunter! / add` command .
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we will add that user account to the local administrator''s group
    using the command `net localgroup administrators offsec /add`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/44760a39-a9dd-4d4a-a426-694eea22ef5a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we need to set the **User Account Control** (**UAC**) bypass. This allows
    NetHunter to run the command line as administrator. Click on UAC Bypass to configure
    it for the proper Windows OS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eb68834f-70bb-4c59-855f-94ba7da8164b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In this case, we are attempting the HID attack against a Windows 10 OS, so
    we will set UAC Bypass to Windows 10:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/96f649fb-69a7-49e2-8241-0f849241faaa.png)'
  prefs: []
  type: TYPE_IMG
- en: After configuring UAC Bypass, insert the USB cable into the target machine.
    Click on the three vertical dots and click Execute Attack.
  prefs: []
  type: TYPE_NORMAL
- en: 'As the attack begins to execute, you will see the target machine go through
    the process of opening Command Prompt as administrator. It will then execute the
    commands that have been set in NetHunter. Here we see the first command, `ipconfig`,
    having been run:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fcccd6b5-5f8a-4243-892c-0046cc932ec3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we see that the `offsec` user has been entered with the associated password.
    The user account has now been entered into the local administrator''s group on
    the target machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fe042a8b-9736-4de0-8bd9-e23aa334cb47.png)'
  prefs: []
  type: TYPE_IMG
- en: This attack is useful if you are physically within a location and observe open
    workstations. You can configure a number of different commands and then simply
    connect your NetHunter platform to the system and execute. This can include more
    complex attacks using PowerShell or other scripting attacks.
  prefs: []
  type: TYPE_NORMAL
- en: DuckHunter HID attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A DuckHunter HID attack converts USB Rubber Ducky scripts into NetHunter HID
    attacks as seen previously. USB Rubber Ducky scripts can be downloaded from Hak5's
    very own Darren Kitchen's GitHub page at [https://github.com/hak5darren](https://github.com/hak5darren)
    and loaded into the NetHunter HID tool in the Convert tab.
  prefs: []
  type: TYPE_NORMAL
- en: 'Payloads include (but are certainly not limited to) the following:'
  prefs: []
  type: TYPE_NORMAL
- en: WiFi key grabber
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reverse Shell with Persistence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrieve SAM and SYSYTEM from a live filesystem
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Netcat Reverse Shell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OSX Local DNS Poisoning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Batch Wiper/Drive Eraser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wifi Backdoor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Kali NetHunter platform has a great deal of functionality in relation to
    its size. The most distinct advantage for the penetration tester is that the tools
    and techniques, with some variation, are basically the same in both Kali Linux
    and NetHunter. This reduces the necessary time to learn a new set of tools, while
    giving the penetration tester the ability to run penetration tests from a phone
    or tablet. This allows the tester the ability to get closer to a target organization,
    while allowing for some ability to obfuscate some of their actions. Adding attacks
    such as the HID further allows the penetration tester to perform attacks that
    would not be accomplished without other tools. NetHunter is an excellent platform
    to include in your penetration testing kit.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will move on to the **Payment Card Industry Data Security
    Standard** (**PCI DSS**) and discuss scoping, scheduling, segmentation, and various
    tools for carrying out a PCI DSS scan.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What versions of the OnePlus and Nexus phones support Kali NetHunter?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does NetHunter require root access on a mobile device?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What third-party Android applications are included in NetHunter?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What types of wireless encryption are supported by Router Keygen?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are some of the features of the cSploit app?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the name of the MitM wireless attack tool?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What does the DuckHunter HID attack do?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'NetHunter documentation: [https://github.com/offensive-security/kali-nethunter/wiki](https://github.com/offensive-security/kali-nethunter/wiki)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Installing NetHunter on Android devices: [https://www.androidauthority.com/how-to-install-kali-nethunter-android-896887/](https://www.androidauthority.com/how-to-install-kali-nethunter-android-896887/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'DNS spoofing with NetHunter: [https://cyberarms.wordpress.com/category/nethunter-tutorial/](https://cyberarms.wordpress.com/category/nethunter-tutorial/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
