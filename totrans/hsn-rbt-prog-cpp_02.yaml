- en: Introduction to the Raspberry Pi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Initially developed with the idea of teaching and promoting basic computer programming
    in schools across the UK, the **Raspberry Pi** (**RPi**) became an instant hit.
    At a price of just $25 when it was initially released, it became so popular that
    it was, and still is, used by developers, hobbyists, and engineers all over the
    world.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will explore the basic idea of a Raspberry Pi. You will
    then learn to install an operating system on the device. Finally, you will configure
    Wi-Fi on your Raspberry Pi and learn to connect it to a laptop over Wi-Fi and
    set up a remote desktop.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will achieve each of these objectives through the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Raspbian OS on a Raspberry Pi 3B+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting a Raspberry Pi 3B+ to a laptop via Wi-Fi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Raspbian OS on a Raspberry Pi Zero W
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting a Raspberry Pi Zero W to a laptop via Wi-Fi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this chapter, the following software and hardware will be required.
  prefs: []
  type: TYPE_NORMAL
- en: Software required
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please download the following software if you want to follow along with the
    instructions in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Raspbian Stretch**: Raspbian Stretch is the **operating system** (**OS**)
    that we will write to a microSD card. Stretch is the OS that will run our Raspberry
    Pi. It can be downloaded from [https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/) This
    OS is developed specifically for the Raspberry Pi.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Balena Etcher**: This software will format the microSD card and write the
    Raspbian Stretch image to the microSD card. It can be downloaded from [https://www.balena.io/etcher/](https://www.balena.io/etcher/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PuTTY**: We will use PuTTY to connect our Raspberry Pi to a Wi-Fi network
    and find the IP address that the Wi-Fi network assigns to it. It can be downloaded
    from [https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html](https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VNC Viewer**: With VNC Viewer, we will be able to view the Raspberry Pi display
    on our laptop. It can be downloaded from [https://www.realvnc.com/en/connect/download/viewer/](https://www.realvnc.com/en/connect/download/viewer/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bonjour**: This is generally used to connect printers to computers over Wi-Fi.
    It can be downloaded from [https://support.apple.com/kb/DL999?viewlocale=en_MY&locale=en_MY](https://support.apple.com/kb/DL999?viewlocale=en_MY&locale=en_MY).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Notepad++**:  We will need Notepad++ to edit the code in the Raspbian Stretch
    image. It can be downloaded from [https://notepad-plus-plus.org/download/v7.5.9.html](https://notepad-plus-plus.org/download/v7.5.9.html).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Brackets:** Brackets allows those using macOS to edit the code in the Rapbian
    Stretch image. To download Brackets, go to [http://www.brackets.io/](http://www.brackets.io/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The installation of all of this software is pretty straightforward. Keep the
    default settings checked, click on the Next button a few times, and then hit the
    Finish button once the installation is complete.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We need the following hardware to follow along with the instructions in this
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: For Raspberry Pi 3B+ and Raspberry Pi Zero W
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you use the Raspberry Pi 3B+ or the Raspberry Pi Zero W, you will need the
    following hardware:'
  prefs: []
  type: TYPE_NORMAL
- en: Keyboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mouse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SD card—this should have a minimum of 8 GB of storage, but 32 GB is recommended
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MicroSD card reader
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Display unit—a computer monitor or TV that contains an HDMI port
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HDMI cable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5V mobile charger or power bank. This will power the Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additional hardware for Raspberry Pi 3B+
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Raspberry Pi 3B+ needs the following additional hardware:'
  prefs: []
  type: TYPE_NORMAL
- en: An Ethernet cable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additional hardware requirements for Raspberry Pi Zero W
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Since the Raspberry Pi Zero has a micro USB port and a Micro HDMI port, it
    needs the following additional hardware:'
  prefs: []
  type: TYPE_NORMAL
- en: A USB hub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A micro USB B-to-USB connector (also known as an OTG connector)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An HDMI-to-mini HDMI connector
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the Raspberry Pi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Raspberry Pi is a credit card sized, Linux-based minicomputer invented by the
    Raspberry Pi Foundation in 2012\. The first Raspberry Pi model was called the
    Raspberry Pi 1B, which was then followed by the Model A. Raspberry Pi boards were
    initially intended to promote computer science programs in schools. However, their
    inexpensive hardware and free, open source software, quickly made the Raspberry
    Pi popular among hackers and robotics developers.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi can be used as a fully functional computer. It can be used
    to perform tasks such as browsing the internet, playing games, and watching HD
    videos, as well as creating Excel and Word documents. But what really differentiates
    it from a normal computer is its programmable GPIO pins. The Raspberry Pi consists
    of **40 digital I/O GPIO pins** that can be programmed.
  prefs: []
  type: TYPE_NORMAL
- en: In simple terms, the Raspberry Pi can be thought of as a combination of a **minicomputer**, as
    it can be used as a fully fledged computer, and an **electronics hardware board**,
    as it can be used to create electronics and robotics projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are different Raspberry Pi models. In this book, we are going to be using
    the following two models:'
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi 3B+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Raspberry Pi Zero W
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Raspberry Pi 3B+
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Raspberry Pi 3B+ was released in February 2018\. Its specifications are
    shown in the following annotated photo:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d87e50ec-5758-46d0-81c4-401e7b15204c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Raspberry Pi 3B+ specifications are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A Broadcom BCM2837 quad-core 1.4 GHz processor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1 GB RAM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Broadcom VideoCore GPU
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluetooth 4.2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dual-band 2.4 GHz and 5 GHz Wi-Fi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Ethernet port
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storage with a microSD card via a microSD slot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 40 programmable GPIO pins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Four USB 2.0 ports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An HDMI port
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A 3.5 mm audio jack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Camera Serial Interface** (**CSI**), used for connecting the Raspberry
    Pi Camera directly to the Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Raspberry Pi Zero W
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If we were looking for a smaller-sized version of the Raspberry Pi, we could
    instead opt for the Raspberry Pi Zero W. The **W** stands for **wireless**, as
    the Raspberry Pi Zero W has built-in Wi-Fi. The following is an annotated photo
    of the Raspberry Pi Zero W:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e31c570f-5732-4288-b40e-2795b7fa6ada.png)'
  prefs: []
  type: TYPE_IMG
- en: The Raspberry Pi Zero W model costs around $10\. There is also Raspberry Pi
    Zero, without the **W**, which costs around $5, but this does not have built-in
    Wi-Fi, which makes it very difficult to connect it to the internet. The Raspberry
    Pi Zero W, which was released in 2017, is basically an updated version of the
    Raspberry Pi Zero, released in 2015.
  prefs: []
  type: TYPE_NORMAL
- en: Later on in this book, when we design our robot, we will learn how to upload
    a program wirelessly to our Raspberry Pi from a laptop via a Wi-Fi network. If
    you opt to purchase the smaller version of Raspberry Pi, I recommend that you
    go with Raspberry Pi Zero W instead of Raspberry Pi Zero, for ease of use.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi Zero W has a couple of disadvantages, due to its small size.
    Firstly, it's a bit slower than the Raspberry Pi 3B+. Secondly, if we want to
    use it as a minicomputer, we would need to purchase different extensions to connect
    peripherals such as a keyboard, a mouse, or a monitor. If we are going to use
    the Raspberry Pi Zero W for building electronics and robotics projects, however,
    we don't need to worry about this drawback. Later on in this book, we will learn
    how to connect the Raspberry Pi Zero W to a laptop via Wi-Fi and how to use the
    laptop to control it as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'The specifications of the Raspberry Pi Zero W are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A Broadcom ARM11 1 GHz processor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 512 MB RAM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Broadcom VideoCore GPU
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluetooth 4.0
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dual-band 2.4 GHz and 5 GHz Wi-Fi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storage with a microSD card via a microSD slot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 40 programmable GPIO pins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A mini HDMI port
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Camera Serial Interface** (**CSI**), used for connecting the Raspberry
    Pi Camera directly to the Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up a Raspberry Pi 3B+ as a desktop computer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To set up the Raspberry Pi 3B + and install the Raspbian OS on it, we will
    need various hardware and software components. The hardware components include
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A laptop to install Raspbian OS on a microSD card.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A keyboard.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A mouse.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card—a minimum of an 8 GB memory card is more than sufficient, but with
    an 8 GB card, the default OS will occupy 50 percent of memory card space. Later
    on in this chapter, we will also install OpenCV on your Raspberry Pi, and since
    OpenCV will also occupy a lot of space on your memory card, you will need to uninstall
    some default software. So, I recommend you use a 16 GB or 32 GB memory card—with
    a 32 GB memory card, the default OS only occupies 15 percent of the card's space.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card reader.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A display unit—this can be a computer monitor or TV, as long as it features
    an HDMI port.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An HDMI cable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A mobile charger or a power bank to power the Raspberry Pi.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The software components required include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Etcher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raspbian Stretch with Desktop OS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we know what we need to install the OS, let's start installing it.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Raspbian OS on an SD card
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To install Raspbian OS on a microSD card, we will first install **Etcher** on
    our computer. After that, we will insert the microSD card into a microSD card
    reader and connect it to our computer.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and installing Etcher
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Etcher will first format the microSD card, and then write the Raspbian Stretch
    image to it. Let''s start by installing Etcher:'
  prefs: []
  type: TYPE_NORMAL
- en: On your browser, go to [http://www.etcher.io/](http://www.etcher.io/)[.](https://etcher.io/)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select your OS from the drop-down menu. Etcher will start downloading, as shown
    in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9ee22f37-8a33-436c-b7bf-069930dab9e3.png)'
  prefs: []
  type: TYPE_IMG
- en: Once it has downloaded, open the setup file and install Etcher.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that Etcher is set up, let's move on to Raspbian.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the Raspbian Stretch image
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We now have to download an OS to run on our Raspberry Pi. While there are many
    third-party Raspberry Pi OSes available, we will install Raspbian OS. This OS
    is based on Debian and is developed specifically for the Raspberry Pi. The newest
    version is called **Raspbian Stretch**.
  prefs: []
  type: TYPE_NORMAL
- en: 'To download the Raspbian Stretch image, visit [https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/),
    look for the RASPBIAN STRETCH WITH DESKTOP ZIP file, and click on the Download
    ZIP button, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3d3c39bc-2306-43b9-9c27-460cc390a8a5.png)'
  prefs: []
  type: TYPE_IMG
- en: Now that we have a copy of Raspbian Stretch on our laptops, let's move on to
    writing it to our microSD cards.
  prefs: []
  type: TYPE_NORMAL
- en: Writing the Raspbian Stretch image to a microSD card
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After downloading Etcher and the Raspbian Stretch image, let''s write Raspbian
    Stretch to our microSD card:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Insert the microSD card into the microSD card reader, then connect the card
    reader to your laptop via USB:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/41609a9c-de1c-4d5d-9a88-cfc489ba3938.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, open Etcher and click on the Select Image button. After this, select
    the Raspbian Stretch ZIP file and click on Open:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0c8c9c38-7d73-400e-965b-7d22b9689088.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After that, make sure that the microSD card reader drive is selected, as in
    the following screenshot. If any other drive is selected by mistake, click on
    the Change button and select the microSD card drive. Click on the Flash! button
    to write the Raspbian OS to the microSD card:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6ae14275-52e8-409b-bf48-1899fc75dc76.png)'
  prefs: []
  type: TYPE_IMG
- en: The process of writing or flashing an image to an SD card is also called **booting**.
  prefs: []
  type: TYPE_NORMAL
- en: 'It will take around 15-20 minutes for Etcher to flash your SD card with the
    Raspbian OS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f9a8fc7c-04b0-456e-a112-8cf937443d4d.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the OS is written to the SD card, Etcher will automatically eject the microSD
    card reader.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we've written Raspbian Stretch to our microSD card, let's begin setting
    up the Raspberry Pi 3B+.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Raspberry Pi 3B+
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After booting the Raspbian OS from the microSD card, we will set up the Raspberry
    Pi by connecting different peripherals to it, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Insert the microSD card into the SD card slot, which is located on the back
    of the Raspberry Pi 3B+:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c680b739-7f97-4d60-b10b-8a917c02b6b3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Connect the keyboard and mouse to the USB ports of the Raspberry Pi 3B+. It
    is also possible to use a wireless keyboard and mouse:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bb9ea818-6b29-4c02-904d-938160ce10ab.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Raspberry Pi 3B+ contains an HDMI port with which we can connect the RPi
    to a display unit, such as a computer monitor or TV. Connect one end of the HDMI
    cable to the Raspberry Pi''s HDMI port and the other end to a display unit:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/62feef5f-4473-4d77-9cd1-e8e725d72fd7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, to turn the Raspberry Pi on, we need to provide it with power. A typical
    Raspberry Pi requires 5V of power and ideally 2.5A of current. There are two methods
    that we can use to supply power to the Raspberry Pi:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Smartphone charger**: Most smartphone chargers provide a 5V voltage output
    and 2.5A of current output. If you take a closer look at your smartphone charger,
    you will find the maximum voltage and the current output value printed on it,
    as shown in the following photo. On my charger, the current output of 3A indicates
    the maximum current output. The charger, however, will only provide the current
    output as required for the RPi and not the maximum current of 3A. Note that the
    Raspberry Pi contains a micro **USB B** port, so, to connect to the power port
    of Raspberry Pi, we need to connect a micro **USB B** wire to our charger:'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/b223517b-a0cd-42bc-bc52-48f6d9647336.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Power bank or battery bank**: Alternatively, we can use a power bank or a
    battery bank. As mentioned earlier, we need to connect the power bank to the Raspberry
    Pi via micro USB B port, and we also need to make sure that it provides 5V of
    voltage output and around  2.5A of current output:'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/f0e0aa48-b5e6-4a07-aa48-cb4d1b0abd87.png)'
  prefs: []
  type: TYPE_IMG
- en: Once everything is plugged in, turn the display unit on and make sure that you
    have selected the correct HDMI option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, turn on the power supply. You will see the red LED on your Raspberry
    Pi turn on. Wait for around 10-20 seconds for the Raspberry Pi to boot up. Once
    this is done, you will see the following screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ca735791-3548-48e9-8dec-1f41dc681335.png)'
  prefs: []
  type: TYPE_IMG
- en: Now that we've got our Raspberry Pi 3B+ running, let's connect it to the internet.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting the Raspberry Pi 3B+ to the internet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are two methods that we can use to provide an internet connection to
    the Raspberry Pi:'
  prefs: []
  type: TYPE_NORMAL
- en: '**An Ethernet cable**: The Raspberry Pi 3B+ contains an Ethernet port. To provide
    an internet connection via an Ethernet port, simply connect an Ethernet cable
    to it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wi-Fi**: Connecting the Raspberry Pi over Wi-Fi is also pretty straightforward.
    Click on the Wi-Fi icon in the taskbar. Select your Wi-Fi network, enter the correct
    password, and the Raspberry Pi will connect to the desired Wi-Fi network:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/f8526e29-bec4-4d43-b892-dc8ba90389e7.png)'
  prefs: []
  type: TYPE_IMG
- en: After setting up the Raspberry Pi 3B+ as a desktop computer, we can simply open
    any code editor and start writing programs to control motors or LEDs with the
    Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: Since we are going to create a movable robot using the Raspberry Pi, however,
    the desktop computer setup will not work. This is because the display, the keyboard,
    and the mouse, all of which are attached directly to the Pi, will limit its movement. In
    the next section, to be able to use it without these peripherals, we'll look at
    how to connect the Raspberry Pi 3B+ wirelessly to a laptop via Wi-Fi.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting the Raspberry Pi 3B+ to a laptop via Wi-Fi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To connect the Raspberry Pi 3B+ wirelessly to a laptop via Wi-Fi, we first need
    to connect the RPi to a Wi-Fi network with a piece of software called PuTTY. After
    that, we can find out the IP address of the Raspberry Pi and enter that into a
    piece of software called **VNC Viewer** to connect the Raspberry Pi to a laptop.
    In order to perform this task successfully, the Raspberry Pi and laptop must be
    connected to the same Wi-Fi network.
  prefs: []
  type: TYPE_NORMAL
- en: 'The hardware required includes the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**An Ethernet cable**: The Ethernet cable will be attached directly to the
    Ethernet port of the Raspberry Pi 3B+ and the Ethernet port of the laptop. If
    your laptop does not contain an Ethernet port, you will need to purchase a **USB-to-Ethernet**
    connector for your laptop.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Micro USB B wire**: This is a standard Micro USB B wire for connecting the
    Raspberry Pi 3B+ to the laptop.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The software required is **PuTTY****,**  VNC Viewer, and Bonjour.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an SSH file on a microSD card
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After installing the aforementioned software, we need an SSH file on the microSD
    card to enable SSH for the Raspberry Pi 3B+. To do this, perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the drive allotted to the SD card. In our case, this is the `boot (F:)`
    drive. As shown in the following screenshot, there are some files on the microSD
    card:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d35a5892-4f40-4e3e-a93b-5e8db01c8170.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To create the SSH file, right-click in the drive, click on **New**, and select
    a **Text Document**, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/45601b8a-6404-4efb-a43d-4e3ad98d739d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Give this text file the name `ssh` but do not include the `.txt` extension.
    We will get a warning stating that this file will become unstable because it doesn''t
    have an extension. Click on the Yes button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8026d47a-17d1-40c1-9b6e-033eb80accae.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, right-click on the `ssh` file and select the Properties option. Inside
    Properties, click on the General tab. We should see that the **Type of file** is
    set to File. Click OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f34cd446-e408-4474-9ae8-56f49c5e003e.png)'
  prefs: []
  type: TYPE_IMG
- en: After creating an SSH file on a microSD card, remove the card reader from the
    laptop and insert the microSD card into the Raspberry Pi 3B+.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next section, we will look at how to connect the RPi 3B+ to a Wi-Fi
    network. The setup is done on a Windows system. If you have a Mac, then you can
    follow one of the following tutorial videos:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Access Raspbian OS on a Mac**: **[https://www.youtube.com/watch?v=-v88m-HYeys](https://www.youtube.com/watch?v=-v88m-HYeys)**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Access Raspberry display on a VNC Viewer**: **[https://www.youtube.com/watch?v=PYunvpwSwGY](https://www.youtube.com/watch?v=PYunvpwSwGY)**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting the Raspberry Pi 3B+ to a Wi-Fi network using PuTTY
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After inserting the microSD card into the RPi, let''s see how to connect the
    Raspberry Pi to a Wi-Fi network using PuTTY:'
  prefs: []
  type: TYPE_NORMAL
- en: First, connect one end of the Ethernet cable to the Ethernet port of the Raspberry
    Pi, and the other end to the Ethernet port of the laptop.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, power up the Raspberry Pi 3B+ by connecting it to the laptop using a micro
    USB B cable. We will see the red power LED turn on. We will also see that the
    yellow LED of the Ethernet port turns on and blinks continuously.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After that, open the PuTTY software. Inside the Host Name box, type `raspberrypi.local` and
    click on the Open button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ba9cd502-99ba-4e1f-83ea-1b81e8a3d162.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will then see a PuTTY Security Alert message. Click Yes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fcf02cb1-69c2-41c1-9788-96bf1710f627.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inside PuTTY, we will need to enter the credentials of the Raspberry Pi. The
    default login is `pi` and the password is `raspberry`. After entering the password,
    press *Enter*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/721ff4d4-afe5-4325-ac9c-2093f56415ef.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After that, to connect the Raspberry Pi 3B+ to a particular Wi-Fi network,
    enter the `sudo nano /etc/wpa_supplicant/wpa_supplicant.conf` command as shown
    in this screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fbfa565e-ac27-40a2-849b-d0248be43d2a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This command will open the nano editor, which will look as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4bd64bc9-d1ff-45f7-add4-05971e06bbb6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Below the `update_config=1` line, enter the name and password for your Wi-Fi,
    following this syntax:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Make sure that you add the preceding code exactly below the `update_config=1`
    line. The Wi-Fi name and the password should be in double quotes (`""`), as shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/825ccc45-2a16-41dc-9000-3f9d606139f5.png)'
  prefs: []
  type: TYPE_IMG
- en: After entering the Wi-Fi name and password, press the *Ctrl* + *O* keys to save
    the changes. Then, press *Enter.* After that, press the *Ctrl* + *X* keys to exit
    the nano editor.
  prefs: []
  type: TYPE_NORMAL
- en: 'To reconfigure and connect the Raspberry Pi to the Wi-Fi network, enter the
    following command: `sudo wpa_cli reconfigure`*. *If you have connected successfully,
    you will see the type of the interface and an `OK` message:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/dbc7b302-9fff-4ee9-ad45-7d0f830d0c2f.png)'
  prefs: []
  type: TYPE_IMG
- en: We will then need to restart the Raspberry Pi. To do this, type `sudo shutdown
    now`. Once the Raspberry Pi is shut down, close the PuTTY software.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, unplug the USB cable from the laptop.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After that, unplug the Ethernet cable that is connected to the Raspberry Pi
    and the laptop.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Re-connect the USB cable so that the Raspberry Pi turns on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open PuTTY. Inside the Host Name field, enter `raspberrypi.local` again and
    press the Open button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/662db87f-3dc0-40bd-9148-f09eee3f41b2.png)'
  prefs: []
  type: TYPE_IMG
- en: Enter the username and password that we used previously.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the Raspberry Pi is connected to the Wi-Fi network, the Wi-Fi network
    will assign it an IP address. To find the IP address, enter the `ifconfig wlan0`
    command and press *Enter*. You will notice that an IP address has now been assigned:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4888107f-9cca-4fe2-9268-960fe0cba6cd.png)'
  prefs: []
  type: TYPE_IMG
- en: In my case, the IP address is `192.168.0.108`. Please note down your IP address
    somewhere, as you will need to enter it when using the VNC Viewer software.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling the VNC server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To view the Raspberry Pi display, we will need to enable the VNC server from
    the Raspberry Pi configurations window:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To open the configurations window, we need to type `sudo raspi-config` inside
    the PuTTY Terminal and press *Enter*. We can then open the Interfacing Options
    as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d0d96370-7ea7-42df-af94-1f9408c9a25a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can then open the **VNC** options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/da06fd14-da0d-4265-8453-fcba398c6bdd.png)'
  prefs: []
  type: TYPE_IMG
- en: To enable the VNC server, navigate to the Yes option and press *Enter:*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5226edbd-ea63-4b21-b757-1ceb778988ed.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After enabling the VNC server, press Ok:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9c1bbec9-0545-4752-bebe-495150257fa0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Press Finish to exit the Raspberry Pi configuration window:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d1d6425d-a0ea-4629-b882-6276a4df159d.png)'
  prefs: []
  type: TYPE_IMG
- en: After enabling the VNC server, we will open the VNC Viewer software so that
    we can see the Raspberry Pi display.
  prefs: []
  type: TYPE_NORMAL
- en: Viewing the Raspberry Pi output on the VNC Viewer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To view the Raspberry Pi output on the VNC viewer, following the instructions
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: 'After opening the VNC Viewer software, enter the IP address of your Raspberry
    Pi inside the VNC Viewer and press *Enter*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a3332d62-9305-4a35-9e37-8869a4453cb0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You will get a pop-up message stating that VNC Viewer has no record of this
    VNC server. Press Continue:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b5e12eed-984c-4ac6-8cfb-4a5a34be5870.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the username as `pi` and the password as `raspberry`**.** Select the
    Remember password option and press OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1370ca89-f78d-435a-8938-a0e1db4dc753.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We should now be able to view the Raspberry Pi display output inside the VNC
    Viewer software:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bfb0ab7e-fc5d-4da1-981b-987826b75bba.png)'
  prefs: []
  type: TYPE_IMG
- en: Now that we have connected the Raspberry Pi to the laptop via Wi-Fi, there is
    no need to connect the Raspberry Pi to the laptop via a USB cable. Next time,
    we can simply power the Raspberry Pi using a power bank or mobile charger. When
    we select the IP address of our Raspberry Pi, we can view the Raspberry Pi display
    output using the VNC Viewer software.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned already, please make sure that both the Raspberry Pi and the laptop
    are connected to the same Wi-Fi network when using the laptop for remote desktop
    access.
  prefs: []
  type: TYPE_NORMAL
- en: Increase the VNC's screen resolution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After viewing the RPi''s display output in the VNC Viewer, you will notice
    that the screen resolution of the VNC Viewer is small and it does not cover the
    entire screen. To increase the screen resolution, we need to edit the `config.txt`
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter the following command in the terminal window:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, below the `#hdmi_mode=1` code, enter the following three lines:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'After this, press *Ctrl* + *O* and then press *Enter* to save the file. Press
    *Ctrl* + *X* to exit:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7bc3020b-fc6a-4efc-bc8f-7c12a93f1970.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, reboot your RPi to apply these changes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Once rebooted, you will notice that the VNC's screen resolution has increased
    and it now covers the entire screen.
  prefs: []
  type: TYPE_NORMAL
- en: Handling VNC and PuTTY errors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the VNC Viewer, sometimes, when you are selecting the IP address of the
    RPi, you may see the following pop-up error message instead of the RPi display:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a96b0a16-1fb5-4591-9114-419fb5c9a2cd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You may also see the following message:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ca417b88-0a59-4312-ba18-bd6b71ab5021.png)'
  prefs: []
  type: TYPE_IMG
- en: If you get either of these errors, click on the Wi-Fi icon on your laptop and
    make sure that you are connected to the same Wi-Fi network to which the RPi is
    connected. If this is the case, there is a chance that the IP address of your
    RPi has been changed inside the Wi-Fi network, which sometimes happens when a
    new device is connected to the Wi-Fi network.
  prefs: []
  type: TYPE_NORMAL
- en: 'To find the new IP address follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open PuTTY and type `raspberrypi.local` inside the Hostname box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the command `ifconfig wlan0` inside PuTTY's Terminal window. If your IP
    address has changed, you will notice the new IP address in the `inet` option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the new IP address inside VNC Viewer to view the RPi display output.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Sometimes, you may be unable to connect to Putty as well, and you will see
    the following error:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2faf56c7-3679-4f18-af45-0f088a9d4e83.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To solve the preceding error in PuTTY,  follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Connect a LAN cable to the RPi and the laptop.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Power on your RPi and try connecting to putty by entering `raspberrypi.local`
    in the hostname box. With the LAN cable connected to the RPi and the laptop, you
    should be able to access the PuTTY Terminal window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Follow the previous steps to find the RPi's new IP address.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you see the RPi display inside VNC Viewer, you can remove the LAN cable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Setting up the Raspberry Pi Zero W as a desktop computer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As we''ve said, the Raspberry Pi Zero W is a stripped-down version of the Raspberry
    Pi 3B+. The Raspberry Pi Zero W has very limited connections, so in order to connect
    it to different peripherals, we will need to purchase some additional components.
    We will need the following hardware components:'
  prefs: []
  type: TYPE_NORMAL
- en: A keyboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A mouse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A microSD card of minimum 8 GB (recommended 32 GB)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A microSD card reader
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An HDMI cable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A display unit, preferably an LED screen or a TV with an HDMI port
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A mobile charger or a power bank to power the Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A micro USB B-to-USB connector (also known as an OTG connector), which looks
    like the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/a31de9cd-cb94-49d4-ba91-f1f812d1e223.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A mini HDMI-to-HDMI connector, as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/8053b151-a774-4033-8843-adf17be41506.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A USB hub, as pictured here:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/97dc9277-51cb-46a9-887e-1d754e1d5485.png)'
  prefs: []
  type: TYPE_IMG
- en: Now that we know what hardware we require, let's set up our Raspberry Pi Zero
    W.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Raspberry Pi Zero W
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The steps to install the Raspbian OS onto a microSD card are exactly same as
    those listed already for the **Raspberry Pi 3B+** in the section *Installing Raspbian
    OS on an SD card*. Once you have your SD card ready, follow these steps to set
    up the Raspberry Pi Zero W:'
  prefs: []
  type: TYPE_NORMAL
- en: First, insert the microSD card into the SD card slot of the Raspberry Pi Zero
    W.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect one end of the **mini** **HDMI to the HDMI connector** (**H2HC**) inside
    the HDMI port of the Raspberry Pi Zero W, and the other end of H2HC connector
    to the HDMI cable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the OTG connector to the Micro USB data port—not the power port—and
    connect the USB hub to the OTG connector.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the keyboard and the mouse to the USB hub.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect a 5V mobile charger or a battery bank to the power unit's Micro USB
    port.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, connect an HDMI cable to the HDMI port of a TV or a monitor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the mobile charger to your mains supply to power the Raspberry Pi Zero
    W. You will then see the green LED blink for a period of time as the Raspberry
    Pi Zero W turns on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you have connected the HDMI cable to your TV, select the correct HDMI input
    channel. The following annotated photo shows the connections mentioned here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2c3b8857-7884-4530-b5dd-a63dce2bab07.png)'
  prefs: []
  type: TYPE_IMG
- en: Raspberry Pi Zero W Connections
  prefs: []
  type: TYPE_NORMAL
- en: 'It will take around two or three minutes for the Raspberry Pi Zero W to boot
    up. Once it''s ready, you will see the following window on your TV or monitor
    screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a7dc9eb4-3ec4-4dfc-aed6-5d5c4f4bcf65.png)'
  prefs: []
  type: TYPE_IMG
- en: To shut down the Raspberry Pi, press the Raspberry Pi icon and click on Shutdown.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that it's set up, let's connect our Raspberry Pi Zero W to a laptop.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting the Raspberry Pi Zero W to a laptop via Wi-Fi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When the Raspberry Pi Zero first came out in 2015, it didn't have a built-in
    Wi-Fi module, which made it difficult to connect to the internet. Some Raspberry
    Pi developers came up with useful hacks to connect the Raspberry Pi to the internet
    and some companies also created Ethernet and Wi-Fi modules for the Raspberry Pi
    Zero.
  prefs: []
  type: TYPE_NORMAL
- en: In 2017, however, the Raspberry Pi Zero W was launched. This had a built-in
    Wi-Fi module, which meant that Raspberry Pi developers no longer needed to perform
    any DIY hacks or purchase a separate component to add internet connectivity. Having
    built-in Wi-Fi also helps us to wirelessly connect the Raspberry Pi Zero W to
    a laptop. Let's take a look at how this can be done.
  prefs: []
  type: TYPE_NORMAL
- en: The process of connecting Raspberry Pi Zero W to a laptop's Wi-Fi is similar
    to that of Raspberry Pi 3B+. Since the Raspberry Pi Zero W does not have an Ethernet
    port, however, we will have to write a few lines of code inside the `cmdline.txt`
    and `config.txt` files.
  prefs: []
  type: TYPE_NORMAL
- en: Even though `cmdline.txt` and `config.txt` are **text** (**TXT**) files, the
    code in these files does not open properly inside Microsoft's Notepad software.
    To edit these files, we will need to use code editor software, such as Notepad++
    (only available for Windows) or Brackets (available for Linux and macOS).
  prefs: []
  type: TYPE_NORMAL
- en: 'After installing either of these, let''s customize the microSD card as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: In the Raspberry Pi Zero W, we also need to create an SSH file on the microSD
    card. For instructions on how to create an SSH file on the microSD card, refer
    to the section, *Creating an SSH file on a microSD card*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After creating an SSH file, right-click on the `config.txt` file and open it
    in Notepad++ or Brackets. In this case, we will open it in Notepad++:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8426e584-8682-402a-bd99-0d0991e5066f.png)'
  prefs: []
  type: TYPE_IMG
- en: Scroll all the way down to the bottom of this code and add the line `dtoverlay=dwc2`
    at the end. After adding the code,  save and close the file.
  prefs: []
  type: TYPE_NORMAL
- en: Next, open the `cmdline.txt` file inside Notepad++. The entire code inside the
    `cmdline` file will be displayed on one line. Next, make sure that you add only
    one space between the word `consoles` and the word `modules`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/243eda4e-28b8-48d8-95d4-72dc49f8686a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the line `modules-load=dwc2,g_ether` at the end next to the `plymouth.ignore-serial-consoles` code:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, connect the Raspberry Pi Zero W to your laptop using a **data transfer
    USB cable**. Connect the USB cable to the data port of the Raspberry Pi Zero W,
    and not the power port:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/044f7037-35eb-4fa6-ad98-f7c31a263eb4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Make sure that the USB cable that you are connecting to the Raspberry Pi Zero
    W and the laptop supports data transfer. For example, take a look at the following
    photograph:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e7b97117-7b28-4fff-8849-79f41d3bccf7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the preceding photo, there are two similar, but importantly different, cables:'
  prefs: []
  type: TYPE_NORMAL
- en: The small USB cable on the left was included with my power bank kit. This USB
    cable supplies power but does not support data transfer.
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: The USB cables on the right were included with the purchase of a new Android
    smartphone. These do support data transfer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A simple way to check whether your USB supports data transfer or not is to
    connect it to your smartphone and laptop. If your smartphone is detected, this
    means that your USB cable does support data transfer. If not, you will need to
    purchase a USB cable that supports data transfer. The following screenshot shows
    a smartphone being detected by a PC, meaning that the cable in use is a data cable:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8efa878f-b5f0-4b6d-bad2-c8e09ce4bc1a.png)'
  prefs: []
  type: TYPE_IMG
- en: If your USB cable is detected but loses connection frequently, I recommend that
    you purchase a new USB cable. Sometimes, older USB cables do not work properly
    because of wear and tear.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting the Raspberry Pi Zero W to a Wi-Fi network using PuTTY
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To connect the Raspberry Pi Zero W to a Wi-Fi network, refer to the *Connecting
    the Raspberry Pi 3B+ to a Wi-Fi network using PuTTY* section. The steps for connecting
    a Raspberry Pi Zero W to a Wi-Fi network are exactly the same.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling VNC Viewer for Raspberry Pi Zero W
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To enable a VNC Viewer for the Raspberry Pi Zero W, refer to the *Enabling the
    VNC server* section.
  prefs: []
  type: TYPE_NORMAL
- en: Viewing Raspberry Pi Zero W output on VNC Viewer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To view the Raspberry Pi Zero W output in the VNC Viewer, refer to the *Viewing
    the Raspberry Pi output on VNC Viewer* section*.*
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we've looked at how to set up the Raspberry Pi 3B+ and the
    Raspberry Pi Zero W as a normal desktop computer. We also learned how to connect
    a Raspberry Pi to a laptop wirelessly via a Wi-Fi network. You can now control
    a Raspberry Pi remotely from your laptop without needing to connect the Raspberry
    Pi to a keyboard, mouse, and monitor.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will first look at some basic commands for maneuvering
    around the Raspberry Pi OS. We will install a C++ library called Wiring Pi onto
    our Raspberry Pi, and gain an understanding of the pin configurations for this
    library. Finally, we will write our first C++ program and upload it wirelessly
    to our Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which processor is present on the Raspberry Pi 3B+?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How many GPIO pins are present on the Raspberry Pi 3B+?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which software are we using for viewing the Raspberry Pi display output on our
    laptop?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the default username and password of a Raspberry Pi?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the command for accessing the configurations inside the Raspberry Pi?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
