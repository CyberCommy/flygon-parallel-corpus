- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DevOps with Docker outlines the power of containerization and the influence
    this innovation has on development teams and general operations. We also get to
    understand what DevOps really is, the principles involved, and how the process
    contributes to product health, by implementing a Docker workflow. Docker is an
    open source containerization tool that makes it easier to streamline product delivery
    and reduce the time it takes to get from a whiteboard sketch of the business to
    a money-back implementation.
  prefs: []
  type: TYPE_NORMAL
- en: 'The book will provide knowledge of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Docker and DevOps and why and how they integrate
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What containers are, and how to create and manage them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scaling a delivery pipeline and multiple deployments with Docker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Orchestration and delivery of containerized applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Lesson 1](ch01.html "Chapter 1. Images and Containers")*, Images and Containers,*
    shows how Docker improved a DevOps workflow and the basic Docker terminal commands
    that will be used in this book. We will learn the Dockerfile syntax in order to
    build images. We will run containers from images. We will then version images
    and Docker hub and deploy a Docker image to the Docker hub.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Lesson 2](ch02.html "Chapter 2. Application Container Management")*, Application
    Container Management*, explores the docker-compose tool and gives an overview
    of a multi-container application setup. We will then manage multiple containers
    and distribute application bundles. Lastly, we will network with docker-compose.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Lesson 3](ch03.html "Chapter 3. Orchestration and Delivery")*, Orchestration
    and Delivery*, gives us an overview of a Docker Swarm. We will then use the Docker
    engine to create a Swarm and manage services and applications in a Swarm. Finally,
    we will scale services up and down to test for a real-world application scenario.'
  prefs: []
  type: TYPE_NORMAL
- en: Hardware
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book will require the following minimum hardware requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Processor: 1.8 GHz or higher (Core 2 Duo and above)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Memory: Minimum 2GB RAM'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hard disk: Minimum 10 GB'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A stable internet connection (for pulling and pushing images)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Operating System: Windows 8 or higher'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Browser: Google Chrome or Mozilla Firefox (latest updates installed)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker installed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who This Book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is ideal for developers, system architects, junior and mid-level site
    reliability engineers who wish to adopt Docker workflow for consistency, speed,
    and isolation in applications. You need to have a basic knowledge about UNIX concepts
    such as ssh, ports, and logs as we dive into Docker.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "Once
    you have created a new directory, access the directory and create a file called
    `run.js`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the Next button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
