- en: Appendix A. C++ Numerical Libraries for Option Pricing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Implementing financial derivatives in C++ could be a complex task. As we have
    shown in this book, it requires knowledge not only of the mathematical models
    and numerical methods required for their implementation in the forms of C++ code,
    but it also requires the use of reliable support mathematical and financial libraries.
    For example, when you need to obtain random samples from a standard normal distribution
    or when you need to invert a matrix. In these cases, instead of implementing these
    algorithms ex novo, what we can do is make use of numerical libraries that exists
    for this purpose. These contain algorithms that have been used for many years
    and therefore have been validated by many users before. Using these libraries
    will significantly accelerate our implementation of advanced pricing models. Some
    examples of these libraries are mentioned in the upcoming sections.
  prefs: []
  type: TYPE_NORMAL
- en: Numerical recipes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'License: Commercial.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Website: [http://www.nr.com](http://www.nr.com).'
  prefs: []
  type: TYPE_NORMAL
- en: 'A collection of widely used and reliable set of C++ numerical routines can
    be found in the book *"*Numerical Recipes: The Art of Scientific Computing, 3rd
    Edition*"*. These set of routines are regarded as the "gold standard" by the top
    universities and research institutions around the world. There is an excellent
    associated website that can be found at [http://www.nr.com/](http://www.nr.com/).
    The book contains the description of the theoretical background of the routines
    and it gives access to the C++ code. There are more than 400 C++ numerical routines
    covering topics, such as *Solution of Linear Algebraic Equations*, *Matrix Algebra*,
    *Interpolation and Extrapolation*, *Integration*, and *Random Numbers*.'
  prefs: []
  type: TYPE_NORMAL
- en: Financial numerical recipes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'License: Free/GNU.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Website: [http://finance.bi.no/~bernt/gcc_prog/](http://finance.bi.no/~bernt/gcc_prog/).'
  prefs: []
  type: TYPE_NORMAL
- en: This website contains a large number of very useful C++ numerical and financial
    programs that have been developed by Bernt Arne Odegaard. They follow the ANSI
    C++ standard and have a large accompanying manual named *Circa* (250 pages) with
    the formulas used and the references involved. This library can be found at [http://finance.bi.no/~bernt/gcc_prog/](http://finance.bi.no/~bernt/gcc_prog/).
  prefs: []
  type: TYPE_NORMAL
- en: The QuantLib project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'License: Free/GNU.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Website: [http://quantlib.org/](http://quantlib.org/).'
  prefs: []
  type: TYPE_NORMAL
- en: The QuantLib project is a large project offering software for Quantitative Finance.
    It has been used for modeling, trading, and risk management in the financial sector.
    The software is written in C++ and has been subsequently exported to various languages
    such as C#, Objective Caml, Java, Perl, Python, GNU R, Ruby, and Scheme. QuantLib
    has many useful tools including yield curve models, solvers, PDEs, Monte Carlo
    (low-discrepancy), exotic options, VAR, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: The Boost library
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'License: Free/GNU.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Website: [www.boost.org](http://www.boost.org).'
  prefs: []
  type: TYPE_NORMAL
- en: The Boost project offers peer-reviewed portable C++ source libraries that are
    freely available under GNU GPL. These libraries have been created with the intention
    of making them useful and usable across a broad spectrum of applications. Ten
    Boost libraries are included in the C++ Standards Committee's Library Technical
    Report (TR1) and in the new C++11 Standard. Examples include Accumulators, Array,
    Chrono, Filesystem, Geometry, Math, Math/Statistical Distributions, and MPI.
  prefs: []
  type: TYPE_NORMAL
- en: The GSL library
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'License: Free/GNU.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Website: [www.gnu.org/s/gsl/](http://www.gnu.org/s/gsl/).'
  prefs: []
  type: TYPE_NORMAL
- en: The **GNU Scientific Library** (**GSL**) is a numerical library for C and C++.
    The library provides a large variety of mathematical numerical routines, including
    random number generators, special functions, and least-squares fitting. There
    are over 1000 functions in total. Examples of the subject areas covered by the
    library include Complex Numbers, Roots of Polynomials, Special Functions, Vectors
    and Matrices, Permutations, Linear Algebra, Eigensystems, Fast Fourier Transforms,
    Quadrature, Random Numbers, Quasi-Random Sequences, Statistics, Histograms, and
    Monte Carlo Integration.
  prefs: []
  type: TYPE_NORMAL
