- en: Test Your Knowledge Answers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is a declarative UI structure and how does React support this idea?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Declarative UI structures define what the UI component is instead of worrying
    about how it is defined. React supports this idea by allowing components to be
    declared using JSX syntax.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How does React improve rendering performance?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**React has a virtual DOM that compares changes made to components'' data in
    memory, avoiding the browser DOM when possible. React 16 has a new internal architecture
    that allows rendering to be split up into smaller chunks of work and prioritized.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When would you render a fragment?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Fragments are used to avoid having to render unnecessary DOM elements**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Can you use all of the standard HTML tags as JSX elements?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes, React supports this out of the box**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you access child elements from your component?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Child JSX elements are always accessible via the `children` property**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What does the `Fragment` component from React do?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**It acts as a container component by negating the need to render pointless
    elements, such as container divs**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why is it always a good idea to initialize the state of a component?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because if the** `render()` **method expects state values, you need to make
    sure they''re always there to avoid unexpected rendering behavior.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When should you use properties instead of state?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**State should only be used for values that can change. For everything else,
    properties should be used.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is a context in React?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Context is used to avoid transient properties. Contexts are used to share
    common data with a select number of components.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What makes event handlers in React declarative?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**React event handlers are declared as part of the component JSX**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What's a common use of higher-order event handler functions?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**When you have several components that handle the same event, you can use
    a higher-order function to bind the ID of the item being clicked to the handler
    function**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can you pass inline functions to event properties?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes. This is preferable when event handlers are simple one-liners.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why does React use pools of event instances instead of creating new instances
    with each event?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**To avoid invoking the garbage collector to delete unused event instances
    when lots of events are fired in a small amount of time**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why should monolithic React components be avoided?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because they''re difficult to comprehend, and difficult to refactor into
    smaller reusable components later on.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why should you make components functional?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Functional components only rely on property values that are passed to it.
    They don''t rely on state or lifecycle methods, both potential problem sources.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do render props simplify React apps?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**They reduce the number of direct dependencies that a component has, allowing
    you to compose new behavior.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Is `render()` a lifecycle method?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes, `render()` is no different from any other lifecycle method.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following is a valid use of the `componentWillUnmount()` method?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**To cancel an asynchronous action that will fail if the component us unmounted.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which lifecycle method is used by an error boundary component?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`**componentDidCatch()**`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which of the following best describes the `prop-types` package?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**A tool to validate prop values that are passed to components during development.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you validate that a property value is something that can be rendered?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Use the** `PropTypes.node `**validator.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the purpose of the `PropTypes.shape` validator?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**To make sure that an object has certain properties with certain types, ignoring
    any additional properties.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When should you inherit component state?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Only when you have many different components that all share the same state
    structure, but render different output**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is a higher-order component?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**A component that returns another component**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you inherit JSX from a component, what should you override?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You can pass new state values to the inherited component in **`componentDidMount()`**.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `react-router` package is the official package used for routing in React
    apps and therefore, the only option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No,** `react-router` **is the de facto routing solution for React and you
    should use it unless you have a strong reason not to.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What's the difference between Route and Router components?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**A** `Route` **is used to render components based on URL matches and a Router is
    used to declare route-component mappings.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you change only certain parts of the UI as the route changes?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You use** `Route` **components to render content that is specific to any
    given section, based on the provided path property. You can have more than one Route with
    the same path value.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When should you use the `NavLink` component?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**When you want to use the** `activeStyle`** or **`activeClassName`** properties
    to style active links**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you get values from URL paths?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You use the**` : `**syntax to specify that this is a variable and** `react-router `**will
    pass this value into your component as a property**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is the difference between the `render()` function from `react-dom` and
    the `renderToString()` function from `react-dom/server`?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The `render()` function is only used to sync React component content with
    the DOM in a browser. The `renderToString()` function doesn''t require a DOM because
    it renders markup as a string.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Routing on the server is necessary because:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The router on the server will determine that content is rendered based on
    the requested URL. This content is then sent to the browser so that the user perceives
    a faster load time.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What function should you use when reconciling server-rendered React markup with
    React components in the browser?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Always use** `hydrate() `**when the server sends rendered React** **components.
    Unlike** `render()`, `hydrate()` **expects rendered** **component markup and can
    handle it efficiently.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why should React developers consider the mobile-first approach to designing
    their applications?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because targeting mobile devices as the primary display for your application
    ensures that you can handle mobile devices and scaling up to larger devices is
    easier than the other way around.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Does `react-router` integrate well with `react-bootstrap`?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes. Although you''ll want to use the **`react-router-bootstrap`** package
    to make sure that you can add links to the**` NavItem`** and **`MenuItem `**components.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How would you go about rendering lists of items using `react-bootstrap`?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Use **`ListGroup `**and **`ListGroupItem `**components from react-bootstrap.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why should you create an abstraction for `react-bootstrap` form components?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because there are many related components that you need to use for basic
    inputs and creating this abstraction makes life easier.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is the primary goal of React Native?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**To make it easy for React developers to apply what they already know about
    building UI components to building native mobile apps.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Does React Native provide the exact same experience on iOS and Android?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No, iOS and Android have fundamentally different user experiences.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Does React Native remove the need for mobile web apps?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No, there will always be a need for mobile web apps. React Native is there
    for you when you have demand for a native mobile app.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `create-react-native-app` tool was created by Facebook
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No, this is a community-supported tool that follows in the footsteps of **`create-react-app`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why should you install `create-react-native-app` globally?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because this is a tool for generating project boilerplate and isn''t actually
    part of the project**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What's the role of the Expo app on mobile devices?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**It''s a tool that helps developers run their apps on mobile devices during
    development with very little overhead**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The React Native packager is able to simulate both iOS and Android devices
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**It doesn''t do this, but it communicates with iOS and Android simulators
    in order to run the app**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What's the difference between CSS styles and styles used with React Native components?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**React Native shares many style properties with CSS. Style properties are
    expressed as plain object properties in React Native**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why do you need to consider the status bar when designing your layout?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because the status bar can interfere with your components on iOS**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the flexbox model?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The flexbox layout model is used to lay out components in a way that abstracts
    away many small details and automatically flexes in response to layout changes**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is screen orientation a factor when considering your layout options?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes, you always need to make sure there are no surprises in portrait or landscape
    orientation during development**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What's the main difference between navigation in React web apps and React Native
    apps?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Web applications rely on URLs as the central concept for moving around. Native
    apps have no such concept, so it''s up to the developer and the navigation libs
    they use to manage their screens.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What function should be used to navigate to a new screen?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Screen components are passed a navigation property. You should** **use** `navigation.navigate()` **to
    move to another screen.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Does react-navigation handle back button functionality for you?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes. Including the built-in back button on Android systems.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you pass data to screens?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You can pass a plain object as the second argument to** `navigation.navigate()`.
    **The properties are then accessible to the screen via** `navigation.getParam()`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What type of data can the `FlatList` component render?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The `FlatList` expects an array of objects. The `renderItem` property takes
    a function that is responsible for rendering each item.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why is the `key` property a requirement for each data item that's passed to `FlatList`?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**So that the list can do efficient equality checks that help with the rendering
    performance during list data updates.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you render list controls that stay in a fixed position during scrolling?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You can use the** `ListHeaderComponent `**property of** `FlatList`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to you lazily load more data as the user scrolls through your list?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You can provide a function to the `onEndReached` property of `FlatList`.
    This is called when the user nears the end of the list and the function can populate
    the list data with more data.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What's the difference between a progress bar and an activity indicator?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**A progress bar is determinate whereas a progress indicator is used to indicate
    an indeterminate amount of time.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Does the React Native `ActivityIndicator` component work the same on iOS and
    Android?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes, this component is platform agnostic.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How can you use the `ProgressViewIOS` and the `ProgressBarAndroid` components
    in a platform agnostic way?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You can define your own `ProgressBar` component that imports other components
    with platform-specific file extensions.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The geolocation API found in React Native works the same way as the geolocation
    API found in web browsers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes, it''s the same API.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the main purpose of the geolocation API in React Native applications?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**To find the latitude and longitude coordinates of the devices and use those
    values with other APIs to look up useful information such as addresses.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can the `MapView` component show points of interest near the user?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes, this is enabled by default.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you plot points on maps?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**By passing latitude/longitude array data to the `MapView` component as a
    property.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why would you want to change the return key on the virtual keyboard for text
    inputs?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because in some cases, it makes sense to have a search button or something
    else that better matches the context of the input**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which `TextInput` property should be used to mark the input as a password field?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`**secureTextEntry**`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why should you create an abstraction for selection elements?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because of styling challenges between the two platforms**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why should you create abstraction for date and time pickers?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because the components are completely different for iOS and Android**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What's the difference between an alert and a modal?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Alerts are good at inheriting the look and feel of the mobile environment
    whereas modals are regular React Native views that you have total stylistic control
    over.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which React Native component can be used to create a modal view that overlays
    other components on the screen?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The **`Modal `**component**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What's the best way to display passive notifications on Android systems?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You can use the **`ToastAndroid `**React Native API. There''s no good alternative
    on iOS that doesn''t involve rolling your own code.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The React Native Alert API is only available on iOS.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**False**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What's the main difference between user interactions with web applications and
    native mobile applications?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**There is no mouse. Instead, the user interacts with your UI using their fingers.
    This is a fundamentally different experience than using a mouse and needs to be
    accommodated.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you provide the user with touch feedback in React Native?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**By wrapping touchable components with** **the** `TouchableOpacity `**or** `TouchableHighlight `**component.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What makes scrolling in mobile apps so much more complex than web app scrolling?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Scrolling in mobile web apps needs to take into consideration things like
    velocity because the user is interacting with their fingers. Otherwise, the interactions
    feel unnatural.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why would you use the `ScrollView` component to implement swipeable behavior?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Because this is what users are used to in mobile web applications and how
    they learn the controls of the UI.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What types of values does the `source` property of the `Image` component accept?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Image components accept paths to local files and remote image URLs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What should you use as a placeholder while images load?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You should use a placeholder image that makes sense for the context where
    the image is used.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How can you scale an image using the `Image` component?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**By setting the** `width `**and the** `height `**property,** **the** `Image `**component
    will automatically handle scaling the image for you.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is it worth installing the `react-native-vector-icons` package for your app?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes, this package makes thousands of icons available to your app and icons
    are an important tool for communicating intent to users.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why are operations in the `AsyncStorage` API asynchronous?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**To avoid interfering with the responsiveness of the UI.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which `AsyncStorage` API would you use to look up several items at once?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**A combination of `AsyncStorage.getAllKeys()` and `AsyncStorage.multiGet()`.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you get the connectivity status of the device in a React Native application?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You call `NetInfo.getConnectionInfo()` and read the resulting connection
    type.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you respond to a change in connectivity status in a React Native application?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You can listen to the `connectionChange` event by calling `NetInfo.addEventListener(''connectionChange'',
    ...)`.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which of the following best describes Flux?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Flux is an architectural pattern used to control the unidirectional flow
    of data in your app, making changes more predictable.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What's the difference between Flux and Redux?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Redux is an opinionated implementation of Flux concepts that you can use
    to help manage data flow in your application.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you get data from a Redux store into your components?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**You use the` connect()` higher-order function to connection your component
    to the store, using a function that translates store data into component properties.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What's the difference between Redux in a web app and a native mobile app?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**There is no difference.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What's the difference between Relay and other Flux inspired libraries like Redux?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Relay helps scale your Flux architecture by allowing data dependency declarations
    and hiding all of the server communication complexity.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How does Relay simplify the data requirements of React components?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**By colocating the data dependency queries, you can see exactly what data
    your components use without having to sift through code that does the fetching.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do your React components communicate with the server in a Relay based application?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Relay compiles the GraphQL queries that it finds in your components and handles
    all of the GraphQL server communication for you, including caching optimizations.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
