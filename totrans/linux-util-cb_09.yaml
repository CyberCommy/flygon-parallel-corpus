- en: Chapter 9. Automating Tasks Using Cron
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating and running a crontab file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running a command every other week
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reporting the errors from a crontab file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The cron daemon, which is usually started automatically by the OS, looks at
    all of the crontab files once every minute. If the criterion has been met, the
    command is run. In this chapter we show how to create and maintain your crontab
    files using the crontab program.
  prefs: []
  type: TYPE_NORMAL
- en: 'Depending on how your system is set up, cron jobs are permitted (allowed or
    not allowed) based on the user. The files that control this are in `/etc` and
    are named `cron.allow` and `cron.deny`. These are explained in the following section:'
  prefs: []
  type: TYPE_NORMAL
- en: '`cron.allow`: If this file exists, then the user must be listed in it, in order
    to use crontab'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cron.deny`: If `cron.allow` does not exist but `cron.deny` does exist then
    the user must not be listed in the `cron.deny` file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If neither of the file exists, then only the root user can use the command.
    In most Linux systems only `cron.deny` exists and it is empty. Check this on your
    system before running the following commands.
  prefs: []
  type: TYPE_NORMAL
- en: We will use a user account to experiment with crontab. The `crontab` command
    is used to make changes to the crontab file, as it should not be edited directly.
    To view the crontab for the current user, run `crontab -l`.
  prefs: []
  type: TYPE_NORMAL
- en: The command to edit the crontab file for the current user is `crontab -e`. By
    default, this will bring up the crontab file in the vi editor. However, you can
    change the `EDITOR` environment variable to use whatever text editor you wish.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the format of a typical user crontab file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'I always add this template to the top of the crontab file so I can easily remember
    what the fields are. The following is an example crontab entry:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: These values can be integers, a range, an element or list of elements, or an
    asterisk. An asterisk means to match all valid values.
  prefs: []
  type: TYPE_NORMAL
- en: '`#`: This indicates a commented line. It must be the first thing on the line
    (don''t put it at the end of a line).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Field 1**: This is the minute. It starts at 0 meaning 00:00.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Field 2**: This is the hour. It starts at 0 which means 12:00 a.m.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Field 3**: This is the day of the month.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Field 4**: This is the month of the year. Names can also be used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Field 5**: This is the day of the week. It starts at 0, which is Sunday.
    Names can also be used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Field 6**: This is the path/command to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This example entry would run `mycommand` at 12:10 a.m. on every Sunday.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Use white space only to separate the fields. Do not use tabs.
  prefs: []
  type: TYPE_NORMAL
- en: Creating and running a crontab file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here we will show an example of creating and running a user crontab file.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Be sure your system is set up as outlined in the *Introduction*. We will be
    using two terminal sessions, to see our results more easily.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following is an example of how to create and run a crontab file:'
  prefs: []
  type: TYPE_NORMAL
- en: In a terminal session run `tty` and remember the output. This will be used in
    step 10.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open or use another terminal under a user account. I'll be using `jklewis` as
    in earlier chapters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Let''s view the crontab file by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It may say something like `no crontab for jklewis` which is fine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now let''s make one by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: It may say something like `no crontab for jklewis - using an empty one` which
    is good.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Crontab should bring up a temporary file in vi (unless you have changed the
    `EDITOR` variable as I have, on my system). The file will not be used until it
    has been saved and the session has been ended.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I suggest cutting and pasting the template I created above to your crontab file.
    It will make it much easier to remember the fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now let''s add an entry that we can see takes effect quickly. Insert the following
    lines into the file (cut and paste should work):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Change the `TTY` line to what you found in step 1.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now save the file and quit the session. You should see a message such as the
    following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'In the next minute you should see something like the following output in your
    other session:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The entry we just made with all of those asterisks means to run the command
    every minute. Edit the crontab again and change the line to the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'That strange looking syntax is a way to skip, or increment, a value. Now try
    the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: That runs every weekday (Mon - Fri) at `9:35` a.m. The `1-5` in the day field
    is a range.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Names can also be used for the day and month fields, as in the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'And also the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: With names, the standard three letter abbreviations are used, and the case does
    not matter. Using names might be easier, however, you cannot use ranges or steps
    with names.
  prefs: []
  type: TYPE_NORMAL
- en: Running a command every other week
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have looked at the basics of cron, how would you set up an entry
    to run a command every other week? You may be tempted to try something like the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: That means to start on Sunday, and then run every other Sunday, right? No, this
    is wrong, but you often see this given as a solution on websites. Cron doesn't
    actually have a built-in way to do this, but there is a work-around.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the steps to run a command every other week:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Create the following script in your home directory and name it `cron-weekly1`
    (feel free to cut and paste):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Make the script executable by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Under your user account run by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Add the following line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: End your editing session. This will install the modified crontab file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Take a look at this script. The first time it is run, the `cron-weekly.txt`
    file does not exist, and so it is created, and the command (the one you want to
    run every other week) is executed. The next week, when this script is run again,
    it sees that the `cron-weekly.txt` file is there, deletes it, then exits the script
    (the command is not run). This alternates every week, effectively running the
    command every other week. Pretty cool, huh?
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding `cron-weekly1` script, the command is executed the first time
    the script is run. You can change this to run the command starting with the next
    week by moving the line to run the command inside the `if` statement.
  prefs: []
  type: TYPE_NORMAL
- en: Although it might be very tempting to do so, do NOT put a comment `#` at the
    end of a line. Cron cannot tell if it's a comment or part of a command. If cron
    ever reports some errors you don't understand, check for comments that are in
    the wrong place. Yes, I admit I still do this from time to time.
  prefs: []
  type: TYPE_NORMAL
- en: If you do something crontab doesn't like (such as the `* * * * 0/2 command`
    line shown in the preceding section), it will usually report an error when you
    close the session. It will then give you the option to re-edit the file. By all
    means do so, and either fix the problem, or at least comment the line. You can
    go back and edit it again later.
  prefs: []
  type: TYPE_NORMAL
- en: You can remove a crontab file completely by running `crontab -r`. I would suggest
    making a backup copy before doing this, just in case. You should be able to save
    the file to a new name through whatever text editor you have chosen to use.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Crontab files can make use of environment variables. The following are a few
    common ones:'
  prefs: []
  type: TYPE_NORMAL
- en: '**SHELL**: This tells the OS to use a particular shell, overriding what is
    in the `/etc/passwd` file. For example, `SHELL=/bin/sh`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MAILTO**: This tells cron to mail errors to this user. The syntax is `MAILTO=<user>`
    that is `MAILTO=jklewis`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CRON_TZ**: This is used to set a particular timezone variable, that is `CRON_TZ=Japan`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cron has some shortcuts you can use. These are used in place of the 5 time
    and date fields, and are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Shortcuts for command | Command | Output |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| **@reboot** |   | Run once after reboot |'
  prefs: []
  type: TYPE_TB
- en: '| **@yearly or @annually** | **0 0 1 1 *** | 1st day of the month on the 1st
    day of the year |'
  prefs: []
  type: TYPE_TB
- en: '| **@monthly** | **0 0 1 * *** | 1st day of the month |'
  prefs: []
  type: TYPE_TB
- en: '| **@weekly** | **0 0 * * 0** | Run on Sunday at 12:00 am |'
  prefs: []
  type: TYPE_TB
- en: '| **@daily** | **0 0 * * *** | Run every day at 12:00 am |'
  prefs: []
  type: TYPE_TB
- en: '| **@hourly** | **0 * * * *** | Run every hour on the hour |'
  prefs: []
  type: TYPE_TB
- en: So in the preceding example we could have put `@weekly $HOME/cron-weekly1`.
  prefs: []
  type: TYPE_NORMAL
- en: Don't use cron for any time sensitive tasks. There is usually a short delay,
    just a few seconds, before the command is run. If you need better granularity
    than that, use a script and the sleep routine.
  prefs: []
  type: TYPE_NORMAL
- en: You can also set up a crontab for root. To see that and more, use `man -a crontab`.
  prefs: []
  type: TYPE_NORMAL
- en: Reporting the errors from a crontab file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You may be wondering, if there is an error in a crontab file how does the computer
    report it? It does this by using the sendmail system, to mail the crontab user.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following is an example of how errors are reported by cron:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a terminal with a user account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Edit your crontab file by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s deliberately cause an error. Scroll to the bottom and add the following
    line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Save the file. Wait until cron runs in the next minute, and then press *Enter*
    in your user terminal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should see a message saying you have mail. Run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: There should be a mail indicating the error (in this case, file not found).
    You may delete the message by pressing *D* and then *Q* to leave the mail.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To finish, be sure to re-edit your crontab file and remove the bad line we just
    added.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can also monitor the `/var/log/cron` file to see what cron is doing on the
    system throughout the day. This is very helpful when first creating a crontab
    file and trying to get it just right.
  prefs: []
  type: TYPE_NORMAL
