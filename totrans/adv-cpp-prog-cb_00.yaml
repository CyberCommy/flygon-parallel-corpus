- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will learn advanced C++ techniques that you can use on your
    own C++ projects. This book teaches C++ using a recipe-style approach, complete
    with examples and screenshots for each recipe that you can download from GitHub
    and work with yourself. This book teaches C++ using the C++17 specification, with
    a sneak peek at the new features being added to C++20 at the end. In some recipes,
    we will even use a disassembler to better understand how C++ is compiled, and
    the impact certain decisions have on your applications. By the end of this book,
    you will have mastered the advanced concepts of C++ and will be able to solve
    everyday problems, which will take your C++ programming to the next level.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for intermediate C++ developers who are familiar with C++ and want
    to obtain expert skills and become a proficient C++ developer. A good understanding
    of the language is assumed, including a basic understanding of assembly.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](8002e2e5-1035-4f1b-a4ed-8ace04c08161.xhtml), *Getting Started with
    Library Development*, teaches you how to develop your own libraries, including
    an explanation of the principle of least surprise, how to namespace everything,
    how to write header-only libraries, and how to ensure others will continue to
    use your libraries.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](7a923ce3-1dcd-40ff-b84d-64cd14ff85fc.xhtml), *Using Exceptions
    for Error Handling*, covers more advanced topics of C++ exception and error handling,
    including a detailed explanation of the `noexcept` specifier and operator, how
    RAII supports resource management in the presence of exceptions, why throwing
    from a destructor should be avoided, and how to write your own exceptions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](4e72f0d6-3469-4c04-b593-0ceb3da1659f.xhtml), *Implementing Move
    Semantics*, provides a detailed explanation of C++ move semantics, including an
    explanation of the *Big Five*, how to make your class movable, how to write move-only
    (and non-move) non-copy style classes, how to properly implement a move constructor,
    why `const &&` makes no sense, and how to use reference qualification.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](aff3ffea-2bdd-4d69-9e32-0edae7142703.xhtml), *Using Templates for
    Generic Programming*, teaches you how to write template functions like an expert,
    including how to implement your own SFINAE, how to perform perfect forwarding,
    how to use `constexpr-if` statements, how to leverage tuples with parameter packs,
    how to loop over parameter packs at compile time, how to use type traits to implement
    different versions of the same function, how to use `template<auto>`, and how
    to leverage explicit type declarations in your own applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](146f2d3d-40f8-4596-918e-f58485020ebc.xhtml), *Concurrency and Synchronization*,
    teaches you how to use `std::mutex` (and friends), when to use atomic types, how
    to handle `const` classes with thread-safety using the `mutable` keyword, how
    to write a thread-safe class, how to write a thread-safe wrapper, as well as how
    to write asynchronous C++ including promises and futures.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](a8bd3a81-d804-4fab-a320-860f4ad2ea0f.xhtml), *Optimizing Your Code
    for Performance*, covers how to profile and benchmark your C++, how to disassemble
    your C++ to better understand how to optimize your code, how to locate and remove
    unneeded memory allocations, and why `noexcept` helps with optimizations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](27f4ee8c-1268-4845-90ae-bd8311fca956.xhtml), *Debugging and Testing*,
    walks you through how to use `Catch2` to unit test C++, how to use Google''s ASAN
    and UBSAN sanitizers to dynamically analyze your code for memory corruption and
    undefined behavior, as well as how to use NDEBUG.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](69f40474-6d4f-4b64-ad48-a4ba9169100b.xhtml), *Creating and Implementing
    Your Own Container*, teaches you how to write your own container wrapper by creating
    a `std::vector` that is always sorted.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](efa601cf-f3f7-4e0f-9d8d-727b5111630e.xhtml), *Exploring Type Erasure*,
    teaches you everything you need to know about type erasure, including how to erase
    types through inheritance and using template, how to implement the type erasure
    pattern, and how to implement the delegate pattern.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ca0b29c1-722c-438a-ad1d-17aecf93cbd8.xhtml), *An In-Depth Look
    at Dynamic Allocation*, teaches you advanced topics in dynamic memory allocation,
    including how to properly use `std::unique_ptr` and `std::shared_ptr`, how to
    handle circular references, how to type cast smart pointers, and how the heap
    works behind the scenes to provide your application with dynamic memory.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](1a07a924-547e-4926-990b-ba803d02d646.xhtml), *Common Patterns
    in C++*, explains how different patterns in computer science are implemented in
    C++, including the factory pattern, the singleton pattern, the decorator pattern,
    and the observer pattern, as well as how to implement static polymorphism to write
    your own static interfaces without the need for virtual inheritance.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](f616f7ed-39bf-418d-ae09-b4daeaadb3e3.xhtml), *A Closer Look at
    Type Deduction*, provides a deep dive into how type deduction is performed in
    C++17, including how `auto`, `decltype`, and `template` deduce their types automatically.
    This chapter concludes with examples of how to write your own C++17 user-defined
    deduction guides.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](69ea92ce-8503-4c3f-95c7-9733bd86d039.xhtml), *Bonus: Using C++20
    Features*, provides a sneak peek at the new features coming with C++20, including
    concepts, modules, ranges, and coroutines.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We assume that you have written C++ before and are already familiar with some
    modern C++ features.
  prefs: []
  type: TYPE_NORMAL
- en: This book uses Ubuntu to provide examples that you can compile and run yourself
    as you read the book. We assume you have some basic knowledge of Ubuntu, how to
    install it, and how to use a Linux terminal.
  prefs: []
  type: TYPE_NORMAL
- en: We use a disassembler in some of the recipes to better understand what the compiler
    is doing under the hood. Although you do not need to know how to read the assembly
    to understand what is being taught, a basic understanding of x86_64 assembly will
    help.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support) and
    register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Support tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Advanced-CPP-Programming-CookBook](https://github.com/PacktPublishing/Advanced-CPP-Programming-CookBook). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Code in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Visit the following link to check out videos of the code being run: [https://bit.ly/2tQoZyW](https://bit.ly/2tQoZyW)'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`constexpr`: Indicates code words in text, numbers, folder names, filenames,
    file extensions, pathnames, dummy URLs, and user input. Here is an example: "The
    `noexcept` specifier is used to tell the compiler whether a function may or may
    not throw a C++ exception."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, important words appear in the text like this. Here is an example:
    "In this recipe, we will learn why throwing exceptions in a destructor is a **bad
    idea**."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Sections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find several headings that appear frequently (*Getting
    ready*, *How to do it...*, *How it works...*, *There's more...*, and *See also*).
  prefs: []
  type: TYPE_NORMAL
- en: 'To give clear instructions on how to complete a recipe, use these sections
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section tells you what to expect in the recipe and describes how to set
    up any software or any preliminary settings required for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section contains the steps required to follow the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section usually consists of a detailed explanation of what happened in
    the previous section.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section consists of additional information about the recipe in order to
    make you more knowledgeable about the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section provides helpful links to other useful information for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
