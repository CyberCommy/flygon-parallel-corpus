- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Charles Cézanne famously said about the impressionist painter Claude Monet,
    "Monet is only an eye, but what an eye!" Today, we can similarly say, "ReactJS
    [or if you prefer, "ReactJS is only a view, but what a view!"
  prefs: []
  type: TYPE_NORMAL
- en: ReactJS has neither the intention nor the ambition to be a complete, general-purpose
    web framework. It doesn't even include tooling for Ajax calls! Rather, the intent
    is that you will use technologies that make sense for different concerns in your
    application, and use ReactJS's power tools for views and user interface development.
  prefs: []
  type: TYPE_NORMAL
- en: Functional reactive programming has been an extremely high-hanging fruit, with
    a prohibitive barrier to entry in terms of sheer mathematical expectations assumed
    in order to work with it. No longer with ReactJS! A veteran C++ programmer with
    no particularly deep math background—I said this to pick a profile of programmers
    who keep on saying on Stack Overflow that they don't get functional reactive programming—is
    a veteran programmer who stands a fair chance of getting real work done using
    ReactJS.
  prefs: []
  type: TYPE_NORMAL
- en: This book is about ReactJS, a simple and small technology that nonetheless lets
    huge teams work together on different components of a web page without stepping
    on each others' feet, but without a hint of bureaucratic measures. And add some
    liberal help of pixie dust.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Introduction and Installation"), *Introduction
    and Installation*, provides a 10,000-foot overview of different programming paradigms,
    each of which has its strengths, and an introduction to the trio of functional
    programming, reactive programming, and functional reactive programming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Core JavaScript"), *Core JavaScript*, covers
    some of JavaScript''s better neighborhoods and omits the minefields, with a debt
    to Douglas Crockford, if not a complete agreement. In terms of the parts of JavaScript
    that you use, you should be doing most of your work within this core.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Reactive Programming – The Basic Theory"),
    *Reactive Programming – The Basic Theory*, is a basic exploration of reactive
    theory, or reactive programming, specifically in relation to Facebook''s ReactJS
    user interface framework.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Demonstrating Nonfunctional Reactive Programming
    – A Live Example"), *Demonstrating Nonfunctional Reactive Programming – A Live
    Example*, proves that not all development is from scratch. Most professional work
    is not greenfield. This will offer a live example of retrofitting a simple video
    game, the most recent implementation using jQuery, to take advantage of ReactJS
    (if you are using ReactJS, you will probably be doing other conversions from jQuery
    to ReactJS).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Learning Functional Programming – The Basics"),
    *Learning Functional Programming – The Basics*, helps you if you want to understand
    functional programming but have no idea where to start. Here''s one place to start!
    Map, reduce, and filter are introduced as an inexhaustible bag of tricks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Functional Reactive Programming – The Basics"),
    *Functional Reactive Programming – The Basics*, covers what has been said about
    functional programming and reactive programming. It will be put together with
    some sage advice, and the last bit of foundation will be laid for the remaining
    hands-on work in this book.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Not Reinventing the Wheel – Tools for Functional
    Reactive Programming"), *Not Reinventing the Wheel – Tools for Functional Reactive
    Programming*, contains a lot to cover in one book, let alone one chapter. But
    there is meant to be an interesting sampling of a space where a lot of interesting
    options are made available, including writing ReactJS code from a language other
    than JavaScript.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Demonstrating Functional Reactive Programming
    in JavaScript – A Live Example, Part I"), *Demonstrating Functional Reactive Programming
    in JavaScript – A Live Example, Part I*, is where we see an application housing
    a whimsical ReactJS component written in ReactJS from scratch, and showcasing
    the sweet JSX syntactic sugar that is not required but is still made available
    for ReactJS development.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Demonstrating Functional Reactive Programming
    in JavaScript with a Live Example Part II – A To-do List"), *Demonstrating Functional
    Reactive Programming in JavaScript with a Live Example Part II – A To-do List*,
    leads us to our first real component, designed to be used rather than just amuse.
    We implement a to-do list, and it has several markers other than just "done" to
    indicate what state, priority, and other things a task has.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Demonstrating Functional Reactive Programming
    in JavaScript: A Live Example Part III – A Calendar"), *Demonstrating Functional
    Reactive Programming in JavaScript: A Live Example Part III – A Calendar*, is
    where we build a calendar. It is intended to gracefully support not only one-time
    events but also many kinds of repeating events with all kinds of rules that people
    offer.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.html "Chapter 11. Demonstrating Functional Reactive Programming
    in JavaScript with a Live Example Part IV – Adding a Scratchpad and Putting It
    All Together"), *Demonstrating Functional Reactive Programming in JavaScript with
    a Live Example Part IV – Adding a Scratchpad and Putting It All Together*, provides
    a rich-text scratchpad with CKeditor. This shows how we might interoperate with
    other user interface tools. Then we wind up by bringing the four components together
    into one combined page and adding persistence functionality so that our user interface
    doesn''t forget what it is told.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.html "Chapter 12. How It All Fits Together"), *How It All
    Fits Together*, reviews what we covered in this book, and we look at the next
    steps in a world to explore.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix](apa.html "Appendix A. A Node.js Kick start"), *A Node.js Kick start*,
    looks at some of the good, the bad, and the ugly of a "Wild, Wild West" technology
    that everybody seems to want in on.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is a bit of software to download, and you will need a web server that
    can at least serve static content. [Appendix](apa.html "Appendix A. A Node.js
    Kick start"), *Node.js*, covers building a web server for the larger project in
    Node.js, but all the chapters can work with just a web server that will serve
    static content in the most basic fashion. You'll need a desktop computer, which
    can be almost anything that can run Node.js (if you choose to work through the
    appendix). The text will work well enough with Unix, Linux, Mac, Windows, Cygwin,
    and so on. If you want to run it from a mobile device, that may be a praiseworthy
    approach, but please work from a device (desktop or otherwise) using some standard
    server or desktop operating system.
  prefs: []
  type: TYPE_NORMAL
- en: However, all that you really need is a server or desktop, a browser such as
    Chrome, a web server, and a willingness to dive into something new. Everything
    else is provided in the text.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for programmers who want to dive into functional reactive
    programming and Facebook's ReactJS. There is an expectation of some general programming
    maturity, some knowledge of JavaScript, and some knowledge of producing user interfaces.
    Familiarity with functional programming is also one of the several things that
    would help, but the hope, whether realized or not, is to create a book using which
    a veteran programmer in any general-purpose language with some (perhaps light)
    knowledge of JavaScript and web development would be able to get things to work.
  prefs: []
  type: TYPE_NORMAL
- en: People who do have a solid background in frontend web development and JavaScript's
    functional core may be surprised how easy it is to work with ReactJS, and may
    find it like slicing a hot knife through butter.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    `typeof` function returns a string containing a description of a type; thus, `typeof`
    can offer an extended type."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "When the installer starts, click on **Next**, as follows:"'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
