- en: Getting Started with Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The success of a project is the result of the approach adopted by the development
    team as it goes through each stage of the development process. To achieve success,
    the development team needs to have a good project manager at the helm who brings
    good project management skills and experience to be able to deliver a product
    that satisfies the end user''s requirements. The project management process is
    organized into the following phases:'
  prefs: []
  type: TYPE_NORMAL
- en: Initiation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Planning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Execution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring and controlling
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Closure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What Jira is and how it can be used for project management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to set up Jira for the initiation and planning of a project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An overview of the capabilities and features of three plugins—synapseRT, Zephyr,
    and Test Management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is Jira?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira is a software tool, developed by a company named Atlassian in Australia,
    which provides an effective way to organize and manage your projects. It also
    provides capabilities to meet Agile project management needs.
  prefs: []
  type: TYPE_NORMAL
- en: Jira is like a container consisting of different types of Jira issues categorized
    under Jira projects. Using Jira, you can design, manage, and customize various
    types of tasks, workflows, and reports, and streamline the project management
    process. It helps to streamline the process of creating and managing project artifacts
    and provides a shared platform for project stakeholders to monitor project progress.
  prefs: []
  type: TYPE_NORMAL
- en: 'Jira boosts collaboration and productivity by doing the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Reducing the effort spent tracking customer ...
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Organizing projects with Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have understood what Jira is, we can learn how to organize projects
    with it.
  prefs: []
  type: TYPE_NORMAL
- en: Jira can be used on the enterprise level to create different projects for various
    departments. While there is no rule of thumb for creating a project, deciding
    upon certain parameters can benefit organizations by segregating projects, which
    can aid in strategizing work effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Agile project management using Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Organizations are moving away from traditional waterfall project management
    processes to iterative, fast, smooth, and systematic Agile project management
    processes. The Agile method for product development selects the most relevant
    requirements in each iteration or cycle and produces parts of the final product
    in each cycle.
  prefs: []
  type: TYPE_NORMAL
- en: Iterations are generally shorter and hence it is planned for a limited period.
    It provides the flexibility to reverse any new changes without affecting the larger
    product being developed. Thus, it helps to reduce the risk of failure and controls
    its impact. Comparing this to a traditional waterfall process, each development
    phase is complete but is interdependent on the previous phase. ...
  prefs: []
  type: TYPE_NORMAL
- en: What is Scrum?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Scrum is a framework that helps to address customer needs and complex product
    requirements with the help of its adaptive, iterative, and systematic approach.
    It helps teams to deliver a product in different iterations, aligned as per the
    goals. As part of the product development effort, it gives an opportunity to define
    stakeholders’ roles and organize their tasks, breaks down complex project scopes
    into smaller, understandable requirements, and provides a better way to integrate
    scope changes. The following diagram shows the phases and actors in the Agile
    Scrum methodology, which we will be looking at in detail next:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](Images/107cce98-4f36-4735-8c62-da5f68c59cb3.png)'
  prefs: []
  type: TYPE_IMG
- en: https://commons.wikimedia.org/wiki/File:Scrum_process.svg
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Scrum in detail
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Project requirements can be organized in Scrum using the Product Backlog and
    the Sprint Backlog:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Product Backlog**: This is a list of complex user requirements, wish lists,
    needs, and wants. The product owner is responsible for organizing and prioritizing
    this list, based on the customer’s needs. It’s a place where stakeholders can
    add requirements in the list anytime,  but only the product owner is responsible
    for prioritizing and deleting the requirements. Hence, the Product Backlog is
    always in a growing phase.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sprint Backlog**: Once the requirements are broken down into a smaller list
    of items, the team prepares and plans the list of tasks that need to be delivered
    in the only upcoming sprint. Such items are ...'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scrum meetings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Scrum believes in collaboration and requires stakeholders to be a part of meetings
    to keep everyone aware and informed about items in scope, obstacles, dependencies,
    risks, resource availability, and so on, so that they can be planned for and addressed
    effectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are five types of meetings that are crucial in Scrum:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Backlog refinement meeting**: Also referred to as Product Backlog grooming,
    which is conducted to give the product owner and the team some time to prepare,
    reorder, and organize backlog items before making commitments for the next sprint.
    Generally, a backlog grooming meeting is attended by the Scrum master, the product
    owner, and the development team.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sprint planning**:This is an opportunity for all stakeholders to commit to
    the **Product Backlog Item** (**PBI**) and the relevant tasks that they will be
    completing as part of the upcoming sprint. These meetings help teams to identify
    user stories, to assign story points, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sprint review: **It is important to validate whether user stories meet the
    scope and the acceptance criteria as specified and agreed by the team and whether
    they satisfy the customer’s needs. Sprint review meetings are conducted to demonstrate
    the developed and tested product to the product owner.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sprint retrospective**:Since Scrum is a continuous adaptive framework, it
    is necessary to understand what went right and what didn’t. Sprint retrospective
    meetings provide an opportunity for all stakeholders to identify the scope of
    improvements and retain practices that worked well during the current sprint.
    This meeting is generally conducted at the end of the sprint.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Daily Scrum**:In order to respond to obstacles in a timely manner and track
    the progress of the project, it is important for all stakeholders to share the
    current status of any work items they are working on. Daily Scrum meetings are
    conducted to address such things and, as the name suggests, they happen daily
    (on average they are conducted for 15 minutes).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Readers can find more information about Scrum at this link: [https://www.scrumalliance.org/](https://www.scrumalliance.org/).
  prefs: []
  type: TYPE_NORMAL
- en: What is Kanban?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kanban is a continual delivery, lean-scheduling process focused on helping people
    work together more effectively as a team. The goal of both Kanban and Scrum is
    to deliver products just in time. However, Kanban uses the stages of the SDLC
    to track the progress of work items from requirement gathering to the delivery
    of the product or software. These different swim lanes are BACKLOG, SELECTED FOR
    DEVELOPMENT, IN PROGRESS, and DONE.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike Scrum, Kanban doesn’t follow an iterative approach and it has a long
    development period that is incremental in nature. Since there are no iterations,
    work items don’t need to be started or ended at a specific time, rather, it depends
    on other factors, such as the priority of the work item, ...
  prefs: []
  type: TYPE_NORMAL
- en: Project initiation and management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have understood the basics of Scrum and Kanban, let's discover how
    Jira helps us to create and manage our Agile projects using predefined project
    templates. We will be utilizing software development templates for Scrum and Kanban
    to plan our projects.
  prefs: []
  type: TYPE_NORMAL
- en: How to initiate projects in Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira provides flexibility for teams to organize project items based on their
    roles. We will be discussing these user roles and permissions in the next section.
    However, the admin role is the role with which we can create and set up a project
    as per our needs.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up a Jira project is a very simple process. After you sign up, you will
    see the Welcome! page, where you can create projects from the templates provided,
    such as Scrum, Kanban, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Let's click on the Create new project button. It provides us with templates
    to create projects in Software or Business. In Software, we can see templates
    for Basic software development, Scrum software development, and Kanban software
    development projects. These ...
  prefs: []
  type: TYPE_NORMAL
- en: Role-based permissions in Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira can be set up and configured for different user roles so that it satisfies
    the team’s needs. An Agile project has various roles, such as Scrum master, development
    manager, product manager, project owner, team lead, developer, QA engineer, designer,
    technical writer, and so on. With the help of the admin user role, we can address
    the needs of each user group and customize Jira permissions accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are three main types of permissions in Jira:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Global permission**: This is basically a user with admin permissions. It’s
    a user who has access to all of the projects in Jira.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project permission**: This is a restricted permission, limited to the selected
    project. Such users cannot access projects to which they do not have access. However,
    for any given project, they can create, edit, and manage project issues and assign
    them back and forth to other team members.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Issue security permission**: This is restricted access on the issue type
    level to provide access to a limited audience only. Jira is a ticket-based system
    and you can create different types of tickets or issues and restrict their access
    using Issue Security Permission. For example, if the issue type is Epic, then
    you can add only managers in the list to be able to view Epic issue type tickets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'However, there are admins on each level of these permissions, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Jira administrator**: This is an role where the user can customize, manage,
    and configure Jira'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project administrator**: The project administrator can take control of sprint
    related tasks, such as creating, starting, moving, editing, end, deleting, completing,
    and renaming sprints'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Board administrator**: The board administrator can control the dashboard
    by creating a board, modifying workflows, adding/removing a status, and so on'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure you are aware of your project needs. Make sure you know well in advance
    what issue types your team might need, and the types of default or customized
    workflows, fields, or components that the team wants to use.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will be creating and managing projects with the Jira
    admin user role.
  prefs: []
  type: TYPE_NORMAL
- en: Scrum using Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let’s start by creating a Scrum project in Jira:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you select the Scrum software development option, it takes you to the
    following page. The listed Issue Types will be available as default Issue Types for
    your project with the specified default workflow. Remember, you can always add
    new or modify existing issue types and workflows. This is shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/58af5d05-242b-4840-a742-c543816df7a6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Provide a Name for your project with a Key and assign the Project Lead, as
    shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/8a5b2c7f-f77f-49b1-94a5-19f8197cc20e.png)'
  prefs: []
  type: TYPE_IMG
- en: On clicking Submit, the project will ...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Kanban using Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now let’s create a Kanban project in Jira:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you select the Kanban software development option, it takes you to the
    following page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/8f38388d-0ee9-4eca-9e91-e53de32493e1.png)'
  prefs: []
  type: TYPE_IMG
- en: The listed Issue Types will be available as default Issue Types for your Kanban
    project with the specified default workflow. As mentioned earlier, you can always
    add new or modify existing issue types and workflows.
  prefs: []
  type: TYPE_NORMAL
- en: Create a Kanban project by specifying the Name and Key, and assigning the Project
    Lead.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On clicking Submit, the Kanban project will be created, and you will see the Kanban
    board.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now you are ready to add project items by creating issues, planning and organizing
    it in the swim lanes. The following screenshot shows a Kanban board with requirements
    going through different swim lanes, such as BACKLOG, SELECTED FOR DEVELOPMENT,
    IN PROGRESS, and DONE:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](Images/09ad256c-0d49-44d9-abff-9745562b4a18.png)'
  prefs: []
  type: TYPE_IMG
- en: Now we are ready with our project, let's explore the plugins supported by Jira
    to understand the test management aspect of it.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring test management plugins for Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The test management process helps to organize, track, and manage testing-related
    project needs. There are various phases that software development goes through,
    and testing has its own segregated set of phases. Each of these phases has a set
    of activities through which we can track the progress of a project, such as creating
    test plans and test cases, organizing them into test suites, creating test cycles,
    managing execution, creating and retesting defects, and so on. STLC and its integration
    with the SDLC was covered in [Chapter 1](63580a2a-9df0-4a49-bf7e-d476d779a10c.xhtml),
    *An Overview of Software Quality Assurance*.
  prefs: []
  type: TYPE_NORMAL
- en: In the upcoming sections, we will learn in detail about the different test management
    phases, such as manage, plan, design, ...
  prefs: []
  type: TYPE_NORMAL
- en: synapseRT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'synapseRT is a Jira app which supports end-to-end testing and requirement management
    with Jira. It’s a plugin that integrates smoothly with the Jira environment to
    extend its capabilities by enabling testers, test managers, and project managers
    to plan, execute, and track the progress of a project throughout the SDLC. It
    organizes the entire test process into four sections:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Test case**: This section is where testers can design and maintain test cases.
    It also provides the flexibility to reuse them whenever needed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test execution**: This is the phase where testers can design and plan the
    test strategy required for the current release, as per the scope of the testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test automation**: synapseRT integrates smoothly with other third-party automation
    or continuous integration tools, with the help of which test professionals can
    execute automated scripts and get the status of execution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Requirements**: In terms of requirement management, it is essential for the
    team to track the progress of the project so that the allocation and distribution
    of resources is easy. Also, this helps in the identification and mitigation of
    risks in the early stages of testing. Traceability reports generated by synapseRT
    are very useful for this.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the upcoming chapters, we will be going through every section of synapseRT
    in detail and will explore its use, as well as best practices. In this section,
    let's install synapseRT in Jira and learn about the basic configuration settings
    needed to get started.
  prefs: []
  type: TYPE_NORMAL
- en: Jira can be customized as per the user’s needs, and so can synapseRT. It provides
    the flexibility to design customized workflows and to add issue types or even
    fields. You can install synapseRT from the Atlassian Marketplace.
  prefs: []
  type: TYPE_NORMAL
- en: 'Simply log in to Jira and search for `synapseRT` in the Add-ons section. Its
    free-trial version is available to explore before purchasing. The current version
    of synapseRT (v9.3.1) has been used for this book. After enabling the plugin,
    the Jira project explorer adds the Requirements, Test Suites, and Test Plans options. In
    the following screenshots, you will see the before and after installation screens:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](Images/c4b5c645-c4e7-4d78-8ebf-853e72cc80a9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In order to view the synapseRT fields for the issue type (which is the requirement
    in your case), such as Epic, Story, Task and so on you need to configure it as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Defect issue type is a new issue type that we will learn how to add in the upcoming
    chapters.
  prefs: []
  type: TYPE_NORMAL
- en: '![](Images/88ea0ceb-1a3e-460f-8168-d8b2f0a68ce2.png)'
  prefs: []
  type: TYPE_IMG
- en: Here is a link for getting to know the supported version of synapseRT that works
    with Jira: [https://doc.go2group.com/synapsert/latest/en/synapsert-ver-9-x/supported-jira-versions](https://doc.go2group.com/synapsert/latest/en/synapsert-ver-9-x/supported-jira-versions).
  prefs: []
  type: TYPE_NORMAL
- en: Zephyr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Zephyr for Jira is another test management tool supported by Jira. Just like
    synapseRT, it can be used to design and organize test cases. It helps testers
    to plan test execution and to manage custom fields on a global level, or on a
    project level. With the help of an Agile test board, teams can manage and report
    on the progress of work. It also supports advanced search options using the **Zephyr
    Query Language** (**ZQL**). It can be integrated easily with other automation
    tools, as well as continuous integration tools with ZAPI.
  prefs: []
  type: TYPE_NORMAL
- en: Zephyr is available to download from the Atlassian Marketplace. The current
    version of Zephyr (v4.0.2) has been used for this book.
  prefs: []
  type: TYPE_NORMAL
- en: In the following screenshots, you will see the before and after installation scenarios 
    ...
  prefs: []
  type: TYPE_NORMAL
- en: Test Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Test Management plugin is another tool supported by Jira. It has similar
    components to those of synapseRT and Zephyr, and facilitates test case creation
    and managing test cases using the different test suites. Testers can create test
    cycles based on the types of testing required for the selected requirement, for
    different browsers' tests, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: It is possible to track the requirements for defects with the help of a traceability
    matrix. It extends the support for automation tools and DevOps tools using the
    REST API. The Test Management tool is available to use in localized languages
    such as English, German, Spanish, Portuguese, and Italian.
  prefs: []
  type: TYPE_NORMAL
- en: The Test Management tool is available to download from the Atlassian Marketplace
    ([https://marketplace.atlassian.com/](https://marketplace.atlassian.com/)). The
    current version of the Test Management tool (v5.1.1) has been used for this book.
  prefs: []
  type: TYPE_NORMAL
- en: In the following screenshots, you will see the before and after installation scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before installing and enabling the Test Management plugin, the Jira project
    doesn''t have a Tests tab in the menu bar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](Images/81afa3dd-6f54-4aa1-9fe0-b21e94514220.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As you can see, it added a tab called Tests and Test Management for Jira on
    the Administration dropdown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](Images/06d37c14-d5d5-42a6-8b33-4969d3c3c4e0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In order to view the Test Management tool for the issue type (which is the
    requirement in your case), such as Epic, Story, Task, and so on) you will need
    to enable it. On enabling the plugin for your project, you will be able to create
    tests for the project from the Tests tab as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](Images/c981188d-312e-4b34-9729-d26b472122d2.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned about Jira and plugins supported by Jira to meet
    your Agile projects' needs. Jira is a project management tool that provides various
    templates to create and manage your project artifacts. Scrum and Kanban are the
    two most widely used Agile project management methodologies. Jira supports both
    methodologies and provides tools to meet your test management needs. Using simple
    steps, you can create and manage your projects in Jira and restrict access to
    information using the different sets of permissions and roles. We explored the
    workflow to create projects in Scrum and Kanban. In the final section, we explored
    the installation and configuration of three test management plugins—synapseRT,
    Zephyr, and Test Management. ...
  prefs: []
  type: TYPE_NORMAL
