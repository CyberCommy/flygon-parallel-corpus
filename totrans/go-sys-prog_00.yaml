- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Go Systems Programming* is a book that will help you develop systems software
    using Go, which is a systems programming language that started as an internal
    Google project before becoming popular. What makes Go really popular is that it
    keeps the developer happy by being easy to write, easy to read, easy to understand,
    and by having a compiler that is there to help you. This book does not cover every
    possible aspect and feature of the Go programming language: only the ones that
    are related to systems programming. Should you wish to learn more about the Go
    programming language, you should wait from my next book, *Mastering Go*, which
    will be ready in 2018!'
  prefs: []
  type: TYPE_NORMAL
- en: The book you are about to read is an honest book in the sense that it will present
    working Go code without overlooking its potential faults, its restrictions, and
    its logical gaffes, which will allow you to improve it on your own and create
    a better version of it in the future. What you will not be able to improve is
    the fundamental information that will be presented, which is the basis of the
    way Unix systems work. I will consider the book to be successful if it helps you
    understand what systems programming is about, why it is important, and how you
    can start developing systems software in Go. I will be equally happy if Go becomes
    your favorite programming language!
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](f2224931-63b2-4263-bc07-8b74cfabc665.xhtml), *Getting started with
    Go and Unix Systems Programming*, starts by defining what systems programming
    is before talking about the advantages and the disadvantages of Go, the features
    of Go version 1.8, two handy Go tools named `gofmt` and `godoc`, as well as the
    various states of Unix processes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](69bfa048-8113-4a6d-929a-b5addf9b6505.xhtml), *Writing Programs
    in Go*, helps you learn how to compile Go code and how to use the environment
    variables that Go supports, and understand how Go reads the command line arguments
    of a program. Then, we will talk about getting user input and output, which are
    fundamental tasks, show you how to define functions in Go, where the `defer` keyword
    is mentioned for the first time in this book and continue by discussing the data
    structures that Go offers using handy code examples. In the remaining sections
    of the chapter, we will discuss Go interfaces and random number generation. I
    am sure that you are going to enjoy this chapter!'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](96c36f62-d505-408c-add5-af84cf25454a.xhtml), *Advanced Go Features*,
    goes deeper and starts talking about some advanced Go features, including error
    handling, which is critical when developing systems software and error logging.
    Then it introduces you to pattern matching and regular expressions, Go Reflection,
    and talks about unsafe code. After that, it compares Go to other programming languages
    and presents two utilities, named `dtrace(1)` and `strace(1)`, that allow you
    to see what happens behind the scenes when you execute a program. Lastly, it talks
    about how you can use the `go tool` to detect unreachable code and how to avoid
    some common Go mistakes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](33cb7975-9fb9-4c1e-b48b-628e67c04a9a.xhtml), *Go Packages, Algorithms,
    and Data Structures*, talks about algorithms and sorting in Go and about the `sort.Slice()`
    function, which requires Go version 1.8 or newer. Then it shows Go implementations
    of a linked list, a binary tree and a hash table. After that, it discusses Go
    packages and teaches you how to create and use your own Go packages. The last
    part of the chapter discusses Garbage collection in Go.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](543026ff-1c69-45b5-ae56-68b1fe41bc83.xhtml), *Files and Directories*,
    is the first chapter of this book that deals with a systems programming topic,
    which is the handling of files, symbolic links, and directories. In this chapter,
    you will find Go implementations of the core functionality of Unix tools such
    as `which(1)`, `pwd(1)`, and `find(1)`, but first you will learn how to use the
    `flag` package in order to parse the command-line arguments and options of a Go
    program. Additionally, you will learn how to delete, rename, and move files as
    well as how to traverse directory structures the Go way. The last part of this
    chapter implements a utility that creates a copy of all the directories of a directory
    structure!'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](7debeee1-e431-4d30-a868-6cc59c73adb8.xhtml), *File Input and Output*,
    shows you how to read the contents of a file, how to change them, and how to write
    your own data to files! In this chapter, you will learn about the `io` package,
    the `io.Writer` and `io.Reader` interfaces, and the `bufio` package that is used
    for buffered input and output. You will also create Go versions of the `cp(1)`,
    `wc(1)`, and `dd(1)` utilities. Lastly, you will learn about sparse files, how
    to create sparse files in Go, how to read and write records from files, and how
    to lock files in Go.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](a013a7ab-3736-4ea0-a8e7-ec72eb01b0c5.xhtml), *Working with System
    Files*, teaches you how to deal with Unix system files, which includes writing
    data to Unix log files, appending data to existing files, and altering the data
    of text files. In this chapter, you will also learn about the log and `log/syslog`
    standard Go packages, about Unix file permissions, and take your pattern matching
    and regular expressions knowledge even further using practical examples. You will
    also learn about finding the user ID of a user as well as the Unix groups a user
    belongs to. Lastly, you will discover how to work with dates and times in Go using
    the `time` package and how to create and rotate log files on your own.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](defd267a-724b-4983-a51f-7cda6bba93aa.xhtml), *Processes and Signals*,
    begins by discussing the handling of Unix signals in Go with the help of the `os/signal`
    package by presenting three Go programs. Then it shows a Go program that can rotate
    its log files using signals and signal handling and another Go program that uses
    signals to present the progress of a file copy operation. This chapter will also
    teach you how to plot data in Go and how to implement Unix pipes in Go. Then it
    will implement the `cat(1)` utility in Go before briefly presenting the Go code
    of a Unix socket client. The last section of the chapter quickly discusses how
    you can program a Unix shell in Go.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](e9f68321-ac26-49e4-bdae-44b38149afc2.xhtml), *Goroutines - Basic
    Features*, discusses a very important Go topic, which is goroutines, by talking
    about how you can create goroutines and how you can synchronize them and wait
    for them to finish before ending a program. Then it talks about channels and pipelines,
    which help goroutines communicate and exchange data in a safe way. The last part
    of the chapter presents a version of the `wc(1)` utility that is implemented using
    goroutines. However, as goroutines is a big subject, the next chapter will continue
    talking about them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](7926b940-94d5-4525-a6be-19e7acc64c05.xhtml), *Goroutines - Advanced
    Features*, talks about more advanced topics related to goroutines and channels,
    including buffered channels, signal channels, nil channels, channels of channels,
    timeouts, and the `select` keyword. Then it discusses issues related to shared
    memory and mutexes before presenting two more Go versions of the `wc(1)` utility
    that use channels and shared memory. Lastly, this chapter will talk about race
    conditions and the `GOMAXPROCS` environment variable.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](734c6cfa-6bae-44b2-9c59-da0db4177359.xhtml), *Writing Web Applications
    in Go*, talks about developing web applications and web servers and clients in
    Go. Additionally, it talks about communicating with MongoDB and MySQL databases
    using Go code. Then, it illustrates how to use the `html/template` package, which
    is part of the Go standard library and allows you to generate HTML output using
    Go HTML template files. Lastly, it talks about reading and writing JSON data before
    presenting a utility that reads a number of web pages and returns the number of
    times a given keyword was found in those web pages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](fe18fc6b-5b18-4a49-ad25-78909d80232f.xhtml), *Network Programming*,
    discusses topics related to TCP/IP and its protocols using the `net` Go standard
    package. It shows you how to create TCP and UDP clients and servers, how to perform
    various types of DNS lookups, and how to use Wireshark to inspect network traffic.
    Additionally, it talks about developing RPC clients and servers in Go as well
    as developing a Unix socket server and a Unix socket client.'
  prefs: []
  type: TYPE_NORMAL
- en: As you will see, at the end of each chapter there are some exercises for you
    to do in order to gain more information about important Go packages and write
    your own Go programs. Please, try to do all the exercises of this book.
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book requires a computer running a Unix variant with a relatively recent
    Go version, which includes any machine running Mac OS X, macOS, or Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Apple used to call its operating system as Mac OS X followed by the version
    number; however, after Mac OS X 10.11 (El Capitan), Apple changed that, and Mac
    OS X 10.12 is now called macOS 10.12 (Sierra) - in this book, the terms Mac OS
    X and macOS are used interchangeably. Additionally, there is a big chance that
    by the time you read this book, the latest version of macOS will be macOS 10.13
    (High Sierra). You can learn more about the various versions of macOS by visiting
    [https://en.wikipedia.org/wiki/MacOS](https://en.wikipedia.org/wiki/MacOS).
  prefs: []
  type: TYPE_NORMAL
- en: 'All of the Go code in this book has been tested with Go 1.8.x running on a
    iMac using macOS 10.12 Sierra and with Go version 1.3.3 running on a Debian Linux
    machine. Most of the code can run on both Go versions without any code changes.
    However, when newer Go features are used, the code will fail to compile with Go
    1.3.3: the book states the Go programs that will not compile with Go version 1.3.3
    or require Go version 1.8 or newer.'
  prefs: []
  type: TYPE_NORMAL
- en: Please note that at the time of writing this text, the latest Go version is
    1.9\. Given the way Go works, you will be able to compile all the Go code of this
    book in newer Go versions without any changes.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for Unix users, power Unix users, Unix system administrators, and
    Unix system developers that use Go on one or more Unix variants and want to start
    developing systems software using the Go programming language.
  prefs: []
  type: TYPE_NORMAL
- en: Although this book might not be the best choice for people that do not feel
    comfortable with the Unix operating system or for people who have no previous
    programming experience, amateur programmers will find lots of practical information
    about Unix that might inspire them to start developing their own system utilities.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning. Code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles are shown as follows: "This is because the `main()` function is where
    the program execution begins."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold.'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply email `feedback@packtpub.com`, and mention the book's title in
    the subject of your message. If there is a topic that you have expertise in and
    you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can download the example code files for this book from your account at
    [http://www.packtpub.com](http://www.packtpub.com). If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you. You can download the code
    files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your email address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the SUPPORT tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Download.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Go-Systems-Programming](https://github.com/PacktPublishing/Go-Systems-Programming).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/GoSystemsProgramming_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/GoSystemsProgramming_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title. To view the previously
    submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the Errata section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy. Please contact us at `copyright@packtpub.com`
    with a link to the suspected pirated material. We appreciate your help in protecting
    our authors and our ability to bring you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `questions@packtpub.com`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
