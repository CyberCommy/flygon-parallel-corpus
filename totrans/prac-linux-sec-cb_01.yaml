- en: Chapter 1. Linux Security Problems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will discuss the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The security policy of Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring password protection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring server security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting integrity checks of the installation medium using checksum
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the LUKS disk encryption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making use of sudoers – configuring sudo access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanning hosts with Nmap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaining a root on a vulnerable Linux system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Linux machine is only as secure as an administrator configures it to be. Once
    we are done with the installation of the Linux OS and we remove its unnecessary
    packages after the installation has been completed, we can start working on the
    security aspect of the software and the services provided by the Linux machine.
  prefs: []
  type: TYPE_NORMAL
- en: The security policy of Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A security policy is a definition that outlines the rules and practices to be
    followed to set up the computer network security in an organization. How the organization
    should manage, protect, and distribute sensitive data is also defined by the security
    policy.
  prefs: []
  type: TYPE_NORMAL
- en: Developing a security policy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When creating a security policy, we should keep in mind that it should be simple
    and easy for all users. The objective of the policy should be to protect data
    while keeping the privacy of users intact.
  prefs: []
  type: TYPE_NORMAL
- en: 'It should be developed around these points:'
  prefs: []
  type: TYPE_NORMAL
- en: Accessibility to the system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software installation rights on the system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data permission
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recovery from failure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When developing a security policy, a user should use only those services for
    which permission has been granted. Anything that is not permitted should be restricted
    in the policy.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring password protection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In any system, the password plays a very important role in terms of security.
    A poor password may lead to an organization's resources being compromised. The
    password protection policy should be adhered to by everyone in the organization,
    from users to the administrator level.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Follow the given rules when selecting or securing your password.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the creation policy, follow these rules:'
  prefs: []
  type: TYPE_NORMAL
- en: A user should not use the same password for all the accounts in an organization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All access-related passwords should not be the same
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any system-level account should have a password that's different from any other
    account held by the same user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For the protection policy, follow these rules:'
  prefs: []
  type: TYPE_NORMAL
- en: A password is something that needs to be treated as sensitive and confidential
    information. Hence, it should not be shared with anyone.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passwords should not be shared through any electronic communication, such as
    e-mails.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Never reveal a password on your phone or questionnaire.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not use password hints that could provide clues to an attacker.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Never share company passwords with anyone, including administrative staff, managers,
    colleagues, and even family members.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don't store passwords in written form anywhere in your office. If you store
    passwords on a mobile device, always use encryption.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don't use the *Remember Password* feature of applications.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In there's any doubt of a password being compromised, report the incident and
    change the password as soon as possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For the change policy, follow these rules:'
  prefs: []
  type: TYPE_NORMAL
- en: All users and administrators must change their password on a regular basis or
    at least on a quarterly basis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The security audit team of an organization must conduct random checks to check
    whether the passwords of any user can be guessed or cracked
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With the help of the preceding points, ensure that a password, when created
    or changed, is not easy enough to be guessed or cracked.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring server security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A major reason for malicious attacks on Linux servers has been poorly implemented
    security or existing vulnerabilities. When configuring a server, security policies
    need to be implemented properly, and ownership needs to be taken in order to properly
    customize the server.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'General Policy:'
  prefs: []
  type: TYPE_NORMAL
- en: The administration of all the internal servers in an organization is the responsibility
    of a dedicated team, which should also keep a look out for any kind of compliance.
    If any compliance takes place, the team should accordingly implement or review
    the security policy.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When configuring internal servers, they must be registered in such a way that
    the servers can be identified on the basis of the following information:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Location of the server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The operating system version and its hardware configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Services and applications that are being run
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any kind of information in the organization's management system must always
    be kept up to date.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Configuration Policy:'
  prefs: []
  type: TYPE_NORMAL
- en: The operating system on the server should be configured in accordance with the
    guidelines approved for InfoSec.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any service or application not being used should be disabled wherever possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All access to the services and applications on the server should be monitored
    and logged. They should also be protected through access-control methods. An example
    of this will be covered in [Chapter 3](ch03.html "Chapter 3. Local Filesystem
    Security"), *Local Filesystem Security*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The system should be kept updated, and any recent security patches, if available,
    should be installed as soon as possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid using a root account to the maximum extent. It's preferable to use security
    principles that require the least amount of access to perform a function.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any kind of privileged access must be performed over secure channel connection
    (SSH) wherever possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The server should be accessed in a controlled environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Monitoring Policy:'
  prefs: []
  type: TYPE_NORMAL
- en: 'All security-related actions on server systems must be logged, and audit reports
    should be saved as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For a period of 1 month, all security-related logs should be kept online
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For a period of 1 month, daily backups as well as weekly backups should be retained
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For minimum of 2 years, full monthly backups should be retained
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any event related to security being compromised should be reported to the InfoSec
    team. They shall then review the logs and report the incident to the IT department.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A few examples of security-related events are as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Port scanning-related attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to privileged accounts without authorization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unusual occurrences due to a particular application being present on the host
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Following the preceding policy helps in the base configuration of the internal
    server that is owned or operated by the organization. Implementing the policy
    effectively will minimize any unauthorized access to sensitive and proprietary
    information.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are some more things to discover when we talk about security in Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Security controls
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When we talk about securing a Linux machine, it should always start with following
    a checklist in order to help in the hardening of the system. The checklist should
    be such that following it will confirm the implementation of proper security controls.
  prefs: []
  type: TYPE_NORMAL
- en: Conducting integrity checks of the installation medium using checksum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whenever we download an image file of any Linux distribution, it should always
    be checked for correctness and safety. This can be achieved by doing an MD5 checksum
    of the downloaded image with the MD5 value of the correct image.
  prefs: []
  type: TYPE_NORMAL
- en: This helps in checking the integrity of the downloaded file. Any changes to
    the files can be detected by the MD5 hash comparison.
  prefs: []
  type: TYPE_NORMAL
- en: Whenever any changes take place in the downloaded files, the MD5 hash comparison
    can detect it. The larger the file size, the higher the possibility of changes
    in the file. It is always recommended to do the MD5 hash comparison for files
    such as operating system installation files on a CD.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The MD5 checksum is normally installed on most Linux distributions, so installation
    is not required.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First open the Linux terminal and then change the directory to the folder containing
    the downloaded ISO file using the `ubuntu@ubuntu-desktop:~$ cd Downloads` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Linux is case-sensitive, and type the correct spelling for the folder name.
    *Downloads* is not the same as *downloads* in Linux.
  prefs: []
  type: TYPE_NORMAL
- en: 'After changing to the `Downloads` directory, type the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The `md5sum` command will then print the calculated hash in a single line,
    as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Now, we can compare the hash calculated by the preceding command with the hash
    on the UbuntuHashes page ([https://help.ubuntu.com/community/UbuntuHashes](https://help.ubuntu.com/community/UbuntuHashes)).
    After opening the UbuntuHashes page, we just need to copy the preceding hash that
    has been calculated in the *Find* box of the browser (by pressing *Ctrl* + *F*).
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If the calculated hash and the hash on the UbuntuHashes page match, then the
    downloaded file is not damaged. If the hashes don't match, then there might be
    a problem with either the downloaded file or the server from where the download
    was made. Try downloading the file again. If the issue still persists, it is recommended
    that you report the issue to the administrator of the server.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here''s something extra in case you want to go the extra mile: try out the
    GUI checksum calculator that is available for Ubuntu'
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, it's really inconvenient to use a terminal in order to perform checksums.
    You need to know the right directory of the downloaded file and also the exact
    filename. This makes it difficult to remember the exact commands.
  prefs: []
  type: TYPE_NORMAL
- en: As a solution for this, there is a very small and simple software called **GtkHash**.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the tool from [http://gtkhash.sourceforge.net/](http://gtkhash.sourceforge.net/),
    and install it using this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Using the LUKS disk encryption
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In enterprises such as small businesses and government offices users may have
    to secure their systems in order to protect their private data, which includes
    customers details, important files, contact details, and so on. To do so, Linux
    provides good number of cryptographic techniques, which can be used to protect
    data on physical devices such as hard disks or a removable media. One such cryptographic
    technique uses the **Linux Unified Key Setup**-on-disk-format (**LUKS**). This
    technique allows for the encryption of Linux partitions.
  prefs: []
  type: TYPE_NORMAL
- en: 'LUKS has the following functionality:'
  prefs: []
  type: TYPE_NORMAL
- en: An entire block device can be encrypted using LUKS. It's well suited to protecting
    data on removable storage media or laptop disk drives.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once encrypted, the contents of the encrypted block devices are random, thus
    making it useful for the encryption of swap devices.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LUKS uses an existing device mapper kernel subsystem.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It also provides a passphrase strengthener, which helps in protecting against
    dictionary attacks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For the following process to work, it is necessary that `/home` is created on
    a separate partition while installing Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**WARNING**'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring LUKS using the given steps will remove all the data on the partition
    that's being encrypted. So, before starting the process of using LUKS, make sure
    to back up the data on an external source.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For manually encrypting directories follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Move to Run level 1\. Type the following command in the shell prompt or terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, unmount the current /home partition using this command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The previous command might fail if there is any process controlling `/home`.
    Find and kill any such process using the `fuser` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Check to confirm that the `/home` partition is not mounted now:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, put some random data into the partition:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The previous command might take some time to complete, so be patient. The time
    taken depends on the write speed of your device.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the previous command completes, initialize the partition:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Open the newly created encrypted device:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Check to confirm that the device is present:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Now create a filesystem:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, mount the new filesytem:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Confirm that the filesystem is still visible:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Enter the following line in the `/etc/crypttab` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Make changes in the `/etc/fstab` file to delete the entry for `/home` and add
    the following line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Once completed, run this command to restore the default SELinux security settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Reboot the machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: After rebooting, the system will prompt us for the LUKS passphrase on boot.
    You can log in as the root now and restore your backup.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Congratulations! You have successfully created an encrypted partition. Now you
    can keep all your data safe even when your computer is off.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We first move into running level 1 and unmounting the `/home` partition. Once
    unmounted, we fill some random data in the `/home` partition. Then, we initialize
    the partition, using the `cryptsetup` command to encrypt it.
  prefs: []
  type: TYPE_NORMAL
- en: Once the encryption is done, we mount the filesystem back again, and then make
    an entry of the partition in the `/etc/crypttab` file. Also, the `/etc/fstab`
    file is edited to add an entry for the preceding encrypted partition.
  prefs: []
  type: TYPE_NORMAL
- en: After completing all the steps, we have restored the default settings of SELinux.
  prefs: []
  type: TYPE_NORMAL
- en: Doing this, the system will always ask for the LUKS passphrase on boot.
  prefs: []
  type: TYPE_NORMAL
- en: Making use of sudoers – configuring sudo access
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whenever the system administrator wants to provide trusted users administrative
    access to the system without sharing the password of the root user, they can do
    so using the `sudo` mechanism.
  prefs: []
  type: TYPE_NORMAL
- en: Once the user is given access using the `sudo` mechanism, they can execute any
    administrative command by preceding it with `sudo`. Then, the user will be asked
    to enter their own password. After this, the administrative command will be executed
    in the same way as run by the root user.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As the file for the configuration is predefined and the commands used are inbuilt,
    nothing extra needs to be configured before starting these steps.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will first create a normal account and then give it `sudo` access. Once done,
    we will be able to use the `sudo` command from the new account and then execute
    the administrative commands. Follow the steps given to configure the `sudo` access.
    Firstly, use the root account to login to the system. Then, create a user account
    using the `useradd` command, as shown in the following figure:![How to do it…](img/B04234_01_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Replace `USERNAME` with any name of your choice in the preceding command.
  prefs: []
  type: TYPE_NORMAL
- en: Now, using the `passwd` command, set a password for the new user account.![How
    to do it…](img/B04234_01_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Edit the `/etc/sudoers` file by running `visudo`. The policies applied when
    using the `sudo` command are defined by the `/etc/sudoers` file.![How to do it…](img/B04234_01_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the file is open in the editor, search for the following lines, which allow
    `sudo` access to the users in the `test` group:![How to do it…](img/B04234_01_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can enable the given configuration by deleting the comment character (`#`)
    at the beginning of the second line. Once the changes are made, save the file
    and exit from the editor. Now, using the `usermod` command, add the previously
    created user to the `test` group.![How to do it…](img/B04234_01_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We need to check whether the configuration shown in the preceding screenshot
    allows the new user account to run commands using `sudo`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To switch to the newly created user account, use the `su` option.![How to do
    it…](img/B04234_01_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, use the `groups` command to confirm the presence of the user account in
    the `test` group.![How to do it…](img/B04234_01_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, run the `whoami` command with `sudo` from the new account. As we have
    executed a command that uses `sudo` for the first time, using this new user account,
    the default banner message will be displayed for the `sudo` command. The screen
    will also ask for the user account password to be entered.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_01_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The last line of the preceding output is the username returned by the `whoami`
    command. If `sudo` is configured correctly, this value will be `root`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have successfully configured a user with `sudo` access. You can now log
    in to this user account and use `sudo` to run commands the same way as you would
    from the root user.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When we create a new account, it does not have permission to run administrator
    commands. However, after editing the `/etc/sudoers` file and making an appropriate
    entry to grant `sudo` access to the new user account, we can start using the new
    user account to run all the administrator commands.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here is an extra measure that you can take to ensure total security.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability assessment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A vulnerability assessment is the process of auditing our network and system
    security through which we can know about the confidentiality, integrity, and availability
    of our network. The first phase in the vulnerability assessment is reconnaissance,
    and this further leads to the phase of system readiness in which we mainly check
    for all known vulnerabilities in the target. The next phase is reporting, where
    we group all the vulnerabilities found into categories of low, medium, and high
    risk.
  prefs: []
  type: TYPE_NORMAL
- en: Scanning hosts with Nmap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nmap is one of the most popular tools included in Linux that can be used to
    scan a network. It has been in existence for many years, and to date, it is one
    of the most preferable tools to gather information about a network.
  prefs: []
  type: TYPE_NORMAL
- en: Nmap can be used by administrators on their networks to find any open ports
    and host systems.
  prefs: []
  type: TYPE_NORMAL
- en: When doing a vulnerability assessment, Nmap is surely a tool that can't be missed.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Most Linux versions have Nmap installed. The first step is to check whether
    you already have it using this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'If Nmap exists, you should see an output similar to what is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/B04234_01_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: If Nmap is not already installed, you can download and install it from [https://nmap.org/download.html](https://nmap.org/download.html)
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to scan hosts using Nmap:'
  prefs: []
  type: TYPE_NORMAL
- en: The most common use of Nmap is to find all online hosts within a given IP range.
    The default command used to do this takes some time to scan the complete network,
    depending on the number of hosts present in the network. However, we can optimize
    the process in order to scan the range faster.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following screenshot shows you an example of this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_01_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding example, the time taken to complete the scan was 6.67 seconds
    when scanning 100 hosts. If the whole IP range for a particular network is to
    be scanned, it would take a lot more time.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, let's try to speed up the process. The `n` switch tells Nmap not to perform
    the DNS resolution of the IP addresses, hence making the process faster. The `T`
    switch tells Nmap what speed to operate at. Here, `T1` is the slowest and `T5`
    is the fastest. The `max-rtt-timeout` option specifies the maximum time required
    to wait for the response.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, the same command is shown in this example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_01_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This time, Nmap scanned the complete IP range in 1.97 seconds. Pretty good,
    right?
  prefs: []
  type: TYPE_NORMAL
- en: Port scanning using Nmap helps us discover services that are online, such as
    finding FTP servers. To do this, use the following command:![How to do it…](img/B04234_01_11.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The preceding command of Nmap shall list out all the IP addresses that have
    port 21 open.
  prefs: []
  type: TYPE_NORMAL
- en: Not only FTP, other services can also be discovered by matching the port numbers
    on which they run. For example, MySQL runs on port 3306\. The command will now
    look like this:![How to do it…](img/B04234_01_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Nmap checks for services that are listening by testing the most common network
    communication ports. This information helps the network administrator to close
    down any unwanted or unused services. The preceding examples show you how to use
    port scanning and Nmap as powerful tools to study the network around us.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Nmap also has scripting features using which we can write custom scripts. These
    scripts can be used with Nmap to automate and extend its scanning capabilities.
    You can find more information about Nmap on its official home page at [https://nmap.org/](https://nmap.org/)
  prefs: []
  type: TYPE_NORMAL
- en: Gaining a root on a vulnerable Linux system
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When trying to learn how to scan and exploit a Linux machine, one major problem
    we encounter is where to try learning it. For this purpose, the Metasploit team
    has developed and released a VMware machine called **Metasploitable**. This machine
    has been made vulnerable purposefully and has many services running unpatched.
    Due to this, it becomes a great platform to practice or develop penetration testing
    skills. In this section, you will learn how to scan a Linux system, and then using
    the scanning result, find a service that is vulnerable. Using this vulnerable
    service, we shall gain root access to the system.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Backtrack 5R2 and the Metasploitable VMware system will be used in this section.
    The image file of Metasploitable can be downloaded from [http://sourceforge.net/projects/metasploitable/files/Metasploitable2/](http://sourceforge.net/projects/metasploitable/files/Metasploitable2/).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to gain root access to a vulnerable Linux system:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, open the Metasploit console on the backtrack system by following this
    menu: navigate to **Main Menu** | **Backtrack** | **Exploitation Tools** | **Network
    Exploitation Tools** | **Metasploit Framework** | **Msfconsole**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, we need to scan the target (which is `192.168.0.1` in this example) with
    Nmap:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This figure shows the output of the command that is executed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_01_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding command, the `-Ss` option allows us to perform a stealth scan,
    and the `-A` option tries to discover the version information of the OS and service.
  prefs: []
  type: TYPE_NORMAL
- en: Also, in the preceding command, we can see that there are many services running
    on different ports. Among them is Samba, which runs on ports 139 and 445.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that Samba is a service that provides the SMB file and prints services
    for Windows systems.
  prefs: []
  type: TYPE_NORMAL
- en: Once we are able to locate the Samba service, we will just focus on it now.
    From the preceding output, we can see that Samba is running version 3.x. Now,
    we shall try to get more specific information about the service. To do this, we
    will use any of the auxiliary modules of Metasploit, such as the scanner section,
    and look for the SMB protocol.![How to do it…](img/B04234_01_14.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can see that the scanner section has a SMB version detector. Now, we'll get
    the exact version of Samba using the SMB detector program. If we search online
    for all the vulnerabilities of the particular version of Samba, we will find the
    username map script.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can now search in the list of exploits available in Metasploit to check whether
    an exploit exists for the `map script` username using the `search samba` command.![How
    to do it…](img/B04234_01_15.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have found an exploit for the map script username, and it has a rating that
    is excellent, which means that we can use this exploit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, use the map script username to gain a root level shell in the system.![How
    to do it…](img/B04234_01_16.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we shall gain root-level access to the system using the preceding exploit.
    Once we choose the exploit and configure it with the target IP address (in this
    case, `192.168.0.1`), we will execute a command to run the exploit. Doing this
    will create and give us a remote session on the target system and also open a
    command shell. Now, run the `id` command in the remote shell. This will give a
    result—`uid=0(root)gid=0(root)`. This confirms that we have remote root access
    to the target system.
  prefs: []
  type: TYPE_NORMAL
- en: How it works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We first performed an Nmap scan to check for running services and open ports
    and found the Samba service running. Then, we tried to find the version of the
    SMB service. Once we got this information, we searched for any exploit available
    for Samba. Using the exploit, we tried to attack the target system and got the
    root shell on it.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's learn about a few more exploits and attacks that are peculiar to Linux.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we shall go through a few of the common exploits and attacks
    that Linux is vulnerable to. However, in this section, will not cover any recipes
    to deal with the attacks. This section is just to let you know about the common
    exploits used in Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Null or default passwords
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Often, administrators use default passwords that are provided to them by a vendor
    or they may even leave the administrative password blank. This happens mainly
    while configuring devices, such as routers, and also in BIOSes. Even some services
    running on Linux can contain the default administrator password. It is always
    recommended that you change the default password and set a new one that is only
    known to the administrator.
  prefs: []
  type: TYPE_NORMAL
- en: IP spoofing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An attacker can find vulnerabilities on our systems and servers, and using these,
    they can install background programs or attack a network. This can be done if
    the attacker connects his system to our network in a way that makes it appear
    as though there's a node in the local network. There are various tools available
    to assist crackers while performing IP spoofing.
  prefs: []
  type: TYPE_NORMAL
- en: Eavesdropping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An attacker can collect data passing between two active nodes that communicate
    on a network by eavesdropping. This type of attack works mostly with protocols
    such as Telnet, FTP, and HTTP. Attacks of this kind can be done when the remote
    attacker already has access to any system on the network. This can be made possible
    using other attacks such as the Man in the Middle Attack.
  prefs: []
  type: TYPE_NORMAL
- en: Service vulnerabilities
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If an attacker is able to find a flaw or vulnerability in any service running
    on the network system, they can compromise the entire system and its data as well
    as other systems on the network.
  prefs: []
  type: TYPE_NORMAL
- en: Administrators should stay updated about any patches or updates that are available
    for any service or application running on the network system.
  prefs: []
  type: TYPE_NORMAL
- en: Denial of Service (DoS) attack
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When an attacker sends unauthorized packets to the target system, which could
    be a server, router, or a workstation, in large numbers, it forces the resource
    to become unavailable to legitimate users.
  prefs: []
  type: TYPE_NORMAL
- en: The packets being sent by the attacker are usually forged, making the investigation
    process difficult.
  prefs: []
  type: TYPE_NORMAL
