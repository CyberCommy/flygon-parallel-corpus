- en: Hello Vue – An Introduction to Vue.js
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to *Full-Stack Vue.js 2 and Laravel 5*! In this first chapter, we'll
    take a high-level overview of Vue.js, getting you familiar with what it can do,
    in preparation for learning how to do it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: We'll also get acquainted with *Vuebnb*, the main case-study project featured
    in this book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics this chapter covers:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Basic features of Vue, including templates, directives, and components
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advanced features of Vue including single-file components and server-side rendering
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tools in the Vue ecosystem including Vue Devtools, Vue Router, and Vuex
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The main case-study project that you'll be building as you progress through
    the book, *Vuebnb*
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instructions for installing the project code
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introducing Vue.js
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At the time of writing in late 2017, Vue.js is at version 2.5\. In less than
    four years from its first release, Vue has become one of the most popular open
    source projects on GitHub. This popularity is partly due to its powerful features,
    but also to its emphasis on developer experience and ease of adoption.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: The core library of Vue.js, like React, is only for manipulating the view layer
    from the MVC architectural pattern. However, Vue has two official supporting libraries, Vue
    Router and Vuex, responsible for routing and data management respectively.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Vue is not supported by a tech giant in the way that React and Angular are and
    relies on donations from a small number of corporate patrons and dedicated Vue
    users. Even more impressively, Evan You is currently the only full-time Vue developer,
    though a core team of 20 more developers from around the world assist with development,
    maintenance, and documentation.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: 'The key design principles of Vue are as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '**Focus**: Vue has opted for a small, focused API, and its sole purpose is
    the creation of UIs'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Simplicity**: Vue''s syntax is terse and easy to follow'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compactness**: The core library script is ~25 KB minified, making it smaller
    than React and even jQuery'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Speed**: Rendering benchmarks beat many of the main frameworks, including
    React'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Versatility**: Vue works well for small jobs where you might normally use
    jQuery, but can scale up as a legitimate SPA solution'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic features
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's now do a high-level overview of Vue's basic features. If you want, you
    can create an HTML file on your computer like the following one, open it in your
    browser, and code along with the following examples.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'If you''d rather wait until the next chapter, when we start working on the
    case-study project, that''s fine too as our objective here is simply to get a
    feel for what Vue can do:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installation
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Although Vue can be used as a JavaScript module in more sophisticated setups,
    it can also simply be included as an external script in the body of your HTML
    document:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Templates
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'By default, Vue will use an HTML file for its template. An included script
    will declare an instance of Vue and use the `el` property in the configuration
    object to tell Vue where in the template the app will be mounted:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can bind data to our template by creating it as a `data` property and using
    the mustache syntax to print it in the page:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Directives
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Similar to Angular, we can add functionality to our templates by using **directives**.
    These are special properties we add to HTML tags starting with the `v-` prefix.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 'Say we have an array of data. We can render this data to the page as sequential
    HTML elements by using the `v-for` directive:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The preceding code renders as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Reactivity
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A key feature of Vue's design is its reactivity system. When you modify data,
    the view automatically updates to reflect that change.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, if we create a function that pushes another item to our array
    of grocery items after the page has already been rendered, the page will automatically
    re-render to reflect that change:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Two seconds after the initial rendering, we see this:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Components
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Components extend basic HTML elements and allow you to create your own reusable
    custom elements.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, here I''ve created a custom element, `grocery-item`, which renders
    as a `li`. The text child of that node is sourced from a custom HTML property, `title`, which
    is accessible from within the component code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This renders as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: But probably the main reason to use components is that it makes it easier to
    architect a larger application. Functionality can be broken into reuseable, self-contained
    components.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Advanced features
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have been coding along with the examples so far, close your browser now
    until next chapter, as the following advanced snippets can't simply be included
    in a browser script.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Single-file components
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A drawback of using components is that you need to write your template in a
    JavaScript string outside of your main HTML file. There are ways to write template
    definitions in your HTML file, but then you have an awkward separation between
    markup and logic.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'A convenient solution to this is **single-file components**:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: These files have the `.vue` extension and encapsulate the component template,
    JavaScript configuration, and style all in a single file.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Of course, a web browser can't read these files, so they need to be first processed
    by a build tool such as Webpack.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Module build
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we saw earlier, Vue can be dropped into a project as an external script for
    direct use in a browser. Vue is also available as an NPM module for use in more
    sophisticated projects, including a build tool such as Webpack.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: If you're unfamiliar with Webpack, it's a module bundler that takes all your
    project assets and bundles them up into something you can provide to the browser.
    In the bundling process, you can transform those assets as well.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Vue as a module and introducing Webpack opens possibilities such as the
    following:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Single-file components
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ES feature proposals not currently supported in browsers
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Modularized code
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pre-processors such as SASS and Pug
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will be exploring Webpack more extensively in [Chapter 5](f7d2046c-81c6-416b-977e-2f166a911244.xhtml), *Integrating
    Laravel and Vue.js with Webpack*.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Server-side rendering
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Server-side rendering is a great way to increase the perception of loading speed
    in full-stack apps. Users get a complete page with visible content when they load
    your site, as opposed to an empty page that doesn't get populated until JavaScript
    runs.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: 'Say we have an app built with components. If we use our browser development
    tool to view our page DOM *after* the page has loaded, we will see our fully rendered
    app:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'But if we view the source of the document, that is, `index.html`, as it was
    when sent by the server, you''ll see it just has our mount element:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Why? Because JavaScript is responsible for building our page and, ipso facto,
    JavaScript has to run before the page is built. But with server-side rendering,
    our `index` file includes the HTML needed for the browser to build a DOM before
    JavaScript is downloaded and run. The app does not load any faster, but content
    is shown sooner.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: The Vue ecosystem
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While Vue is a standalone library, it is even more powerful when combined with
    some of the optional tools in its ecosystem. For most projects, you'll include
    Vue Router and Vuex in your frontend stack, and use Vue Devtools for debugging.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: Vue Devtools
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Vue Devtools is a browser extension that can assist you in the development
    of a Vue.js project. Among other things, it allows you to see the hierarchy of
    components in your app and the state of components, which is useful for debugging:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e2a740c8-9968-41bd-abc5-bd75678dc1e8.png)Figure 1.1\. Vue Devtools
    component hierarchy'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: We'll see what else it can do later in this section.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Vue Router
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Vue Router allows you to map different states of your SPA to different URLs,
    giving you virtual pages. For example, `mydomain.com/` might be the front page
    of a blog and have a component hierarchy like this:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Whereas `mydomain.com/post/1` might be an individual post from the blog and
    look like this:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Changing from one page to the other doesn't require a *reload* of the page,
    just swapping the middle component to reflect the state of the URL, which is exactly
    what Vue Router does.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Vuex
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vuex provides a powerful way to manage the data of an application as the complexity
    of the UI increases, by centralizing the application's data into a single store.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: 'We can get snapshots of the application''s state by inspecting the store in
    Vue Devtools:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/bf4b939f-e14b-4b6f-9ab0-a1610a226a53.png)Figure 1.2\. Vue Devtools
    Vuex tab'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: The left column tracks changes made to the application data. For example, say
    the user saves or unsaves an item. You might name this event `toggleSaved`. Vue
    Devtools lets you see the particulars of this event as it occurs.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: We can also revert to any previous state of the data without having to touch
    the code or reload the page. This function, called *Time Travel Debugging*, is
    something you'll find very useful for debugging complex UIs.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Case-study project
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After a whirlwind overview of Vue's key features, I'm sure you're keen now to
    start properly learning Vue and putting it to use. Let's first have a look at
    the case-study project you'll be building throughout the book.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Vuebnb
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vuebnb is a realistic, full-stack web application which utilizes many of the
    main features of Vue, Laravel, and the other tools and design patterns covered
    in this book.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: From a user's point of view, Vuebnb is an online marketplace for renting short-term
    lodgings in cities around the world. You may notice some likeness between Vuebnb
    and another online marketplace for accommodation with a similar name!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: You can view a completed version of Vuebnb here: [http://vuebnb.vuejsdevelopers.com](http://vuebnb.vuejsdevelopers.com).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: 'If you don''t have internet access right now, here are screenshots of two of
    the main pages. Firstly, the home page, where users can search or browse through
    accommodation options:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e7edf13d-6cd8-4425-805a-8859ba7c33ca.png)Figure 1.3\. Vuebnb home
    page'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: 'Secondly, the listing page, where users view information specific to a single
    lodging they may be interested in renting:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/8b696452-b4fe-4c1f-9e5e-bef57ff51798.png)Figure 1.4\. Vuebnb listing
    page'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Code base
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The case-study project runs through the entire duration of this book, so once
    you've created the code base you can keep adding to it chapter by chapter. By
    the end, you'll have built and deployed a full-stack app from scratch.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: 'The code base is in a GitHub repository. Download it in whatever folder on
    your computer that you normally put projects in, for example, `~/Projects`:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Rather than cloning this repository directly, you could first make a *fork* and
    clone that. This will allow you to make any changes you like and save your work
    to your own remote repository. Here's a guide to forking a repository on GitHub: [https://help.github.com/articles/fork-a-repo/](https://help.github.com/articles/fork-a-repo/).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: Folders
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The code base contains the following folders:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/518ac8ab-b6d2-40e6-895e-3104c7e15fb3.png)Figure 1.5\. Code base
    directory contents'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a rundown of what each folder is used for:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '`Chapter02` to `Chapter10` contains the *completed state* of the code for each
    chapter (excluding this one)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *images* directory contains sample images for use in Vuebnb. This will be
    explained in [Chapter 4](86698fb7-c4c0-4a6e-831d-4b8cdde3a4b8.xhtml), *Building
    a Web Service with Laravel*
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*vuebnb* is the project code you''ll use for the main case-study project that
    we begin work on in [Chapter 3](e50310e5-b580-47d0-aff6-015808cc3b1c.xhtml), *Setting
    Up a Laravel Development Environment*'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*vuebnb-prototype* is the project code of the Vuebnb prototype that we''ll
    build in [Chapter 2](b381aa06-e15c-4cb9-9b8b-4b9421ed73db.xhtml), *Prototyping
    Vuebnb, Your First Vue.js Project*'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this first chapter, we did a high-level introduction to Vue.js, covering
    the basic features such as templates, directives, and components, as well as advanced
    features such as single-file components and server-side rendering. We also had
    a look at the tools in Vue's ecosystem including Vue Router and Vuex.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们对Vue.js进行了高层次的介绍，涵盖了模板、指令和组件等基本特性，以及单文件组件和服务器端渲染等高级特性。我们还看了Vue生态系统中的工具，包括Vue
    Router和Vuex。
- en: We then did an overview of Vuebnb, the full-stack project that you'll be building
    as you progress through the book, and saw how to install the code base from GitHub.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们对Vuebnb进行了概述，这是您在阅读本书时将要构建的全栈项目，并了解了如何从GitHub安装代码库。
- en: In the next chapter, we'll get properly acquainted with Vue's basic features
    and starting putting them to use by building a prototype of Vuebnb.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将适当地了解Vue的基本特性，并开始通过构建Vuebnb的原型来使用它们。
