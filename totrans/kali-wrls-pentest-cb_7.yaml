- en: Bluetooth Attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: A brief history of Bluetooth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluetooth in operation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerabilities in Bluetooth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Selecting the Bluetooth hardware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluesmacking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluejacking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluesnarfing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bluetooth is another wireless technology that is popular and very widespread,
    and has been for way over a decade now. It is present in many aspects of our lives
    in relation to the technology that we use. However, while many of us do make use
    of Bluetooth devices and technology there may be some confusion or lack of clarity
    on specifically what Bluetooth is, what it was designed for and how it works.
    Since attacking and compromising Bluetooth and Bluetooth devices depends largely
    on having a good knowledge of how the technology works, it is actually necessary
    for us learn to some background on the technology, as well as on how the technology
    works and how it came to be. It is with that spirit in mind that we are going
    to start out with a history of Bluetooth, to understand how it was involved in
    the challenges it was designed to face. This will be followed up with a technical
    discussion of how the technology is designed and implemented, discussing also
    some of the vulnerabilities present in Bluetooth that can be exploited. So, with
    that, let's start off by talking about the history and evolution of the Bluetooth
    technology, before we get into the mechanics of the whole process.
  prefs: []
  type: TYPE_NORMAL
- en: A brief history of Bluetooth
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bluetooth technology, as originally envisioned, was something that was invented
    and put forth by the Swedish telecommunication company Ericsson. The original
    concept for Bluetooth began back in 1989 when a group of engineers at the company
    decided to come up with, or were tasked with coming up with, a short-range radio
    technology that would be able to transmit and enable communications between the
    personal computers and headsets that Ericsson was intending to bring to market
    at that time. It was this core concept of uniting devices over short-range radio
    links that spurred the evolution of the technology into connecting more than just
    headsets and personal computers but later on different types of devices much like
    we see today.
  prefs: []
  type: TYPE_NORMAL
- en: In the 90's, with the development of portable technology such as personal data
    assistants or PDAs and other similar early mobile devices, new concepts and implementations
    of Bluetooth were envisioned. Tech enthusiasts who used these early PDA devices
    such as Palm pilots were one group who wanted to be able to connect to different
    available devices in the area. This group saw themselves being able to use a short-range
    technology to be able to walk into a room and connect to the printers, scanners
    or other services and devices right there in the immediate area. It was because
    of this desire and drive that Bluetooth was quickly latched onto as a solution
    to this problem.
  prefs: []
  type: TYPE_NORMAL
- en: So where did the name Bluetooth actually originate? Well just in case you're
    one of the people who hasn't heard the story before, let me give you a brief recollection.
    The name Bluetooth is an Anglicized translation of a 10^(th) century Danish king
    known as Harald Blatland. This king has come to be known for two very important
    - or important to us at least - characteristics. First, he was known for uniting
    the various peoples of Denmark and Norway under one banner. Second, he gained
    the nickname Bluetooth because, according to legend, he either had a conspicuous
    bad tooth that appeared to be blue, or his teeth were stained blue from eating
    large amounts of blueberries. Whether the latter is true is hard to tell, but
    the fact remains that Bluetooth is now used as the name of this technology. The
    reason being that much like the king, Bluetooth technology is being used to unite
    many different technologies and allow them to talk and interoperate using one
    standard specification. This means that no matter what the vendor or other origin
    of your device, if it obeys the Bluetooth standard it can communicate with a device
    from another vendor with little or no problem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another interesting footnote; the Bluetooth logo is a combination of the runes
    which were King Harald''s initials. The following diagram shows how the Bluetooth
    logo was derived:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cb621e89-547e-443e-a2be-261338fe16df.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The creation of the Bluetooth logo
  prefs: []
  type: TYPE_NORMAL
- en: 'At the time Bluetooth debuted, the main technology that could say it was a
    competitor was infrared technology. Infrared technology allowed, or was supposed
    to allow, devices such as printers and scanners to be able to talk to one another
    wirelessly at short range. In the 90''s infrared technology was a reasonably common
    add-on to laptop computers and printers, for example. So, if Bluetooth was an
    emerging standard and infrared was already present in the field, why is infrared
    not really encountered anymore, and why aren''t there any alternatives to the
    Bluetooth technology? Well there''s an answer, but it is a little bit complicated.
    Unlike other technology such as infrared, Bluetooth allows up to eight devices
    to be paired simultaneously via short range radio technologies and form a network
    to exchange information. In fact, in some circles Bluetooth is referred to as
    personal area networking technology, or PAN. In this setup each device that is
    paired essentially acts as its own node on this small network environment. Of
    course, to achieve this type of interoperability all these devices must not only
    be Bluetooth enabled but they must use a standardized communication protocol,
    which is what Bluetooth provides in this equation. The following diagram is of
    the concept of a PAN:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e5b37549-352e-405f-9a63-866127f246d4.png)'
  prefs: []
  type: TYPE_IMG
- en: Showing a PAN
  prefs: []
  type: TYPE_NORMAL
- en: Something interesting when we are discussing Bluetooth is the fact that when
    it first debuted, Bluetooth did have some teething problems, like any new technology
    is known to have. In the case of Bluetooth, many different vendors latched onto
    the idea of Bluetooth and rushed to implement it into their own product lines
    and get these products to market. However, there was a potential downside to this
    rush, which manifested pretty seriously in early Bluetooth devices. In the rush
    to get Bluetooth implemented into their own devices, manufacturers ran into a
    problem where different Bluetooth enabled devices would not communicate with one
    another even though they were labeled as being Bluetooth compatible. In fact,
    some of these early Bluetooth devices not only couldn't communicate with devices
    from a different vendor but couldn't even communicate with devices made by the
    same vendor. This presented some very serious problems; as you can imagine, as
    consumers weren't going to be too happy when they bought Bluetooth enabled devices
    that made all sorts of claims about being Bluetooth compatible when in actuality
    they each implemented their own form of Bluetooth that was not compatible with
    others. The big reason for this was that when the vendors rushed to implement
    Bluetooth technology into their products, such as headsets, for example, the Bluetooth
    standard had not been fully fleshed out and agreed upon and therefore vendors
    had to fill in the blanks or tweak things to the way they thought they should
    be and just label the result Bluetooth. Since this time the technology has grown
    up dramatically and this early set of teething problems that plagued the technology
    has gone by the wayside, and Bluetooth enabled devices from different vendors
    communicate pretty quickly and easily now.
  prefs: []
  type: TYPE_NORMAL
- en: 'As far as technologies go, the Bluetooth standard shares a lot in common with
    the Wi-Fi technologies we''ve been dealing with in the rest of this book, but
    it''s not 100 percent in what it shares. One of the biggest things remember is
    that much like Wi-Fi technology, Bluetooth is not something that is restricted
    to any one type of product or environment. Bluetooth is something that is defined
    to be a communication standard that anyone can implement in any technology exactly
    like they would with Wi-Fi. Additionally, the Bluetooth specification is controlled
    by a special interest group known as the Bluetooth special interest group, which
    is a committee that is in charge of keeping the standard updated as well as controlling
    and handling the licensing of the technology and trademarks to the various vendors
    that are going to implement Bluetooth. Much like Wi-Fi, there have been many standards
    of Bluetooth; for example, in Bluetooth 4.2 there were updates to the feature
    set that made it so Bluetooth consumed less power when operating, transmitted
    data faster and offered much improved security over previous versions. Bluetooth
    has also evolved over the last few years to include the ability to support communication
    with the new generation of smart devices that people are seeing in their homes
    such as light bulbs, switches, cameras and even thermostats. The following diagram
    shows some of the concepts behind Bluetooth and smarthomes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2985a85f-b004-471e-b992-588a70403cf8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Bluetooth ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: 'We would be negligent if we didn''t dedicate at least a bit of ink here to
    what could be considered a competing technology, which is something known as Zigbee.
    This is a technology that debuted a little over a decade ago and is designed to
    allow data transmissions using radio signals over longer distances such as 100
    m, while the same time consuming less power. Initially the range of this technology
    made it attractive to those who relied on Bluetooth because it offered an increased
    distance in the transmissions, mainly due to the fact that Bluetooth had an effective
    range of 10 m to this technology''s 100 m. However, as of 2006 Bluetooth included
    the ability to reduce power consumption as part of its core suite of abilities.
    Bluetooth also has the ability to reach longer distances as well with the use
    of special antennas and transmitters that can make the signal reach further distances.
    The following image shows an example of a Zigbee setup:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/be245128-2125-4da3-8f86-e4c91cb44abb.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Showing a Zigbee setup.
  prefs: []
  type: TYPE_NORMAL
- en: Today Bluetooth has easily dominated the market for short range wireless and
    has been implemented in everything from smart phones to tablets to various home
    appliances and devices as well as automobiles, just to name a few. It is because
    the technology is so widely implemented that it presents a very tempting and viable
    target for an attacker wishing to find a way into an organization or a way to
    steal information.
  prefs: []
  type: TYPE_NORMAL
- en: A look at the technology
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, with the history and evolution of Bluetooth out of the way, having given
    us an idea of how the technology came to be and where it is placed in terms of
    functionality and design, let's move forward to talk about the technical specifications
    of Bluetooth and how it relates to what we do.
  prefs: []
  type: TYPE_NORMAL
- en: 'Bluetooth is technology that is designed to operate between 2 MHz and 3.5 MHz.
    As you may already be aware or recall, this is a globally unlicensed, not unregulated,
    band of frequencies allocated for industrial, scientific and medical purposes,
    commonly referred to as the ISM 2.4 GHz short range radio frequency band. Bluetooth
    operates within this band and uses technology such as the frequency hopping spread
    spectrum, or FHSS, to modulate signals. The following diagram shows where the
    ISM band is located:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c851de7e-491a-40ed-9d5f-021c87aef470.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The ISM band
  prefs: []
  type: TYPE_NORMAL
- en: When Bluetooth transmits its information, it works in a similar way to other
    types of networks in that it transmits its data by breaking it into packets and
    then transmitting each packet using one of the 79 different designated Bluetooth
    channels. Each of these channels is broken down into a 1 MHz increment individually.
    During normal operation Bluetooth hops between 800 channels per second. The new
    generation of Bluetooth low energy devices utilize 2 MHz spacing, and this means
    we only have 40 channels to hop between instead of the 79 used for its predecessor.
  prefs: []
  type: TYPE_NORMAL
- en: The architecture of Bluetooth is designed to be first of all packet-based, and
    it transmits its information and network by relying on a master and slave architecture.
    What this means is that we have one master that communicates with up to seven
    slaves in what is known as a piconet. The master device is the device that all
    of the devices synchronize their clocks off of to ensure that transmissions work
    properly and that communications work efficiently. To keep things simple the master
    device is what's in charge of keeping the network synchronized in the sleigh devices.
    Additionally, a master can transmit all data across that network.
  prefs: []
  type: TYPE_NORMAL
- en: Under normal operations a master Bluetooth device can communicate with seven
    other devices in their network setup. The setup that is being established is pretty
    much the same as an ad hoc network would be in Wi-Fi; there is no central point
    that is fixed in this network topology. Something to keep in mind is that while
    the master is a device that is communicated in addressing these other seven devices,
    it doesn't always have to be so that one device is fixed or permanently designated
    as a master. In fact, it is possible for devices to switch between being a master
    or slave at any point in time. A good example of this would be a Bluetooth headset
    that is trying to connect to a cell phone. The headset would actually start off
    as being a master as it initiates the connection out to the smart phone or cell
    phone, but once the connection is established the cell phone actually controls
    the communication, so the headset goes from being a master to a slave once the
    switch is done. This can be done by agreement between devices in any Bluetooth
    setup.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let''s talk about specific numbers in Bluetooth so that we understand some
    of the details about these different network designs and setups:'
  prefs: []
  type: TYPE_NORMAL
- en: Bluetooth 3.0 has a maximum speed of 25 MB with a maximum range of 10 m or 33
    feet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluetooth 4.0 has a maximum speed of 25 MB and has a maximum range of 60 m or
    200 feet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluetooth 5.0 has a maximum speed of 50 MB and a maximum range of 240 m or 800
    feet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Something to keep in mind when discussing Bluetooth is that the maximum speed
    and range can vary dramatically depending on a number of factors that may be present.
    In the case of range, the numbers stated here will be affected by conditions such
    as antenna design or configuration, battery power, and atmospheric density, which
    will probably appear at longer ranges, as well as interference from other devices
    that operate on the same frequency in the area. It is also possible that the same
    conditions could also result in a loss of speed or degraded speed. Whatever the
    case, even under the most ideal of conditions it is unlikely you'll ever reach
    the numbers in terms of speed and range that are claimed by any specific Bluetooth
    product.
  prefs: []
  type: TYPE_NORMAL
- en: It is possible that you could change or modify the range of a Bluetooth network
    for the use of special adapters and antennas, and in fact many of these are available
    on the third-party market. The reason that many of the specialized antennas and
    devices that are available to third party channels are not built into most devices
    is that the increased range is not really necessary for most users and actually
    adds to the cost of a device. Short range use of Bluetooth is ideal for the vast
    majority of consumers that use Bluetooth in their environments.
  prefs: []
  type: TYPE_NORMAL
- en: Just a quick note to give you a rundown on how Bluetooth stacks up against Wi-Fi,
    you may be asking why use one versus the other, so we should take a look. When
    we look at the two technologies we can see that they are very similar in that
    they are both used to share information, set up networks, print, transfer data
    of all sorts, or even communicate with other devices and resources. In many ways
    Bluetooth also solves the problem of cables that Wi-Fi addresses in its own environment,
    the difference here being that the cabling we're talking about would be the ones
    between a headset and a phone or a printer and a computer. In the case of Wi-Fi
    we would be talking cables that cover much greater distances in a location. Bluetooth
    is also designed to be a technology that requires little to no configuration to
    be used effectively while Wi-Fi does require more additional configuration after
    configuration is made. It is also worth noting that Wi-Fi operates in ad hoc as
    well as infrastructure mode, but where a centralized access point is used in Bluetooth
    there is only ad hoc mode; there is no infrastructure, as there are no Bluetooth
    access points. Even though Bluetooth and Wi-Fi address two different sets of problems
    and are good in their own way in their own environments, they should not be considered
    competing technologies but rather complementary technologies, because they do
    work together and do so very effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Bluetooth in operation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Under normal operations Bluetooth has a very specific way of functioning. We
    refer to this master and slave relationship between the controlling node and the
    client nodes and how things switch back and forth, but that's just part of the
    puzzle. Let's take a look at how the devices learn to talk to one another and
    exchange information.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Bluetooth, communication between devices is facilitated through a process
    known as pairing. Pairing is a process where one device sets itself to be discoverable,
    meaning it can be found by other Bluetooth devices in area scanning for it. The
    scanning device, upon finding this available Bluetooth device, will choose it
    as something it wants to be paired with. Once a selection is made, what happens
    at this point can vary just a little bit. In most cases a verification code is
    displayed or documented on the master device and then the device that is requesting
    to be paired will have to confirm this code before it can complete the connection.
    In some devices this code is actually hardcoded into the device whereas in others
    there is a PIN code that can be customized by the owner of the device for extra
    security. In either case, once the code is confirmed it will be assumed that the
    two devices know one another and the connection is approved. The following diagram
    shows the Bluetooth pairing process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7e92e05c-2834-4747-8633-e9a9010ece0e.png)'
  prefs: []
  type: TYPE_IMG
- en: The Bluetooth pairing process
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows a pairing request screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/caab592e-fdcc-4b92-8bc1-92749e8e69ab.png)'
  prefs: []
  type: TYPE_IMG
- en: The request to pair
  prefs: []
  type: TYPE_NORMAL
- en: Just a word about discoverability or being discoverable in Bluetooth; this mode
    is designed to essentially broadcast the name of the device, much like an SSID
    would be in Wi-Fi. However, in Bluetooth, discoverability is something that can
    be not only turned on and off but can be turned on for a limited period of time.
    This means that a cell phone can be set to be discoverable for five minutes and
    if a pairing is not made within that five-minute window the device turns itself
    from being discoverable to non-discoverable. The reason for this is that if a
    device stays discoverable other devices in the area can scan for it, and this
    may allow a malicious party to attempt to connect or even tamper with your device.
    Most modern Bluetooth enabled devices will default to a mode where when a pairing
    attempt is initiated the device will stay discoverable for a finite period of
    time, which usually lasts a few short minutes before going back to being non-discoverable.
  prefs: []
  type: TYPE_NORMAL
- en: So, with this knowledge in hand let's move on to talking about the different
    types of attacks that are possible where Bluetooth is concerned. You'll find that
    many of the attacks in this particular chapter in may ways resemble the types
    of attacks we saw with just regular Wi-Fi, and that is because there are some
    similarities between Wi-Fi and Bluetooth - but remember, they're not a hundred
    percent identical. The two are definitely not identical as far as mechanics go,
    however in concept there are a reasonable amount of similarities that will make
    the attacks look very similar, though the actual execution will be different between
    the two technologies. This is great, because it means that the concepts will be
    familiar to you, which will give you more time to focus on the actual mechanics
    and technical details of the implementation of a concept within the Bluetooth
    technology.
  prefs: []
  type: TYPE_NORMAL
- en: Within Linux, the Bluetooth protocol stack is implemented through a set of libraries
    collectively known as BlueZ. Like most Linux distributions Kali has it installed
    by default and no additional action is needed to have it present (though you may
    wish to run an update to get the latest fixes and patches to the protocol).
  prefs: []
  type: TYPE_NORMAL
- en: 'Within BlueZ there exists a number of different tools for managing and exploring
    the Bluetooth functions and capabilities. Of these a couple are particularly useful:'
  prefs: []
  type: TYPE_NORMAL
- en: '`hciconfig`: This tool operates much like `ifconfig` in Linux, with the main
    difference being that it operates on Bluetooth devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`hcitool`: This is an inquiry tool. It can provide us with device name, device
    ID, device class, and device clock.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`hcidump`: This tool enables us to sniff the Bluetooth communication.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These are not the only tools in Kali that make it possible to operate with
    Bluetooth, the following list contains some of the others that are present:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bluelog**: A Bluetooth site survey tool. It scans the area to find as many
    discoverable devices in the area as it can and then logs them to a file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bluemaho**: A GUI-based suite of tools for testing the security of Bluetooth
    devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blueranger**: A simple Python script that uses I2CAP pings to locate Bluetooth
    devices and determine their approximate distances.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Btscanner**: This GUI-based tool scans for discoverable devices within range.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Redfang**: This tool enables us to find hidden Bluetooth devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Spooftooph**: This is a Bluetooth spoofing tool.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluetooth protocol stack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Bluetooth devices don''t need to use all the protocols in the stack (like the
    TCP/IP stack). The Bluetooth stack is developed to enable the use of Bluetooth
    by a variety of communication applications. Generally, an application will only
    use one vertical slice of this stack. The Bluetooth protocols layer and their
    associated protocols are listed here:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bluetooth core protocols baseband**: LMP, L2CAP, SDP'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cable replacement protocol**: RFCOMM'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Telephony control protocol**: TCS Binary, AT-commands'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Adopted protocols**: PPP, UDP/TCP/IP, OBEX, WAP, vCard, vCal, IrMC, WAE'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition to the protocol layers, the Bluetooth specification also defines
    a **Host Controller Interface** (**HCI**). This provides a command interface to
    the baseband controller, link manager, and access to hardware status and control
    registers, hence the name of the preceding tools such as `hciconfig`, `hcidump`,
    and `hcitool`.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerabilities in Bluetooth
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Bluetooth technology has shown itself both to be very convenient and powerful,
    but at the same time it has also shown that it has its own type of vulnerabilities
    that just aren't seen in other technologies, or at least not in the same form.
    Because of the way Bluetooth operates and is designed there is the definite possibility
    of new sorts of attacks, and some such have emerged within this environment.
  prefs: []
  type: TYPE_NORMAL
- en: Recently, a family of attacks known as BlueBorne has shown up in the marketplace.
    These are designed to target Bluetooth enabled capable devices. These attacks
    have proven to be quite disturbing and concerning as they rely on what amounts
    to a new communication mechanism rather than the old one. If we look at traditional
    attacks, these are spread over networking technologies to include the internet,
    hardwired networks and even Wi-Fi. However, in the case of Bluetooth we have a
    technology that amounts to a way of facilitating very small networks, but the
    similarities quickly and almost effectively diminish. This family of attacks is
    so dangerous that it is possible for an attacker to gain full and absolute control
    of a device from the moment of exploitation. What contributes to the severity
    and dangerousness of these types of attacks is the fact that the security community
    has only just started to explore the dangers and issues of Bluetooth and the potential
    ways it can be exploited.
  prefs: []
  type: TYPE_NORMAL
- en: There are other factors that make this type of attack, and the ones we will
    explore in this chapter, more dangerous than those seen in other environments.
    One of the most dangerous aspects of a Bluetooth based attack is that it is able
    to spread through the air very quickly and rapidly both because of the ubiquity
    of wireless technology but also because of the fact that security in these devices
    is still evolving and can be lacking in many cases. Next, many of the attacks
    that have been surfacing recently in Bluetooth allow for the bypassing of any
    security measures that are present on the device, therefore meaning that the attack
    can remain effectively undetected. Another concerning issue is the fact that Bluetooth
    devices that are attached to traditional networks may also allow a malicious party
    to find a backdoor into a secure network, as devices that are attached to a regular
    network and have Bluetooth enabled may allow attackers to use the devices as an
    entry point. Finally, one of the biggest issues to really think about what Bluetooth
    is is that a file can be pushed across a Bluetooth connection and on to a targeted
    device and execute without the user ever having to click on the link or take any
    action whatsoever.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the attacks that have shown up in the Bluetooth environment are similar
    to the attacks that have been seen in other environments, including Wi-Fi. Let''s
    take a quick look at some of these attacks and vulnerabilities and see just with
    ER and talk a little bit on how to counter these attacks and vulnerabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Software vulnerabilities**: This is something that is not unique to Bluetooth,
    but it definitely plays a role in exposing Bluetooth''s different vulnerabilities
    and problems. Due to the very nature of software in terms of complexity and scale
    it is utterly unheard of for a piece of software to be 100% free of any errors
    or issues altogether. The fact is, each and every piece of software that you run
    on a computer or device has errors in it, it is just a question of how many and
    how serious those individual vulnerabilities or issues happen to be. Newer implementations
    of Bluetooth, such as Bluetooth 4.0, and newer operating systems and drivers have
    gone a long way towards addressing vulnerabilities that have appeared, but undoubtedly
    new ones have also been introduced. This is why the owner of a device that is
    Bluetooth capable should keep track of any new updates that may have been released,
    as well as see if there are any threats that may impact them and deal with them
    accordingly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Eavesdropping**: Due to the fact that Bluetooth is at its very core a networking
    technology, it makes perfect sense that it would be vulnerable to attacks such
    as eavesdropping. While eavesdropping on Bluetooth devices takes a little extra
    finesse and know-how it is still very much a viable attack that can be deployed
    against such devices and technology. However, the use of technologies such as
    encryption, which has been implemented in all versions of Bluetooth (though it
    has been better done in the newest versions) has combated the issues associated
    with information disclosure and modification. However, keep in mind that though
    older versions of Bluetooth that used encryption may have used the technology,
    the encryption technology was actually much more deficient than it is with the
    newer versions. Therefore, it is imperative to upgrade devices that use older
    Bluetooth specifications to newer versions of the technology that have addressed
    these issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Denial-of-service**: Much like wireless access points, websites, and applications,
    the Bluetooth communications technology is also vulnerable to denial of service
    if it is targeted by an attacker who wishes to overwhelm the system or jam signals
    - all of which are possible. This actually can be a very difficult attack to thwart
    effectively on the Bluetooth platform, but what can be done is to switch off the
    Bluetooth feature in a device, removing the target and therefore stopping the
    denial of service from having anything to overwhelm and shutdown.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Flaws in hardware**: While you can do a lot to patch and update the software
    that runs on your Bluetooth enabled smart phone, tablet, or computer, what you
    don''t have as much control over are the devices that you may buy from a third
    party, such as a headset. In many cases these devices do not have an easier obvious
    way, if they have them at all, to update the firmware within them to fix weaknesses
    and vulnerabilities that may be present in these devices. It is because of this
    that these devices themselves may become viable targets for a malicious party
    wishing to cause mischief or irritation to you. In some of these cases the only
    fix is to just stop using this Bluetooth accessory and change to one that does
    not have a vulnerability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Defaults**: This is a tricky one, because there''s not an immediate fix in
    a lot of cases for companies that have what amounts to weak defaults put in place.
    By weak defaults we mean that some devices that you can pair using Bluetooth have
    PIN codes that cannot be changed by the consumer. These PIN codes are set at the
    factory and they stay that way for the life of the device. This opens the device
    to potential attack because with a little investigation or observation an attacker
    can quickly look at a device, know what make and model it is, and with a simple
    internet search find the default PIN code for that device and pair with it. While
    this problem is getting to be less of an issue as time goes on, there are still
    some devices, both new and old, that have default PIN codes that cannot be changed
    by the consumer at all. In these cases, if this is a serious vulnerability you
    may have no choice but to stop using that device in favor of getting a new one
    that allows for the change.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While there are other vulnerabilities that we could add to this list, this is
    just to show you that there are some vulnerabilities with this technology. Keep
    in mind that initially this technology was not built with security in mind; it
    was something that was grafted in-built into the solution after the fact. The
    technology was built to facilitate communication between different devices that
    were in close proximity to one another across different platforms and vendors
    and it has succeeded quite well in that respect. However, the security goal was
    actually a secondary goal at best, and as such it has had to do a little bit of
    catching up as Bluetooth has been adopted and exploded in usage all over the world.
  prefs: []
  type: TYPE_NORMAL
- en: Something that has become quite a large target and has drawn some attention
    from the security technology market is the Bluetooth vulnerabilities that are
    possible with both Amazon Echo and Google Home devices. In fact, in September
    2017 it was reported that there were at least eight different vulnerabilities
    that targeted both of these lines of devices. What makes these devices and the
    vulnerabilities associated with them so incredibly bad and dangerous is that they
    are virtually undetectable by current security technologies and solutions. Something
    else to consider is that these two lines of devices collectively are estimated
    to have at least 20 million currently vulnerable devices deployed into homes and
    other locations worldwide.
  prefs: []
  type: TYPE_NORMAL
- en: These types of attacks are a form of what has been come to be known as **blueborne**
    attacks, as mentioned previously
  prefs: []
  type: TYPE_NORMAL
- en: Selecting the Bluetooth hardware
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's really take a look in this section at some of the hardware and components
    and other items that can be used to improve as well as operate with Bluetooth
    technologies effectively. You will find, when we go through our exploration of
    some of the different Bluetooth hardware, that conceptually a lot of it is the
    same as what we have in Wi-Fi technology, but not all of it is identical. However,
    whether the concept is the same or different than what we see in Wi-Fi, we will
    cover it nonetheless, just to ensure that you know and are aware of what components
    come over to Bluetooth and which ones do not.
  prefs: []
  type: TYPE_NORMAL
- en: First of all, let's note that most systems nowadays, whether it be a laptop
    computer or a desktop system or any mobile device such as a tablet or smart phone,
    all essentially ship with Bluetooth capabilities built-in right at the factory.
    In fact, devices such as cars, radios, gaming systems, toys and many other devices
    that include internet devices also tend to ship with Bluetooth nowadays. So, it
    is very likely that you will run into a device that has Bluetooth capabilities
    built-in, and thus you may not have to add any special features on to your device
    to be able to perform Bluetooth explorations. However, the hardware that is typically
    built in that supports Bluetooth on stock devices does not typically have all
    the capabilities you need to perform every sort of attack. However, on those devices
    that do not support Bluetooth stock or need to have this capability enhanced,
    we need to worry about the special hardware or additions that we can use to make
    this technology work.
  prefs: []
  type: TYPE_NORMAL
- en: Most devices in today's market are going to support Bluetooth. It has become
    an expected feature by the consumers of modern devices. It's probably safe to
    say that any devices released within the last decade are going to have Bluetooth
    capabilities as part of their feature set.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the most common ways to add Bluetooth to a device such as a laptop is
    to simply purchase what is known as a Bluetooth dongle. This dongle is a plug
    that is typically USB, which slides into an available USB slot on a computer and
    then allows that dongle to be paired with a Bluetooth capable device, whether
    it be a printer, mouse, or other peripheral. This type of solution is one that
    tends to be very common and implemented on older devices that do not have Bluetooth
    built-in when the owner wishes to add this capability. The following screenshot
    shows a Bluetooth dongle:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e7c5de26-e78e-4db7-b289-bf85a03850ec.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Bluetooth dongle
  prefs: []
  type: TYPE_NORMAL
- en: Dongles are useful for adding Bluetooth to a device that doesn't already have
    the ability to support Bluetooth, but you may find that they are limited for the
    types of test we are going to be performing in this chapter. We will not be using
    Bluetooth dongles for the tests in this chapter, as in most cases it can be just
    too limiting for what we are intending to perform, though you may want to try
    to do so on your own.
  prefs: []
  type: TYPE_NORMAL
- en: 'An option that is of importance to us in our usage of USB is the addition of
    a USB adapter which is more than just a simple dongle. These specialized adapters
    add the ability to increase the performance and transfer rate of data or even
    increase the range of Bluetooth that may be present in the device already. This
    is not an uncommon solution to have for tech enthusiasts or those that have higher
    performance or different data transfer requirements than may be possible from
    the default capabilities that are built in to their respective platforms. Again,
    much like the dongle base solution, these are typically going to come in the form
    of a USB device. The following screenshot is of a Bluetooth adapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a46c21f5-1810-4d64-b092-379b3ca724d0.png)'
  prefs: []
  type: TYPE_IMG
- en: Dlink Bluetooth adapter
  prefs: []
  type: TYPE_NORMAL
- en: 'Something that tends to come into importance with what we are doing here in
    this chapter is the ability to increase the range of a Bluetooth device. In most
    cases, Bluetooth range can be measured in very short distances, relatively speaking.
    In most cases Bluetooth can only be expected to reliably go up to a distance of
    about 10 m or roughly 30 feet. Some devices do vary this ability and extend this
    range out maybe just a bit further, but the stillness intend to be a great distance
    in most cases. This presents a problem if you are performing pen testing explorations
    as we are going to be doing in this chapter, as it is very hard to stay undetected
    when you have to stay in such a tight radius of your target, or maybe get even
    closer to get a reliable signal. Ideally, we want to have a situation where we
    can attack and interact with our target from a much greater range that is available
    in most stock devices. In this situation, we can get Bluetooth adapters that are
    designed for industrial applications that can go up to a few hundred feet in some
    cases a few thousand feet in distance. Adapters of this type tend to be built
    for industrial or specialized applications and must be purchased aftermarket as
    a USB enabled device that can be plugged into any free USB port, and with the
    help of special drivers they can be interacted with fully by the operating system.
    The following photograph is of an industrial Bluetooth adapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/738f5a4a-dedc-4fdf-a1a5-e9a013b88def.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Sena Bluetooth adapter
  prefs: []
  type: TYPE_NORMAL
- en: 'Another piece of hardware that comes into use with Bluetooth that can be very
    helpful is the use of special antennas that can extend the range of these adapters.
    Adapters such as the one mentioned previously, designed for industrial applications,
    do tend in a lot of cases to have the ability to screw on or bolt on antennas
    that can vary the range that the device is able to pick up. That means that a
    device that may only be able to allow for the detection of a Bluetooth signal
    from a few hundred feet may be able to extend that range out to the few thousand-foot
    ranges. If you need this type of range, it is important that you purchase an adapter
    that has the ability to plug-in an external antenna, and to know the connection
    type that it needs, because the special connections can vary. The following image
    shows some Bluetooth adapters with some examples of antennas next to them:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7f11505c-6ba3-4c91-be41-7f8a856c439b.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Adapters with external antennas.
  prefs: []
  type: TYPE_NORMAL
- en: One last item that is worth discussing when talking about Bluetooth capabilities
    and options that may be necessary is that of packet injection. Packet injection
    is a technique that we have seen with Wi-Fi already, specifically when we performed
    WEP cracking in a previous chapter. If you recall, we used packet injection to
    place ARP broadcast packets onto a network and generate a bunch of traffic. A
    Bluetooth adapter that is built into a device such as a laptop, smart phone, or
    tablet will pretty much never have this capability as part of its stock features.
    The reason being that this is not an ability needed by most consumers and does
    add to the expense of the device; thus, it is typically not added. So, if you
    decide to perform any attacks later on that will perform packet injection, you
    almost surely will have to go with an external adapter in just about every case.
  prefs: []
  type: TYPE_NORMAL
- en: With these little details in hand about Bluetooth hardware, let's go ahead and
    start taking a look at some attacks we can perform using Bluetooth.
  prefs: []
  type: TYPE_NORMAL
- en: Types of attack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The attacks that target authentication on wireless networks are varied, with
    each having its own advantages and disadvantages that make them useful or not
    useful in any given situation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we start exploring each one of our attacks, let''s first lay out the
    attacks that will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Bluesmacking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluejacking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bluesnarfing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MAC spoofing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Man-in-the-middle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remember, these are just a few of the types of attacks that can be used to subvert
    the authentication of a wireless network; they should never be considered the
    only types of attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Bluesmacking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first type of attack we will cover is known as Bluesmacking, and is one
    of the older types of attacks against this protocol. You will find in our explorations
    of this attack that it is a variation of a common attack against networks, devices
    and applications known as a **Denial-of-service**.
  prefs: []
  type: TYPE_NORMAL
- en: In a nutshell, when we carry out a Bluesmacking attack, we are carrying out
    an attack through which a specially crafted packet can make a device unusable.
    This attack works by transmitting a data packet that exceeds the maximum packet
    size available on Bluetooth devices. The end result is that the device cannot
    process the packet and the target becomes the victim of a Denial-of-service. This
    attack is a variation of the well-known attack known as the **ping of death**.
  prefs: []
  type: TYPE_NORMAL
- en: So what is the ping of death? A ping of death is a classic DoS attack that is
    generated by a malicious party transmitting an IP packet larger than the 65,536
    bytes allowed by the IP protocol. Since the IP protocol relies on the use of fragmentation,
    attackers quickly found that if they fragmented a packet into pieces it could
    be reassembled by a target and exceed this 65,536 limit. Since operating systems
    were not ever designed to receive a packet of this size, they would freeze, crash
    or reboot upon receipt of this packet.
  prefs: []
  type: TYPE_NORMAL
- en: Adding additional levels of danger to this type of attack is the fact that the
    identity of the receiver could be spoofed.
  prefs: []
  type: TYPE_NORMAL
- en: In response to this attack, product vendors patched their devices and software
    to reduce the possibility of this attack in 1997\. However, it is still present
    in Bluetooth.
  prefs: []
  type: TYPE_NORMAL
- en: The effect of this DoS can take many forms, all of which make the target device
    unusable for a period of time. The effect can be that the device is overwhelmed
    by an attacker, causing it to be inoperable by its owner and draining the device's
    battery, affecting the continued operation of the device after the attack.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To get things started you will need to have the following items in place:'
  prefs: []
  type: TYPE_NORMAL
- en: A Bluetooth enabled device or external adapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to carry out a Bluesmack attack we are going to use a part of the built-in
    BlueZ stack to make things happen. This can be a very effective attack against
    a Bluetooth device, it can effectively leave the victim no choice but to shut
    off their device, their Bluetooth, or move out of range.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let''s use `hciconfig` at the Terminal to confirm that our Bluetooth
    adapter is on and recognized:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The results of the command will look something like the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/258b3ccf-3161-417b-ac00-c684bf403980.png)'
  prefs: []
  type: TYPE_IMG
- en: From this screenshot you can see that the Bluetooth adapter is labeled with
    an address (much like a MAC address on a physical network adapter). It also has
    a name of `hci0`.
  prefs: []
  type: TYPE_NORMAL
- en: 'We may need to bring up and enable the Bluetooth adapter so we can ensure that
    it is up and ready for use by issuing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we will scan for Bluetooth devices in the area using `hcitool`. We''ll
    first use the scanning portion of this tool to look for Bluetooth devices that
    are sending out their discovery beacons (in discovery mode):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the command has listed a device you wish to investigate further, you can
    use the `inq` command to inquire about the devices. You can use the command like
    so:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This will display different types of information, including the class information
    which informs us as to what type of device is being scanned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will use the **Service Discovery Protocol** (**SDP**) to search for
    services on a device. BlueZ includes a tool called `sdptool` which is capable
    of browsing a device for the services it provides. We can use it by typing:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'With the MAC addresses of all the nearby devices, we can ping them, whether
    they are in discovery mode or not, to see whether they are in reach:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This indicates that the device with a MAC address `76:6F:46:65:72:67` is within
    range and reachable.
  prefs: []
  type: TYPE_NORMAL
- en: Bluejacking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bluejacking is another type of attack that can be carried out via Bluetooth
    to susceptible devices in range. However, it is important to discuss how it is
    works before making bluejacking happen. In a nutshell, bluejacking is an attack
    where unsolicited messages are transmitted over Bluetooth to Bluetooth-enabled
    devices such as mobile phones, PDAs, Laptops, and so on, sending a contact which
    typically contains a message in the name field to another Bluetooth enabled device
    via the OBEX protocol. Remember that the bluejacker does not take control of your
    phone via the bluejacking technique; the attacker simply sends messages via Bluetooth.
    Think of this type of attack as spamming using the Bluetooth protocol.
  prefs: []
  type: TYPE_NORMAL
- en: I am showing this attack here in the interest of being complete in showing the
    vulnerability present in Bluetooth enabled devices. This type of attack does not
    require Kali to carry out successfully.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To get things started you will need to have the following items in place:'
  prefs: []
  type: TYPE_NORMAL
- en: A Bluetooth adapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are the steps to carry out this attack:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the address book. Create a New contact.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When creating the contact, enter the message you wish to bluejack into the contact
    name part.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose Send card via Bluetooth.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for Bluetooth devices in range.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the one of the devices found.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click Send.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Bluesnarfing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bluesnarfing is an interesting and very powerful attack that can be employed
    against vulnerable devices. In a nutshell, Bluesnarfing is the unauthorized access
    of device through a Bluetooth connection, often between phones, laptops, and similar
    types of devices. This attack provides access to various types of data and resources
    on the target, and on some phones users can copy pictures and private videos.
  prefs: []
  type: TYPE_NORMAL
- en: This type of attack targets any Bluetooth capable device that has its connection
    turned on and is discoverable by a scanning party. Turning off Bluetooth as well
    as keeping a device from being discoverable is a workaround for this problem.
  prefs: []
  type: TYPE_NORMAL
- en: For a device to be targeted, the attacker must guess the device's MAC address
    via a brute force attack. As is normal with brute force attacks, guessing the
    right MAC address is only a matter of time.
  prefs: []
  type: TYPE_NORMAL
- en: Bluetooth uses a 48-bit unique MAC Address, of which the first 24 bits are common
    to a manufacturer. The remaining 24 bits have approximately 16.8 million possible
    combinations, requiring an average of 8.4 million attempts to guess by brute force.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To get things started you will need to have the following items in place:'
  prefs: []
  type: TYPE_NORMAL
- en: A wireless card capable of entering monitor mode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The items listed here are basic requirements and you could easily use more (or
    different) components if so desired. If you want enhanced range, for example,
    you could use a USB based wireless card that has connections for an external antenna
    that could get better reception.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that Bluesnarfer is installed, configure `rfcomm`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now to scan for potential vulnerabilities:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Ping the victim to see if he is there:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Browse the victim for `rfcomm` channels to connect to:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Now Bluesnarfer is set up. Now, you can access the victims phone to see texts,
    make phone calls and so on:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
