- en: Getting Started with VuePress
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 1](4e1526aa-d994-42d8-9a18-12374ba932a0.xhtml), *Introducing Static
    Site Generators and VuePress*, we learned what static site generators are, as
    well as their possible advantages, and why we should use them. Further, we were
    also introduced to some major static site generators, as well as Vue.js.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, it is time to turn all of our attention toward Vue.js and VuePress.
    Of course, if you are unfamiliar with the way VuePress works, you might be feeling
    daunted by it at the moment. But there is nothing to worry about—VuePress is rather
    easy to set up and even easier to master. As you will soon see, VuePress setup
    is certainly not rocket science at all.
  prefs: []
  type: TYPE_NORMAL
- en: However, in order to properly set up and install VuePress and make sure all
    the dependencies are met, we first need to familiarize ourselves with Vue.js for
    a while. This will help us better comprehend why VuePress requires a given system
    setup to work, and what should be done to get the most out of this simple and
    swift site generator.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, it is time to turn our attention toward Vue.js.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will look at the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with VuePress
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic Vue.js terminology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparing Vue.js with other **JavaScript** (**JS**) frameworks, such as React
    or Angular
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the VuePress methodology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VuePress installation and basic configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting started with Vue.js and VuePress
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we head toward VuePress and its connection to Vue.js, let's have a look
    at what Vue.js is and how it can be useful to us.
  prefs: []
  type: TYPE_NORMAL
- en: What is Vue.js?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Simply put, Vue.js is an open source JS framework meant mainly for building
    user interfaces. It comes with an MIT license, which means you can extend its
    source code and build newer projects using it.
  prefs: []
  type: TYPE_NORMAL
- en: The biggest and most obvious goal of Vue.js is that it aims to be inherently
    adoptable. So, if you have projects that make use of other JS libraries or frameworks,
    you do not have to abandon them to use Vue.js—instead, you can choose to use it
    alongside the other JS libraries or frameworks that you might already be using.
  prefs: []
  type: TYPE_NORMAL
- en: Vue.js can easily power single page applications and also act as a web application
    framework.
  prefs: []
  type: TYPE_NORMAL
- en: So, what is the big deal behind Vue.js that makes it different from the rest
    of the pack? The primary motive or inspiration behind Vue.js is to simplify web
    development. Further, it is mostly non-opinionated, thereby providing for a uniform
    set of offerings for development.
  prefs: []
  type: TYPE_NORMAL
- en: As such, Vue.js is more geared toward **user interface** (**UI**) development.
    You can embed its core components into any existing project, or even make use
    of build tools and supporting libraries to set up single page applications.
  prefs: []
  type: TYPE_NORMAL
- en: All Vue templates are valid HTML that can be read and parsed by any modern web
    browser. This means anything you build using Vue can be rendered across all devices
    and browsers with ease. As you progress with VuePress, you will notice this feature
    of Vue is a big advantage that can help you avoid a lot of compatibility issues.
  prefs: []
  type: TYPE_NORMAL
- en: Now, how does Vue work? It's simple, actually. Each time you make an update
    to a JS object, the view is updated by Vue. Such *reactive* nature means that
    the output is rendered or re-rendered as and when changes are made, rather than
    compelling or forcing a complete refresh.
  prefs: []
  type: TYPE_NORMAL
- en: Some basic Vue.js terminology
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will bypass all detailed learning about Vue.js functioning here, simply because
    that is beyond the scope of our book. For a better understanding of Vue.js itself
    (and not VuePress), you can check out any of the awesome Packt books on the subject.
    For now, we will only be familiarizing ourselves with a few definitions so that
    when we use them in VuePress, they will be easier to recollect.
  prefs: []
  type: TYPE_NORMAL
- en: We have already learned that Vue templates follow an HTML-based syntax. Now,
    each template can be accompanied by *Components*. In simple words, Components
    are blocks of reusable code that are used to extend the functionality of existing
    HTML elements.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, Vue.js comes with its own ways of applying transition effects. These
    can be done in the form of CSS transitions or JS hooks. In advanced VuePress projects,
    you may find yourself integrating custom JS animation libraries for transition
    effects. This, of course, depends on the nature of your project and is not always
    required for a single page application or a blog.
  prefs: []
  type: TYPE_NORMAL
- en: Why not some other JS framework?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section primarily pertains to folks who already have an existing background
    in JS and might be familiar with a JS framework or two. If you are a beginner
    with JS frameworks and Vue.js is the first framework you're becoming acquainted
    with, you can skip this portion.
  prefs: []
  type: TYPE_NORMAL
- en: However, if you already are aware of other frameworks, you might be wondering
    what it is that Vue.js can offer that other frameworks cannot?
  prefs: []
  type: TYPE_NORMAL
- en: Some of the most popular JS frameworks are Angular and React, and will be discussed
    in the following section.
  prefs: []
  type: TYPE_NORMAL
- en: Angular/AngularJS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Compared to Angular, Vue does not seem to be that popular. For all practical
    purposes, Angular is the bigger name of the two—it is backed by Google, is really
    easy to get started with, and is highly popular, which means there is no dearth
    of literature related to it.
  prefs: []
  type: TYPE_NORMAL
- en: However, Vue has a few benefits of its own. To begin with, Angular is highly
    opinionated about application structure—this is ideal for beginners, and also
    for developers who want to follow a specific pattern for app development. However,
    Vue offers greater flexibility and total control over your projects. This means
    you have more room for experimentation, as Vue is highly adaptable for a wide
    range of use cases.
  prefs: []
  type: TYPE_NORMAL
- en: Angular uses two-way data binding, whereas Vue relies on one-way data flow between
    its components. AngularJS (not Angular), in real-world scenarios, tends to become
    slower as the application grows in size and magnitude. This is because of multiple
    watchers between transactions. But neither Vue nor Angular suffer from this drawback.
  prefs: []
  type: TYPE_NORMAL
- en: It is interesting to note that in Vue, there is no one right way to structure
    your application. This means that you have greater flexibility and control. But,
    as a downside, it also implies that mobility from Vue to other frameworks (or
    vice versa) can sometimes be seriously hampered. Angular, on the other hand, has
    a good list of structuring rules that can enforce standards, but can also seem
    highly limiting for some users.
  prefs: []
  type: TYPE_NORMAL
- en: This is why the learning curve of AngularJS is very steep. There are various
    API standards that a developer must bear in mind. For Vue coders, such requirements
    are fewer in number.
  prefs: []
  type: TYPE_NORMAL
- en: React
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: React and Vue have a good deal in common. It will be easy to argue either for
    or against any of these frameworks—while React is meant for scaling and is a good
    framework by all standards, Vue has less of a steep learning curve for many users.
  prefs: []
  type: TYPE_NORMAL
- en: With that said, there is one area where Vue is currently behind React. React
    lets you write natively rendered apps for both iOS and Android. This means your
    application can seamlessly run across multiple platforms. Vue currently is attempting
    to do the same with Weex, a project that is currently being incubated by the Apache
    Foundation. See more at [https://weex.apache.org/](https://weex.apache.org/).
  prefs: []
  type: TYPE_NORMAL
- en: Weex is still in the testing phase and has not been as popularly adopted as
    React. This gives React a very clear edge over Vue.
  prefs: []
  type: TYPE_NORMAL
- en: Everything else
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ember, another reputed JS framework, differs from Vue in that in Ember, you
    need to manually declare dependencies for everything and also wrap it all in objects.
    In Vue, you can utilize plain JS objects too. Vue is significantly faster and
    better in terms of performance when compared to Ember, simply because Vue can
    automatically run batch updates.
  prefs: []
  type: TYPE_NORMAL
- en: Polymer, another JS framework backed by Google, differs from Vue in that the
    former requires basic polyfills to work, whereas Vue does not require any dependencies
    or polyfills (unless you are aiming for older web browsers).
  prefs: []
  type: TYPE_NORMAL
- en: Thus, we can see that Vue has several advantages and benefits of its own when
    compared to other JS frameworks. If you are a React or Angular user, you might
    already have assessed how Vue is going to be different from others. It is simple,
    allows for reusability of components, and consumes fewer resources.
  prefs: []
  type: TYPE_NORMAL
- en: How is Vue.js related to VuePress?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VuePress describes itself as *Vue-powered*, and that is exactly what the relationship
    is between the two. Vue.js powers VuePress, or, in other words, VuePress is based
    on Vue.js.
  prefs: []
  type: TYPE_NORMAL
- en: 'This means that all of the aforementioned features that you read about Vue.js
    can be made use of by VuePress users. Therefore, VuePress can be used to generate
    single page applications on the fly that render in web browsers very quickly and
    do not cause a strain on server resources. The fact that Vue.js is the backbone
    of VuePress means the following:'
  prefs: []
  type: TYPE_NORMAL
- en: VuePress is fast and swift to operate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can load pages and **single page applications** (**SPAs**) very quickly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It does not require a vast amount of memory to operate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding what makes VuePress special
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VuePress generates pre-rendered HTML in a static form once it is run and, after
    that, it can run as an SPA, so there are no repeated calls to the server for every
    simple query.
  prefs: []
  type: TYPE_NORMAL
- en: This is what makes VuePress special. Unlike other tools and platforms for website
    creation, VuePress is not resource-hungry. It is a simple site generator with
    minimal setup. As we will see later in this chapter, setting up VuePress does
    not require complex knowledge of rocket science or server management. You can
    do it within minutes, and even a basic learner of JS can get started with it.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, if you are a Markdown user, VuePress can be of special use for
    you, as its entire project structure is based in Markdown. We will, as a matter
    of fact, cover Markdown extensions in VuePress in a later chapter of this book
    so as to help you get better acquainted with it.
  prefs: []
  type: TYPE_NORMAL
- en: All in all, VuePress is what you should use if you wish to make use of the advantages
    that Vue has to offer. By making judicious use of Vue components, as well as coupling
    it up with Markdown extensions and the ability for custom templates, VuePress
    can serve as the perfect, highly customizable, and versatile static site generator
    for a wide variety of users.
  prefs: []
  type: TYPE_NORMAL
- en: How does VuePress work?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At the very basic level, every VuePress website has two major parts:'
  prefs: []
  type: TYPE_NORMAL
- en: A static site generator that has a Vue-based theming system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A default VuePress theme that is ideally meant for documentation sites, but
    can easily be customized for other uses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, every page that VuePress generates is in static HTML and is fully search
    engine optimized. Upon page load, however, the static content is then turned into
    an SPA for faster performance.
  prefs: []
  type: TYPE_NORMAL
- en: Now, each SPA, as we can see, is powered by Vue. Vue makes use of the Vue router
    that seamlessly integrates with the Vue.js core and helps making HTML5-friendly
    SPAs an easy task. More information about vue-router is available at [https://github.com/vuejs/vue-router](https://github.com/vuejs/vue-router).
  prefs: []
  type: TYPE_NORMAL
- en: 'To finally bundle the scripts and put together the code structure, VuePress
    relies on webpack. This is a popular tool that can be used to bundle scripts,
    code, images, and other media into one coherent unit for display in modern web
    browsers, and is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/5ab1e2c8-a3b4-45bb-9ecc-77271f40b92c.png)'
  prefs: []
  type: TYPE_IMG
- en: You can learn more about webpack at [https://webpack.js.org](https://webpack.js.org).
  prefs: []
  type: TYPE_NORMAL
- en: Since VuePress makes use of Markdown, it relies on Markdown—that is, it compiles
    Markdown files into HTML. You can also embed dynamic content and make use of code
    inside your content as markdown—it can handle both. More info about it can be
    found at [https://markdown-it.github.io](https://markdown-it.github.io).
  prefs: []
  type: TYPE_NORMAL
- en: Thus, we can see that VuePress makes use of standard tools and services that
    are all freely available and open source. In other words, you do not have to rely
    on complex proprietary software for learning VuePress and building your projects
    using it.
  prefs: []
  type: TYPE_NORMAL
- en: What can VuePress do?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The big question, however, is, what can be accomplished using VuePress?
  prefs: []
  type: TYPE_NORMAL
- en: VuePress comes with built-in Markdown extensions and the ability to leverage
    Vue inside Markdown. This means it is ideal for people looking to quickly generate
    websites and put content online. Furthermore, since its theming system is based
    on Vue, it is a good start for anyone wanting to develop websites using Vue.js
  prefs: []
  type: TYPE_NORMAL
- en: VuePress offers multiple language support and also comes with Google Analytics
    integration. The default VuePress theme is perfect for documentation websites
    and projects. It is fully responsive and mobile-friendly, has a native header-based
    search, and even navigation menus and sidebar. This means that VuePress is perfect
    for basic website development, web apps, and documentation projects.
  prefs: []
  type: TYPE_NORMAL
- en: However, on the downside, VuePress still does not have perfect blogging support.
    You can use it for blogging, but it does not come with out-of-the-box features
    for this. Similarly, while you can call and make use of any Vue.js extension that
    you feel like, VuePress does not have any plugins of its own.
  prefs: []
  type: TYPE_NORMAL
- en: This means that VuePress is a lightweight site generator meant for the average
    web development project, and not necessarily meant for bulkier and highly niche-focused
    projects.
  prefs: []
  type: TYPE_NORMAL
- en: What about the alternatives?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You might be wondering: why should we use VuePress, and not something else?'
  prefs: []
  type: TYPE_NORMAL
- en: For a start, VuePress is an exciting new project that is based on Vue and can
    offer a great learning and development experience.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike many other similar tools, VuePress focuses entirely on static websites
    and SPAs. For instance, while Nuxt is quite similar to VuePress, the former focuses
    entirely on building applications. VuePress, on the other hand, comes with features
    that make it a perfect tool for online documentation projects and other static
    sites.
  prefs: []
  type: TYPE_NORMAL
- en: Speaking of documentation, solutions such as Docsify and Docute are good picks
    too, as both are based on Vue and come with features that help you put together
    technical documentation easily. However, Docsify and Docute are both runtime-driven.
    It has become common knowledge by now that runtime-driven apps tend to fare poorly
    in terms of **search engine optimization** (**SEO**). VuePress, on the other hand,
    does very well with SEO too.
  prefs: []
  type: TYPE_NORMAL
- en: Along similar lines, VuePress offers a edge over Hexo too. A lot of people use
    Hexo (even many Vue.js users tend to rely on Hexo). But Hexo's rendering of Markdown
    is not as versatile and flexible as that of VuePress, which is a clear advantage
    that the latter has over the former.
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, VuePress, in spite of being relatively new and comparatively
    unheard of, has a good set of features that can make it a good choice for a lot
    of users.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have read and understood how VuePress works and exactly what it
    has to offer, we can turn our attention to actually setting things up with VuePress.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with VuePress
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now it is time to get things rolling. We have by now understood what Vue.js
    is and the major features it has to offer. Furthermore, we have also learned what
    VuePress does, how it is related to Vue.js, and what its major uses and features
    are. At this point, we are ready to get started with VuePress and head toward
    the creation of awesome web projects with it.
  prefs: []
  type: TYPE_NORMAL
- en: The first step, naturally, will be installation and setup of VuePress, so that
    it is live, running, and ready for use.
  prefs: []
  type: TYPE_NORMAL
- en: Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It must be noted that VuePress requires Node.js version 8 (or higher) to run,
    so you will have to have Node.js on your server in order to run VuePress.
  prefs: []
  type: TYPE_NORMAL
- en: VuePress requires Node.js 8 or higher on the server side.
  prefs: []
  type: TYPE_NORMAL
- en: There are two popular ways to install VuePress. You can choose to install it
    globally if VuePress is the only or primary tool that you will be using. Alternatively,
    if you are using VuePress within a bigger workflow, you may choose to install
    it as a dependency within an existing project.
  prefs: []
  type: TYPE_NORMAL
- en: Considering the fact that this is a quick-start guide and is meant to help you
    get familiar with VuePress quickly, using VuePress within a bigger and more complex
    existing project is technically beyond the scope of this book. Nonetheless, we
    will cover the commands for both types of installation to help you understand
    the key difference between the two.
  prefs: []
  type: TYPE_NORMAL
- en: Installing VuePress globally
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are two ways in which you can install VuePress:'
  prefs: []
  type: TYPE_NORMAL
- en: Using npm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Yarn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: npm is the default tool that comes with Node.js and most Node.js developers
    are highly familiar with its abilities. Yarn is also a highly popular dependency
    management system for JS developers. It works with a wide range of JS frameworks
    and libraries and is very fast, because it can cache every package that you download—this
    way, there is no need to re-download anything again.
  prefs: []
  type: TYPE_NORMAL
- en: If you have been actively following JS development, you may already be aware
    of both npm and Yarn. There are no blatant advantages of using one over the other
    here, as far as the global installation of VuePress is concerned—for the most
    part, it is a matter of personal preference. However, it is recommended to avoid
    using npm when installing VuePress within an existing project.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is how the global installation of VuePress is accomplished:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This example has four simple steps with which you can install VuePress. Nothing
    else. Let us now analyze each of these steps in greater detail, starting with
    the first command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command with install VuePress globally. Note that it uses Yarn.
    For npm users, the syntax will look something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The second command, as follows, will create a Markdown file for us to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The third command is to finally get VuePress started, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Lastly, the build command is entered as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: That's all. You have successfully installed VuePress globally on your server
    or localhost and can start building your next web project using it. Of course,
    some basic configuration might be required to further polish your site, but we
    can turn to this later on.
  prefs: []
  type: TYPE_NORMAL
- en: Installing VuePress within an existing project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is a good idea to install VuePress as a dependency inside an existing project.
    Keeping in mind that VuePress is a relatively newer entity and requires decent
    knowledge of JS development, you may already be running various JS projects of
    your own. In such cases, having VuePress as a local dependency within your existing
    project means you can make use of its innumerable features and abilities for your
    project—say, to render a single page app for your project, or maintain content,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Installation of VuePress as a local dependency is rather simple. You just need
    to issue the relevant Yarn command, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Or, for npm users, the command will look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Remember that I mentioned previously to avoid using npm when installing VuePress
    within an existing project? This is because if your project has Webpack 3.x as
    a dependency already, npm will not be able to generate the correct dependency
    tree or structure for VuePress. It is worth noting that Webpack is highly popular
    and is used by several JS projects. As a result, for all practical purposes, when
    adding VuePress as a local dependency, you should consider using Yarn.
  prefs: []
  type: TYPE_NORMAL
- en: When adding VuePress as a local dependency with webpack 3.x required, you should
    consider using Yarn.
  prefs: []
  type: TYPE_NORMAL
- en: 'Following this, you need to create a docs directory as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'And then, as previously, we will create the Markdown file for our project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: That's all!
  prefs: []
  type: TYPE_NORMAL
- en: 'At this stage, you may wish to add some scripts to your `package.json` file.
    It is worth noting that the requirements for scripts will obviously depend on
    your project''s purpose and workflow. Some examples are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, to write scripts, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Or, for npm users, the command will look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'To generate static assets for your project, enter this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'For npm users, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: The generated assets and built static files can be deployed to any server. This
    topic demands a separate discussion of its own and we will revisit it in later
    chapters as we progress with VuePress deployment.
  prefs: []
  type: TYPE_NORMAL
- en: 'For now, you should be able to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Install VuePress using Yarn or npm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Install VuePress either globally or as a dependency inside an existing package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding VuePress configuration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far, we have learned how to install VuePress. However, in order to do anything
    fruitful with VuePress (or any JS project, for that matter), it is important to
    first comprehend the configuration structure.
  prefs: []
  type: TYPE_NORMAL
- en: VuePress configuration is fairly simple and straightforward to understand. Upon
    installation, you will notice a docs directory in your VuePress project, which,
    in turn, will contain the `readme.md` Markdown file that you created during the
    installation process. Other than that, you might also notice a package.json file.
  prefs: []
  type: TYPE_NORMAL
- en: Now, you should create a `.vuepress` directory inside the docs directory. This
    `.vuepress` directory is where your `config.js` file will reside—this file, as
    any JS developer can tell you, should export a JS object.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, to add a title and description to your VuePress site, your `config.js`
    file will export the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: The preceding code will export a title and description for the final page that
    is rendered by your VuePress installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows how a default VuePress directory structure should
    look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b66f21f5-14c5-4bfe-954e-09851a4d2cc6.png)'
  prefs: []
  type: TYPE_IMG
- en: It is noteworthy that you can use alternative configuration formats as well,
    rather than solely using `config.js`. For example, you can use YAML (which will
    then have a `config.yml` file) or TOML (which uses a `config.tml` file).
  prefs: []
  type: TYPE_NORMAL
- en: However, considering the fact that most VuePress users will have a fair amount
    of familiarity with Vue.js, and will be more comfortable using `config.js` as
    the default format, we will stick to it throughout the course of this book.
  prefs: []
  type: TYPE_NORMAL
- en: Other configurations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VuePress also allows you to edit theme configurations to personalize your website.
    VuePress comes with its own default theme that can be tweaked and customized to
    meet your needs. However, we will turn to theme configuration and tweaks only
    during [Chapter 6](905d5d93-1344-4d8c-aa47-5969daa6609f.xhtml), *Theme Development
    in VuePress*, which deals exclusively with custom theme development.
  prefs: []
  type: TYPE_NORMAL
- en: As we discussed earlier in this chapter, VuePress can be used to generate a
    single page web app. This means you can use custom hooks to add app-level configurations
    to your VuePress project. This is useful if you have previous experience with
    Vue.js and wish to import or make use of existing Vue.js plugins and components
    from an existing project.
  prefs: []
  type: TYPE_NORMAL
- en: 'In that case, you will need to add an additional `enhanceApp.js` file to your
    `.vuepress` directory. In that file, you can then specify custom hooks for adding
    plugins and registering components. The general syntax of the `.vuepress`/`enhanceApp.js`
    file looks as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Note the following  roles played by each of the elements in the preceding code:'
  prefs: []
  type: TYPE_NORMAL
- en: The `Vue` mentions the version of Vue being used by your *VuePress* app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `options` specifies the options for the Vue instance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `router` specifies options for the router instance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `siteData` contains the metadata for your app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that app-level enhancements are not required if your app does not need
    them.
  prefs: []
  type: TYPE_NORMAL
- en: You can find a detailed list of all the configuration references for VuePress
    in the official documentation itself at [https://vuepress.vuejs.org/config/#basic-config](https://vuepress.vuejs.org/config/#basic-config).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This brings us to the end of this chapter. We have so far covered all of the
    basic info related to Vue.js and VuePress. We have also learned what VuePress
    is, what it can do, what type of projects and applications or websites it can
    handle, and how it fares when compared to the others in its league. Similarly,
    we have also familiarized ourselves with some basic knowledge about Vue.js and
    how it is useful, what it can do, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Beyond that, we have also covered how to install and set up VuePress. We learned
    how to install VuePress both globally, as well as in the form of a dependency
    in an existing project. We covered topics related to basic VuePress configuration
    files.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will be turning our attention toward VuePress development.
    However, instead of custom development at a large scale, we will first be focusing
    on asset handling and other custom calls. This will enable you to understand and
    better comprehend how VuePress works, and some coding tweaks you can use to get
    the most out of it. Thereafter, we will get started with the creation of a live
    site using VuePress, and then head to theme development.
  prefs: []
  type: TYPE_NORMAL
