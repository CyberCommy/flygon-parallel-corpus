- en: Chapter 8. Creating and Deploying Packages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have all of the pieces that are needed to create Node.js applications
    and servers, we will now focus more on sharing our modules and contributing to
    the eco-system.
  prefs: []
  type: TYPE_NORMAL
- en: All the packages on npm have been uploaded, maintained, and contributed by someone
    in the community, so let's have a look at how we can do the same ourselves.
  prefs: []
  type: TYPE_NORMAL
- en: Creating npm packages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We can start with the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First we need to create a user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Once we have a user we have opened the gates to npm.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s create a package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To publish this package all we need to do is run `npm publish`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'You can see that we have published our package successfully, you can view the
    one I published at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.npmjs.com/package/njs-e-example-package](https://www.npmjs.com/package/njs-e-example-package)'
  prefs: []
  type: TYPE_NORMAL
- en: You will have to name your package something else in order to publish it; otherwise,
    we will have a conflict.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we can run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Then we will have the package! Isn't that pretty cool?
  prefs: []
  type: TYPE_NORMAL
- en: 'If we try to publish again, we will get an error because version `1.0.2` is
    already published, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating npm packages](img/B04729_08_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To increment our package version, all we need to do is execute:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we can publish again:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: You can go to your packages page on npm and you will see that the version number
    and release count has been updated.
  prefs: []
  type: TYPE_NORMAL
- en: Versioning in Node.js follows the `semver` schema, which is made up of major,
    minor, and patch versions. When the patch version is incremented, it means that
    the API has stayed the same however something has been fixed behind the scenes.
    If the minor version has been incremented, it means that a non-breaking API change
    has occurred, such as a method has been added. If the major version is updated,
    it means that there has been a breaking API change; for example a method has been
    deleted or a method signature has changed.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, there are things in your project that you don't want to be pushed
    out for other people to have. This could be an original source, some certificates,
    or maybe some keys for development. Just like when using `git`, we have an ignore
    file called `.npmignore`.
  prefs: []
  type: TYPE_NORMAL
- en: By default, if there is no `.npmignore` but there is a `.gitignore`, npm will
    ignore what is matched by the `.gitignore` file. If you don't like this behavior
    then you can just create an empty `.npmignore` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `.npmignore` file follows the same rules as `.gitignore`, which are as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Blank lines or lines starting with `#` are ignored
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Standard glob patterns work
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can end patterns with a forward slash `/` to specify a directory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can negate a pattern by starting it with an exclamation point `!`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For example, if we had a directory of certificates in which we had a key:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'We probably don''t want this to be published, so in our ignore file we will
    have:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'We also don''t want any `key` files that we have lying around, so we add this
    as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s publish:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s install our package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, when we list what''s in the directory, we don''t see all our certificates
    being passed around:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: This is great, but what if we want to protect our entire package and not just
    a few certificates?
  prefs: []
  type: TYPE_NORMAL
- en: 'All we need to do is set `private` to `true` in our `package.json` file and
    it will prevent npm from publishing the module when we run `npm publish`:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Our `package.json` should look something like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, when we run `npm publish`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Awesome, that's exactly what we wanted to see.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Looks like we are getting closer to being ready with all things about Node.js.
    We know now how to set up, debug, develop, and distribute our software.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next chapter, we will cover one more concept we need to know about:
    unit testing.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Prepared for Bentham Chang, Safari ID bentham@gmail.com User number: 2843974
    © 2015 Safari Books Online, LLC. This download file is made available for personal
    use only and is subject to the Terms of Service. Any other use requires prior
    written consent from the copyright owner. Unauthorized use, reproduction and/or
    distribution are strictly prohibited and violate applicable laws. All rights reserved.'
  prefs: []
  type: TYPE_NORMAL
