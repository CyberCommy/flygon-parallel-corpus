- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: HTML5 is everywhere, from PCs to tablets, smartphones, and even modern TV sets.
    The web is the most ubiquitous application platform and information medium. More
    recently, HTML5 has become a first-class citizen in established operating systems
    such as Microsoft Windows 8, Firefox OS, and Google Chrome OS.
  prefs: []
  type: TYPE_NORMAL
- en: Openness is one of the important aspects of the web. HTML5 is one of the primary
    ways to oppose private and proprietary solutions that force the usage of certain
    technologies. There is a true revolution happening in the past few years. JavaScript
    has risen to the lead position in web application development for both server
    side and client side.
  prefs: []
  type: TYPE_NORMAL
- en: In the past, it was very common to get half done scripts and poorly written
    JavaScript, thus the language formed a bad reputation. HTML5 features are already
    available and widely underused. There is a huge deal of web applications that
    reinvent the wheel, when there is already a feature in HTML5 that they need.
  prefs: []
  type: TYPE_NORMAL
- en: This book will get you on the fast track to learning modern HTML5 features.
    By the end of the book, you should have a solid understanding of JavaScript in
    the browser and server. On top of that, you will end up creating cool, little
    applications using new HTML5 technologies, and learn how to adapt your existing
    applications to use these great new features.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Display of Textual Data"), *Display of Textual
    Data*, covers what you need to know about displaying text in HTML5\. This includes
    formatting numbers, displaying math formulas, and measurements. Additionally,
    there are sections on displaying tabular data and rendering Markdown that show
    some of the everyday development functionality.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Display of Graphical Data"), *Display of
    Graphical Data*, begins by covering the creation of charts using the Flot chart
    library, as well as the more modern data-driven `D3.js`. Displaying maps with
    routes and markers is also covered in this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Animated Data Display"), *Animated Data Display*,
    explores the creation of animated and interactive visualizations. Most of the
    chapter visualization are based on `D3.js`, but there are also examples that start
    from scratch or use technology such as the notifications API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Using HTML5 Input Components"), *Using HTML5
    Input Components*, begins by covering the use of simple text input elements, and
    moves to the new input types that are added by HTML5\. It also covers the use
    of the new attributes, as well as making more advanced input that uses geolocation
    or drag-and-drop areas.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Custom Input Components"), *Custom Input
    Components*, continues with the topics from the preceding chapter, with the main
    focus shifting to the creation of custom controls that add new functionality,
    or mimic components available in the desktop applications. This chapter explains
    how to create controls, such as menus, dialogs, list selection, and rich-text
    input.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Data Validation"), *Data Validation*, introduces
    the HTML5 way of handling form validation. The chapter will cover validation of
    text and numbers, built-in validations for e-mail and numbers. Furthermore, it
    also covers server-side validation with Node.js, and shows how to combine client
    and server-side validation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Data Serialization"), *Data Serialization*,
    provides an in-depth look into the creation of JSON, base64, and XML from client-side
    JavaScript, as well as the reverse process of making the JavaScript objects from
    the formats.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Communicating with Servers"), *Communicating
    with Servers*, gets you started with Node.js and the creation of REST API''s.
    The chapter also contains detailed information on how to make HTTP calls from
    pure JavaScript, how to handle binary files, as well as communication security.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Client-side Templates"), *Client-side Templates*,
    introduces the use of the popular client-side template languages Handlebars, EJS,
    and Jade. It covers and compares the basic uses of these languages, as well as
    their more advanced features, such as partials, filters, and mixins.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Data Binding Frameworks"), *Data Binding
    Frameworks*, gets you started with two different types of web frameworks. On the
    one hand we have Angular, a powerful representative of the many different client-side
    MVC frameworks, and on the other hand we have Meteor, a reactive framework that
    cuts down the development time in certain domains.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.html "Chapter 11. Data Storage"), *Data Storage*, explores
    the new client-side storage APIs available in HTML5, as well as the new APIs for
    working with files. These new features enable us to persist data beyond page refresh,
    and save client-side information that will not be transferred back and forth on
    each request.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.html "Chapter 12. Multimedia"), *Multimedia*, covers some
    of the ways for playing video and audio files in the browser, something that was
    done by external plugins in the past.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix A](apa.html "Appendix A. Installing Node.js and Using npm"), *Installing
    Node.js and Using npm*, gives a simple introduction on installing Node.js and
    using its package manager npm.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix B](apb.html "Appendix B. Community and Resources"), *Community and
    Resources*, contains a short history and references to the main organizations
    that empower the development of HTML5.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All you need to get started is a modern browser, such as Firefox, Chrome, Safari,
    Opera, or Internet Explorer 9, a simple text editor such as Notepad++, Emacs,
    or Vim, and an Internet connection.
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 7](ch07.html "Chapter 7. Data Serialization"), *Data Serialization*
    and later chapters, you will also need to install Node.js to try out some of the
    recipes. The installation process is covered in *Appendix A*, *Installing Node.js
    and Using npm*.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for programmers who already have used JavaScript in one way or
    the other. It's for people who work with a lot of backend code, and want to get
    up to speed with the world of HTML5 and JavaScript. It's for people who have used
    copy/paste to patch up a part of a page and want to know more about how things
    work in the background. It's for JavaScript developers who would like to update
    their knowledge with new techniques and capabilities made possible with HTML5.
  prefs: []
  type: TYPE_NORMAL
- en: The book is for both beginners and seasoned developers, assuming that you will
    have some experience in HTML, JavaScript, and jQuery already, but not necessary
    an in-depth knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish among
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text are shown as follows: "The `d3.behavior.zoom()` method enables
    us to add automatic zoom functionality to our `projection` type with the given
    scale and range of zoom in `scaleExtent`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Also we can add an attribute data-placeholder that will contain default text,
    such as **Occupation** in our example. If this is not specified, it will default
    to **Select Some Option** for single select."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
