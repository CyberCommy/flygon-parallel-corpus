- en: Chapter 7. A Responsive Website for Business with Foundation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*In this era, where many people are connected to the Internet, having a website
    becomes an essential for a company of any size—a small company or a Fortune 500
    company with multibillion businesses. Therefore, in this third project of this
    book, we are going to build a responsive website for business.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*To build the website, we will adopt a new framework called Foundation. Foundation
    is built by ZURB, a web-development agency based in California. It''s a meticulously
    crafted framework with a stack of interactive widgets. On the technical side,
    Foundation styles are built on top of Sass and SCSS. Hence, we will also walk
    through the subject during the course of working on the project.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*To work towards this project, first let''s assume that you have a business
    idea. It might be a bit exaggerated, but it''s a brilliant idea that could potentially
    turn into a multibillion-dollar business and change the world. You have an awesome
    product baked, and now it''s time to build the website. You are very excited and
    cannot wait to rock the world.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*So, without further ado, let''s get the project started.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter will primarily revolve around Foundation, and the topics that
    we are going to cover herein include:'
  prefs: []
  type: TYPE_NORMAL
- en: Examining the website design and layout in wireframe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looking into Foundation features, components, and add-ons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing the project directories and assets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Obtaining the Foundation package through Bower
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Constructing the website HTML structure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Examining the website layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First and foremost, unlike the previous two projects we did, we are going to
    examine the website layout in wireframe before going any further in the chapter.
    After examining it, we will discover the Foundation components that are required
    for the website, along with the components and assets that may not be available
    in the Foundation package. The following is the website layout in the normal desktop
    screen size:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Examining the website layout](img/image00342.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding wireframe shows that the website will have five sections. The
    first section, plainly, is the header. The header section will contain the website
    logo, menu navigation, a few lines of catchphrases, and a button—many call it
    a call-to-action button.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The following are a couple of references in regard to guidelines, best practices,
    and examples of call-to-action buttons. These are old posts, yet the underlying
    guidelines, tips, and principles are timeless; it's still valid and relevant to
    date.
  prefs: []
  type: TYPE_NORMAL
- en: 'Call to Action Buttons: Examples and Best Practices ([http://www.smashingmagazine.com/2009/10/13/call-to-action-buttons-examples-and-best-practices/](http://www.smashingmagazine.com/2009/10/13/call-to-action-buttons-examples-and-best-practices/)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '"Call To Action" Buttons: Guidelines, Best Practices And Examples ([http://www.hongkiat.com/blog/call-to-action-buttons-guidelines-best-practices-and-examples/](http://www.hongkiat.com/blog/call-to-action-buttons-guidelines-best-practices-and-examples/)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How To Design Call to Action Buttons That Convert ([http://unbounce.com/conversion-rate-optimization/design-call-to-action-buttons/](http://unbounce.com/conversion-rate-optimization/design-call-to-action-buttons/)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Normally, people need to get as much information as they can about the advantages
    and disadvantages before deciding to buy. So, under the header, we will display
    the list of items of the product or the key features offered.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the features list, we will also display customer testimonials
    within a slider. According to [www.entrepreneur.com](http://www.entrepreneur.com)
    ([http://www.entrepreneur.com/article/83752](http://www.entrepreneur.com/article/83752)),
    displaying customer testimonials is one of the effective ways to drive more customers
    or sales, which is eventually good for business.
  prefs: []
  type: TYPE_NORMAL
- en: Below the testimonial section, the website will display the plan and price tables.
    And the last section will be the footer, containing secondary website navigation
    and links to Facebook and Twitter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s now see how the website''s layout will be in a smaller viewport size,
    which is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Examining the website layout](img/image00343.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Much like the websites we built in the previous projects, all the content will
    be stacked. The catchphrases and the call-to-action button are aligned to the
    center. The menu in the navigation is now depicted as the hamburger icon. Next,
    we will see what Foundation has to offer in its package to build the website.
  prefs: []
  type: TYPE_NORMAL
- en: A look into Foundation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Foundation ([http://foundation.zurb.com/](http://foundation.zurb.com/)) is one
    of the most popular frontend development frameworks. It is used by a number of
    notable companies, such as Pixar, Washington Post, Warby Parker ([https://www.warbyparker.com/](https://www.warbyparker.com/)),
    and so on. As mentioned, Foundation ships with common web components and interactive
    widgets. Herein, we will look into the components, as well as the widgets we are
    going to employ for the website.
  prefs: []
  type: TYPE_NORMAL
- en: The grid system
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The grid system is an integral part of a framework. It is one thing that makes
    managing web layout feel like a breeze. Foundation's grid system comprises twelve
    columns that can adapt to narrow viewport size through the drop-in classes provided.
    Similar to both the frameworks we explored in the previous chapters, the grid
    consists of rows and columns. Every column has to be wrapped within a row for
    the layout to span properly.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Foundation, apply the `row` class to define an element as a row, and apply
    the element with the `columns` or `column` class to define it as a column. For
    example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You may also omit the *s* from `columns`, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The column size is defined through the following series of classes:'
  prefs: []
  type: TYPE_NORMAL
- en: '`small-{n}`: This specifies the grid column width in the small viewport size
    scope (approximately 0 px – 640 px).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`medium-{n}`: This specifies the grid column width in the medium viewport size
    scope (approximately 641 px – 1,024 px).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`large-{n}`: This specifies the grid column width in the large viewport size
    scope (approximately 1,025 px – 1,440 px).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `{n}` variable we gave in the preceding class names represents a number
    that spans from `1` to `12`. The sum of the column number within a row should
    be no more than `12`.
  prefs: []
  type: TYPE_NORMAL
- en: 'These classes can be applied in conjunction within a single element. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding example gives the following result in the browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The grid system](img/image00344.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Resize the viewport size such that it is small enough and that the columns''
    width shifts following the assigned classes. In this case, each column has an
    equal width since both of them are assigned with the `small-6` class:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The grid system](img/image00345.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Generally, you may resize the viewport size by dragging the browser window.
    If you are using Chrome, you can activate the device mode and mobile emulator
    ([https://developer.chrome.com/devtools/docs/device-mode](https://developer.chrome.com/devtools/docs/device-mode)).
    Or, if you use Firefox, you can enable the responsive design view ([https://developer.mozilla.org/en-US/docs/Tools/Responsive_Design_View](https://developer.mozilla.org/en-US/docs/Tools/Responsive_Design_View)),
    which will allow you to resize the viewport size without having to drag the Firefox
    window.
  prefs: []
  type: TYPE_NORMAL
- en: The buttons
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The button is essential for any kind of website, and we will certainly add
    a button in some places in the website. Foundation uses the `button` class to
    define an element as a button. You can assign the class to the elements, such
    as `<a>` and `<button>`. This class applies the default button styles, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The buttons](img/image00346.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Furthermore, you can include additional classes to define the button color
    or context. Use one of the classes—`secondary`, `success`, `alert`—to set the
    button color:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The buttons](img/image00347.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can also specify the button size using one of the following classes: `tiny`,
    `small`, or `large`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The buttons](img/image00348.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Make the button fancier with rounded corners using one of the classes, `radius`
    and `round`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The buttons](img/image00349.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are a few more classes to form a button. Additionally, Foundation also
    provides multiple types of buttons, such as button groups, split buttons, and
    dropdown buttons. Hence, you may go to the **Buttons** section of the Foundation
    documents to find more about them.
  prefs: []
  type: TYPE_NORMAL
- en: The navigation and top bar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One of the important sections on a website is the navigation. The navigation
    helps users to browse the website from one page to another. Foundation, in this
    case, provides a couple of navigation types, and among them, one is called the
    top bar. Foundation''s top bar will reside at the very top of the website before
    any content or section. The following is how the top bar will appear with the
    Foundation default style:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The navigation and top bar](img/image00350.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The top bar is responsive. Try resizing the browser''s viewport size such that
    it is small enough, and you will find that the navigation is concealed within
    the menu, which requires us to click on **MENU** to reveal the full list of the
    menu items:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The navigation and top bar](img/image00351.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Foundation top bar is primarily formed with the `top-bar` class to apply
    the styles, the `data-topbar` attribute to run the JavaScript function related
    to the top bar, and finally `role="navigation"` for better accessibility.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, the following code is how we start to build the top bar in Foundation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Foundation splits the top bar content into two sections. The left-hand side
    area is called the title area, consisting of the website name or logo. Foundation
    constructs this section with the list element, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The second section is simply called the top bar section. Typically, this section
    contains the menu, buttons, and search form. Foundation sets this section using
    the `top-bar-section` class, along with the `left` and `right` class to specify
    the alignment. So, to put it all together, the following is the complete code
    to build a basic Foundation top bar, as you see in the preceding screenshots:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Certainly, you will have to link the Foundation CSS style sheet beforehand in
    the document to see the top bar look.
  prefs: []
  type: TYPE_NORMAL
- en: The pricing tables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Whether you are selling products or services, you should name your price.
  prefs: []
  type: TYPE_NORMAL
- en: 'As we will build a website for business, we will need to display pricing tables.
    Fortunately, Foundation has included this component at its core, hence we won''t
    need a third-party extension. For flexibility, Foundation structures a pricing
    table with the list element, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Each item in the list is set with a class, which I''m sure has explained itself
    through the name. Given the preceding HTML structure and the default style given
    through the Foundation CSS, the output turns out quite nicely, as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The pricing tables](img/image00352.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Moving around Orbit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The carousel or slider is one of the most popular design patterns on the web.
    Despite the debate with respect to its accessibility, many people still love to
    have it on their website—and so do we. Herein, we want to employ Orbit ([http://foundation.zurb.com/docs/components/orbit.html](http://foundation.zurb.com/docs/components/orbit.html)),
    the Foundation jQuery plugin to display a content slider.
  prefs: []
  type: TYPE_NORMAL
- en: Orbit is customizable in that we can fully control the output, as well as the
    behavior of the slide through classes, attributes, or JavaScript initiation. We
    can also add almost anything within the Orbit slides, including textual content,
    images, links, and the mix. And needless to say, we can style most of its parts.
  prefs: []
  type: TYPE_NORMAL
- en: How is Orbit constructed?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Foundation uses the `list` element to construct the slide container, as well
    as the slides, and initiates the functionality using the HTML5 `data-` attribute
    named `data-orbit`. The following is a basic example of the Orbit slider structure,
    containing two slides of images:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Deploying Orbit is downright easy, and technically, it can contain almost any
    type of content within the slide and not only images. We will look more in that
    regard later as we build the website.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For the time being, feel free to explore the Orbit slider section ([http://foundation.zurb.com/docs/components/orbit.html](http://foundation.zurb.com/docs/components/orbit.html))
    in Foundation's official website, which, to my account is the best place to get
    into the Orbit slider.
  prefs: []
  type: TYPE_NORMAL
- en: Adding add-ons, the font Icons
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Foundation also provides a handful of add-ons, one of which is Webicons ([http://zurb.com/playground/social-webicons](http://zurb.com/playground/social-webicons)).
    Needless to say, we will need social icons, and since these icons are basically
    vectors, they are infinitely scalable and thus will remain crisp and sharp in
    any screen resolution–—normal or high definition. Have a look at the following
    icon set:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding add-ons, the font Icons](img/image00353.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: A few of the glyphs in the icon set
  prefs: []
  type: TYPE_NORMAL
- en: 'Aside from this icon set, you can also find the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A collection of starter templates ([http://foundation.zurb.com/templates.html](http://foundation.zurb.com/templates.html))
    that will be useful to kick-off a new website and webpage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Responsive tables ([http://foundation.zurb.com/responsive-tables.html](http://foundation.zurb.com/responsive-tables.html))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stencils ([http://foundation.zurb.com/stencils.html](http://foundation.zurb.com/stencils.html)),
    which you will find useful for sketching and prototyping new websites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further on Foundation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Detailing every corner and aspect of Foundation is beyond the scope of this
    book. These are, by far, the most essential components of the framework that we
    are going to employ in the project and the website.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fortunately, Packt Publishing has published a couple of titles that exclusively
    cover Foundation. I suggest you have a look at one of the following books if you
    are keen on further exploring the framework:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Learning Zurb Foundation*, *Kevin Horek*, *Packt Publishing* ([https://www.packtpub.com/web-development/learning-zurb-foundation](https://www.packtpub.com/web-development/learning-zurb-foundation))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*ZURB Foundation Blueprints*, *James Michael Stone*, *Packt Publishing* ([https://www.packtpub.com/web-development/zurb-foundation-blueprints](https://www.packtpub.com/web-development/zurb-foundation-blueprints))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additional required assets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are several files that we will need in addition to Foundation's own components.
    These files encompass the image cover for the website header, the icons that will
    represent the feature in the website feature list section, the favicon image as
    well as the Apple icons, the avatar image to display in the testimonial section,
    and finally (which is also important) the website logo.
  prefs: []
  type: TYPE_NORMAL
- en: 'In terms of the header image, we will use the following image photographed
    by Alejandro Escamilla, which shows a man working with his Macbook Air; the screen
    seems off though ([http://unsplash.com/post/51493972685/download-by-alejandro-escamilla](http://unsplash.com/post/51493972685/download-by-alejandro-escamilla)):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Additional required assets](img/image00354.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The icons to display alongside the feature list items are designed by Nick
    Frost from Ballicons ([http://ballicons.net/](http://ballicons.net/)). Among the
    icons in the collection that we will include in the website are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Additional required assets](img/image00355.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The following are the favicon and the Apple icon, which are generated using
    a Photoshop action called AppIconTemplate ([http://appicontemplate.com/](http://appicontemplate.com/)):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Additional required assets](img/image00356.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Favicon and the Apple icon
  prefs: []
  type: TYPE_NORMAL
- en: 'We will use the mystery man of WordPress as the default avatar. This avatar
    image will be displayed above the testimonial lines, as shown in the following
    wireframe:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Additional required assets](img/image00357.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The mystery man
  prefs: []
  type: TYPE_NORMAL
- en: 'The logo of this website is made with SVG for the sake of clarity and scalability.
    The logo is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Additional required assets](img/image00358.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You can get all these assets from the source files that come along with this
    book. Otherwise, grab them from the URL that we showed in the preceding paragraphs.
  prefs: []
  type: TYPE_NORMAL
- en: The project directories, assets, and dependencies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once we assess the website layout, the framework features, and all the assets
    required, we will start working on the project. Herein, we will start getting
    the project directories and the assets organized. Also, we will grab and record
    all the project dependencies through Bower, the second project with Bootstrap.
    So, it's time for action.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – organizing the project directories, assets, and dependencies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the `htdocs` folder, create a new folder, and name it `startup`. This is
    the folder in which the website will live.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Within the `startup` folder, create a folder named `assets` to contain all the
    assets like the style sheets, JavaScripts, images, and others.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Inside the `assets` folder create folders to group these assets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`css` for the style sheets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`js` to contain the JavaScripts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`scss` to contain SCSS style sheet (more about SCSS in the next chapter).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`img` to contain the images.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fonts` to contain the font icons.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add the images, including the website logo, header image, icons, and the avatar
    image, as shown in the following screenshot:![Time for action – organizing the
    project directories, assets, and dependencies](img/image00359.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, we will download the project dependencies, which will include the Foundation
    framework, the icons, jQuery, and a couple of other libraries. Hence, let''s open
    a terminal or command prompt if you are using Windows. Then, navigate to the project
    directory with the `cd` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In Windows: `cd \xampp\htdocs\startup`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In OSX: `cd /Applications/XAMPP/htdocs/startup`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In Ubuntu: `cd /opt/lampp/htdocs/startup`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we did in the second project, type the command, fill out the prompts to set
    the project specification, including the project name and the project version,
    as shown in the following screenshot:![Time for action – organizing the project
    directories, assets, and dependencies](img/image00360.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When all the prompts are filled and completed, Bower will generate a new file
    named `bower.json` to put all the information in.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we install the project dependencies, we will set the dependencies folder
    destination. To do so, create a dot file named `.bowerrc`. Save the file with
    the following lines in it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: This line will tell Bower to name the folder components instead of `bower_components`.
    And once the configuration is set, we are ready to install the libraries, starting
    with installing the Foundation package.
  prefs: []
  type: TYPE_NORMAL
- en: To install the Foundation package through Bower, type `bower install foundation
    ––save`. Make sure that the `--save` parameter is included to record Foundation
    within the `bower.json file`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Apart from the Foundation primary package (files like the style sheet and JavaScript),
    this command will also grab libraries that are associated with Foundation, namely:'
  prefs: []
  type: TYPE_NORMAL
- en: Fastclick ([https://github.com/ftlabs/fastclick](https://github.com/ftlabs/fastclick))
  prefs: []
  type: TYPE_NORMAL
- en: jQuery ([http://jquery.com/](http://jquery.com/))
  prefs: []
  type: TYPE_NORMAL
- en: jQuery Cookie ([https://github.com/carhartl/jquery-cookie](https://github.com/carhartl/jquery-cookie))
  prefs: []
  type: TYPE_NORMAL
- en: jQuery Placeholder ([https://github.com/mathiasbynens/jquery-placeholder](https://github.com/mathiasbynens/jquery-placeholder))
  prefs: []
  type: TYPE_NORMAL
- en: Modernizr ([http://modernizr.com/](http://modernizr.com/))
  prefs: []
  type: TYPE_NORMAL
- en: The Foundation font icon is set in a separate repository. To install it, type
    the `bower install foundation-icons --save` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Foundation icon package comes with the style sheet that specifies and presents
    the icon through HTML classes and also the icon files. Herein, we need to make
    a copy of the font from the package folder into our own `fonts` folder. Have a
    look at the following screenshot:![Time for action – organizing the project directories,
    assets, and dependencies](img/image00361.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We just created the project directory, as well as folders to organize the project
    assets. In addition, we also installed the libraries that are required to build
    the website through Bower, which include the Foundation framework.
  prefs: []
  type: TYPE_NORMAL
- en: Having added in the images and the libraries, we will build the website's home
    page markup in the next section. So, without further ado, let's move on, and it's
    time for action again.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – building the website's HTML structure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Create a new HTML file named `index.html`. Then, open it in Sublime Text, our
    code editor of choice in this book.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Let''s add the basic HTML5 structure as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Add the meta `X-UA-Compatible` variable with the content value `IE=edge` to
    allow Internet Explorer to use its latest cutting-edge rendering version:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Not to forget the meta `viewport` tag required to make the website responsive;
    add it in `<head>` as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Add the favicon, as well as the Apple icon, below the meta viewport tag, as
    follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Add the meta description for the search engine result purposes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The HTML markup for the content will follow the Foundation guidelines, as we
    have discussed in the early sections of this book. In addition, we may add extra
    classes in the elements to customize the styles. Let''s start off by adding the
    website `<header>`, for which, add the following lines within `<body>`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, add the website navigation bar within the header, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Below the navigation bar HTML markup, we add the catchphrase and call-to-action
    button, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we will add the website''s body content that will contain the product
    feature list section, the testimonial section, and the plan table price. First,
    add a `<div>` that will wrap the body content sections below the header, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Within `<div>`, we add the HTML markup for the feature list section, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: The column division for this section refers to the layout shown in the website
    wireframe. So, as you can see from the preceding code that we just added, each
    feature list item is assigned with `medium-6` columns, hence the column width
    of each item will be equal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below the feature list section, we add the testimonial section''s HTML markup,
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Referring to the layout in the wireframe, we should add the plan price table
    below the testimonial section, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we add the website footer below the body content, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We just built the HTML markup for the website content and sections by following
    the Foundation guidelines. We also added extra classes along the way to customize
    the Foundation default styles later on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since building the HTML markup, we haven''t added any of the styles; the website,
    at this point, looks white and plain, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![What just happened?](img/image00362.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The full code of the HTML that we have just added can also be found at [http://git.io/qvdupQ](http://git.io/qvdupQ).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter effectively started off our third project. In this project, we
    use Foundation to build a website for a start-up company. We walked through the
    Foundation features and adopted some of them into the website. We only added the
    website's HTML structure in this chapter though. The website, at this point, still
    looks plain and white. We have to compose the styles to define what the website
    looks and feels like, which is exactly what we will do in the next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: We will compose the website styles using Sass, the CSS preprocessor that also
    defined the Foundation basic styles. Hence, at the beginning of the next chapter,
    first, we will learn to use Sass variable, mixins, functions, and other Sass features
    before we write the website styles.
  prefs: []
  type: TYPE_NORMAL
- en: It looks like there is still a lot of work left to do in order to accomplish
    this project. So, without further ado, let's move on to the next chapter.
  prefs: []
  type: TYPE_NORMAL
