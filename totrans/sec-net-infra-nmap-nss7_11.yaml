- en: Security Assessment Prerequisites
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we can start working practically with security assessments, there''s
    essentially a lot of groundwork that needs to be done, including planning, scoping,
    choosing the correct tests, resource allocation, test plans, and getting the documentation
    signed and approved. All these prerequisites will help ensure the smooth conduct
    of the security assessment. The topics to be discussed in this chapter are as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Target scoping and planning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gathering requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deciding upon the type of vulnerability assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating the resources and deliverables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preparing a test plan and test boundaries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting approval and signing NDAs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Target scoping and planning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Defining and deciding upon a formal scope is one of the most important factors
    of a vulnerability assessment. While there may be a lot of information and guidelines
    available on using various vulnerability assessment tools and techniques, the
    preparation phase of vulnerability assessment is quite often overlooked. Ignoring
    properly complete pre-engagement activities may lead to potential problems, such
    as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Scope creep
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customer dissatisfaction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Legal trouble
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The scope of a project is intended to precisely define what is to be tested.
  prefs: []
  type: TYPE_NORMAL
- en: 'Theoretically, it may seem best to test each and every asset present in the
    network; however, it may not be practically possible. A detailed discussion with
    all the business units could help you gather a list of critical assets. These
    assets could then be included in the scope of the vulnerability assessment. Some
    of the common assets included in the vulnerability assessment scope are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Communication lines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: E-commerce platforms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any internet-facing websites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Special-purpose devices (modems, radios, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications and application APIs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Email gateways
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remote access platforms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mail servers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DNS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firewalls
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FTP servers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Database servers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web servers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'While the preceding list of assets looks quite obvious in regards to candidates
    to be included in the vulnerability assessment scope, there might be a few other
    assets that are often ignored but could open up an entry point for the attacker.
    Such assets include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Printers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless access points
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shared drives
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IP cameras
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Smart TVs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Biometric access control systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A detailed outline of the scope will help the vulnerability assessment team
    plan resources and a time schedule.
  prefs: []
  type: TYPE_NORMAL
- en: Gathering requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we can even think of starting the vulnerability assessment, it is extremely
    important to very clearly understand customer requirements. The customer may be
    internal or external to the organization. For a VA tester, it is important to
    know what the customer is expecting from the test. In order to identify and document
    the customer requirements, the following things need to be done.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing a detailed checklist of test requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The tester needs to set up multiple meetings with the customer to understand
    their requirements. The outcome should include but not be limited to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Security compliance that the customer wants to comply with
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requirements and code of conduct (if any) stated in respective security compliance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List of network segments in scope
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List of network security devices in scoped network segments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List of assets to scan (along with IP ranges)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List of assets exposed to a public network (along with IP ranges)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List of assets that have network-wide access (along with IP ranges)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List of business-critical assets (along with IP ranges)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List of acceptable vulnerability assessment tools in the customer environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Availability of licenses for tools suggested by customer or accomplice
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List of tools that are strictly prohibited in the customer environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recent vulnerability assessment reports if available
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suitable time frame and testing hours
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Some security compliance demands periodic vulnerability assessments over the
    infrastructure in scope. For example, PCI/DSS demands a half-yearly vulnerability
    assessment for business-critical assets and yearly for noncritical assets that
    are covered under the scope of the PCI/DSS certification.
  prefs: []
  type: TYPE_NORMAL
- en: The tester and customer need to keep such compliance-driven requirements in
    mind while preparing the schedule for an assessment. At the same time, it's always
    beneficial to consider ongoing and critical changes in an environment that is
    part of the assessment scope. If the time frame enforced by the security compliance
    permits it, it's best to perform the assessment after completing critical changes,
    which will help in providing a long-lasting view of current security posture.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another interesting part of scheduling and planning in a vulnerability assessment
    is testing hours. Usually, automated scanning profiles are used to perform vulnerability
    assessments and consume lots of network traffic (requests/responses per port per
    host/asset) and may also consume considerable resources on assets/hosts being
    scanned. In rare scenarios, it may happen that a certain asset/host stops responding,
    going into **denial of service** (**DoS**) mode and/or full-closed mode. This
    could happen with the business-critical system as well. Now imagine a business-critical
    system/service not responding to any requests in peak business hours. This could
    impact other services as well, covering a broader user space. This may lead to
    loss of data, reputation, and revenue. Also, it would present a challenge in recovering
    and restoring business functions in such a chaotic scenario. Hence, performing
    vulnerability assessments outside of business hours is always recommended. Advantages
    of doing so would be:'
  prefs: []
  type: TYPE_NORMAL
- en: No extra overhead over the network as there is no usual business/legitimate
    traffic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automated scans finishing in comparatively less time as more network bandwidth
    is available
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implications of vulnerability assessments, if any, can be observed quickly as
    network traffic is already reduced
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Impact and side effects can be treated (restoration/recovery) with ease as a
    risk of business/revenue and reputation loss is minimized to acceptable limits
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: But there could be some exceptions to this approach where the tester needs to
    run assessments in business hours as well. One of the scenarios could be needed
    to assess user workstations for vulnerabilities. As user workstations will be
    available only in business peak hours, only that network segment should be scanned
    in business hours.
  prefs: []
  type: TYPE_NORMAL
- en: 'To sum up, the outcome of this phase is:'
  prefs: []
  type: TYPE_NORMAL
- en: Business and compliance needs for conducting the vulnerability assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The time frame for conducting the vulnerability assessment (may be enforced
    by some security compliance)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business hours and nonbusiness hours
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testing hours for critical assets and noncritical assets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testing hours for end-user workstation list with respective IPs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying stakeholders
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Vulnerability management has a top-to-bottom approach. The following are the
    stakeholders that might be involved in and/or impacted by the vulnerability assessment:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Executive/top management**: To achieve the desired success in the vulnerability
    assessment program, top management should support the activity by allocating all
    required resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IT security head**: This could be dedicated or additional responsibility
    assigned to the competent personnel. Usually, this position directly reports to
    executive/top management, providing a bird''s-eye view of security posture to
    the top management. In order to maintain security compliance, this position leads
    multiple IT security programs run in an organization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VA lead tester**: This position refers to a subject matter expert who usually
    reports to the IT security head. The VA lead is responsible for:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Signing a **Statement of Work** (**SoW**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintaining an NDA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Checking for the legal aspects of conducting such tests in a particular environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gathering requirements and defining scope
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Planning vulnerability assessments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing required tools, devices, and the licenses required for the vulnerability
    assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing the team and the team activities that are part of the vulnerability
    assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintaining a **single point of contact** (**SPOC**) between all stakeholders
    involved in the vulnerability assessment program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keeping all stakeholders updated on activities that are part of the vulnerability
    assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generating and signing an executive summary of the vulnerability assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VA tester**: VA testers conduct the following activities that are necessary
    to conduct the VA program:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring and updating an automated scanner tool/device
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring automated scans for any disruption or unsolicited impact
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting manual tests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting **proof of concepts** (**PoCs**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generating detailed reports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing timely updates to the VA lead tester
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Asset owners**: Every service/system/application/network/device that is part
    of a vulnerability assessment is involved in the program. Owners are responsible for
    responding to any disruption that may happen. Owners should be aware of a detailed
    plan of assessment for assets under their ownership and should have restoration
    and recovery plans ready to reduce impact.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Third-party service providers**: Ownership of **Commercial Of The Shelf** (**COTS**)
    applications belongs to the respective service providers. If scope demands assessment
    over such COTS assets, involvement of respective third parties is necessary. Recently,
    organizations have been opting for more and more cloud services. Hence, the SPOC
    of the respective cloud service providers needs to be involved in the program
    to ensure the smooth execution of VA.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**End users**: Rarely, end users may also be impacted by reparation of the
    VA program.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deciding upon the type of vulnerability assessment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After understanding the requirements of the customer, the tester needs to create
    his own test model based on the expectations of the vulnerability management program,
    the environment, past experience, and the exposure that every type provides.
  prefs: []
  type: TYPE_NORMAL
- en: The following are the basic types of vulnerability assessment that the tester
    needs to understand.
  prefs: []
  type: TYPE_NORMAL
- en: Types of vulnerability assessment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following diagram provides an overview of the different types of vulnerability
    assessments:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e55e5405-268d-4a63-8c4a-75fc0f804325.png)'
  prefs: []
  type: TYPE_IMG
- en: Types of vulnerability assessment based on the location
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Based on the location the test is conducted from, the vulnerability assessment
    could be divided into two main types:'
  prefs: []
  type: TYPE_NORMAL
- en: External vulnerability assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Internal vulnerability assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: External vulnerability assessment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'External vulnerability assessment is the best fit for assets exposed over public
    networks hosting public services. It is done from outside the target network and
    thus helps simulate the actual scenario of a real attacker attacking the target.
    The primary intent behind conducting the external vulnerability assessment is
    to uncover potential weaknesses in the security of the target system, as illustrated
    in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7985547e-e21e-4db2-8fd4-f2207e202f5b.png)'
  prefs: []
  type: TYPE_IMG
- en: An external vulnerability assessment is mainly focused on the servers, infrastructure,
    and the underlying software components related to the target. This type of testing
    will involve in-depth analysis of publicly available information about the target,
    a network enumeration phase where all active target hosts are identified and analyzed,
    and the behavior of intermediate security screening devices such as firewalls.
    Vulnerabilities are then identified, verified, and the impact gets assessed. It
    is the most traditional approach to vulnerability assessment.
  prefs: []
  type: TYPE_NORMAL
- en: Internal vulnerability assessment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Internal vulnerability assessment is carried out on assets that are exposed
    to the private networks (internal to the company) hosting internal services. An
    internal vulnerability assessment is primarily conducted to ensure that the network
    insiders cannot gain unauthorized access to any of the systems by misusing their
    own privileges, illustrated as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b5fade48-e458-401c-8f45-fb14dd4c1922.png)'
  prefs: []
  type: TYPE_IMG
- en: The internal vulnerability assessment is used to identify weaknesses in a particular
    system inside the organization's network. When the vulnerability assessment team
    performs the tests from within the target network, all external gateways, filters,
    and firewalls get bypassed and the tests are targeted directly at the systems
    in scope. The internal vulnerability assessment may involve testing from various
    network segments to check virtual isolation.
  prefs: []
  type: TYPE_NORMAL
- en: Based on knowledge about environment/infrastructure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following are the types of vulnerability assessments that simulate exposure
    from an attacker's point of view, based on the attacker's knowledge of the environment/infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Black-box testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the black-box vulnerability assessment approach, the VA tester carries out
    all the tests without having any prior knowledge of the target system. This type
    of test most closely simulates real-world attacks. In an ideal black-box test
    scenario, the VA tester would probably know only the name of the target organization.
    He would have to start gathering information about the target from scratch and
    then gradually build and execute various attack scenarios. This type of testing
    usually takes a longer time to complete and is more resource intensive.
  prefs: []
  type: TYPE_NORMAL
- en: White-box testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A white-box vulnerability assessment is a test conducted with complete knowledge
    and understanding of the infrastructure, defense mechanisms, and communication
    channels of the target on which the test is being conducted. This test is specifically
    intended to simulate insider attacks which are usually performed with full privileges
    and complete access to the target system. In order to initiate a white-box vulnerability
    assessment, the target organization shares all details, such as asset inventory,
    network topology diagrams, and so on, with the VA tester.
  prefs: []
  type: TYPE_NORMAL
- en: Gray-box testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As the name suggests, a gray-box test is a combination of both a black-box and
    white-box test. In this type of testing, the VA tester has partial knowledge about
    the infrastructure, defense mechanisms, and communication channels of the target
    on which the test is to be conducted. It attempts to simulate those attacks that
    are performed by an insider or outsider with limited access privileges. This is
    comparatively less time and resource-intensive compared to a black-box test.
  prefs: []
  type: TYPE_NORMAL
- en: Announced and unannounced testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In an announced vulnerability assessment, the attempt to compromise the target
    systems is done with full cooperation and prior knowledge of the target IT staff.
    The VA tester could possibly discuss prioritizing specific systems for compromise with
    the IT staff. In an unannounced vulnerability assessment, the vulnerability assessment
    team gives no prior intimation to the target staff. It's kind of a surprise test
    with the intent of examining the security preparedness and responsiveness of the
    target organization. Only the higher management is kept informed about the tests.
  prefs: []
  type: TYPE_NORMAL
- en: Automated testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Instead of utilizing personal expertise, some organizations and security testing
    teams prefer to automate security testing. This is typically done with help of
    a tool which is run against the host of target systems in order to assess the
    security posture. The tool tries to simulate real-world attacks that an intruder
    might use. Based on whether the attack succeeded or failed, the tool generates
    a detailed report of the findings. The automated test can be easy and quick to
    perform, however it may produce a lot of false positives. Automated testing can
    also not assess architecture-level security flaws (design flaws), business logic
    flaws, and any other procedural shortcomings.
  prefs: []
  type: TYPE_NORMAL
- en: Authenticated and unauthenticated scans
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to perform an authenticated scan, an  scanning tool can be configured
    with credentials controlled by a centralized directory (domain controller/AD/LDAP).
    While performing a scan, the scanner tries to establish a **Remote Procedure Call** (**RPC**)
    with the assets using configured credentials and, on successful login, executes
    tests on the same privilege level to that of the provided credentials.
  prefs: []
  type: TYPE_NORMAL
- en: An authenticated scan reports weaknesses exposed to the authenticated users
    of the system, as all the hosted services can be accessed with a right set of
    credentials. An unauthenticated scan reports weaknesses from a public viewpoint
    (this is what the system looks like to the unauthenticated users) of the system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The advantages of authenticated scans over unauthenticated are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Simulates a view of a security posture from a user's point of view
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provides comprehensive scans covering more attack surfaces exposed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The report provides detailed vulnerabilities exposed on assets that can be exploited
    by a malicious user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Less false positives
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Increased accuracy in reports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The disadvantages of authenticated scans over unauthenticated are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Takes more time to complete the scan as it covers more scanning signatures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adds the overhead of managing credentials used for scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Involvement of intense test signatures may disrupt services hosted by an asset
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Agentless and agent-based scans
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The latest automated scanning tools facilitate agents that install a scanning
    service on respective assets. This service usually runs with the highest possible
    privileges. Once the trigger from the scanner is received by a service running
    on the host, the service fetches the respective scanning profile for that particular
    asset from the scanner running scans natively on the asset itself.
  prefs: []
  type: TYPE_NORMAL
- en: 'The advantages of the agent-based scan over an agentless scan are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: No overhead on the network as scans are running natively on the system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No need to wait for nonbusiness hours to initiate testing on noncritical assets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanning intervals can be reduced, which helps in keeping security posture up
    to date
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No need to maintain separate credentials dedicated to scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provides comprehensive scans covering more attack surfaces exposed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The report provides detailed vulnerabilities exposed on assets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Less false positives
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Increased accuracy in reports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The disadvantages of an agent-based scan over an agentless scan are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Agents might not support special devices (modems, radios, and so on) and all
    the operating systems and firmware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing an agent on every compatible asset—even-though this would be a onetime
    activity in a large environment, this would be a challenge
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing and protecting the agent itself—as the agent is running a service with
    higher privileges, these agents need to be managed and protected very cautiously
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manual testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Manual vulnerability assessment is one of the best-preferred options. It benefits
    from the expertise of the well-trained security professional. A manual testing
    approach involves detailed scoping, planning, information gathering, vulnerability
    scanning, assessment, and exploitation. Hence, it is certainly more time and resource-consuming
    than the automated test, however, it is less likely to produce false positives.
  prefs: []
  type: TYPE_NORMAL
- en: Quite often, organizations and vulnerability assessment teams prefer to use
    a combination of automated and manual testing in order to get the best out of
    both.
  prefs: []
  type: TYPE_NORMAL
- en: Estimating the resources and deliverables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As is applicable for any project, the success of the vulnerability assessment
    depends on estimations that are close to the actual. Output from the scoping and
    planning phases helps in estimating the most important factor in a vulnerability
    assessment—the time required to complete the assessment.
  prefs: []
  type: TYPE_NORMAL
- en: If a tester is having a very good experience running assessments over a scoped
    environment or similar, then the estimation is done on the basis of previous experience.
    If a tester is new to the environment then previous tests reports and communications
    are referred to for estimation. Additionally, a tester considers additions and
    changes in scope, involvement of third-party services / service providers, if
    any, and updates the estimates accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: Once rough estimates are ready, time padding is considered and time is added
    over the anticipated time required. This time padding is usually set at 20%. This
    helps the tester to deal with any unsolicited challenges that they may face during
    execution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are a few of the unsolicited challenges/problems that one can
    face during the execution of the vulnerability assessment:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Network security devices blocking scans**: Network security devices such
    as firewalls, **intrusion prevention systems** (**IPS**), and **unified threat
    management** (**UTM**) detect scanning traffic as malicious traffic and block
    all the requests sent by the vulnerability scanner. Once alerts are generated
    on the respective network security devices, the tester needs to ask the network
    administrator to whitelist automated scanner IPs and manual testing machine IPs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‎**Assets not responding as side effects of certain tests**: Some scanning
    signatures leave assets in DoS mode. In such cases, a tester needs to identify
    such assets and fine-tune the scanning profiles so that comprehensive scanning
    can be performed on these systems. Often, such scan-sensitive systems are closed
    source and out-of-the-box solutions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‎**Scan impacting business critical service(s) and hence scanning needs to
    be stopped abruptly**: Some vulnerability scanning signatures may break certain
    services on systems. As the business is always the priority, scanning has to be
    stopped and business-critical services need to be recovered. A tester needs to
    perform scanning on such assets separately with less intensive and/or fine-tuned
    scanning profiles in nonbusiness hours.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blocking user IDs allocated for scanning**: While performing authenticated
    scans because of heavy traffic to centralized **Identity Access Management Systems** (**IDAM**),
    login attempts may get classified as malicious and scanning accounts may get blocked.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‎**Slowing down the network because of scanning traffic and hence delays are
    introduced in report generation**: While performing automated scans, aggressive
    and intensive scanning profiles creates overhead on network traffic. This may
    slow down the network or put some of the network devices in the fail-closed state,
    preventing scanning requests from reaching assets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Usually, this padding is not completely utilized. In such cases, to be fair
    to the customer, the tester can use this extra time to add more value to the vulnerability
    report. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: Exploring identified critical vulnerabilities in-depth to find out the implications
    of vulnerabilities on overall infrastructure security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running some more manual POCs over critical, highly severe vulnerabilities reported
    to minimize false positives
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting a detailed walkthrough of a vulnerability report for the stakeholders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing additional guidance on vulnerability closure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time estimations are done in the form of man-hours required for testing but
    the tester should also consider that deploying more personnel for a project is
    not always going to reduce timelines.
  prefs: []
  type: TYPE_NORMAL
- en: For example, when an automated vulnerability assessment suite/scanner initiates
    testing over a network segment or group of assets, the time required to conduct
    tests depends on the infrastructure involved, the number of assets to scan, the
    performance of assets, network traffic, the intensity of test profiles, and many
    other external factors. As tester interaction is hardly required for automated
    scanning, deploying more testers in this phase is not going to reduce the time.
    However, it's not the case with manual testing. Manual test cases can be executed
    in parallel by multiple testers at a time, reducing timelines considerably.
  prefs: []
  type: TYPE_NORMAL
- en: Another factor to consider is the extent or intensity of the tests to run on
    assets. For critical assets, in-depth testing is required with more intense scanning
    profiles, whereas for noncritical assets just an overview is usually enough. Running
    intense scan profiles for automated as well as manual testing takes considerably
    more time than that of normal scanning profiles.
  prefs: []
  type: TYPE_NORMAL
- en: The outcome of a time estimation exercise is definite drop-dead dates. A vulnerability
    assessment should always begin on the preplanned date and should be completed
    on the estimated end date. As vulnerability assessment covers vast infrastructure,
    many system owners and third parties are actively involved in the exercise. The
    additional responsibility to support vulnerability assessment is usually an overhead
    for the stakeholders involved. Hence, in order to keep them organized, synchronized,
    motivated, and supported during the VA exercise, finite drop-dead dates are very
    important.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing a test plan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A vulnerability assessment is often an ongoing exercise that is repeated at
    regular intervals. However, for a given time period, a vulnerability assessment
    does have a specific start point and an endpoint irrespective of what type of
    test is performed. Thus, in order to ensure a successful vulnerability assessment,
    a detailed plan is necessary. The plan can have several elements as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Overview**: This section provides a high-level orientation for the test plan.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Purpose**: This section states the overall purpose and intent of conducting
    the test. There may be some regulatory requirements or any explicit requirement
    from the customer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Applicable laws and regulations**: This section lists all the applicable
    laws and regulations with respect to the test being planned. These may include
    local as well as international laws.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Applicable standards and guidelines**: This section lists all the applicable
    standards and guidelines, if any, with respect to the test being planned. For
    example, in the case of web application vulnerability assessment, standards such
    as OWASP may be followed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scope**: Scope is an important section of the plan as it essentially lists
    the systems that will undergo the testing. An improper scope could seriously impact
    the test deliverable going forward. The scope must be outlined in detail, including
    hosts and IP addresses of target systems, web applications, and databases if any,
    and the privileges that will be used for testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Assumptions**: This section mainly outlines that the prerequisites for the
    test be available in a timely manner to the VA tester. This will ensure that there
    won''t be any delays due to operational issues. This could also include the fact
    that the systems under scope won''t undergo major upgrades or changes during the
    test.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Methodology**: This section relates to the type of methodology that will
    be adopted for the test. It could be a black box, gray box, or white box depending
    on the organization''s requirements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test plan**: This section details who will be performing the test, the daily
    schedule, detailed tasks, and contact information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rules of engagement**: This section lists exclusive terms and conditions
    that need to be followed during the test. For example, an organization may wish
    to exclude a certain set of systems from automated scanning. Such explicit conditions
    and requirements can be put forward in rules of engagement.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Stakeholder communication**: This section lists all the stakeholders that
    will be involved throughout the test process. It is extremely important to keep
    all the stakeholders updated about the progress of the test in a timely manner.
    The stakeholders to be included must be approved by senior management.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Liabilities**: This section highlights the liabilities of any action or event
    that may occur during the test which could possibly have an adverse impact on
    the business operations. The liabilities are on both sides, that is, the organization
    and the VA tester.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authorized approvals and signatures**: Once all the preceding sections are
    carefully drafted and agreed upon, it''s necessary that the plan gets signed by
    the relevant authority.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A comprehensive test plan is also referred to as the **Statement of Work** (**SoW**).
  prefs: []
  type: TYPE_NORMAL
- en: Getting approval and signing NDAs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Based on specific requirements, an organization may choose to conduct any type
    of vulnerability assessment as discussed in the section earlier. However, it is
    important that the vulnerability assessment is approved and authorized by senior
    management. Though most of the professional vulnerability assessment is conducted
    in quite a controlled manner, there still remains the possibility of something
    becoming disruptive. In such a case, preapproved support from senior management
    is crucial.
  prefs: []
  type: TYPE_NORMAL
- en: An NDA is one of the most important documents that a VA tester has to sign before
    the test begins. This agreement ensures that the test results are handled with
    high confidentiality and the findings are disclosed only to authorized stakeholders.
    An organization's internal vulnerability assessment team might not require the
    signing of an NDA for each and every test, however, it is absolutely required
    for any test being conducted by an external team.
  prefs: []
  type: TYPE_NORMAL
- en: Confidentiality and nondisclosure agreements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Any individual performing the vulnerability assessment who is external to the
    organization needs to sign confidentiality and nondisclosure agreements prior
    to test initiation. The entire process of vulnerability assessment involves multiple
    documents that contain critical information. These documents, if leaked to any
    third-party, could cause potential damage. Hence, the VA tester and the organization
    must mutually agree and duly sign the terms and conditions included in the confidentiality
    and nondisclosure agreement. The following are some of the benefits of signing
    confidentiality and nondisclosure agreements:'
  prefs: []
  type: TYPE_NORMAL
- en: Ensures that the organization's information is treated with high confidentiality
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provides cover for a number of other areas such as negligence and liability
    in case of any mishaps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The confidentiality and nondisclosure agreements are both powerful tools. Once
    the agreement is duly signed, the organization even has the right to file a lawsuit
    against the tester if the information is disclosed to unauthorized parties, intentionally
    or unintentionally.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are lots of prerequisites before one can actually start a vulnerability
    assessment for an infrastructure. In this chapter, we tried to cover all such
    prerequisites in brief. From the next chapter onward, we will be dealing with
    the actual vulnerability assessment methodology.
  prefs: []
  type: TYPE_NORMAL
