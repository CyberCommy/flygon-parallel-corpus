- en: Setting Up the Frontend for Our Spring Boot RESTful Web Service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter explains the steps that are needed to start the development of
    the frontend part. We will first define the functionalities that we are developing.
    Then we will do the mock-up of the user interface. As a backend, we will use our
    Spring Boot application from [Chapter 4](936ad378-25d8-43c4-9e7f-b1cb9bc373cf.xhtml),
    *Securing and Testing Your Backend*. We will start development using the unsecured
    version of the backend. Finally, we will create the React app that we will use
    in our frontend development.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will look at the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Why and how to do a mock-up
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preparing our Spring Boot backend for frontend development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating the React app for the frontend
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Spring Boot application that we created in [Chapter 4](936ad378-25d8-43c4-9e7f-b1cb9bc373cf.xhtml), *Securing
    and Testing Your Backend* is needed.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js and `create-react-app` should be installed.
  prefs: []
  type: TYPE_NORMAL
- en: Mocking up the user interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the first few chapters of this book, we created a car database backend that
    provides the REST API. Now it is time to start building the frontend to our application.
    We will create a frontend that list cars from the database and provides paging,
    sorting, and filtering. There is a button that opens the modal form to add new
    cars to the database. In each row of the car table, there is a button to delete
    the car from the database. Table rows are also editable and modifications can
    be saved to the database by clicking the Save button in the row. The frontend
    contains a link or button to export data from the table to a CSV file.
  prefs: []
  type: TYPE_NORMAL
- en: Let's create a mock-up from our user interface. There are lots of different
    applications for creating mock-ups, or you could even use a pencil and paper.
    You can also create interactive mock-ups to demonstrate some functionalities.
    If you have done the mock-up, it is much easier to discuss needs with the client
    before you start to write any actual code. With the mock-up, it is also easier
    for the client to understand the idea of the frontend and affect to it. Changes
    to the mock-up are really easy and fast to do, compared to modifications with
    real frontend source code.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the mock-up of our car list frontend:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/92b24332-5307-4bbf-8723-da74f6572512.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The modal form that is opened when the user press New Car button looks like
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f07703b7-c21b-441d-983a-585199ad9456.png)'
  prefs: []
  type: TYPE_IMG
- en: Preparing the Spring Boot backend
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We are starting the frontend development with the unsecured version of our backend.
    In the first phase, we implement all CRUD functionalities and test that these
    are working correctly. In the second phase, we enable security in our backend
    and make the modifications that are needed, and finally we implement authentication.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the Spring Boot application with Eclipse, which we created in [Chapter
    4](936ad378-25d8-43c4-9e7f-b1cb9bc373cf.xhtml), *Securing and Testing Your Backend*.
    Open the `SecurityConfig.java` file that defines the Spring Security configuration.
    Temporarily comment out the current configuration and give everyone access to
    all endpoints. See the following modifications:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, if you run the backend and test the `http:/localhost:8080/api/cars` endpoint
    with Postman, you should get all cars in the response, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eac8b4ea-1136-4f36-8db0-098bd92fb585.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating the React project for the frontend
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we start coding the frontend, we have to create a new React app:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the PowerShell or any other suitable terminal. Create a new React app
    by typing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Run the app by typing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Or, if you are using Yarn, type in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Open the `app` folder with VS Code, remove any extra code, and change the header
    text from the `App.js` file. After the modifications, your `App.js` file source
    code should look as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s also decrease the header height and change the color to `lightblue`.
    Open the `App.css` file where you can find stylings of the `App.js` file. Decrease
    the header height from 150 to 50 and change the color to `lightblue`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now your frontend starting point should look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d015edb2-9242-4c7c-9029-fd0af0a225bf.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we started the development of our frontend, using the backend
    that we created in [Chapter 4](936ad378-25d8-43c4-9e7f-b1cb9bc373cf.xhtml), *Securing
    and Testing Your Backend*. We defined the functionalities of the frontend and
    created a mock-up of the user interface. We started frontend development with
    an unsecured version of the backend, therefore, we made some modifications to
    our Spring Security configuration class. We also created the React app that we
    are going to use during development.  In the next chapter, we will start to add
    CRUD functionalities to our frontend.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why should you do a mock-up of the user interface?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How should you do a mock-up?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How should you disable Spring Security from the backend?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Packt has other great resources for learning about React:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.packtpub.com/web-development/getting-started-react](https://www.packtpub.com/web-development/getting-started-react)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.packtpub.com/web-development/react-16-essentials-second-edition](https://www.packtpub.com/web-development/react-16-essentials-second-edition)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
