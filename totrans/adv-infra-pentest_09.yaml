- en: VoIP Exploitation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Voice over IP** (**VoIP**) is pushing business communications to a new level
    of efficiency and productivity. VoIP-based systems are facing security risks on
    a daily basis. Although a lot of companies are focusing on the VoIP quality of
    service, they ignore the security aspects of the VoIP infrastructure, which makes
    them vulnerable to dangerous attacks. This chapter will tackle most VoIP security
    issues using a step-by-step guidance.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover these topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: VoIP protocols
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VoIP attacks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VoLTE attacks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to defend against VoIP attacks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VoIP fundamentals
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to learn how to pentest VoIP, we need to have a clear understanding
    of how the VoIP infrastructure actually works. We are going to dissect VoIP protocols
    in order to learn later how to attack VoIP systems. The following subsections
    are some well-known standards that voice and video communications make possible.
    Let's explore them one by one.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: H.323
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'H.323 is a data over IP standard introduced by the **International Telecommunication
    Union Standardization Sector** (**ITU-T**). As you can see, this standardization
    body uses letters to define the scope based on many criteria, listed here:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '**H**: For audiovisual and multimedia systems'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**G**: For transmission systems and media'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Q**: For switching and signaling'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**T**: For terminals for telematic services'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: H.323 is one of the oldest packet-based communication systems protocols. Thus,
    this protocol is stable. The current version is v6\. It is well used by many vendors
    in many products, such as Cisco call manager, NetMeeting, and RadVision.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'H.323 uses many types of devices:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '**Terminals:** These are user devices such as IP phones and videoconferencing
    systems.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multipoint control units:** These are composed of two logical components—
    the **Multipoint Controller** (**MC**) and the **Multipoint Processor** (**MP**).
    Their role is managing multipoint conferences.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Gatekeeper: **This is optional. Gatekeepers provide some additional services
    such as user authentication and address resolution.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The H.323 stack is based on the following components:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: IPv4 network layer
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User datagram protocol layer
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Real-time protocol
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Signaling protocols
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pre-call setup
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Video codecs
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audio codecs
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram illustrates the different components of the H.323 stack:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00273.jpeg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
- en: Skinny Call Control Protocol
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Skinny Call Control Protocol** (**SCCP**), developed by Selsius, is a Cisco-proprietary
    protocol. It is called skinny because it is a lightweight protocol used in IP
    telephony and call managers'' communications. This communication uses the following
    different types of messages:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '**0001**: `RegisterMessage`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**0002**: `IPportMessage`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**0081**: `RegisterAckMessage`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These messages follow this format:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00274.jpeg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
- en: 'The following screenshot is taken from a Skinny capture using Wireshark, downloaded
    from the Wireshark website:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00275.jpeg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
- en: RTP/RTCP
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Real-time Protocol** (**RTP**) is a transport protocol, specifically over
    **UDP**, based on RFC 3550\. It is used in real-time multimedia applications and
    in end-to-end real-time data stream transfer. In order to achieve that, a video,
    for example, goes through a number of steps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Encoding
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Packetizing
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Transport Control
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reassembly
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Decoding
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00276.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
- en: Although RTP is specified to carry the media stream, there is another protocol
    that works with RTP called **Real-time Control Protocol** (**RTCP**). This protocol
    works side by side with RTP to monitor transmissions and assure **Quality of Service**
    (**QoS**). The aim of RTCP is checking whether there is packet loss during the
    process.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Secure Real-time Transport Protocol
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Secure Real-time Transport Protocol (SRTP)** is an application protocol based
    on RFC3711. SRTP provides enhanced security features; thus, it secures RTP by
    encryption using an XOR operation with a keystream. The algorithm used is AES
    and the master key is called SRTP MKI. The following diagram illustrates the difference
    between a normal RTP packet and a secure RTP packet. The Auth field contains the
    message authentication code. These techniques provide anti-replay mechanisms to
    the voice traffic and ensure its integrity:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全实时传输协议（SRTP）**是基于 RFC3711 的应用协议。SRTP 提供了增强的安全功能；因此，它通过使用密钥流进行异或运算来加密 RTP
    从而保护 RTP。所使用的算法是 AES，主密钥称为 SRTP MKI。下图说明了普通 RTP 包和安全 RTP 包之间的区别。Auth 字段包含消息认证码。这些技术提供了反重放机制来保证语音流量的完整性：'
- en: '![](img/00277.jpeg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00277.jpeg)'
- en: H.248 and Media Gateway Control Protocol
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: H.248 和媒体网关控制协议
- en: '**Media Gateway Control Protocol** (**MGCP**) is a protocol developed by Cisco.
    The goal of MGCP is to handle signals and session management. It is a communication
    mechanism between media gateway controllers and media gateways. Thus, the control
    is centralized. In other words, the controller communicates with many media gateways.
    The controller also supervises terminals and registers the new ones in its zone.
    H.248 is also like H.323, an ITU-based protocol. It is an enhanced version of
    MGCP. As you can see in the diagram, MGCP is a master-slave protocol:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**媒体网关控制协议**（**MGCP**）是由思科开发的协议。MGCP 的目标是处理信号和会话管理。它是媒体网关控制器和媒体网关之间的通信机制。因此，控制是集中的。换句话说，控制器与许多媒体网关进行通信。控制器还监督终端并在其区域注册新终端。H.248
    也像 H.323 一样，是一个基于 ITU 的协议。它是 MGCP 的增强版本。正如你在图表中看到的，MGCP 是一种主从协议：'
- en: '![](img/00278.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00278.jpeg)'
- en: Session Initiation Protocol
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会话初始协议
- en: '**Session Initiation Protocol** (**SIP**) is a session management protocol
    based on the RFC 3261 protocol. It works on both **UDP** and **TCP,** and it also
    supports **TLS**. It is more scalable than H323\. SIP handles calls in the following
    five steps:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**会话初始协议**（**SIP**）是基于 RFC 3261 协议的会话管理协议。它可以在 **UDP** 和 **TCP** 上运行，也支持 **TLS**。它比
    H323 更具可扩展性。SIP 在以下五个步骤中处理呼叫：'
- en: User location
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户位置
- en: User availability
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户可用性
- en: User capability
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户能力
- en: Session set up
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 会话建立
- en: Session management
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 会话管理
- en: 'To start a SIP operation, a registration is needed by the user:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始 SIP 操作，用户需要进行注册：
- en: '![](img/00279.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00279.jpeg)'
- en: 'The following diagram describes the steps required to establish a connection
    between two user agent clients:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表描述了建立两个用户代理客户端之间连接所需的步骤：
- en: '![](img/00280.jpeg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00280.jpeg)'
- en: 'SIP requests are similar to HTTP requests. They are in the following format:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: SIP 请求类似于 HTTP 请求。它们的格式如下：
- en: '`METHOD URI SIP/X.X`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`METHOD URI SIP/X.X`'
- en: '`HEADER: XXX`'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`头部: XXX`'
- en: 'Here, the method is the request type, and we have the following six methods:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，方法是请求类型，我们有以下六种方法：
- en: Register
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册
- en: Invite
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 邀请
- en: ACK
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ACK
- en: Cancel
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 取消
- en: Options
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选项
- en: Bye
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 再见
- en: 'SIP reply requests require this format:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: SIP 回复请求需要以下格式：
- en: '`SIP/X.X  <status code> description`'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`SIP/X.X  <状态代码> 描述`'
- en: '`Header: XXX`'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`头部: XXX`'
- en: '**URI**: The file identification'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**URI**: 文件标识'
- en: '**SIP/X.X**: SIP version'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SIP/X.X**: SIP 版本'
- en: '**Header**: This contains the information about the receiver (To, From, Call-ID
    are some of the SIP header fields)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**头部**: 这包含了有关接收者的信息（To, From, Call-ID 是一些 SIP 头部字段）'
- en: 'Following are the possible status codes:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可能的状态代码：
- en: '`1xx`: Informational'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1xx`: 信息'
- en: '`2xx`: Success'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2xx`: 成功'
- en: '`3xx`: Redirection'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`3xx`: 重定向'
- en: '`4xx`: Failure'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`4xx`: 失败'
- en: '`5xx`: Server error'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`5xx`: 服务器错误'
- en: '`6xx`: Global failure'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`6xx`: 全局失败'
- en: VoIP exploitation
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VoIP 开发
- en: Now, after getting a clear understanding of the major protocols that play a
    vital role in VoIP, it is time to learn how to penetrate the VoIP infrastructure.
    Like any other penetration testing, to exploit the VoIP infrastructure, we need
    to follow a strategic operation based on a number of steps.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在对 VoIP 中发挥重要作用的主要协议有了清晰的理解之后，是时候学习如何渗透 VoIP 基础设施了。与任何其他渗透测试一样，要利用 VoIP 基础设施，我们需要按照一系列步骤进行战略性操作。
- en: 'Before attacking any infrastructure, we''ve learned that we need to perform
    footprinting, scanning, and enumeration before exploiting it, and that is exactly
    what we are going to do with VoIP. To perform VoIP information gathering, we need
    to collect as much useful information as possible about the target. As a start,
    you can do a simple search online. For example, job announcements could be a valuable
    source of information. For example, the following job description gives the attacker
    an idea about the VoIP:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在攻击任何基础设施之前，我们已经了解到我们需要在利用之前进行足迹、扫描和枚举，这正是我们将要对 VoIP 进行的操作。为了进行 VoIP 信息收集，我们需要尽可能收集有关目标的有用信息。首先，你可以在网上进行简单的搜索。例如，招聘公告可能是一个有价值的信息来源。例如，以下工作描述让攻击者对
    VoIP 有了一个大致的了解：
- en: '![](img/00281.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00281.jpeg)'
- en: Later, an attacker could search for vulnerabilities out there to try exploiting
    that particular system. Searching for phone numbers could also be a smart move,
    to have an idea of the target based on its voicemail, because each vendor has
    a default one. If the administrator has  not changed it, listening to the voicemail
    can let you know about your target. If you want to have a look at some of default
    voicemails, check [http://www.hackingvoip.com/voicemail.html](http://www.hackingvoip.com/voicemail.html).
    It is a great resource for learning a great deal about hacking VoIP.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，攻击者可以搜索可能存在的漏洞来尝试利用特定系统。搜索电话号码也可能是一个明智的举措，以了解目标的语音信箱，因为每个供应商都有一个默认的语音信箱。如果管理员没有更改它，收听语音信箱可以让你了解目标。如果你想查看一些默认语音信箱，请查看
    [http://www.hackingvoip.com/voicemail.html](http://www.hackingvoip.com/voicemail.html)。这是一个学习
    VoIP 黑客攻击的绝佳资源。
- en: 'Google hacking is an amazing technique for searching for information and online
    portals. We discussed Google hacking using Dorks, in the previous chapters. The
    following demonstration is the output of this Google Dork—in  URL: Network Configuration
    Cisco:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00282.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
- en: 'You can find connected VoIP devices using the `Shodan.io` search engine:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00283.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
- en: 'VoIP devices are generally connected to the internet. Thus, they can be reached
    by an outsider. They can be exposed via their web interfaces; that is why, sometimes
    leaving installation files exposed could be dangerous, because using a search
    engine can lead to indexing the portal. The following screenshot is taken from
    an online Asterisk management portal:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00284.gif)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
- en: 'And this screenshot is taken from a configuration page of an exposed website,
    using a simple search engine query:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00285.jpeg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
- en: After collecting juicy information about the target, from an attacker perspective,
    we usually should perform scanning. Using scanning techniques discussed in the
    previous chapters is necessary during this phase. Carrying out Host Discovery
    and Nmap scanning is a good way of scanning the infrastructure to search for VoIP
    devices.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: Scanning can lead us to discover VoIP services. For example, we saw the `-sV`
    option in Nmap to check services. In VoIP, if port `2000` is open, it is a Cisco
    CallManager because the SCCP protocol uses that port as default, or if there is
    a UDP `5060` port, it is SIP.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: The `-O` Nmap option could be useful for identifying the running operating system,
    as there are a lot of VoIP devices that are running on a specific operating system,
    such as Cisco embedded.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: You know what to do now. After footprinting and scanning, we need to enumerate
    the target. As you can see, when exploiting an infrastructure we generally follow
    the same methodological steps.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: 'Banner grabbing is a well-known technique in enumeration, and the first step
    to enumerate a VoIP infrastructure is by starting a banner grabbing move. In order
    to do that, using the Netcat utility would help you grab the banner easily, or
    you can simply use the Nmap script named banner:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/00286.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
- en: 'For a specific vendor, there are a lot of enumeration tools you can use; EnumIAX
    is one of them. It is a built-in enumeration tool in Kali Linux to brute force
    Inter-Asterisk Exchange protocol usernames:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00287.jpeg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
- en: '**Automated Corporate Enumerator** (**ACE**) is another built-in enumeration
    tool in Kali Linux:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00288.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
- en: '`svmap` is an open source built-in tool in Kali Linux for identifying SIP devices.
    Type `svmap -h` and you will get all the available options for this amazing tool:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00289.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
- en: VoIP attacks
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By now, you have learned the required skills to perform VoIP footprinting, scanning,
    and enumeration. Let's discover the major VoIP attacks. VoIP is facing multiple
    threats from different attack vectors.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: Denial-of-Service
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Denial-of-Service** (**DoS**) is a threat to the availability of a network.
    This attack was discussed in the previous chapters. DoS could be dangerous too
    for VoIP, as ensuring the availability of calls is vital in modern organizations.
    Not only the availability, but also the clearness of calls is a necessity nowadays.
    To monitor the QoS of VoIP, you can use many tools that are out there; one of
    them is CiscoWorks QoS Policy Manager 4.1:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00290.jpeg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
- en: 'To measure the quality of VoIP, there are some scoring systems, such as the
    **Mean Opinion Score** (**MOS**)  or the R-value based on several parameters (jitter,
    latency, and packet loss). Scores of the mean opinion score range from 1 to 5
    (bad to very clear) and scores of R-value range from 1 to 100 (bad to very clear).
    The following screenshot is taken from an analysis of an RTP packet downloaded
    from the Wireshark website:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00291.jpeg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
- en: 'You can also analyze the RTP jitter graph:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00292.jpeg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
- en: 'VoIP infrastructure can be attacked by the classic DoS attacks. We saw some
    of them previously:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: VoIP基础设施可以受到经典的DoS攻击。我们之前看到了其中一些：
- en: Smurf flooding attack
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Smurf洪水攻击
- en: TCP SYN flood attack
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP SYN洪水攻击
- en: UDP flooding attack
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UDP洪水攻击
- en: One of the DoS attack tools is `iaxflood`. It is available in Kali Linux to
    perform DoS attacks. **IAX** stands for  **Inter-Asterisk Exchange**.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: DoS攻击工具之一是`iaxflood`。它在Kali Linux中可用于执行DoS攻击。**IAX**代表**Inter-Asterisk Exchange**。
- en: 'Open a Kali terminal and type ` iaxflood <Source IP> <Destination IP>  <Number
    of packets>`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Kali终端，输入`iaxflood <Source IP> <Destination IP> <Number of packets>`：
- en: '![](img/00293.jpeg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00293.jpeg)'
- en: The VoIP infrastructure can not only be attacked by the previous attacks attackers
    can perform packet Fragmentation and Malformed Packets to attack the infrastructure,
    using fuzzing tools.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: VoIP基础设施不仅可以受到先前的攻击，攻击者还可以使用模糊工具执行数据包分片和格式错误数据包来攻击基础设施。
- en: Eavesdropping
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 窃听
- en: '**Eavesdropping** is one of the most serious VoIP attacks. It lets attackers
    take over your privacy, including your calls. There are many eavesdropping techniques;
    for example, an attacker can sniff the network for TFTP configuration files while
    they contain a password. The following screenshot describes an analysis of a **TFTP**
    capture:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**窃听**是最严重的VoIP攻击之一。它让攻击者接管您的隐私，包括您的通话。有许多窃听技术；例如，攻击者可以嗅探TFTP配置文件的网络，而这些文件包含密码。以下截图描述了对TFTP捕获的分析：'
- en: '![](img/00294.jpeg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00294.jpeg)'
- en: 'Also, an attacker can harvest phone numbers and build a valid phone numbers
    databases, after recording all the outgoing and ongoing calls. Eavesdropping does
    not stop there, attackers can record your calls and even know what you are typing
    using the **Dual-Tone Multi-Frequency** (**DTMF**). You can use the DTMF decoder/encoder
    from this link [http://www.polar-electric.com/DTMF/](http://www.polar-electric.com/DTMF/):'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，攻击者可以收集电话号码并构建有效的电话号码数据库，记录所有的呼入和呼出电话。窃听并不止于此，攻击者可以录制您的通话，甚至知道您正在使用**双音多频**（**DTMF**）输入什么。您可以使用此链接[http://www.polar-electric.com/DTMF/](http://www.polar-electric.com/DTMF/)上的DTMF解码器/编码器：
- en: '![](img/00295.jpeg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00295.jpeg)'
- en: '**Voice Over Misconfigured Internet Telephones** (**VOMIT**) is a great utility
    to convert Cisco IP Phone conversations into WAV files. You can download it from
    its official website [http://vomit.xtdnet.nl/](http://vomit.xtdnet.nl/):'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**错误配置的互联网电话上的语音**（**VOMIT**）是一个将Cisco IP电话对话转换为WAV文件的实用程序。您可以从其官方网站[http://vomit.xtdnet.nl/](http://vomit.xtdnet.nl/)下载它：'
- en: '![](img/00296.jpeg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00296.jpeg)'
- en: SIP attacks
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SIP攻击
- en: 'Another attacking technique is SIP rogues. We can perform two types of SIP
    rogues. From an attacker''s perspective, we can implement the following:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种攻击技术是SIP伪装。我们可以执行两种类型的SIP伪装。从攻击者的角度来看，我们可以实现以下内容：
- en: '**Rogue SIP B2BUA**: In  this attacking technique, the attacker mimics SIP
    B2BUA:'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Rogue SIP B2BUA**：在这种攻击技术中，攻击者模仿SIP B2BUA：'
- en: '![](img/00297.jpeg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00297.jpeg)'
- en: '**SIP rogue as a proxy**: Here, the attacker mimics a SIP proxy:'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SIP伪装为代理**：在这里，攻击者模仿SIP代理：'
- en: '![](img/00298.jpeg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00298.jpeg)'
- en: SIP registration hijacking
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SIP注册劫持
- en: '**SIP registration hijacking** is a serious VoIP security problem. Previously,
    we saw that before establishing a SIP session, there is a registration step. Registration
    can be hijacked by attackers. During a SIP registration hijacking attack, the
    attacker disables a normal user by a Denial of Service, for example, and simply
    sends a registration request with his own IP address instead of that users because,
    in SIP, messages are transferred clearly, so SIP does not ensure the integrity
    of signaling messages:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**SIP注册劫持**是一个严重的VoIP安全问题。我们之前看到，在建立SIP会话之前，有一个注册步骤。注册可以被攻击者劫持。在SIP注册劫持攻击期间，攻击者通过拒绝服务（DoS）禁用正常用户，然后简单地发送带有自己IP地址的注册请求，而不是该用户的IP地址，因为在SIP中，消息是明文传输的，所以SIP不确保信令消息的完整性：'
- en: '![](img/00299.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00299.jpeg)'
- en: If you are a Metasploit enthusiast, you can try many other SIP modules. Open
    a Metasploit console by typing `msfconsole` and search SIP modules using `search
    SIP:`
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是Metasploit爱好者，可以尝试许多其他SIP模块。通过输入`msfconsole`打开Metasploit控制台，并使用`search SIP:`搜索SIP模块。
- en: '![](img/00300.jpeg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00300.jpeg)'
- en: 'To use a specific SIP module, simply type `use <module >`. The following interface
    is an example of SIP module usage:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用特定的SIP模块，只需输入`use <module>`。以下界面是SIP模块使用的示例：
- en: '![](img/00301.jpeg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00301.jpeg)'
- en: Spam over Internet Telephony
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 互联网电话的垃圾邮件
- en: '**Spam over Internet Telephony** (**SPIT**), sometimes called **Voice spam**,
    is like email spam, but it effects VoIP. To perform a SPIT attack, you can use
    a generation tool called **spitter**.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**互联网电话的垃圾邮件**（**SPIT**），有时被称为**语音垃圾邮件**，类似于电子邮件垃圾邮件，但它影响VoIP。要执行SPIT攻击，可以使用名为**spitter**的生成工具。'
- en: Embedding malware
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嵌入恶意软件
- en: '**Malware** is a major threat to VoIP infrastructure. Your insecure VoIP endpoints
    can be exploited by different types of malware, such as Worms and VoIP Botnets.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**恶意软件**是VoIP基础设施的主要威胁。您不安全的VoIP终端可能会受到不同类型的恶意软件的攻击，如蠕虫和VoIP僵尸网络。'
- en: Softphones are also a highly probable target for attackers. Compromising your
    softphone could be very dangerous, because if an attacker exploits it, they can
    compromise your VoIP network. Malware is not the only threat against VoIP endpoints.
    VoIP firmware is a potential attack vector for hackers. Firmware hacking can lead
    to phones being compromised.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 软电话也是攻击者的一个高度可能的目标。如果攻击者破坏了您的软电话，可能非常危险，因为如果攻击者利用它，他们可以破坏您的VoIP网络。恶意软件不是针对VoIP终端的唯一威胁。VoIP固件是黑客的潜在攻击向量。固件黑客可能导致电话被破坏。
- en: Viproy – VoIP penetration testing kit
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Viproy - VoIP渗透测试工具包
- en: '**Viproy VoIP penetration testing kit (v4) ** is a VoIP and unified communications
    services pentesting tool presented at Black Hat Arsenal USA 2014 by Fatih Ozavci:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viproy VoIP渗透测试工具包（v4）**是一个VoIP和统一通信服务渗透测试工具，由Fatih Ozavci在2014年Black Hat
    Arsenal USA上展示：'
- en: '![](img/00302.jpeg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00302.jpeg)'
- en: To download this project, clone it from its official repository, [https://github.com/fozavci/viproy-voipkit:](https://github.com/fozavci/viproy-voipkit)
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载此项目，请从其官方存储库克隆它，[https://github.com/fozavci/viproy-voipkit:](https://github.com/fozavci/viproy-voipkit)
- en: '`# git clone https://github.com/fozavci/viproy-voipkit.`'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '# git clone https://github.com/fozavci/viproy-voipkit.'
- en: 'The following project contains many modules to test SIP and Skinny protocols:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 以下项目包含许多模块，用于测试 SIP 和 Skinny 协议：
- en: '![](img/00303.gif)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00303.gif)'
- en: To use them, copy the `lib`, `modules`, and `data` folders to a `Metasploit`
    folder in your system.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用它们，将`lib`，`modules`和`data`文件夹复制到系统中`Metasploit`文件夹中。
- en: VoLTE Exploitation
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VoLTE 利用
- en: '**Voice over LTE** (**VoLTE**) carries voice over 4G networks. Its call quality
    is higher than the other VoIP variants, in addition to providing better coverage. 
    VoLTE, as well as the other voice technologies, faces various threats from attackers.
    Let''s begin discovering VoLTE fundamentals, in order to learn later how to attack
    it. **L****ong-term Evolution** (**LTE**) was developed by the **3rd Generation
    Partnership Project** (**3GPP**) in 2014\. It is an IP-based packet switch network.
    It uses the two modes—**Time Division Duplex** (**TDD**) and **Frequency Division
    Duplex** (**FDD**). LTE architecture is composed of the following three major
    components:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**Voice over LTE** (**VoLTE**) 在 4G 网络上传输语音。其通话质量比其他 VoIP 变体更高，而且提供更好的覆盖范围。VoLTE
    以及其他语音技术都面临来自攻击者的各种威胁。让我们开始探索 VoLTE 的基础知识，以便后来学习如何攻击它。**长期演进** (**LTE**) 由 **第三代合作伙伴计划**
    (**3GPP**) 在 2014 年开发。它是一个基于 IP 的分组交换网络。它使用两种模式——**时分双工** (**TDD**) 和 **频分双工**
    (**FDD**)。LTE 架构由以下三个主要组件组成：'
- en: '**The User Equipment** (**UE**)'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户设备** (**UE**)'
- en: '**The Evolved UMTS Terrestrial Radio Access Network** (**E-UTRAN**).'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**演进的 UMTS 地面无线电接入网络** (**E-UTRAN**).'
- en: '**The Evolved Packet Core** (**EPC**)'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**演进分组核心** (**EPC**)'
- en: '![](img/00304.jpeg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00304.jpeg)'
- en: VoLTE  attacks
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VoLTE 攻击
- en: 'VoLTE has been adopted by a few telecommunication companies, such as AT&T and
    T-Mobile. It is the center of a lot of research to try and exploit the communication
    protocols involved in VoLTE. One of the research papers by Sreepriya Chalakkal
    presents several attacks against VoLTE. Here are some of the attacks:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: VoLTE 已被一些电信公司采用，如 AT&T 和 T-Mobile。许多研究都集中在试图利用 VoLTE 中涉及的通信协议。Sreepriya Chalakkal
    的一篇研究论文介绍了针对 VoLTE 的几种攻击。以下是一些攻击：
- en: Sniffing VoLTE interfaces
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嗅探 VoLTE 接口
- en: Exposed keys in GSM SIM
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GSM SIM 中的暴露密钥
- en: User location manipulation
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户位置操纵
- en: Roaming information manipulation
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 漫游信息操纵
- en: Side channel attack
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 侧信道攻击
- en: SiGploit – Telecom Signaling Exploitation Framework
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SiGploit – 电信信令利用框架
- en: SiGploit is a security framework that helps telecom security professionals enhance
    mobile network infrastructure. To test the project, clone it from [https://github.com/SigPloiter/SigPloit:](https://github.com/SigPloiter/SigPloit)
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: SiGploit 是一个安全框架，可帮助电信安全专业人员增强移动网络基础设施。要测试该项目，请从[https://github.com/SigPloiter/SigPloit:](https://github.com/SigPloiter/SigPloit)克隆它
- en: '[PRE1]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/00305.gif)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00305.gif)'
- en: 'To use the tool, go to the `bin` directory and run the `SiGsploit.py` script:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用该工具，请转到`bin`目录并运行`SiGsploit.py`脚本：
- en: '![](img/00306.gif)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00306.gif)'
- en: Summary
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we demonstrated how to exploit the VoIP infrastructure. We
    started by studying the core protocols involved in VoIP. Then, we explored the
    major VoIP attacks and how to defend against them, in addition to the tools and
    utilities most commonly used by penetration testers. We finished the chapter with
    an overview of some of the state-of-the-art attacks against VoLTE.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们演示了如何利用 VoIP 基础设施。我们首先研究了 VoIP 中涉及的核心协议。然后，我们探讨了主要的 VoIP 攻击以及如何防御它们，以及渗透测试人员最常用的工具和实用程序。我们以概述一些针对
    VoLTE 的最新攻击结束了本章。
