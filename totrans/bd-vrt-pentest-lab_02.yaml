- en: Chapter 2. Choosing the Virtual Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will discuss the different virtual environment platforms
    there are to choose from. We will look at most of the main virtual technology
    platforms that exist. We will discuss the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Commercial environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Image conversion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Converting from a physical to virtual environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One of the most challenging things we have to do is decide on the virtualization
    software that we want to use. Not only do we have to decide on what we want to
    do with respect to the software we choose, it is also required that we decide
    whether we want to build a dedicated virtual platform or run the software on our
    existing system. In this book, we are going to focus on creating a virtual environment
    on our existing system. However, it is still important to at least briefly discuss
    the option of creating a bare metal environment.
  prefs: []
  type: TYPE_NORMAL
- en: When we install a bare metal environment (also known as a type 1 install of
    a virtual environment), the OS is provided by the product in the form of a Hypervisor.
    Although this is an extremely useful way to create powerful and complex architectures,
    it requires the dedication of the hardware, and as such is not something we would,
    for the most part, be able to carry around with us. If you are in a lab environment
    and building the labs, then it is something you definitely should explore due
    to the power and options you have when creating machines.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of a type 1 bare metal architecture is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Choosing the Virtual Environment](img/477-1_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As the preceding screenshot shows, in a type 1 or bare metal architecture, the
    Hypervisor is installed in the system hardware and the virtualization resources
    are provided by the Hypervisor. You can configure a large number of options to
    include resource allocation when you use a virtual bare metal solution.
  prefs: []
  type: TYPE_NORMAL
- en: 'Type 1 virtualization provides a robust and extremely powerful solution to
    consider when you are building your pentesting labs. However, one thing that makes
    it a challenge to deploy is the fact that the OS is provided by the Hypervisor
    already installed in the hardware, and this can cause challenges with certain
    hardware versions; furthermore, for the most part, this type of solution is best
    implemented on a desktop or server-type machine. While it can be implemented on
    a laptop, it is more common on the other platforms. One potential option to use
    is to create your lab environment and then remotely access it. From a virtualization
    standpoint, it does not impact the machines we create; either type 1 or type 2
    will suffice. For our purposes in this book, we will use type 2 virtualization.
    An example of type 2 virtualization is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Choosing the Virtual Environment](img/477-1_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As can be seen, in type 2 virtualization, the Hypervisor rides on the operating
    system and the OS rides on the system hardware. Again, this is the architecture
    we will utilize as the book progresses. For now, we will look at both type 1 and
    type 2 solutions. Starting from [Chapter 3](ch03.html "Chapter 3. Planning a Range"),
    *Planning a Range*, we will maintain focus on the type 2 solution.
  prefs: []
  type: TYPE_NORMAL
- en: Open source and free environments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are a number of free and open source virtual environments; we will look
    at some of the more popular ones here. For this section, we will discuss the following
    products:'
  prefs: []
  type: TYPE_NORMAL
- en: VMware Player
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VirtualBox
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hyper-V
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vSphere Hypervisor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware Player
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The team at VMware has created a number of different products that are available
    for free. At the time of writing this book, VMware Player is still available free
    of charge, but unfortunately only for home users. One of the biggest limitations
    in the past was the fact that you could not use VMware Player to build and create
    virtual machines. Thankfully, the latest versions allow you to create machines.
    The limitations of the current version are in the networking department; this
    is because you cannot create additional switches with the VMware Player tool.
    For our purposes of building virtual pentesting labs, this is something that we
    really need, and if you do decide to use it, then you can only use VMware Player
    for basic network architecture. It is free, and this is why we are going to cover
    it. The first thing you want to do is download it. You can download it from [https://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/6_0](https://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/6_0).
    Once you have downloaded it, you will have to obtain a license key by registering
    with the site. Once you have the key, you can enter it during the installation
    or at a later time, and it will enable you to use the tool. For reference, to
    use the tool, the user guide is a good source, and there are several tutorials
    on the Internet for it too. Again, it is limited in what it can provide us, but
    a viable solution is to use it to test machines you build on as well as other
    machines without having to purchase another license for the software.
  prefs: []
  type: TYPE_NORMAL
- en: VirtualBox
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Oracle VirtualBox is a very powerful tool and is one of the most popular when
    it comes to selecting a virtualization solution. The fact that it is so powerful
    and free makes it a great choice. The tool performs well on a variety of platforms
    and offers desktop as well as enterprise level capabilities. The current version
    at the time of writing this book is 4.3.2; you can download it from [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads).
    There are versions available for Windows, Mac, Linux, and Solaris. The reviews
    of Version 3 for VirtualBox reported a number of problems with the tool, but ever
    since Version 4 has come out, there have not been reports of the problems from
    the previous version.
  prefs: []
  type: TYPE_NORMAL
- en: As it is so popular and a viable choice, we will create a virtual machine using
    this tool. The user guide is very useful too if you have not used VirtualBox before.
    You can download it from [https://www.virtualbox.org/wiki/Documentation](https://www.virtualbox.org/wiki/Documentation).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have installed the software, the program will launch itself automatically,
    and you should see a screen similar to that shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![VirtualBox](img/477-1_02_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We will need an ISO image to use for our virtual machine. For this, we will
    use the excellent tool Samurai **Web Testing Framework** (**WTF**). This is a
    web application testing framework that is a live Linux environment that has been
    preconfigured as a web pentesting framework. The CD contains some of the best
    open source and free tools to use to test and attack websites. You can download
    the ISO image from [http://www.samurai-wtf.org/](http://www.samurai-wtf.org/).
  prefs: []
  type: TYPE_NORMAL
- en: To start the creation of the virtual machine, click on **New** to begin the
    process. In the window that opens to create the virtual machine, enter `Samurai`
    in the name field and select **Linux** as the operating system. Then, select the
    required version and click on **Next**.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next window that comes up, you will select the RAM for the virtual machine;
    you can leave the setting at the default of **256 MB** or change it to another
    value that works best for you. An example of this window is shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![VirtualBox](img/477-1_02_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The next thing we want to do is to create a hard disk for our virtual machine,
    but for our purposes, we are not going to use a hard disk; so, we will select
    the **do not add a virtual hard drive** setting and click on **Create**. You will
    be warned about creating a virtual machine without a hard drive, but this is OK
    because this is what we want to do. So, read the warning and click on **Continue**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Congratulations! If all has gone well, you have just created a virtual machine
    in VirtualBox. You should now have a window showing you the machine you have created,
    and it will look similar to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![VirtualBox](img/477-1_02_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We are now ready to start our virtual machine! Click on the **Start** setting
    and start the virtual machine. This is where you will get a message about how
    you need to select an optical image to boot from, and this is where the image
    we downloaded comes in. So, we will do that now. At the prompt, navigate to the
    ISO image you have downloaded and boot the Samurai-WTF virtual machine. This is
    the process to use VirtualBox, and we will not continue on from here. You are
    welcome to experiment and practice on your own. One thing to be aware of is that
    sometimes, with certain machines, the VirtualBox software will have difficulties
    with the keyboard and the input. If this happens, it is recommended that you load
    the extensions that can be found at [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads).
    This is one of the reasons why VirtualBox is not the selected software for this
    book.
  prefs: []
  type: TYPE_NORMAL
- en: Xen
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It is no secret that the i386 market has been dominated for years by the solutions
    offered by VMware, but as time goes by, the market has plenty of solutions that
    continue to increase the size of their followings. This is where Xen comes in.
    It has gained popularity and continues to do so as word gets around about it and
    as the product continues to improve. You will probably ask this question if you
    are new to Xen: what is Xen? This is a very good question, and to explain it in
    detail is beyond the scope of the book. There are entire books written on Xen,
    so we will only cover the basics here. Xen got its start at the University of
    Cambridge in the UK. Since then, there have been many players in the Xen game,
    and this has added features and capabilities to the tool, which in turn has increased
    its popularity.'
  prefs: []
  type: TYPE_NORMAL
- en: Once the Xen project took off, as is typical in the IT world, the founders started
    their own company called XenSource, and then the company was taken over by Citrix.
    Citrix has expanded on the project and offers it as a solution along the lines
    of VMware ESX. Additionally, other vendors have added Xen into their product vendors
    such as Red Hat and Novell.
  prefs: []
  type: TYPE_NORMAL
- en: For the latest information or to download Xen, refer to the website [www.citrix.com](http://www.citrix.com).
    For a very good tutorial, that is, a step-by-step guide to set up Xen on a SUSE
    Linux machine, you may refer to the URL [http://searchservervirtualization.techtarget.com/tip/Xen-and-virtualization-Preparing-SUSE-Linux-Enterprise-Server-10-for-virtualization](http://searchservervirtualization.techtarget.com/tip/Xen-and-virtualization-Preparing-SUSE-Linux-Enterprise-Server-10-for-virtualization).
    Note that there is a free registration required that consists of providing your
    e-mail address to read the document. It is worth it as they will send you links
    as new papers are published, so it becomes a nice, quick reference to stay updated.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'I had a university professor when I was an undergraduate student who gave me
    some sound advice that I continue to follow and recommend others do too: to spend
    one hour a day reading something or doing something related to the IT industry.
    Those of you who are reading this book probably know that the IT industry is in
    a constant state of change and the data is perishable, so we have to do something
    to keep it fresh. For me, that one hour a day has been part of my daily life for
    more than 25 years and has helped me stay updated.'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, as we wrap up this section on Xen, one of the features we need as we
    build complex environments is the capability to convert from one format to another.
    This is something we will cover later on in this chapter, but for Xen, we will
    share a reference with you that explains in detail how to take a Xen virtual machine
    and convert it into a Hyper-V format. You will find that information at [http://technet.microsoft.com/en-us/library/hh427283.aspx](http://technet.microsoft.com/en-us/library/hh427283.aspx).
    You will note the reference is from Microsoft, and you will also note that this
    only works with specific versions of the Microsoft System Centre software, but
    it is good to know it is possible. So, if you ever find or have a Xen VM and want
    to convert it for use in Hyper-V, it is possible.
  prefs: []
  type: TYPE_NORMAL
- en: Hyper-V
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is Microsoft's virtualization tool, and it is a continuation of their virtual
    PC product. While still relatively new to the virtualization landscape, Microsoft
    is catching up fast. The one area I find lacking within their tool is the networking
    and integration with desktop interfaces on Linux and Unix. Once they get these
    figured out, they will be worth serious consideration when selecting your virtual
    environment for your pentesting labs. Originally, Hyper-V was only offered as
    part of the server products for Microsoft starting with Windows Server 2008 and
    currently with Windows Server 2012.
  prefs: []
  type: TYPE_NORMAL
- en: Now, there are options to install the capability with Windows 8\. This decision
    by Microsoft was based on the fact that the tool has been so popular on the server
    versions of their software that they wanted to expand it to give their customers
    more options when it comes to virtualization.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two main requirements for Hyper-V. The first requirement is that
    the operating system has to be 64 bits. The second requirement that is often overlooked
    is the capabilities of the processor in the machine. The Hyper-V technology requires
    that the chip support **Second Level Address Translation** (**SLAT**). To run
    Hyper-V on a platform other than a server, you will need to have one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Windows 8 Professional
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows 8 Enterprise
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you have your platform of choice, you can either add it as a feature if
    you are using one of the servers, or if you have selected one of the Windows 8
    platforms, then you can download Hyper-V from [http://www.microsoft.com/en-us/download/details.aspx?id=36188](http://www.microsoft.com/en-us/download/details.aspx?id=36188).
    Microsoft refers to the version of Hyper-V for non-server products as client Hyper-V.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of the platform, the installation and configuration follows the same
    sequence. Now that you have Hyper-V, we will create a virtual machine so that
    you can work through the process of creating one. With Hyper-V, we have to set
    up a network that we are going to connect it to. We can set this up at the beginning
    or we can set it up after the creation of a virtual machine. For our purposes,
    we will create the network before we start the virtual machine creation process.
    In a basic architecture, we need two networks, one that connects to the external
    world (for example, the Internet) and a second network to connect to the internal
    machines. For simplicity, we will call them **ExternalNet** and **InternalNet**.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first thing that you need to do is define a DHCP scope of `192.168.177.0/24`
    for the DHCP server. This is the network that will be used for external access,
    and the labs would be required to be set this way if you were to use this machine.
    If you are using a server platform, the steps to set up the network are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Start** | **Administrative Tools** | **Hyper-V Manager**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Virtual Network Manager** on the right-hand pane of Hyper-V, The
    **Virtual Network Manager** window appears.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **New Virtual network** on the left-hand pane and select **External**
    as the type of network, then click on **Add**. This is shown in the following
    screenshot:![Hyper-V](img/477-1_02_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The process to create the InternalNet is the same, so we will not repeat it
    here. We will go through the steps of creating a virtual machine with Hyper-V
    to the point of a successful boot, then we will continue with the chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will need an ISO image, and if you have one you want to use, then that
    is fine. We will use the popular pentesting framework from Offensive Security
    Kali Linux. You can download the ISO image from the location [http://www.kali.org/downloads/](http://www.kali.org/downloads/).
    Once you open this link, pick the version you would like to use and download it.
    Once you have downloaded it launch Hyper-V. If you are using a server platform,
    the steps are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Start** | **Administrative Tools** | **Hyper-V Manager**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the program opens, navigate to **Action** | **New** | **Virtual Machine**,
    and when the new virtual machine wizard opens, click on **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a name for Kali for the virtual machine and click on **Next**. In the
    memory section, enter the maximum of RAM you can enter, and it should be at least
    1024 KB. Kali needs at least 1 GB of memory to run efficiently. Once you have
    entered the RAM, click on **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will bring up the network connection selection; click on **Not connected**
    and then click on **Next** twice.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Installation Options window, select the radio button **Install an operating
    system from a boot CD/DVD-ROM** and then select the image file (ISO) and browse
    to the Kali image. Refer to the following screenshot:![Hyper-V](img/477-1_02_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is the installation options screen for your reference
  prefs: []
  type: TYPE_NORMAL
- en: Once you have navigated to the ISO image, click on **Next**. Verify that your
    settings are correct and click on **Finish**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We now want to configure our network adapter. Within the Hyper-V environment,
    this can be a tricky process; so, the safest way when you are dealing with machines
    that are not from the Windows family is to select the legacy card. Right-click
    on the Kali virtual machine you have created and select **Legacy Network Adapter**.
    Then, click on **Add** as shown in the following screenshot:![Hyper-V](img/477-1_02_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that we have selected our network adapter type, we have to connect it to
    our network. In the drop-down window, select **External** network, click on **Apply**,
    and then click on **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A new virtual network will appear on the left-hand side of the window. Select
    it and then enter the name as `ExternalNet` in the right-hand pane of the window.
    Ensure that the **External** radio button is selected, click on the network adapter
    of your computer, and then click on **Apply**, as shown in the following screenshot:![Hyper-V](img/477-1_02_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you get a warning message similar to the next screenshot, click on **Yes**
    to clear it. It is just to let you know that you may lose connectivity and have
    to re-enter the static network configuration data if you do lose the network connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you do not want to be bothered by the alert again, then select the **Please
    don't ask me again** checkbox before you click on **Yes**, as shown in the following
    screenshot:![Hyper-V](img/477-1_02_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We are now ready to start our virtual machine. Right-click on the Kali virtual
    machine and select **Start**. Then, right-click again and select **Connect**.
    Your virtual machine should boot, and you can enter `startx`, which will start
    the environment. At this point, it is up to you how much you explore with this
    virtual machine. We will continue with the chapter so that we can get through
    the different options of virtualization and move on to bigger and brighter things.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: vSphere Hypervisor
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is the free version of the commercial entity, which is something you should
    consider for your lab environment. There are some versions that will work on a
    laptop and make it a part of their mobile lab environment too, but in my opinion,
    this is not the way to exploit the power of this type 1 virtualization solution.
  prefs: []
  type: TYPE_NORMAL
- en: As previously discussed, a type 1 solution has the Hypervisor ride on the actual
    hardware of the system itself. There are no emulation routines or interaction
    with the OS required; it is a pure bare metal environment that, in most cases,
    equates to raw power.
  prefs: []
  type: TYPE_NORMAL
- en: 'While the setup is very easy to perform and most can do it without assistance,
    the VMware site has excellent resources for you to use to assist you with the
    installation. You can review these resources, including a video of how to perform
    the setup, at the following website:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.vmware.com/products/vsphere-hypervisor/gettingstarted.html](http://www.vmware.com/products/vsphere-hypervisor/gettingstarted.html)'
  prefs: []
  type: TYPE_NORMAL
- en: As you will see when you visit the site, the team at VMware has provided you
    plenty of references to assist you with the installation, configuration, and deployment
    of their virtualization solutions. One last thing to mention here is the hardware
    requirements that are listed on the site; most of these are considered to be recommendations,
    and it is best to test the hardware for the product before you make it your preferred
    solution. Again, this is another reason why we do not recommend this solution
    on your mobile or laptop platform; laptops, for the most part, do not have the
    power that we want at our disposal when it comes to a bare metal virtual solution.
  prefs: []
  type: TYPE_NORMAL
- en: Commercial environments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As with the free offerings, there are a number of commercial environments that
    we want to discuss in this book. We will look at both type 1 and type 2 virtualization
    solutions.
  prefs: []
  type: TYPE_NORMAL
- en: vSphere
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This is an extremely powerful continuation of the capabilities discussed with
    the VMware Hypervisor; the added capabilities and features make it well worth
    the investment to deploy sophisticated and complex virtual architectures. The
    tool provides so many additional options above and beyond the free variant. These
    options are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Pool computing and storage resources across multiple physical hosts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Centralized management of multiple hosts using the VMware vCenter Server™
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deliver improved service levels and operational efficiency
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform live migration of virtual machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Take advantage of automatic load balancing, business continuity, and backup
    and restore capabilities for your virtual machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see, there are many optimization options with the tool; however,
    unless you are building a complex and sophisticated testing lab, this tool goes
    beyond what we need as a solution. If you do find yourself running large global
    teams, then it is definitely an option that you should consider if it is within
    your budget.
  prefs: []
  type: TYPE_NORMAL
- en: VMware Player Plus
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As of this writing, VMware Player Plus is a relatively new offering from the
    group at VMware. We have already discussed the VMware Player tool. What this version
    does is provide an additional functionality. The tool is intended to provide the
    capability to deliver a managed desktop by allowing you to ship Player Plus with
    a virtual machine that is configured with your desktop image. This alleviates
    any requirement for shipping hardware to your clients or any other groups.
  prefs: []
  type: TYPE_NORMAL
- en: 'An additional feature of VMware Player Plus is that it can be used to run restricted
    virtual machines that have been created by other commercial VMware products. This
    means you can password protect machines, and if the user does not have the password,
    then they cannot run the machine. An example of a password-protected machine is
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![VMware Player Plus](img/477-1_02_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: At the time of writing this book, the tool does not provide a trial download,
    but you can read more information about it from [http://www.vmware.com/products/player/](http://www.vmware.com/products/player/).
  prefs: []
  type: TYPE_NORMAL
- en: XenServer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The group at Citrix has developed a powerful competitor to the solutions offered
    from VMware, and this is evident in their XenServer offering. They make the statement
    that they are the leading data center platform for cloud and desktop solutions;
    furthermore, according to their claims, four out of five of the largest hosting
    clouds are hosted by XenServer, and this is quite a claim indeed. Some examples
    of what the product can provide solutions for are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Highly secure and flexible network fabric
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create and delegate rights
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: High availability and load balancing support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As with the vSphere commercial solution, this is not something we really require
    for building our labs, but it is a possibility for those who want to use something
    other than a VMware offering. You can find out more and also download it from
    [http://www.citrix.com/products/xenserver/how-it-helps.html](http://www.citrix.com/products/xenserver/how-it-helps.html).
  prefs: []
  type: TYPE_NORMAL
- en: VMware Workstation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The team at VMware has been in the virtualization game for some time, and it
    shows when you use their Workstation product. The thing that separates VMware
    Workstation from the masses to me is the fact that you can integrate with most,
    if not all, devices you plug into your host machine relatively seamlessly. While
    it does cost to use VMware Workstation, the cost is relatively cheap, and it provides
    so much power to create extremely diverse and complex architectures. It is, by
    far, my favorite tool, and I will be using it in the next chapter and the consecutive
    ones as well. As I have mentioned, the Microsoft offering, having only been on
    the scene for a short period, is definitely improving, and it will make an interesting
    race as they continue to mature their product. This is a good thing for us! As
    consumers, we can only benefit from these vendors each trying to outdo each other.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned, it is highly recommended that you consider purchasing the software.
    You can download the latest version of VMware Workstation from [http://www.vmware.com/products/workstation/workstation-evaluation](http://www.vmware.com/products/workstation/workstation-evaluation).
    As with other versions of software, you have to register and obtain a key to be
    able to power on virtual machines.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have downloaded it, you can install the software, and it is pretty
    straightforward. If you do have any questions, the VMware Workstation user guide
    is well written and is an excellent reference for you. You can also download it
    using the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.vmware.com/pdf/desktop/ws1001-using.pdf](http://www.vmware.com/pdf/desktop/ws1001-using.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: 'There is a large community forum that is also an excellent reference for information
    about the tool. Support is another reason why VMware continues to lead in the
    major categories of virtualization. Once you have installed the program and opened
    it, you should see a display on your screen similar to that shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![VMware Workstation](img/477-1_02_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As you can see in the preceding screenshot, there are a number of options for
    us to start with. As we have used ISO images earlier, we will continue that trend
    here and also add another task of creating a virtual machine. For simplicity,
    we will use the same ISO Samurai WTF image that we used earlier, but you are welcome
    to download an ISO image of your choice and create the machine from this. Once
    you have made your choice of the ISO image to be used, we are ready to begin the
    installation. To start using this virtual machine, we will execute the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Create a New Virtual Machine**. This will start the new virtual machine
    wizard. Accept the default setting of **Typical** and click on **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next window, select the radio button **Installer disc image file (iso)**
    and browse to the location of the ISO file. Then, click on **Next**, as shown
    in the following screenshot:![VMware Workstation](img/477-1_02_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the previous screenshot, you probably noticed the operating system was not
    automatically detected; therefore, we will have to enter the details manually.
    If it was detected, the wizard, for the most part, will perform the installation
    without interaction from the user.
  prefs: []
  type: TYPE_NORMAL
- en: In the guest operating system window, select **Linux**, and in the drop-down
    menu, click on **Other** **Linux 2.6.x kernel**. Once you have made your selection,
    click on **Next**. Accept the defaults and click on **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At the **Specify disk Capacity** screen, read through the information on the
    advantages and disadvantages of splitting a disk. If you prefer to change the
    default setting you may do so, but for most, the default is acceptable unless
    you intend to have large machines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have made your decisions, click on **Next**. This should be the last
    screen; take a moment and review the information. Then, click on **Finish** and
    create your virtual machine. You should see the machine you created and the information
    for the machine configuration, as shown in the following screenshot:![VMware Workstation](img/477-1_02_13.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The only thing left to do is to power on the virtual machine. Click on **Power
    on this virtual machine** and your machine will boot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we are going to create a virtual machine for one of the machines that we
    will use in other chapters in the book. The machine we are going to use is already
    created and available as a virtual machine in the VMware VMDK file format. We
    will cover more on the different formats for virtual hard drives later in the
    chapter. We want to download the Broken Web Application Project virtual machine
    from **Open Web Application Security Group** (**OWASP**) available at [www.owasp.org](http://www.owasp.org).
    The virtual machine has been sponsored by Mandiant and is an excellent tutorial
    to practice web application testing. You can download the VM from [http://sourceforge.net/projects/owaspbwa/files/](http://sourceforge.net/projects/owaspbwa/files/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the VM is downloaded, extract the VM to a folder on your machine. Once
    the files have been extracted, we need to start VMware Workstation and start the
    access process. The following are the steps that need to be executed:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Open a Virtual Machine**. Navigate to the folder where you extracted
    the files and locate the configuration file for the Broken Web Application project
    VM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have located the file, select it and click on **Open** to open the
    file. This will open the VM and you should be in the configuration screen, as
    shown in the following screenshot:![VMware Workstation](img/477-1_02_14.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As you can see in the preceding screenshot, the VM is configured to start on
    the NAT interface, and we will use this once we boot the VM. At the end of this
    section, we will take a look at what this NAT interface means in a VM environment.
  prefs: []
  type: TYPE_NORMAL
- en: We now want to start the machine; click on **Power on this virtual machine**
    and your machine will boot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the machine has booted, you will see the login information for the machine
    to access it across the Internet. We could log in to the machine locally, but
    there really is no reason to do this. You are welcome to do this if you want to
    check the machine out or look around, but for our purposes, we will access it
    from the network. This is the preferred way to access it because it provides us
    with a GUI to all of the different tools within the VM. The VM screen that shows
    the status after the boot is shown in the following screenshot:![VMware Workstation](img/477-1_02_15.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The information that we want here is the IP address that is assigned to the
    VM so that we can access it and check it out! Open the browser of your choice
    and enter the IP address that is shown and bring up the web interface to the Broken
    Web Application Project VM. An example of the web page that is presented to you
    is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![VMware Workstation](img/477-1_02_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As the screenshot shows, there are many tools located in this VM distribution,
    and it is something that any tester can benefit from. The tutorials and applications
    that are contained here allow a user to practice their skills and the challenges,
    which are set up at different skill levels. You are encouraged to spend a lot
    of time here and come back often. We will be using it throughout the book as and
    when the situation requires it. Again, since the sponsorship of Mandiant, the
    VM has added a number of additional challenges. Some of you reading this book
    might be familiar with the OWASP's excellent tutorial Web Goat. This project is
    just an extension of this tutorial, and it has also added the Irongeek tool Mutillidae.
    You can read more about Mutillidae at [http://www.irongeek.com/i.php?page=mutillidae/mutillidae-deliberately-vulnerable-php-owasp-top-10](http://www.irongeek.com/i.php?page=mutillidae/mutillidae-deliberately-vulnerable-php-owasp-top-10)
    or even watch some of the informative videos at [www.irongeek.com](http://www.irongeek.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'We have one more topic to look at before we continue on with this chapter;
    it is the power of networking within VMware Workstation. This is one of the main
    reasons why I paid for and continue to pay for VMware Workstation. In your VMware
    Workstation, navigate to **Edit** | **Virtual Network Editor**. When the window
    opens, you will see the current switches that are configured in VMware. By default,
    VMware configures three virtual switches, and they are Vmnet0 for the bridged
    interface, Vmnet1 for the host only interface, and Vmnet8 for the NAT interface.
    We will not go into detail here as there are many sources from which we can learn
    more about the networks and what they mean, and one of the best is the VMware
    Workstation user guide we mentioned earlier in this chapter. The power of VMware
    Workstation is that we can have up to 10 virtual switches! What this means is
    that we can effectively architect 10 different network segments. The VMware network
    configuration allows us to set the IP address ranges that we want and also provides
    a DHCP server. For the most part, 10 is more than we need, and with Version 10x
    and higher, we can now have 20 and 255 network segments on Windows and Linux hosts,
    respectively. That is a lot of networks! It is this and other factors that make
    it our software of choice. We need the switching capability when we build layered
    and segmented architectures. An example of the network configuration on my machine
    is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![VMware Workstation](img/477-1_02_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding screenshot, you can observe that in my machine, most of the
    10 possible networks are visible. I have built numerous complex architectures
    over a period of time and have added more than one custom network.
  prefs: []
  type: TYPE_NORMAL
- en: It is more than likely that you have the three default switches that are installed
    by the software. Feel free to add a switch if you want to see how the process
    is done. This is what allows us to build a true layered architecture that emulates
    something we could see in an engagement. In fact, it is rare to have a single
    segment or flat architecture you are testing, especially in any type of external
    testing. Therefore, it is imperative as we build and test advanced techniques
    that we have the ability to provide layers of protection so that we can either
    hack through or get around in some way to achieve a compromise.
  prefs: []
  type: TYPE_NORMAL
- en: Image conversion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Recently, while working with developing labs for a client who extensively used
    a virtual environment, I was asked to migrate the virtual machines from VMware
    to Hyper-V. As I had very little experience with Hyper-V, it was a challenging
    task which took three weeks to complete. Satisfaction is one aspect of life which
    is achieved when we accept challenges and overcome the hurdles posed by them.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, there were some things that worked perfectly fine in VMware but
    could not be accomplished in Hyper-V; one thing that would not work is the router
    emulation software. The primary issue with the migration is related to the virtual-hard-disk
    format. Hyper-V requires VHD and VMware uses the VMDK format for its virtual machine
    hard disks. In order to overcome the hurdle of image conversion, I was in search
    of a tool which would assist in this conversion.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, such a tool exists, and it's free! When you are building virtual
    machines, if you want to use another tool, or more commonly you have a format
    that you created or downloaded and it does not match the tool you are trying to
    use, then this tool is perfect for you! The tool I use often for accomplishing
    this is Starwind V2V Converter from Starwind Software, available at [http://www.starwindsoftware.com/](http://www.starwindsoftware.com/).
  prefs: []
  type: TYPE_NORMAL
- en: 'A note of caution here: the tool in my experience has not been perfect, but
    it has converted most of the VMDK files to the VHD format for Hyper-V without
    any problems. The only OS which has been posing problems during conversion and
    then getting it to work on Hyper-V has been "FreeBSD". Ironically, FreeBSD versions
    prior to Version 9x seem to work fine.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the software from [http://www.starwindsoftware.com/converter](http://www.starwindsoftware.com/converter).
    Note that you will be required to register and the application runs in Windows.
    Once you have downloaded the software, install it and then run the program. It
    is an easy-to-use tool; you select the file image to convert by navigating to
    it. Following this, the tool will display the options for the format output. An
    example of this is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image conversion](img/477-1_02_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the output format has been selected, the process of conversion will run,
    and once it is finished, you only need to go through the steps that we have covered
    before for the tool that you have chosen. As discussed, the tool works very well
    and it saves a lot of time and provides you the ability to pick and choose any
    platform that you prefer for building the pentesting environments.
  prefs: []
  type: TYPE_NORMAL
- en: Converting from a physical to virtual environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Another option in many of the tools that can be used to help us when we create
    machines is the physical to virtual functionality, sometimes referred to as the
    P2V concept; furthermore, this provides us with the capability to build any machine,
    run the conversion process to take the physical machine, and then convert it to
    a virtual machine. This functionality allows you to build a custom pentesting
    platform machine and then perform the conversion and carry the machine anywhere
    you go out in the field. We have a couple of options that we will discuss. There
    is a free option that we can use provided by VMware called vCenter Converter.
    With this tool, you can convert not only physical Windows machines, but also Linux.
    To try it out and see how well it works, you can download it from [http://www.vmware.com/products/converter/](http://www.vmware.com/products/converter/).
    We have another option, that is, use the feature from our VMware Workstation installation.
    This is our preferred option. If you open the software, you will see there is
    an option to convert a physical machine to virtual, and this option is called
    **Virtualize a Physical Machine…**. Note that here you will have to install the
    converter the first time you select the option within VMware Workstation, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Converting from a physical to virtual environment](img/477-1_02_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have discussed the different types of virtualization, where
    type 1, also known as bare metal virtualization, provides the Hypervisor that
    can be directly accessed and installed in the hardware and with type 2, the Hypervisor
    installed in the operating system. One of the advantages of a type 1 solution
    is the fact that the Hypervisor directly installed in the hardware provides for
    improved performance; a drawback of this is the fact that the hardware has to
    integrate with the product's Hypervisor and you have to ensure that you check
    that it does so.
  prefs: []
  type: TYPE_NORMAL
- en: We looked at the different open source virtualization offerings that are possible,
    and we installed, configured basic settings, and created virtual machines in a
    number of tools. We downloaded and used an ISO image to create our virtual machine
    and booted the machine once it was created. Additionally, we downloaded the OWASP
    Broken Web Application Project virtual machine and used the existing configuration
    to run the machine.
  prefs: []
  type: TYPE_NORMAL
- en: We also looked at some of the commercial offerings with respect to virtualization,
    and it is here that we explained the reason why we will work with the virtualization
    product VMware Workstation from this point forward. Additionally, we discussed
    the powerful features of both the XenServer and vSphere products.
  prefs: []
  type: TYPE_NORMAL
- en: One of the challenges we face is taking old and existing machines and using
    them with the different virtualization offerings that are out there, so we discussed
    a tool from the group at Starwind Software that can be used to convert from VMDK
    to VHD files and VHD to VMDK files, and with the exception of some, conversions
    work extremely well.
  prefs: []
  type: TYPE_NORMAL
- en: We concluded this chapter with the concept of P2V, or physical to virtual conversion,
    which provides a way for us to take an existing or a new physical machine and
    convert it to a virtual one. In the next chapter, we will look at the challenge
    of planning and building our range.
  prefs: []
  type: TYPE_NORMAL
