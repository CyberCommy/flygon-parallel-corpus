- en: Web Fonts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For a long time, we were stuck with a few basic fonts, such as Times New Roman,
    Georgia, and Arial. If you ever wanted to deviate farther than that, you ran the
    risk of the font not showing up when someone viewed your site because they probably
    wouldn't have had that font installed on their computer. During this period, whenever
    we wanted to use a fancy font, we were required to save it as an image, which
    used to pose many problems. Luckily for us, now web fonts have officially emerged,
    which gives us the ability to use a multitude of great fonts that will work on
    all computers. In this chapter, you're going to learn about web fonts. First you'll
    learn about the basic syntax of the `@font-face` rule, then we'll go over how
    `@font-face` can be a little tricky, followed by getting into services that provide
    fonts and deliver them to your website, such as Google Web Fonts and Typekit.
    We'll finish with icon fonts.
  prefs: []
  type: TYPE_NORMAL
- en: The @font-face property
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's start this chapter by learning how to use the `@font-face` property to
    add a web font to our site. First, we'll add an OTF file to a folder on our site,
    then we'll define a new font in our CSS, and finally, we'll apply that CSS to
    the elements on our web page.
  prefs: []
  type: TYPE_NORMAL
- en: Adding font files directly to the site
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In our project files for this section, we have a new folder called `fonts`.
    Inside this folder, there''s an OTF file called `LeagueGothic-Regular`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00289.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: So now this font lives in our site's folder, and the end user visiting our website
    will download this font onto their computer, just like they downloaded the HTML,
    CSS file, and images. But first, we have to tell it to do that and look for it
    in our CSS.
  prefs: []
  type: TYPE_NORMAL
- en: Defining and applying new fonts in our CSS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the CSS, right underneath our reset, let''s add a new section called fonts.
    Add the `@font-face`; and this will allow us to declare a new font:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: I'm going to declare the font name first, which can be anything. So even if
    the font is called `League Gothic-Regular`, you can name it `Bananas Serif` if
    you want. Let's call it `League Gothic` because that makes the most sense.
  prefs: []
  type: TYPE_NORMAL
- en: 'I''ve put it in single quotes for two reasons. One, it''s a web font, and two,
    it has more than one word, which should always be quoted, just like you would
    quote `''Times New Roman''`. Next, we''re going to declare where this font exists
    using the `src` property:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'We want to make sure we spell that exactly right to match the name of the OTF
    file. Note that I used `../`. This is an instruction to go out of the `CSS` folder
    and then go into the `fonts` folder and look for `LeagueGothic-Regular.otf`. Here
    is our projects folder structure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00290.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'So now we can add this font to any rule set using the `font-family` property
    that we''re used to. We can specify fallbacks as well, like we normally do, in
    case the fonts don''t get downloaded. In the "Global" section of the style sheet,
    there is a rule set for the `h1` and another for the `h2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Beneath the `h2` rule set, we'll add another, targeting `h1` tags and `h2` tags
    adding our new web font.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Following is the output of preceding code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00291.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The following is what our fonts used to look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00292.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'When we refresh, BAM! The very stylish web font is added to our website:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00293.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: We have successfully added a web font to our website, but what we did really
    isn't going to work in all browsers unfortunately. Since typography may be the
    single most important thing on a web page, we've got to find a better solution.
  prefs: []
  type: TYPE_NORMAL
- en: '@font-face: a little tricky business'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: On the surface, web fonts are pretty easy, but in reality, they get complicated
    when we want them to work in all modern browsers. Some browsers use OTF, others
    use WOFF, and some use EOT, RTF, and SVG. Let's go over the full setup for making
    a web font work using the `@font-face` property.
  prefs: []
  type: TYPE_NORMAL
- en: Making it work in all browsers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Not only is this seven different `url` looking for fonts, it''s also five different
    font files: `eot`, `woff2`, `woff`, `ttf`, and `svg`! Each font file format supports
    different browser versions as the comments in the preceding code sample explains.'
  prefs: []
  type: TYPE_NORMAL
- en: 'According to the same *CSS Tricks* article, just the `woff` and `woff2` file
    formats will give you pretty decent browser support (Chrome 5+, Safari 5.1+, Firefox
    3.6+, IE9+, Edge, Android 4.4+, and iOS 5.1+):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: But this still means that you'll need to obtain and host both file formats,
    which is certainly not as challenging as five file formats, but not exactly a
    piece of cake either.
  prefs: []
  type: TYPE_NORMAL
- en: Web fonts are a little more involved than we would hope for. Most of the time,
    fonts are provided through a service, which is what we are about to see in the
    next two sections. Google Web Fonts, Typekit, and other services make web fonts
    even easier and offer high quality fonts in many different weights and styles.
    In the next section, we'll use a font from Google Fonts.
  prefs: []
  type: TYPE_NORMAL
- en: Google Web Fonts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hosting your own web fonts and using proper CSS to support all browsers is slightly
    challenging. There are much easier ways to go about this. I really like Google
    Fonts; they are very easy to use and 100 percent free. The quality of the fonts
    is very good as well. In this section, we'll replace our hosted fonts with Google
    Web Fonts. The first step is to go to Google Fonts and select the two fonts we'll
    be using. Add a link to the CSS file in the heading of both HTML documents. Then
    finally, add the font name to our CSS.
  prefs: []
  type: TYPE_NORMAL
- en: Finding Google Fonts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go to [https://fonts.google.com/](https://fonts.google.com/) and search for
    our headline font: `Maven`. What''s cool is that we can type in some text, say,
    our site title, to see how specific words will look in this font. Most font services
    output something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00294.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'So we can just type Old Chompy and get an idea of what this font is going to
    look like on our `h1`. We can even bump up the font size too. Let''s search for
    and use **Maven Pro**; and do that by clicking the red plus icon. At the bottom
    of the screen, we should have one font family selected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00295.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The next font we''ll look for and grab **Droid Serif**. At the bottom it will
    show 2 families selected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00296.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s open that thingy at the bottom to get more information:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00297.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We''re almost done; we''re just kind of verifying and reviewing. In this panel
    that slid up from the bottom shows us a few interesting things:'
  prefs: []
  type: TYPE_NORMAL
- en: Load time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to embed the font files on our page
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to specify these fonts in our CSS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'I can add additional font-weights and font-styles by going to the *customize*
    tab:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00298.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here I can select additional font-weights and font-styles. If I select too
    many, the load time indicator dips to slow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00299.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We''re only going to need normal, italic, and bold for Droid Serif, and normal
    and bold for Maven Pro, which is goes from slow to moderate:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00300.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Right now, we're set to moderate load speed. I would really like to be in green,
    but at least we're not in red, so we'll go with that.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go back to the *Embed* tab and copy the link to these font files:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00301.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'This code is really just a style sheet. Let''s paste it in the `head` tag of
    `index.html` as well as `shark-movies.html`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00302.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We can see that this is the same `<link/>` we use to specify our styles:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'In fact, it''s a stylesheet pointing to `fonts.googleapis.com` which is where
    it''s getting the fonts from. It actually shows the two font selections, both:
    Droid Serif and Maven Pro. The Google font is hosted on Google''s servers and
    we only are making one http request, which is nice for performance.'
  prefs: []
  type: TYPE_NORMAL
- en: Applying fonts in CSS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we want to use these fonts in our CSS. As you can see, they show us exactly
    how to do that:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00303.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'First, we replace `League Gothic` with `Maven Pro` in our `h1` and `h2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The next step is to add **Droid Serif**. I actually want to make sure all of
    our body copy, all paragraphs, anchors, and everything but `h1` tags and `h2`
    tags uses **Droid Serif**. We''ll be a little extra cautious, so we''ll add fallback
    fonts. We''re going to specify the fallback fonts as `Georgia`, then `Times New
    Roman`, and then the default `serif`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Save these changes. Now when we go to our site, before refreshing it, we can
    see that we have a **League Gothic** applied to `h1` and `h2` and then our generic
    `Arial` for the paragraph:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00304.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'When we refresh, we get our new fonts: This is very good. We have **Maven Pro**
    for our `h1` and our `h2`, and we have **Droid Serif** for all of our other text:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00305.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In this section, you learned how to use Google's tremendous resource of free
    fonts. Using Google's Web Fonts is the easiest possible way on the planet to use
    a font, other than not specifying a font at all. In the next section, we will
    look at another great font resource—*Typekit*, a subscription font library by
    *Adobe* that provides a very large number of high-quality fonts.
  prefs: []
  type: TYPE_NORMAL
- en: Adobe Typekit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Adobe Typekit is one of the excellent subscription font services out there.
    Why use Typekit, though, when there are free fonts provided by Google? I don't
    want to say that you get what you pay for with Google, because I think that Google's
    fonts are very high quality and a very large selection, but I think that the selection
    and quality of fonts on Typekit is outstanding as well. However, the best feature,
    in my opinion, is that this font service is free to all *Adobe Creative Cloud*
    subscribers. So if you have subscribed to the Creative Cloud suite for tools such
    as Photoshop and Illustrator, you have access to every font on Typekit as well.
    If you're not a subscriber to the Adobe Creative Cloud, you can subscribe to just
    Typekit as well and that's totally worth it. Another cool thing is that you can
    very easily sync fonts to Photoshop and Illustrator and use them for designing
    in those tools, which isn't as easily accomplished with Google Web Fonts. In this
    section, we'll add another font to our website from Typekit.
  prefs: []
  type: TYPE_NORMAL
- en: Selecting fonts from Typekit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s go to [https://typekit.com/](https://typekit.com/):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00306.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'I''ll sign in with my Adobe ID and password. If you don''t have an Adobe ID
    or you''re not a member of either Adobe''s Creative Cloud or of Typekit as a stand
    alone service, you''ll need to sign up in order to follow along. We can browse
    fonts that look good, but let''s actually search for the font we want, `expo sans`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00307.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'After selecting Expo Sans, we''re at a page that shows the different weights
    and styles. We have two basic options that we can use, SYNC ALL or ADD TO KIT.
    Syncing is for syncing this font to my computer for using in Photoshop, Illustrator,
    and other Adobe products. Adding it to a kit allows me to use it on the Web. So
    let''s do that and click on the ADD TO KIT button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00308.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, we''ll click on the CREATE A KIT button for Expo Sans Pro:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00309.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We''ll name it `Old Chompy`, the name of our site. Then, for the domain name,
    I''ll use `localhost:8888` and `oldchompy.com`; `localhost:8888` will be for development
    and `oldchompy.com` will be for later when the site goes into production, as that
    will be the domain name. Then we''ll click on Continue:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00310.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: This is a minor downside of using Typekit; you have to select a domain. Throughout
    this course, we've been serving our pages to the browser directly through the
    file system. We haven't had the need to set up a local development environment.
    Normally, you don't have to do this until you start working with AJAX calls, server-side
    code, or a **content management system** (**CMS**). In order to ensure that Typekit's
    fonts can't be used willy-nilly anywhere, Typekit delivers them to a specific
    domain name.
  prefs: []
  type: TYPE_NORMAL
- en: I'll use `localhost:8888`, which is where my local server is running on my computer
    through MAMP. Setting up a local development environment is way beyond the scope
    of this project, so don't feel like you have to follow along exactly with this
    particular step. I'll also enter the domain where this site will theoretically
    will live publicly, which we'll be `localhost:8888` and `oldchompy.com`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we get into this embed code, let''s go back over to the site and look
    at the first part of the URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00311.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Note that I''m accessing my site differently now through `local host:8888`.
    This is where my local server is running. This is different from how I''ve been
    accessing it before, which is directly through the file system, going to the file
    library web server documents and then my site folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00312.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: I'll do this for this one section of the entire course. Like I said before,
    worry if you aren't able to follow along with this part.
  prefs: []
  type: TYPE_NORMAL
- en: Adding fonts to the site
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s head back to the embed code on Typekit; this screen gives us the JavaScript
    embed code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00313.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'I''ll copy this, go over to Sublime Text, and then paste it into our HTML file''s
    `<head></head>` tags. I''ll do the same thing in my `shark-movies.html` page and
    save that:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Alright, back to Typekit. I''ll click on the Continue button to move to the
    next step:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00313.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'On this next screen, we can do several things, including selecting which weights
    and styles we''d like to include. By default, regular, italic, bold, and bold
    italic are selected for a combined weight of 134K. I can select other weights
    and styles it shows me how the kit size changes. For now, I''ll leave the default
    four weights and styles selected. Next, let''s click on the Using fonts in CSS
    link near the top:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00314.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'This gives us the name of the font that we want to use, which is `expo-sans-pro`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00315.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s copy `expo-sans-pro` and go back to the CSS file. Just for fun, paste
    it in our `h1` selector, right before `Maven Pro`, and save it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Before this is going to work though, we actually need to click on the Publish
    button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00316.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, it''ll tell us it may take a few minutes to be completely distributed
    across their network, but usually it happens a lot faster than that. If we go
    to our site and refresh it now, we can see a difference in the font:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00317.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'This is *Expo Sans Pro*, a really gorgeous font. I almost like it better than
    *Maven Pro*, and that''s one of the benefits of using Typekit or a paid font service:
    they have so many incredible high-quality fonts.'
  prefs: []
  type: TYPE_NORMAL
- en: So in conclusion, we've used a beautiful font from Typekit that I'm tempted
    to use instead of *Maven Pro*, but I think we'll leave Maven in there. Applying
    fonts from a service such as Typekit involves a few extra steps, but all in all,
    it's still easier than hosting the fonts ourselves. In the next section, we'll
    look at another kind of font we can use, called icon fonts.
  prefs: []
  type: TYPE_NORMAL
- en: Icon fonts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll look at how we can add an icon font to our website. Icon
    fonts work nicely when you have solid, colored icons that are used on your site.
    Instead of having every image as a separate request, all icons are part of one
    request for the entire font—this is faster. Since we're not using images, we can
    use CSS to provide the color and size of the image, meaning we can make the icons
    larger without losing fidelity. We'll showcase our icon fonts in the footer. So
    first, we'll have to build the footer for both pages, then we'll download a free
    icon font from the ZURB Foundation. Next, we'll use CSS to add the icon fonts
    to our website. Last, we'll add a `:hover` state to the icons to experiment with
    how we can use CSS to change their appearance.
  prefs: []
  type: TYPE_NORMAL
- en: Building the footer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So here''s what we''re shooting for in the footer of our final website:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00318.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: We want three columns of links, with each link accompanied by an icon. Traditionally,
    you would do this with images, but that can be a hit to performance if you have
    many images like we do. Traditionally, many folks have grouped all these icons
    into one image file called an `image sprite` and loaded it as a background image
    only showing the portion of the background image for the desired image using the
    `background-position` property. This would have made sure that you had one network
    request instead of 10 because you'd have been using one image file. This process
    was tricky because you had to use the `background-position` property to find the
    image you were looking for. The bigger issue was that, it came to changing a color
    or adding a new icon, you had to update the sprite and then the CSS. The biggest
    issue with an image sprite is when you have to go ahead and support HiDPI or *Retina*
    devices. Icon fonts aren't perfect, but they solve these tricky problems.
  prefs: []
  type: TYPE_NORMAL
- en: 'In both our HTML files, let''s copy this code for the footer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Here''s what it looks like without any added CSS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00319.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We need to clean this up. Right before the Media Queries begin, let''s drop
    some CSS to make the footer snap into place:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'This makes it look much better:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00320.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Downloading a free icon font from the ZURB Foundation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s go to the Zurb page for Foundation Icon Fonts 3 at [http://zurb.com/playground/foundation-icon-fonts-3](http://zurb.com/playground/foundation-icon-fonts-3):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00321.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'There''s quite a few different icon fonts that come standard with this icon
    set. Let''s click on the Download the Font button. In Chrome, it''ll be downloaded
    in the bottom-left corner; we can just place the folder on the desktop and double-click
    on it to unzip it. Then, we can open up the `Foundation-icons` folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00322.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Inside this folder is a CSS file, several font files, a file called `preview.html`,
    and then a folder full of `svgs`. Here''s what the CSS file looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Adding the icon font to our website
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In our CSS, we can see the `@font-face` rule loading in different font files,
    just like it did with the web fonts we looked at in the second section of this
    chapter. Below this is the class name for every single icon font, followed by
    the pseudo element before:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00323.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We''ve learned about pseudo classes, but not pseudo elements. The pseudo elements
    `:before` and `:after` are basically "make believe" elements that will appear
    before or after the element you are calling. It''s a neat way to add content using
    CSS. The content that it''s adding is the icon that relates to the class name.
    So if we go down to the bottom of the selector, we can see that it actually sets
    up the font family, all the different font properties, and a couple of other things:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'After that, in the next selector, you can see that each icon is getting content
    added to its pseudo element:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00324.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The content is code that corresponds to a letter in the font family. For instance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: That's the content that corresponds to the address book icon in the font family.
    The `fi-` prefix we're seeing in these lines of code stands for **foundation icon**.
    Don't worry if you don't totally understand all of this; the main thing is that
    we need to copy this CSS to our CSS file. It's 594 lines of code, so I don't want
    to include it with our existing style sheet because it will just overly bloat
    it more than I care to. So we have two choices. We could lint out and figure out
    only the icons we plan to use from the CSS file, or we could just link to the
    CSS file separately. Let's link to it separately—this way we have the entire icon
    font library at our disposal if we need it. Ideally later, we'd lint out the unused
    icon fonts before moving to production to as pairing that file down to just the
    10 icons we're using takes it from 20kb to 1kb!
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s save this file in our project''s `css` folder and call it `icons.css`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00325.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We''ll now go into our `index.html` file and add a link to `foundation-icons.css`
    in the head of this file, right underneath the link to `style.css`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Save this, copy it, and jump over to Shark Movies to paste it in there as well,
    and save it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let''s create a new folder called `icons`. We''ll drag the four different
    font files to this new folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00326.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that these four different font files are in the `icons` folder, back in
    the `icons.css` file, we just have to change the source to now point to the folder
    where we just put those font files. Let''s prepend `../icons/`, like so to the
    url:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: So now we have these URLs pointing to the proper folder.
  prefs: []
  type: TYPE_NORMAL
- en: 'We now need to add the icon classes to the elements in our HTML to load in
    the icon. But first we need to determine which classes to use. The `preview.html`
    file is a big help there, so let''s open that one up from the `foundation-icons`
    folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00327.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'When we open it, we can see the icons displayed at different sizes. Search
    for Facebook, and here we can see the Facebook icon we''re looking for and the
    class name that corresponds to it, `fi-social-facebook`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00328.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Copy everything but the period of that class name and paste that next to the
    link to Facebook in `index.html`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Save this and now, when we go to our site, we will be able to see the Facebook
    icon:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00329.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Styling icon fonts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have two problems: one, it''s too small, and two, it''s really close to
    the word. What we should do is add `margin-right` to every icon and make it larger.
    This means every `span` tag in the HTML is going to need a class. Let''s add `class="icon"`
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Now in the CSS, in our footer section, let''s add a new rule set that fixes
    these two issues:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'The other thing we could do is add a transition, because we''re going to have
    a hover effect, and this will help ease that state change. Let''s add a transition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Now refresh the site and you''ll see that the Facebook icon is a little bit
    bigger and it has some more space:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00330.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now what we need to do is add a corresponding class for Twitter, Google, Dribble,
    and the other six links in the HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Here''s how it looks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00331.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'OK! So now we have all our icon-specific classes in place, and we have an icon
    on each link on our footer. The cool part about icon fonts is that they will be
    crisp and clear on HiDPI devices. Also, we can change the color and other properties
    on a hover state, which we couldn''t do with a normal raster image. Let''s add
    a quick hover state to all of these. In our CSS, let''s add a new selector:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Apply this, and you should see that this icon transitions nicely to a totally
    different color:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00332.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Icon fonts are an excellent choice for your website. I recommend using icon
    fonts on noncritical elements of your website because, if for some reason the
    font doesn't load on your user's computer, there will be no fallback. The fallback
    usually defaults to a square, or worse, a totally unrelated character or letter.
    In our case, I think we're okay, because in a situation where our icon font doesn't
    load, we will still have descriptions of the icon right next to it. The nice part
    about icon fonts is that, just like any other font, they scale fluently to retina
    devices.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We started this chapter on web fonts by discussing the `@font-face` property,
    using it to add fonts to our site. We looked at how to use Google Fonts and Typekit.
    Finally, you learned how to use icon fonts and build a site's footer with the
    icon font from Zurb. In the next chapter, we'll talk about retina devices and
    get our pages ready for the world of HiDPI devices.
  prefs: []
  type: TYPE_NORMAL
