- en: Chapter 8. Server-Side Tuning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Preventing mobile transcoding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding mobile MIME types
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making cache manifest display properly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting far future expire headers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gzip compression
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Entity tag removal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Server-side performance directly impacts the page loading speed. Proper server
    configuration can hugely improve the client-side loading speed.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will go through some of the server-side configurations used
    to make mobile websites and applications perform better and faster. Some of the
    concepts are mobile-centric; some are applicable to the desktop web as well.
  prefs: []
  type: TYPE_NORMAL
- en: There are many server best practice guidelines, but some may not be comprehensive
    enough. In this chapter, we combine the best of the best practices and see how
    we can maximize the performance of a site.
  prefs: []
  type: TYPE_NORMAL
- en: Preventing mobile transcoding
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browsers: cross-browser'
  prefs: []
  type: TYPE_NORMAL
- en: Many mobile operators use proxies or adaptation engines to change the content
    of the web page you want to serve. On many mobile devices, built-in or installed
    browsers use mobile transcoders to reformat and compress page content. This is
    called **Mobile Transcoding**. If you don't want the content to be altered, an
    HTTP header must be added to prevent mobile transcoding.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An `.htaccess` file is used to configure an Apache server at the file directory
    level. The configuration can also be done by editing `httpd.conf`. Because many
    server hosting companies won't allow access to the root where the Apache is installed,
    in this example, we use `.htaccess`. This makes the server configuration at a
    directory level easier because unlike main `httpd.conf`, it doesn't require the
    server to be restarted. Create or open an `.htaccess` file.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Add the following code to the `.htaccess` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Upload the `.htaccess` file to the folder to which you want the rules to apply.
  prefs: []
  type: TYPE_NORMAL
- en: By doing this, we have prevented mobile transcoding from happening.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`FilesMatch` is used to filter only CGI and PHP scripts, because we don''t
    want to apply this rule to other file types.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Provided that Apache module `mod_headers` is enabled, we can add the header
    `Cache-Control "no-transform"` in a `FilesMatch` section.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The following resources might be helpful in knowing more about mobile transcoding.
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Internet Information Server (IIS)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you are using **Microsoft Internet Information Server (IIS)**, it can be
    configured using the software interface. Details about how to do this can be found
    at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://mobiforge.com/developing/story/setting-http-headers-advise-transcoding-proxies](http://mobiforge.com/developing/story/setting-http-headers-advise-transcoding-proxies)'
  prefs: []
  type: TYPE_NORMAL
- en: Responsible reformatting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following article provides some insights about the impact of content transcoding
    done by network operators:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://mobiforge.com/developing/blog/responsible-reformatting](http://mobiforge.com/developing/blog/responsible-reformatting)'
  prefs: []
  type: TYPE_NORMAL
- en: MBP — Mobile Boilerplate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The snippet used in this chapter is also included in Mobile Boilerplate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/h5bp/mobile-boilerplate/blob/master/.htaccess](http://github.com/h5bp/mobile-boilerplate/blob/master/.htaccess)'
  prefs: []
  type: TYPE_NORMAL
- en: Adding mobile MIME types
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browsers: Blackberry, Symbian'
  prefs: []
  type: TYPE_NORMAL
- en: There are many mobile-exclusive content types supported by BlackBerry and Nokia
    browsers. In this topic, we will look at some of the MIME types used by these
    mobile browsers. As the server might not recognize them by default, it is important
    to add them correctly in the server configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An `.htaccess` file is used to configure the Apache server at the file directory
    level. It makes the server configuration at directory level easy. Create or open
    an `.htaccess` file.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Add the following code to the `.htaccess` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Upload the `.htaccess` file to the folder at which you want the rules to apply.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We make the mobile MIME types recognizable by using `AddType:`
  prefs: []
  type: TYPE_NORMAL
- en: '| Code | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `AddType application/x-bb-appworld bbaw` | A text file that contains the
    application ID for an application found in the BlackBerry App World™ storefront.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `AddType text/vnd.rim.location.xloc xloc` | A BlackBerry Maps location document.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `AddType text/x-vcard vcf` | A vCard file, a standard file format for electronic
    business cards. |'
  prefs: []
  type: TYPE_TB
- en: '| `AddType application/octet-stream sisx` | Nokia types |'
  prefs: []
  type: TYPE_TB
- en: '| `AddType application/vnd.symbian.install sis` | Nokia types |'
  prefs: []
  type: TYPE_TB
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For more mobile file types supported by BlackBerry, go to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://docs.blackberry.com/en/developers/deliverables/18169/index.jsp?name=Feature+and+Technical+Overview+-+BlackBerry+Browser6.0&language=English&userType=21&category=BlackBerry+Browser&subCategory=](http://docs.blackberry.com/en/developers/deliverables/18169/index.jsp?name=Feature+and+Technical+Overview+-+BlackBerry+Browser6.0&language=English&userType=21&category=BlackBerry+Browser&subCategory=)'
  prefs: []
  type: TYPE_NORMAL
- en: Making cache manifest display properly
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browsers: cross-browser'
  prefs: []
  type: TYPE_NORMAL
- en: As explained in [Chapter 6](ch06.html "Chapter 6. Mobile Rich Media"), *Mobile
    Rich Media*, cache manifest is used for offline web applications. The extensions
    for this file may not be recognized by the server. Let's see how we can add the
    proper MIME type.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create or open an `.htaccess` file.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Add the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Upload the `.htaccess` file to the folder you want the rules to apply.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Cache manifest may have either `.appcache` or `.manifest` as its extension.
    By adding both types as `text/cache-manifest`, we are making sure they can both
    be rendered correctly regardless of which one is used.
  prefs: []
  type: TYPE_NORMAL
- en: MBP Mobile Boilerplate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `.htaccess` rule is included in the Mobile Boilerplate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/h5bp/mobile-boilerplate/blob/master/.htaccess#L75](http://github.com/h5bp/mobile-boilerplate/blob/master/.htaccess#L75)'
  prefs: []
  type: TYPE_NORMAL
- en: Setting far future expire headers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browsers: cross-browser'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up far future expire headers for files is used to improve site performance
    by reducing unnecessary HTTP requests. For a rich media site with many resources
    to load, this can improve the overall performance. There are different file types
    and, depending on the use of the file, we choose different periods of time for
    them to expire.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create or open an `.htaccess` file.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Add the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Upload the `.htaccess` file to the folder to which you want the rules to apply.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here is the breakdown of the code where we will see how it works:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Whitelist Expires rules:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '`cache.appcache` needs re-requests in FF 3.6:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Your document HTML shouldn''t be cached:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Data shouldn''t be cached as it always needs to be pulled:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'RSS feed updates less frequently than normal API data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Favicon cannot be renamed, so the best approach is to set it to a week from
    now:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'For heavy media resources such as images, video, and audio, we can set the
    date further in the future:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'HTC files, useful if you use HTML5 polyfill - CSS3PIE:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'It''s safe to cache Webfonts for a month:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'For CSS and JavaScript, we can set the expiration date to be a year ahead:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: There's more...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'These are pretty far-future Expires headers. They assume you control versioning
    with cache busting query parameters such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Additionally, consider the possibility that outdated proxies may miscache:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/](http://www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/)'
  prefs: []
  type: TYPE_NORMAL
- en: Add an Expires or a Cache-Control header
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In the Yahoo! Developer Network, there is a pretty good explanation about Expires
    rules:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://developer.yahoo.com/performance/rules.html#expires](http://developer.yahoo.com/performance/rules.html#expires)'
  prefs: []
  type: TYPE_NORMAL
- en: Rules in MBP Mobile Boilerplate
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: These rules are included in Mobile Boilerplate's `.htacess file:`
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/h5bp/mobile-boilerplate/blob/master/.htaccess#L142](http://github.com/h5bp/mobile-boilerplate/blob/master/.htaccess#L142)'
  prefs: []
  type: TYPE_NORMAL
- en: Compressing files using Gzip
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browsers: cross-browser'
  prefs: []
  type: TYPE_NORMAL
- en: Frontend developers play an important role in making decisions about how to
    reduce the time it takes to transfer HTTP requests and responses across the network.
    Gzip compression can be used to reduce response time by reducing the size of the
    HTTP response.
  prefs: []
  type: TYPE_NORMAL
- en: Gzip drastically reduces the response size, usually by 70 percent. Gzip is widely
    supported by modern browsers.
  prefs: []
  type: TYPE_NORMAL
- en: Most servers only compress certain file types by default, so it's best to define
    rules that support a wide range of text files, including HTML, XML, and JSON.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create or open an `.htaccess` file.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Add the following code in to `.htaccess:`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Upload the `.htaccess` file to the folder to which you want the rules to apply.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following code forces deflation for mangled headers, in order to detect
    the mangled patterns, `mod_setenvif` is used to perform a regular expression match
    and set an environment variable indicating the mangled Accept-Encoding header
    is present:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Forcing the request header to support compression is straightforward:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Compressing HTML, TXT, CSS, JavaScript, JSON, XML, HTC:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'For legacy versions of Apache prior to version 2.1:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One thing to note is that images and PDF files need not be gzipped because they
    are already compressed by default. To gzip them will waste CPU usage and even
    increase the file sizes.
  prefs: []
  type: TYPE_NORMAL
- en: Pushing Beyond Gzipping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'An article about gzipping on Yahoo! Network by *Marcel Duran* talks about the
    recent research and server-side approach:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/](http://developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/)'
  prefs: []
  type: TYPE_NORMAL
- en: Removing ETags
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browsers: cross-browser'
  prefs: []
  type: TYPE_NORMAL
- en: 'ETags stands for **Entity tags**. An entity is a component like a CSS or JavaScript
    file, an image, and so on. What an entity tag does is to identify a specific version
    of a component. You can find more details at *Yahoo! Developer Network, High Performance
    Web Sites: Rule 13 Configure ETags:* ([http://developer.yahoo.com/blogs/ydn/posts/2007/07/high_performanc_11/](http://developer.yahoo.com/blogs/ydn/posts/2007/07/high_performanc_11/)).'
  prefs: []
  type: TYPE_NORMAL
- en: If you have multiple servers hosting your website, for example, on a content
    delivery network, ETag's validation mechanism may cause extra re-fetching. There
    is little advantage in the validation model, so the best practice is to just remove
    the ETag.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create or open an `.htaccess` file.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Add the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Upload the `.htaccess` file to the folder to which you want the rules to apply.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, we unset ETag for those files that are currently configured:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Second, we use `FileTag None` to make sure files have ETags removed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The following section provides some more information about ETags for your reference.
  prefs: []
  type: TYPE_NORMAL
- en: Synchronizing ETag values on an IIS server
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you are running an IIS server, to resolve the problem, you must synchronize
    the ETag values on all the Web servers that are running IIS 5.0 in the Web farm.
    To do this, use the `Mdutil.exe` tool to retrieve the ETag value from one of the
    Web servers. Then, set the same ETag value on all the other Web servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'More detailed instructions can be found in the following Microsoft Support
    article:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://support.microsoft.com/?id=922733](http://support.microsoft.com/?id=922733)'
  prefs: []
  type: TYPE_NORMAL
- en: High performance websites
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Steve Souders* has explained configuring rules in his *High Performance Web
    Sites* series:'
  prefs: []
  type: TYPE_NORMAL
- en: '*High Performance Web Sites: Rule 13* — *Configure ETags:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://developer.yahoo.com/blogs/ydn/posts/2007/07/high_performanc_11/](http://developer.yahoo.com/blogs/ydn/posts/2007/07/high_performanc_11/)'
  prefs: []
  type: TYPE_NORMAL
- en: David Walsh blog
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*David Walsh''s* blog website contains a post by Eric Wendelin — *Improve Your
    YSlow Grade Using .htaccess* and this also mentions the issues addressed in this
    recipe:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://davidwalsh.name/yslow-htaccess](http://davidwalsh.name/yslow-htaccess)'
  prefs: []
  type: TYPE_NORMAL
- en: MBP — Mobile Boilerplate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Entity tag removal is also included in the Mobile Boilerplate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/h5bp/mobile-boilerplate/blob/master/.htaccess#L211-L218](http://github.com/h5bp/mobile-boilerplate/blob/master/.htaccess#L211-L218)'
  prefs: []
  type: TYPE_NORMAL
