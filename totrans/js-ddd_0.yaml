- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to *JavaScript Domain-Driven Design*. For years, JavaScript has been
    stuck in the realm of making a website a little more interactive, but nobody would
    have thought about implementing whole applications in JavaScript. This has changed
    dramatically over the past few years, and JavaScript has evolved into this omnipresent
    powerhouse of a language that is present in almost every space of development.
  prefs: []
  type: TYPE_NORMAL
- en: This phenomenal growth has introduced many problems during development, which
    were previously unknown in the JavaScript world. Projects grow to very large codebases,
    many developers work simultaneously on these large codebases, and in the end,
    JavaScript is more often than not a vital part of the overall application. The
    good thing is that most of those problems have been solved before, and we, as
    JavaScript developers, can draw from the vast experiences gained over the years
    in other spaces and adapt them to work for us in JavaScript, leveraging JavaScript's
    unique flexibility along the way.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. A Typical JavaScript Project"), *A Typical
    JavaScript Project*, introduces a typical business application and how it is developed.
    It shows how domain-driven design can help steer clear of common issues during
    the development to create a more problem-tailored application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Finding the Core Problem"), *Finding the
    Core Problem*, shows how we can effectively explore an application''s problem
    domain and identify the most important aspects to work on.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Setting Up a Project for Domain-driven Design"),
    *Setting up a Project for Domain-driven Design*, focuses on setting up a structure
    for the project that is ready to grow. It not only shows how we can lay out files
    and folders, but also creates the right testing and build environments.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Modeling the Actors"), *Modelling the Actors*,
    shows how a project grows using object-oriented techniques together with domain-driven
    design to really isolate the domain. We also tackle one of the hardest problems
    of computer science, naming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Classification and Implementation"), *Classification
    and Implementation*, is all about the language we use in domain-driven design
    to make the project understandable and readable. We look at the relationship between
    domains and sub-domains, and then drill further down into the core of domain objects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Context Map – The Big Picture"), *Context
    Map – The Big Picture*, is about not only growing the application from a technical
    perspective, but also from an organizational perspective. We talk about organizing
    the different parts that form the application as a whole, either as separate parts
    or as interlinked pieces.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. It''s Not All Domain-driven Design"), *It''s
    Not All Domain-driven Design*, talks about fitting domain-driven design into the
    space of development techniques, talking about what problems fit where. We also
    talk about influences such as object-orientation, domain-specific languages, and
    more.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Seeing It All Come Together"), *Seeing It
    All Come Together*, is about how our project fits into a space of projects in
    JavaScript, referring back to the beginning. We also look at alternative choices
    for frameworks and development styles.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The book uses JavaScript as the language of choice throughout. In order to provide
    a consistent runtime environment, JavaScript Node.js is used throughout the book
    as the runtime. Other tools from the Node.js ecosystem are used as well, mainly
    npm as the package manager. To work with the code in the book, you need a version
    of Node.js, which is available for Windows, Macintosh OS, and Linux from the Node.js
    website [http://nodejs.org/](http://nodejs.org/). It comes packaged with npm.
    For editing code, I recommend using your favorite text editor or IDE. If you don't
    have one, maybe give Sublime Text or Vim a try, these are also available for Windows,
    Macintosh OS, and Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book assumes a certain familiarity with the JavaScript language. It is
    targeted at JavaScript developers, who are faced with the problems of growing
    applications, and the problems that arise from the growth. It provides a practical
    approach to domain-driven design and focuses on the parts that are the most useful
    in day-to-day development.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "At
    the time of the writing, the currently active version was `node.js 0.10.33`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking on the **Next** button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Important links or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
