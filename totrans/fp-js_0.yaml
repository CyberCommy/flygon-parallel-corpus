- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Functional programming is a style that emphasizes and enables the writing of
    smarter code, which minimizes complexity and increases modularity. It's a way
    of writing cleaner code through clever ways of mutating, combining, and using
    functions. JavaScript provides an excellent medium for this approach. JavaScript,
    the Internet's scripting language, is actually a functional language at heart.
    By learning how to expose its true identity as a functional language, we can implement
    web applications that are powerful, easier to maintain, and more reliable. By
    doing this, JavaScript's odd quirks and pitfalls will suddenly become clear and
    the language as a whole will make infinitely more sense. Learning how to use functional
    programming will make you a better programmer for life.
  prefs: []
  type: TYPE_NORMAL
- en: This book is a guide for both new and experienced JavaScript developers who
    are interested in learning functional programming. With a focus on the progression
    of functional programming techniques, styles, and detailed information about JavaScript
    libraries, this book will help you to write smarter code and become a better programmer.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0014_split_000.html#page "Chapter 1. The Powers of JavaScript''s
    Functional Side – a Demonstration"), *The Powers of JavaScript''s Functional Side
    – a Demonstration*, sets the pace of the book by creating a small web application
    with the help of both traditional methods and functional programming. It then
    compares these two methods to underline the importance of functional programming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0019_split_000.html#page "Chapter 2. Fundamentals of Functional
    Programming"), *Fundamentals of Functional Programming*, introduces you to the
    core concepts of functional programming as well as built-in JavaScript functions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0023_split_000.html#page "Chapter 3. Setting Up the Functional
    Programming Environment"), *Setting Up the Functional Programming Environment*,
    explores different JavaScript libraries and how they can be optimized for functional
    programming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0027_split_000.html#page "Chapter 4. Implementing Functional
    Programming Techniques in JavaScript"), *Implementing Functional Programming Techniques
    in JavaScript*, explains the functional paradigm in JavaScript. It covers several
    styles of functional programming and demonstrates how they can be employed in
    different scenarios.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0032_split_000.html#page "Chapter 5. Category Theory"), *Category
    Theory*, explains the concept of Category Theory in detail and then implements
    it in JavaScript.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0037_split_000.html#page "Chapter 6. Advanced Topics and Pitfalls
    in JavaScript"), *Advanced Topics and Pitfalls in JavaScript*, highlights various
    drawbacks you may face while programming in JavaScript, and the various ways to
    successfully deal with them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0041_split_000.html#page "Chapter 7. Functional and Object-oriented
    Programming in JavaScript"), *Functional and Object-oriented Programming in JavaScript*,
    relates both functional and object-oriented programming to JavaScript, and shows
    you how the two paradigms can complement each other and coexist side by side.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix A](part0045.html#page "Appendix A. Common Functions for Functional
    Programming in JavaScript"), *Common Functions for Functional Programming in JavaScript*,
    contains common functions used to perform functional programming in JavaScript.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix B](part0046.html#page "Appendix B. Glossary of Terms"), *Glossary
    of Terms*, includes a glossary of terms used throughout the book.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Only a browser is needed to get you up and running.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a JavaScript developer interested in learning functional programming,
    looking for a quantum leap toward mastering the JavaScript language, or just want
    to become a better programmer in general, then this book is ideal for you. This
    guide is aimed at programmers involved in developing reactive frontend applications,
    server-side applications that wrangle with reliability and concurrency, and everything
    else in between.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the **Next** button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata** **Submission** **Form** link,
    and entering the details of your errata. Once your errata are verified, your submission
    will be accepted and the errata will be uploaded to our website or added to any
    list of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
