- en: Chapter 5. Adding a Webcam to Monitor Your Security System
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we talked about topics such as sensors connected to
    the Arduino and monitoring from the Raspberry Pi Zero, using a network across
    devices, the importance of our home security projects, and domotics to monitor
    what's happening in the real world. For that, we have a proposal for this chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will configure our Raspberry Pi Zero to monitor a web camera
    and install a TTL serial camera to interact with Arduino boards; we will achieve
    that with the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Interaction between Arduino and Raspberry Pi
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling an output connected to Arduino from Raspberry Pi Zero
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting a TTL serial camera to Arduino and saving pictures to a Micro SD
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detecting motion with the serial TTL camera
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling a snapshot from Raspberry Pi
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling your camera from a web page
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring your USB camera for security in a network
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interaction between Arduino and Raspberry Pi
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will look at how the Raspberry Pi can work as a terminal
    computer to program, not only having the device as a server and deploying pages
    or applications but also have an IDE for programming the Arduino board. To do
    this we need to have the Raspberry Pi connected to the Arduino, so that they can
    communicate with each other.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some interfaces that the Raspberry Pi has, all of these which included
    in the device: I2C protocol, SPI communication, USB ports, and serial **UART**
    ports. In this case, we will use the USB port to communicate between Arduino and
    the Raspberry Pi.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to configure Arduino and Raspberry Pi to interact with
    each other:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Install Arduino IDE for the Raspberry Pi
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open your terminal with PuTTY and check the IP address of your Raspberry Pi
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Execute remote access, and type the IP address
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open Arduino IDE in the graphical interface
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Installing Arduino IDE in Raspbian
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Type the following command to install Arduino IDE on the Raspberry Pi:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Remote access to Raspberry Pi
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this section, we will look at the screen to access the Remote desk to execute
    the Arduino IDE installed in the Raspian operating system: once the screen pops
    up, type your username and password:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '![Remote access to Raspberry Pi](graphics/B05170_05_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: Executing Arduino in a graphical interface
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have the main screen, we go to the **Programming** menu, and if
    we see the icon to enter the Arduino IDE, everything is installed. Click on the
    icon of the **Arduino IDE**:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '![Executing Arduino in a graphical interface](graphics/B05170_05_02.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
- en: Arduino interface in Raspian
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here we have the interface of the Arduino IDE, similar to the ones we have
    in a computer. From the Arduino IDE running in the Raspberry Pi, we can interact
    between both boards:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '![Arduino interface in Raspian](graphics/B05170_05_03.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
- en: Preparing the interface
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We need to verify that we selected the proper board; in this case, we''re using
    an Arduino UNO. Select the board in the following window:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '![Preparing the interface](graphics/B05170_05_04.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
- en: Selecting the serial port
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After we have selected the board that we will use, we need to verify and select
    the port that will communicate with our Arduino connected to the USB port of the
    Raspberry Pi; we need to select the name port: `/dev/ttyACM0`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '![Selecting the serial port](graphics/B05170_05_05.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
- en: Downloading a sketch from the graphical interface
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The main thing that we need is to communicate with Arduino from our Raspberry
    Pi Zero and download the sketch to the Arduino board without using a computer,
    so that we can use our Raspberry Pi for other purposes.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows you the interface with the sketch:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '![Downloading a sketch from the graphical interface](graphics/B05170_05_06.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
- en: 'We should download the sketch in the interface. The following image shows the
    connected Arduino-Raspberry Pi: that''s cool!'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![Downloading a sketch from the graphical interface](graphics/image_05_007.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
- en: Controlling an output connected to Arduino from Raspberry Pi Zero
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now we will look at an example of controlling an output from the Raspberry Pi,
    using Python.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'First we need to download the sketch to the Arduino board. To test our communication,
    we will show an example of testing the link between the Arduino and the Raspberry
    Pi:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 'We declare the following output:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We start with the setup in the program:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then we mention the output pin:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Start the serial communication at 9600:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Declare the loop of the program:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This is where we check weather serial port is available or not:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If something found it reads something and saves the content in `c` variable:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If it reads a letter `H` which is marked for high:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The output will turn on the LED connected to pin **13**
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In case it reads a letter `L` which is marked for low:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output will turn off the LED connected to pin **13**:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Controlling the Arduino board from Python
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First we need to install the serial library, as this helps to communicate with
    Arduino via the USB port communication. Type the following command to install
    the library:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The following code controls Arduino from Raspberry Pi; you can now either copy
    the code inside a file called `ControlArduinoFromRasp.py`, or just get the complete
    code from the folder for this project.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: 'The following snippet imports the serial library in Python:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We define the serial communication:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Print a message to see that the communication is done:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'While this executes, the user can enter a command:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If it''s an `H` it prints the message; in case it is false it displays LED
    off:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Close the connection:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Hardware connections
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This is the LED connected to Arduino UNO, and it can be controlled from the
    Raspberry Pi using Python:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '![Hardware connections](graphics/B05170_05_08.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
- en: Connecting a TTL serial camera to Arduino and saving pictures to a micro SD
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here we have the schema, with the connections of the micro SD card with the
    TTL serial camera; I use a camera model from Adafruit. The following link has
    all the information you need, [https://www.adafruit.com/product/397](https://www.adafruit.com/product/397).
    In the following image, we have the connections of the project:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '![Connecting a TTL serial camera to Arduino and saving pictures to a micro
    SD](graphics/image_05_009.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
- en: Now we will explain how to take a picture and save it to a micro SD; the main
    idea is to connect a camera to the Arduino, so we can implement this in a system
    monitoring for home security.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: The following is the code for testing the TTL camera, taking a picture, and
    saving it on a micro SD. Note that the code is too long, but I will be explaining
    the most important and necessary code to do the previous actions. All the code
    for these examples is included with the book for more complete information.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'Here we have the import files from the TTL camera, and the files to communicate
    with the micro SD:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We define the library software to communicate via serial:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'define the `chipSelect` to pin 10:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The code will pin for connections:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then we will need to start the camera:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Here we define the image size:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This will display the image size:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The code  will take a picture:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Create the file to save the image taken:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Code to save the file:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Prepare the micro SD to save the files:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Open the file taken for prewview:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'To show the size of the image taken:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Read the data from the file:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Write the file into the memory:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Display the file on the screen:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Display the number of bytes read:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Close the file which is open:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Detecting motion with the serial TTL camera
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Turn on the motion detection of TTL camera:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Verify if the motion is activated:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'What happens when motion is detected by the camera:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'If motion is detected, take the picture or display the message:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Controlling a snapshot from Raspberry Pi
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have seen how to communicate between Arduino and Raspberry Pi,
    to control the board, we can apply this to our security system project. We need
    to do this for communicating with and controlling our camera from the Raspberry
    Pi:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: Connect the Arduino and Raspberry Pi to each other
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a serial connection at 9,600 mbps
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Call the function that will take the picture and save it in the micro SD
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'On the Raspberry Pi we need to do the following:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Create the script for calling the function in the Arduino that will take the
    picture
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Open and execute the script using your PuTTY terminal
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following section is the sketch that should be download in the Arduino
    board:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: 'First we start the serial communication:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'This is the function that will tell the camera to take the picture:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Code for the function to take a picture
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here we discuss the code to define the function that will prompt the camera
    to take the picture.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: 'The function has the code that will take the picture:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Take a picture:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Here we create the file to save:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Here we save the file:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Prepare the micro SD to save the files:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Open the file for preview:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Get the size of the file before saving:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Read the data from the file that was saved:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Write the file into the memory:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Display the file after saving:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Display the number of bytes read:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Close the file which are open:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Controlling your camera from a web page
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will look ar how to control our camera from a web page
    in PHP and run a web server in the Raspberry Pi. We will need the following to
    run PHP files and web server:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: Running the Apache server on Raspberry Pi
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing PHP software
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For the web page, for controlling we will have to create our PHP files in the
    following path: `/var/www/html`, for instance we need to edit the `index.php`
    file, and copy the following lines.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: 'The following HTML file includes PHP:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Here we define the function to perform action for taking the picture:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Here we define the action to taken if motion detected:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Calling the Python scripts from PHP
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this section, we need to call the Python script from the web page and execute
    the file that has the script:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Code for Python scripts
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'On the server side, that is the Raspberry Pi, we have the Python scripts that
    will be called from the web page:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'If everything is configured perfectly, the following page will appear: in your
    favorite browser, type IP address of your `PI/index.php`:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '![Code for Python scripts](graphics/B05170_05_10.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
- en: Monitoring your USB camera for security in a network
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will create a project that allows us to monitor a USB camera
    that is connected to an Arduino YUN, which has a USB port and includes communication
    with Ethernet and Wi-Fi. So, it has many advantages. We will work on making a
    network between the Raspberry Pi and the Arduino YUN, so the main idea is to monitor
    the camera from a web page, from the Raspberry Pi. The page will be stored in
    the Raspberry Pi.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Arduino YUN
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will use a Logitech camera that supports the UVC protocol:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring Arduino YUN](graphics/B05170_05_11-1.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
- en: 'Now we will explain the steps to install our camera in the Arduino YUN:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: Connect the board to your Wi-Fi router
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Verify the IP address of the Arduino YUN
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After we type the IP address, the following screen appears:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring Arduino YUN](graphics/B05170_05_12-1.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
- en: 'We will now issue a series of commands at the Command Prompt to complete the
    setup:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: 'Update the package:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Install the UVC protocol:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Install the camera driver:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Download the `Mjpgstreamer`:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Install the `Mjpgstreamer`:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'To start the camera manually, use the following code:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'To start the camera automatically, we will use the following code:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: 'Install the `nano` program:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Enter the following file:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Configure the camera with the following parameters:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Use the following command to start the service:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Monitoring from the MJPG-STREAMER server
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once you have accessed the server of the Arduino YUN, type the IP Address of
    your Arduino YUN, `http://Arduino.local:8080`, in your web browser. The results
    of the configuration are shown in the following screenshot:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '![Monitoring from the MJPG-STREAMER server](graphics/B05170_05_13.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
- en: Monitoring the USB camera from the Raspberry Pi
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With the camera connected to the Arduino YUN, now we can monitor in real time
    from a web page published in the Raspberry Pi.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到Arduino YUN的摄像头，现在我们可以实时监控树莓派上发布的网页。
- en: 'Provide a title for the web page:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 为网页提供一个标题：
- en: '[PRE70]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'We call the camera image by putting the IP address of the Arduino YUN:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过输入Arduino YUN的IP地址来调用摄像头图像：
- en: '[PRE71]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Access the web page from a browser by typing the IP address of the Raspberry
    Pi ( `http://192.168.1.106/index.html`):'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在浏览器中输入树莓派的IP地址（`http://192.168.1.106/index.html`）访问网页：
- en: '![Monitoring the USB camera from the Raspberry Pi](graphics/B05170_05_14.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![从树莓派监控USB摄像头](graphics/B05170_05_14.jpg)'
- en: In the next section, we will look how to configure the connected devices and
    the hardware that will be interacting in a network.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看如何配置连接的设备和将在网络中进行交互的硬件。
- en: 'The following image  represents the network that we created with devices that
    can be monitored; for example, we monitor each room of a house, connect all the
    devices with a Wi-Fi network, and monitor them from the Raspberry Pi:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片代表了我们用可以监控的设备创建的网络；例如，我们监控房子的每个房间，将所有设备连接到一个Wi-Fi网络，并从树莓派上监控它们：
- en: '![Monitoring the USB camera from the Raspberry Pi](graphics/image_05_015.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![从树莓派监控USB摄像头](graphics/image_05_015.jpg)'
- en: Summary
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have learned how to configure a web cam connected to the
    network and monitor your security system for the Internet of Things. We used your
    Arduino Board to connect the security camera, and Raspberry Pi Zero connected
    to the network to monitor the system. In the next chapter, we will integrate our
    system, the Raspberry Pi Zero, with Arduino, to build a complete system-connected
    device and monitor.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经学会了如何配置连接到网络的网络摄像头，并监控物联网安全系统。我们使用Arduino板连接安全摄像头，并将连接到网络的树莓派Zero用于监控系统。在下一章中，我们将集成我们的系统，将树莓派Zero与Arduino连接，构建一个完整的系统连接设备并进行监控。
