- en: '*Chapter 2*: Installing and Configuring the Windows Subsystem for Linux'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **Windows Subsystem for Linux** (**WSL**) isn't installed by default, so
    the first step toward getting up and running with it will be to install it along
    with a Linux **distribution** (**distro**) of your choice. By the end of this
    chapter, you will know how to install WSL and how to install Linux distros to
    use with it. You will also see how to inspect and control Linux distros as well
    as how to configure additional properties in WSL.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to cover the following main topics in particular:'
  prefs: []
  type: TYPE_NORMAL
- en: Enabling WSL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Linux distros in WSL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring and controlling WSL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling WSL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To set up your machine ready for running WSL, you need to ensure that you are
    on a version of Windows that supports it. Then you can enable the Windows features
    required to run WSL and install the Linux kernel ready for the installation of
    Linux distros. Finally, you will be able to install one or more Linux distros
    to run.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get started by ensuring you are using an up-to-date version of Windows.
  prefs: []
  type: TYPE_NORMAL
- en: Checking for the required Windows version
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To install WSL 2, you need to be running on a recent enough build of Windows
    10\. To check the version of Windows 10 you are running (and whether you need
    to update), press *Windows Key* + *R* and then type `winver`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.1 – The Windows version dialog showing the 2004 update'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.1_B16412.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.1 – The Windows version dialog showing the 2004 update
  prefs: []
  type: TYPE_NORMAL
- en: In this screenshot, you can see **Version 2004** indicating that the system
    is running the 2004 release. After that, you can see the **OS Build** is **19041.208**.
  prefs: []
  type: TYPE_NORMAL
- en: To run WSL 2, you need to be on version 1903 or higher with OS build 18362 or
    higher. (Note that ARM64 systems require version 2004 or higher with OS build
    19041 or higher.)More details can be found at [https://docs.microsoft.com/en-us/windows/wsl/install-win10#requirements](https://docs.microsoft.com/en-us/windows/wsl/install-win10#requirements).
  prefs: []
  type: TYPE_NORMAL
- en: If you are on a lower version number then go to **Windows Update** on your computer
    and apply any pending updates.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The naming for Windows 10 updates can be a little confusing and the meaning
    behind version numbers such as 1903 and 1909 (or worse, 2004, which looks like
    a year) isn't immediately apparent. The naming is a combination of the year and
    month that an update is expected to be released in **yymm** form where **yy**
    is the last two digits of the year and **mm** is the two-digit form of the month.
    As an example, the 1909 update was targeted for release in 2019 in month 09, in
    other words September 2019\. In the same way, the 2004 release was targeted for
    release in April 2020.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know you are on the required version of Windows, let's get started
    with enabling WSL.
  prefs: []
  type: TYPE_NORMAL
- en: Checking for the easy install option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At the **BUILD** conference in May 2020, Microsoft announced a new, simplified
    way of installing WSL that they are working on, but at the time of writing, this
    new approach isn't yet available. However, since it is a quick and easy approach,
    you may want to give it a try before using the longer set of install steps in
    case it is available by the time you are reading this!
  prefs: []
  type: TYPE_NORMAL
- en: 'To give it a try, open an elevated prompt of your choice (for example, **Command
    Prompt**) and enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If this command runs, then this means you have the easy install option and it
    will install WSL for you. In this case, you can skip to the *Configuring and controlling
    WSL section (or the Installing Linux distros in WSL* section if you want to install
    additional Linux distros).
  prefs: []
  type: TYPE_NORMAL
- en: If the command isn't found, then continue with the next section to install WSL
    using the original method.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling the required Windows features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As discussed in the introductory chapter, version 2 of WSL uses a new lightweight
    utility virtual machine capability. To enable the lightweight virtual machine
    and WSL, you need to enable two Windows features: **Virtual Machine Platform**
    and **Windows Subsystem for Linux**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable these features via the `Windows Features`, then click on **Turn Windows
    features on or off** as shown in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.2 – Launching the Windows features options'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.2_B16412.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.2 – Launching the Windows features options
  prefs: []
  type: TYPE_NORMAL
- en: 'When the Windows Features dialog appears, check the boxes for **Virtual Machine
    Platform** and **Windows Subsystem for Linux** as shown in the next figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.3 – Required Windows features for WSL version 2'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.3_B16412.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.3 – Required Windows features for WSL version 2
  prefs: []
  type: TYPE_NORMAL
- en: After clicking **OK**, Windows will download and install the components and
    likely prompt you to reboot your machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you prefer to enable the features via the command line then launch an elevated
    prompt of your choice (for example, Command Prompt) and enter the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Once these commands have completed, reboot your machine and you will be ready
    to install the Linux kernel.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Linux Kernel
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The final step before installing your favorite Linux distros is to install the
    kernel for it to run on. At the time of writing, this is a manual step; in the
    future this is planned to be an automatic process with updates delivered via Windows
    Update!
  prefs: []
  type: TYPE_NORMAL
- en: For now, go to [http://aka.ms/wsl2kernel](http://aka.ms/wsl2kernel) to get the
    link to download and install the kernel. Once this is done you can choose the
    **Linux Distribution** to install.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Linux distros in WSL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The standard way to install Linux distros for WSL is via the Microsoft Store.
    The full list of Linux distros currently available can be found in the official
    documentation ([https://docs.microsoft.com/windows/wsl/install-win10#install-your-linux-distribution-of-choice](https://docs.microsoft.com/windows/wsl/install-win10#install-your-linux-distribution-of-choice)).
    At the time of writing, this includes various versions of Ubuntu, OpenSUSE Leap,
    SUSE Linux Enterprise Server, Kali, Debian, Fedora Remix, Pengwin, and Alpine.
    Since we can't include examples for every version of Linux throughout the book,
    we will focus on using *Ubuntu* for our examples.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: The steps from the previous chapter have installed all of the parts needed for
    running a version 2 distro in WSL, but version 1 is still the default!
  prefs: []
  type: TYPE_NORMAL
- en: 'These commands will be covered in the next section of the chapter, but if you
    want to make version 2 the default for any Linux distros you install then run
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '`wsl --set-default-version 2`'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you launch the Microsoft Store from Windows, you can search for the Linux
    distro of your choice. As an example, the following figure shows the results of
    searching for `Ubuntu` in the Microsoft Store:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.4 – Searching for a Linux distro in the Microsoft Store'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.4_B16412.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.4 – Searching for a Linux distro in the Microsoft Store
  prefs: []
  type: TYPE_NORMAL
- en: 'When you find the distro you want, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on it and click **Install**. The Store app will then download and install
    the distro for you.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the installation completes, you can click the **Launch** button to run.
    This will begin the setup process for your selected distro, as shown in the figure
    (for Ubuntu).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: During the setup process you will be asked for a UNIX username (which doesn't
    have to match your Windows username) and a UNIX password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At this point, the distro you installed will be running version 1 of WSL (unless
    you ran the `wsl --set-default-version 2` command previously). Don't worry – the
    next section will cover the `wsl` command including converting installed Linux
    distros between versions 1 and 2 of WSL!
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have a Linux distro installed, let's take a look at how we can
    configure and control it.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring and controlling WSL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The previous section briefly mentioned the `wsl` command, which is the most
    common way to interact with and control WSL. In this section, you will learn how
    you can interactively control WSL using the `wsl` command, as well as how to change
    the behavior of WSL by modifying settings in the `wsl.conf` configuration file.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Earlier builds of WSL provided a `wslconfig.exe` utility. If you see any references
    to this in documentation or articles, don't worry – all the functionality of `wslconfig.exe`
    (and more) is available in the `wsl` command that you will see in the following
    sections.
  prefs: []
  type: TYPE_NORMAL
- en: The commands and configuration in the following section will give you the tools
    you need to control running distros in WSL and configure the behavior of the distros
    (and WSL as a whole) to suit your requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing the wsl command
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `wsl` command gives you a way to control and interact with WSL and installed
    Linux distros, such as running commands in distros or stopping running distros.
    In this section, you will take a tour through the most commonly used options of
    the `wsl` command. If you are interested, the full set of options can be found
    by running `wsl --help`.
  prefs: []
  type: TYPE_NORMAL
- en: Listing distros
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `wsl` command is a multi-purpose command line utility that can be used both
    for controlling Linux distros in WSL and for running commands in those distros.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started, run `wsl --list` to get a list of the Linux distros you have
    installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding output shows the full `list` of installed distros, but there
    are some other switches that can be applied to customize the behavior of this
    command. For example, if you only want to see the distros that are running then
    you can use `wsl --list --running`, as shown in the following snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Another useful variant of the list command is the verbose output option, achieved
    using `wsl --list –verbose` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: As the preceding output shows, the verbose option shows you which version of
    WSL is used for each distro; you can see that both `1` and `2` are supported side-by-side.
    The verbose output also shows whether each distro is running. It also includes
    an asterisk (`*`) next to the distro that is the default distro.
  prefs: []
  type: TYPE_NORMAL
- en: As well as getting information about WSL, we can use the `wsl` command to control
    distros.
  prefs: []
  type: TYPE_NORMAL
- en: Controlling WSL distros
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As seen in the output for `wsl --list --verbose`, it is possible to have multiple
    distros installed side-by-side and for them to use different versions of WSL.
    As well as having side-by-side versions, a distro can be converted between versions
    of WSL after installation. To achieve this, you use the `wsl --set-version` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'This command takes two arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: The name of the distro to update
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The version to convert it to
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example of converting the `Ubuntu` distro to version 2 is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: By default, installing Linux distro for WSL will install them as version 1\.
    However, this can be changed with the `wsl --set-default-version` command, which
    takes a single argument of the version to make the default version.
  prefs: []
  type: TYPE_NORMAL
- en: For example, `wsl --set-default-version 2` will make version 2 of WSL the default
    version for any new distros you install.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's take a look at running commands in Linux distros.
  prefs: []
  type: TYPE_NORMAL
- en: Running Linux commands with the wsl command
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another capability of the `wsl` command is running commands in Linux. In fact,
    if you run `wsl` without any arguments, it will launch a shell in your default
    distro!
  prefs: []
  type: TYPE_NORMAL
- en: 'If you pass a command string to `wsl` then it will run that in your default
    distro. For example, the following snippet shows the output from running `wsl
    ls ~` and `wsl cat /etc/issue`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see from the preceding `wsl cat /etc/issue` output, the commands
    were run in the Ubuntu-20.04 distro. If you have multiple distros installed and
    want to run the command in a specific distro, then you can use the `-d` switch
    to specify the distro you want the command to run in. You can get the distro name
    using the `wsl --list` command. A couple of examples of `wsl -d` are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The previous examples show running the `cat /etc/issue` command in multiple
    distros and the output confirms the distro that the command was run against.
  prefs: []
  type: TYPE_NORMAL
- en: 'As well as allowing you to select the Linux distro to run commands in, the
    `wsl` command also allows you to specify which user to run the commands as via
    the `-u` switch. The most common use I have found for this is running commands
    as root, which allows the use of `sudo` to run commands without being prompted
    for a password. The `-u` switch is demonstrated in the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The preceding output shows the `whoami` command (which outputs the current user).
    Without passing the `-u` switch, you can see that commands are run as the `stuart`
    user that was created when the distro was initially installed, but this can be
    overridden.
  prefs: []
  type: TYPE_NORMAL
- en: The final example we'll look at for the `wsl` command is stopping running distros.
  prefs: []
  type: TYPE_NORMAL
- en: Stopping distros with WSL
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have been running WSL and want to stop it for any reason, this can also
    be done using the `wsl` command.
  prefs: []
  type: TYPE_NORMAL
- en: If you have multiple distros running and you just want to stop a specific one,
    you can run `wsl --terminate <distro>`, for example `wsl --terminate Ubuntu-20.04`.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Remember, you can get the distros that are currently running using `wsl --list
    --running` as we saw earlier.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to shut down WSL and all running distros, you can run `wsl --shutdown`.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we've seen how the `wsl` command can be used to control WSL, let's
    take a look at the configuration files for WSL.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing wsl.conf and .wslconfig
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: WSL provides a couple of places where you can configure its behavior. The first
    of these is `wsl.conf`, which provides a per-distro configuration, and the second
    is `.wslconfig`, which provides global configuration options. These two files
    allow you to enable different features of WSL such as where host drives are mounted
    within a distro, or control overall WSL behavior such as how much system memory
    it can consume.
  prefs: []
  type: TYPE_NORMAL
- en: Working with wsl.conf
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `wsl.conf` file is located in the `/etc/wsl.conf` file in each distro. If
    the file doesn't exist and you want to apply some settings to a distro, then create
    the file in that distro with your desired configuration and restart the distro
    (see `wsl --terminate` in the *Stopping distros with WSL* section).
  prefs: []
  type: TYPE_NORMAL
- en: The default options generally work well, but this section will give you a tour
    through `wsl.conf` so you have an idea of the types of settings that you can customize
    if you need to.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `wsl.conf` file follows the `ini` file structure with name/value pairs
    organized in sections. See the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Some of the main sections and values of the `wsl.conf` file are shown in the
    following example with their default options:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The `automount` section gives options for controlling how WSL mounts your Windows
    drives inside WSL distros. The `enabled` option allows you to enable or disable
    the behavior completely, whereas the `root` option allows you to control where
    in the distro's file system the drive mounts should be created if you have a reason
    or preference for them being in a different location.
  prefs: []
  type: TYPE_NORMAL
- en: The `interop` section controls the features allowing a Linux distro to interact
    with Windows. You can disable the feature completely by setting the `enabled`
    property to `false`. By default, the Windows `PATH` is appended to the `PATH`
    in the distro but this can be disabled using the `appendWindowsPath` setting if
    you need to have finer control over which Windows applications are discovered.
  prefs: []
  type: TYPE_NORMAL
- en: The full documentation for `wsl.conf` can be found at [https://docs.microsoft.com/en-us/windows/wsl/wsl-config#configure-per-distro-launch-settings-with-wslconf](https://docs.microsoft.com/en-us/windows/wsl/wsl-config#configure-per-distro-launch-settings-with-wslconf).
    You will learn more about accessing Windows files and applications from within
    WSL in [*Chapter 5*](B16412_05_Final_JC_ePub.xhtml#_idTextAnchor054), *Linux to
    Windows Interoperability*.
  prefs: []
  type: TYPE_NORMAL
- en: Here we've seen how to change per-distro configuration, next we'll look at system-wide
    WSL configuration options.
  prefs: []
  type: TYPE_NORMAL
- en: Working with .wslconfig
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As well as the per-distro `wsl.conf` configuration, there is a global `.wslconfig`
    file added with version 2 of WSL, which can be found in your `Windows User` folder,
    for example, `C:\Users\<your username>\.wslconfig`.
  prefs: []
  type: TYPE_NORMAL
- en: 'As with the `wsl.conf` file, `.wslconfig` uses the `ini` file structure. The
    following example shows the main values for the `[wsl2]` section, which allows
    you to change the behavior of WSL version 2:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The `memory` value configures the limit for the memory consumed by the lightweight
    utility virtual machine that is used for version 2 of WSL. By default, this is
    80% of the system memory.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, `processors` allows you to limit the number of processors that the
    virtual machine will use (by default, there is no limit). These two values can
    help if you need to balance workloads running on both Windows and Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Another point to note is that paths (such as `swapFile`) need to be absolute
    paths and back-slashes (`\\`) need to be escaped as shown.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are additional options (such as `kernel` and `kernelCommandLine`, which
    allow you to specify a custom kernel or additional kernel arguments), which are
    out of the scope for this book but can be found in the documentation: [https://docs.microsoft.com/en-us/windows/wsl/wsl-config#configure-global-options-with-wslconfig](https://docs.microsoft.com/en-us/windows/wsl/wsl-config#configure-global-options-with-wslconfig).'
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you have seen how to control the WSL integration features,
    such as drive mounting and the ability to invoke Windows processes by changing
    settings in the `wsl.conf` file in a distro. You've also seen how to control the
    behavior of the overall WSL system such as limiting the amount of memory or the
    number of processors that it will use. These options allow you to ensure that
    WSL fits into your system and workflow in a way that works for you.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you've seen how to enable WSL, install Linux distros, and ensure
    that they are running under version 2 of WSL. You've also learned how to use the
    `wsl` command to control WSL, and how to use the `wsl.conf` and `.wslconfig` configuration
    files to further control the behavior of WSL and the distros that are running
    in it. With these tools at your command, you can be in control of WSL and how
    it interacts with your system.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will take a look at the new Windows Terminal, which
    is a natural pairing with WSL. We'll cover how to install it and get it up and
    running.
  prefs: []
  type: TYPE_NORMAL
