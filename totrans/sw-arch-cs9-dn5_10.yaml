- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Working with Azure Functions
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we mentioned in *Chapter 4*, *Deciding the Best Cloud-Based Solution*, the
    serverless architecture is one of the newest ways to provide flexible software
    solutions. To do so, Microsoft Azure provides Azure Functions, an event-driven,
    serverless, and scalable technology that accelerates your project development.
    The main goal of this chapter is to get you familiar with Azure Functions and
    the best practices you can implement while using it. It is worth mentioning that
    the use of Azure Functions is a great alternative for having a serverless implementation
    that can accelerate your development. With them, you can deploy APIs faster, enable
    services triggered by timers, and even trigger processes by receiving events from
    storage.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Azure Functions app
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Programming Azure Functions using C#
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintaining Azure Functions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use case – implementing Azure Functions to send emails
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, you will understand how to use Azure Functions in
    C# to speed up your development cycle.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter requires that you have the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio 2019 free Community Edition or better with all the Azure tools
    installed.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A free Azure account. The *Creating an Azure account* section of *Chapter 1*,
    *Understanding the Importance of Software Architecture*, explains how to create
    one.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can find the sample code for this chapter at [https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5/tree/master/ch10](https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5/tree/master/ch10).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Azure Functions app
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Azure Functions app is an Azure PaaS where you can build pieces of code
    (functions) and connect them to your application and use triggers to start them.
    The concept is quite simple – you build a function in the language you prefer
    and decide on the trigger that will start it. You can write as many functions
    as you want in your system. There are cases where the system is written entirely
    with functions.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps for creating the necessary environment are as simple as the ones
    we need to follow to create the function itself. The following screenshot shows
    the parameters that you must decide on when you create the environment. After
    you select **Create a resource** in Azure and filter by **Function App**, clicking
    the **Create** button, you will see the following screen:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_01.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.1: Creating an Azure function'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a couple of key points that you should consider while creating your
    Azure Functions environment. The possibilities given for running functions increase
    from time to time, as do the programming language options and publishing styles.
    One of the most important configurations we have is the hosting plan, which is
    where you will run your functions. There are three options for the hosting plan:
    a Consumption (Serverless), Premium, and App Service plan. Let''s talk about these
    now.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Consumption plan
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you choose a Consumption plan, your functions will only consume resources
    when they are executed. This means that you will only be charged while your functions
    are running. Scalability and memory resources will be automatically managed by
    Azure. This is truly what we call serverless.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Something we need to take note of while writing functions in this plan is the
    timeout. By default, after 5 minutes, the function will timeout. You can change
    the timeout value using the `functionTimeout` parameter in the `host.json` file.
    The maximum value is 10 minutes.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: When you choose the Consumption plan, the way in which you will be charged will
    depend on what you are executing, execution time, and memory usage. More information
    on this can be found at [https://azure.microsoft.com/en-us/pricing/details/functions/](https://azure.microsoft.com/en-us/pricing/details/functions/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Note that this can be a good option when you do not have App Services in your
    environment, and you are running functions with low periodicity. On the other
    hand, if you need continuous processing, you may want to consider the App Service
    plan.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Premium plan
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Depending on what you use your functions for, especially if they need to run
    continuously or almost continuously, or if some function executions take longer
    than 10 minutes, you may want to consider a Premium plan. Besides, you may need
    to connect your function to a VNET/VPN environment, and in this case, you will
    be forced to run in this plan.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: You may also need more CPU or memory options than what is provided with the
    Consumption plan. The Premium plan gives you one core, two core, and four core
    instance options.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: It is worth mentioning that even with unlimited time to run your function, if
    you decide to use an HTTP trigger function, 230 seconds is the maximum allowed
    for responding to a request. The reason why this is a limit is related to Azure
    Load Balancer. You may have to redesign your solution in such situations to adhere
    to the best practices set by Microsoft ([https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices](https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices)).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: App Service plan
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The App Service plan is one of the options you can choose when you want to
    create an Azure Functions app. The following is a list of reasons (suggested by
    Microsoft) as to why you should use the App Service plan instead of the Consumption
    plan to maintain your functions:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: You can use underutilized existing App Service instances.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You want to run your function app on a custom image.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the App Service plan scenario, the `functionTimeout` value varies according
    to the Azure Function runtime version. However, the value is at least 30 minutes.
    You may find a tabled comparison between the timeouts in each consumption plan
    at [https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Programming Azure functions using C#
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you will learn how to create Azure functions. It is worth mentioning
    that there are several ways to create them using C#. The first one is by creating
    the functions and developing them in the Azure portal itself. To do this, let
    us consider that you have created an Azure Functions app with similar configurations
    to the ones from the screenshot at the beginning of the chapter.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: 'By selecting the resource created and navigating to the **Functions** menu,
    you will be able to **Add** new functions to this environment, as you can see
    in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_02.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.2: Adding a function'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Here, you will need to decide the kind of trigger that you want to use to start
    the execution. The most frequently used ones are **HTTP trigger** and **Timer
    trigger**. The first enables the creation of an HTTP API that will trigger the
    function. The second means functions will be triggered by a timer set according
    to your decision.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: 'When you decide on the trigger you want to use, you must name the function.
    Depending on the trigger you decide on, you will have to set up some parameters.
    For instance, HTTP trigger requires that you set up an authorization level. Three
    options are available, that is, **Function**, **Anonymous**, and **Admin**:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_03.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.3: Configuring an HTTP function'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: It is worth mentioning that this book does not cover all the options that are
    available when it comes to building functions. As a software architect, you should
    understand that Azure provides a good service for serverless architectures in
    terms of functions. This can be useful in several situations. This was discussed
    in more detail in *Chapter 4*, *Deciding the Best Cloud-Based Solution*.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'The result of this is as follows. Notice that Azure provides an editor that
    allows us to run the code, check logs, and test the function that we have created.
    This is a good interface for testing and coding basic functions:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_04.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.4: HTTP function environment'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: However, if you want to create more sophisticated functions, you may need a
    more sophisticated environment so that you can code and debug them more efficaciously.
    This is where the Visual Studio Azure Functions project can help you. Besides,
    using Visual Studio to execute the development of the function moves you in the
    direction of using source control and CI/CD for your functions.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: 'In Visual Studio, you can create a project dedicated to Azure Functions by
    going to **Create a new project**:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_05.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.5: Creating an Azure Functions project in Visual Studio 2019'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have submitted your project, Visual Studio will ask you for the type
    of trigger you are using and for the Azure version that your function will run
    on:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_06.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.6: Creating a new Azure Functions application'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: It is worth mentioning that Azure Functions supports different platforms and
    programming languages. At the time of writing, there are three runtime versions
    of Azure Functions, and C# can run in all of them. The first version is compatible
    with .NET Framework 4.7\. In the second one, you can create functions that run
    on .NET Core 2.2\. In the third one, you will be able to run .NET Core 3.1 and
    .NET 5.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: As a software architect, you must keep code reusability in mind. In this case,
    you should pay attention to which version of Azure Functions Project you will
    decide to build your functions in. However, it is always recommended that you
    use the latest version of the runtime, as soon as it acquires general availability
    status.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, the code that is generated is like that generated when you create
    Azure functions in the Azure portal:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The publish method follows the same steps as the publish procedure for web apps
    that we described in *Chapter 1*, *Understanding the Importance of Software Architecture*.
    However, it is always recommended to use a CI/CD pipeline, as we are going to
    describe in *Chapter 20*, *Understanding DevOps Principles*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Listing Azure Functions templates
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are several templates in the Azure portal that you can use in order to
    create Azure functions. The number of templates that you can choose from is updated
    continuously. The following are just a few of them:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '**Blob Trigger**: You may want to process something for a file as soon as this
    file is uploaded to your blob storage. This can be a good use case for Azure Functions.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cosmos DB Trigger**: You may want to synchronize data that arrives in a Cosmos
    DB database with a processing method. Cosmos DB was discussed in detail in *Chapter
    9*, *How to Choose Your Data Storage in the Cloud*.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Event Grid Trigger**: This is a good way to manage Azure events. Functions
    can be triggered so that they manage each event.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Event Hub Trigger**: With this trigger, you can build functions that are
    linked to any system that sends data to Azure Event Hub.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HTTP Trigger**: This trigger is useful for building serverless APIs and web
    app events.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IoT Hub Trigger**: When your application is connected to devices through
    the use of IoT Hub, you can use this trigger whenever a new event is received
    by one of the devices.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Queue Trigger**: You can handle queue processing using a function as a service
    solution.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Service Bus Queue Trigger**: This is another messaging service that can be
    a trigger for functions. Azure Service Bus will be covered in more detail in *Chapter
    11*, *Design Patterns and .NET 5 Implementation*.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Timer Trigger**: This is commonly used with functions and is where you specify
    time triggers so that you can continuously process data from your system.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintaining Azure functions
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you have created and programmed your function, you need to monitor and
    maintain it. To do this, you can use a variety of tools, all of which you can
    find in the Azure portal. These tools will help you solve problems due to the
    amount of information you will be able to collect with them.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 创建和编程函数后，您需要监视和维护它。为此，您可以使用各种工具，所有这些工具都可以在Azure门户中找到。这些工具将帮助您解决问题，因为您将能够收集大量信息。
- en: 'The first option when it comes to monitoring your function is using the **Monitor**
    menu inside the Azure Functions interface in the Azure portal. There, you will
    be able to check all your function executions, including successful results and
    failures:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在监视函数时的第一个选项是在Azure门户中的Azure函数界面内使用“监视”菜单。在那里，您将能够检查所有函数执行，包括成功的结果和失败的结果：
- en: '![](img/B16756_10_07.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_07.png)'
- en: 'Figure 10.7: Monitoring a function'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.7：监控函数
- en: It will take about 5 minutes for any results to be available. The date shown
    in the grid is in UTC time.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 任何结果可用需要大约5分钟。网格中显示的日期是UTC时间。
- en: 'By clicking on **Run query in Application Insights**, the same interface allows
    you to connect to this tool. This will take you to a world of almost infinite
    options that you can use to analyze your function data. Application Insights is
    one of the best **Application Performance Management** (**APM**) systems available
    nowadays:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通过单击“在Application Insights中运行查询”，相同的界面允许您连接到此工具。这将带您进入一个几乎无限的选项世界，您可以使用它来分析您的函数数据。Application
    Insights是当今最好的“应用程序性能管理”（APM）系统之一：
- en: '![](img/B16756_10_08.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_08.png)'
- en: 'Figure 10.8: Monitoring using Application Insights'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.8：使用Application Insights进行监控
- en: 'Beyond the query interface, you can also check all the performance issues of
    your function using the Insights interface in the Azure portal. There, you can
    analyze and filter all the requests that have been received by your solution and
    check their performance and dependencies. You can also trigger alerts when something
    abnormal happens to one of your endpoints:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 除了查询界面，您还可以使用Azure门户中的Insights界面检查函数的所有性能问题。在那里，您可以分析和过滤已收到的所有请求，并检查它们的性能和依赖关系。当您的一个端点发生异常时，您还可以触发警报：
- en: '![](img/B16756_10_09.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_09.png)'
- en: 'Figure 10.9: Monitoring using Application Insights Live Metrics'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.9：使用Application Insights实时指标监控
- en: As a software architect, you will find a good daily helper for your projects
    in this tool. It is worth mentioning that Application Insights works on several
    other Azure services, such as web apps and virtual machines. This means that you
    can monitor the health of your system and maintain it using the wonderful features
    provided by Azure.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 作为软件架构师，您会发现这个工具对您的项目是一个很好的日常助手。值得一提的是，Application Insights还适用于其他几个Azure服务，例如Web应用程序和虚拟机。这意味着您可以使用Azure提供的出色功能来监视系统的健康状况并进行维护。
- en: Use case – Implementing Azure Functions to send emails
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例 - 实现Azure函数发送电子邮件
- en: Here, we will use a subset of the Azure components we described previously.
    The use case from WWTravelClub proposes a worldwide implementation of the service,
    and there is a chance that this service will need different architecture designs
    to face all the performance key points that we described in *Chapter 1*, *Understanding
    the Importance of Software Architecture*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将使用我们之前描述的Azure组件的子集。WWTravelClub的用例提出了该服务的全球实施，并且有可能该服务将需要不同的架构设计来应对我们在*第1章*“理解软件架构的重要性”中描述的所有性能关键点。
- en: If you go back to the user stories that were described in *Chapter 1*, *Understanding
    the Importance of Software Architecture*, you will find that many needs are related
    to communication. Because of this, it is common to have some alerts be provided
    by emails in the solution. The use case of this chapter will focus on how to send
    emails. The architecture will be totally serverless.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您回顾一下在*第1章*“理解软件架构的重要性”中描述的用户故事，您会发现许多需求与通信有关。因此，在解决方案中通常会通过电子邮件提供一些警报。本章的用例将重点介绍如何发送电子邮件。该架构将完全无服务器。
- en: 'The following diagram shows the basic structure of the architecture. To give
    users a great experience, all the emails that are sent by the application will
    be queued asynchronously, thereby preventing significant delays in the system''s
    responses:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了架构的基本结构。为了给用户带来良好的体验，应用程序发送的所有电子邮件都将以异步方式排队，从而防止系统响应出现显着延迟：
- en: '![](img/B16756_10_10.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_10.png)'
- en: 'Figure 10.10: Architectural design for sending emails'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.10：发送电子邮件的架构设计
- en: Note that there are no servers that manage Azure functions for enqueuing or
    dequeuing messages from Azure Queue Storage. This is exactly what we call serverless.
    It is worth mentioning that this architecture is not restricted to only sending
    emails – it can also be used to process any HTTP `POST` request.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，没有服务器管理Azure函数来对Azure队列存储中的消息进行入队或出队操作。这正是我们所说的无服务器。值得一提的是，这种架构不仅限于发送电子邮件
    - 它也可以用于处理任何HTTP“POST”请求。
- en: Now, we will learn how to set up security in the API so that only authorized
    applications can use the given solution.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将学习如何在API中设置安全性，以便只有经过授权的应用程序可以使用给定的解决方案。
- en: First step – Creating Azure Queue storage
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一步 - 创建Azure队列存储
- en: 'It is quite simple to create storage in the Azure portal. Let us learn how.
    First, you will need to create a storage account by clicking on **Create a resource**
    in the main page of the Azure portal and searching for **Storage account**. Then,
    you will be able to set up its basic information, such as **Storage account name**
    and **Location**. Information about **Networking**, and **Data protection**, as
    shown in the following screenshot, can be checked in this wizard too. There are
    default values for these settings that will cover the demo:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_11.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.11: Creating an Azure storage account'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have the storage account in place, you will be able to set up a queue.
    You will find this option by clicking on the **Overview** link in the storage
    account and selecting the **Queues** option, or by selecting **Queues** via the
    storage account menu. Then, you will find an option to add the queue (**+ Queue**),
    where you just need to provide its name:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_12.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.12: Defining a queue to monitor emails'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: 'The created queue will give you an overview of the Azure portal. There, you
    will find your queue''s URL and use Storage Explorer:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_13.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.13: Queue created'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that you will also be able to connect to this storage using Microsoft
    Azure Storage Explorer ([https://azure.microsoft.com/en-us/features/storage-explorer/](https://azure.microsoft.com/en-us/features/storage-explorer/)):'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_14.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.14: Monitoring the queue using Microsoft Azure Storage Explorer'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: This tool is especially useful if you are not connected to the Azure portal.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: Second step – Creating the function to send emails
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, you can start programming in earnest, informing the queue that an email
    is waiting to be sent. Here, we need to use an HTTP trigger. Note that the function
    is a static class that runs asynchronously. The following code is gathering the
    request data coming from the HTTP trigger and inserting the data into a queue
    that will be treated later:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In some scenarios, you may try to avoid the queue setup indicated in the preceding
    code by using a queue output binding. Check the details at [https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue-output?tabs=csharp](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue-output?tabs=).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use a tool such as Postman to test your function by running the Azure
    Functions Emulator:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_15.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.15: Postman function test'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: 'The result will appear in Microsoft Azure Storage Explorer and the Azure portal.
    In the Azure portal, you can manage each message and dequeue each of them or even
    clear the queue storage:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_16.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.16: HTTP trigger and queue storage test'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Third step – Creating the queue trigger function
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After this, you can create a second function. This one will be triggered by
    data entering your queue. It is worth mentioning that, for Azure Functions v3,
    you will have the `Microsoft.Azure.WebJobs.Extensions.Storage` library added as
    a NuGet reference automatically:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_17.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.17: Creating a queue trigger'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have set the connection string inside `local.settings.json`, you will
    be able to run both functions and test them with Postman. The difference is that,
    with the second function running, if you set a breakpoint at the start of it,
    you will check whether the message has been sent:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16756_10_18.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.18: Queue triggered in Visual Studio 2019'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: From this point, the way to send emails will depend on the mail options you
    have. You may decide to use a proxy or connect directly to your email server.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: 'There are several advantages to creating an email service this way:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: Once your service has been coded and tested, you can use it to send emails from
    any of your applications. This means that your code can always be reused.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apps that use this service will not be stopped from sending emails due to the
    asynchronous advantages of posting in an HTTP service.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用此服务的应用程序不会因为在HTTP服务中发布异步优势而停止发送电子邮件。
- en: You do not need to pool the queue to check whether data is ready for processing.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要池化队列来检查数据是否准备好进行处理。
- en: Finally, the queue process runs concurrently, which delivers a better experience
    in most cases. It is possible to turn it off by setting some properties in `host.json`.
    All the options for this can be found in the *Further reading* section at the
    end of this chapter.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，队列进程并发运行，这在大多数情况下提供了更好的体验。可以通过在`host.json`中设置一些属性来关闭它。所有这些选项都可以在本章末尾的*进一步阅读*部分找到。
- en: Summary
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at some of the advantages of developing functionality
    with serverless Azure functions. You can use it as a guideline for checking the
    different types of triggers that are available in Azure Functions and for planning
    how to monitor them. We also saw how to program and maintain Azure functions.
    Finally, we looked at an example of an architecture where you connect multiple
    functions to avoid pooling data and to enable concurrent processing.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了一些使用无服务器Azure函数开发功能的优势。您可以将其用作检查Azure Functions中可用的不同类型触发器和计划如何监视它们的指南。我们还看到了如何编程和维护Azure函数。最后，我们看了一个架构示例，其中您可以连接多个函数以避免池化数据并实现并发处理。
- en: In the next chapter, we will analyze the concept of design patterns, learn why
    they are so useful, and learn about some of the common patterns.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将分析设计模式的概念，了解它们为什么如此有用，并了解一些常见模式。
- en: Questions
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are Azure functions?
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure函数是什么？
- en: What are the programming options for Azure functions?
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure函数的编程选项是什么？
- en: What are the plans that can be used with Azure functions?
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以与Azure函数一起使用的计划是什么？
- en: How can you deploy Azure functions with Visual Studio?
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用Visual Studio部署Azure函数？
- en: What triggers can you use to develop Azure functions?
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用哪些触发器来开发Azure函数？
- en: What is the difference between Azure Functions v1, v2, and v3?
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Functions v1、v2和v3有什么区别？
- en: How does Application Insights help us to maintain and monitor Azure functions?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序洞察如何帮助我们维护和监视Azure函数？
- en: Further reading
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'If you want to learn more when it comes to creating Azure functions, check
    out the following links:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解有关创建Azure函数的更多信息，请查看以下链接：
- en: 'Azure Functions scale and hosting: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure函数的规模和托管：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale)
- en: '*Azure Functions – Essentials [Video]*, by Praveen Kumar Sreeram: [https://www.packtpub.com/virtualization-and-cloud/azure-functions-essentials-video](https://www.packtpub.com/virtualization-and-cloud/azure-functions-essentials-video)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure Functions – Essentials [Video]*，作者Praveen Kumar Sreeram：[https://www.packtpub.com/virtualization-and-cloud/azure-functions-essentials-video](https://www.packtpub.com/virtualization-and-cloud/azure-functions-essentials-video)'
- en: 'Azure Functions runtime overview: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions](https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions
    )'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions运行时概述：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions](https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions)
- en: 'An overview of Azure Event Grid: [https://azure.microsoft.com/en-us/resources/videos/an-overview-of-azure-event-grid/](https://azure.microsoft.com/en-us/resources/videos/an-overview-of-azure-event-grid/)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure事件网格概述：[https://azure.microsoft.com/en-us/resources/videos/an-overview-of-azure-event-grid/](https://azure.microsoft.com/en-us/resources/videos/an-overview-of-azure-event-grid/)
- en: 'Timer trigger for Azure Functions: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions的定时器触发器：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer)
- en: 'The Application Insights section from the book, *Azure for Architects*, by
    Ritesh Modi: [https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/appli)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书籍*Azure for Architects*中的应用程序洞察部分，作者Ritesh Modi：[https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/appli)
- en: 'Monitoring Azure Functions using the Application Insights section from the
    book, *Azure Serverless Computing Cookbook*, by Praveen Kumar Sreeram: [https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitoring-azure-functions-using-application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitori)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用书籍*Azure Serverless Computing Cookbook*中的应用程序洞察部分监视Azure函数，作者Praveen Kumar
    Sreeram：[https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitoring-azure-functions-using-application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitori)
- en: 'Get started with Azure Queue storage using .NET: [https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues](https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用.NET开始使用Azure队列存储：[https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues](https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues)
- en: 'Azure Functions triggers and bindings concepts: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions触发器和绑定概念：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings)
- en: 'Azure Queue storage bindings for Azure Functions: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure函数的Azure队列存储绑定：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue)
