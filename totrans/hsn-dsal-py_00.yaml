- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data structures and algorithms are two of the most important core subjects in
    the study of information technology and computer science engineering. This book
    aims to provide in-depth knowledge, along with programming implementation experience,
    of data structures and algorithms. It is designed for graduates and undergraduates
    who are studying data structures with Python programming at beginner and intermediate
    level, and explains the complex algorithms through the use of examples.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, you will learn the essential Python data structures and the most
    common algorithms. This book will provide a basic knowledge of Python and give
    the reader an insight into data algorithms. In it, we provide Python implementations
    and explain them in relation to almost every important and popular data structure
    algorithm. We will look at algorithms that provide solutions to the most common
    problems in data analysis, including searching and sorting data, as well as being
    able to extract important statistics from data. With this easy-to-read book, you
    will learn how to create complex data structures, such as linked lists, stacks,
    heaps, and queues, as well as sort algorithms, including bubble sort, insertion
    sort, heapsort, and quicksort. We also describe a variety of selection algorithms,
    including randomized and deterministic selection. We provide a detailed discussion
    of various data structure algorithms and design paradigms, such as greedy algorithms,
    divide-conquer algorithms, and dynamic programming, along with how they can be
    used in real-time applications. In addition, complex data structures, such as
    trees and graphs, are explained using straightforward pictorial examples to explore
    the concepts of these useful data structures. You will also learn various important
    string processing and pattern matching algorithms, such as KMP, and Boyer-Moore
    algorithms, along with their easy implementation in Python. You will learn the
    common techniques and structures used in tasks, including preprocessing, modeling,
    and transforming data.
  prefs: []
  type: TYPE_NORMAL
- en: The importance of having a good understanding of data structures and algorithms
    cannot be overemphasized. It is an important arsenal to have at your disposal
    in order to understand new problems and find elegant solutions to them. By gaining
    a deeper understanding of algorithms and data structures, you may find uses for
    them in many more ways than originally intended. You will develop a consideration
    for the code you write and how it affects the amount of memory. Python has further
    opened the door to many professionals and students to come to appreciate programming.
    The language is fun to work with and concise in its description of problems. We
    leverage the language's mass appeal to examine a number of widely studied and
    standardized data structures and algorithms. The book begins with a concise tour
    of the Python programming language. As such, it is not required that you know
    Python before picking up this book.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for Python developers who are studying courses concerned
    with data structures and algorithms at a beginner or intermediate level. The book
    is also designed for all those undergraduate and graduate engineering students
    who attend, or have attended, courses on data structures and algorithms, as it
    covers almost all the algorithms, concepts, and designs that are studied in this
    course. Thus, this book can also be adapted as a textbook for data structure and
    algorithm courses. This book is also a useful tool for generic software developers
    who want to deploy various applications using a specific data structure as it
    provides efficient ways of storing the relevant data. It also provides a practical
    and straightforward approach to learning complex algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: It is assumed that the reader has some basic knowledge of Python. However, it
    is not mandatory as we provide a quick overview of Python and its object-oriented
    concepts in this book. There is no requirement to have any prior knowledge of
    computer-related concepts in order to understand this book, since all the concepts
    and algorithms are explained in sufficient detail, with a good number of examples
    and pictorial representations. Most of the concepts are explained with the help
    of everyday scenarios to make the concepts and algorithms easy to understand.
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The code in the book will require you to run on Python 3.7 or higher.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Python interactive environment can also be used to run the code snippets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Readers are advised to learn the algorithms and concepts by executing the codes
    provided in the book that are designed to facilitate understanding of the algorithms.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The book aims to give readers practical exposure, so it is recommended that
    you carry out programming for all the algorithms in order to get the maximum out
    of this book.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support) and
    register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-Data-Structures-and-Algorithms-with-Python-Second-Edition](https://github.com/PacktPublishing/Hands-On-Data-Structures-and-Algorithms-with-Python-Second-Edition). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/9781788995573_ColorImages.pdf](_ColorImages.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "We instantiate the `CountVectorizer` class and pass `training_data.data` to
    the `fit_transform` method of the `count_vect` object."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen.'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
