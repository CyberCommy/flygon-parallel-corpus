- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Spring 5.0 is due to arrive with a myriad of new and exciting features that
    will change the way we've used the framework so far. This book will show you this
    evolution--from solving the problems of testable applications to building distributed
    applications on the Cloud.
  prefs: []
  type: TYPE_NORMAL
- en: The book begins with an insight into the new features in Spring 5.0, and shows
    you how to build an application using Spring MVC. You will then get a thorough
    understanding of how to build and extend microservices using the Spring Framework.
    You will also understand how to build and deploy Cloud applications. You will
    realize how application architectures have evolved from monoliths to those built
    around microservices. The advanced features of Spring Boot will also be covered
    and displayed through powerful examples.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you will be equipped with the knowledge and best practices
    to develop applications with the Spring Framework.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](0d58861b-9262-4465-bc1f-4d66b6ea2b81.xhtml), *Evolution to Spring
    Framework 5.0*, takes you through the evolution of the Spring Framework, ranging
    from its initial versions to Spring 5.0\. Initially, Spring was used to develop
    testable applications using dependency injection and core modules. Recent Spring
    Projects, such as Spring Boot, Spring Cloud, Spring Cloud Data Flow--deal with
    application infrastructure and moving applications to Cloud. We get an overview
    of different Spring modules and projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](7f260ef4-2f36-4db0-bd24-399370edcb7a.xhtml), *Dependency Injection*,
    dives deep into dependency injection. We will look at different kinds of dependency
    injection methods available in Spring, and how auto-wiring makes your life easy.
    We will also take a quick look into unit testing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](fbc94f01-19b5-4ff2-8955-5bee445b71f5.xhtml), *Building a Web Application
    with Spring MVC*, gives a quick overview of building a web application with Spring
    MVC.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](c4e1908a-b086-428c-8862-6474eb92f04a.xhtml), *Evolution toward
    Microservices and Cloud-Native Applications*, explains the evolution of application
    architectures in the last decade. We will understand why microservices and Cloud
    Native applications are needed and get a quick overview of the different Spring
    projects that help us build Cloud-Native applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](72e55d58-492f-404a-adbf-c3f86cf583c9.xhtml), *Building Microservices
    with Spring Boot*, discusses how Spring Boot takes away the complexity in creating
    production-grade Spring-based applications. It makes it easy to get started with
    Spring-based projects and provides easy integration with third-party libraries.
    In this chapter, we will take the students on a journey with Spring Boot. We will
    start with implementing a basic web service and then move on to adding caching,
    exception handling, HATEOAS, and internationalization, while making use of different
    features from the Spring Framework.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](09291379-92b0-4d7d-bff7-d77e089f33db.xhtml), *Extending Microservices*,
    focuses on adding more advanced features to the microservices that we built in
    [Chapter 4](c4e1908a-b086-428c-8862-6474eb92f04a.xhtml), *Evolution toward Microservices
    and Cloud-Native Applications*.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](c46a5b67-c5be-49c0-af8e-b0c4713f890b.xhtml), *Advanced Spring Boot
    Features*, takes a look at the advanced features in Spring Boot. You will learn
    how to monitor a microservice with a Spring Boot Actuator. Then, you will deploy
    the microservice to Cloud. You will also learn how to develop more effectively
    with the developer tools provided by Spring Boot.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](b134d136-6980-440f-980c-227e8a46e532.xhtml), *Spring Data*, discusses
    the Spring Data module. We will develop simple applications to integrate Spring
    with JPA and Big Data technologies.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](9d263fde-d65c-4222-8da9-b360de7ccc12.xhtml), *Spring Cloud*, discusses
    the distributed systems in the Cloud that have common problems, configuration
    management, service discovery, circuit breakers, and intelligent routing. In this
    chapter, you will learn how Spring Cloud helps you develop solutions for these
    common patterns. These solutions should work well on the Cloud as well as developer
    local systems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](e6e89939-cdb1-470b-a052-e4688e5bacb1.xhtml), *Spring Cloud Data
    Flow*, talks about the Spring Cloud Data Flow, which offers a collection of patterns
    and best practices for microservices-based distributed streaming and batch data
    pipelines. In this chapter, we will understand the basics of Spring Cloud Data
    Flow and use it to build basic data flow use cases.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](116716f1-7046-4aaa-b89b-9794b6079880.xhtml), *Reactive Programming*,
    explores programming with asynchronous data streams. In this chapter, we will
    understand Reactive programming and take a quick look at the features provided
    by the Spring Framework.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](74884bb1-6372-4dbb-a4ba-01e2f763476f.xhtml), *Spring Best Practices*,
    helps you understand best practices in developing enterprise applications with
    Spring related to unit testing, integration testing, maintaining Spring configuration,
    and more.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](fa57d554-79c7-46ea-81c3-8b7957bfa5bf.xhtml),*Working with Kotlin
    in Spring*, introduces you to a JVM language gaining quick popularity--Kotlin.
    We will discuss how to setup a Kotlin project in Eclipse. We will create a new
    Spring Boot project using Kotlin and implement a couple of basic services with
    unit and integration testing.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To be able to run examples from this book, you will need the following tools:'
  prefs: []
  type: TYPE_NORMAL
- en: Java 8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eclipse IDE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Postman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will use Maven embedded into Eclipse IDE to download all the dependencies
    that are needed.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for experienced Java developers who knows the basics of Spring,
    and wants to learn how to use Spring Boot to build applications and deploy them
    to the Cloud.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, and user input are shown as follows: "Configure `spring-boot-starter-parent`
    in your `pom.xml` file".'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Provide the details and click on Generate Project."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
