- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: About
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section briefly introduces the authors, the coverage of this book, the
    technical skills you'll need to get started, and the hardware and software requirements
    required to complete all of the included activities and exercises.
  prefs: []
  type: TYPE_NORMAL
- en: About the Book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: C++ is one of the most widely used programming languages and is applied in a
    variety of domains, right from gaming to **graphical user interface** (**GUI**)
    programming and even operating systems. If you're looking to expand your career
    opportunities, mastering the advanced features of C++ is key.
  prefs: []
  type: TYPE_NORMAL
- en: The book begins with advanced C++ concepts by helping you decipher the sophisticated
    C++ type system and understand how various stages of compilation convert source
    code to object code. You'll then learn how to recognize the tools that need to
    be used in order to control the flow of execution, capture data, and pass data
    around. By creating small models, you'll even discover how to use advanced lambdas
    and captures and express common API design patterns in C++. As you cover later
    chapters, you'll explore ways to optimize your code by learning about memory alignment,
    cache access, and the time a program takes to run. The concluding chapter will
    help you to maximize performance by understanding modern CPU branch prediction
    and how to make your code cache-friendly.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you'll have developed programming skills that will
    set you apart from other C++ programmers.
  prefs: []
  type: TYPE_NORMAL
- en: About the Authors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Gazihan Alankus** holds a PhD in computer science from Washington University
    in St. Louis. Currently, he is an assistant professor at the Izmir University
    of Economics in Turkey. He teaches and conducts research on game development,
    mobile application development, and human-computer interaction. He is a Google
    developer expert in Dart and develops Flutter applications with his students in
    his company Gbot, which he founded in 2019.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Olena Lizina** is a software developer with 5 years experience in C++. She
    has practical knowledge of developing systems for monitoring and managing remote
    computers with a lot of users for an international product company. For the last
    4 years, she has been working for international outsourcing companies on automotive
    projects for well-known automotive concerns. She has been participating in the
    development of complex and highly performant applications on different projects,
    such as **HMI (Human Machine Interface)**, navigation, and applications for work
    with sensors.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Rakesh Mane** has over 18 years experience in the software industry. He has
    worked with proficient programmers from a variety of regions: India, the US, and
    Singapore. He has mostly worked in C++, Python, shell scripting, and database.
    In his spare time, he likes to listen to music and travel. Also, he likes to play
    with, experiment with, and break things using software tools and code.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Vivek Nagarajan** is a self-taught programmer who started out in the 1980s
    on 8-bit systems. He has worked on a large number of software projects and has
    14 years of professional experience with C++. Aside from this, he has worked on
    a wide variety of languages and frameworks across the years. He is an amateur
    powerlifter, DIY enthusiast, and motorcycle racer. He currently works as an independent
    software consultant.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Brian Price** has over 30 years experience working in a variety of languages,
    projects, and industries, including over 20 years experience in C++. He was worked
    on power station simulators, SCADA systems, and medical devices. He is currently
    crafting software in C++, CMake, and Python for a next-generation medical device.
    He enjoys solving puzzles and the Euler project in a variety of languages.'
  prefs: []
  type: TYPE_NORMAL
- en: Learning Objectives
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By the end of this book, you will be able to:'
  prefs: []
  type: TYPE_NORMAL
- en: Delve into the anatomy and workflow of C++
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Study the pros and cons of different approaches to coding in C++
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test, run, and debug your programs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Link object files as a dynamic library
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use templates, SFINAE, constexpr if expressions and variadic templates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apply best practice to resource management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audience
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have worked in C++ but want to learn how to make the most of this language,
    especially for large projects, this book is for you. A general understanding of
    programming and knowledge of using an editor to produce code files in project
    directories is a must. Some experience with strongly typed languages, such as
    C and C++, is also recommended.
  prefs: []
  type: TYPE_NORMAL
- en: Approach
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This fast-paced book is designed to teach you concepts quickly through descriptive
    graphics and challenging exercises. The book will have "call-outs," with key take
    away points and the most common pitfalls to keep you interested, while breaking
    up the topics into manageable sections.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the optimal student experience, we recommend the following hardware configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: Any entry-level PC/Mac with Windows, Linux, or macOS will suffice
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Processor: Dual core or equivalent'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Memory: 4 GB RAM (8 GB preferred)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Storage: 35 GB of available space'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You''ll also need the following software installed in advance:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Operating system: Windows 7 SP1 32/64-bit, Windows 8.1 32/64-bit, or Windows
    10 32/64-bit, Ubuntu 14.04 or later, or macOS Sierra or later'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Browser: Google Chrome or Mozilla Firefox'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installation and Setup
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Before you embark on this book, you will need to install the following libraries
    used in this book. You will find the steps to install these here.
  prefs: []
  type: TYPE_NORMAL
- en: '**Installing CMake**'
  prefs: []
  type: TYPE_NORMAL
- en: We will use CMake version 3.12.1 or later. We have two options for installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Option 1:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are using Ubuntu 18.10, you can install CMake globally using the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When you run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: If the version you see here is lower than 3.12.1 (for example, 3.10), you should
    install CMake locally using the following instructions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Option 2:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are using an older Linux version, you may get a CMake version that is
    lower than 3.12.1\. Then, you need to install it locally. Use the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: When you see the software license, type *y* and press *Enter*. When asked about
    the installation location, type *y* and press Enter again. This should install
    it to a new folder in your system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we will add that folder to our path. Type the following. Note that the
    first line is a bit too long and the line breaks in this document. You should
    write it as a single line, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, when you type the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 3.15.1 is the current latest release at the time of writing this document. Since
    it is newer than 3.12.1, this will suffice for our purposes.
  prefs: []
  type: TYPE_NORMAL
- en: '**Installing Git**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Test the current installation by typing the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see a line such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'If you see the following line instead, you need to install `git`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is how you can install `git` in Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '**Installing g++**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Test the current installation by typing the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see an output such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'If it is not installed, type the following code to install it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '**Installing Ninja**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Test the current installation by typing the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see an output such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'If it is not installed, type the following code to install it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '**Installing Eclipse CDT and cmake4eclipse**'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are multiple ways of installing Eclipse CDT. To get the latest stable
    version, we will use the official installer. Go to this website and download the
    Linux installer: [https://www.eclipse.org/downloads/packages/installer](https://www.eclipse.org/downloads/packages/installer).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow the instructions there and install **Eclipse IDE for C/C++ Developers**.
    Once you have installed it, run the Eclipse executable. If you did not change
    the default configuration, typing the following command in the terminal will run
    it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: You will choose a workspace folder and then you will be greeted with a **Welcome**
    tab in the main Eclipse window.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we will install `cmake4eclipse`. An easy way to do this is to go to this
    website and drag the **Install** icon to the Eclipse window: [https://github.com/15knots/cmake4eclipse#installation](https://github.com/15knots/cmake4eclipse#installation).
    It will ask you to restart Eclipse, after which you are ready to modify the CMake
    project to work with Eclipse.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Installing GoogleTest**'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will install `GoogleTest` in our system, which will also install other packages
    that are dependent on it. Write the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'This command installs the include files and source files for `GoogleTest`.
    Now, we need to build the source files that we installed to create the `GoogleTest`
    library. Run the following commands to do this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Installing the Code Bundle
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Copy the code bundle for the class to the `C:/Code` folder.
  prefs: []
  type: TYPE_NORMAL
- en: Additional Resources
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The code bundle for this book is also hosted on GitHub at [https://github.com/TrainingByPackt/Advanced-CPlusPlus](https://github.com/TrainingByPackt/Advanced-CPlusPlus).
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
