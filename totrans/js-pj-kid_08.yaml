- en: Chapter 8. Building Rat-man!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will be building a game called **Rat-man**, which is actually
    a modified version of the famous game **Pac-Man**. We will use canvas, JavaScript,
    CSS, and HTML to build our game.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start with introducing our game''s characters:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Our game will have one rat. The player will act as the rat.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There will be four cats who will try to catch the rat and a lot of cheese for
    the rat to eat.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The main goal of the game is to eat all the cheese without being caught by the
    monster cats.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sounds fun, right? Let's get right to it...
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To make our code clean, we will keep our JavaScript, CSS, and images files
    in separate folders. We will have three primary folders named as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '`css`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`img`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`scripts`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Game user interface
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To start building our game, we need to prepare our canvas. Our HTML file should
    look similar to the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Our game user interface will be in the `<body></body>` tags. We will add JavaScript
    to our canvas soon.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `css` folder, create a CSS file named `styles.css`, which will contain
    the following code for our HTML `body`, `canvas`, and a play `button`:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Create another CSS file named `reset.css` in the same folder and add the following
    code to the CSS file. This file will design the user interface for the initial
    screen of the game:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Save both the files and include them in your HTML file with the following code
    in the `<head></head>` tags:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If you open an HTML file of a browser now, you will see the following image:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '![Game user interface](img/B04720_08_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: We are going to draw our game interface in the preceding rectangle.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Adding functionalities to the game
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To add the user interface and the game''s functionalities, we will be needing
    JavaScript. We will need the following JavaScript files in the `scripts` folder:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '`app.main.js`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`app.display_functions.js`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`app.init.js`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`app.key_handler.js`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`app.movement_functions.js`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`app.constants.js`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The app.main.js file
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our `app.main.js` file should contain the following function that will deal
    with the `app.key_handler.js` file and your computer's keyboard. It will also
    call the `app.init.js` file for the initialization of our variables.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here we used `app.main.js`; You need not name your JavaScript file like this.
    But it is a good practice to maintain the naming convention.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: 'The following code is the content of the `app.main.js` file:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The app.display_functions.js file
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In our `app.display_functions.js` file, we will write a function, where we will
    include the `APP.Show_world` function, which is used in the `app.init.js` file.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 'The function should contain the following code (refer to the comments to understand
    what each step does):'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `APP.map.Draw` function will hold the following code:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For the cats'' movement, we will use the `APP.monsters.Move` function with
    the following code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Our rat will move when the `APP.player.Move()` function is called with the
    following code:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, we will make our rat visible on our canvas while moving the rat on the
    blocks by calling the function with the following code:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To show our cats on the canvas, we need to use the following code in our `APP.Show_Monster()`
    function:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To show the portal, we need to write another function called `APP.portals.Show
    ()`, including the following code:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The user will need to see a message after the game is over or make the screen
    blur. To do this, we need to declare another function called `APP.Game_Over()`
    with the following code:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The app.init.js file
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Our `app.init.js` file will contain a function. In the function, we will declare
    the following variables:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Write a function that will contain few more variables, as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now, we will initialize our game''s map:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Images for Rat-man!
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To build the game, we will need a few images. We will keep all our images in
    the `img` folder. In the `img` folder, we will create four folders, as shown in
    the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: monsters
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: player
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: portal
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: walls
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will keep two images, named `dot.png` and `blank.png`, in the `img` folder.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: The monsters folder
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the `monsters` folder, create four folders with our cats' names.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: 'Say that our cats'' names are as follows (you can name them whatever you want):'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: blinky
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: inky
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pinky
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: clyde
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Each cat folder will have four folders for the directed images of the cats.
    The folder names are as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '`up`'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`down`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`left`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`right`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each direction folder should contain an image of our cat. The image name should
    be `0.png`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: You need to keep your image 50 x 50 px.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: The player folder
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `player` folder should contain four folders for the direction of our rat.
    The folders should be named as shown in the following:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '`up`'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`down`'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`left`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`right`'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each folder should contain the rat's directed image. There need to be two images,
    `0.png` and `1.png`. One image is the open mouthed rat and another is of the closed
    mouthed rat. The images need to be 50 x 50 px.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: The portal folder
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `portal` folder should contain two images of the portal through which our
    rat will travel from one end to another. The images names should be `0.png` and
    `1.png`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: The walls folder
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `walls` folder should have five images to draw the walls in the canvas.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: The images should be named `0.png`, `1.png`, `2.png`, `3.png`, and `4.png`.
    The images will be the corners and straight lines of the wall.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: 'The hierarchical representation of the images used in building our game is
    as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '![The walls folder](img/B04720_08_05.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
- en: Adding images to our cats
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will write four functions to add perfect images for our cats. The function
    should look similar to the following function:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: We will change the index number of the `APP.monsters[0].Init = function ();`
    function to `APP.monsters[1].Init = function ();` for the second cat. And `APP.monsters[2].Init
    = function ()` & `APP.monsters[3].Init = function ()` for the third and fourth
    cats.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: We also need to change the image location and index numbers for the cats.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: 'For the initialization of the walls and cheese with the images, we need to
    write a function, as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Draw the canvas
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will draw our canvas by adding the following function to our `app.init.js`
    file:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The app.key_handler.js file
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, in the `app.key_handler.js` file, we will write our code to give the player
    the ability to move our rat using the keyboard. The code should look similar to
    the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The app.movement_functions.js file
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We need to take a look where our wall ends or starts while pressing the keys.
    We need to stop moving the rat when we reach the edges. Therefore, we have to
    set some conditions for that. The first one is to check the direction. The function
    can be written as shown in the following:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'While checking the directions, we also need to move in the right direction.
    The function to select the direction can be written as follows:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now, we have to check for the walls. We can do this by adding a few conditions
    to the function as shown in the following:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The movement of the arrow keys should be well defined. We should create the
    following functions for the arrow keys:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The app.constants.js file
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To keep our game''s canvas clean and in good shape, we need to initialize a
    few variables with a few fixed variables (for example, height of map, height of
    cell, width of map, width of cell, and so on). We can do this by writing the following
    code in our `app.constants.js` file. Check the comments with the code to get a
    clear idea how the code will work:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Playing the game
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you correctly integrated the code and your HTML file now looks similar to
    the following, you can now run the HTML file:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'After running the HTML file on your browser, you will be able to see the following
    screen:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '![Playing the game](img/B04720_08_02.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
- en: Congratulations! You have successfully built Rat-man!
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: To play the game, click anywhere on the canvas and use the arrow keys for your
    rat's movement.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'If you lose all your lives, you will see the following screen:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '![Playing the game](img/B04720_08_03.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
- en: 'If you win, you will see the following screen:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '![Playing the game](img/B04720_08_04.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
- en: Summary
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have built the Rat-man! I hope that you are now playing the game that you
    have built. If you cannot play the game after coding for hours, don't worry. Keep
    calm and try again. The whole source code and required images are included in
    the book. You can download and run it. However, before doing this, I would suggest
    you to try at least twice. Let's move on to [Chapter 9](ch09.html "Chapter 9. Tidying
    up Your Code Using OOP"), *Tidying up Your Code Using OOP*, for a better idea
    about making files or folders and accessing them.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经建立了老鼠人！我希望你现在正在玩你建立的游戏。如果你编码了几个小时后无法玩游戏，不要担心。保持冷静，再试一次。整个源代码和所需的图像都包含在这本书中。你可以下载并运行它。然而，在这之前，我建议你至少尝试两次。让我们继续阅读[第9章](ch09.html
    "第9章。使用OOP整理您的代码")，“使用OOP整理您的代码”，以更好地了解如何创建文件或文件夹并访问它们。
