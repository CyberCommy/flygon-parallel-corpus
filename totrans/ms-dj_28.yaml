- en: Appendix G. Developing Django with Visual Studio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Regardless of what you might hear trolling around the Internet, Microsoft Visual
    Studio (VS) has always been an extremely capable and powerful Integrated Development
    Environment (IDE). As a developer for multiple platforms, I have dabbled in just
    about everything else out there and have always ended up back with VS.
  prefs: []
  type: TYPE_NORMAL
- en: 'The biggest barriers to wider uptake of VS in the past have been (in my opinion):'
  prefs: []
  type: TYPE_NORMAL
- en: Lack of good support for languages outside of Microsoft's ecosystem (C++, C#
    and VB)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cost of the fully featured IDE. Previous incarnations of Microsoft 'free' IDE's
    have fallen a bit short of being useful for professional development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With the release of Visual Studio Community Editions a few years ago and the
    more recent release of Python Tools for Visual Studio (PTVS), this situation has
    changed dramatically for the better. So much so that I now do all my development
    in VS-both Microsoft technologies and Python and Django.
  prefs: []
  type: TYPE_NORMAL
- en: I am not going to go on with the virtues of VS, lest I begin to sound like a
    commercial for Microsoft, so let's assume that you have at least decided to give
    VS and PTVS a go.
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, I will explain how to install VS and PTVS on your Windows box and then
    I will give you a quick overview of all the cool Django and Python tools that
    you have at your disposal.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Visual Studio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Before you start**'
  prefs: []
  type: TYPE_NORMAL
- en: Because it's still Microsoft, we can't get past the fact that VS is a big install.
  prefs: []
  type: TYPE_NORMAL
- en: 'To minimize the chances of grief, please:'
  prefs: []
  type: TYPE_NORMAL
- en: Turn off your antivirus for the duration of the install
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure you have a good Internet connection. Wired is better than wireless
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pause other memory/disk hogs like OneDrive and Dropbox
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Close every application that doesn't have to be open
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you have taken careful note of the preceding warning, jump on to the Visual
    Studio website ([https://www.visualstudio.com/](https://www.visualstudio.com/))
    and download the free Visual Studio Community Edition 2015 (*Figure G.1*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Visual Studio](img/image_28_001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.1: Visual Studio Downloads'
  prefs: []
  type: TYPE_NORMAL
- en: 'Launch the downloaded installer file, make sure the default install option
    is selected (*Figure G.2*) and click install:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Visual Studio](img/image_28_002.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.2: Visual Studio''s default install'
  prefs: []
  type: TYPE_NORMAL
- en: Now's the time to go make yourself a coffee. Or seven. Microsoft, remember-it's
    going to take a while. Depending on your Internet connection this can take anywhere
    from 15 minutes to more than an hour.
  prefs: []
  type: TYPE_NORMAL
- en: In a few rare cases it will fail. This is always (in my experience) either forgetting
    to turn antivirus off or a momentary dropout in your Internet connection. Luckily
    VS's recovery process is pretty robust and I have found rebooting and restarting
    the install after a failure works every time. VS will even remember where it's
    up to, so you don't have to start all over again.
  prefs: []
  type: TYPE_NORMAL
- en: Install PTVS and Web Essentials
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once you have installed VS, it''s time to add Python Tools for Visual Studio
    (PTVS) and Visual Studio Web Essentials. From the top menu, select `Tools > Extensions
    and Updates` (*Figure G.3*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Install PTVS and Web Essentials](img/image_28_003.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.3: Install Visual Studio''s extension'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the Extensions and Updates window opens, select **Online** from the dropdown
    on the left to go to the VS online application gallery. Type `python` in the search
    box on the top right and the PTVS extension should appear on the top of the list
    (*Figure G.4*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Install PTVS and Web Essentials](img/image_28_004.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.4: Install PTVS extension'
  prefs: []
  type: TYPE_NORMAL
- en: 'Repeat the same process for VS Web Essentials (*Figure G.5*). Note that, depending
    on the VS build and what extensions have been installed previously, Web Essentials
    may already be installed. If this is the case, the **Download** button will be
    replaced with a green tick icon:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Install PTVS and Web Essentials](img/image_28_005.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.5: Install Web Essentials extension'
  prefs: []
  type: TYPE_NORMAL
- en: Creating A Django project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the great things about using VS for Django development is that the only
    thing you need to install other than VS is Python. So if you followed the instructions
    in [Chapter 1](ch01.xhtml "Chapter 1. Introduction to Django and Getting Started"),
    *Introduction to Django and Getting Started*, and have installed Python, there
    is nothing else to do-VS takes care of the virtual environment, installing any
    Python modules you need and even has all of Django's management commands built
    in to the IDE.
  prefs: []
  type: TYPE_NORMAL
- en: To demonstrate these capabilities, lets create our `mysite` project from [Chapter
    1](ch01.xhtml "Chapter 1. Introduction to Django and Getting Started"), *Introduction
    to Django and Getting Started*, but this time we will do it all from inside VS.
  prefs: []
  type: TYPE_NORMAL
- en: Start a Django project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Select `File > New > Project` from the top menu and then select a Python web
    project from the dropdown on the left. You should see something like *Figure G.6*.
    Select a Blank Django Web Project, give your project a name and then click OK:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Start a Django project](img/image_28_006.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.6: Create a blank Django project'
  prefs: []
  type: TYPE_NORMAL
- en: 'Visual Studio will then display a popup window saying that this project requires
    external packages (*Figure G.7*). The simplest option here is to install directly
    into a virtual environment (option 1), but this will install the latest version
    of Django, which at the time of writing is 1.9.7\. As this book is for the 1.8
    LTS version we want to select option 3 **I will install them myself** so we can
    make the necessary changes to the `requirements.txt` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Start a Django project](img/image_28_007.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.7: Install external packages'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the project has installed, you will notice in Solution Explorer on the
    right of the VS screen the complete Django project structure has been created
    for you. Next step is to add a virtual environment running Django 1.8\. At the
    time of writing the latest version is 1.8.13, so we have to edit our `requirements.txt`
    file so the first line reads:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Save the file and then right click **Python Environments** in your Solution
    Explorer and select **Add Virtual Environment...** (*Figure G.8*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Start a Django project](img/image_28_008.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.8: Add virtual environment'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the popup window, change the default environment name from **env** to something
    more meaningful (if you are following on from the example in [Chapter 1](ch01.xhtml
    "Chapter 1. Introduction to Django and Getting Started"), *Introduction to Django
    and Getting Started*, use `env_mysite`). Click **Create** and VS will create a
    virtual environment for you (*Figure G.9*):'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You don't have to explicitly activate a virtual environment when using VS-any
    code you run will automatically run in the active virtual environment in Solution
    Explorer.
  prefs: []
  type: TYPE_NORMAL
- en: This is really useful for cases like testing code against Python 2.7 and 3.4-you
    just have to right click and activate whichever environment you want to run.
  prefs: []
  type: TYPE_NORMAL
- en: '![Start a Django project](img/image_28_009.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.9: Create the virtual environment'
  prefs: []
  type: TYPE_NORMAL
- en: Django development in Visual Studio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Microsoft have put a lot of effort into ensuring developing Python applications
    in VS is as simple and headache free as possible. The killer feature for beginning
    programmers is full IntelliSense for all Python and Django modules. This will
    accelerate your learning more than any other feature as you don't have to go through
    documentation looking for module implementations.
  prefs: []
  type: TYPE_NORMAL
- en: 'The other major aspects of Python/Django programming that VS makes really simple
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: Integration of Django management commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Easy installation of Python packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Easy installation of new Django apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration of Django management commands
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'All of Django''s common management commands are available from the Project
    menu (*Figure G.10*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Integration of Django management commands](img/image_28_010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.10: Common Django commands on Project menu'
  prefs: []
  type: TYPE_NORMAL
- en: From this menu you can run migrations, create superusers, open the Django shell
    and run the development server.
  prefs: []
  type: TYPE_NORMAL
- en: Easy installation of Python packages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Python packages can be installed directly into any virtual environment from
    Solution Explorer, just right click on the environment and select **Install Python
    Package...** (*Figure G.11*).
  prefs: []
  type: TYPE_NORMAL
- en: Packages can be installed with either `pip` or `easy_install`.
  prefs: []
  type: TYPE_NORMAL
- en: Easy installation of new Django apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'And finally, adding a new Django app to your project is as simple as right
    clicking on your project and selecting `Add > Django app...` (*Figure G.12*).
    Give your app a name and click **OK** and VS will add a new app to your project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Easy installation of new Django apps](img/image_28_011.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.11: Install Python package'
  prefs: []
  type: TYPE_NORMAL
- en: '![Easy installation of new Django apps](img/image_28_012.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure G.12: Add a Django app'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is only a quick overview of the things you can do with Visual Studio;
    just to get you started. Other things worth exploring are:'
  prefs: []
  type: TYPE_NORMAL
- en: VS's repository management including full integration with local Git repos and
    GitHub.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deployment to Azure with a free MSDN developer account (only supports MySQL
    and SQLite and the time of writing).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inbuilt mixed-mode debugger. For example, debug Django and JavaScript in the
    same debugger.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inbuilt support for testing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Did I mention full IntelliSense support?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
