- en: Assessments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 1, Introduction to Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Yes, Python is an open source language in the truest sense. The difference between
    Python and other open source languages is we can literally see the source code
    of every Python module and even modify it on the fly.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Python programming language is managed by the Python Software Foundation
    whose objective is to promote, protect, and advance the Python programming language.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No, Java is a faster language.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python is an object-oriented language.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, Python is very easy to learn because of its simplicity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python plays amazingly well in the cyber security space. Most  offensive and
    defensive tools are written in Python. Most exploits are written in Python. Most
    of the fuzzes are written in Python. Python is a wonderful asset to have in your
    arsenal, if you are working in the cyber security space.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Times and technologies are changing and rapidly evolving. Right now, ML and
    AI are new, but 10 years down the line many offensive security tools may be revamped
    and will work with AI and ML capabilities. It does no harm to start early.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 2, Building Python Scripts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Python generator can be used against all real-world problems when you deal
    with streams of data – possibly infinite. For example dealing with real time streaming.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, we can do that. Try that, it's very handy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, we can try that as well.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 3, Concept Handling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using it as an object-oriented language makes it very reusable. Any security
    tool written in Python follows object-oriented pattern. Nmap library, Scapy, Selenium,
    and so on are all written as object-oriented utilities.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: XML can be parsed with LXML or the Etree module whereas CSV can be parsed with
    CSV, pandas module.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, we can try that. I leave that as a small task.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A method decorator is a signature that binds a method with some unique capability.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 4, Advanced Python Modules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can make use of a Python library called `billiard`. It's very powerful.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We may want to use threads, where we don't wish to have parallel execution,
    but we would want to control execution of a method. For example, if we wanted
    a method X to be executed for 10 seconds and terminate after that, we can invoke
    it with a thread and call join for 10 seconds.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 5, Vulnerability Scanner Python - Part 1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We are doing so to have control over the methods. We usually want a method X
    to be executed for N seconds and be terminated after that. The same thing can
    be better achieved with a combination of threads and multiprocessing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can make use of the `multiprocess.pool` library to see whether we get better
    results and, furthermore, increasing the processor cores is always a good option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes, there is another Python-Nmap utility, called `libnmap`: [https://libnmap.readthedocs.io/en/latest/process.html](https://libnmap.readthedocs.io/en/latest/process.html).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, we can. Please explore more on this.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 6, Vulnerability Scanner Python - Part 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Msfrpc. Although it is a great utility, I personally encountered issues with
    it when I invoked it concurrently over multiple sessions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Give a try to the `Multiprocess.pool` module and increase processor cores.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, and of course we can.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, the scanner is very scalable and flexible. Any CLI or web tool can integrate
    with it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 7, Machine Learning and Cybersecurity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can take a look at ExploitDB and see various associated vulnerabilities.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Big-data infrastructure can be defined as the deployment of multiple computers
    to form a cluster that takes a file and processes it with parallel processing.
    Apache Hadoop is affected with multiple vulnerabilities and the same can be checked
    on ExploitDB.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AI mimics the human brain and works as neurons do, whereas machine learning
    doesn't.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deep Exploit is one of the tools in offensive security community that uses ML,
    it makes best use  both PT and ML domains.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 8, Automating Web Application Scanning - Part 1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can write Burp Suite extensions in Jyton.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Try automating SQL-MAP Cli with simple terminal automation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Automated web application scanning surely offers time saving, but there is a
    trade-off with quality. Additionally, for business logic check, no automation
    can help.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 9, Automating Web Application Scanning - Part 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can automate XSS detection, SSL strip, parameter pollution, and much more.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can integrate Burp Suite API and our custom scanner or can use Burpsuite
    API with Nessus API.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 10, Building a Custom Crawler
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Simulated crawling with Phantoms, Selenium would be of great help to achieve
    the JavaScript and Ajax calls
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can tale the injection points as the result and start fuzzing them using
    SQL, XSS, and other payloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 11, Reverse Engineering Linux Applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can explore in the direction of terminal automation, and try to automate/control
    the execution of evans debugger, as we did with Metasploit automation using `pexpect`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We should explore more on how to evade ASRL protection.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This would be a good place to start : [https://sploitfun.wordpress.com/2015/05/08/bypassing-aslr-part-i](https://sploitfun.wordpress.com/2015/05/08/bypassing-aslr-part-i/).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 12, Reverse Engineering Windows Applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Again, Terminal automation is the answer. Additionally, Olly debugger comes
    with a Windows API that can be used to achieve automation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This is one of the good places to start: [https://bytesoverbombs.io/bypassing-dep-with-rop-32-bit-39884e8a2c4a](https://bytesoverbombs.io/bypassing-dep-with-rop-32-bit-39884e8a2c4a).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is primarily due to different stack and OS kernel implementations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 13, Exploit Development
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SQLI, XSS, and CSRF can all be exploited with the approach described.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can make it as generic as possible, and try it against multiple applications
    to see its effectiveness.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 14, Cyber Threat Intelligence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One way would be to add more context to IOCs by interfacing with external websites
    such as virus-total and Cymon. To have better performance, we can think of increasing
    the processor cores.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, we can leverage celery and it would serve very well to execute scheduled
    jobs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 15, Other Wonders of Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Yes, we can. We can use Python's `smtp` module to achieve the same.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One way can be to use email as the delivery method. Additionally, we must also
    send the window information where the key is pressed, to have a complete context.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Making use of a custom generic algorithm that generates cryptic Python code
    can be a good approach to improve the shell code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
