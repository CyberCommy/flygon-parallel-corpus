- en: Chapter 1. Getting Started
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter is intended as an introduction to the Navicat Database Administration
    tool with a **graphical user interface** (**GUI**), and describes how to set up
    different kinds of connections and basic settings to advanced configurations,
    such as SSH, to an installed MySQL server. In this chapter, you will learn about
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Different editions of Navicat, which is good for what and for whom
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up a basic connection to a MySQL server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up advanced connections, such as SSH or HTTP tunneling
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter Navicat
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Navicat** is not only a powerful, sophisticated, and easy-to-use database
    administration tool with a GUI , but also a very useful aide for developers who
    work on database-driven applications. It is available for Windows, Mac, and Linux.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Navicat** **for** **MySQL** is the first member of the Navicat family with
    advanced features allowing you to import/export data, back up, or transfer an
    entire database to another server and design queries in a GUI with point-and-click
    and drag-and-drop features.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Navicat** **Premium** is the ultimate member of the family, an all-in-one
    database administration, and migration tool combining all Navicat versions enabling
    the user to connect to MySQL, SQL Server, SQLite, Oracle, and PostgreSQL databases
    simultaneously within a single application, making database administration of
    multiple brands of databases substantially easier.'
  prefs: []
  type: TYPE_NORMAL
- en: While databases other than MySQL are outside the scope of this book, you may
    want to check out other titles from Packt, such as those on Oracle database ([www.packtpub.com/books/oracle-database](http://www.packtpub.com/books/oracle-database))
    and Microsoft SQL Server ([www.packtpub.com/books/microsoft-sql-server](http://www.packtpub.com/books/microsoft-sql-server)).
  prefs: []
  type: TYPE_NORMAL
- en: Navicat is not a free product, but you can easily obtain a 30-day evaluation
    from the website of PremiumSoft, the company that created the product and brought
    it to the market.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the book, the examples will be shown using Navicat Premium version
    10.0.9, although you can follow every example and exercise using Navicat for MySQL
    10.0.9\. Even if you have a version of Navicat as old as v.8.0, you should be
    able to keep up with the book for most of the examples.
  prefs: []
  type: TYPE_NORMAL
- en: To download Navicat, you can go to [www.navicat.com/download/download.html](http://www.navicat.com/download/download.html)
    and get either Navicat for MySQL or Navicat Premium. The most up-to-date version
    was 10.0.9 at the time of this writing.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up a connection to the database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this point, I assume you already have your MySQL server installed, set up,
    and running as well as Navicat, so that we can get our hands dirty with Navicat
    right away.
  prefs: []
  type: TYPE_NORMAL
- en: To launch Navicat in Windows 7 and earlier, go to **Start menu** | **All Programs**
    | **PremiumSoft** and click on the version of Navicat you have installed on your
    PC.
  prefs: []
  type: TYPE_NORMAL
- en: If you're using a Mac, Navicat should simply be in your `Applications` folder
    unless you dragged and dropped it elsewhere from the installer window.
  prefs: []
  type: TYPE_NORMAL
- en: In order to define a new connection, go to the **File** menu or the **Connection**
    button, which is the first icon in the Navicat's main toolbar (or ribbon, as we
    might call it) and select **File** | **New Connection** | **MySQL** to open up
    the connection profile window titled **MySQL - New Connection**, where we can
    specify the settings for the connection we want to establish.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can refer to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up a connection to the database](img/7461EN_01_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As you can see in the second part of the screenshot, the **MySQL - New Connection**
    window is where you can specify the settings to define a connection. It has five
    tabs; the first of which is where you set the basic connection properties and
    it is sufficient in most cases, which are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Connection Name**: It is totally up to you, so you can enter any name to
    describe your connection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Host Name/IP Address**: It is exceedingly intuitive, where you can either
    enter the domain name of your database server or its IP address.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Port**: This field includes the TCP/IP port number of the MySQL server which
    in most cases is `3306`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User Name**: This field includes the database username (I''m going with `root`
    here which is the default admin user for my newly installed local server).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Password**: This field includes password for the above entered username.
    In fresh MySQL installations, `root` comes with a blank password, so if this is
    your first time connecting to the database server you just installed, you might
    want to leave this blank at this time as I will guide you how to modify all these
    settings at the end of the chapter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are connecting to a remote MySQL server, you must make sure that remote
    access privileges are granted for the username you will be using. In some cases
    where the MySQL service provider does not provide direct access to the server
    remotely, connecting via **Secure** **Shell** (**SSH**) or an HTTP tunnel might
    be an alternative solution. We'll see how to set up these kinds of connections
    respectively in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting via Secure Shell (SSH)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SSH is a command line tool to log into a server or another computer over a network
    in a secure manner to run commands on the remote machine or to transfer data.
    For increased security, SSH provides a strong authentication mechanism either
    by using a password or a public/private key pair also known simply as a public
    key.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to set up your connection to the MySQL server via SSH, first enter
    the basic connection settings as described in the previous section, then go to
    the **SSH** tab in the connection settings window, click on the checkbox labeled
    **Use SSH Tunnel,**and then enter the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Host Name/IP Address**: This field includes the address or the IP of the
    SSH server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Port**: This field includes the port number of the SSH server (the default
    is `22`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User Name**: This field includes the user of the SSH server, which is usually
    a UNIX machine and not a username of the database.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authentication method**: This field allows you to choose between **Password**
    authentication and **Public Key** authentication, whichever''s applicable.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Password** (if applicable): This field includes the password of the SSH user
    (not the database).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Private Key** (if applicable): This field appears if you choose the **Public
    Key** authentication, in which you need to specify the path to your private key
    file by clicking on the small rectangular button proceeding it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Passphrase** (if applicable): This field also shows up in the case of **Public
    key** authentication and is used in conjunction with the **Private Key**. It''s
    basically like a password, but it applies to your key and not an account.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting via an HTTP tunnel
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In some cases, it is not possible to connect to a server through any protocol
    but HTTP, especially when one party is behind a firewall. Some companies, for
    example, want to limit the Internet access of its users so that they are only
    able to browse the web, and do nothing else; no FTP, no instant messaging, and
    so on. This is where the HTTP tunneling comes in handy. It allows you to connect
    to a server (in this case MySQL) through the port `80` (the HTTP default) instead
    of `3306` or any other port.
  prefs: []
  type: TYPE_NORMAL
- en: 'To set up an HTTP connection, go through the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Upload the HTTP tunneling script which came with the Navicat installer to the
    web server where the MySQL server is located. It's a file called `ntunnel_mysql.php`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the tab named **HTTP** in the **MySQL - New Connection** window of Navicat.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enable the checkbox **Use HTTP Tunnel**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the URL of the tunneling script where you uploaded it (for example, [http://www.ozar.net/mysql/ntunnel_mysql.php](http://www.ozar.net/mysql/ntunnel_mysql.php)).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can check the **Encode outgoing query with base64** option if you know that
    the web server you uploaded the script has ModSecurity installed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the tunneling script is on a password protected server or your internet connection
    is over a proxy, you can provide the required authentication details under the
    **Authentication** or **Proxy** tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Please note that HTTP tunneling tab and SSH tunneling tab cannot be used at
    the same time. You need to choose one or the other.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Secure Sockets Layer (SSL)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Secure** **Socket** **Layer** (**SSL**) is a security protocol for establishing
    an encrypted link between a server and its clients, which ensures the privacy
    and integrity of all data transmission between the two parties.'
  prefs: []
  type: TYPE_NORMAL
- en: To use SSL in Navicat, you need to have an SSL certificate; you can obtain a
    free solution such as OpenSSL from [www.openssl.org](http://www.openssl.org) and
    install it on your local server, and configure your MySQL server for SSL and set
    up the server-side certificate for it. Finally, you can set up the client certificate,
    which you will then be able to obtain from your SSL server. Complete instructions
    on how to install and set up OpenSSL for MySQL and the certificate for Navicat
    is explained in the Navicat manual.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced settings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Navicat provides an option for setting advanced database properties which you
    can control by clicking on the **Advanced** tab in the **MySQL - New Connection**
    window.
  prefs: []
  type: TYPE_NORMAL
- en: The first field labeled, **Setting Save Path,** allows you to save your settings
    at a location of your local drive, which you specify. You can tweak some other
    settings, such as overriding the character encoding, pinging intervals to the
    database server, auto-connections, using sockets file, that is, `mysql.sock`,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced settings](img/7461EN_01_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The most useful feature here is the ability to hide and show certain databases
    on the left pane of Navicat's main window where all your connection profiles and
    databases that belong to them are listed in a tree view. This feature is activated
    as soon as you check the **Use advanced connections** checkbox.
  prefs: []
  type: TYPE_NORMAL
- en: The list box titled **Databases** becomes active and every item in the list
    has a slightly smaller checkbox next to it. The databases whose checkboxes you
    highlight will be the ones that will appear next time you open the connection.
    You can also individually specify a username and password for each database. This
    is especially useful if you have more than one account with different privileges
    for a given database.
  prefs: []
  type: TYPE_NORMAL
- en: You can also add or remove items to the list by using the buttons on the right-hand
    side.
  prefs: []
  type: TYPE_NORMAL
- en: Testing and saving your settings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we're done configuring the connection, all we need to do is to test
    the connection and click on **OK**. We can modify these settings at any time by
    right- clicking on the name of connection profile listed on the left pane and
    selecting **Connection Properties...** to bring back our connection profile window.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have laid the groundwork for the rest of the book, by learning
    how to set up connections from within Navicat to a MySQL server in a variety of
    ways—from using simple customary parameters to secure configurations, such as
    SSH or HTTP tunneling to overcome limited Internet access situations.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will start working with databases, and I will guide
    you step-by-step in dealing with database objects, such as tables, views, functions,
    procedures, and designing queries using Navicat's sophisticated yet easy-to-use
    and addictive tools. The fun is just beginning.
  prefs: []
  type: TYPE_NORMAL
