- en: Cyber Attack Management with Armitage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So far, throughout this book, you have learned the various basic and advanced
    techniques of using Metasploit in all stages of the penetration testing life cycle.
    We have performed all this using the Metasploit command-line interface `msfconsole`.
    Now that we are well familiar with using `msfconsole`, let''s move on to use a
    graphical interface that will make our penetration testing tasks even easier.
    In this chapter, we''ll cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: A brief introduction to Armitage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firing up the Armitage console
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanning and enumeration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finding suitable attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploiting the target
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is Armitage?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In simple terms, Armitage is nothing but a GUI tool for performing and managing
    all the tasks that otherwise could have been performed through `msfconsole`.
  prefs: []
  type: TYPE_NORMAL
- en: Armitage helps visualize the targets, automatically recommends suitable exploits,
    and exposes the advanced post-exploitation features in the framework.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, Armitage uses Metasploit at its backend; so in order to use Armitage,
    you need to have a running instance of Metasploit on your system. Armitage not
    only integrates with Metasploit but also with other tools such as NMAP for advanced
    port scanning and enumeration.
  prefs: []
  type: TYPE_NORMAL
- en: Armitage comes preinstalled on a default Kali Linux installation.
  prefs: []
  type: TYPE_NORMAL
- en: Starting the Armitage console
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we actually start the Armitage console, as a prerequisite, first we
    need to start the `postgresql` service and the Metasploit service, as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f990c305-31c8-4aff-9fef-4751472e907d.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the postgresql and Metasploit services are up and running, we can launch
    the Armitage console by typing `armitage` on the command shell, as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4b099e6c-7f6f-4b37-aedf-ef27e01b7f43.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Upon the initial startup, the `armitage` console appears as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/62f3efc3-139b-401a-a872-17d99c08a781.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that the Armitage console is up and running, let''s add hosts we wish to
    attack. To add new hosts, click on the Hosts menu, and then select the Add Hosts
    option. You can either add a single host or multiple hosts per line, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/26aec031-c62e-43ab-9a77-5251d9560021.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Scanning and enumeration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have added a target host to the Armitage console, we''ll perform
    a quick port scan to see which ports are open here. To perform a port scan, right-click
    on the host and select the scan option, as shown in the following screenshot.
    This will list down all the open ports on the target system in the bottom pane
    of the Armitage console:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7d020987-8ce6-4267-9268-d8a89b7b3d0c.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As we have seen earlier, Armitage is also well-integrated with NMAP. Now, we''ll
    perform an NMAP scan on our target to enumerate services and detect the version
    of the remote operating system, as shown in the following screenshot. To initiate
    the NMAP scan, click on the Hosts option, select the NMAP scan, and then select
    the Quick Scan (OS Detect) option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7c550612-8c48-4413-8341-ac30409ea8da.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As soon as the NMAP scan is complete, you'll notice the Linux icon on our target
    host.
  prefs: []
  type: TYPE_NORMAL
- en: Find and launch attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous sections, we added a host to the Armitage console and performed
    a port scan and enumeration on it using NMAP. Now, we know that it''s running
    a Debian-based Linux system. The next step is to find all possible attacks matching
    our target host. In order to fetch all applicable attacks, select the Attacks menu
    and click on Find Attacks. Now, the Armitage console will query the backend database
    for all possible matching exploits against the open ports that we found during
    enumeration earlier, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2a574a7f-6b1f-4a98-b21a-e2eee954cf59.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the Armitage console finishes querying for possible exploits, you can
    see the list of applicable exploits by right-clicking on the host and selecting
    the Attack menu. In this case, we''ll try to exploit the `postgresql` vulnerability
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c76ece10-3986-45f4-b02f-902d74b89bd7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Upon selecting the attack type as PostgreSQL for Linux Payload Execution, we
    are presented with several exploit options as shown in the following screenshot.
    We can leave it as `default` and then click on the Launch button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1d9aec81-eb1f-49f1-9c84-62900a61e5ea.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As soon as we launched the attack, the exploit was executed. Notice the change
    in the host icon, as shown in the following screenshot. The host has been successfully
    compromised:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/70eac7e2-a4db-48c3-85b7-249e91fbde04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that our host has been compromised, we have got a reverse connection on
    our system. We can further interact with it, upload any files and payloads, or
    use any of the post-exploitation modules. To do this, simply right-click on the
    compromised host, select the Shell 1 option, and select the Interact option, as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/78029dba-3cfc-48b1-ba28-b96a21cc6bb3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'For interacting with the compromised host, a new tab named "Shell 1" opened
    in the bottom pane of the Armitage console, as shown in the following screenshot.
    From here, we can execute all Linux commands remotely on the compromised target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2880b1e3-356f-4fcf-8bf7-6bfa54bcebcb.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you became familiar with using the Armitage tool for cyber
    attack management using Metasploit at the backend. The Armitage tool can definitely
    come in handy and save a lot of time while performing penetration tests on multiple
    targets at a time. In the next and the concluding chapter, we'll learn about further
    extending the Metasploit Framework by adding custom exploits.
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Try to explore in detail the various features of Armitage, and use it to compromise
    any of the target Windows hosts.
  prefs: []
  type: TYPE_NORMAL
