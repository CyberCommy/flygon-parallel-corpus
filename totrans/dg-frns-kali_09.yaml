- en: Network and Internet Capture Analysis with Xplico
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Xplico is an open source, GUI **Network Forensics Analysis Tool** (**NFAT**)
    that focuses on extracting artifacts from network and internet captures.
  prefs: []
  type: TYPE_NORMAL
- en: Captures of network and internet traffic are obtained directly in Xplico using
    its live acquisition feature but can also be done using tools within Kali Linux
    such as Wireshark and Ettercap. These network acquisition files are saved as `.pcap`
    or **packet capture** files that are then uploaded to Xplico and decoded automatically
    using its IP decoder and decoder manager components.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the protocols that we can investigate using Xplico include, but are
    not limited to:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transmission Control Protocol** (**TCP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User Datagram Protocol** (**UDP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hypertext Transfer Protocol** (**HTTP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**File Transfer Protocol** (**FTP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Trivial FTP** (**TFTP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Session Initiation Protocol** (**SIP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Post Office Protocol** (**POP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Internet Map Access Protocol** (**IMAP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Simple Mail Transfer Protocol** (**SMTP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Data contained in network and internet packet captures, and even live acquisition,
    can contain artifacts such as:'
  prefs: []
  type: TYPE_NORMAL
- en: HTTP traffic such as websites browsed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Email
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facebook chats
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RTP and VoIP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Printed files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Traffic encrypted using **Secure Sockets Layer** (**SSL**) cannot be currently
    viewed with Xplico.
  prefs: []
  type: TYPE_NORMAL
- en: Software required
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Xplico comes with many versions of Linux. Xplico usually requires some updates
    to run, depending on the versions of Kali used. For this chapter I recommend using
    Kali Linux 2016.1 or 2016.2\. I also recommend using Kali in a virtual environment
    when using Xplico as incorrectly updating Kali could *break* it. Users may also
    wish to use the snapshot feature before updating Kali Linux which saves the current
    working state of the machine that can be easily rolled back to, in the event that
    the distribution breaks.
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux 2016.1 can be downloaded from [https://cdimage.kali.org/kali-2016.1/](https://cdimage.kali.org/kali-2016.1/).
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux 2016.2 can be downloaded from [https://cdimage.kali.org/kali-2016.2/](https://cdimage.kali.org/kali-2016.2/).
  prefs: []
  type: TYPE_NORMAL
- en: Should you run into difficulties updating Kali or running Xplico (which happens
    sometimes) consider downloading and running DEFT Linux 8.2 in a virtual environment.
    Beginners may find that Xplico may be easier to work with in DEFT Linux as there
    are GUI menu items to start the Apache and Xplico services options, whereas these
    have to be typed into the Terminal in Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: DEFT Linux 8.2 can be downloaded from [http://na.mirror.garr.it/mirrors/deft/](http://na.mirror.garr.it/mirrors/deft/).
  prefs: []
  type: TYPE_NORMAL
- en: Starting Xplico in Kali Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Updating Kali is simple as the commands remain the same when updating throughout
    different versions (2016.x and 2017.x).
  prefs: []
  type: TYPE_NORMAL
- en: In a new Terminal, we type `apt-get update` and press *Enter*. The `sudo apt-get
    update` command may have to be used to provide admin privileges if the former
    does not run successfully.
  prefs: []
  type: TYPE_NORMAL
- en: 'We then attempt to install Xplico by typing `apt-get install xplico` (or `sudo
    apt-get install xplico`):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/95daa04d-b9dd-4320-a77a-13e394a4af4d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If an error is encountered, as seen in the following screenshot, we must update
    the Kali Linux repositories by first updating our sources list and then running
    the `apt-get  update` command again. To update the sources list, type the `leafpad
    /etc/apt/sources.list` command which opens up the file for us to edit:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/32b35bcc-79c4-40c2-907a-39bc8c15228b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'At the top of the file, enter the following repository location:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Once the repository location is entered, click File, then Save, and then close
    the list.
  prefs: []
  type: TYPE_NORMAL
- en: Be sure to remove any `#` symbols in front of the text as this ignores any text
    that follows.
  prefs: []
  type: TYPE_NORMAL
- en: 'After closing the list file, return to the Terminal and run the `apt-get update`
    command once more:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/36fcdc48-7e5f-4e86-b986-782d1d595a98.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After Kali has been updated, run the `apt-get install xplico` command. Be sure
    to press *Y* to continue when prompted:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/54a1e65a-a309-4584-b5de-164b7accd98f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once Xplico has been installed, we must start the Apache 2 and Xplico services.
    In the Terminal, enter the following two commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`service apache2 start`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`service xplico start`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/4e96ad8d-d35b-4524-b41f-44b371b2a48d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once these steps have been completed, the Xplico can now be accessed by clicking Applications
    | 11 - Forensics | xplico:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9c98618a-8df1-4e09-8940-db905bfe7631.png)'
  prefs: []
  type: TYPE_IMG
- en: A browser window opens immediately after with the URL, `localhost:9876/users/login`.
  prefs: []
  type: TYPE_NORMAL
- en: Starting Xplico in DEFT Linux 8.2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As mentioned earlier, DEFT Linux 8.2 should be run as a virtual host. This process
    is not as in-depth as installing Kali Linux (as covered in [Chapter 2](d2fe7988-be5c-490c-a3b8-22a9db9770b7.xhtml),
    *Installing Kali Linux*) because DEFT can be used as a live forensic acquisition
    distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the DEFT Linux ISO image had been downloaded (from [http://na.mirror.garr.it/mirrors/deft/](http://na.mirror.garr.it/mirrors/deft/)),
    open VirtualBox, click New, and enter the following details:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Name: `Deft 8.2`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Type: Linux'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Version: Ubuntu (64-bit) (Verify that the details entered, match those in the
    screenshot)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/dd5593a9-c678-4fce-927f-1cdc1a3576e5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, after filling in the appropriate information, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Assign 4 or more GBs of RAM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leave the default option of Create a virtual hard disk now and click Create.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leave the default option of VDI (VirtualBox Disk Image) and click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leave the default option of Dynamically allocated, click Next, and click on
    Create.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the green start arrow on the VirtualBox Manager screen to start the VM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When prompted to Select start-up disk, click the browse-folder icon and browse
    to the downloaded DEFT Linux 8.2 ISO image, then click Start:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e7a4bb9-0f1f-4b56-a932-0691d1f4b2d9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This brings the user to the DEFT splash screen. Select English for your language
    and select DEFT Linux 8 live:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/109d8422-14e3-4c53-a079-c03a8a55fdb8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After DEFT Linux boots and loads the desktop, click the DEFT menu button on
    the lower left corner, then click the Service menu, and then click Apache start.
    Repeat this process to get to the Service menu and then click Xplico start:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0e3b18b5-ae1b-4a69-b94a-61878a5a112a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, start Xplico by clicking the DEFT button, then go to the DEFT menu,
    across to Network Forensics, and click Xplico:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5ae63c5f-1c43-4055-a0ba-b4d9c28b6116.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This brings us to the very same Xplico web interface GUI also available in
    Kali Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/203a61c6-c5a1-4fe1-a37f-7a6426235a8e.png)'
  prefs: []
  type: TYPE_IMG
- en: Packet capture analysis using Xplico
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whether using Kali Linux or DEFT Linux, for this chapter we will be using publicly-available,
    sample packet capture (`.pcap`) files that can be downloaded at [http://wiki.xplico.org/doku.php?id=pcap:pcap](http://wiki.xplico.org/doku.php?id=pcap:pcap).
  prefs: []
  type: TYPE_NORMAL
- en: 'The files needed are:'
  prefs: []
  type: TYPE_NORMAL
- en: DNS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MMS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Webmail: Hotmail/Live'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTTP (web)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SIP example 1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will also require an SMTP sample file available from the Wireshark sample
    captures page at [https://wiki.wireshark.org/SampleCaptures](https://wiki.wireshark.org/SampleCaptures).
  prefs: []
  type: TYPE_NORMAL
- en: HTTP and web analysis using Xplico
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this exercise, we upload the HTTP (web) (`xplico.org_sample_capture_web_must_use_xplico_nc.cfg.pcap`)
    sample packet capture file.
  prefs: []
  type: TYPE_NORMAL
- en: For this HTTP analysis, we use Xplico to search for artifacts associated with
    the HTTP protocol such as URLs, images from websites, and possible browser-related
    activities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once Xplico has been started, log in using the following credentials:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Username: `xplico`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Password: `xplico`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We then choose New Case from the menu on the left and select the Uploading
    PCAP capture file/s button as we will be uploading files and not performing live
    captures or acquisition. For each case we must also specify a Case name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/04b86553-c139-4e6f-891e-05ef94807e9f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the following screenshot, I have entered `HTTP-WEB` for the Case name. Click Create
    to continue. The case HTTPWEB has now been created. Click HTTPWEB to continue
    to the Session screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6a3d523a-7a8b-4313-b2a9-a7753643b773.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we create a new session for this instance of our case by clicking the New
    Session option in the menu to the left:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3f219cd2-8fe9-43a4-872e-45a7b64305b6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We give our session a name and click Create to continue:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/670b1932-4e7c-4245-9d2c-d9344bc0b5f1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Our new session has been created with the name HTTPWEB:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0de63e01-7954-4174-a10e-fe14336a042f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once our case and session details have been entered, we are presented with
    the main Xplico interface window, which displays the various categories of possible
    artifacts found, after our `.pcap` file has been uploaded and decoded including
    the HTTP, DNS, Web Mail and Facebook categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1fc45d73-d311-4841-bf02-a6cc5f6452c7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To upload our `.pcap` file, click the Browse... button in the Pcap set area
    to the top right, choose the downloaded (`xplico.org_sample_capture_web_must_use_xplico_nc.cfg.pcap`)
    `.pcap` file and then click the Upload button to begin the decoding process in
    Xplico:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0905ccff-6774-4775-b517-d34aba77a817.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The decoding process can take a while depending on the size of the `.pcap`
    file as this process decodes the `.pcap` file into easily searchable categories
    within Xplico. Once finished, the Status field in the Session Data area reads
    DECODING COMPLETED and also displays the details of the Case and Session name
    and **Capture** (**Cap**) start and end times:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f01eb87a-84f2-4ee6-940e-d66c71e09503.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After the decoding is completed, the results are then displayed in the various
    category areas. In the following screenshot we can see that there is an entry
    in the Undecoded category under Text flows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/54c75e4c-7182-4507-9669-0270126ef27e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To analyze the decoded results, we use the menu to the extreme left of the
    Xplico interface. Seeing that we have results listed in the Undecoded category,
    click Undecoded in the menu, which expands into the TCP-UDP and Dig sub-menus.
    Click the TCP-UDP sub-menu to explore further:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c66ae6d4-b6d1-4fde-b9c6-77ec6b2854bc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The TCP-UDP option reveals destination IP, port, date and time, duration of
    connection, and an info file with more details. The destination IP entries marked
    in red can be clicked and also explored further:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9fcfc359-7b0b-4efa-9106-5c2106a5065a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we click the first destination IP entry, `74.125.77.100`, we are prompted
    to save information details of this entry in a text file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ec9dbd23-a3b3-4710-8c40-b01dc9e76d24.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To view the contents of the file we can either open it directly from the saved
    location or use the `cat` command to display the contents within a Terminal by
    typing `cat /root/Downloads/undecoded_15.txt`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0ea813da-bbf8-4c4c-9f74-3f620bc0919e.png)'
  prefs: []
  type: TYPE_IMG
- en: The results displayed in the previous Terminal window show that a `.gif` image
    was viewed or downloaded on Wed 09 December, 2009.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also click the `info.xml` link under the Info column to obtain more
    information:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b4aeca0d-7d0d-4149-a229-c1eb9f9bbddd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The info.xml shows the source and destination IP addresses and port numbers.
    We can now explore all destination IP addresses and their respective `info.xml`
    files to gather more information for our case:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/24a32394-24b1-48a6-baa5-696f0541e482.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s go back to the Undecoded menu on the left and click the Dig sub-menu
    to explore our capture file further:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9b2f4663-0437-4c08-860e-f8907ccf7e4c.png)'
  prefs: []
  type: TYPE_IMG
- en: In the previous screenshot, the Dig sub-menu reveals several image artifacts
    in the form of `.gif`, `.tif`, and `.jpg` formats along with the dates viewed
    through an HTTP connection.
  prefs: []
  type: TYPE_NORMAL
- en: 'The images should be viewed and documented as part of our case findings:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/400a2af4-8a0f-461e-b72d-176213f12473.png)'
  prefs: []
  type: TYPE_IMG
- en: VoIP analysis using Xplico
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many organizations and even regular end users have implemented or used **VoIP**
    (**Voice over IP**) solutions mainly to reduce costs in voice and multimedia communication
    sessions that would have otherwise required the use of paid telephone lines. To
    use VoIP services we must use **SIP** (**Session Initiation Protocol**).
  prefs: []
  type: TYPE_NORMAL
- en: For this exercise, we will be using the SIP example 1 (`freeswitch4560_tosipphone_ok.pcap`)
    packet capture file to analyze VoIP services, if any.
  prefs: []
  type: TYPE_NORMAL
- en: 'As with our previous HTTP web analysis, a new case and session must be created
    with the relevant details for this new case:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Case name: `SIP_Analysis`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Session name: `Sip_File`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once the case and session has been created, browse to the `.pcap` file to be
    uploaded (`freeswitch4560_tosipphone_ok.pcap`) and click Upload to begin the decoding
    process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f2ebc82f-c832-4807-be36-dfb18064295a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After the file has been decoded, we can see that there are 2 results listed
    in the Calls category in the lower right corner:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4ba8c5f5-c015-4415-a2f7-e2389b70d480.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To begin exploring and analyzing the details of the VoIP calls, click the VoIP
    option on the menu to the left:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d491bd8e-35d1-4410-bacc-376d18a8418e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking the Sip sub-menu, we are presented with details of the calls. We can
    see that calls were made from `"Freeswitch" <sip:5555551212@192.168.1.111>` to
    `Freeswitch <sip:5555551212@192.168.1.112>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9a1b5c19-3783-470f-9178-7724209f694b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the Duration details (`0:0:19`) to analyze and explore further:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2b68a87a-ef13-4d8a-b9e7-3e9b85d213bb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let us first click on `cmd.txt` to view the information file and log:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/18cabebb-fc4f-483d-b230-f1fd6d4bc4a6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the previous screenshot, we can see details of the numbers in conversation,
    date, time, and duration. There is also an option to play the conversations on
    either end:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2732140b-29de-438b-a4b5-f4d065decbf8.png)'
  prefs: []
  type: TYPE_IMG
- en: Email analysis using Xplico
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Email uses different protocols to send and receive emails depending on the
    method used for sending, receiving, and storing/accessing emails. The three protocols
    used are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Simple Mail Transfer Protocol** (**SMTP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Post Office Protocol** (**POP3**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Internet Message Access Protocol** (**IMAP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SMTP uses port `25` and is used for sending emails.
  prefs: []
  type: TYPE_NORMAL
- en: POP3 uses port `110` and is used to retrieve emails by downloading them from
    the email server to the client. Microsoft Outlook is an example of a POP3 client.
  prefs: []
  type: TYPE_NORMAL
- en: IMAP4 uses port `143` and is similar to POP3 in that it retrieves email but
    leaves a copy of the email on the server and can be accessed anywhere through
    a web browser, commonly referred to as webmail. Gmail and Yahoo are examples of
    webmail.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this exercise we will be using two sample files:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The first file is the Webmail: Hotmail/Live `.pcap` file (`xplico.org_sample_capture_webmail_live.pcap`),
    which can be downloaded from [http://wiki.xplico.org/doku.php?id=pcap:pcap](http://wiki.xplico.org/doku.php?id=pcap:pcap).'
  prefs: []
  type: TYPE_NORMAL
- en: The second is the `smtp.pcap` file, which can be downloaded from [https://wiki.wireshark.org/SampleCaptures](https://wiki.wireshark.org/SampleCaptures).
  prefs: []
  type: TYPE_NORMAL
- en: 'For the analysis of the first `.pcap` file (Webmail: Hotmail/Live), I''ve created
    a case with the following details:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Case name: `Webmail_Analysis`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Session name: `WebmailFile`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/8e5ea0d1-c085-4657-9257-ac89cacf48f0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we take a closer look at the decoded results we can see that we now have
    several populated categories including the HTTP, DNS -ARP - ICMP v6, and FTP -
    TFTP - HTTP file:'
  prefs: []
  type: TYPE_NORMAL
- en: 'HTTP category:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/1eac96ad-509c-44df-a186-8bfd6854e4b7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Dns -Arp - Icmpv6 category:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/8b4aee65-0eba-43f8-8bed-064d8956b02e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'FTP - TFTP - HTTP file:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/db255d69-f10c-4382-a532-777886b65a49.png)'
  prefs: []
  type: TYPE_IMG
- en: Now that we have an idea of what artifacts exist, let us now use the menu to
    the left side to analyze the results further.
  prefs: []
  type: TYPE_NORMAL
- en: 'Clicking the Graphs menu on the left displays domain information including
    the hostname, **CName** (**Canonical Name**) entries, IP addresses of the host,
    and also the `info.xml` files for each entry, for more detailed information of
    source and address:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8f3057d8-c363-4f08-b134-b2fee10dd798.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The `info.xml` file (as shown in the following screenshot) for the first entry
    (`spe.atdmt.com`) reveals that a local IP (`ip.src`) of `10.0.2.15` is connected
    to the host with an IP (`ip.dst`) of `194.179.1.100` (also illustrated in the
    previous screenshot of IP field):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6908c524-f21c-4941-a0c9-6afded3b6f11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next we move on to the Web menu and down to the Site sub-menu. A list of web
    pages visited are displayed along with the date and time accessed. We can see
    the first three entries belong to the domain `mail.live.com` and the fourth and
    fifth, `msn.com`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7fcdc467-40d9-47d7-b31b-767e668e9c70.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can examine the first Site entry by clicking on the `info.xml`. Under the
    HTTP section we can see that the Mozilla Firefox browser was used and the `sn118w.snt118.mail.live.com`
    host accessed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c60dffcc-e414-44ff-9a4d-eace0b44ab9b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Close the `info.xml` file and select the Image button, then click Go to display
    any images found:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c7bf864f-b18e-4445-adab-4e363e161471.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Image search results display several images and icons found. Click through
    the list to view the images:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/04b415ce-be15-499a-8513-5a966870988d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can also view found images by returning to the Web menu to the left and
    then clicking the Images sub-menu. This presents us with a graphical grouping
    of the images with links to their respective pages also:'
  prefs: []
  type: TYPE_NORMAL
- en: '>![](img/835060f0-1696-43a1-855e-5fa5a8b22c5e.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Moving down the main menu to the left, click the Share menu and then click
    the HTTP file sub-menu. Here we are presented with two items that we can investigate
    further by clicking their `info.xml` files:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b4539261-eab3-4fd7-9e66-4b43817ed09c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'By clicking the `info.xml` file of the `abUserTile.gif`, we can see that this
    was accessed from host `194.224.66.18`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bb037101-26a3-4025-9fe2-034e7d965d18.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the Undecoded menu and HTTP sub-menu we also have HTTP information about
    Destination IP `194.224.66.19`. Try exploring this further by clicking the `info.xml`
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0f81f65f-213b-4524-ae9c-92e47b677f4a.png)'
  prefs: []
  type: TYPE_IMG
- en: SMTP exercise using Wireshark sample file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this example, we use the SMTP sample capture file downloaded from the Wireshark
    samples link at the beginning of this section.
  prefs: []
  type: TYPE_NORMAL
- en: 'I''ve created a case with the following details as seen in the Session Data
    section of the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Case name: SMTP'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Session name: `SMTPfile`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Looking at the lower right corner of the screen we can see that there is an
    item in the Unread field of the Emails category:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e16c3e06-7225-4fb2-a710-725c764d4497.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Knowing that we are analyzing and investigating emails, we can go directly
    to the Mail menu and Email sub-menu on the left of the interface. This shows us
    that an email with no subject was sent by `gurpartap@patriots.in` to `raj_deo2002in@yahoo.co.in`.
    Click the -(no subject)- field to examine the email further:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9c56d86e-1994-43cb-8109-fe9740659493.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After clicking the -(no subject)- field, we can now see the contents of the
    email:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6fdc4e7f-bbdf-4402-96a9-2341105ccaba.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I hope you enjoyed the exercises in this chapter as much as I did. Although
    some of us may have had difficulties in running Xplico due to updates and repository
    issues, I encourage you try Xplico on DEFT Linux 8.2 as Xplico can be a very useful
    GUI tool in decoding internet and network traffic. As we have seen and done in
    this chapter, Xplico can be used for HTTP, VoIP, and email analysis, but can also
    perform MMS, DNS, Facebook, and WhatsApp chat analysis. I encourage you try to
    download and analyze more sample files from the Xplico and Wireshark sample capture
    pages to become more familiar with analysis and examination using Xplico.
  prefs: []
  type: TYPE_NORMAL
- en: Let's move on to another all-in-one investigative tool now, the digital forensics
    framework, also known as **DFF**. See you in [Chapter 10](0cb10e02-861e-403c-926b-10645d54c4fd.xhtml),
    *Revealing Evidence Using DFF*.
  prefs: []
  type: TYPE_NORMAL
