- en: Appendix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The main aim of this book is to get readers acquainted with as much of Ionic
    as possible. So, I have followed an incremental approach from Chapter 1 to Chapter
    11, from the basics of Cordova to building an app with Angular Ionic and Cordova.
    We were pretty much focused on learning Ionic with the bare minimums.
  prefs: []
  type: TYPE_NORMAL
- en: In this appendix, I will show a few more options of the Ionic CLI and Ionic
    Cloud that you can explore.
  prefs: []
  type: TYPE_NORMAL
- en: Ionic CLI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ionic CLI is growing more powerful day by day. Since we have been using Ionic
    CLI 2.1.14 throughout the book, I will be talking about the options from the same.
    Ionic CLI 2.2.2 or higher should also have almost the same options.
  prefs: []
  type: TYPE_NORMAL
- en: Ionic login
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can log in to your Ionic Cloud account in any one of three ways.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, using prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Second, without prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: And finally, using environment variables. You can set `IONIC_EMAIL` and `IONIC_PASSWORD`
    as environment variables and Ionic CLI will pick them up, without prompting. This
    could be somewhat an unsafe option, as the password would be stored in plain text.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: You need to have an Ionic Cloud account for the authentication to succeed.'
  prefs: []
  type: TYPE_NORMAL
- en: Ionic start
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First we are going to take a look at the No Cordova flag option.
  prefs: []
  type: TYPE_NORMAL
- en: No Cordova
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The start command is one of the simplest ways to scaffold a new Ionic application.
    In this book, we have used the start command to always create a new Cordova and
    Ionic project.
  prefs: []
  type: TYPE_NORMAL
- en: Also, Ionic can be used without Cordova as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'To scaffold an Ionic project without Cordova, you need to run the start command
    with a `-w` flag or `--no-cordova` flag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The generated project should look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Now, as usual, you can `cd` into the `myMobileWebApp` folder and run `ionic
    serve.`
  prefs: []
  type: TYPE_NORMAL
- en: Initializing a project with SCSS support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To initialize a project with SCSS enabled by default, you can run the start
    command with a `-s` or a `--sass flag`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Note: This command is not working as of the day of writing the code.'
  prefs: []
  type: TYPE_NORMAL
- en: Listing all Ionic templates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To view the list of all templates available, run Ionic start with a -l or a
    --list flag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'As of today, these are the available templates:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: App ID
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you were using the Ionic Cloud services, you would be assigned an app ID
    for every project you created on the cloud (refer to the Ionic Cloud section in
    this chapter for more information). This app ID would reside in the `ionic.config.json`
    file, present at the root of the project.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you scaffold a new project, the app ID is empty. And if you would like
    to associate the currently scaffolded project to an existing app in the cloud,
    you can run the start command with the `--io-app-id` flag and pass it the cloud
    generated app ID:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Now the `ionic.config.json` should look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Ionic link
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The locally scaffolded project can be linked to a cloud project (refer to the
    Ionic Cloud apps section in this chapter for more information) at any time by
    running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Or you can remove the existing app ID by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Ionic info
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To view the installed libraries and their versions, run this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The information should look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Ionic state
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using the Ionic state command, you can manage the state of your Ionic project.
    Let us say that you are adding a couple of plugins and platforms to test something
    in your Ionic app. But you would not like to use these if they fail. In that case,
    you would use the save and restore command.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can avoid saving the plugins or platforms to the `package.json` file by
    running them with a `--nosave` flag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, you have tested your app with a couple of new plugins (adding them using
    a `--nosave` flag) and things seem to work fine. Now you want to add them to your
    `package.json`, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: This command looks up your installed plugins and platforms and then adds the
    required information to the `package.json` file. Optionally, you can save only
    plugins or platforms by running the preceding command with a `--plugins` or `--platforms`
    flag, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added a bunch of plugins and things are not working as expected,
    you can reset to the previous state by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'If you would like to restore your application to a list of Cordova plugins
    and platforms, you can update the same in `package.json` and run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Note: The `reset` command deletes the `platforms` and `plugins` folders and
    installs them again, whereas restore only restores the missing platforms and plugins
    in the `platforms` and `plugins` folders.'
  prefs: []
  type: TYPE_NORMAL
- en: Ionic resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you add a new platform, by default the `resources` folder is created with
    icons and splash screens for the given platform. These icons and splash screens
    are default images. If you would like to use your logo or icon for the project,
    all you need to do is run the Ionic resources command.
  prefs: []
  type: TYPE_NORMAL
- en: This command will look for an image named `icon.png` inside the `resources`
    folder to create icons for all devices for that OS, and `splash.png` inside the
    `resources` folder to create splash screens for all the devices for that OS.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can replace these two images with your brand images and run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: If you want to convert only icons, you can pass in an `-i` flag and only splash
    screens with a `-s` flag.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: You can also use `.png` and `.psd` (sample template: [http://code.ionicframework.com/resources/icon.psd](http://code.ionicframework.com/resources/icon.psd)
    and [http://code.ionicframework.com/resources/splash.psd](http://code.ionicframework.com/resources/splash.psd))
    or `.ai` files as well to generate icons. You can find more information here:
    [http://blog.ionic.io/automating-icons-and-splash-screens/](http://blog.ionic.io/automating-icons-and-splash-screens/).'
  prefs: []
  type: TYPE_NORMAL
- en: Ionic server, emulate, and run
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ionic provides an easy way to run your Ionic apps in browsers, emulators, and
    devices. Each of these three commands comes with a bunch of useful options.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want live reload to be running on an emulator as well as the actual
    device, while debugging, use the `-l` flag for live reload and `-c` to enable
    printing JavaScript console errors in the prompt. This is by far the best and
    most used utility in the Ionic CLI. This command saves at least 30% of your debugging
    time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use the following flags while working with Ionic serve:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00141.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'If your app has a different look and feel for Android and iOS, you can test
    both the apps at once by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: You can explore the other options listed previously as per your need.
  prefs: []
  type: TYPE_NORMAL
- en: 'While working with Ionic run and emulate, you can use the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00142.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: This is quite self-explanatory.
  prefs: []
  type: TYPE_NORMAL
- en: Ionic upload and share
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can upload the current Ionic project to your Ionic Cloud account by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Note: You need to have an Ionic Cloud account to work with this feature.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the app is uploaded, you can head to [https://apps.ionic.io/apps](https://apps.ionic.io/apps)
    to view the newly updated app. You can share this app with anyone using the share
    command and pass in the e-mail address of the intended person:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Ionic help and docs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At any point in time, you can view the list of all Ionic CLI commands by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'You can open the docs page by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'To view the list of available docs, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'And to open a specific doc, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Ionic Creator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The all-so amazing Ionic Creator is not yet available for Ionic 2\. More information
    is available here: [http://docs.usecreator.com/docs/ionic-2-support-roadmap](http://docs.usecreator.com/docs/ionic-2-support-roadmap).'
  prefs: []
  type: TYPE_NORMAL
- en: Ionic Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can create and manage your Ionic apps at [https://apps.ionic.io/apps](https://apps.ionic.io/apps).
    In the preceding commands, the app ID we were referring to is the app ID that
    gets generated when we create a new app using the [https://apps.ionic.io/apps](https://apps.ionic.io/apps)
    interface.
  prefs: []
  type: TYPE_NORMAL
- en: You can create a new app by clicking on the New App button inside the [https://apps.ionic.io/apps](https://apps.ionic.io/apps)
    page. Once the app is created, you can click on the app name and then you will
    be taken to the app details page.
  prefs: []
  type: TYPE_NORMAL
- en: You can update the app settings by clicking on the Settings link on the app
    details page.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: You can read more about setting up Ionic apps here: [http://docs.ionic.io/](http://docs.ionic.io/)
    .'
  prefs: []
  type: TYPE_NORMAL
- en: Ionic Cloud also provides other services such as Auth, IonicDB, Deploy, Push,
    and Package.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use any of these services, we need to first scaffold an Ionic app, and then
    add this app to Ionic Cloud by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, you can install the cloud client to interact with the cloud from the
    app:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Once this is done, we set up the cloud setting in `src/app/app.module.ts`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Now we are all set to use the Ionic Cloud services.
  prefs: []
  type: TYPE_NORMAL
- en: Auth
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the Auth service, we can easily authenticate a user against various social
    services. Not only social services such as Google, Twitter, and LinkedIn, we can
    also set up a simple e-mail and password authentication as well. You can view
    a list of authentication providers here: [http://docs.ionic.io/services/auth/#authentication-providers](http://docs.ionic.io/services/auth/#authentication-providers).'
  prefs: []
  type: TYPE_NORMAL
- en: 'And using the `Auth` service, this is how we manage authentication:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: IonicDB
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: IonicDB is a cloud-hosted real-time database without the worry of scalability,
    data management, and security. If you have any exposure working with Firebase
    or Parse, IonicDB is quite similar to those.
  prefs: []
  type: TYPE_NORMAL
- en: 'A simple example of using IonicDB is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Refer to [http://docs.ionic.io/services/database/](http://docs.ionic.io/services/database/)
    for more options on IonicDB.
  prefs: []
  type: TYPE_NORMAL
- en: Deploy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Deploy is another powerful service, where an app installed on the user's device
    can be updated, without the user updating from the App Store. Any changes that
    do not involve changes in binary can be pushed using Deploy.
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information on Deploy, refer to: [http://docs.ionic.io/services/deploy](http://docs.ionic.io/services/deploy)'
  prefs: []
  type: TYPE_NORMAL
- en: Push
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The push service lets the app owners Send a push notification to their users.
    The Push service also lets app owners segment and target devices based on a type
    and send allows sending notifications to certain segments only.
  prefs: []
  type: TYPE_NORMAL
- en: Push notifications uses the Phonegap Push Plugin ([https://github.com/phonegap/phonegap-plugin-push](https://github.com/phonegap/phonegap-plugin-push))
    with FCM (Firebase Cloud Messaging) for Android and iOS push for iOS devices.
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information on Push, refer to: [http://docs.ionic.io/services/push/](http://docs.ionic.io/services/push/)
    .'
  prefs: []
  type: TYPE_NORMAL
- en: Package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using the Ionic package service, developers can generate APK and IPA for an
    Ionic project to share with other developers and testers. The same generated APK
    and IPA can be submitted to Play and App Stores as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information on Package, refer to: [http://docs.ionic.io/services/package/](http://docs.ionic.io/services/package/)
    .'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the last and final chapter of Learning Ionic, Second Edition, we have covered
    some key features of the Ionic CLI and looked at Ionic Cloud services.
  prefs: []
  type: TYPE_NORMAL
- en: Hopefully, this book has given you some idea on getting started with Ionic 2.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading through.
  prefs: []
  type: TYPE_NORMAL
- en: --Arvind Ravulavaru.
  prefs: []
  type: TYPE_NORMAL
