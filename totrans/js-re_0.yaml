- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Regular expressions are patterns or templates, which allow you to define a set
    of rules in a natural yet vague way, giving you the ability to match and validate
    text. They have, more or less, been implemented in nearly every modern programming
    language.
  prefs: []
  type: TYPE_NORMAL
- en: When working with any type of textual input, you don't always know what the
    value will be, but you can usually assume (or even demand) the format you are
    going to receive into your application. These types of situations are exactly
    when you would create a regular expression to extract and manipulate this input.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, you will learn the basics to get started with a regular expression
    in JavaScript. We will start with the basics, passing through some special patterns
    and then, dive into two examples. The first one is validating a web form, and
    the second one is a very complex pattern to extract information from a log file.
    For all the examples, we will use a step-by-step approach, which will make it
    easier to learn and assimilate all the knowledge we've gained from this book.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Getting Started with Regex"), *Getting Started
    with Regex*, presents an introduction about regular expressions in JavaScript.
    It also shows how to develop the program that will be used to test the regular
    expressions used in the first three chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. The Basics"), *The Basics*, covers the main
    features of regular expressions in JavaScript, which are vague matchers, multipliers,
    and ranges.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Special Characters"), *Special Characters*,
    dives into the special characters patterns of Regex. It covers defining boundaries
    for a Regex, defining nongreedy quantifiers, and defining Regex with groups.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Regex in Practice"), *Regex in Practice*,
    demonstrates how to develop a web form and validate all its fields using regular
    expressions functionalities learned since the first chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Node.js and Regex"), *Node.js and Regex*,
    explains step by step how to create a simple application using Node.JS to read
    and parse an Apache log file using Regex. It also demonstrates how to display
    the information from the log file into a friendly web page to the user.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix](apa.html "Appendix A. JavaScript Regex Cheat Sheet"), *JavaScript
    Regex Cheat Sheet*, presents a summary of the patterns used in regular expressions
    in JavaScript along with their descriptions, and a list of useful methods to test
    and create regular expressions.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To develop the source code presented in this book, you will need any text editor
    of your preference and a browser (such as Chrome or Firefox).
  prefs: []
  type: TYPE_NORMAL
- en: For [Chapter 5](ch05.html "Chapter 5. Node.js and Regex"), *Node.js and Regex*,
    you will also need to install Node.js in your computer. All the required steps
    are described in the chapter itself.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is ideal for JavaScript developers who work with any type of user
    entry data. The book is designed for JavaScript programmers who possess basic
    to intermediate skills in JavaScript regular expressions, and want to learn about
    these for the first time or sharpen their skills to become experts.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "Now,
    let''s take a look at some of these helper functions, starting with `err` and
    `clearResultsAndErrors`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "The following image exemplifies the match of the regular expression when
    given a **Text** input."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
