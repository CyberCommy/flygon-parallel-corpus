- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As Charles Dickens wrote in *A Tale of Two Cities, "It was the best of times,
    it was the worse of times, it was the age of wisdom, it was the age of foolishness."*
    His seemingly contradictory words perfectly describe the chaos and mood felt during
    a time of change and transition. We are no doubt experiencing a similar time with
    the rapid changes in the fields of network engineering. As software development
    becomes more integrated into all aspects of networking, the traditional command-line
    interface and vertically integrated network stack methods are no longer the best
    ways to manage today's networks. For network engineers, the changes we are seeing
    are full of excitement and opportunities and yet challenging, particularly for
    those who need to quickly adapt and keep up. This book has been written to help
    ease the transition for networking professionals by providing a practical guide
    that addresses how to evolve from a traditional platform to one built on software-driven
    practices.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we use Python as the programming language of choice to master
    network engineering tasks. Python is an easy-to-learn, high-level programming
    language that can effectively complement network engineers' creativity and problem-solving
    skills to streamline daily operations. Python is becoming an integral part of
    many large-scale networks, and through this book, I hope to share with you the
    lessons I've learned.
  prefs: []
  type: TYPE_NORMAL
- en: Since the publication of the first edition, I have been able to have interesting
    and meaningful conversations with many of the readers of the book. I am humbled
    by the success of the first edition of the book and took to the heart of the feedback
    I was given. In the second edition, I have tried to make the examples and technologies
    more relevant. In particular, the traditional OpenFlow SDN chapters were replaced
    with some of the Network DevOps tools. I sincerely hope the new addition is useful
    to you.
  prefs: []
  type: TYPE_NORMAL
- en: A time of change presents great opportunities for technological advancement.
    The concepts and tools in this book have helped me tremendously in my career,
    and I hope they can do the same for you.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is ideal for IT professionals and operations engineers who already
    manage groups of network devices and would like to expand their knowledge on using
    Python and other tools to overcome network challenges. Basic knowledge of networking
    and Python is recommended.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](2bb48797-d649-4704-85fc-0f5244ed34fb.xhtml), *Review of TCP/IP
    Protocol Suite and Python*, reviews the fundamental technologies that make up
    internet communication today, from the OSI and client-server model to TCP, UDP,
    and IP protocol suites. The chapter will review the basics of Python languages
    such as types, operators, loops, functions, and packages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](8cefc139-8dfa-4250-81bf-928231e20b22.xhtml), *Low-Level Network
    Device Interactions*, uses practical examples to illustrate how to use Python
    to execute commands on a network device. It will also discuss the challenges of
    having a CLI-only interface in automation. The chapter will use the Pexpect and
    Paramiko libraries for the examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](d2c76e60-c005-4efc-85de-c7a3253e4b47.xhtml), *APIs and Intent-Driven
    Networking*, discusses the newer network devices that support **Application Programming
    Interfaces** (**APIs**) and other high-level interaction methods. It also illustrates
    tools that allow abstraction of low-level tasks while focusing on the intent of
    the network engineers. A discussion about and examples of Cisco NX-API, Juniper
    PyEZ, and Arista Pyeapi will be used in the chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](2784e1ec-c5d2-4b04-9e57-7db3caf0e310.xhtml), *The Python Automation
    Framework – Ansible Basics*, discusses the basics of Ansible, an open source,
    Python-based automation framework. Ansible moves one step further from APIs and
    focuses on declarative task intent. In this chapter, we will cover the advantages
    of using Ansible, its high-level architecture, and see some practical examples
    of Ansible with Cisco, Juniper, and Arista devices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](96b9ad57-2f08-4f0d-9b94-1abec5c55770.xhtml), *The Python Automation
    Framework – Beyond Basics*, builds on the knowledge in the previous chapter and
    covers the more advanced Ansible topics. We will cover conditionals, loops, templates,
    variables, Ansible Vault, and roles. It will also cover the basics of writing
    custom modules.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](30262891-a82e-4bef-aae2-2e8fe530a16f.xhtml), *Network Security
    with Python*, introduces several Python tools to help you secure your network.
    It will discuss using Scapy for security testing, using Ansible to quickly implement
    access lists, and using Python for network forensic analysis.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](bfb06aa0-1deb-4432-80ae-f15e3644fa54.xhtml), *Network Monitoring
    with Python – Part 1*, covers monitoring the network using various tools. The
    chapter contains some examples using SNMP and PySNMP for queries to obtain device
    information. Matplotlib and Pygal examples will be shown for graphing the results.
    The chapter will end with a Cacti example using a Python script as an input source.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](5f7e76ef-d93a-4689-8054-8be72d41d69b.xhtml), *Network Monitoring
    with Python – Part 2*, covers more network monitoring tools. The chapter will
    start with using Graphviz to graph the network from LLDP information. We will
    move to use examples with push-based network monitoring using Netflow and other
    technologies. We will use Python to decode flow packets and ntop to visualize
    the results. An overview of Elasticsearch and how it can be used for network monitoring
    will also be covered.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](3f5f47a9-8e88-40e9-a7f5-53113862d966.xhtml), *Building Network
    Web Services with Python*, shows you how to use the Python Flask web framework
    to create our own API for network automation. The network API offers benefits
    such as abstracting the requester from network details, consolidating and customizing
    operations, and providing better security by limiting the exposure of available
    operations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](1f42ba11-b219-41fa-902c-f85a916429a6.xhtml), *AWS Cloud Networking*,
    shows how we can use AWS to build a virtual network that is functional and resilient.
    We will cover virtual private cloud technologies such as CloudFormation, VPC routing
    table, access-list, Elastic IP, NAT Gateway, Direct Connect, and other related
    topics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](85c09606-4a40-46f3-82b8-0b20550fd64d.xhtml), *Working with Git*,
    we will illustrate how we can leverage Git for collaboration and code version
    control. Practical examples of using Git for network operations will be used in
    this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](5a99fe1f-da17-491c-96a2-4511ff2f4803.xhtml), *Continuous Integration
    with Jenkins*, uses Jenkins to automatically create operations pipelines that
    can save us time and increase reliability.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](d1720d17-6ae3-4886-89e3-f9ded2c88706.xhtml), *Test-Driven Development
    for Networks*, explains how to use Python''s unittest and PyTest to create simple
    tests to verify our code. We will also see examples of writing tests for our network
    to verify reachability, network latency, security, and network transactions. We
    will also see how we can integrate the tests into continuous integration tools,
    such as Jenkins.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get the most out of this book, some basic hands-on network operation knowledge
    and Python is recommended. Most of the chapters can be read in any order, with
    the exceptions of chapters 4 and 5, which should be read in sequence. Besides
    the basic software and hardware tools introduced at the beginning of the book,
    new tools relevant to each of the chapters will be introduced.
  prefs: []
  type: TYPE_NORMAL
- en: It is highly recommended to follow and practice the examples shown in your own
    network lab.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support) and
    register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Mastering-Python-Networking-Second-Edition](https://github.com/PacktPublishing/Mastering-Python-Networking-Second-Edition). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/MasteringPythonNetworkingSecondEdition_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/MasteringPythonNetworkingSecondEdition_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles. Here
    is an example: "The auto-config also generated `vty` access for both telnet and
    SSH."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "In the Topology Design option, I set the Management Network option
    to Shared Flat Network in order to use VMnet2 as the management network on the
    virtual routers."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
