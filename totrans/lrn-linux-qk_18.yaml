- en: Archiving and Compressing Files
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will learn how to put a group of files together into a
    single archive. You will also learn how to compress an archive file using various
    compression methods.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Creating an archive
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s create a backup for all the bash scripts in the `/home/elliot` directory.
    As the `root` user, create a directory named `backup` in `/root`:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To create an archive, we use the tape archive command `tar`. The general syntax
    to create an archive is as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `-c` option is the shorthand notation of `--create`, which creates the archive.
    The `-f` option is the shorthand notation of `--file`, which specifies the archive
    name.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s create an archive named `scripts.tar` in `/root/backup` for all
    the bash scripts in `/home/elliot`. To do that, we first change to the `/home/elliot`
    directory:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then we run the command:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will create the archive file `scripts.tar` in `/root/backup`, and there
    will be no command output:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We could have also added the verbose option `-v` to see the files that are
    being archived:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Viewing archive contents
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You may want to see the contents of an archive. To do that, you can use the
    `-t` option along with the `-f` option followed by the archive you wish to view:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For example, to view the contents of the archive `scripts.tar` that we just
    created, you can run the command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see, it listed all the files in the `scripts.tar` archive.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Extracting archive files
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You may also want to extract files from an archive. To demonstrate, let''s
    create a directory named `myscripts` in `/root`:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To extract files from an archive, we use the `-x` option along with the `-f`
    option, followed by the archive name. Then, we use the `-C` option followed by
    the destination directory as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'So to extract all the files in the `scripts.tar` archive to the `/root/myscripts`
    directory, you can run the following command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `-x` option is the shorthand notation of `--extract`, which extracts the
    files from the archive. We also used the `-C` option, which basically changes
    to the `/root/myscripts` directory before carrying out any operation, and thus
    the files are extracted to `/root/myscripts` instead of the current directory.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s verify that the files were indeed extracted to the `/root/myscripts`
    directory:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: And sure enough, we see all our bash scripts in the `/root/myscripts` directory!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Compressing with gzip
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Grouping files in an archive doesn't save disk space on its own. We would need
    to compress an archive to save disk space. Numerous compression methods are available
    for us to use on Linux. However, we are only going to cover the three most popular
    compression methods.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'The most popular compression method on Linux is arguably `gzip`, and the upside
    is that it''s really fast. You can compress an archive file with `gzip` by using
    the `-z` option with the `tar` command as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'So to compress the `scripts.tar` archive into a `gzip`-compressed archive named
    `scripts.tar.gz`, you first need to change to the `/root/backup` directory and
    then run the following command:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now if you list the contents of the `backup` directory, you will see the newly
    created `gzip`-compressed archive `scripts.tar.gz`:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The magic happened by using the `-z` option, which compressed the archive with
    the `gzip` compression method. And that''s it! Notice how it''s very similar to
    creating an archive: we just added the `-z` option – that''s the only difference.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s run the `file` command on both archives:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'As you can see, the `file` command detects the type of both archives. Now let’s
    compare the size (in bytes) of both archives:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The compressed archive `scripts.tar.gz` is way smaller in size as we expected
    compared to the uncompressed archive `scripts.tar`. If you want to extract the
    files in the compressed archive `scripts.tar.gz` to `/root/myscripts`, you can
    run:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Notice it is exactly the same as the way that you would extract the contents
    of an uncompressed archive.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Compressing with bzip2
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`bzip2` is another popular compression method used on Linux. On average, `bzip2` is
    slower than `gzip`; however, `bzip2` does a better job of compressing files to
    smaller sizes.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'You can compress an archive with `bzip2` compression by using the `-j` option
    with the `tar` command as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Notice the only difference here is that we use the `-j` option for `bzip2` compression
    instead of `-z` for `gzip` compression.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'So to compress the `scripts.tar` archive into a `bzip2`-compressed archive
    named `scripts.tar.bz2`, you first need to change to the  `/root/backup`directory
    and then run the following command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now if you list the contents of the `backup` directory, you will see the newly
    created `bzip2`-compressed archive `scripts.tar.bz2`:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Let''s run the `file` command on the `bzip2`-compressed archive `scripts.tar.bz2`:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'It correctly detects the type of compression method used for the archive `scripts.tar.bz2`.
    Awesome – now let''s compare the size (in bytes) of the `gzip`-compressed archive
    `scripts.tar.gz` and the `bzip2`-compressed archive `scripts.tar.bz2`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Notice that the `bzip2`-compressed archive `scripts.tar.bz2` is smaller than
    the `gzip`-compressed archive `scripts.tar.gz`. If you want to extract the files
    in the compressed archive `scripts.tar.bz2` to `/root/myscripts`, you can run:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Notice it is exactly the same as the way that you would extract the contents
    of a `gzip`-compressed archive.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Compressing with xz
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `xz` compression method is yet another popular compression method used on
    Linux. On average, `xz` compression does the best job out of all three compression
    methods in reducing (compressing) the file sizes.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: 'You can compress an archive with `xz` compression by using the `-J` option
    with the `tar` command as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Notice here we use the uppercase letter `J` with `xz` compression. So to compress
    the `scripts.tar` archive into an `xz`-compressed archive named `scripts.tar.xz`,
    you first need to change to the `/root/backup` directory and then run the following
    command:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now if you list the contents of the `backup` directory, you will see the newly
    created `xz`-compressed archive `scripts.tar.xz`:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Let''s run the file command on the `xz`-compressed archive `scripts.tar.xz`:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: It correctly detects the type of compression method used for the archive `scripts.tar.xz`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: Measuring performance
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can use the `time` command to measure the time it takes a command (or a
    program) to finish executing. The general syntax for the `time` command is as
    follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'For example, to measure how long it takes for the `date` command to finish
    executing, you can run the following command:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: It just took four milliseconds to run the `date` command on my system; this
    is quite fast!
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: 'The `gzip` compression method is the fastest of all three compression methods;
    well, let''s see if I am lying or telling the truth! Change to the `/root/backup`
    directory:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now let''s see how long it takes to create a `gzip`-compressed archive file
    for all the files in `/boot`:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'On my system, it took `gzip` 4.717 seconds to run! Now let''s measure the time
    it takes to create a `bzip2`-compressed archive of the same directory `/boot`:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'It took `bzip2` an enormous `19.306` seconds to run! You can see how `gzip`
    compression is much faster than `bzip2`. Now let''s see the time it takes to create
    an `xz`-compressed archive of the same directory `/boot`:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: It almost took `xz` a full minute! We can conclude that `gzip` is definitely
    the fastest of all three compression methods we have discussed.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, let''s check the size (in bytes) of the three compressed archives:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: As you can see, `xz` did the best job of compressing the files. `bzip2` claimed
    second place, and `gzip` came in last.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Knowledge check
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the following exercises, open up your Terminal and try to solve the following
    tasks:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Create a `gzip` archive named `var.tar.gz` in `/root` for all the files in `/var`.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a `bzip2` archive named `tmp.tar.bz2` in `/root` for all the files in
    `/tmp`.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create an `xz` archive named `etc.tar.xz` in `/root` for all the files in `/etc`.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/root`目录中为`/etc`目录中的所有文件创建一个名为`etc.tar.xz`的`xz`归档文件。
