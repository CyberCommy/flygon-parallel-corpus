- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The book starts by covering the set up of a Python environment to perform automation
    tasks, as well as the modules, libraries, and tools you will be using.
  prefs: []
  type: TYPE_NORMAL
- en: We'll explore examples of network automation tasks using simple Python programs
    and Ansible. Next, we will walk you through automating administration tasks with
    Python Fabric, where you will learn to perform server configuration and administration
    along with system administration tasks such as user management, database management,
    and process management. As you progress through this book, you'll automate several
    testing services with Python scripts and perform automation tasks on virtual machines
    and the cloud infrastructure with Python. In the concluding chapters, you will
    cover Python-based offensive security tools and learn to automate your security
    tasks.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you will have mastered the skills of automating several
    system administration tasks with Python.
  prefs: []
  type: TYPE_NORMAL
- en: You can visit the author's blog at the following link: [https://basimaly.wordpress.com/.](https://basimaly.wordpress.com/)
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Hands-On Enterprise Automation* *with Python* is for system administrators
    and DevOps engineers who are looking for an alternative to major automation frameworks
    such as Puppet and Chef. Basic programming knowledge with Python and Linux shell
    scripting is necessary.'
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0020.html#J2B80-9cfcdc5beecd470bbeda046372f0337f), *Setting
    Up Python Environment, *explores how to download and install the Python interpreter
    along with the Python Integrated Development Environment, called *JetBrains PyCharm.* The
    IDE provides you with smart autocompletion, intelligent code analysis, powerful
    refactoring and integrates with Git, virtualenv, Vagrant, and Docker. This will
    help you to write professional and robust Python code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0034.html#10DJ40-9cfcdc5beecd470bbeda046372f0337f), *Common
    Libraries Used in Automation*, covers the Python libraries that are available
    today and that are used for automation. We will categorize them based on their
    usage (system, network, and cloud) and provide a simple introduction. As you progress
    through the book, you will find yourself deep diving into each of them and understanding
    their usage.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0020.html#J2B80-9cfcdc5beecd470bbeda046372f0337f), *Setting
    up Your Network Lab Environment*, discusses the merits of network automation and
    how network operators use it today to automate the current devices. We will explore
    popular libraries that are used today to automate network nodes from Cisco, Juniper,
    and Arista. This chapter covers how to build a networking lab to apply the Python
    script on. We will use an open source network emulation tool called EVE-NG.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0062.html#1R42S0-9cfcdc5beecd470bbeda046372f0337f), *Using
    Python to Manage Network Devices*, dives into managing networking devices through
    telnet and SSH connections using netmiko, paramiko, and telnetlib. We will learn
    how to write the Python code to access switches and routers and execute commands
    on the terminal and then return the output. We will also learn how to utilize
    different Python techniques to back up and push configuration. The chapter ends
    with some use cases used today in modern network environment.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0087.html#2IV0U0-9cfcdc5beecd470bbeda046372f0337f), *Extracting
    Useful Data from Network Devices*, explains how to use different tools and techniques
    inside Python to extract useful data from returned output and act upon it. Also,
    we will use a special library called *CiscoConfParse* to audit the configuration.
    Then we will learn how to visualize data to generate appealing graphs and reports
    with matplotlib.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0102.html#318PC0-9cfcdc5beecd470bbeda046372f0337f), *Configuration
    Generator with Python and Jinja2*, explains how to generate a common configuration
    for a site with hundreds of network nodes. We will learn how to write a template
    and use it to generate a golden configuration with a templating language called
    Jinja2.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0110.html#38STS0-9cfcdc5beecd470bbeda046372f0337f), *Parallel
    Execution of the Python Script*, covers how to instantiate and execute your Python
    code in parallel. This will allow us to finish the automation workflow faster
    as long as it is not interdependent.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0116.html#3EK180-9cfcdc5beecd470bbeda046372f0337f), *Preparing
    a Lab Environment*, covers the installation process and preparation for our lab
    environment. We will install our automation server either in CentOS  or Ubuntu
    over different hypervisors. Then we will learn how to automate the operating system
    installation with *Cobbler*.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0128.html#3Q2800-9cfcdc5beecd470bbeda046372f0337f), *Using
    the Subprocess Module*, explains how to send a command from a Python script directly
    to the operating system shell and investigate the returning output.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](part0133.html#3UQQQ0-9cfcdc5beecd470bbeda046372f0337f), *Running
    System Administration Tasks with Fabric*, introduces Fabric, which is a Python
    library for executing system administration tasks through SSH. Also, it''s used
    in large deployment of applications. We will learn how to utilize and leverage
    this library to execute tasks on remote servers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](part0151.html#4G04U0-9cfcdc5beecd470bbeda046372f0337f), *Generating
    System Reports*, *Managing Users, and System Monitoring*, explains that collecting
    data and generating recurring reports from the system is an essential task for
    any system administrator, and automating this task will help you to discover issues
    early and provide a solutions for them. In this chapter, we will see some proven
    ways to automate data collection from servers and generate formal reports. We
    will learn how to manage new and existing users using Python and Ansible. Also,
    we will dive into monitoring the system KPI and logs analysis. You can also schedule
    the monitoring scripts to run on a regular basis and send the result to your mail
    inbox.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](part0160.html#4OIQ00-9cfcdc5beecd470bbeda046372f0337f), *Interacting
    with the Database*, states that if you''re a database administrator or database
    developer, then Python provides a wide range of libraries and modules that cover
    managing and working on popular DBMSes such as MySQL, Postgress, and Oracle. In
    this chapter, we will learn how to interact with DBMSes using Python connectors.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](part0168.html#506UG0-9cfcdc5beecd470bbeda046372f0337f), *Ansible
    for System Administration*, explores one of the most powerful tools in configuration
    management software. Ansible is very powerful when it comes to system administration
    and can be used to make sure the configuration is replicated exactly across hundreds
    or even thousands of servers at the same time.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](part0183.html#5EGMU0-9cfcdc5beecd470bbeda046372f0337f), *Creating
    and Managing VMWare Virtual Machines*, explains how to automate VM creation on
    a VMWare hypervisor. We will discover different ways to create and manage virtual
    machines over ESXi using VMWare''s official binding library.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](part0196.html#5QTE80-9cfcdc5beecd470bbeda046372f0337f), *Interacting
    with Openstack API*, explains that OpenStack was very popular in creating private
    IaaS when it came to private cloud. We will use Python modules such as requeststo
    create REST calls and interact with OpenStack services such as nova, cinder, and
    neutron, and create the required resources over OpenStack. Later in the chapter,
    wewill use Ansible playbooks for the same workflow.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 16](part0217.html#6EUA20-9cfcdc5beecd470bbeda046372f0337f), *Automating
    AWS with Python and Boto3*, covers how to automate common AWS services such as
    EC2 and S3 using official Amazon binindgs (BOTO3), which provides an easy-to-use
    API for services access.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 17](part0227.html#6OFFM0-9cfcdc5beecd470bbeda046372f0337f), *Using
    the SCAPY Framework*, introduces SCAPY, which is a powerful Python tool used to
    build and craft packets and then send them on the wire. You can build any type
    of network stream and send it on the wire. It can also help you to capture network
    packets and replay them to the wire.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 18](part0240.html#74S700-9cfcdc5beecd470bbeda046372f0337f), *Building
    Network Scanner Using Python*, provides a complete example of building a network
    scanner using Python. You can scan a complete subnet for different protocols and
    ports and generate a report for each scanned host. Then, we will learn how to
    share the code with the open source community (GitHub) by leveraging Git.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The reader should be acquainted with the basic programming paradigm of Python
    programming language and should have basic knowledge of Linux and Linux shell
    scripting.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-Enterprise-Automation-with-Python](https://github.com/PacktPublishing/Hands-On-Enterprise-Automation-with-Python). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/HandsOnEnterpriseAutomationwithPython_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/HandsOnEnterpriseAutomationwithPython_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Some large packages such as `matplotlib` or `django` have
    hundreds of modules inside them, and developers usually categorize the related
    modules into a sub-directories."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '"Choose your platform from the Download page, and either the x86 or x64 version."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
