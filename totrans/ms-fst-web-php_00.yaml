- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Faster Web can be defined as a series of qualities to be developed in all
    spheres of web technology in order to speed up any transaction between a client
    and a server. It also includes the principles behind UI design that can influence
    a user's perception of speed. Thus, understanding the Faster Web involves understanding
    the notions of performance, efficiency and perceived performance, and discovering
    most of the new underlying web technologies that make up what the internet has
    become today.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Any web developer, system administrator or web enthusiast who wishes to understand
    the Faster Web better. Basic knowledge of *Docker* container technology is a plus.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](1e519ed0-2065-4d04-b589-e7af72645baa.xhtml), *Faster Web – Getting
    Started*, defines what is the Faster Web by trying to better understand the formal
    aspects of it and sets out to understand how to measure performance and determine
    if a website or Web application is part of the Faster Web or not.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](70f061eb-c289-43a1-9945-af4d22d48463.xhtml), *Continuous Profiling
    and Monitoring*, aims to help the reader learn how to install and configure profiling
    and monitoring tools that will help them easily optimize PHP code in a continuous
    integration (CI) and a **continuous deployment** (**CD**) environment.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](53885463-8a30-4db7-99ce-b69b89eef80f.xhtml), *Harnessing the Power
    of PHP 7 Data Structures and Functions*, gets the reader to learn how to harness
    PHP 7''s performance boosts through most of its key optimizations. It also helps
    them explore how better understanding data structures and data types, and using
    simplified functions can help a PHP application''s global performance along its
    critical execution path. In addition, it covers how it is best to avoid using
    inefficient structures, like most dynamic ones, in our PHP code, and how some
    functional techniques can be of immediate help when optimizing PHP code.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](9fe057bf-56a9-4cea-ba0c-a19a03d69a30.xhtml), *Envisioning the Future
    with Asynchronous PHP*, outlines how to cope with input and output (I/O) poor
    latency by learning about generators and asynchronous non-blocking code, multithreading
    with the *POSIX Threads* (`pthreads`) library and multitasking with the `ReactPHP`
    library.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](33523e67-0e2c-425a-86db-713020f1c9bf.xhtml), *Measuring and Optimizing
    Database Performance*, shows how to measure database performance, ranging from
    simple measurement techniques to advanced benchmarking tools.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](154f8690-0217-415c-b76c-35ccb920144e.xhtml), *Querying Efficiently
    a Modern SQL Database*, explains how to use Modern SQL techniques in order to
    optimize complex SQL queries.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](https://cdp.packtpub.com/mastering_the_faster_web_with_php__mysql__javascript/wp-admin/post.php?post=379&action=edit#post_292),
    *JavaScript and Danger-Driven Development*, covers a few of JavaScript''s best
    and worst parts, especially those that pertain to code efficiency and overall
    performance, and how a developer should always write safe, reliable and highly
    efficient JavaScript code, mostly by avoiding “danger-driven development”.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](57e896b1-5a08-4dbb-8612-363068218bf0.xhtml), *Functional JavaScript*,
    features how JavaScript is becoming more and more a functional language and how
    this programming paradigm will be a vector for performance in the near future
    by taking a quick look at upcoming language features that will help improve performance
    of JavaScript applications.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](0d522625-eba8-4884-a12e-42689458aa85.xhtml), *Boosting a Web Server’s
    Performance*, looks at what the HTTP/2 protocol is all about and how the SPDY
    project made it possible, how PHP-FPM and OPcache can help you boost the performance
    of your PHP scripts, how to use ESI technology by setting up a Varnish Cache server,
    how to use client-side caching and how other Faster Web tools can help you boost
    a web server''s overall performance.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](a2b76a20-f539-41c8-89d0-c35337cffbad.xhtml), *Going Beyond Performance*,
    shows how, when everything seems to have been fully optimized, we can still go
    beyond performance by better understanding the principles behind UI design when
    it comes to the perception of performance.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to run the source code included in this book, we recommend that you
    start by installing Docker on your computer ([https://docs.docker.com/engine/installation/](https://docs.docker.com/engine/installation/)).
    *Docker* is a software container platform that allows you to easily connect to
    your computer’s devices in an isolated and sophisticated chroot-like environment.
    Unlike virtual machines, containers do not come bundled with full operating systems,
    but only come with the required binaries in order to run some software. You can
    install *Docker* on Windows, Mac, or Linux. It should be noted, however, that
    some features, such as full-featured networking, are still not available when
    running *Docker* on macOS ([https://docs.docker.com/docker-for-mac/networking/#known-limitations-use-cases-and-workarounds](https://docs.docker.com/docker-for-mac/networking/#known-limitations-use-cases-and-workarounds)).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'The main *Docker* image that we will be using throughout this book is *Linux
    for PHP* 8.1 ([https://linuxforphp.net/](https://linuxforphp.net/)) with a non
    thread-safe version of PHP 7.1.16 and *MariaDB* (*MySQL*) 10.2.8 (asclinux/linuxforphp-8.1:7.1.16-nts).
    To start the main container, enter the following command:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you prefer using multithreading technologies while optimizing your code,
    you can do so by running a thread-safe version of *Linux for PHP* (asclinux/linuxforphp-8.1:7.0.29-zts).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, you should `docker commit` any changes you make to the container and
    create new images of your container that you can `docker run` at a later time.
    If you are not familiar with the Docker command line and its `run` command, find
    the documentation at [https://docs.docker.com/engine/reference/run/](https://docs.docker.com/engine/reference/run/).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, the three following commands must be run inside the Linux for PHP
    container whenever you start an original Linux for PHP image and wish to start
    working with most of the code examples contained in this book:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Download the example code files
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Mastering-the-Faster-Web-with-PHP-MySQL-and-JavaScript](https://github.com/PacktPublishing/Mastering-the-Faster-Web-with-PHP-MySQL-and-JavaScript). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'All the code examples given in this book can be found, within the code repository,
    in a folder named according to the chapter''s number. Thus, it is expected that
    you change your working directory at the beginning of each chapter in order to
    run the code examples given within. Thus, for chapter 1, you are expected to enter,
    on the container''s CLI, the following commands:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'And, for the next chapter, you are expected to enter these commands:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: And, so on for the following chapters.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他代码包来自我们丰富的图书和视频目录，可在**[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**上找到。去看看吧！
- en: Conventions used
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Whenever possible, the developer should always prefer using `const` over `let` or `var`."'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄。这是一个例子：“在可能的情况下，开发人员应始终优先使用 `const` 而不是 `let` 或 `var`。”'
- en: 'A block of code is set as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "If you scroll towards the end of the page, you should now see
    an xdebug section."'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词会以这种方式出现在文本中。这是一个例子：“如果您向页面的末尾滚动，现在应该看到一个 xdebug 部分。”'
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会以这种方式出现。技巧和窍门会以这种方式出现。
