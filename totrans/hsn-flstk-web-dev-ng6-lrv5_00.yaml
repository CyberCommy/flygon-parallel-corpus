- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web Development has come a long way since its inception. Today we want web applications
    that are fast, robust, and engaging, and Progressive Web Applications (PWA) is
    the way to go ahead. In this book we are going to build powerful web applications
    using two of the most popular frameworks at our disposal, Angular and Laravel.
  prefs: []
  type: TYPE_NORMAL
- en: Angular is one of the most popular frontend JavaScript frameworks for creating
    modern and fast PWA. In addition to being very versatile and complete, Angular
    also includes the Angular CLI tool for generating modules, components, services,
    and many more utilities. On the other hand we have Laravel framework, a powerful
    tool for the development of web applications which explores the use of the paradigm
    convention over configuration.
  prefs: []
  type: TYPE_NORMAL
- en: This book gives you a practical knowledge of building modern full-stack web
    apps from scratch using Angular with a Laravel RESTful backend. It takes you through
    the most important technical facets of developing with these two frameworks and demonstrates
    how to put those skills into practice.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for developers who are new to Angular and Laravel. Knowledge of
    HTML, CSS, and scripting languages such as JavaScript and PHP is required.
  prefs: []
  type: TYPE_NORMAL
- en: The book's content covers all of the phases of the software engineering life
    cycle by looking at modern tools and techniques, including – but not limited to
    – RESTful APIs, token-based authentication, database configurations, and Docker
    containers and images.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](74a39699-781f-4a6e-a6ab-b696bac7a0f3.xhtml), *Understanding the
    Core Concepts of Laravel 5*,introduces the Laravel framework as a powerful tool
    for the development of web applications and explores the use of the paradigm convention
    over configuration. We will see how, out of the box, Laravel has all of the features
    that we need to build modern web applications, token-based authentication, routes,
    resources, and more. Also, we will find out why the Laravel framework is one of
    the most popular PHP frameworks for developing web applications today. We will
    learn how to set up the environment, look at the Laravel application lifecycle,
    and see how to use the Artisan CLI.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](40d356cb-415f-4a39-8c4b-eb874206ab7e.xhtml), *The Benefits of TypeScript,*
    looks at how TypeScript enables you to write consistent JavaScript code. We examine
    the features that it includes, such as static typing and other features that are
    very common in object-oriented languages. Also, we look at using the new features
    of the latest version of ECMAScript, and find out TypeScript helps us to write
    clean and well-organized code. In this chapter, we will see the benefits of TypeScript
    over traditional JavaScript, discover how to use static typing, and understand
    how to use Interfaces, Classes, and Generics, as well as Import and Export classes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](55bf9899-fbc7-458e-b7f5-22be56951fe6.xhtml), *Understanding the
    Core Concepts of Angular 6*,* dives* into Angular, which is one of the most popular
    frameworks for the development of frontend web applications. In addition to being
    very versatile and complete, Angular also includes the Angular CLI tool for generating modules,
    components, services, and many more utilities. In this chapter, we will learn
    how to use the new version of the Angular CLI, understand the core concepts of
    Angular, and get to grips with the component lifecycle.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](81c1b0fb-3b75-44fa-8f1b-356c9e85c1ce.xhtml), *Building the Baseline
    Backend Application*,is where we will start building the sample application. In
    this chapter, we are going to create a Laravel application using the RESTful architecture.
    We will take a closer look at some points that we mentioned briefly in the first
    chapter, such as the use of Docker containers to configure our environment and
    also how to keep our database populated. we will even check out how to use the
    MySQL Docker container, how to use migrations and database seed, and also how
    to create consistent documentation with Swagger UI.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](dd0125d1-abb8-4604-b4b2-f408cc7e20ad.xhtml), *Creating a RESTful
    API Using Laravel - Part 1*, will introduce RESTful APIs. You will learn how to
    build a RESTful API using the core elements of the Laravel framework—controllers,
    routes, and eloquent Object Relational Mapping (ORM). We also show some basic
    wireframes for the application we are building. In addition, we will look more
    closely at some relationships that you will need to be familiar with, such as
    one-to-one, one-to-many, and many-to-many.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](a5910f49-091c-42b8-bf4c-56a23d2ea354.xhtml), *Creating a RESTful
    API Using Laravel - Part 2*, continues our project of building a sample API, though,
    at that point, we will still have a long way to go in Laravel. We will learn how
    to use some features that are very common among web applications, such as token-based
    authentication, request validation, and custom error messages; we will also see
    how to use Laravel resources. Also, we will see how to use the Swagger documentation
    to test our API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](95b439ca-ab08-401c-8e99-0ca9054244d4.xhtml), *Progressive Web Applications
    with Angular CLI*, covers the changes that have affected angular-cli.json since
    the previous Angular version. The angular-cli.json file has now improved its support
    for multiple applications. We will see how to use the *ng add* a command to create
    a PWA and how we can organize our project structure to leave a single basis for
    a scalable project. Also, we will see how to use the Angular CLI to create service-work
    and manifest files.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](c2cedcec-e791-4f5b-86d2-5f65d7cc780e.xhtml), *Dealing with Angular
    Router and Components*, is where we come to one of the most important parts of
    Single-Page Applications (SPAs), which is the use of routes. Luckily, the Angular
    framework provides a powerful tool for dealing with application routing: the @angular/router
    dependency. In this chapter, we will learn how to use some of these features,
    such as router outlets and child-views, and we will see how to create master-detail
    pages. Also, we will start to create the frontend views.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](6122a03e-eecf-442d-b5ca-1f175c7fcf6a.xhtml), *Creating Services
    and User Authentication,* is one where we will create many new things, and we
    will be performing some refactoring to memorize import details. This is a great
    way to learn new things in a regular and progressive way. Also, we will dig deeper
    into the operation and use of the HTTP module of the Angular framework, now known
    as httpClient. In addition, we will look at interceptors, handling errors, using
    authorization headers, and how to protect application routes using r*oute guards*.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](59c19982-99f5-47d5-a4ed-82763ef9288d.xhtml), *Frontend Views with
    Bootstrap 4 and NgBootstrap*, explains how to include the Bootstrap CSS framework
    and NgBootstrap components inside a running Angular application using the new
    *ng add* command from Angular CLI. Also, we will see how to connect our Angular
    services with components and how to use the backend API to put it all together.
    We will learn to configure CORS on our backend API, and how to use it with our
    Angular client-side application. We will also learn to deal with the Angular pipe,
    template-driven forms, model-driven forms, and form validations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](26d384df-6d74-4943-8aa3-080ddeaed7d4.xhtml), *Building and Deploying
    Angular Tests*, covers how to install, customize, and extend the Bootstrap CSS
    framework, as well as how to use NgBootstrap components and how to connect Angular
    services with components and UI interfaces. We will learn to write Angular unit
    tests, configure application linters (for SCSS and Tslint) to maintain code consistency,
    create NPM scripts, and also create a Docker image and deploy the application.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Some knowledge of the command line, Docker, and MySQL would be very helpful;
    however, it is not fully required, as all commands and examples are accompanied
    by brief instructions.
  prefs: []
  type: TYPE_NORMAL
- en: 'You need to have the following tools installed on your machine:'
  prefs: []
  type: TYPE_NORMAL
- en: Node.js and NPM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A code editor—we recommend that you use Visual Studio Code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Git source control is recommend but not required
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-Full-Stack-Web-Development-with-Angular-6-and-Laravel-5](https://github.com/PacktPublishing/Hands-On-Full-Stack-Web-Development-with-Angular-6-and-Laravel-5). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here [https://www.packtpub.com/sites/default/files/downloads/HandsOnFullStackWebDevelopmentwithAngular6andLaravel5_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/HandsOnFullStackWebDevelopmentwithAngular6andLaravel5_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here'
  prefs: []
  type: TYPE_NORMAL
- en: is an example: "All PHP projects that use Composer have a file called `composer.json` at
    the root project."
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "'
  prefs: []
  type: TYPE_NORMAL
- en: '"Search for the `chapter-01` folder, and click Open."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
