- en: '*Chapter 18*: **Practice Exercises â€“ 1**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this practice exercise, we will run a set of steps to check the knowledge
    you have acquired throughout this book. As opposed to previous chapters, not all
    steps will be indicated, and it's therefore left to your discretion to perform
    the steps required to accomplish your desired goals. It is recommended to avoid
    referencing past chapters for guidance. Instead, try to use your memory, or the
    tools available in the system. This exercise, if performed correctly, will train
    you effectively for official exams.
  prefs: []
  type: TYPE_NORMAL
- en: It is strongly advised to start this exercise with a clock to keep track of
    time.
  prefs: []
  type: TYPE_NORMAL
- en: '**Technical requirements**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**All the practice exercise in this chapter requires the use of a virtual machine**
    (**VM**), running Red Hat Enterprise Linux 8 installed with the base installation.
    Additionally, new virtual drives will be required for storage operations.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For the exercises, it is assumed you possess the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Red Hat Enterprise Linux 8 installed with the base operating system **minimal
    install** software selection.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to the Red Hat Customer Portal, with an active subscription.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The VM must be expendable. This is because actions performed on it during the
    exercise might render it unusable and require it to be reinstalled.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tips for the exercise
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This is a list of general recommendations for any test, and most fall under
    the category of common sense, but it''s always important to have them in our mind
    before performing any such test:'
  prefs: []
  type: TYPE_NORMAL
- en: Read all the questions before starting the official exam or any test.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Specific words have specific meanings that give hints about the requirements
    or ways to accomplish the goals. This is why reading everything first might give
    you multiple perspectives on how to complete the test.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make yourself comfortable. Install your favorite editor and run `updatedb` to
    have a fresh database of packages and installed files ready for use. Define your
    keyboard layout. Install `tmux` and learn how to use it, so that you can open
    new tabs and name them without requiring extra windows.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Locate dependencies between requests, as some goals depend on others for completion.
    Find those dependencies to see how you can locate the solution without later having
    to come back and redo some steps as a result of choosing the wrong path.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use a timer. This is important to get an idea of what exercises will take you
    more time to complete, in order to see the areas that you need to improve in.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don't remember specific command lines. Learn how to use the documentation available
    in the system via `man`, `/usr/share/docs` or arguments like `--help` for the
    commands required.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure that changes persist and are still active after a reboot. Some changes
    might be active while you run them, but those must be persisted. Examples may
    include firewall rules, services to start at boot, and so on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remember to use `dnf whatprovides /COMMAND"` to find packages providing a file
    you might be missing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Check the following link: [https://www.redhat.com/en/services/training/ex200-red-hat-certified-system-administrator-rhcsa-exam?=Objectives](https://www.redhat.com/en/services/training/ex200-red-hat-certified-system-administrator-rhcsa-exam?=Objectives).
    This will provide you with the official EX200 exam objectives.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Practice exercise 1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The following exercise has, by design, been created so that there will be no
    highlights on commands, packages, and so on. Remember what you've learned so far
    in order to detect the keywords to see what needs to be done.
  prefs: []
  type: TYPE_NORMAL
- en: Don't jump into the walk-through too early. Try to remember what was covered.
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Configure the time zone to GMT.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Allow password-less login for the root user using SSH.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a user (named *user*) that can connect to the machine without a password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The user `user` should change their password every week, with 2 days' warning
    and 1 day of usage once expired.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The root user must be able to SSH as *user* without a password so that nobody
    can connect remotely as root using a password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The user *user* should be able to become root user without a password, and also
    execute commands without a password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When a user tries to log in over SSH, display a legal message about not allowing
    unauthorized access to this system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: SSH must listen on port *22222*, instead of the default one (*22*).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a group named `devel`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make `user` a member of `devel`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Store user membership in a file named `userids` in the home folder for *user.*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The user *user*, and *root* user, should be able to connect to localhost via
    SSH without specifying the port, and default to compression for the connection.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find all man page names in the system, and put the names into a file named *manpages.txt*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Print usernames for users without logins permitted to the system. For each username,
    print the user ID and groups for that user.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Monitor available system resources every 5 minutes. Do not use cron. Store as
    */root/resources.log*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a per-minute job to report the available percentage of free disk space,
    and store it in */root/freespace.log* so that it shows both the filesystem and
    free space.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure the system to only leave 3 days of logs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure the log rotation for */root/freespace.log* and */root/resources.log*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure the time synchronization against *pool.ntp.org*, using fast sync.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide NTP server services for the subnet *172.22.0.1/24*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure system stats for collection every minute.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure the password length for users in the system to be 12 characters long.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a bot user named *privacy,* which will keep its files only visible to
    itself by default.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a folder in *shared* that can be accessed by all users, and that defaults
    new files and directories to still be accessible to users of the *devel* group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Configure a network connection with IPv4 and IPv6 addresses named *mynic,*
    using the following data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Allow the host to use a *google* hostname to reach [www.google.com](https://www.google.com),
    and a *redhat* hostname to reach [www.redhat.com](https://www.redhat.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Report the files modified from those that the vendor distributed, and store
    them in */root/altered.txt*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make our system installation media packages available via HTTP under the */mirror
    path* for other systems to use as a mirror, configuring the repository in our
    system. Remove the kernel packages from that mirror, so that other systems (even
    ours) can't find new kernels. Prevent the glibc packages from being installed
    from this repo without removing them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: While being *user*, make a copy of the */root* folder in */home/user/root/*
    folder, and keep it in sync every day, synchronizing additions and deletions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check that our system conforms to the PCI-DSS standard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a second hard drive of 30 GB to the system. However, use only 15 GB to move
    the mirror to it, making it available at boot using compression and deduplication.
    Make it available under */mirror/mirror*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As we plan to mirror custom sets of packages based on the same data, configure
    the filesystem to report at least 1,500 GB to be used by our mirrors.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a second copy of the mirror under */mirror/mytailormirror*, removing
    all packages starting with the letter *k**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new volume in the remaining space of the added hard drive (15 GB),
    and use it to extend the root filesystem.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a boot entry that allows you to boot into emergency mode, in order to
    change the root password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a custom tuning profile that defines the readahead to be *4096* for the
    first drive and *1024* for the second drive. This profile should also crash the
    system should an OOM event occur.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Disable and remove the installed HTTP package. Then, set up the HTTP server
    using the *registry.redhat.io/rhel8/httpd-24* image.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For this section, we'll copy each item in the list of goals, and then provide
    an explanation below it, using proper syntax highlighting and explanations.
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 1 resolution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1\. Configuring the time zone to GMT
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can check the current system date by executing the `date` command. At the
    very last part of the line that is subsequently printed, the time zone will be
    shown. In order to configure it, we can use the `timedatectl` command, or alter
    the `/etc/localtime` symbolic link.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, to achieve this goal, we can use one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`timedatectl set-timezone GMT`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rm â€“fv /etc/localtime; ln â€“s /usr/share/zoneinfo/GMT /etc/localtime`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now `date` should report the proper time zone.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Allowing password-less login to the root user using SSH
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Doing this will require the following:'
  prefs: []
  type: TYPE_NORMAL
- en: SSH must be installed and available (that means installed and started).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The root user should have an SSH key generated and added to the list of authorized
    keys.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'First, let''s tackle this with SSH, as seen in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s generate an SSH key by pressing *Enter* to accept all defaults:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s add the generated key (`/root/.ssh/id_rsa`) to the authorized keys:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: To validate this, we can execute `ssh localhost date`, after which we will be
    able to get our current system's date and time without providing a password.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Creating a user named 'user' that can connect to the machine without a password
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This requires creating a user and an SSH key that is added in a similar fashion
    to the root user. The next options will also be relevant to a user, but for the
    purposes of this demonstration, we will tackle them as separate tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s generate an SSH key by pressing *Enter* to accept all defaults:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s add the generated key (`/root/.ssh/id_rsa`) to the authorized keys:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: To validate this, we can execute `ssh localhost date`, and we will be able to
    get the current system date and time without providing a password.
  prefs: []
  type: TYPE_NORMAL
- en: Then, use `logout` to return to our `root` user.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. The user 'user' should change their password every week, with 2 days' warning
    and 1 day of usage once expired
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This requires us to tune the user restrictions, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 5\. The root user must be able to SSH as 'user' without a password, so that
    nobody can connect remotely as the root user using a password
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This requires two steps. The first is to enable `user` with the root''s authorized
    key, and then tune the `sshd` daemon, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Edit the `/etc/sshd/sshd_config` file and add or replace the `PermitRootLogin`
    line so that it looks like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Save and then restart the `sshd` daemon:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 6\. The user 'user' should be able to become root and execute commands without
    a password
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This means configuring the `/etc/sudoers` file by adding the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 7\. When a user tries to log in over SSH, display a legal message about not
    allowing unauthorized access to this system
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a file, for example, `/etc/ssh/banner`, with the message to display.
    For example, `"Get out of here"`.
  prefs: []
  type: TYPE_NORMAL
- en: Modify `/etc/ssh/sshd_config` and set the line banner with `/etc/ssh/banner`,
    then restart the `sshd` daemon with `systemctl restart sshd`.
  prefs: []
  type: TYPE_NORMAL
- en: 8\. SSH must listen on port 22222 instead of the default one
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This is a tricky one. The first step is to alter `/etc/ssh/sshd_config` and
    define port `22222`. Once this is done, restart `sshd` with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: This, of course, will fail... why?
  prefs: []
  type: TYPE_NORMAL
- en: 'The firewall must be configured:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'SELinux must then be configured:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, the `sshd` daemon can be restarted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 9\. Creating a group named 'devel'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 10\. Making 'user' a member of 'devel'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 11\. Storing user membership in a file called 'userids,' in a home folder for
    'user'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 12\. The user 'user' and root user should be able to connect to the localhost
    via SSH, without specifying the port, and default to compression for the connection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We altered the default SSH port to be `22222`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a file named `.ssh/config` for both `user` and root, with the following
    contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 13\. Finding all man page names in the system, and putting the names into a
    file named 'manpages.txt'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Man pages are stored in `/usr/share/man`. Therefore, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 14\. Printing usernames for users without a login, so they can be permitted
    access to the system, and printing the user ID and groups for each user
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following command first builds a list of users in the system with the `nologin`
    shell:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: From that list, check the membership in the `/etc/group` file, leaving only
    the group name, and using `xargs` to concatenate them into a string to be printed.
  prefs: []
  type: TYPE_NORMAL
- en: The above example makes use of `for` loops and inline execution of commands,
    via `$()`.
  prefs: []
  type: TYPE_NORMAL
- en: 15\. Monitoring available system resources every 5 minutes without using cron,
    and storing them as /root/resources.log
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The ideal way to monitor something would be cron, but as we''re told not to
    use it, this only leaves us with systemd timers. (You can check the files tested
    via the following link: [https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/tree/main/chapter-18-exercise1.](https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/tree/main/chapter-18-exercise1'
  prefs: []
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: 'Create `/etc/systemd/system/monitorresources.service` with the following contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Create `/etc/systemd/system/monitorresources.timer` with the following contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Create `/root/myresources.sh` with the following contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Enable the new timer, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Does it work? If not, `journalctl â€“f` will give some details. SELinux prevents
    us from executing a root file, so let''s convert it into a binary type and mark
    it as executable, as shown in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 16\. Adding a per-minute job to report the available percentage of free disk
    space and storing it in /root/freespace.log, so that it shows the filesystem and
    free space
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `df` reports used disk space and available space, so we need to do some
    math.
  prefs: []
  type: TYPE_NORMAL
- en: 'This will report the mounted location, size, used space, and available space,
    with `;` as a separator. Refer to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Bash allows us to do some math operations, but these lack fractional parts.
    Luckily, we can do a trick: we will be looping over it, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: The `for` loop will check all the available data, grab some specific fields,
    separate them with `;`, and then run the loop for each line, stored in the `$each`
    variable.
  prefs: []
  type: TYPE_NORMAL
- en: We cut the output and then get the fourth field. This is the available space.
  prefs: []
  type: TYPE_NORMAL
- en: We cut the output and then we get the second field. This is the total number
    of blocks.
  prefs: []
  type: TYPE_NORMAL
- en: As `bash` can do integer divisions, we can multiply by 100 and then divide to
    get the percentage and add a string as part of the output.
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively (but not as illustrative), we could have discounted to 100 the
    percentage of used already given by `df` and save some steps of the calculation.
  prefs: []
  type: TYPE_NORMAL
- en: We also need to store the output in a file. To do this, we can either wrap the
    whole loop in a redirection or add it in the `echo` line so that it appends to
    a file.
  prefs: []
  type: TYPE_NORMAL
- en: 'And we also need to do it via cron, so the full solution will be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a `/root/myfreespace.sh` script with the following contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Then, use `chmod 755 /root/myfreespace.sh` to make it executable.
  prefs: []
  type: TYPE_NORMAL
- en: 'Run `crontab -e` to edit root''s crontab, and add the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 17\. Configuring the system to only leave 3 days of logs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This can be done by editing `/etc/logrorate.conf`, with the following settings:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Remove other occurrences of weekly, monthly, and so on, to leave only the one
    we want.
  prefs: []
  type: TYPE_NORMAL
- en: 18\. Configuring log rotation for /root/freespace.log and /root/resources.log
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a `/etc/logrotate.d/rotateroot` file, with the following contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 19\. Configuring time synchronization against pool.ntp.org with fast sync
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Edit `/etc/chrony.conf` and add the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 20\. Providing NTP server services for subnet 172.22.0.1/24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Edit `/etc/chrony.conf`, by adding the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 21\. Configuring system stats collection every minute
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'We now need to modify `/usr/lib/systemd/system/sysstat-collect.timer`. Let''s
    do this by creating an override, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Edit `/etc/systemd/system/sysstat-collect.timer` by replacing the `OnCalendar`
    value so that it looks like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, reload the units with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 22\. Configuring the password length in the system for users to be 12 characters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Edit `/etc/login.defs` with the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 23\. Creating a bot user called 'privacy,' which keeps its files only visible
    to itself by default
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To do this, run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: This resolution uses `umask` to remove permissions from others on all newly
    created files.
  prefs: []
  type: TYPE_NORMAL
- en: 24\. Creating a folder named /shared that can be accessed by all users, and
    defaults new files and directories to still be accessible to users of the 'devel'
    group
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To do this, run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '25\. Configuring a network connection with IPv4 and IPv6 addressing named ''mynic,''
    using the provided data Ip6, as follows: 2001:db8:0:1::c000:207/64 g gateway 2001:db8:0:1::1
    IPv4 192.0.1.3/24 gateway 192.0.1.1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'See the following for how to accomplish this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 26\. Allowing the host to use a google hostname to reach www.google.com, and
    a redhat hostname to reach www.redhat.com
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Run and record the IPs obtained, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Note down the IPs obtained above.
  prefs: []
  type: TYPE_NORMAL
- en: 'Edit `/etc/hosts` by adding the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: Then, save and exit.
  prefs: []
  type: TYPE_NORMAL
- en: 27\. Reporting the files modified from those that the vendor distributed, and
    storing them in /root/altered.txt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'See the following for how to accomplish this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 28\. Making our system installation media packages available via HTTP under
    the path /mirror for other systems to use it as the mirror, and configuring the
    repository in our system. Removing the kernel packages from that mirror so that
    other systems (even ours) can't find new kernels. Ignoring the glibc packages
    from this repo to be installed without removing them
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is a complex one, so let's examine it step by step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Install `http` and enable it using the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a folder under `/mirror`, then copy the source media packages and make
    them available over `http`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'Remove the kernel packages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'Create repository file metadata by using the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: Create a repository file using the repository we created, and set it up on the
    system, ignoring the `glibc*` packages from it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Edit `/etc/yum.repos.d/mymirror.repo` by adding the following contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 29\. As 'user,' make a copy of the /root folder in the /home/user/root/ folder,
    and keep it in sync every day, synchronizing additions and deletions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'See the following for how to accomplish this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: 'Edit crontab and add the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 30\. Checking whether our system conforms to the PCI-DSS standard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 31\. Adding a second hard drive of 30 GB to the system, but using only 15 GB
    to move the mirror to it, making it available at boot using compression and deduplication,
    and available under /mirror/mirror
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Compression and deduplication in this sentence mean VDO. We need to move the
    mirror we currently have to it and make the old mirror we had go there instead.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we have the installation media, we can choose to copy it over and repeat
    the kernel removal or transfer. To do so, first let''s create the VDO volume in
    a partition in our new hard drive (`sdb`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: 'This will create a partition of 15 GB from the start. Let''s create a VDO volume
    on it, by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'At this point, the old mirror was copied into a `mirror` folder on the VDO
    volume. This is mounted under `/mirror`, hence it has the original mirror under
    `/mirror/mirror` as requested. We might need to perform the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Bind mount `/mirror` to `/var/www/html/mirror/` to make the file available.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restore SELinux context to allow the `httpd` daemon to access to files in `/var/www/html/mirror/`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adjust the repofile we created to point to the new path.
  prefs: []
  type: TYPE_NORMAL
- en: 32\. Configuring the filesystem to report at least 1,500 GB in size, to be used
    by our mirrors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'See the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 33\. Creating a second copy of the mirror under /mirror/mytailormirror and removing
    all packages starting with k*
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'See the following for how to accomplish this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 34\. Creating a new volume in the remaining space (15 GB) of the hard drive
    and using it to extend the root filesystem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'See the following for how to accomplish this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 35\. Creating a boot entry that allows us to boot into emergency mode in order
    to change the root password
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'See the following for how to accomplish this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 36\. Creating a custom tuning profile that defines the readahead to be 4096
    for the first drive and 1024 for the second drive â€“ this profile should also crash
    the system should an OOM event occur
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Refer to the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: 'Edit the `/etc/tuned/myprofile/tuned.conf` file by adding the following contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: 37\. Disabling and removing the installed httpd package, and setting up the
    httpd server using the registry.redhat.io/rhel8/httpd-24 image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'See the following for how to accomplish this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
