- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The mission of this book is to introduce developers to application monitoring
    and performance tuning to create highly performant applications. The book starts
    with the basic details of Spring Framework, including various Spring modules and
    projects, Spring bean and BeanFactory implementation, and aspect-oriented programming.
    It also explores Spring Framework as an IoC bean container. We will be discussing
    Spring MVC, which is a commonly used Spring module for building a user interface
    in detail with Spring Security authentication part with a stateless API. This
    book also emphasizes the importance of building optimized Spring applications
    for interacting with relational databases. Then, we will walk through some of
    the advanced ways of accessing databases using object-relational mapping (ORM)
    frameworks, such as Hibernate. The book moves on to the details of new Spring
    features, such as Spring Boot and reactive programming, with best practices suggestions.
    An important aspect of the book is its focus on building highly performant applications.
    The latter part of the book includes details for application monitoring, performance
    optimization, JVM internals, and garbage collection optimization. Finally, how
    to build microservices is explained to help you understand the challenges faced
    in the process and how to monitor its performance.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is suitable for Spring developers who would like to build high-performance
    applications and have more control over their application's performance in production
    and development. This book requires developers to have some familiarity with Java,
    Maven, and Eclipse.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](de7a391d-b408-4db8-a518-c092639bea5f.xhtml), *Exploring Spring
    Concepts*, focuses on gaining a clear understanding of the core features of Spring
    Framework. It briefly outlines the Spring modules and explores the integration
    of different Spring projects, and gives a clear explanation of the Spring IoC
    container. It ends by introducing the new features of Spring 5.0.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](cd47e5f4-5c77-413c-935f-ae3bfa508c9a.xhtml), *Spring Best Practices
    and Bean Wiring Configurations*, explores different bean wiring configurations
    with Java, XML, and annotations. The chapter also helps us learn different best
    practices when it comes to bean wiring configuration. It also helps us understand
    performance assessment with different configurations, as well as DI pitfalls.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](6ad6974a-b108-4e80-b13c-cbc5916d1969.xhtml), *Tuning Aspect-Oriented
    Programming*, explores the concepts of the Spring Aspect-Oriented Programming
    (AOP) module and its various terminologies. It also covers the concept of proxy.
    It ends by going through the best practices for achieving quality and performance
    with the Spring AOP module.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](3ad9ec7c-1a8c-4a0f-886f-28528322ac49.xhtml), *Spring MVC Optimization*,
    starts by giving a clear understanding of the Spring MVC module with different
    Spring MVC configuration methods. It also covers the concept of asynchronous processing
    in Spring. Then it explains Spring Security configuration and authentication part
    with a stateless API. It finishes by going through the monitoring part of Tomcat
    with JMX, and Spring MVC performance improvements.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](a133d0e3-ad9e-49c9-aa2d-df9703b4e84a.xhtml), *Understanding Spring
    Database Interactions*, helps us learn about database interaction with Spring
    Framework. It then walks through Spring transaction management and optimal connection
    pooling configuration. It ends by going through database design best practices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](98985288-3b37-4eeb-85af-b8c041de6efc.xhtml), *Hibernate Performance
    Tuning and Caching*, describes some of the advanced ways of accessing the database
    using ORM frameworks, such as Hibernate. It ends by explaining how we can remove
    the boilerplate code of implementing the Data Access Object (DAO) interface using
    Spring Data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](00cf6576-045e-4a14-aa8e-69d78ad7e912.xhtml), *Optimizing Spring
    Messaging*, starts by exploring the concepts of messaging in Spring and talks
    through its advantages. It then walks through the RabbitMQ configuration for using
    messaging in the Spring application. Finally, it describes the parameters for
    improving the performance and scalability to maximize throughput.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](73e171d7-9643-45ed-8f5e-4fb7981b04f0.xhtml), *Multithreading and
    Concurrent Programming*, covers the core concepts of Java threads and advanced
    thread support. It also covers the concept of Java thread pooling to improve performance.
    Before its close, it will explore Spring transaction management with threads and
    various best practices for programming threads.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ab008806-a688-40b3-a59b-0b2fa0a57db4.xhtml), *Profiling and Logging*,
    focuses on concepts surrounding profiling and logging. This chapter starts by
    defining profiling and logging and how they are useful for assessing application
    performance. In the latter part of the chapter, the focus will be on learning
    about software tools that can be used to study application performance.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](27908654-9c52-4966-b376-6a82df49d477.xhtml), *Application Performance
    Optimization*, focuses on optimizing application performance. It also covers details
    for identifying the symptoms of performance issues, the performance tuning life
    cycle, and JMX support in Spring.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](ad61c93d-bd89-4477-9e16-cf42fe616c94.xhtml), *Inside JVM*, walks
    through the insides of JVM and tuning JVM to achieve high performance. It also
    covers the topics related to memory leaks and common misunderstandings related
    to garbage collection, before moving onto different garbage collection methods
    and discussion of their importance.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](ffdd6481-357a-4a6c-9a62-b5cc8315b967.xhtml), *Spring Boot Microservice
    Performance Tuning*, covers the concept of Spring Boot microservices and their
    performance tuning. It also clearly describes how to use actuators and health
    checks in order to monitor Spring Boot applications. It also covers the different
    techniques in order to tune the performance of Spring Boot applications.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book requires developers to have some familiarity with Java, Maven, and
    Eclipse.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-High-Performance-with-Spring-5](https://github.com/PacktPublishing/Hands-On-High-Performance-with-Spring-5). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it from [https://www.packtpub.com/sites/default/files/downloads/HandsOnHighPerformancewithSpring5_ColorImages.pdf.](https://www.packtpub.com/sites/default/files/downloads/HandsOnHighPerformancewithSpring5_ColorImages.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "To avoid `LazyInitializationException`, one of the solutions
    is an open session in view. "'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Inside the Applications window, we can see a menu for Local nodes."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
