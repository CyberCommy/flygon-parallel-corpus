- en: Chapter 1. What is Quantitative Finance?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Quantitative Finance studies the application of quantitative techniques to the
    solution of problems in finance. It spans diverse areas such as the management
    of investment funds and insurance companies, the control of financial risks for
    manufacturing companies and banking industry, and the behavior of the financial
    markets. Quantitative Finance is eminently interdisciplinary building upon key
    expertise from the disciplines of finance, mathematics, and informatics.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this book, we will focus on one aspect of Quantitative Finance—the pricing
    of financial derivatives using the programming language C++. In the following
    sections, we will describe the main features of the three key disciplines that
    constitute Quantitative Finance:'
  prefs: []
  type: TYPE_NORMAL
- en: Finance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mathematics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Informatics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discipline 1 – finance (financial derivatives)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In general, a financial derivative is a contract between two parties who agree
    to exchange one or more cash flows in the future. The value of these cash flows
    depends on some future event, for example, that the value of some stock index
    or interest rate being above or below some predefined level. The activation or
    triggering of this future event thus depends on the behavior of a variable quantity
    known as **the underlying**. Financial derivatives receive their name because
    they derive their value from the behavior of another financial instrument.
  prefs: []
  type: TYPE_NORMAL
- en: As such, financial derivatives do not have an intrinsic value in themselves
    (in contrast to bonds or stocks); their price depends entirely on the underlying.
  prefs: []
  type: TYPE_NORMAL
- en: A critical feature of derivative contracts is thus that their future cash flows
    are probabilistic and not deterministic. The future cash flows in a derivative
    contract are contingent on some future event. That is why derivatives are also
    known as **contingent claims**. This feature makes these types of contracts difficult
    to price.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the most common types of financial derivatives:'
  prefs: []
  type: TYPE_NORMAL
- en: Futures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Forwards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Swaps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Futures and forwards are financial contracts between two parties. One party
    agrees to buy the underlying from the other party at some predetermined date (the
    maturity date) for some predetermined price (the delivery price). An example could
    be a one-month forward contract on one ounce of silver. The underlying is the
    price of one ounce of silver. No exchange of cash flows occur at inception (today,
    *t=0*), but it occurs only at maturity (*t=T*). Here *t* represents the variable
    time. Forwards are contracts negotiated privately between two parties (in other
    words, **Over The Counter** (**OTC**)), while futures are negotiated at an exchange.
  prefs: []
  type: TYPE_NORMAL
- en: Options are financial contracts between two parties. One party (called the **holder**
    of the option) pays a premium to the other party (called the **writer** of the
    option) in order to have the right, but not the obligation, to buy some particular
    asset (the underlying) for some particular price (the strike price) at some particular
    date in the future (the maturity date). This type of contract is called a **European
    Call** contract.
  prefs: []
  type: TYPE_NORMAL
- en: '**Example 1**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider a one-month call contract on the S&P 500 index. The underlying in
    this case will be the value of the S&P 500 index. There are cash flows both at
    inception (today, *t=0*) and at maturity (*t=T*). At inception, (*t=0*) the premium
    is paid, while at maturity (*t=T*), the holder of the option will choose between
    the following two possible scenarios, depending on the value of the underlying
    at maturity *S(T)*:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Scenario A: To exercise his/her right and buy the underlying asset for *K*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Scenario B: To do nothing if the value of the underlying at maturity is below
    the value of the strike, that is, *S(T)<K*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The option holder will choose Scenario A if the value of the underlying at maturity
    is above the value of the strike, that is, *S(T)>K*. This will guarantee him/her
    a profit of *S(T)-K*. The option holder will choose Scenario B if the value of
    the underlying at maturity is below the value of the strike, that is, *S(T)<K*.
    This will guarantee him/her to limit his/her losses to zero.
  prefs: []
  type: TYPE_NORMAL
- en: '**Example 2**'
  prefs: []
  type: TYPE_NORMAL
- en: An **Interest Rate Swap** (**IRS**) is a financial contract between two parties
    A and B who agree to exchange cash flows at regular intervals during a given period
    of time (the life of a contract). Typically, the cash flows from A to B are indexed
    to a fixed rate of interest, while the cash flows from B to A are indexed to a
    floating interest rate. The set of fixed cash flows is known as the **fixed leg**,
    while the set of floating cash flows is known as the **floating leg**. The cash
    flows occur at regular intervals during the life of the contract between inception
    (*t=0*) and maturity (*t=T*). An example could be a fixed-for-floating IRS, who
    pays a rate of 5 percent on the agreed notional *N* every three months and receives
    EURIBOR3M on the agreed notional *N* every three months.
  prefs: []
  type: TYPE_NORMAL
- en: '**Example 3**'
  prefs: []
  type: TYPE_NORMAL
- en: A futures contract on a stock index also involves a single future cash flow
    (the delivery price) to be paid at the maturity of the contract. However, the
    payoff in this case is uncertain because how much profit I will get from this
    operation will depend on the value of the underlying at maturity.
  prefs: []
  type: TYPE_NORMAL
- en: 'If the price of the underlying is above the delivery price, then the payoff
    I get (denoted by function *H*) is positive (indicating a profit) and corresponds
    to the difference between the value of the underlying at maturity *S(T)* and the
    delivery price *K*. If the price of the underlying is below the delivery price,
    then the payoff I get is negative (indicating a loss) and corresponds to the difference
    between the delivery price *K* and the value of the underlying at maturity *S(T)*.
    This characteristic can be summarized in the following payoff formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Discipline 1 – finance (financial derivatives)](img/00002.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 1
  prefs: []
  type: TYPE_NORMAL
- en: Here, *H(S(T))* is the payoff at maturity, which is a function of *S(T)*. Financial
    derivatives are very important to the modern financial markets. According to the
    **Bank of International Settlements** (**BIS**) as of December 2012, the amounts
    outstanding for OTC derivative contracts worldwide were Foreign exchange derivatives
    with 67,358 billion USD, Interest Rate Derivatives with 489,703 billion USD, Equity-linked
    derivatives with 6,251 billion USD, Commodity derivatives with 2,587 billion USD,
    and Credit default swaps with 25,069 billion USD. For more information, see [http://www.bis.org/statistics/dt1920a.pdf](http://www.bis.org/statistics/dt1920a.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Discipline 2 – mathematics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We need mathematical models to capture both the future evolution of the underlying
    and the probabilistic nature of the contingent cash flows we encounter in financial
    derivatives.
  prefs: []
  type: TYPE_NORMAL
- en: Regarding the contingent cash flows, these can be represented in terms of the
    payoff function *H(S(T))* for the specific derivative we are considering. Because
    *S(T)* is a stochastic variable, the value of *H(S(T))* ought to be computed as
    an expectation *E[H(S(T))]*. And in order to compute this expectation, we need
    techniques that allow us to predict or simulate the behavior of the underlying
    *S(T)* into the future, so as to be able to compute the value of *ST* and finally
    be able to compute the mean value of the payoff *E[H(S(T))]*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Regarding the behavior of the underlying, typically, this is formalized using
    **Stochastic Differential Equation**s (**SDEs**), such as **Geometric Brownian
    Motion** (**GBM**), as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Discipline 2 – mathematics](img/00003.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 2
  prefs: []
  type: TYPE_NORMAL
- en: The previous equation fundamentally says that the change in a stock price (*dS*),
    can be understood as the sum of two effects—a deterministic effect (first term
    on the right-hand side) and a stochastic term (second term on the right-hand side).
    The parameter ![Discipline 2 – mathematics](img/00004.jpeg) is called the **drift**,
    and the parameter ![Discipline 2 – mathematics](img/00005.jpeg) is called the
    **volatility**. *S* is the stock price, *dt* is a small time interval, and *dW*
    is an increment in the Wiener process.
  prefs: []
  type: TYPE_NORMAL
- en: This model is the most common model to describe the behavior of stocks, commodities,
    and foreign exchange. Other models exist, such as jump, local volatility, and
    stochastic volatility models that enhance the description of the dynamics of the
    underlying.
  prefs: []
  type: TYPE_NORMAL
- en: 'Regarding the numerical methods, these correspond to ways in which the formal
    expression described in the mathematical model (usually in continuous time) is
    transformed into an approximate representation that can be used for calculation
    (usually in discrete time). This means that the SDE that describes the evolution
    of the price of some stock index into the future, such as the FTSE 100, is changed
    to describe the evolution at discrete intervals. An approximate representation
    of an SDE can be calculated using the Euler approximation as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Discipline 2 – mathematics](img/00006.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 3
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding equation needs to be solved in an iterative way for each time
    interval between now and the maturity of the contract. If these time intervals
    are days and the contract has a maturity of 30 days from now, then we compute
    tomorrow''s price in terms of todays. Then we compute the day after tomorrow as
    a function of tomorrow''s price and so on. In order to price the derivative, we
    require to compute the expected payoff *E[H(ST)]* at maturity and then discount
    it to the present. In this way, we would be able to compute what should be the
    fair premium ![Discipline 2 – mathematics](img/00007.jpeg) associated with a European
    option contract with the help of the following equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Discipline 2 – mathematics](img/00008.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 4
  prefs: []
  type: TYPE_NORMAL
- en: Discipline 3 – informatics (C++ programming)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is the role of C++ in pricing derivatives? Its role is fundamental. It
    allows us to implement the actual calculations that are required in order to solve
    the pricing problem. Using the preceding techniques to describe the dynamics of
    the underlying, we require to simulate many potential future scenarios describing
    its evolution. Say we ought to price a futures contract on the EUR/USD exchange
    rate with one year maturity. We have to simulate the future evolution of EUR/USD
    for each day for the next year (using equation 3). We can then compute the payoff
    at maturity (using equation 1). However, in order to compute the expected payoff
    (using equation 4), we need to simulate thousands of such possible evolutions
    via a technique known as **Monte Carlo simulation**. The set of steps required
    to complete this process is known as an **algorithm**. To price a derivative,
    we ought to construct such algorithm and then implement it in an advanced programming
    language such as C++. Of course C++ is not the only possible choice, other languages
    include Java, VBA, C#, Mathworks Matlab, and Wolfram Mathematica. However, C++
    is an industry standard because it's flexible, fast, and portable. Also, through
    the years, several numerical libraries have been created to conduct complex numerical
    calculations in C++. Finally, C++ is a powerful modern object-oriented language.
  prefs: []
  type: TYPE_NORMAL
- en: It is always difficult to strike a balance between clarity and efficiency. We
    have aimed at making computer programs that are self-contained (not too object
    oriented) and self-explanatory. More advanced implementations are certainly possible,
    particularly in the context of larger financial pricing libraries in a corporate
    context. In this book, all the programs are implemented with the newest standard
    C++11 using **Code::Blocks** ([http://www.codeblocks.org](http://www.codeblocks.org))
    and **MinGW** ([http://www.mingw.org](http://www.mingw.org)).
  prefs: []
  type: TYPE_NORMAL
- en: The Bento Box template
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A Bento Box is a single portion take-away meal common in Japanese cuisine.
    Usually, it has a rectangular form that is internally divided in compartments
    to accommodate the various types of portions that constitute a meal. In this book,
    we use the metaphor of the Bento Box to describe a visual template to facilitate,
    organize, and structure the solution of derivative problems. The Bento Box template
    is simply a form that we will fill sequentially with the different elements that
    we require to price derivatives in a logical structured manner. The Bento Box
    template when used to price a particular derivative is divided into four areas
    or boxes, each containing information critical for the solution of the problem.
    The following figure illustrates a generic template applicable to all derivatives:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Bento Box template](img/00009.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Bento Box template – general case
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows an example of the Bento Box template as applied
    to a simple European Call option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Bento Box template](img/00010.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Bento Box template – European Call option
  prefs: []
  type: TYPE_NORMAL
- en: 'In the preceding figure, we have filled the various compartments, starting
    in the top-left box and proceeding clockwise. Each compartment contains the details
    about our specific problem, taking us in sequence from the conceptual (box 1:
    derivative contract) to the practical (box 4: algorithm), passing through the
    quantitative aspects required for the solution (box 2: mathematical model and
    box 3: numerical method).'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter gave an overview of the main elements of Quantitative Finance as
    applied to pricing financial derivatives. The Bento Box template technique will
    be used in the following chapters to organize our approach to solve problems in
    pricing financial derivatives. We will assume that we are in possession with enough
    information to fill box 1 (derivative contract). Further details about the mathematical
    models (box 2) will be described in [Chapter 2](part0019_split_000.html#I3QM2-f9cfc61bea324a5db85ec5ea1673cdfd
    "Chapter 2. Mathematical Models"), *Mathematical Models*.
  prefs: []
  type: TYPE_NORMAL
