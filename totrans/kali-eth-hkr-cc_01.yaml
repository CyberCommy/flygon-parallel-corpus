- en: Kali – An Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring the Xfce environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring the Mate environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring the LXDE environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring the e17 environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring the KDE environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prepping up with custom tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pentesting VPN's ike-scan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up proxychains
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Going on a hunt with Routerhunter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kali was first introduced in 2012 with a completely new architecture. This Debian-based
    distro was released with over 300 tools specialized for penetration testing and
    digital forensics. It is maintained and funded by Offensive Security Ltd with
    core developers being Mati Aharoni, Devon Kearns, and Raphael Hertzog.
  prefs: []
  type: TYPE_NORMAL
- en: Kali 2.0 came into the picture in 2016 with tons of new updates and new desktop
    environments such as KDE, Mate, LXDE, e17, and Xfce builds.
  prefs: []
  type: TYPE_NORMAL
- en: While Kali is already pre-equipped with hundreds of amazing tools and utilities
    to help penetration testers around the globe to perform their job efficiently,
    in this chapter, we will primarily cover some custom tweaks that can be used to
    have an even better pentesting experience for the users.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Kali Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will use the official Kali Linux ISO provided by Offensive Security to install
    and configure different desktop environments such as Mate, e17, Xfce, LXDE, and
    KDE desktops.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To start with this recipe we will use the 64-bit Kali Linux ISO listed on the
    Offensive Security website:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.kali.org/downloads/](https://www.kali.org/downloads/)'
  prefs: []
  type: TYPE_NORMAL
- en: For users looking to configure Kali in a virtual machine such as VMware, VirtualBox,
    and so on, a pre-built image of the Linux can be downloaded from [https://www.offensive-security.com/kali-linux-vmware-virtualbox-image-download/](https://www.offensive-security.com/kali-linux-vmware-virtualbox-image-download/).
  prefs: []
  type: TYPE_NORMAL
- en: We will use the virtual image in this chapter and customize it with some additional
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can configure Kali with the help of the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Double-click on the VirtualBox image, it should open with VirtualBox:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/14636e3a-7c11-4ba2-85e7-cce85a5607cd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click Import:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/32d80238-d983-4d43-8440-510093fd43e2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Start the machine and enter the password as `toor`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, Kali is started and by default is configured with the GNOME desktop environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0b5f1c8f-bf4e-44b4-974d-2282aedf602d.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the pre-built image you don't need to worry about the installation process.
    You can consider it as a ready-to-go solution. Simply click on run and the virtual
    machine will boot up Linux just like a normal machine.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the Xfce environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Xfce is a free, fast, and lightweight desktop environment for Unix and Unix-like
    platforms. It was started by Olivier Fourdan in 1996\. The name **Xfce** originally
    stood for **XForms Common Environment**, but since that time Xfce has been rewritten
    twice and no longer uses the XForms toolkit.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To configure the Xfce environment follow the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We start by using the following command to install Xfce along with all plugins
    and goodies:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/05b0e78d-ada6-4888-84c3-2a14a50b42d0.png)'
  prefs: []
  type: TYPE_IMG
- en: Type `Y` when it asks for confirmation on additional space requirements.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Ok on the dialogue box that appears.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We select lightdm as our default desktop manager and press the *Enter* key.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When the installation is complete we open a Terminal window and type the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d8587cd6-080c-486b-98c1-5138a62f359b.png)'
  prefs: []
  type: TYPE_IMG
- en: Choose the option `xfce4-session` (in our case `3`) and press the  *Enter* key.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Log out and log in again or you can restart the machine and we will see the
    Xfce environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/57d85b07-5447-4d19-8cc4-38865bd9d93c.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the Mate environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Mate desktop environment was built in continuation of GNOME 2\. It was first
    released in 2011.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To configure the Mate environment follow the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We start by using the following command to install the Mate environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/16749e66-2dec-4a85-950b-2fcff8e81135.png)'
  prefs: []
  type: TYPE_IMG
- en: Type `Y` when it asks for confirmation on additional space requirements.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When installation is complete we will use the following command to set Mate
    as our default environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Choose the option `mate-session` (in our case `2`) and press the *Enter* key:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6a182b72-f54c-44f8-8609-b3048359f37c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Log out and log in again or restart and we will see the Mate environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a5fcadd1-0d74-4882-bcba-1fe8a5ebe31a.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the LXDE environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: LXDE is a free open source environment written in C using GTK+ toolkit for Unix
    and other POSIX platforms. **Lightweight X11 Desktop Environment** (**LXDE**)
    is the default environment for many operating systems such as Knoppix, Raspbian,
    Lubuntu, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To configure the LXDE environment follow the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We start by using the following command to install LXDE:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Type `Y` when it asks for confirmation on additional space requirements.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When the installation is complete we open a Terminal window and type the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output for the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f3ba43f5-38dc-4d15-aa9d-af17997cfd15.png)'
  prefs: []
  type: TYPE_IMG
- en: Choose the option `lxsession` (in our case `4`) and press *Enter*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Log out and log in again and we will see the LXDE environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8d774766-f648-452a-96e0-1aa9bf24b62a.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the e17 environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Enlightenment**, or otherwise known as **E**, is a window manager for the
    X Windows system. It was first released in 1997\. It has lots of features such
    as engage, virtual desktop, tiling, and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Due to compatibility issues and dependencies hassle it is better to set up
    the Kali environment as a different machine. This ISO image (Kali 64-bit e17)
    is already available on the official website of Kali Linux and can be downloaded
    from the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.kali.org/downloads/](https://www.kali.org/downloads/).'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the KDE environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: KDE is an international community for free software. The plasma desktop is one
    of the most popular projects of KDE; it comes as a default desktop environment
    for a lot of Linux distributions. It was founded in 1996 by Matthias Ettrich.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To configure the KDE environment follow the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We use the following command to install KDE:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output for the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9fc06226-04ca-4874-8c82-8bdd0fd772cd.png)'
  prefs: []
  type: TYPE_IMG
- en: Type `Y` when it asks for confirmation on additional space requirements.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click OK on both the windows that pop up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When the installation is complete we open a Terminal window and type the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output for the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0fdad0c5-e1a7-4d28-ae25-742cf4ea123d.png)'
  prefs: []
  type: TYPE_IMG
- en: Choose the option KDE session (in our case `2`) and press *Enter*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Log out and log in again and we will see the KDE environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0122b438-6bb9-415d-9e64-75b490b5759e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Kali already has provided prebuilt images of different desktop environments.
    These can be downloaded from here: [https://www.kali.org/downloads/](https://www.kali.org/downloads/).'
  prefs: []
  type: TYPE_NORMAL
- en: Prepping up with custom tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These tools you will install are open source available on GitHub. They are much
    faster and contain collections of different tweaks that people have included over
    a period of time during their own pentesting experience.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here is a list of some tools that you will need before we dive deeper into
    penetration testing. Not to worry, you will be learning their usage with some
    real-life examples in the next few chapters. However, if you still wish to learn
    basics in an early stage it can simply be done with simple commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`toolname -help`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`toolname -h`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Some of the tools are listed in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Dnscan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Dnscan is a Python tool that uses a wordlist to resolve valid subdomains. To
    learn about Dnscan follow the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will use a simple command to clone the git repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1b3a9999-7211-40f8-89c8-6e339f360298.png)'
  prefs: []
  type: TYPE_IMG
- en: You can also download and save it from [https://github.com/rbsec/dnscan](https://github.com/rbsec/dnscan).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next we browse into the directory where we downloaded Dnscan.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run Dnscan by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output for the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a55ea837-56bf-401f-983b-bb65f75ad479.png)'
  prefs: []
  type: TYPE_IMG
- en: Subbrute
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next we will install subbrute. It is amazingly fast and provides an extra layer
    of anonymity as it uses public resolvers to brute force the subdomains:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The command here is again simple:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9c9e4e3b-1ffa-436d-a8a3-e9cc7a7db617.png)'
  prefs: []
  type: TYPE_IMG
- en: Or you can download and save it from [https://github.com/TheRook/subbrute](https://github.com/TheRook/subbrute).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the installation is complete we will need a wordlist for it to run for
    which we can download dnspop''s list. This list can be used in the previous recipe
    too: [https://github.com/bitquark/dnspop/tree/master/results](https://github.com/bitquark/dnspop/tree/master/results).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once both are set up we browse into the subbrute''s directory and run it using
    the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'To run it against a domain with our wordlist we use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Dirsearch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Our next tool in the line is dirsearch. As the name suggests it is a simple
    command-line tool that can be used to brute force the directories. It is much
    faster than the traditional DIRB:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The command to install is:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Or you can download and save it from [https://github.com/maurosoria/dirsearch](https://github.com/maurosoria/dirsearch).
    The following screenshot shows the preceding command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e415539c-b9d0-43e7-b172-9676c205fc82.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the cloning is complete browse to the directory and run the tool by using
    the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output for the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ae82f928-fe8c-477c-829e-169d01a8527b.png)'
  prefs: []
  type: TYPE_IMG
- en: Pentesting VPN's ike-scan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Often during a pentest we may encounter VPN endpoints. However, finding vulnerabilities
    in those endpoints and exploiting them is not a well known method. VPN endpoints
    use **Internet Key Exchange** (**IKE**) protocol to set up a *security association*
    between multiple clients to establish a VPN tunnel.
  prefs: []
  type: TYPE_NORMAL
- en: IKE has two phases, *phase 1* is responsible for setting up and establishing
    secure authenticated communication channel, and *phase 2* encrypts and transports
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Our focus of interest here would be *phase 1*; it uses two methods of exchanging
    keys:'
  prefs: []
  type: TYPE_NORMAL
- en: Main mode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aggressive mode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will hunt for aggressive mode enabled VPN endpoints using PSK authentication.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this recipe we will use the tools `ike-scan` and `ikeprobe`. First we install
    `ike-scan` by cloning the git repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Or you can use the following URL to download it from [https://github.com/royhills/ike-scan](https://github.com/royhills/ike-scan).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To configure `ike-scan` follow the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Browse to the directory where `ike-scan` is installed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Install `autoconf` by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Run `autoreconf --install` to generate a `.configure` file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `./configure`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `make` to build the project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `make check` to verify the building stage.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `make install` to install `ike-scan`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To scan a host for an aggressive mode handshake, use the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output for the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a3596059-9058-42bb-bad9-3411e3fd966e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Sometimes we will see the response after providing a valid group name like
    (vpn):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the example of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1d66efb8-607e-4763-bbd6-adda5b42ea30.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can even brute force the groupnames using the following script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/SpiderLabs/groupenum](https://github.com/SpiderLabs/groupenum).
    [](https://github.com/SpiderLabs/groupenum)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The command:'
  prefs: []
  type: TYPE_NORMAL
- en: '`./dt_group_enum.sh x.x.x.x groupnames.dic`'
  prefs: []
  type: TYPE_NORMAL
- en: Cracking the PSK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To learn how to crack the PSK follow the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding a `-P` flag in the `ike-scan` command it will show a response with the
    captured hash.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To save the hash we provide a filename along with the `-P` flag.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next we can use the `psk-crack` with the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Where `-b` is brute force mode and length is `5`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To use a dictionary based attack we use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output for the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7677b531-0a79-44e3-bfe9-4b95f628fef4.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In aggressive mode the authentication hash is transmitted as a response to the
    packet of the VPN client that tries to establish a connection Tunnel (IPSEC).
    This hash is not encrypted and hence it allows us to capture the hash and perform
    a brute force attack against it to recover our PSK.
  prefs: []
  type: TYPE_NORMAL
- en: This is not possible in main mode as it uses an encrypted hash along with a
    six way handshake, whereas aggressive mode uses only three way.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up proxychains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sometimes we need to remain untraceable while performing a pentest activity.
    Proxychains helps us by allowing us to use an intermediary system whose IP can
    be left in the logs of the system without the worry of it tracing back to us.
  prefs: []
  type: TYPE_NORMAL
- en: Proxychains is a tool that allows any application to follow connection via proxy
    such as SOCKS5, Tor, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Proxychains is already installed in Kali. However, we need a list of proxies
    into its configuration file that we want to use:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To do that we open the config file of proxychains in a text editor with this
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output for the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/93df95bd-f178-48b6-9af7-f82de2c1373b.png)'
  prefs: []
  type: TYPE_IMG
- en: We can add all the proxies we want in the preceding highlighted area and then
    save.
  prefs: []
  type: TYPE_NORMAL
- en: Proxychains also allows us to use dynamic chain or random chain while connecting
    to proxy servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the config file uncomment the **dynamic_chain** or **random_chain**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2ff520ed-baf3-4f8c-8f47-d39209f96322.png)'
  prefs: []
  type: TYPE_IMG
- en: Using proxychains with tor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To learn about `tor` follow the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To use proxychains with tor we first need to install tor using the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Once it is installed we run tor by typing `tor` in the Terminal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We then open another Terminal and type the following command to use an application
    via proxychains:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the example of the preceding commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7fdf7841-d065-43bf-a44f-d22132efe27e.png)'
  prefs: []
  type: TYPE_IMG
- en: Going on a hunt with Routerhunter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Routerhunter is a tool used to find vulnerable routers on a network and perform
    various attacks on it to exploit the DNSChanger vulnerability. This vulnerability
    allows an attacker to change the DNS server of the router hence directing all
    the traffic to desired websites.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this recipe, you will again need to clone a git repository.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To execute `RouterHunterBR.php` follow the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Once the file is cloned, enter the directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ddeff2ac-eeac-4280-87a8-339e2ee913f7.png)'
  prefs: []
  type: TYPE_IMG
- en: We can provide Routerhunter an IP range, DNS server IP's, and so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
