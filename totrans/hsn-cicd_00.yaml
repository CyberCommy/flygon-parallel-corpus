- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Writing modern software is hard because there are many groups involved in the
    delivery of software, including developers, QA, operations, product owners, customer
    support, and sales. There needs to be a process by which the development of the
    software is done in an automated way as it is being built. The process of continuous
    integration and continuous delivery will help ensure that the software that you
    deliver to your end users is of the highest quality and has been through a series
    of checks in a CI/CD pipeline. In this book, you will learn how to use Jenkins
    CI and how to write freestyle scripts, plugins, as well as how to use the newer
    Jenkins 2.0 UI and pipelines. You will learn about Travis CI in terms of the UI,
    the Travis CLI, advanced logging and debugging techniques, and best practices
    with Travis CI. You will also learn about Circle CLI in terms of the UI, the Circle
    CLI, advanced logging and debugging and best practices with CircleCI. Throughout
    the book we will talk about concepts such as containers, security, and deployment,
    among others.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is meant for system administrators, QA engineers, DevOps, and site
    reliability engineers. You should have an understanding of Unix programming, basic
    programming concepts, and version control systems such as Git.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](69088250-887a-4306-ac24-fcda17be315b.xhtml), *CI/CD with Automated
    Testing*, introduces the concept of automation and the explains the importance
    of automation compared to manual processes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](1f431ec3-84d5-4132-b542-01d1fe63a205.xhtml), *Basics of Continuous
    Integration*, introduces the concept of continuous integration, explains what
    a software build is, and covers CI build practices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](e80cf8c3-7464-4c16-865b-78e3c264a98e.xhtml), *Basics of Continuous
    Delivery*, introduces the concept of continuous delivery and in particular explains
    the problem of delivering software, configuration management, deployment pipelines,
    and scripting.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](b937160a-5142-4bd6-8c9c-c7196dab09a5.xhtml), *The Business Value
    of CI/CD*, covers the business value of CI/CD by explaining problems with communication,
    such as the ability to communicate pain points to team members, sharing responsibilities
    among team members, knowing your stakeholders, and demonstrating why CI/CD is
    important.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](3e1059c7-00d0-48a6-882b-7d7dbdf8aa50.xhtml), *Installation and
    Basics of Jenkins*, helps you get Jenkins CI installed on Windows, Linux, and
    macOS OSes. You will also learn how to run Jenkins in a local system and how to
    manage Jenkins CI.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](77945112-d3fe-4859-b814-d00fd09aa225.xhtml), *Writing Freestyle
    Scripts*, covers how to write freestyle scripts in Jenkins and how to configure
    freestyle scripts in Jenkins, along with adding environment variables and debugging
    issues in freestyle scripts.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](6b13378c-73a7-4dc5-b547-0e6f2f153927.xhtml), *Developing Plugins*,
    explains what a plugin is in software, how to create a Jenkins plugin using Java
    and Maven, and goes over the Jenkins plugin ecosystem.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](f44ac1d8-cd25-46c4-aab1-23325964fd8b.xhtml), *Building Pipelines
    with Jenkins*, covers Jenkins 2.0 in detail and explains how to navigate in Jenkins
    2.0 (Blue Ocean), and also covers the new pipeline syntax in great detail.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](65f27cc1-0630-4515-be75-5eedeb8004e5.xhtml), *Installation and
    Basics of Travis CI*, introduces you to Travis CI and explains the differences
    between Travis CI and Jenkins CI. We look at Travis life cycle events and the
    Travis YML syntax. We also explain how to get started and set up with GitHub.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](1d648fa2-3d76-4cff-b286-1e1fe47b4ef3.xhtml), *Travis CI CLI Commands
    and Automation*, shows you how to get the Travis CI CLI installed, explains each
    command in the CLI in great detail, shows you how to automate tasks in Travis
    CI, and explains how to use the Travis API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](f2319c39-b2e4-40cb-b1bb-53daa589776b.xhtml), *Travis CI UI Logging
    and Debugging*, explains the Travis Web UI in detail and showcases advanced techniques
    in logging and debugging in Travis CI.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](b65e7e26-1e86-44fc-a912-34de30c085ac.xhtml), *Installation and
    Basics of CircleCI*, helps you set up CircleCI with Bitbucket and GitHub and shows
    how to navigate the CircleCI Web UI. We will also explain the CircleCI YML syntax.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](98200aa9-aa3f-40d8-9f9e-d675fc2c67b8.xhtml), *CircleCI CLI Commands
    and Automation*, helps you install the CircleCI CLI and explains each command
    in the CLI. We will also go over workflows in CircleCI and how to use the CircleCI
    API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](c8355d57-1eb8-4e45-93f5-a32513185de3.xhtml), *CircleCI UI Logging
    and Debugging*, explains the job log in detail and shows how to debug slow builds
    in CircleCI. We will also go over logging and troubleshooting techniques in CircleCI.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](1b80a7af-1701-4047-ad58-971656d0bb4a.xhtml), *Best Practices*,
    covers best practices for writing unit tests, integration tests, system tests,
    acceptance tests in CI/CD, and best practices in password and secret management.
    We will also go over best practices in deployment.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to get the most out of of this book you will need to be familiar with
    Unix programming concepts such as working with the Bash shell, environment variables,
    and shell scripting, and understand basic commands in Unix. You should be familiar
    with the concept of version control and know what is meant by a commit, and you'll
    need to understand how to use Git in particular. You should know basic programming
    languages concepts because we will use languages such as Golang, Node.js, and
    Java, which will work as build languages that we use in or CI/CD pipelines and
    examples.
  prefs: []
  type: TYPE_NORMAL
- en: This book is OS-agnostic, but you will need access to a Unix environment and
    commands in order to use some of the concepts in this book. So, if you are using
    Windows, it may be useful to have Git Bash ([https://git-scm.com/downloads](https://git-scm.com/downloads))
    and/or the Ubuntu Subsystem installed if possible. You will need to have Git ([https://git-scm.com/downloads](https://git-scm.com/downloads)),
    Docker ([https://docs.docker.com/install/](https://docs.docker.com/install/)),
    Node.js ([https://nodejs.org/en/download/](https://nodejs.org/en/download/)),
    Golang ([https://golang.org/dl/](https://golang.org/dl/)), and Java ([https://java.com/en/download/](https://java.com/en/download/))
    installed in your system. It would be very helpful to have a text editor such
    as Visual Studio Code ([https://code.visualstudio.com/download](https://code.visualstudio.com/download))
    and a terminal console application.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-Continuous-Integration-and-Delivery](https://github.com/PacktPublishing/Hands-On-Continuous-Integration-and-Delivery) under
    the README section, where you can find all the links to the code files chapterwise
    . In case there's an update to the code, the links will be updated on the existing
    GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Chocolatey installation instructions can be found at `chocolatey.org/install`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Click Continue and make sure to click on the Agree button."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
