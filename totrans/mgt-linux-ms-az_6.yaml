- en: 6\. Troubleshooting and problem solving
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our migration journey started in *Chapter 3*, *Assessment and migration planning*,
    where we saw the importance of assessment and its contribution to the overall
    migration journey.
  prefs: []
  type: TYPE_NORMAL
- en: In *Chapter 4*, *Performing migration to Azure*, we witnessed the actual migration
    of Linux workloads to Microsoft Azure Virtual Machines as well as to managed services.
    *Chapter 5*, *Operating Linux on Azure*, was more about the post-migration strategies
    and tools for optimizing and securing workloads in Azure.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we have our **virtual machine** (**VM**) successfully migrated
    to Azure. Time to pack your bags and consider the job well done. However, sometimes
    things don't work the way they should. You might be getting strange errors in
    your log files or your client might be complaining that the migrated application
    is behaving incorrectly. You could even find out that your VM doesn't boot at
    all.
  prefs: []
  type: TYPE_NORMAL
- en: Being able to analyze the problem and debug the affected system yourself is
    quite important. You don't want to get stuck in the middle of your migration project
    just because you don't know how to figure out why something doesn't work.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will help you to learn and understand how to assess, debug, and
    fix the most common issues in Linux to Azure migration projects. These topics
    are also useful for newly created Linux VMs on Azure.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will learn about the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Remote connectivity and VM start issues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common Linux runtime challenges
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure diagnostics tooling – a summary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Opening support requests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To get the most from this chapter, you should be familiar with the typical debugging
    methods for on-premises or hosted Linux servers. On Azure, some aspects of debugging
    work a bit differently compared to on-premises.
  prefs: []
  type: TYPE_NORMAL
- en: Let's start by discussing the most unwanted problem—a VM you can't connect to.
  prefs: []
  type: TYPE_NORMAL
- en: Remote connectivity and VM start issues
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we'll look at some common problems that can cause your VM to
    be unreachable via the network, and we'll provide a couple of ways to fix those
    issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common problem we have seen is that you can''t reach the VM using
    `ssh`, as shown in *Figure 6.1*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![SSH connection fails in Azure CLI](img/B17160_06_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.1: SSH connection fails'
  prefs: []
  type: TYPE_NORMAL
- en: In this case, the user tried to connect to an Azure VM's private IP address,
    `10.0.0.1`, directly from their laptop. This fails as the private IP addresses
    on Azure are always in the private IP range and cannot be directly accessed via
    the public internet. This is a change from your typical on-premises environment
    where you might have had the ability to directly connect to any VM in your datacenter.
    The actual error message may differ depending on your operating system and the
    actual cause of the connection failure.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure VMs typically have two IP addresses: the private internal IP and a public
    external IP. You can get a list of all the IP addresses of a VM from the Azure
    portal or the command line. With the Azure CLI you can use the `az vm list-ip-addresses`
    command, as shown in *Figure 6.2*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![List of IP addresses of VM in Azure CLI](img/B17160_06_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.2: A list of VM IP addresses'
  prefs: []
  type: TYPE_NORMAL
- en: 'If the connection still doesn''t work when using the public IP address, the
    cause is probably one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: An Azure network security group is blocking the connection.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The SSH service is not running on the VM.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Linux firewall is blocking the connection.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are the most common issues we have seen. If your issue is not one of these,
    you will find more analysis guidance later in this chapter in the *Azure diagnostics
    tooling – a summary* section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Network connectivity issues can be analyzed using the Azure Connection Troubleshoot
    tool found on the Azure portal, as shown in *Figure 6.3*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Analyzing network connectivity issues using Azure Connection troubleshooting
    tool](img/B17160_06_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.3: The Connection Troubleshoot utility'
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we can see that the Azure network connection is working correctly
    and the problem is not in the network security group settings.
  prefs: []
  type: TYPE_NORMAL
- en: Run commands without a network connection
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To tackle problems inside the Linux VM you can use Azure extensions. To start
    `sshd` this way you first need to create a local `custom.json` file with the following
    content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then invoke a custom extension by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The result should be successful, as shown in *Figure 6.4*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Running custom extension command in Azure CLI](img/B17160_06_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.4: Running a custom extension'
  prefs: []
  type: TYPE_NORMAL
- en: You can use the same method to run any commands remotely, for example, to turn
    off the Linux firewall if you suspect it might be blocking your SSH connection.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Azure portal also offers a simple user interface to run commands and simple
    scripts remotely, as shown in *Figure 6.5*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Run command functionality in the Azure portal](img/B17160_06_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.5: Run command functionality in the Azure portal'
  prefs: []
  type: TYPE_NORMAL
- en: For the extensions to work, you need to have the Azure Linux Agent installed
    and running on the VM, as Azure extensions use it to execute commands on the VM.
  prefs: []
  type: TYPE_NORMAL
- en: 'If the remote SSH connection still doesn''t work, the reason could be a bit
    more serious: your VM might not actually boot properly, and it is not possible
    to fix this using scripted tools.'
  prefs: []
  type: TYPE_NORMAL
- en: Boot diagnostics and serial console access
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you suspect the VM is failing to boot properly, you can easily confirm it
    by looking at the boot logs using the Boot diagnostics tool in the Azure portal,
    as shown in *Figure 6.6*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Checking the boot logs using the Boot diagnostics tool in the Azure portal](img/B17160_06_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.6: Boot diagnostics utility'
  prefs: []
  type: TYPE_NORMAL
- en: The system logs are captured from the virtual serial terminal and are read-only.
    You can use the boot logs to find out about and diagnose problems.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you need to log in to the system to fix the problem, you can use the Azure
    Serial console functionality, which can be also found in the VM Support + troubleshooting
    section of the Azure portal, as shown in *Figure 6.7*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Log in to the system using Azure Serial Console functionality](img/B17160_06_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.7: Using serial console access'
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we can see that the Ubuntu server is stuck at the GRUB bootloader
    screen waiting for interaction from the user. At this point, you can proceed to
    fix the problem as you would do on any on-premises physical or virtual Linux server.
    We won't go into the details of fixing this particular problem since it could
    be caused by a number of issues, ranging from a failed kernel upgrade to a misconfigured
    partitioning configuration. Instead, let's look at an overview of typical boot
    failure causes.
  prefs: []
  type: TYPE_NORMAL
- en: Common boot problems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sometimes your Linux VM doesn't boot at all on Azure. This is quite a rare problem
    for VMs created from Azure Linux images, but can be quite common if you migrated
    the VM from on-premises to Azure.
  prefs: []
  type: TYPE_NORMAL
- en: 'There could be various reasons for a VM not booting. Microsoft has published
    the following notes regarding Linux on Azure:'
  prefs: []
  type: TYPE_NORMAL
- en: Hyper-V **virtual hard disk** (**VHDX**) format is not supported. Use fixed
    VHD instead.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VirtualBox dynamically allocated disks are not supported. Use fixed size instead.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The maximum VHD size is 1,023 GB.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using **Logical Volume Manager** **(LVM**) on system disk may cause name collisions.
    It is recommended to use the standard partition for the system disk and LVM only
    on data disks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UDF file system support is mandatory, so do not disable it. It is used by the
    Azure Linux Agent.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kernel versions before 2.6.37 and Red Hat kernel versions before 2.6.32-504
    don't support `numa=off` parameter in `grub.conf`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not use the system disk for the swap file. Let the Azure Linux Agent set
    up the swap on the temporary resource disk.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are some very common issues with booting Linux on Azure that happen when
    migrating from `hv_vmbus` and `hv_storvsc` kernel modules are necessary for Linux
    to boot on Azure.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you encounter this problem, the proper fix is to run these commands on Linux
    before migrating the VM into Azure:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Please note that it is not possible to fix this problem on Azure by using this
    VM directly. Typically, it is better to fix the source image and move it to Azure
    again. However, the method for fixing this situation on the Azure side would be
    to mount the disk on a working VM and apply the fixes that way.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sometimes you may encounter boot issues due the virtual disk size, especially
    if you have created the disk manually on your source system and have converted
    a raw disk to VHD. All virtual drives on Azure must use 1 MB size alignment. This
    can be fixed before uploading the image to Azure, for example by using `qemu-img`
    to convert the image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: After your image is converted correctly, you may upload it to Azure again and
    start it. Once your server boots properly we can focus on possible runtime issues.
  prefs: []
  type: TYPE_NORMAL
- en: Common Linux runtime challenges
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we will demonstrate how to analyze and fix some common runtime
    problems. One of the most common issues with applications on Linux is incompatibility
    with SELinux settings, especially if you migrate your application from one VM
    to another.
  prefs: []
  type: TYPE_NORMAL
- en: Also, issues with disk space running out or other storage issues such as storage
    encryption in conjunction with migration may be troublesome. Lastly, some unexpected
    performance issues may arise when you move workloads from on-premises to Azure.
    Let's start by looking at how SELinux works in Azure.
  prefs: []
  type: TYPE_NORMAL
- en: SELinux
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Security-Enhanced Linux—more commonly known as SELinux—is a security module
    for the Linux kernel, which provides a mechanism for supporting various access
    control policies to the operating system. There are some alternatives to SELinux,
    such as AppArmor, but they are not commonly used currently. SELinux can be considered
    the standard way of securing Linux installations.
  prefs: []
  type: TYPE_NORMAL
- en: 'To check the status of SELinux on your Linux VM you can run the `sestatus`
    command. It prints out many variables, as shown in *Figure 6.8*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Displaying the current status of SELinux on Linux VM by running the sestatus
    command](img/B17160_06_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.8: Output of the sestatus command'
  prefs: []
  type: TYPE_NORMAL
- en: In this example, you can see the SELinux status is `enabled` and the operating
    mode is `enforcing`. *Figure 6.8* is taken from a CentOS 8.2.2004 VM installed
    from Azure Marketplace.
  prefs: []
  type: TYPE_NORMAL
- en: 'SELinux is available for all the common Linux distributions. However, it may
    not be `enabled` by default, or it may be configured in permissive mode by default.
    The three operating modes for SELinux are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`enforcing`: SELinux security policy is enforced.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`permissive`: SELinux prints warnings instead of enforcing the policy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`disabled`: No SELinux policy is loaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'One of the most common SELinux-related questions is: *How do I disable SELinux?*
    The correct answer should always be: *You don''t*. The recommended operation mode
    is, for practical reasons, `permissive`. In the enforcing mode, there is a high
    probability that many applications from `enforcing` mode, then naturally the recommendation
    is to use `enforcing` mode.'
  prefs: []
  type: TYPE_NORMAL
- en: By running SELinux in `permissive` mode, you can be sure your applications will
    run and that you can catch possible security problems by auditing the security
    logs. When developing new applications, it is recommended to use `enforcing` mode.
    This way you can be sure your application will run in any production system.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can learn more about SELinux and the reasons why it should be not disabled
    in this amazing SELinux coloring book authored by *Dan Walsh* and illustrated
    by *Máirín Duffy*: [https://github.com/mairin/selinux-coloring-book](https://github.com/mairin/selinux-coloring-book).'
  prefs: []
  type: TYPE_NORMAL
- en: On Azure, you can use SELinux in `enforcing` or `permissive` mode without problems
    in most cases. The only time when you need to turn off SELinux completely is when
    you want to start encrypting a Linux OS disk on Azure. After the encryption is
    complete, you can enable SELinux again.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have SELinux completely `disabled` or running in `permissive` mode first,
    and later decide to switch on `enforcing` mode, you will probably need to fix
    the file security labels. The easiest way to do this is by telling SELinux to
    relabel the filesystem on the next reboot, and then to reboot the server as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: After the server is up again, SELinux will have the whole filesystem labeled
    and the security contexts of the files should be up to date again.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If the system was installed without the `selinux-policy` package, you will need
    to make sure SELinux is initialized during system startup. The dracut utility
    must be run to set SELinux awareness for the `initramfs` filesystem.
  prefs: []
  type: TYPE_NORMAL
- en: Not doing so will cause SELinux to not start during system boot.
  prefs: []
  type: TYPE_NORMAL
- en: 'A useful reference for SELinux-related issues can be found via Red Hat: [https://access.redhat.com/documentation/red_hat_enterprise_linux/6/html/security-enhanced_linux/sect-security-enhanced_linux-working_with_selinux-changing_selinux_modes](https://access.redhat.com/documentation/red_hat_enterprise_linux/6/html/security-enhanced_linux/sect-security-enhanced_linux-working_with_selinux-changing_selinux_modes).'
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's take a look at typical storage issues and how to work around them.
  prefs: []
  type: TYPE_NORMAL
- en: Storage configuration issues
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, we are going to cover a few things that could go wrong when
    adding disks. Storage issues are sensitive as they can lead to no-boot scenarios—these
    errors are mainly due to configuration issues in the `/etc/fstab` file. Linux
    administrators know the importance of this file and rectifying misconfigurations
    of this file can resolve no-boot scenarios related to disk and storage.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the common scenarios and the corresponding logs that
    you would see in the serial console related to `fstab`. If you see any of these
    logs in the console, you can determine the root cause easily:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A disk mounted using SCSI ID in lieu of UUID**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**An unattached device is missing**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '**Fstab misconfiguration or the disk is no longer attached**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '**A serial log entry shows an incorrect UUID**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Other common causes include:'
  prefs: []
  type: TYPE_NORMAL
- en: System crashes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hardware or software malfunction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Buggy drivers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NFS write errors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The filesystem not being properly shut down
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These other common causes can be sometimes fixed by restarting or often by manually
    fixing the filesystem. For this, you can use either the serial console access
    as described earlier in this chapter, or alternatively attach the broken virtual
    OS disk to another VM as you would do in any on-premises system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Azure CLI provides an extension called **vm-repair** that makes it easy
    to create a repair VM and attach the broken VM disk to it. You can find more information
    about this extension from here: [https://docs.microsoft.com/cli/azure/ext/vm-repair/vm/repair](https://docs.microsoft.com/cli/azure/ext/vm-repair/vm/repair).
    Note that this extension requires Azure CLI version 2.0.67 or higher.'
  prefs: []
  type: TYPE_NORMAL
- en: Disk encryption problems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'It is not uncommon to encounter issues with disk encryption on Linux. These
    problems may arise also on Azure. Here are some typical issues you may face if
    you are using a customized VM image:'
  prefs: []
  type: TYPE_NORMAL
- en: The filesystem or partitioning doesn't match a customized VM image.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some third-party software, such as SAP, MongoDB, Apache Cassandra, and Docker,
    may be unsupported or not work properly if they are installed before encrypting
    the disk. Check the setup instructions carefully before installing!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While a disk is in the middle of encryption initialization, some scripts started
    by Azure Resource Manager may not work correctly. Serializing encryption and disk
    encryption will help with these issues.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SELinux needs to be disabled before starting to encrypt a disk, otherwise the
    filesystem unmount may fail. Remember to enable it again afterward!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System disks using LVM cannot be encrypted. Always use normal partitions for
    system disks, and LVM only for data disks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disk encryption consumes lots of memory. You should have more than 7 GB RAM
    if you enable encryption.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The Linux system disk encryption process tries to unmount the system drive before
    running it through the disk encryption process. If it can't unmount the drive,
    an error message of `failed to unmount after …` is very likely to appear.
  prefs: []
  type: TYPE_NORMAL
- en: Resizing disks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In case you happen to run out of storage space on your VM's system or data disks,
    Azure allows you to scale the VMs up and down quite easily, but there are some
    tasks in the Linux OS to be done to ensure the VM survives the changes.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To test these commands, we recommend you create a new Linux VM on Azure. In
    the following screenshots we used a CentOS 7.9-based VM image.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to find out the current VM disk size. The `az` command is a
    very powerful tool to query various aspects of a VM:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'This command lists the operating system disk size, unique name, and the VM
    size parameters, as shown in *Figure 6.9*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Output of the az vm show command listing the OS disk size, unique name, and
    the VM size parameters](img/B17160_06_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.9: Output of the az vm show command'
  prefs: []
  type: TYPE_NORMAL
- en: If you get an error, it is quite possible that the VM is not running. Start
    it and try again.
  prefs: []
  type: TYPE_NORMAL
- en: In our example the disk size was 30 GB and the VM is of the `Standard_A1` type.
    The disk name is `vm3_OsDisk_1_b728efd7b94e41d6beefe4a1e8a35f15`.
  prefs: []
  type: TYPE_NORMAL
- en: To modify the disk the VM needs to be deallocated—just stopping it is not enough.
    After the VM has been deallocated we can proceed to increasing the system disk
    size.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Currently, you cannot shrink disks in Azure. When increasing disk size, only
    add the space you will need.
  prefs: []
  type: TYPE_NORMAL
- en: 'To set the new size to 50 GB, do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'This should output the new parameters for the disk after successful modification,
    as shown in *Figure 6.10*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The new parameters for the disk after successful modification](img/B17160_06_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.10: Successful disk resize'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you would like to verify that the change was implemented, you can show the
    actual disk size as follows, even when the VM is not running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: This will print out the size in gigabytes and should show `50` in this case.
    Now we have successfully resized the disk on the storage system side, but at this
    point Linux thinks the disk size is `30` gigabytes.
  prefs: []
  type: TYPE_NORMAL
- en: Next, you will need to start the VM and log in to Linux with SSH. Now, in the
    Linux terminal, you can proceed to check whether you need to manually increase
    the volume size and filesystem size as you would do on any other Linux server.
  prefs: []
  type: TYPE_NORMAL
- en: Since there are numerous different ways to do these tasks, we will not be addressing
    them all. Azure doesn't set any limitations on how you manage the disks from within
    the Linux operating system.
  prefs: []
  type: TYPE_NORMAL
- en: In our test system, CentOS 7.9, it seems that the virtual disk size change on
    the `sda2` device was automatically recognized by the operating system at boot
    time, as you can see in *Figure 6.11*.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can run the `lsblk` command to see the block device sizes on your VM:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The list of the block device sizes on the virtual machine](img/B17160_06_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.11: Block devices list'
  prefs: []
  type: TYPE_NORMAL
- en: 'To see if the filesystem has also noticed the increase in the block device
    size, you can run the `df -hT` command. Our system demonstrated that the XFS filesystem
    on the `sda2` disk was automatically resized:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The list of filesystems](img/B17160_06_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.12: List of filesystems'
  prefs: []
  type: TYPE_NORMAL
- en: For many years, Linux administrators had to manually resize block devices and
    filesystems after the physical or virtual storage size was changed. Nowadays,
    some Linux distributions can resize the system disk automatically for you at boot
    time or even at runtime. Data disks still require you to manually grow the partition
    or volume size and to grow the filesystem size as well.
  prefs: []
  type: TYPE_NORMAL
- en: For data disks, the process is very similar. The biggest difference is that
    you can do it while the VM is running. To do this you practically need to unmount
    the disk and detach it from the VM before you modify the virtual disk size. Consider
    taking backups before modifying partitions, volumes, or filesystems manually—there
    is a risk of data loss if you make even a small error in the process.
  prefs: []
  type: TYPE_NORMAL
- en: Performance issues and analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Performance counters in Linux are useful for providing insights into the performance
    of hardware components, operating systems, and applications. With Azure Monitor,
    you can collect performance counters from Log Analytics agents at frequent intervals
    for **Near Real-Time** (**NRT**) analysis. You also get aggregated performance
    data for longer-term analysis and reporting.
  prefs: []
  type: TYPE_NORMAL
- en: To set up performance counters, you can use the Azure Log Analytics workspace
    user interface or the command line.
  prefs: []
  type: TYPE_NORMAL
- en: 'As there are massive numbers of metrics we could collect from a Linux VM, we
    are not going into detail at this point. However, it is worth mentioning that
    the typical data sources are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Syslog`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CollectD`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance counters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom logs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can find details about data collections supported by the Log Analytics
    agent here: [https://docs.microsoft.com/azure/azure-monitor/agents/agent-data-sources](https://docs.microsoft.com/azure/azure-monitor/agents/agent-data-sources).'
  prefs: []
  type: TYPE_NORMAL
- en: This documentation will give you a good set of tools you can use to analyze
    the performance of your VM.
  prefs: []
  type: TYPE_NORMAL
- en: In on-premises environments, it is a common practice to use tools such as `dd`
    to see how the storage is performing. In Azure however you should not rely on
    the results of this command. Instead, you should use a tool called **fio**, available
    from most Linux distribution repositories. It gives reliable results when analyzing
    the actual disk performance, measured as **input/output operations per second**
    (**IOPS**).
  prefs: []
  type: TYPE_NORMAL
- en: 'To use fio, you will first need to create a new file called `fiowrite.ini`
    with the following content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The last parameter tells us which directory or mount point we want to use for
    testing. In this case, we are using the system disk, which is mounted on the root
    directory.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start the test, run the following command, which starts a test that runs
    for 30 seconds:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'You should get an output like the one in *Figure 6.13*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing the disk performance output by executing sudo fio --runtime 30 fiowrite.ini
    command on Azure CLI](img/B17160_06_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.13: Disk performance output'
  prefs: []
  type: TYPE_NORMAL
- en: We have highlighted the IOPS line in yellow. In this case, the average IOPS
    number was 741.21\. We used a standard SSD disk and the `Standard A1` VM type
    with 1 vCPU and 1.72 GiB memory. The system disk was 30 GB with the nominal maximum
    IOPS being 500.
  prefs: []
  type: TYPE_NORMAL
- en: The storage encryption on this server used server-side encryption with a platform-managed
    key.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are various guides available for optimizing the storage performance for
    Linux on Azure users. One very good (although slightly old) guide is this blog
    post: [https://docs.microsoft.com/archive/blogs/igorpag/azure-storage-secrets-and-linux-io-optimizations](https://docs.microsoft.com/archive/blogs/igorpag/azure-storage-secrets-and-linux-io-optimizations).'
  prefs: []
  type: TYPE_NORMAL
- en: The blog post covers many details about performance tuning and is worth reading
    even if you don't have performance problems currently. It is always worth optimizing
    performance.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's take a look at what tools Azure provides to analyze and debug VM
    problems.
  prefs: []
  type: TYPE_NORMAL
- en: Azure diagnostics tooling – a summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the Azure portal, on the VM''s Diagnose and solve problems screen, you can
    find all the official guides and tools to learn more about troubleshooting various
    VM-related problems. *Figure 6.14* shows a partial list of common scenarios documented:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A partial list of common scenarios documented in the Diagnose and solve problems
    window](img/B17160_06_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.14: Common scenarios list'
  prefs: []
  type: TYPE_NORMAL
- en: These guides should give you decent tools to analyze and fix most of the problematic
    situations you might encounter after you have migrated a Linux VM into Azure.
    These are also applicable for all VMs created directly on Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Let's not forget there are also various ways to ask for help from Microsoft
    if you have problems with Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Opening support requests
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Just like any other issue with Azure, you can open support requests for Linux
    on Azure as well. It only makes sense up to a certain point to try to analyze
    or fix the problem yourself. The best part is both Red Hat and SUSE offer integrated
    co-located support. This benefits customers as they don't have to open multiple
    cases—opening a single case with support would suffice. In fact, the Red Hat and
    SUSE Support Engineers sit in the same office as the Microsoft Support Team, which
    ensures faster resolution.
  prefs: []
  type: TYPE_NORMAL
- en: The New support request feature (shown in *Figure 6.15*) on the Azure portal
    is easy to use and can guide you through opening the request with all the relevant
    information. This helps the support staff to get a clear picture of the problem
    from the beginning.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find the request tool in the left-hand menu for the VM that you are
    having an issue with, shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding various details in the Basics tab of the New support request window](img/B17160_06_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.15: New support request'
  prefs: []
  type: TYPE_NORMAL
- en: In this example, our problem is described as I can not SSH to this VM, and the
    New support request tool was able to suggest a couple of possible problem types.
    We selected Cannot connect to my VM for the Problem type option, and My configuration
    change impacted connectivity for the Problem subtype option.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Solutions tab, we will find a possible solution to the problem:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The list of possible solutions in the Solutions tab](img/B17160_06_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.16: List of possible solutions'
  prefs: []
  type: TYPE_NORMAL
- en: In many cases, these automatic suggestions can guide you through fixing the
    issue. As you can see in this example, it appears the VM is not running—probably
    because the Azure Linux Agent is not reachable. The system recommends you use
    the previously mentioned serial console method to connect to the server.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes you may need assistance from Microsoft Technical Support, or you may
    have found an actual bug in Azure or one of the supported Linux distributions.
    In that case, you will be presented with the option to open a support ticket or
    ask for help from the Azure Community.
  prefs: []
  type: TYPE_NORMAL
- en: 'The availability of Microsoft Technical Support depends on your contract with
    Microsoft:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Viewing plans and support options](img/B17160_06_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.17: Support options'
  prefs: []
  type: TYPE_NORMAL
- en: 'In our example, we used a subscription that does not include technical support.
    By clicking View plans (shown in *Figure 6.17*), we can see the various technical
    support plans:'
  prefs: []
  type: TYPE_NORMAL
- en: '![In the Azure tab, you can see various Microsoft Technical Support plans](img/B17160_06_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.18: Microsoft Technical Support plans'
  prefs: []
  type: TYPE_NORMAL
- en: Which plan is best for you depends on many factors. A Microsoft sales representative
    can provide you with further guidance if you are unsure about choosing a plan.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, there is support available from Linux vendors via Azure Marketplace.
    As shown in *Figure 6.19*, by clicking on the Marketplace tab, you can see all
    available Linux support plans that are valid for this specific VM:'
  prefs: []
  type: TYPE_NORMAL
- en: '![In the Marketplace tab, you can see all available Linux support plans that
    are valid for this specific VM](img/B17160_06_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.19: Marketplace support plans'
  prefs: []
  type: TYPE_NORMAL
- en: In this example, the Linux distribution installed on this VM was Ubuntu. Canonical,
    the company publishing Ubuntu, offers a support plan called **Ubuntu Advantage
    Infrastructure Support**, as shown in *Figure 6.19*. As you can see in this case,
    we have not purchased the plan.
  prefs: []
  type: TYPE_NORMAL
- en: All commercial Linux vendors have their own support packages available for purchase
    or offered already bundled in the enterprise subscription.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Having completed this chapter, you should be able to debug and fix some of the
    most common issues with Linux on Azure. In this chapter, we talked about remote
    connectivity issues and how to solve these problems if your VM does not let you
    log in. We also discussed the typical boot problems and discovered the Azure tools
    that can help in resolving these situations. SELinux- and storage-related issues
    are quite common runtime problems, which were also covered in this chapter. We
    also addressed Linux on Azure performance analysis. Finally, we explained how
    to find support for Linux on Azure from Microsoft Technical Support and Azure
    Marketplace partners.
  prefs: []
  type: TYPE_NORMAL
- en: This book took a holistic approach to migrating Linux workloads from on-premises
    infrastructure to Azure. Starting from the planning, assessment, service dependency
    building, replication, and testing migration, to a complete cutover from on-premises
    to Azure, the hands-on labs we developed for you should have provided a quick
    start to your first real migration project. We have shared some of the best practices
    and vital points that need to be incorporated while migrating Linux workloads
    to Azure. Consider these recommendations and adopt them in your migration projects.
    It will accelerate them and contribute to the success of the migration, along
    with saving a lot of time.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we would like to congratulate you on learning many new useful
    skills. We have spent quite a long period of our lives working with Azure, Linux,
    and many other open-source technologies, many of which have been discussed on
    the pages of this book. We hope you have enjoyed reading the book as much as we
    enjoyed writing it. Certain things you cannot learn by reading books or documentation
    or even by following official training courses. Those things can be only learned
    by trying and doing things yourself.
  prefs: []
  type: TYPE_NORMAL
- en: 'For further reading we recommend reading about the Microsoft **Cloud Adoption
    Framework** (**CAF**) for Azure: [https://docs.microsoft.com/azure/cloud-adoption-framework/](https://docs.microsoft.com/azure/cloud-adoption-framework/).
    It is a collection of best practices, tools, documentation, and other useful proven
    guidance from Microsoft designed to accelerate your cloud adoption journey.'
  prefs: []
  type: TYPE_NORMAL
- en: Now it is your turn to do good—teach others about what you have learned. Take
    the information from this book, be successful in your Linux to Azure migration
    projects, and do not forget to share your knowledge with others!
  prefs: []
  type: TYPE_NORMAL
- en: New horizons for Linux in Azure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this book, we started with the tagline "Microsoft ♡ Linux", announced by
    Microsoft CEO Satya Nadella. That was indeed a milestone in Microsoft's history.
    In the earlier days, Microsoft Azure was known as Windows Azure, which created
    the impression that Azure was meant for Windows workloads and was not optimized
    for running Linux workloads. Under Satya Nadella's leadership, Microsoft started
    to embrace Linux and contribute to other open-source projects, and in 2016, they
    joined the Linux Foundation.
  prefs: []
  type: TYPE_NORMAL
- en: The change was not only about Linux. Microsoft also released the Edge browser,
    Visual Studio Code, and Microsoft Teams for Linux, actions that indicated their
    readiness to welcome and fully embrace Linux. In 2018, Microsoft developed their
    own Linux flavor called **Azure Sphere**, which is used in IoT devices. With the
    recent update of Windows 10, Microsoft shipped a full Linux kernel, which opened
    the doors for developers who are working on Linux development as well as cross-platform.
    Very soon, the usage of Linux increased and outshone Windows usage in Microsoft
    Azure. The anti-Microsoft ideology that was present among Linux users is long
    gone. Looking at all the progress, it is obvious that Microsoft truly loves Linux.
    All of Microsoft's open-source contributions to the community can be found at
    [https://opensource.microsoft.com/](https://opensource.microsoft.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Many organizations now use Linux for running a variety of workloads, varying
    from workstations to SAP clusters, and the features and support offered by Linux
    on Azure welcomed them to the benefits of the cloud. Administrators can administer
    their Linux workloads as they normally manage on-premises Linux computers. Azure
    now provides tools like Azure Migrate, Azure Site Recovery, and Azure Database
    Migration Service, which accelerate the migration of workloads to Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Organizations that initially believed that cloud computing is expensive have
    now started to explore the benefits, savings, and features of the Azure cloud.
    Since these organizations have license subscriptions from popular vendors like
    RedHat and SUSE, it is easy for them to reuse the same license subscription in
    Azure as well, without the need to spend extra for licensing in the cloud. Apart
    from the cost perspective, scaling and high availability are far better than what
    organizations could achieve in their on-premises infrastructure. Also, it's worth
    mentioning the security and governance features that Azure provides for running
    Linux workloads. If you have workloads that are hosted on-premises, outside Azure,
    due to compliance reasons, then Azure Arc-enabled servers provide you with the
    ability to manage them natively from the Azure portal.
  prefs: []
  type: TYPE_NORMAL
- en: As we speak, Microsoft is developing new Azure features, pushing updates to
    preview, and promoting updates to general availability. If you look at the Azure
    Updates page ([https://azure.microsoft.com/updates/?query=Linux](https://azure.microsoft.com/updates/?query=Linux)),
    you will be able to see all the new Linux-related updates coming to Azure. The
    updates are in chronological order, and looking at the number of updates coming
    in, you will realize the dominance of Linux on Microsoft Azure. It is 2021 and
    today, even if it may sound a little absurd to some people, the fact is that Microsoft
    is really an open-source organization.
  prefs: []
  type: TYPE_NORMAL
