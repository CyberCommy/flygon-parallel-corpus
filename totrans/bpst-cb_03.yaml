- en: Configuring, Spidering, Scanning, and Reporting with Burp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Establishing trust over HTTPS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting project options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting user options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spidering with Spider
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanning with Scanner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reporting issues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter helps testers to calibrate Burp settings so they're less abusive
    toward the target application. Tweaks within Spider and Scanner options can assist
    with this issue. Likewise, penetration testers can find themselves in interesting
    network situations when trying to reach a target. Thus, several tips are included
    for testing sites running over HTTPS, or sites only accessible through a SOCKS
    Proxy or a port forward. Such settings are available within project and user options.
    Finally, Burp provides the functionality to generate reports for issues.
  prefs: []
  type: TYPE_NORMAL
- en: Software tool requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to complete the recipes in this chapter, you will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: OWASP Broken Web Applications (VM)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OWASP Mutillidae link
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Burp Proxy Community or Professional ([https://portswigger.net/burp/](https://portswigger.net/burp/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firefox browser configured to allow Burp to proxy traffic ([https://www.mozilla.org/en-US/firefox/new/](https://www.mozilla.org/en-US/firefox/new/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The proxy configuration steps are covered in chapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Establishing trust over HTTPS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since most websites implement **Hypertext Transport Protocol Secure** (**HTTPS**),
    it is beneficial to know how to enable Burp to communicate with such sites. HTTPS
    is an encrypted tunnel running over **Hypertext Transport Protocol** (**HTTP**).
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of HTTPS is to encrypt traffic between the client browser and the
    web application to prevent eavesdropping. However, as testers, we wish to allow
    Burp to eavesdrop, since that is the point of using an intercepting proxy. Burp
    provides a root, **Certificate Authority** (**CA**) signed certificate. This certificate
    can be used to establish trust between Burp and the target web application.
  prefs: []
  type: TYPE_NORMAL
- en: By default, Burp's Proxy can generate a per-target CA certificate when establishing
    an encrypted handshake with a target running over HTTPS. That takes care of the
    Burp-to-web-application portion of the tunnel. We also need to address the Browser-to-Burp
    portion.
  prefs: []
  type: TYPE_NORMAL
- en: In order to create a complete HTTPS tunnel connection between the client browser,
    Burp, and the target application, the client will need to trust the PortSwigger
    certificate as a trusted authority within the browser.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In situations requiring penetration testing with a website running over HTTPS,
    a tester must import the PortSwigger CA certificate as a trusted authority within
    their browser.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Ensure Burp is started and running and then execute the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the Firefox browser to the  [http://burp](http://burp) URL. You must type
    the URL exactly as shown to reach this page. You should see the following screen
    in your browser. Note the link on the right-hand side labeled CA Certificate.
    Click the link to download the PortSwigger CA certificate:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00055.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You will be presented with a dialog box prompting you to download the PortSwigger
    CA certificate. The file is labeled `cacert.der`. Download the file to a location
    on your hard drive.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In Firefox, open the Firefox menu. Click on Options.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Privacy & Security on the left-hand side, scroll down to `Certificates`
    section. Click the View Certificates… button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00056.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Select the Authorities tab. Click Import, select the Burp CA certificate file
    that you previously saved, and click Open:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00057.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'In the dialog box that pops up, check the Trust this CA to identify websites box,
    and click OK. Click OK on the Certificate Manager dialog as well:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00058.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Close all dialog boxes and restart Firefox. If installation was successful,
    you should now be able to visit any HTTPS URL in your browser while proxying the
    traffic through Burp without any security warnings.
  prefs: []
  type: TYPE_NORMAL
- en: Setting Project options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Project options allow a tester to save or set configurations specific to a project
    or scoped target.  There are multiple subtabs available under the Project options
    tab, which include Connections, HTTP, SSL, Sessions, and Misc. Many of these options
    are required for penetration testers when assessing specific targets, which is
    why they are covered here.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this book, we will not be using many of these features but it is still important
    to know of their existence and understand their purpose:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00059.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Connections tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Under the Connections tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Platform Authentication**: This provides an override button in the event
    the tester wants the Project options related to the type of authentication used
    against the target application to supersede any authentication settings within
    the user options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After clicking the checkbox to override the user''s options, the tester is
    presented with a table enabling authentication options (for example, Basic, NTLMv2,
    NTLMv1, and Digest) specific to the target application. The destination host is
    commonly set to wildcard `*` should a tester find the need to ever use this option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00060.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Upstream proxy servers**: It provides an override button in the event the
    tester wants the Project options related to upstream proxy servers used against
    the target application to supersede any proxy settings contained within the user
    options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After clicking the checkbox to override the user''s options, the tester is
    presented with a table enabling upstream proxy options specific to this project.
    Clicking the Add button displays a pop-up box called `Add upstream proxy rule`.
    This rule is specific to the target application''s environment. This feature is
    very helpful if the target application''s environment is fronted with a web proxy
    requiring a different set of credentials than the application login:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00061.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**SOCKS Proxy**: It provides an override button in the event the tester wishes
    for Project options related to the SOCKS Proxy configuration used against the
    target application to supersede any SOCKS Proxy settings within the user options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After clicking the checkbox to override user options, the tester is presented
    with a form to configure a SOCKS Proxy specific to this project. In some circumstances,
    web applications must be accessed over an additional protocol that uses socket
    connections and authentication, commonly referred to as SOCKS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00062.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Timeouts**: It allows for timeout settings for different network scenarios,
    such as failing to resolve a domain name:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00063.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Hostname Resolution**: It allows entries similar to a host file on a local
    machine to override the **Domain Name System** (**DNS**) resolution:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00064.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Out-of-Scope Requests**: It provides rules to Burp regarding Out-of-Scope
    Requests. Usually, the default setting of Use suite scope [defined in Target tab]
    is most commonly used:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00065.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The HTTP tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Under the HTTP tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Redirections**: It provides rules for Burp to follow when redirections are
    configured. Most commonly, the default settings are used here:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00066.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Streaming Responses**: It provides configurations related to responses that
    stream indefinitely. Mostly, the default settings are used here:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00067.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Status 100 Response**s: It provides a setting for Burp to handle HTTP status
    code 100 responses. Most commonly, the default settings are used here:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00068.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The SSL tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Under the SSL tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**SSL Negotiations**: When Burp communicates with a target application over
    SSL, this option provides the ability to use preconfigured SSL ciphers or to specify
    different ones:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00069.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'If a tester wishes to customize the ciphers, they will click the Use custom
    protocols and ciphers radio button. A table appears allowing selection of protocols
    and ciphers that Burp can use in the communication with the target application:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00070.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Client SSL Certificates**: It provides an override button in the event the
    tester must use a client-side certificate against the target application. This
    option will supersede any client-side certificate configured within the user options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After clicking the checkbox to override user options, the tester is presented
    with a table to configure a client-side certificate specific to this project.
    You must have the private key to your client-side certificate in order to successfully
    import it into Burp:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00071.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Server SSL Certificates**: It provides a listing of server-side certificates.
    A tester can double-click any of these line items to view the details of each
    certificate:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00072.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Sessions tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book will cover recipes on all functionality contained within the Sessions
    tab in [Chapter 10](part0248.html#7CGBG0-081e72392608484dbc31f30a654ff7bf), *Working
    with Burp Macros and Extensions*. A review of each of these sections within the
    Sessions tab is provided here for completeness.
  prefs: []
  type: TYPE_NORMAL
- en: 'Under the Sessions tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Session Handling Rules**: It provides the ability to configure customized
    session-handling rules while assessing a web application:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00073.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Cookie Jar**: It provides a listing of cookies, domains, paths, and name/value
    pairs captured by Burp Proxy (by default):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00074.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Macros**: It provides the ability of a tester to script tasks previously
    performed in order to automate activities while interacting with the target application:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00075.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Misc tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Under the Misc tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scheduled Tasks**: It provides the ability to schedule an activity at specific
    times:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00076.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'When the Add button is clicked, a pop-up reveals the types of activities available
    for scheduling:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00077.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Burp Collaborator Server**: It provides the ability to use a service external
    to the target application for the purposes of discovering vulnerabilities in the
    target application. This book will cover recipes related to Burp Collaborator
    in [Chapter 11](part0272.html#83CP00-081e72392608484dbc31f30a654ff7bf), *Implementing
    Advanced Topic Attacks*. A review of this section is provided here for completeness:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00078.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Logging**: It provides the ability to log all requests and responses or filter
    the logging based on a particular tool. If selected, the user is prompted for
    a file name and location to save the log file on the local machine:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00079.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Setting user options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: User options allow a tester to save or set configurations specific to how they
    want Burp to be configured upon startup. There are multiple sub-tabs available
    under the user options tab, which include Connections, SSL, Display, and Misc.
    For recipes in this book, we will not be using any user options. However, the
    information is reviewed here for completeness.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using Burp user options, let's configure your Burp UI in a manner best suited
    to your penetration-testing needs. Each of the items under the Connections tab
    is already covered in the Project options section of this chapter, hence, we will
    directly start with the SSL tab.
  prefs: []
  type: TYPE_NORMAL
- en: The SSL tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Under the SSL tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Java SSL Options**: It provides the ability the configure Java security libraries
    used by Burp for SSL connections. The default values are most commonly used:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00080.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Client SSL Certificate:** This section is already covered in the *Project
    options* section of this chapter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Display tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Under the Display tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**User Interface**: It provides the ability to modify the default font and
    size of the Burp UI itself:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00081.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**HTTP Message Display**: It provides the ability to modify the default font
    and size used for all HTTP messages shown within the message editor:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00082.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Character Sets**: It provides the ability to change the character sets determined
    by Burp to use a specific set or to display as raw bytes:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00083.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**HTML Rendering:** It controls how HTML pages will display from the Render
    tab available on an HTTP response:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00084.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Misc tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Under the Misc tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hotkeys**: It lets a user configure hotkeys for commonly-executed commands:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00085.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Automatic Project Backup [disk projects only]**: It provides the ability
    to determine how often backup copies of project files are made. By default, when
    using Burp Professional, backups are set to occur every 30 minutes:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00086.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Temporary Files Location**: It provides the ability to change the location
    where temporary files are stored while running Burp:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00087.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Proxy Interception**: It provides the ability to always enable or always
    disable proxy intercept upon initially starting Burp:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00088.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Proxy History Logging**: It provides the ability to customize prompting of
    out-of-scope items when the target scope changes:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00089.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Performance Feedback**: It provides anonymous data to PortSwigger regarding
    Burp performance:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00090.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Spidering with Spider
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Spidering is another term for mapping out or crawling a web application. This
    mapping exercise is necessary to uncover links, folders, and files present within
    the target application.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to crawling, Burp Spider can also submit forms in an automated fashion. Spidering
    should occur prior to scanning, since pentesters wish to identify all possible
    paths and functionality prior to looking for vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Burp provides an on-going spidering capability. This means that as a pentester
    discovers new content, Spider will automatically run in the background looking
    for forms, files, and folders to add to Target | Site map.
  prefs: []
  type: TYPE_NORMAL
- en: There are two tabs available in the Spider module of Burp Suite. The tabs include
    **control** and **options**, which we will study in the *Getting ready* section
    of this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using the OWASP Mutillidae II application found within the OWASP BWA VM, we
    will configure and use Burp Spider to crawl through the application.
  prefs: []
  type: TYPE_NORMAL
- en: The Control tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Under the Control tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Spider Status**: It provides the ability to turn the spidering functionality
    on or off (paused). It also allows us to monitor queued-up Spider requests along
    with bytes transferred, and so on. This section allows any forms queued to be
    cleared by clicking the Clear queues button:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00091.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Spider Scope**: It provides the ability to set the Spider Scope, either based
    on the Target | Site map tab or a customized scope:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00092.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'If the Use custom scope radio button is clicked, two tables appear, allowing
    the tester to define URLs to be included and excluded from scope:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00093.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Options tab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Under the Options tab, a tester has the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Crawler Settings**: It provides the ability to regulate the number of links
    deep Spider will follow; also identifies basic web content to Spider for on a
    website such as the `robots.txt` file:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00094.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Passive Spidering**: Spiders newly-discovered content in the background and
    is turned on by default:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00095.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Form Submission**: It provides the ability to determine how Spider interacts
    with forms. Several options are available including ignore, prompt for guidance,
    submit with default values found in the table provided, or use an arbitrary value
    (for example, `555-555-0199@example.com`):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00096.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Application Login**: It provides the ability to determine how Spider interacts
    with login forms. Several options are available, including ignore, prompt for
    guidance, submit as standard form submission, or use credentials provided in text
    boxes:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00097.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Spider Engine**: It provides the ability to edit the number of threads used
    along with retry attempt settings due to network failures. Use the number of threads
    judiciously as too many thread requests could choke an application and affect
    its performance:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00098.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Request Headers**: It provides the ability to modify the way the HTTP requests
    look originating from Burp Spider. For example, a tester can modify the user agent
    to have Spider look like a mobile phone:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00099.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ensure Burp and OWASP BWA VM are running, and Burp is configured in the Firefox
    browser used to view the OWASP BWA applications.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'From the OWASP BWA landing page, click the link to the OWASP Mutillidae II
    application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00100.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Go to the Burp Spider tab, then go to the Options sub-tab, scroll down to the
    Application Login section. Select the Automatically submit these credentials radio
    button. Type into the username textbox the word `admin`; type into the password
    textbox the word `admin`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00101.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Return to Target | Site map and ensure the `mutillidae` folder is added to
    scope by right-clicking the `mutillidae` folder and selecting Add to scope:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00102.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Optionally, you can clean up the Site map to only show in-scope items by clicking `Filter:
    Hiding out of scope and not found items; hiding CSS, image and general binary
    content; hiding 4xx responses; hiding empty folders`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00103.gif)'
  prefs: []
  type: TYPE_IMG
- en: 'After clicking `Filter: ….`, You will see a drop-down menu appear. In this
    drop-down menu, check the Show only in-scope items box. Now, click anywhere in
    Burp outside of the drop-down menu to have the filter disappear again:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00104.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You should now have a clean Site map. Right-click the mutillidae folder and
    select Spider this branch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If prompted to allow out-of-scope items, click Yes.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00105.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You should immediately see the Spider tab turn orange:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00106.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Go to the Spider | Control tab to see the number of requests, bytes transferred,
    and forms in queue:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00107.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Let Spider finish running.
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice that Spider logged into the application using the credentials you provided
    in the Options tab. On Target | Site map, look for the `/mutillidae/index.php/`
    folder structure:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00108.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Search for an envelope icon that contains `password=admin&login-php-submit-button=Login&username=admin`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00109.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: This evidences the information Spider used the information you provided in the
    Spider | Options | Application Login section.
  prefs: []
  type: TYPE_NORMAL
- en: Scanning with Scanner
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Scanner capabilities are only available in Burp Professional edition.
  prefs: []
  type: TYPE_NORMAL
- en: Burp Scanner is a tool that automates the search for weaknesses within the runtime
    version of an application. Scanner attempts to find security vulnerabilities based
    on the behavior of the application.
  prefs: []
  type: TYPE_NORMAL
- en: Scanner will identify indicators that may lead to the identification of a security
    vulnerability. Burp Scanner is extremely reliable, however, it is the responsibility
    of the pentester to validate any findings prior to reporting.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two scanning modes available in Burp Scanner:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Passive scanner**: Analyzes traffic passing through the proxy listener. This
    is why its so important to properly configure your target scope so that you aren''t
    scanning more than is necessary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Active scanner**: Sends numerous requests that are tweaked from their original
    form.  These request modifications are designed to trigger behavior that may indicate
    the presence of vulnerabilities ([https://portswigger.net/kb/issues](https://portswigger.net/kb/issues)).
    Active scanner is focused on input-based bugs that may be present on the client
    and server side of the application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanning tasks should occur after spidering is complete. Previously, we learned
    how Spider continues to crawl as new content is discovered. Similarly, passive
    scanning continues to identify vulnerabilities as the application is crawled.
  prefs: []
  type: TYPE_NORMAL
- en: 'Under the Options tab, a tester has the following options: Issue activity,
    Scan queue, Live scanning, Issue definitions, and Options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Issue Activity**: It displays all scanner findings in a tabular format; includes
    both passive and active scanner issues.:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00110.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'By selecting an issue in the table, the message details are displayed, including
    an advisory specific to the finding as well as message-editor details related
    to the request and response:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00111.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Scan queue:** Displays the status of active scanner running; provides a percentage
    of completion per number of threads running as well as number of requests sent,
    insertion points tested, start time, end time, targeted host, and URL attacked.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Scanner can be paused from the table by right-clicking and selecting Pause
    scanner; likewise, scanner can be resumed by right-clicking and selecting Resume
    Scanner. Items waiting in the scan queue can be cancelled as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00112.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Live Active Scanning**: It allows customization when active scanner will
    perform scanning activities:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00113.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Live Passive Scanning**: It allows customization when passive scanner will
    perform scanning activities. By default, passive scanner is always on and scanning
    everything:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00114.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Issue definitions**: It displays definitions for all vulnerabilities known
    to Burp scanners (active and passive). The list can be expanded through extenders
    but, using Burp core, this is the exhaustive listing, which includes title, description
    text, remediation verbiage, references, and severity level:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00115.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Options**: Several sections are available, including Attack Insertion Points,
    Active Scanning Engine, Attack Scanning Optimization, and Static code analysis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Attack Insertion Points**: It allows customization for Burp insertion points;
    an insertion point is a placeholder for payloads within different locations of
    a request.  This is similar to the Intruder payload marker concept discussed in
    [Chapter 2](part0044.html#19UOO0-081e72392608484dbc31f30a654ff7bf), *Getting to
    Know the Burp Suite of Tools*:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00116.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Recommendations here include adding the URL-to-body, Body-to-URL, cookie-to-URL,
    URL-to-cookie, body-to-cookie, and cookie-to-body insertion points when performing
    an assessment. This allows Burp to fuzz almost, if not all, available parameters
    in any given request.
  prefs: []
  type: TYPE_NORMAL
- en: '**Active Scanning Engine**: It provides the ability to configure the number
    of threads (for example, Concurrent request limit) scanner will run against the
    target application. This thread count, compounded with the permutations of insertion
    points, can create noise on the network and a possible DOS attack, depending upon
    the stability of the target application.  Use caution and consider lowering the
    Concurrent request limit. The throttling of threads is available at this configuration
    section as well:'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00117.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Attack Scanning Optimization**: It provides three settings for scan speed
    and scan accuracy.'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: Available Scan speed settings include Normal, Fast, and Thorough. Fast makes
    fewer requests and checks derivations of issues. Thorough makes more requests
    and checks for derivations of issues. Normal is the medium setting between the
    other two choices. The recommendation for Scan speed is Thorough.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Available Scan accuracy settings include Normal, Minimize false negatives,
    and Minimize false positives. Scan accuracy relates to the amount of evidence
    scanner requires before reporting an issue. The recommendation for Scan accuracy
    is Normal:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00118.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Static Code Analysis**: It provides the ability to perform static analysis
    of binary code. By default, this check is performed in active scanner:'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00119.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Scan Issues**: It provides the ability to set which vulnerabilities are tested
    and for which scanner (that is, passive or active). By default, all vulnerability
    checks are enabled:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00120.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using the OWASP Mutillidae II application found within the OWASP BWA VM, we
    will begin our scanning process and monitor our progress using the Scan queue
    tab.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ensure Burp and OWASP BWA VM is running while Burp is configured in the Firefox
    browser used to view the OWASP BWA applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'From the OWASP BWA landing page, click the link to the OWASP Mutillidae II
    application:'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the Target | Site map tab, right-click the `mutillidae` folder and select
    Passively scan this branch. The passive scanner will hunt for vulnerabilities,
    which will appear in the Issues window:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00121.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'From the Target | Site map tab, right-click the `mutillidae` folder and select
    Actively scan this branch:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00122.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Upon initiating the active scanner, a pop-up dialog box appears prompting for
    removal of duplicate items, items without parameters, items with media response,
    or items of certain file types. This pop-up is the Active scanning wizard. For
    this recipe, use the default settings and click Next:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00123.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Verify all paths shown are desired for scanning. Any undesired file types or
    paths can be removed with the Remove button. Once complete, click OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00124.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You may be prompted regarding the out-of-scope items. If so, click Yes to include
    those items. Scanner will begin.
  prefs: []
  type: TYPE_NORMAL
- en: 'Check the status of scanner by looking at the Scanner queue tab:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00125.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'As scanner finds issues, they are displayed on the Target tab, in the Issues
    panel. This panel is only available in the Professional edition since it complements
    the scanner''s functionality:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00126.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Reporting issues
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Reporting capabilities are only available in Burp Professional edition.
  prefs: []
  type: TYPE_NORMAL
- en: In Burp Professional, as scanner discovers a vulnerability, it will be added
    to a list of issues found on the Target tab, in the right-hand side of the UI.
    Issues are color-coded to indicate the severity and confidence level. An issue
    with a red exclamation point means it is a high severity and the confidence level
    is certain. For example, the SQL Injection issue shown here contains both of these
    attributes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Items with a lower severity or confidence level will be low, informational,
    and yellow, gray, or black in color. These items require manual penetration testing
    to validate whether the vulnerability is present. For example, Input returned
    in response is a potential vulnerability identified by scanner and shown in the
    following screenshot. This could be an attack vector for **cross-site scripting**
    (**XSS**) or it could be a false positive. It is up to the penetration tester
    and their level of experience to validate such an issue:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00127.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Severity levels**: The severity levels available include high, medium, low,
    information, and false positive. Any findings marked as false positive will not
    appear on the generated report. False positive is a severity level that must be
    manually set by the penetration tester on an issue.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Confidence levels**: The confidence levels available include certain, firm,
    and tentative.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After the scanning process completes, we need to validate our findings, adjust
    severities accordingly, and generate our report.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this recipe, select Cookie without HttpOnly flag set under the Issues heading:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00128.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Look at the Response tab of that message to validate the finding. We can clearly
    see the `PHPSESSID` cookie does not have the `HttpOnly` flag set. Therefore, we
    can change the severity from Low to High and the confidence level from Firm to
    Certain:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00129.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Right-click the issue and change the severity to High by selecting Set severity
    | High:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00130.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Right-click the issue and change the severity to Certain by selecting Set confidence
    | Certain:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00131.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'For this recipe, select the issues with the highest confidence and severity
    levels to be included in the report. After selecting (highlighting + *Shift* key)
    the items shown here, right-click and select Report selected issues:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00132.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Upon clicking Report selected issues, a pop-up box appears prompting us for
    the format of the report. This pop-up is the Burp Scanner reporting wizard.
  prefs: []
  type: TYPE_NORMAL
- en: For this recipe, allow the default setting of HTML. Click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This screen prompts for the types of details to be included in the report. For
    this recipe, allow the default settings. Click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This screen prompts for how messages should be displayed within the report. For
    this recipe, allow the default settings. Click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This screen prompts for which types of issues should be included in the report.
    For this recipe, allow the default settings. Click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This screen prompts for the location of where to save the report. For this
    recipe, click Select file…, select a location, and provide a file name followed
    by the `.html` extension; allow all other default settings. Click Next:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00133.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: This screen reflects the completion of the report generation. Click Close and browse
    to the saved location of the file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Double-click the file name to load the report into a browser:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00134.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Congratulations! You've created your first Burp report!
  prefs: []
  type: TYPE_NORMAL
