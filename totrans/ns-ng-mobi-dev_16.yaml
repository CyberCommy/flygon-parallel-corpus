- en: Deploying to Google Play
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到Google Play
- en: Although deploying an app to Google Play can be slightly simpler when compared
    to the Apple App Store, there's still a few key steps that we need to pay attention
    to. We covered some preparation steps in [Chapter 14](part0154.html#4IRMK0-289fe2426d594f99a90e4363b2c9c34d),
    *Deployment Preparation with webpack Bundling*, and [Chapter 15](part0163.html#4REBM0-289fe2426d594f99a90e4363b2c9c34d),
    *Deploying to the Apple App Store*, such as using webpack to bundle the app and
    preparing app icons and splash screens, so we will jump right into building a
    releasable APK.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '尽管与苹果应用商店相比，将应用部署到Google Play可能稍微简单一些，但我们仍然需要注意一些关键步骤。我们在[第14章](part0154.html#4IRMK0-289fe2426d594f99a90e4363b2c9c34d)
    *使用webpack捆绑进行部署准备*和[第15章](part0163.html#4REBM0-289fe2426d594f99a90e4363b2c9c34d)
    *部署到苹果应用商店*中涵盖了一些准备步骤，例如使用webpack捆绑应用程序和准备应用程序图标和启动画面，因此我们将直接进入构建可发布的APK。 '
- en: We express our gratitude to TJ VanToll for an excellent eight-step article to
    deploy NativeScript apps ([https://www.nativescript.org/blog/steps-to-publish-your-nativescript-app-to-the-app-stores](https://www.nativescript.org/blog/steps-to-publish-your-nativescript-app-to-the-app-stores))
    from which we will insert excerpts from and expand wherever possible.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要感谢TJ VanToll为我们提供了一篇出色的八步文章，用于部署NativeScript应用（[https://www.nativescript.org/blog/steps-to-publish-your-nativescript-app-to-the-app-stores](https://www.nativescript.org/blog/steps-to-publish-your-nativescript-app-to-the-app-stores)），我们将从中插入摘录，并在可能的情况下进行扩展。
- en: 'The following topics are covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖以下主题：
- en: Generating a keystore to build your APK with
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成用于构建APK的密钥库
- en: Building a releasable APK with the NativeScript CLI
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用NativeScript CLI构建可发布的APK
- en: Uploading the APK to Google Play for publication
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将APK上传到Google Play以供发布
- en: Building an APK for Google Play
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Google Play构建APK
- en: Before you open Google Play to register and publish this app (which is the next
    step), let's double-check a couple of things to ensure that our metadata is correct.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在您打开Google Play注册和发布此应用之前（这是下一步），让我们仔细检查一些事项，以确保我们的元数据是正确的。
- en: 'Open `app/App_Resources/Android/app.gradle` and ensure that the `applicationId`
    is correct for your package name:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`app/App_Resources/Android/app.gradle`，确保`applicationId`对于您的包名称是正确的：
- en: '![](../images/00075.jpeg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00075.jpeg)'
- en: 'Also, open `package.json` at the root of the project and double-check the `nativescript.id`
    there as well for good measure:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还要在项目根目录下打开`package.json`，并为了谨慎起见，再次检查`nativescript.id`：
- en: '![](../images/00076.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00076.jpeg)'
- en: Now, you will need to generate an executable Android file for your application.
    On Android, this file has a `.apk` extension, and you can generate this file using
    the NativeScript CLI.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您需要为您的应用生成一个可执行的Android文件。在Android上，此文件具有`.apk`扩展名，您可以使用NativeScript CLI生成此文件。
- en: 'The `tns run` command you were using during NativeScript development actually
    generates a `.apk` file for you and installs that file on an Android emulator
    or device. However, for a Google Play release, the build you create must also
    be code signed. You can refer to Android''s documentation ([https://developer.android.com/studio/publish/app-signing.html](https://developer.android.com/studio/publish/app-signing.html))
    on code signing if you want to dive into the cryptographic details, but at a high
    level, you will need to do the following two things to create a release version
    of your Android app:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您在NativeScript开发期间使用的`tns run`命令实际上为您生成了一个`.apk`文件，并将该文件安装在Android模拟器或设备上。但是，对于Google
    Play发布，您创建的构建还必须进行代码签名。如果您想深入了解加密细节，可以参考Android的文档（[https://developer.android.com/studio/publish/app-signing.html](https://developer.android.com/studio/publish/app-signing.html)）进行代码签名，但在高层次上，您需要执行以下两个操作来创建Android应用的发布版本：
- en: Create a `.keystore` or `.jks` (Java keystore) file
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个`.keystore`或`.jks`（Java密钥库）文件
- en: Use that `.keystore` or `.jks` file to sign in to your app during a build
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Android documentation provides you a few options on how you can create your
    keystore file ([https://developer.android.com/studio/publish/app-signing.html#release-mode](https://developer.android.com/studio/publish/app-signing.html#release-mode)).
    Our preferred approach is the `keytool` command-line utility, which is included
    in the Java JDK that NativeScript installs for you, so it should already be available
    on your development machine's command line.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: 'To use `keytool` to generate a keystore for code signing our app, we will use
    the following command:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `keytool` utility will ask you a number of questions, several of which
    are optional (name of organization and the names of your city, state, and country),
    but the most important ones are the passwords for both the keystore and the alias
    (more on that later on). Here''s what the `keytool` process looks like when we
    generate the keystore:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/00077.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
- en: Before we move on to how to use this `.jks` file, there's one important thing
    you need to know. Place this `.jks` file somewhere safe, and do not forget the
    password for the keystore or for the alias. (Personally, I like using the same
    password for my keystore and my aliases to simplify my life.) Android requires
    you to use this exact same `.jks` file to sign in to any and all updates to your
    app. This means that if you lose this `.jks` file, or its password, you will not
    be able to update your Android app. You'll have to create a brand new entry in
    Google Play, and your existing users will not be able to upgrade—so take care
    not to lose it!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Oh, and one more thing to note in most cases is that you'll want to use a single
    keystore file to sign in to all of your personal or company's Android applications.
    Remember how you had to pass a -alias flag to the keytool utility, and how that
    alias had its own password? It turns out that one keystore can have many aliases,
    and you'll want to create one for each Android app that you build.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Okay, so now that you have this `.jks` file, and you have it stored in a nice
    and secure location, the rest of the process is quite easy.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: 'Build our Android app using webpack and pass it the information you just used
    to create the `.jks` file. For example, the following command is used to create
    a release build of `nStudio`:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once the command finishes running, you''ll have a releasable `.apk` file in
    your app''s `platforms/android/build/outputs/apk` folder; note the location of
    that file, as you''ll need it in the next step—deploying your app on Google Play:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/00078.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
- en: Uploading to Google Play
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Google Play is where Android users find and install apps, and the Google Play
    Developer Console ([https://play.google.com/apps/publish/](https://play.google.com/apps/publish/))
    is where developers register and upload apps for users.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'You will first create a new application by its name and then see it listed:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/00079.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
- en: Android's documentation on uploading apps and setting up your store listing
    is quite good, so we will not recreate all that information here. Instead, a few
    tips will be provided that you might find helpful when uploading your own NativeScript
    apps to Google Play.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: 'On the Store Listing tab in the Google Play Developer Console, you''ll have
    to provide at least two screenshots of your app in action, as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/00080.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
- en: Launch your app in an Android **Android Virtual Device** (**AVD**) using the
    `tns run android --emulator` command. The Android AVDs have a built-in way of
    taking screenshots using the little camera icon in the emulator's sidebar.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: 'Use this button to take a few screenshots of the most important screens in
    your app, and the image files themselves will appear on your desktop. From there,
    you could take those files and upload them directly into the Google Play Developer
    Console. A 1024 x 500 Feature Graphic image file is also required, which will
    appear at the top of your store listing, as shown in the following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/00081.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
- en: Although not shown in the preceding screenshot, we recommend that you use a
    service like DaVinci ([https://www.davinciapps.com](https://www.davinciapps.com))
    to add a little flair to your screenshots, and turn them into a little tutorial
    of what your app does.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: APK
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The App Releases section of the Google Play Developer Console is where you upload
    the `.apk` file you generated in the preceding step of this chapter.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'You may see mention of opting into Google Play App Signing when you view the
    App Releases section. It''s best to opt in now rather than later. Once you''ve
    opted in, it will show Enabled:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/00082.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
- en: You can then proceed to upload the apk in your app's `platforms/android/build/outputs/apk` folder.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have your APK uploaded, you should see it listed on that same page
    where you can type out release notes for the uploaded version in multiple languages
    of your choice:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您上传了您的APK文件，您应该在同一页上看到它列出，您可以在那里为上传的版本输入多种语言的发布说明：
- en: '![](../images/00083.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00083.jpeg)'
- en: After you click on Save on that page, you will probably want to return to the
    Store listing section to finish filling out all of your app's information. Once
    you have everything set, you're ready to submit your app. Android app reviews
    generally take a few hours, and unless Google flags any problems, your app should
    be available in Google Play within half a day or so.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在您点击该页面上的“保存”按钮后，您可能会想返回到商店列表部分，完成填写您应用的所有信息。一旦一切就绪，您就可以提交您的应用了。Android应用的审核通常需要几个小时，除非Google标记出任何问题，您的应用应该在Google
    Play上可用，大约需要半天左右。
- en: Summary
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Woohoo! We built an app from *zero to published* in both stores, Apple App Store
    and Google Play. This has been quite an adventure with many twists and turns.
    We sincerely hope that this has given you deep insight into NativeScript for Angular
    app development as well as demystified any areas of this exciting tech stack for
    those who have been curious.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 哇哦！我们在Apple App Store和Google Play商店中从*零到发布*构建了一个应用。这是一次充满曲折和转折的冒险。我们真诚地希望这为您深入了解了NativeScript和Angular应用开发，并为那些好奇的人解开了这个激动人心的技术堆栈的任何领域。
- en: Both NativeScript and Angular have thriving global communities, and we encourage
    you to get involved, speak about your experiences, and share your excitement with
    others with all the exhilarating projects you and your teams may be working on.
    Never hesitate to reach out and ask for help, as we all take responsibility in
    our love and admiration for these two technologies.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: NativeScript和Angular都有蓬勃发展的全球社区，我们鼓励您参与其中，分享您的经验，并与他人分享您和您的团队可能正在进行的所有激动人心的项目。永远不要犹豫寻求帮助，因为我们都对这两种技术的热爱和钦佩负有责任。
- en: 'There are some additional helpful resources that you can check out:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些其他有用的资源可以查看：
- en: '[http://forum.nativescript.org](http://forum.nativescript.org)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://forum.nativescript.org](http://forum.nativescript.org)'
- en: '[http://nativescript.rocks](http://nativescript.rocks)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://nativescript.rocks](http://nativescript.rocks)'
- en: And of course get to know the docs!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当然还要了解文档！
- en: '[http://docs.nativescript.org/angular/start/introduction.html](http://docs.nativescript.org/angular/start/introduction.html)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.nativescript.org/angular/start/introduction.html](http://docs.nativescript.org/angular/start/introduction.html)'
- en: Cheers!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 干杯！
