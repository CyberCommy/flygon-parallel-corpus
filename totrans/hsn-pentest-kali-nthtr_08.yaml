- en: Clearing Tracks and Removing Evidence from a Target
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the most important aspects during a penetration test is to ensure there
    isn’t any trace of a compromise on the system. Like a hacker, your goal may be
    to compromise a target system or network, however, it is very important when terminating
    the connection or exiting the victim’s system that there isn’t any log or residual
    data left behind. Furthermore, during a penetration test, additional data may
    be generated that leaves a trace on the system and network.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will be covering the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Clearing logs on Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clearing logs on Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deleting files from the target
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's dive In!
  prefs: []
  type: TYPE_NORMAL
- en: Clearing tracks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The field of cybersecurity is growing at an exponential rate; the need for professionals
    to help combat and protect organizations and citizens from both cyber threats
    and threat actors are in extremely high demand. A cyber-attack can be anything
    from a phishing email, malware infection, and even ransomware attacks; the cybersecurity
    organizations and certification bodies, such as EC-Council and GIAC, saw the need
    for forensics in the digital world as assists in investigations to determine what
    happened, how the attack took place, the threat actors, and many more details
    that can assist the prosecution in a court of law.
  prefs: []
  type: TYPE_NORMAL
- en: In cybersecurity, a security incident is an event that is triggered by an organization’s
    system or network that indicates a compromise. An example of a security incident
    is a malicious file running on an employee’s computer. The anti-malware protection
    software will detect and trigger an alert for investigation.
  prefs: []
  type: TYPE_NORMAL
- en: 'The field of digital forensics opened the door for many new jobs, such as First
    Responder, Incident Handler, Cyber Forensics Investigator, and Malware Researcher.
    Each of these titles has a common goal: to determine how the system was compromised
    by a threat actor. For any action done on a system, whether by a user or an application,
    a system log message is generated and stored for accountability purposes. During
    a forensic investigation, the examiner usually attempts to retrieve the logs from
    the system. The log messages will indicate the entire history of a security incident.'
  prefs: []
  type: TYPE_NORMAL
- en: Types of logs and their locations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During this section, we will discuss the various types of logs a penetration
    tester should consider removing and where these logs can be found.
  prefs: []
  type: TYPE_NORMAL
- en: DHCP server logs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'These logs keep an accountability of IP address assignment on the network.
    This log stores all the transactions that have taken place between a potential
    DHCP client and the DHCP server. Most importantly, the **media access control**
    (**MAC**) addresses of the clients will be stored within the log messages. The
    following are the locations of DHCP server logs:'
  prefs: []
  type: TYPE_NORMAL
- en: DHCP logs are stored within the `%SystemRoot%\System32\dhcp` directory of a
    Windows system.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On Linux, to see the DHCP logs, we can use the `cat /var/log/syslog | grep -Ei
    'dhcp'` command.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Syslog messages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When a cyber-attack occurs within an organization, whether it’s an MITM or a
    system acting as a zombie machine which is part of a botnet army an investigation
    is performed. Forensics Investigators perform their investigation and analysis
    not only on computers, laptops, and servers, but also on the network. For every
    session or transaction that occurs across a network, devices such as firewalls,
    intrusion-detection/prevention systems (IDS/IPS), and other network security appliances
    generate logs for all traffic. Devices uses the **Syslog** protocol and framework
    to generate log messages in a uniform format with all the necessary details a
    network professional would need and understand.
  prefs: []
  type: TYPE_NORMAL
- en: Syslogs are located at `/var/log/syslog` on Linux systems.
  prefs: []
  type: TYPE_NORMAL
- en: Packet analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Further, looking  into network forensics, investigators perform packet analysis,
    observing any anomalies on the network segment. Packet analysis allows an investigator
    to determine the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Origin of the attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Files uploaded and downloaded
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type of traffic on the network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time of the attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extracted artifacts, such as files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: URLs and domains
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Victim machines during the attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Telemetry information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web server logs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'These logs store log messages of all web activities between the web server
    and the client web browser. The following are the locations of each web server:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Internet Information Server** (**IIS**) log files are located in `%SystemDrive%\inetpub\logs\LogFiles`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache in Red Hat, CentOS, and Fedora logs are stored in `**/**var/log/httpd/access_log`
    and `/var/log/httpd/error_log`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For Debian and Ubuntu systems, the Apache web server logs can be found at `/var/log/apache2/access_log`
    and `/var/log/apache2/error_log`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FreeBSD Apache logs are located at `/var/log/httpd-access.log` and `/var/log/httpd-error.log`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Database logs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During a penetration test, you may be tasked to manipulate a target database,
    whether to create, modify, remove, or extract information. In doing so, the databases
    generate their own set of log messages.
  prefs: []
  type: TYPE_NORMAL
- en: The database logs for a Microsoft SQL Server can be found at `\\Microsoft SQL
    Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\*.MDF` and `\\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\*.LDF`.
    An investigator may check the error logs on the database for any suspicious activities,
    these can be found at `\\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\LOG\ERRORLOG`.
  prefs: []
  type: TYPE_NORMAL
- en: Event logs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Event logs are a record of actions taken on a system with and without user intervention.
    Security logs for events if a user has successfully accessed the system or even
    failed log-in attempt, application logging of starting or terminating a program
    on an operating system. Event logs keep a record of everything that happens on
    a system, from the point it's powered on until it's turned off.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Windows 10 operating system, event logs are stored within the following
    key location in the registry:'
  prefs: []
  type: TYPE_NORMAL
- en: '`HKLM\System\ControlSet00x\Services\EventLog`'
  prefs: []
  type: TYPE_NORMAL
- en: 'To view a list of available event logs on Windows 10, use the `wevtutil el`
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/a392aab8-7002-4693-915d-e479f46307c8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Furthermore, using the `wevtutil gl <name of log>` command will present configuration
    information about the selected log:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/f3840542-feae-4164-bfc3-b04003c82440.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Additionally, the Windows system logs are stored in `C:\Windows\System32\winevt\Logs` on
    a local system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/b2c9109c-87e2-4dd1-9214-94fcd19b01f7.png)'
  prefs: []
  type: TYPE_IMG
- en: Simply modifying or removing the log files stored within these locations will present
    a challenge to a Forensics Investigation team; it becomes difficult to determine
    the actual sequence of the attack and reduces the chances of being caught.
  prefs: []
  type: TYPE_NORMAL
- en: Clearing logs on Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Within the Windows operating system, the **Event Viewer** is an application
    that presents all **Application**, **Security**, **Setup**, and **System logs**
    within a single dashboard. To access **Event Viewer**, click **Start** | **Windows
    Administrative Tools** | **Event Viewer**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/07089bb5-fae6-4a21-945e-5a106e308ed4.png)'
  prefs: []
  type: TYPE_IMG
- en: For another method of opening **Event Viewer** on Windows, simply press Windows +
    *R* on the keyboard to open the **Run** prompt, then type `eventvwr.msc` and click
    **OK**.
  prefs: []
  type: TYPE_NORMAL
- en: From the **Event Viewer** window, logs can be cleared simply by selecting the
    **Clear Log** feature on the **Action** pane. To clear logs for a particular category,
    such as all logs that reside within the **Application** group, simply right-click
    on the group name and choose **Clear Log**.
  prefs: []
  type: TYPE_NORMAL
- en: Using PowerShell to clear logs in Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: PowerShell is a very powerful command-line interface that gives a system administrator
    a lot of control on a system for rapidly executing and automating operations and
    tasks in Windows, MacOS, and Linux operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin, click on the Windows accent, which is the start icon in the bottom-left
    corner on your desktop and type `powershell`. The Windows PowerShell application
    will appear, simply click on it to engage as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/f5588bde-1cf1-441f-b8cc-2f04873ecd34.png)'
  prefs: []
  type: TYPE_IMG
- en: Ensure you run **Windows PowerShell** as Administrator. Running a program or
    application with Administrator privileges will remove any sort of restriction
    a standard user will encounter. These restrictions will include security privileges.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s do a few exercises to clear logs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise 1: Clearing all Event Logs**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Using the `wevtutil el | Foreach-Object {wevtutil cl “$_”}` command will clear
    the event logs on Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/18306cbf-5ffe-4d46-abc3-d25973b95f12.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After executing the command, the logs are now wiped, as seen in **Event Viewer**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/7305b559-8d97-4d8e-a5f5-4c3f0dcf4bbf.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Exercise 2: Clearing Specific Logs from a computer**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `Clear-EventLog` command allows an administrator to clear/wipe all the
    log messages from a specific event category. The syntax for using this command
    is `Clear-EventLog <LogName>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/b556c25d-84cd-40bd-8798-4de4c6f62712.png)'
  prefs: []
  type: TYPE_IMG
- en: If you recall, using the `wevtutil el` command will provide you with a list
    of log categories on your system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the `Get-Help` parameter followed by the `Clear-EventLog`cmdlet will
    provide you with additional options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/bd92de68-dff3-437b-bfb5-755b7c6361f9.png)'
  prefs: []
  type: TYPE_IMG
- en: We have concluded our PowerShell exercises. We are going to take a look at using
    the command prompt to clear logs in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Using the command prompt to clear logs in Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we are going to take a look at using the command prompt to
    clear logs on a Windows operating system:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise 1: Clearing individual logs**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Previously, we used the `wevtutil el` command on the Windows command prompt
    to view a list of log types/categories. We can use `wevtutil cl` followed by a
    specific log to wipe/clear the entries within the log category:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/799f115a-6ac5-49ff-b4f3-15564a198233.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Additionally, the `clear-log` syntax can be used as a substitute for `cl`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/51e88a58-7bec-4d64-8b54-b1d1c1a11382.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Exercise 2: Clearing all logs using a single script**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When we ran the `wevtutil el` command, we saw a long list of event log categories.
    However, clearing each category is quite time-consuming, so use the following
    script to clear each category upon execution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![image](img/1608a511-f18a-48d0-9015-9def24fa98f5.png)'
  prefs: []
  type: TYPE_IMG
- en: As we can see in the preceding screenshot, after executing our command, each
    log file is being cleared. In the next section, we are going to discuss methods
    for clearing logs in Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Clearing logs in Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As with all operating systems, logs are also generated and stored on Linux-based
    systems. Log files are the records of all activities that took place on a system.
    The following are the general locations of the Linux log files:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/351aa78d-a51f-421c-a64a-98db4a0412ea.png)'
  prefs: []
  type: TYPE_IMG
- en: '![image](img/ae25c5fe-4da6-4f63-b66c-cd758c511956.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following are additional log locations on Linux systems:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Example 1: Clearing logs using null**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this example, we are going to use null, a non-existent object, to remove
    the contents of a file. We are going to clear the logs of the Apache `access.log`
    file on a Linux system. A null object is an entity without any attributes or characteristics
    in an operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 'To discover the location of a file, use the `locate` command followed by the
    filename. In this exercise, we use the `locate access.log` command to show us
    the location of all files that contain the `access.log` string sequence:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/eb252872-29bb-4454-9214-386e545aaf6c.png)'
  prefs: []
  type: TYPE_IMG
- en: Additionally, we can use discover files that belong to a package in Linux and
    filter our search using the `locate apache2 | grep “access.log”` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we are going to use the `cat` command followed by the file pathway to
    determine whether there are any log entries:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/43e696e4-6eb2-4717-93bd-03c53dc74d32.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As we can see, the previous screenshot contains entries within the `access.log`
    file. Additional, we use the `du –sh <filename>` command to determine the file
    size; if it''s 0 KB the file is empty, if the file size is greater than 0 KB,
    the file contains entries:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/36c8d2d2-ed6d-48d6-84c9-80ca959cd9a1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we are going to change directory to the location of the `access.log` file
    using the `cd /var/log/access.log` command and redirect null to the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/09cdce3d-5034-4d11-ac55-e592082368a4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we use the `cat` command on the file once more, we see there are no entries
    and the file size is 0 KB:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/f6ef0b61-e2f4-4282-a797-5563b5d14950.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Exercise 2: Clearing logs using the True utility**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Another technique to clear/remove logs from a file is using the `True` utility.
    We have generated some traffic to our web server, as you can see in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/27c36585-0b45-4078-b36f-b6d2cf947915.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Currently, our file size is at 8 KB:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/a697f3c6-b5ec-4fa1-923a-4f719bb5d3a6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Using the `true` command followed by the filename or path with file will erase
    the entries:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/1f029af0-fddb-4411-bdeb-bac795a9b8ff.png)'
  prefs: []
  type: TYPE_IMG
- en: The `true` command/utility has a description that says it does no work or nothing,
    successfully.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can verify now that there are no entries within the file and the file size
    is 0 KB:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/bdb26759-64ac-49c0-a7a6-317389d866e7.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Using Meterpreter to clear Windows logs**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Within the Metasploit framework, there exists a very advanced and dynamically-extensible
    payload known as **Meterpreter**. Using this utility during the exploitation phase
    of a penetration test it will allow you to execute the stager payloads on the
    target system which can create bind or even reverse shells between the target
    and the attacker's machine.
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit is an exploitation-development framework created by Rapid7 ([www.rapid7.com](http://www.rapid7.com)).
    It allows penetration testers to gather information about a target, discover vulnerabilities,
    create and deliver exploits and payloads onto a target, and create backdoors.
    It's like a penetration tester toolkit for discovering and exploiting vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Meterpreter is designed to be stealthy, powerful, and extensible. Once a system
    has been successfully exploited, you can use the `clearev` command to clear the
    following logs of `Application`, `System`, and `Security`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/dd590168-af56-41d4-8f24-ae25b4a4aac3.png)'
  prefs: []
  type: TYPE_IMG
- en: As we can see in the preceding screenshot, Meterpreter is clearing the logs
    of each category on the target system. The number of entries cleared is also listed.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed ways of being stealthy during a penetration test,
    while simulating attacks on a targeted system and network. We discussed various
    types of logs and their locations. Further, we looked at a few scenarios where
    we used various techniques to clear logs on both Windows and Linux operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will cover *Packet Sniffing and Traffic Analysis*. We'll
    use different techniques to capture traffic and conduct analysis using various
    tools to obtain confidential information.
  prefs: []
  type: TYPE_NORMAL
