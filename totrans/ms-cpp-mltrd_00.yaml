- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Multithreaded applications execute multiple threads in a single processor environment,
    to achieve. Filled with practical examples, this book will help you become a master
    at writing robust concurrent and parallel applications in C++. In this book, you
    will delve into the fundamentals of multithreading and concurrency and find out
    how to implement them. While doing so, you will explore atomic operations to optimize
    code performance and also apply concurrency to both distributed computing and
    GPGPU processing.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0020.html#J2B80-1ab5991b318547348fc444437bdacb24), *Revisiting
    Multithreading*, summarizes multithreading in C++, revisiting all the concepts
    you should already be familiar with and going through a basic example of multithreading
    using the native threading support added in the 2011 revision of C++.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0026.html#OPEK0-1ab5991b318547348fc444437bdacb24), *Multithreading
    Implementation on the Processor and OS*, builds upon the fundamentals provided
    by the hardware implementations discussed in the preceding chapter, showing how
    OSes have used the capabilities to their advantage and made them available to
    applications. It also discusses how processes and threads are allowed to use the
    memory and processor in order to prevent applications and threads from interfering
    with each other.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0045.html#1AT9A0-1ab5991b318547348fc444437bdacb24), *C++ Multithreading
    APIs*, explores the wide variety of multithreading APIs available as OS-level
    APIs (for example, Win32 and POSIX) or as provided by a framework (for example,
    Boost, Qt, and POCO). It briefly runs through each API, listing the differences
    compared to the others as well as the advantages and disadvantages it may have
    for your application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0076.html#28FAO0-1ab5991b318547348fc444437bdacb24), *Thread
    Synchronization and Communication*, takes the topics learned in the previous chapters
    and explores an advanced multithreading implementation implemented using C++ 14''s
    native threading API, which allows multiple threads to communicate without any
    thread-safety issues. It also covers the differences between the many types of
    synchronization mechanisms, including mutexes, locks, and condition variables.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0090.html#2LQIK0-1ab5991b318547348fc444437bdacb24), *Native
    C++ Threads and Primitives*, includes threads, concurrency, local storage, as
    well as thread-safety supported by this API. Building upon the example in the
    preceding chapter, it discusses and explores extending and optimizing thread-safty
    using the features offered by the full feature set in C++ 11 and C++ 14.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0129.html#3R0OI0-1ab5991b318547348fc444437bdacb24), *Debugging
    Multithreaded Code*, teaches you how to use tools such as Valgrind (Memcheck,
    DRD, Helgrind, and so on) to analyze the multithreaded performance of an application,
    find hotspots, and resolve or prevent issues resulting from concurrent access.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0160.html#4OIQ00-1ab5991b318547348fc444437bdacb24), *Best Practices,*
    covers common pitfalls and gotchas and how to spot them before they come back
    to haunt you. It also explores a number of common and less common scenarios using
    examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0169.html#515F20-1ab5991b318547348fc444437bdacb24), *Atomic
    Operations â€“ Working with the Hardware*, covers atomic operations in detail: what
    they are and how they are best used. Compiler support is looked at across CPU
    architectures and an evaluation is made of when it is worth to invest time in
    implementing atomic operations in your code. It also looks at how such optimizations
    will limit the portability of your code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0187.html#5IAP60-1ab5991b318547348fc444437bdacb24), *Multithreading
    with Distributed Computing*, takes many of the lessons learned in the preceding
    chapters and applies them on a multi-system, cluster-level scale. Using an OpenMPI-based
    example, it shows how multithreading can be done across multiple systems, such
    as the nodes in a computer cluster.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](part0212.html#6A5N80-1ab5991b318547348fc444437bdacb24), *Multithreading
    with GPGPU*, shows the use of multithreading in GPGPU applications (for example,
    CUDA and OpenCL). Using an OpenCL-based example, a basic multithreaded application
    is explored that can execute tasks in parallel. This chapter takes lessons learned
    in the preceding chapters and applies them to processing on video cards and derived
    hardware (for example, rack-mounted vector processor hardware).'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To follow the instructions in this book, you will need any OS (Windows, Linux,
    or macOS) and any C++ compiler installed on your systems.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for intermediate C++ developers who wish to extend their knowledge
    of multithreading and concurrent processing. You should have basic experience
    with multithreading and be comfortable using C++ development toolchains on the
    command line.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    `randGen()` method takes two parameters, defining the range of the returned value:"'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: New terms and important words are shown in bold. Words that you see on the screen,
    for example, in menus or dialog boxes, appear in the text.
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply e-mail `feedback@packtpub.com`, and mention the book's title
    in the subject of your message. If there is a topic that you have expertise in
    and you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can download the example code files for this book from your account at
    [http://www.packtpub.com](http://www.packtpub.com). If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you. You can download the
    code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the SUPPORT tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Download.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Mastering-CPP-Multithreading](https://github.com/PacktPublishing/Mastering-CPP-Multithreading).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title. To view the previously
    submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the Errata section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy. Please contact us at `copyright@packtpub.com`
    with a link to the suspected pirated material. We appreciate your help in protecting
    our authors and our ability to bring you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `questions@packtpub.com`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
