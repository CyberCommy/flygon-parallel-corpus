- en: Network Scanning for IoT, SCADA/ICS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to SCADA/ICS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Nmap to scan SCADA/ICS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Nessus to scan SCADA/ICS systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to SCADA/ICS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The automation technology used to manage and perform various industrial operations
    such as line management control and operations control are part of what is known
    as operational technology:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e3913d61-6a60-4811-9f78-1a954cf3f935.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Industrial control systems** (**ICS**) cover a huge part of the operational
    technology segment, and are used to monitor and control various operations such
    as automating production, the control and monitoring of hardware systems, regulating
    temperature by controlling water levels, and the flow at a nuclear facility. Most
    ICS usage is done in very critical systems that are required to be available all
    the time.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The hardware that is used for ICS is of two types, **programmable logic controllers**
    (**PLCs**), or **discrete process control systems** (**DPC**), which are in turn
    managed by **Supervisory Control and Data Acquisition** (**SCADA**) systems. SCADA
    allows and makes easy the management of ICS systems by providing interface-based
    control rather than the user having to manually enter each and every command.
    This makes the management of these systems robust and easy, thereby allowing for
    a very high availability:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b15571b5-980d-44d4-aee4-78094a62e801.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The main components are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The SCADA display unit is basically the component that holds an interactive
    interface for the administrator to review, verify, and modify various commands
    that are to be passed to the ICS systems. This allows the user to control the
    ICS system from a distance without actually being in the field. For example, a
    remote administrator can use a web portal to manage configurations of all the
    thermostats in a building.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The control unit acts as a bridge between the SCADA display unit and the remote
    terminal unit. It is always required for the control unit to send the data coming
    from remote terminal units to the SCADA display units in real time. This is required
    in order to notify the administrator of any malfunctions which can be looked at
    and fixed to ensure the high availability of the system.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Remote terminal units** (**RTUs**) can be a **PLC** (a Programmable Logic
    Controller, which is a manufacturing industry standard computer that is used in
    manufacturing to process and execute instructions), which connects multiple devices
    to the SCADA network, enabling them to be monitored and administered from great
    distances. These links between the RT, the control unit, and the SCADA display
    unit don''t need be in the form of a wired network – it can also be a wireless
    network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is very important to secure these SCADA systems, as a simple misconfiguration
    could lead to a catastrophe in an actual industrial manufacturing environment.
    There are many open source tools that can be used for this purpose. Nmap is one such
    tool that allows users to write custom scripts for SCADA/ICS system port scanning.
    Furthermore, an analyst can use Metasploit modules to exploit these vulnerabilities
    in a SCADA/ICS environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the Metasploit modules that can be used to identify
    and exploit issues on the SCADA/ICS systems:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Vendor** | **System/component** | **Metasploit module** |'
  prefs: []
  type: TYPE_TB
- en: '| 7-Technologies | IGSS | `exploit/windows/scada/igss9_igssdataserver_listall.rb`
    |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `exploit/windows/scada/igss9_igssdataserver_rename.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `exploit/windows/scada/igss9_misc.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `auxiliary/admin/scada/igss_exec_17.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| AzeoTech | DAQ Factory | `exploit/windows/scada/daq_factory_bof.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| 3S | CoDeSys | `exploit/windows/scada/codesys_web_server.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| BACnet | OPC Client | `exploit/windows/fileformat/bacnet_csv.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  | Operator Workstation | `exploit/windows/browser/teechart_pro.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| Beckhoff | TwinCat | `auxiliary/dos/scada/beckhoff_twincat.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| General Electric | D20 PLC | `auxiliary/gather/d20pass.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `unstable-modules/auxiliary/d20tftpbd.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| Iconics | Genesis32 | `exploit/windows/scada/iconics_genbroker.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `exploit/windows/scada/iconics_webhmi_setactivexguid.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| Measuresoft | ScadaPro | `exploit/windows/scada/scadapro_cmdexe.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| Moxa | Device Manager | `exploit/windows/scada/moxa_mdmtool.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| RealFlex | RealWin SCADA | `exploit/windows/scada/realwin.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `exploit/windows/scada/realwin_scpc_initialize.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `exploit/windows/scada/realwin_scpc_initialize_rf.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `exploit/windows/scada/realwin_scpc_txtevent.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `exploit/windows/scada/realwin_on_fc_binfile_a.rb` |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `exploit/windows/scada/realwin_on_fcs_login.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| Scadatec | Procyon | `exploit/windows/scada/procyon_core_server.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| Schneider Electric | CitectSCADA | `exploit/windows/scada/citect_scada_odbc.rb`
    |'
  prefs: []
  type: TYPE_TB
- en: '| SielcoSistemi | Winlog | `exploit/windows/scada/winlog_runtime.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| Siemens Technomatix | FactoryLink | `exploit/windows/scada/factorylink_cssservice.rb`
    |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | `exploit/windows/scada/factorylink_vrn_09.rb` |'
  prefs: []
  type: TYPE_TB
- en: '| Unitronics | OPC Server | `exploit/exploits/windows/browser/teechart_pro.rb`
    |'
  prefs: []
  type: TYPE_TB
- en: There are many open source tools as well that can be used to perform these operations.
    One such tool is PLCScan.
  prefs: []
  type: TYPE_NORMAL
- en: PLCScan is a utility that's used to identify PLC devices using port scanning
    methodology. This identifies the packets received from specific ports to specific
    signatures of various SCADA/PLC devices that have been previously documented.
    It uses a set of scripts in the backend to perform these operations.
  prefs: []
  type: TYPE_NORMAL
- en: Scanning a control system by using automation scripts could be a tedious task,
    as they can crash very easily. Most of the SCADA/ICS systems are legacy systems
    with legacy software, which are not very cost-effective for replacement and do
    not have enough hardware to be automated. This results in a lot of vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Using Nmap to scan SCADA/ICS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Nmap provides multiple scripts, and its function also allows users to create
    multiple custom scripts to identify the SCADA systems that are present in a network.
    This allows an analyst to create specific test cases to test the SCADA systems.
    Some of the scripts that are available by default in the latest Nmap Script library
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`s7-info.nse`: This is used to enumerate Siemens S7 PLC devices and collect
    information such as system name, version, module, and type. This script works
    similarly to that of the PLCScan utility.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`modbus-discover.nse`: Enumerates SCADA Modbus **slave ids** (**sids**) and
    collects information such as sid number and slave ID data. Modbus is a protocol
    used by various PLC and SCADA systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will see the syntax and the usage of these scripts in the following recipes.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to complete this activity, you will have to satisfy the following
    prerequisites on your machine:'
  prefs: []
  type: TYPE_NORMAL
- en: You must have Nmap installed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You must have network access to the hosts on which the scans are to be performed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order to install Nmap, you can follow the instructions provided in [Chapter
    2](888a67bc-261d-466c-bd68-e1f498ac4213.xhtml), *Understanding Network Scanning
    Tools*. This will allow you to download a compatible version of Nmap and install
    all the required plugins. In order to check whether your machine has Nmap installed,
    open Command Prompt and type `Nmap`. If Nmap is installed, you will see a screen
    similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/95eda7ea-df62-4f79-aa2b-6ada58156fec.png)'
  prefs: []
  type: TYPE_IMG
- en: If you do not see the preceding screen, retry the same step by moving the Command
    Prompt control into the folder where Nmap is installed (`C:\Program Files\Nmap`).
    If you do not see the screen after doing this, remove and reinstall Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: To populate the open ports on hosts for which the scan is to be done on, you
    are required to have network-level access to that particular host. A simple way
    to check whether you have access to a particular host is through ICMP by sending
    ping packets to the host. However, this method only works if ICMP and ping is
    enabled in that network. In cases where ICMP is disabled, live host detection
    techniques vary. We will look at this in detail in further sections of this book.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, to create a test bed, install Conpot, which is a well-known honey
    pot on Kali operating systems, by following the instructions provided at [https://github.com/mushorg/conpot](https://github.com/mushorg/conpot).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once Conpot is installed, run Conpot on the system by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/e98561b0-1d57-4419-b2eb-9cdeb995a1bb.png)'
  prefs: []
  type: TYPE_IMG
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open Nmap in Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the following syntax in Command Prompt to obtain the scan results for
    the `scripts7-info.nse` script:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/238ea376-de5b-4ac4-bb3b-62ea604348f7.png)'
  prefs: []
  type: TYPE_IMG
- en: You can observe that the scanner has detected the system as a `Siemens, SIMATIC,
    S7-200` appliance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter the following syntax in Command Prompt to obtain the scan results for
    the `modbu-discover.nse` script:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/9d2ccc78-9a9b-4504-81bc-680a65e5d0dc.png)'
  prefs: []
  type: TYPE_IMG
- en: This module has also discovered the device to be `Siemens, SIMATIC, S7-200`.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These Nmap scripts allow the user to identify the specific ports that have been
    in use by the SCADA systems. For example, as shown in the proceeding recipe, ports `102`
    and `502` are specific ports that can be used to determine whether there are any
    SIMATIC devices in the network. An analyst can scan the whole network for ports
    `102` and `502`, and once found, they can perform a service scan to check whether
    any of them are running any related SCADA software.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At any given instance, if the default scripts present in Nmap have not done
    the job, then the user can download the custom Nmap scripts developed by other
    developers from GitHub or any resource and paste them into the scripts folder
    of the Nmap installation folder to use them. For example, clone the folder from
    the link [https://github.com/jpalanco/Nmap-scada](https://github.com/jpalanco/nmap-scada)
    for multiple other SCADA systems and paste them in the scripts folder so that
    you can run them using Nmap:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e0c8f2a8-c05b-4b06-9d32-6b3b94710cfc.png)'
  prefs: []
  type: TYPE_IMG
- en: Using Nessus to scan SCADA/ICS systems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nessus has a family of plugins – about 308 pages of them – that can be used
    to perform scans on SCADA/ICS devices. You can browse the family of plugins here: [https://www.tenable.com/plugins/nessus/families/SCADA](https://www.tenable.com/plugins/nessus/families/SCADA)
    . These plugins are checked against the given device to identify any vulnerability that
    has been identified based on the signatures present in the plugin.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to complete this activity, you will have to satisfy the following
    prerequisites on your machine:'
  prefs: []
  type: TYPE_NORMAL
- en: You must have Nessus installed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You must have network access to the hosts on which the scans are to be performed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order to install Nessus, you can follow the instructions provided in [Chapter
    2](888a67bc-261d-466c-bd68-e1f498ac4213.xhtml), *Understanding Network Scanning
    Tools*. This will allow you to download a compatible version of Nessus and install
    all the required plugins. In order to check whether your machine has Nessus installed,
    open the search bar and search for `Nessus Web Client`. Once found and clicked,
    this will be opened in the default browser window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bae6fe25-723e-4f72-817b-e6f49ea3a5f6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you are sure that Nessus has been installed correctly, you can use the `https://localhost:8834`
    URL directly from your browser to open the Nessus Web Client. If you are unable
    to locate the **Nessus Web Client**, you should remove and reinstall Nessus. For
    the removal of Nessus and installation instructions, refer to [Chapter 2](888a67bc-261d-466c-bd68-e1f498ac4213.xhtml),
    *Understanding Network Scanning Tools*. If you have located the Nessus Web Client
    and are unable to open it in the browser window, you need to check whether the
    Nessus service is running in the Windows Services utility:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9693a50a-c0ff-4fcf-a05e-9750a552b8b7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Furthermore, you can start and stop Nessus by using the services utility as
    per your requirements. In order to further confirm this installation using the
    command-line interface, you can navigate to the installation directory to see
    and access Nessus'' command-line utilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/68a960bb-a1da-4406-b8a8-382c0c0a1d19.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It is always recommended to have administrator-level or root-level credentials
    to provide the scanner with access to all the system files. This will allow the
    scanner to perform a deeper scan and populate better results compared to a non-credentialed
    scan. The policy compliance module is only available in the paid version of Nessus,
    such as Nessus Professional or Nessus Manager. For this, you will have to purchase
    an activation key from tenable and update it in the settings page, as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cf26a27c-ff9e-486b-9b93-3973287c1d30.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the edit button to open a window and enter the new activation code
    that you have purchased from tenable:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fa42788e-4a0d-4397-a904-fa3135baf8a1.png)'
  prefs: []
  type: TYPE_IMG
- en: Furthermore, you can install Conpot, as mentioned in the previous recipe. This
    recipe also requires the installation of the Kali Linux operating system. You
    can download a virtual machine from [https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html](https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html)
    and Kali Linux from [https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/](https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/).
  prefs: []
  type: TYPE_NORMAL
- en: How do it..
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the Nessus web client.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in to the Nessus client with the user that you created during installation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the **Policies** tab and select **Create New Policy**. Then, select
    the **Basic Network Scan** template:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5fbf2c37-64c2-4808-893b-3f167cb2cc79.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Alter the settings in the **Discovery** tab for the port scan by mentioning
    a range from `1-1000`. This will allow the scanner to complete the scan quickly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6ac3380f-85d6-44e4-854a-fb0a593050bc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Ensure that Perform thorough tests is not selected in the accuracy tab of the **General**
    settings category in **ASSESSMENT**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1eb01e0e-f7be-43da-b52c-c9b99d3eeed5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This will ensure that the PLC or any other device on which you are performing
    the scan is not affected in any way due to the traffic produced. You can also
    set advanced settings to ensure that minimal traffic is generated:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7a720c6e-7c68-4fb6-a31a-ab35603da82c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Ensure that the SCADA plugins are present in the **Plugins** tab, otherwise
    the results obtained would only be for non-SCADA ports:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1c4a4315-f76f-4be6-bbbc-9f38773ada58.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Save the policy and select **New Scan** from the `My Scans` folder. Navigate
    to the **User Defined** policies section and select the policy:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c3d76b19-9c29-487e-b071-75ba03fba3c2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select the policy and fill in the required details. Then, launch the scan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/aa49ec49-43aa-4766-8280-9f9f0dd37c65.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Wait for the scan to complete and open the results:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d714fcbd-dce6-4c8d-9902-d8a15e748b41.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The preceding results show us that the scan was successful and that Nessus
    has found two SCADA-related vulnerabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: 'ICCP/COTP (ISO 8073) Protocol Detection:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/b98ec24b-2204-4e05-8bb8-121d26722571.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Modbus/TCP Coil Access:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/92e4e5c7-307e-469e-b7a5-8810c47921c6.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These scan results will allow the user to perform further analysis to check
    for the known vulnerabilities in the system. From this, the user can suggest the
    required patches to the administrator. It should always be ensured that all the
    SCADA connections are encrypted and end-to-end, or else restricted only to performing
    point-to-point connections.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Similar checks can be performed using the Metasploit modules. Open Kali Linux,
    which we installed in the VM, and type the following command in Terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/017f3def-86d3-4aa4-8261-d7ee6ab0481e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This is used to open the Metasploit console. There is also a GUI version of
    Metasploit available with the name Armitage. To find out the various Metasploit
    modules that are available for SCADA, enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/26d4d87a-00af-4d18-9abd-77f61335422c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As shown in the preceding screenshot, various modules for SCADA that are supported
    by Metasploit are loaded. Let''s try a specific search for Modbus to see what
    modules are supported:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/9a3859da-12ca-4a15-a1c5-92f86f763ddd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'From the preceding screenshot, you can use `modbusdetect` to identify whether
    Modbus is running on port `502` using the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Fill in the required details by using `show options` to identify the same:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0ead76e5-177e-4af2-9109-f3603c01aae3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Set RHOSTS to `192.168.75.133` using the following command and run the exploit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/78d54dad-e59c-4cdb-932a-4a6795f3ad8e.png)'
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows that the module has detected the presence of
    Modbus on port `502`.
  prefs: []
  type: TYPE_NORMAL
