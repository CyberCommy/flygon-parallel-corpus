- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The year is 2014 and the war of **Single-Page Application** (SPA) solutions
    is truly raging. There are many rivals: Angular, React, Ember, Knockout, and Backbone,
    to name but a few. However, the battle being most closely watched is between Google''s
    Angular and Facebook''s React.'
  prefs: []
  type: TYPE_NORMAL
- en: Angular, the SPA king until this point, is a full-fledged framework that follows
    the familiar MVC paradigm. React, the unlikely challenger seems quite odd in comparison
    with its core library only dealing with the view layer and markup written entirely
    in JavaScript! While Angular holds the bigger market share, React has caused a
    seismic shift in how developers think about web application design and has raised
    the bar on framework size and performance.
  prefs: []
  type: TYPE_NORMAL
- en: Meanwhile, a developer named Evan You was experimenting with his own new framework,
    Vue.js. It would combine the best features of Angular and React to achieve a perfect
    balance between simplicity and power. Your vision would resonate so well with
    other developers that Vue would soon be among the most popular SPA solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Despite the fierce competition, Vue gained traction quickly. This was partly
    thanks to Taylor Otwell, the creator of Laravel, who tweeted in early 2015 about
    how impressed he was with Vue. This tweet generated a lot of interest in Vue from
    the Laravel community.
  prefs: []
  type: TYPE_NORMAL
- en: 'The partnership of Vue and Laravel would become further entwined with the release
    of Laravel version 5.3 in September 2016, when Vue was included as a default frontend
    library. This was a perfectly logical alliance for two software projects with
    the same philosophy: simplicity and an emphasis on the developer experience.'
  prefs: []
  type: TYPE_NORMAL
- en: Today, Vue and Laravel offer an immensely powerful and flexible full-stack framework
    for developing web applications, and as you'll find throughout this book, they're
    a real treat to work with.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Building a full-stack app requires a wide variety of knowledge, not just about
    Vue and Laravel, but also Vue Router, Vuex, and Webpack, not to mention JavaScript,
    PHP, and web development in general.
  prefs: []
  type: TYPE_NORMAL
- en: 'As such, one of the biggest challenges for me as the author was deciding what
    should and shouldn''t be included. The topics I ultimately settled upon arose
    as answers to one of the two following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: What are the essential features, tools, and design patterns that the reader
    will use in all, or most, of their Vue.js apps?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the key issues of designing and building *full-stack* Vue.js apps as
    opposed to other architectures?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here''s how the chosen topics are distributed across the chapters of the book:'
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 1, *Hello Vue - An Introduction to Vue.js*, presents an overview of
    Vue.js, and the book's case-study project, *Vuebnb*.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 2, *Prototyping Vuebnb, Your First Vue.js Project*, provides a practical
    introduction to the essential features of Vue.js, including installation, template
    syntax, directives, lifecycle hooks and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](e50310e5-b580-47d0-aff6-015808cc3b1c.xhtml), *Setting Up a Laravel
    Development Environment*, shows how to set up a new Laravel project for inclusion
    in a full-stack Vue.js app.'
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 4, *Building a Web Service with Laravel*, is about laying the foundations
    of the backend of our case-study project, by setting up the database, models,
    and API endpoints.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 5, *Integrating Laravel and Vue.js with Webpack*, explains how a sophisticated
    Vue app will require a build step, and introduces Webpack for bundling project
    assets.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 6, *Composing Widgets with Vue.js Components*, teaches how components
    are an essential concept of modern UI development and one of the most powerful
    features of Vue.js.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 7, *Building a Multi-Page App with Vue Router*, introduces Vue Router
    and shows how we can add virtual pages to a frontend app.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 8, *Managing Your Application State with Vuex*, explains how state management
    is a must-have feature for managing complex UI data. We introduce the Flux pattern
    and Vuex.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 9, *Adding a User Login and API Authentication With Passport*, focuses
    on one of the trickiest aspects of full-stack apps—authentication. This chapter
    shows how to use Passport for secure AJAX calls to the backend.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 10, *Deploying a Full-Stack App to the Cloud*, describes how to build
    and deploy our completed project to a cloud-based server and use a CDN for serving
    static assets.
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before you begin development on the case-study project, you must ensure that
    you have the correct software and hardware.
  prefs: []
  type: TYPE_NORMAL
- en: Operating system
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can use a Windows or Linux-based operating system. I'm a Mac guy though,
    so any Terminal commands used in this book will be Linux commands.
  prefs: []
  type: TYPE_NORMAL
- en: Note that we'll be using the Homestead virtual development environment, which
    includes the Ubuntu Linux operating system. If you SSH into the box and run all
    your Terminal commands from there, you can use the same commands as me, even if
    you have a Windows host operating system.
  prefs: []
  type: TYPE_NORMAL
- en: Development tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Downloading the project code will require Git. If you haven't got Git installed
    already, follow the directions in this guide: [https://git-scm.com/book/en/v2/Getting-Started-Installing-Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git).
  prefs: []
  type: TYPE_NORMAL
- en: To develop a JavaScript application you'll need Node.js and NPM. These can be
    installed from the same package; see the instructions here: [https://nodejs.org/en/download/](https://nodejs.org/en/download/).
  prefs: []
  type: TYPE_NORMAL
- en: We'll also be using Laravel Homestead. Instructions will be given in [Chapter
    3](e50310e5-b580-47d0-aff6-015808cc3b1c.xhtml), *Setting Up a Laravel Development
    Environment*.
  prefs: []
  type: TYPE_NORMAL
- en: Browser
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vue requires ECMAScript 5, which means you can use a recent version of any major
    browser to run it. I recommend you use Google Chrome, though, as I'll be giving
    debugging examples for Chrome Dev Tools, and it will be easier for you to follow
    along if you're using Chrome as well.
  prefs: []
  type: TYPE_NORMAL
- en: When choosing your browser, you should also consider compatibility with Vue
    Devtools.
  prefs: []
  type: TYPE_NORMAL
- en: Vue Devtools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Vue Devtools browser extension makes debugging Vue a breeze, and we'll be
    using it extensively in this book. The extension is made for Google Chrome, but
    will also work in Firefox (and Safari, with a bit of hacking.)
  prefs: []
  type: TYPE_NORMAL
- en: See the following link for more information and installation instructions: [https://github.com/vuejs/vue-devtools](https://github.com/vuejs/vue-devtools)
  prefs: []
  type: TYPE_NORMAL
- en: IDE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will, of course, need a text editor or IDE for developing the case-study
    project.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You'll need a computer with specs sufficient for installing and running the
    software just mentioned. The most resource-intensive program will be VirtualBox
    5.2 (or VMWare or Parallels), which we'll be using to set up the Homestead virtual
    development environment.
  prefs: []
  type: TYPE_NORMAL
- en: You'll also need an internet connection for downloading the source code and
    project dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for Laravel developers who are seeking a practical and best-practice
    approach to full-stack development with Vue.js and Laravel.
  prefs: []
  type: TYPE_NORMAL
- en: 'Any web developer interested in the topic can successfully use this book, though,
    so long as they meet the following criteria:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Topic | Level |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| HTML and CSS | Intermediate knowledge |'
  prefs: []
  type: TYPE_TB
- en: '| JavaScript | Intermediate knowledge |'
  prefs: []
  type: TYPE_TB
- en: '| PHP | Intermediate knowledge |'
  prefs: []
  type: TYPE_TB
- en: '| Laravel | Basic knowledge |'
  prefs: []
  type: TYPE_TB
- en: '| Git | Basic knowledge |'
  prefs: []
  type: TYPE_TB
- en: Note that readers will not need any prior experience with Vue.js or other JavaScript
    frameworks.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "For
    example, here I''ve created a custom element, `grocery-item`, which renders as
    a `li`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "This is not permitted by Vue and if you attempt it you will get this error: Do
    not mount Vue to <html> or <body> - mount to normal elements instead."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.Tips and tricks appear
    like this.
  prefs: []
  type: TYPE_NORMAL
