- en: Going Beyond Performance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 1](1e519ed0-2065-4d04-b589-e7af72645baa.xhtml), *Faster Web—Getting
    Started*, of this book, we mentioned that performance is also about perception.
    Indeed, as previously stated, time measurement depends on the moment of measurement
    and can vary depending on the complexity of the task to be performed, the psychological
    state of the user and the user's expectations as he might have defined them according
    to what he considers to be the software of reference when executing a certain
    task. Therefore, a good manner in which an application does what it has to do
    also means that the software would have to meet the user's expectations as to
    how this computer program ought to do things. Hence, quicker is not always better.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will try to better understand the principles behind UI design
    when it comes to the perception of performance. We will see how these design principles
    can have a real effect on the user's subjective perception of time and improve
    perceived performance when there are no real optimizations left to do.
  prefs: []
  type: TYPE_NORMAL
- en: 'Thus, we will cover the following points:'
  prefs: []
  type: TYPE_NORMAL
- en: Clocked and perceived time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Speed perception
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reasonable delay and response times
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UI design principles and patterns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Beyond performance tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clocked and perceived time
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we have addressed the question of performance as it
    is measured by objective time. Objective time is measuring, by the means of a
    tool that divides, in equal units of measurement, a duration between an imminent
    future and an imminent past whose parts are in a continuous persistent flow of
    being.
  prefs: []
  type: TYPE_NORMAL
- en: This definition of objective time shows us that time is the effect of a movement
    of existence that takes us from an undetermined future to the state of a frozen
    past by the means of a constant present. It is objective inasmuch as a third-party
    being is used as a witness to this passing of being from one state to the other
    by dividing it into equal units of measurement. This is the reason why objective
    time is often named clocked time, as it refers to the concept of dividing time
    into equal units of measurement (for example, seconds, minutes, hours, and so
    on). Obviously, the field of science that studies objective time is Physics.
  prefs: []
  type: TYPE_NORMAL
- en: 'This being said, it is unquestionable that humans perceive the duration between
    two moments as being a variable thing. Indeed, we all know that time flies when
    we''re having fun. In the field of psychology, subjective, or perceived, time
    is therefore defined as an impression left on the mind caused by the mind''s level
    of awareness of the actual passing of time between two or more successive events.
    The more the mind is aware, the more time is perceived as having a long duration.
    The less it is aware, the faster time seems to pass:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b1a037d8-6264-4939-a973-13dc43e08237.jpg)The passing of time as
    it is perceived by the mind'
  prefs: []
  type: TYPE_NORMAL
- en: Many factors can influence how the mind perceives duration. Amongst the most
    notable ones are the emotional state of the person, the perception of the past
    and anticipated events, the general level of stress, body temperature, the presence
    of drugs and the general effects of age on the person's state of mind.
  prefs: []
  type: TYPE_NORMAL
- en: When applying these notions to computer science and more specifically to user
    interface design, the notions behind the study of perceived time become the principles
    that lead us to discovering how to influence a user's perception of duration and
    how this perception impacts the user's overall satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, many of these factors are beyond the control of the computer programmer,
    but there are elements to consider when designing user interfaces in order to
    positively impact user satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: Speed perception
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Firstly, according to Paul Bakaus, a person's consciousness lags about 80 milliseconds
    behind what is currently happening. Indeed, the subjective present is always an
    objective past. Moreover, a person will need more time to understand and fully
    perceive current events if these are more intellectually complex in nature. These
    factors are true of any person. Thus, all users will unconsciously grant this
    free start up time for computer processing.
  prefs: []
  type: TYPE_NORMAL
- en: 'Secondly, the emotional state of the user has a strong effect on perceived
    time. In a fairly recent study by Awwwards and Google [1], it has been stated
    that anxious or rushed users will perceive more than 50% of websites as loading
    slowly compared to less than 25% for calm and relaxed users. This is equally true
    for users that are on the move compared to those that are comfortably sitting
    down:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/ed3826b7-7fd0-48cb-93df-bf2feadbb4dd.jpg)The influence of a person''s
    emotional state or level of activity when it comes to speed perception'
  prefs: []
  type: TYPE_NORMAL
- en: 'Thirdly, age is an important factor when considering perception of time. The
    younger a user is, the more he will be aware of duration. According to the same
    study by Awwwards, 18-24 year old users will only consider half of the visited
    websites as being fast, while 25 to 44-year old users will consider almost three
    quarters of the same websites to have loaded quickly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e9c7b259-2a21-4433-b85a-859486157bfc.jpg)The influence of a person''s
    age when it comes to speed perception'
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, all users will be less aware of duration when effective use of the application
    begins, even if it is not done loading. Slow retail sites often got high praise
    for perceived speed based entirely on the fact that users can start shopping for
    their desired items even though the browser has not completed the rendering of
    the entire page.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, there are certain elements concerning speed perception that are common
    to all users and other elements that will depend on specific user profiles. It
    is up to the developer to discover these specific elements in order to have a
    better idea of how to make the best impact on overall user satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: Reasonable delay and response times
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another factor is what the user perceives as reasonable delay. As stated in
    [Chapter 1](1e519ed0-2065-4d04-b589-e7af72645baa.xhtml), *Faster Web—Getting Started*,
    this is directly related to what the user considers to be the optimal performance
    of a certain type of application. This optimal performance is often determined
    according to what the user might consider to be an application of reference. In
    the case of web-based applications and websites, there are certain thresholds
    to be taken into account as they are shared amongst all web users on average.
  prefs: []
  type: TYPE_NORMAL
- en: 'Firstly, most users consider a response time of 300 milliseconds or less to
    be instantaneous. This is in great part explained by the previously mentioned
    "consciousness lag." As for response times between 300 milliseconds and 1 second,
    these are considered to be a reasonable delay and give the user the impression
    of a smooth transition. Many users will start losing attention and begin feeling
    impatient beyond a three second delay in response time unless there is some sort
    of user flow. Furthermore, a recent study by Google showed that more than 50%
    of users will leave a mobile website if its pages take more than three seconds
    to load. After eight seconds, user attention is considered to have been lost:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/edd8b560-c638-4ec0-8b89-17a92d754893.jpg)What most users consider
    to be a reasonable delay when using web applications or browsing websites'
  prefs: []
  type: TYPE_NORMAL
- en: Secondly, all users that have accomplished a set goal or that have had a good
    perceived speed experience while visiting a website previously will be more forgiving
    and more likely to have a positive perception of duration when visiting the website
    in the future.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, a positive speed experience will not only confirm user satisfaction
    concerning the website itself, but it will also influence the user's perception
    of the final outcome of the online visit and the overall appreciation of the business's
    brand.
  prefs: []
  type: TYPE_NORMAL
- en: UI design principles and patterns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Given all the previous factors and notions, certain UI design principles can
    now be abstracted and understood.
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, speed is important to users. So, if no other optimization of your application
    can be done, make sure your users have the possibility to start using the application
    even before the initial page has finished rendering. This means getting to the
    **First Meaningful Paint** (**FMP**) of the page as quickly as possible in order
    to reduce the time it takes to get to the "time to interactive," which is the
    first moment when a user can start to interact with the application. One basic
    technique that can help you load the page's "above the fold" content before anything
    else is to place all blocking JavaScript at the end of the body of the page. Also,
    certain parts of the page can be cached for faster rendering or can be loaded
    in the browser through AJAX requests that are triggered with a periodical timer
    for example. Finally, HTTP/2's server push feature and HTTP Reverse Proxy servers
    could prove to be very useful when dealing with web pages that depend on many
    CSS and JavaScript libraries and frameworks in order to complete their rendering.
  prefs: []
  type: TYPE_NORMAL
- en: 'Secondly, even if a website is taking less than one second to load any of its
    pages, it is possible to speed things up a little more by removing the mobile
    browser''s tap delay. This can be accomplished by adding an HTML meta tag in the
    head section of your pages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Moreover, you could use the *Chrome* CSS rule in order to accomplish the same
    thing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For older browsers, please have a look at *FastClick* by FT Labs ([https://github.com/ftlabs/fastclick](https://github.com/ftlabs/fastclick)).
  prefs: []
  type: TYPE_NORMAL
- en: Optionally, since the pages are loading so quickly, it could be possible to
    add simple animations in order to make page transitions smoother. It would be
    best to ease in when prompting the user and to ease out when requiring an instant
    reaction through buttons and menus. These basic transition animations should last
    from 200 to 500 milliseconds, and when using bounce or elastic effects, one should
    think of transitions as lasting between 800 and 1,200 milliseconds. Even though
    these types of visual effects will give the user the impression that the application
    is a quality product, do not over-animate web page transitions and try to prevent
    content jumping when the page is loading unknown image sizes in order to keep
    the whole user experience as smooth and as streamlined as possible.
  prefs: []
  type: TYPE_NORMAL
- en: 'Thirdly, if your pages are taking from two to five seconds to load, it is recommended
    that you send some feedback to the users through the use of progress bars, throbbers
    or any other smart distractions. Also, make sure to explain what is going on by
    using simple expressions such as "% of 32 MB uploaded",  "Email is being sent"
    or "Estimated time left: 1 minute".'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, if a page takes more than five seconds to load, you should get the
    users in active mode by getting them to play a simple game, for example. Of course,
    you can continue using throbbers, progress bars and display short messages to
    explain what is going on. But getting users into active mode will get them to
    be less aware of the passing of time. This is particularly useful for pages requiring
    very long loading times. Indeed, a very active user can completely lose track
    of time and become amused by a pleasant game at hand. This technique can also
    be used if you know that users will be anxious, rushed or on the move when viewing
    your application. Moreover, when pages require very long loading times, it should
    always be possible for the user to abort the operation and retry later.
  prefs: []
  type: TYPE_NORMAL
- en: 'This will also have a positive impact on the user''s overall satisfaction,
    as it allows a user to be in full control of the lengthy operation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/1b0c702a-82a3-4e8f-a86c-1abf72c2f1f7.jpg)Applicable UI design principles
    depending on expected time delays'
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's have a look at how to implement a simple UI design using the previous
    principles and patterns.
  prefs: []
  type: TYPE_NORMAL
- en: '"Beyond Performance" tools'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to get a better idea of how to implement these types of solutions,
    we will create an animated transition that will wrap itself around a very slow
    PHP script. Thus, we will try to influence the perceived speed of the original
    script.
  prefs: []
  type: TYPE_NORMAL
- en: 'Our original PHP script will simulate slow execution by running a sleep command.
    Here is the content of the original script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If we run this script immediately, we definitely perceive that the script is
    slow and that the elapsed time could make us believe that something is going wrong:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/4e888194-edfe-4a8b-a006-65181e2fea2b.png)The script''s slow execution
    might make us believe that something is going wrong'
  prefs: []
  type: TYPE_NORMAL
- en: The script truly gives us the impression that it is momentarily hanging.
  prefs: []
  type: TYPE_NORMAL
- en: We will now create an HTML script that will query the original PHP script and
    obtain the script's output through an AJAX request. This new HTML script will
    also add some transition animations in order to influence the user's perception
    of the original script's speed.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to accomplish this, we will add a throbber that is entirely generated
    by CSS and we will use the `jQuery` and `Modernizr` libraries to do the AJAX call.
    These library files are hosted on CDNs in order to benefit from HTTP Reverse Proxy
    caching and browser caching. Here is the content of the second script (`chap10_slow_after.html`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'When running this new script, you should see a throbber appear:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/58075d52-b38b-48f5-a17e-f1c398ed3d34.png)'
  prefs: []
  type: TYPE_IMG
- en: The throbber informs the user that something is happening.
  prefs: []
  type: TYPE_NORMAL
- en: 'And then, a few moments later, you will see a message stating that the desired
    page is being loaded:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/39ad486e-6acd-4829-ac30-e600eb6308b8.png)The new message distracts
    the user and partially resets the user''s perception of the passing of time'
  prefs: []
  type: TYPE_NORMAL
- en: 'This new message aims to distract the user and causes the user''s perception
    of time to be partially reset. Finally, when the AJAX request is completed, the
    throbber and the message both disappear in order to display the other page''s
    content:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/de017d33-7f74-48fa-bf7a-13fe79764c01.png)The throbber and the message
    both disappear and the original script''s output is displayed'
  prefs: []
  type: TYPE_NORMAL
- en: 'When letting the new script run, we definitely get the impression that the
    original script''s wall time has decreased when, in fact, it has increased due
    to the 0.5 second timeout that was added to the JavaScript function that is making
    the AJAX request. If you run the JavaScript profiler that we mentioned in previous
    chapters on this new script, you will get to see what is happening behind the
    scenes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/6b436c70-3e92-4301-a232-6bc2a0e6677b.png)Most of the execution time
    (six seconds) is passed waiting for the original script to complete its execution'
  prefs: []
  type: TYPE_NORMAL
- en: The profiler confirms that most of this script's wall time is explained by the
    network I/O to the original script that takes as much time as before to load.
    But what we have achieved with the new wrapper script is giving the impression
    to the end user that we have succeeded in going "beyond performance."
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have better understood the principles behind UI design when
    it comes to the perception of performance. We have seen how these design principles
    can have a real effect on the user's subjective perception of time and how they
    can improve perceived performance when there are no real optimizations left to
    do.
  prefs: []
  type: TYPE_NORMAL
- en: We hope that you have found this book useful to better understand the notions
    of performance and efficiency, to discover most of the new underlying web technologies
    that make up what the Internet has become today and to help you on your way to
    mastering the Faster Web.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] [https://www.awwwards.com/brainfood-mobile-performance-vol3.pdf](https://www.awwwards.com/brainfood-mobile-performance-vol3.pdf)'
  prefs: []
  type: TYPE_NORMAL
