- en: '*Chapter 12*: Other Projects with AWS'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To conclude this book, I wanted to make a brief mention of two other different
    projects that are good to note and dig into. Throughout this book, we have taken
    quite a bit of a high-level view as well as a bunch of low-level views (hands-on
    portions) to create a cohesive understanding of pentesting and what it means to
    AWS. This final chapter is going to discuss an open source framework that is used
    by red teamers, penetration testers, and ethical hackers that allows businesses
    to test real adversary tactics and methods on their organizations – to ultimately
    better the controls and defenses by locating areas of weakness. We will then end
    with a fun exercise that came from a phishing project I came up with back in 2019,
    where we will learn how to leverage EC2 to set up quick and impactful phishing
    exercises that you can use on an authorized organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the MITRE ATT&CK framework
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phishing with AWS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are the technical requirements for this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'MITRE ATT&CK Navigator: [https://mitre-attack.github.io/attack-navigator/enterprise/](https://mitre-attack.github.io/attack-navigator/enterprise/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The phishing program used in this chapter: [https://github.com/thelinuxchoice/blackeye](https://github.com/thelinuxchoice/blackeye)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the MITRE ATT&CK framework
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Depending on the scope, pentesting can become a large and cumbersome engagement
    that may have a severe impact on the quality of the pentest. When pentesting,
    we want to be able to provide both creative and real-world scenarios that we can
    use to engage our clients and customer networks and systems. During the pentest,
    we call our actions and methods **TTPs** – which stands for the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Tactics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Procedures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These three words make up a large portion of how we pentest; however, if we
    don't really understand what they stand for, then we really cannot make use of
    them. To better understand them, we can apply them to an open knowledge base,
    known as the MITRE ATT&CK framework, and discuss these terms by applying them
    to real-world scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: The MITRE ATT&CK framework allows us to develop our own methods and actions
    in the form of TTPs and fulfill the promise of quality engagement to our clients.
    The framework is a large knowledge base full of real-world adversary tactics that
    we can use to create threat models and real-life pentesting roadmaps during a
    pentest.
  prefs: []
  type: TYPE_NORMAL
- en: Another great benefit of the MITRE ATT&CK framework is that it lets you mimic
    real-life threat scenarios, which we will see more in a bit in the *Discovering
    MITRE ATT*&*CK Navigator* section. Before we go into creating attack paths with
    MITRE, we need to understand how we can use it for AWS pentesting. The next section
    will discuss the AWS matrix, which illustrates tactics and techniques through
    the MITRE ATT&CK framework.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding TTPs with AWS matrixes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The AWS matrix within the MITRE ATT&CK framework allows us to push our limits
    and attack paths by looking at real techniques and applying them to our pentesting
    methodology. Because there are so many ways to pentest, and so many different
    scenarios, the AWS matrix allows us to think less and do more by providing real
    scenarios derived from real attacks that have occurred.
  prefs: []
  type: TYPE_NORMAL
- en: To check out the matrix, go to [https://attack.mitre.org/matrices/enterprise/cloud/aws/](https://attack.mitre.org/matrices/enterprise/cloud/aws/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at the matrix and what it really entails with setting up
    attacks. The following screenshot shows the menu of the AWS matrix:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.1 – MITRE ATT&CK'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_12.01_B15630.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 12.1 – MITRE ATT&CK
  prefs: []
  type: TYPE_NORMAL
- en: 'This looks like a really complex Excel sheet, but it isn''t as complicated
    as it may seem. What this is really doing is breaking down individual steps of
    the attack process we use during a pentest – the only difference is that this
    is using a real-world approach, rather than a theoretical methodology, so let''s
    break down the topics so that we can understand concisely what they mean when
    pentesting AWS:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Initial Access** details the various ways of how we can obtain credentials
    that allow us access to user-oriented services, such as S3, EC2, Lambda, and others.
    How these credentials can be accessed varies in attack paths; however, the more
    common ways are through exposed GitHub and GitLab. If you go to the following
    link, it shows that a real **Advanced Persistent Threat** (**APT**) was able to
    gather credentials by using compromised Office 365 accounts: [https://attack.mitre.org/techniques/T1078/004/](https://attack.mitre.org/techniques/T1078/004/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following is a screenshot of the description:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.2 – APT33'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_12.02_B15630.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 12.2 – APT33
  prefs: []
  type: TYPE_NORMAL
- en: Notice that it references a real-life threat actor. That means we can use this
    attribute to create a "real-life" path to attack a client, to validate whether
    they are susceptible to this type of attack.
  prefs: []
  type: TYPE_NORMAL
- en: '**Persistence** consists of maintaining access to a system. We did this back
    in [*Chapter 9*](B15630_09_Final_ASB_ePub.xhtml#_idTextAnchor381), *Real-Life
    Pentesting with Metasploit and More!*, when handling different scenarios with
    Metasploit. Often, we can create accounts or use the valid account we have to
    maintain persistence. The same way of **escalating privileges** involves discovering
    a valid AWS account with better privileges, or by performing vertical privilege
    escalation on the compromised account.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Defensive evasion** has various techniques that can be executed to help achieve
    results that bypass defenses, such as firewalls and other detection services within
    the AWS environment. If we look at one of the **cloud compute infrastructure**
    techniques, we will see a sub-technique that creates a cloud instance. This is
    an interesting concept because essentially, what this means is that during a pentest,
    we create a new instance that becomes part of the environment and can be used
    as a rogue server during a pentest.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another important portion to mention about this process is the **Discovery phase**.
    During this phase, an adversary – in this case, the pentest team – uses various
    techniques that help gather information about the target network through recon
    and enumeration. We have done quite a bit of recon and discovery throughout this
    entire book by finding information with various tools to discover information
    and metadata about EC2, S3, Lambda, and open information.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, once we discover our targets, we move toward **collecting** and **exfiltrating**
    data outside the network. What this means is that we can use techniques and procedures
    to pull information out of the network and into our network. In an adversary approach,
    a threat or malicious hacker that has access to the AWS environment would gather
    data and push it to their server that resides behind proxy servers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: A proxy server acts as an intermediary host between a target and an attacker
    server. The proxy server is used to "hide" the attacker server.
  prefs: []
  type: TYPE_NORMAL
- en: Another part that is good to mention is that the last part of the MITRE ATT&CK
    framework involves the **impact** of threats. The impact can be defacing a web
    server or website, bringing services down via **DDoS** or **DoS**. These types
    of attacks are common and can really hurt an organization if something were to
    occur during a pentest, or even worse – if a large impact occurred from an actual
    threat or APT!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: To play around more with the MITRE ATT&CK framework, check out the framework
    in its entirety at [https://attack.mitre.org/](https://attack.mitre.org/).
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have discussed the MITRE ATT&CK framework, let's start looking at
    MITRE ATT&CK Navigator – a tool that lets us map and illustrate attacks at a high-level
    view.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering MITRE ATT&CK Navigator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this section, we will quickly take a look at how the tool can be used at
    a high-level view and how operators (red teamers) and pentesters can use the illustration
    type tool to bring to light the attacks used by a particular. For this example,
    we will be looking at some of the attacks used by APT33, a suspected Iranian threat
    group that has carried out operations since at least 2013\. APT33''s targets include
    nations such as the United States, Saudi Arabia, and South Korea, and they have
    an interest in the aviation area. You can find more about APT33 here: [https://attack.mitre.org/groups/G0064/](https://attack.mitre.org/groups/G0064/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s begin by going to the Navigator here: [https://mitre-attack.github.io/attack-navigator/enterprise/](https://mitre-attack.github.io/attack-navigator/enterprise/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once at the Navigator, follow these steps to create the APT33 roadmap:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on **multi-select** in the **section tools** section and scroll down in
    the **threat group** section until you come across **APT33**. When you come across
    it, click **select**:![Figure 12.3 – Dropdown in MITRE Navigator
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_12.03_B15630.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 12.3 – Dropdown in MITRE Navigator
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have selected **APT33**, we have selected all of its techniques.
    Now, let's highlight the techniques by clicking on the paint bucket under **technique
    controls**. For this example, we have selected **red** for the color:![Figure
    12.4 – Using colors to highlight attack methods
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_12.04_B15630.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 12.4 – Using colors to highlight attack methods
  prefs: []
  type: TYPE_NORMAL
- en: 'After selecting a color, your screen should begin to fill with lots of the
    color you selected. These colors highlight the tactics and techniques used by
    **APT33** and how your pentest team can execute these attacks. It is also a great
    way to show upper management how attackers are targeting other AWS environments
    and allows open discussion on how to guard against these types of attacks. The
    following is an illustration of an attack roadmap from **APT33** from ATT&CK Navigator:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.5 – Full highlighted attack path'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_12.05_B15630.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 12.5 – Full highlighted attack path
  prefs: []
  type: TYPE_NORMAL
- en: That's it for the Navigator section of this chapter. As you can see, **Navigator**
    is a great, simple, and concise tool that is going to help us illustrate our attack
    paths to upper management and to our pentest teams and allow us to execute our
    pentest while staying on track.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we understand how we can use MITRE ATT&CK in conjunction with our pentesting,
    let's take a look at how attackers, and pentesters, gain initial access through
    the means and methods of phishing.
  prefs: []
  type: TYPE_NORMAL
- en: Taking the bait with phishing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Phishing is a cyberattack that makes up around 70% of breaches endured by victim
    organizations. This less-technical deception technique typically involves an attacker
    making some type of payload that is then sent to a victim, or many victims. The
    payload consists of an email with some type of malicious software or links that
    trick users into clicking on them. This is used through the art of deception and
    pretexting, and typically has some kind of bait used to lure the target.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's move forward and take a look at how we can apply phishing in an educational
    setting. The goal of this is to help you, the reader, understand the **basic**
    technical attributes in how a simple yet effective phishing website can be executed.
  prefs: []
  type: TYPE_NORMAL
- en: Executing phishing with AWS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we understand what phishing is, let''s take a look at a quick but
    very fun example of an exercise for using our AWS Kali Linux machine to help us
    execute the phishing attack. Before we can begin, you''ll want to ensure that
    your Kali Linux machine is up and running. Once your Kali Linux machine is running,
    SSH into it via its public IP address. Once you have logged in to your Kali machine,
    proceed with the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Grab a copy of BlackEye from GitHub:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, change into the directory for the tool:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Launch the application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: After launching the application, you'll be prompted with a selection screen
    for what site you want to clone for your phishing attack. In this case, we will
    choose **Linkedin** by selecting option **13**:![Figure 12.6 – BlackEye main screen
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_12.06_B15630.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 12.6 – BlackEye main screen
  prefs: []
  type: TYPE_NORMAL
- en: After selecting option **13**, ensure that you put a **public DNS** as the local
    IP. This will ensure that the tool binds to our local DNS name for routing the
    tool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that the site is up and running and waiting for a target to drop by, or
    it is in a phishing email, have a user click on the link.
  prefs: []
  type: TYPE_NORMAL
- en: 'To see the page, input the public DNS into the URL bar of your preferred browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.7 – Phishing LinkedIn site'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure12.07_B15630.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 12.7 – Phishing LinkedIn site
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, the site looks normal; however, we can see that the URL is different
    within the search bar near the top. Seeing that would be a clear indicator to
    an aware user that this is a phishing scheme; however, a less aware user may be
    tricked and input their information.
  prefs: []
  type: TYPE_NORMAL
- en: Try putting in some credentials to the application. Refrain from using your
    legitimate LinkedIn credentials!
  prefs: []
  type: TYPE_NORMAL
- en: Once you put your credentials in, click **Sign in** just as you normally would.
    You should be redirected to the real LinkedIn page. What happened was the BlackEye
    tool harvested your credentials and redirected you to the actual LinkedIn page
    to try and log in again. The average user would have seen this as a potential
    error, and just tried to log in again. However, if we look in the background and
    go back to our Kali Terminal, we will notice something else – that our credentials
    have been harvested and saved!
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.8 – Stolen credentials'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_12.08_B15630.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 12.8 – Stolen credentials
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, we have credentials that can be used to access LinkedIn. Of course,
    these are not legitimate; however, in a real-life phishing scheme, harvested credentials
    can lead to a lot of trouble, such as fraud, identity theft, and having your data
    compromised.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: For a fun and interactive video on this topic, check out *Simply Cyber* for
    a great live demonstration using this tool!
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.youtube.com/watch?time_continue=2&v=aa7e7oLPyp4&feature=emb_logo](https://www.youtube.com/watch?time_continue=2&v=aa7e7oLPyp4&feature=emb_logo)'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned a little bit about attack techniques by analyzing
    and discussing the MITRE ATT&CK framework, and then we finished the chapter with
    a fun and interactive exercise on utilizing AWS for an AWS phishing campaign.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter wraps up the book. I hope you have enjoyed reading it just as much
    as I have writing it!
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An article on a real-life attack on AWS: [https://www.darkreading.com/cloud/hackers-use-public-cloud-features-to-breach-persist-in-business-networks/d/d-id/1332618](https://www.darkreading.com/cloud/hackers-use-public-cloud-features-to-breach-persist-in-business-networks/d/d-id/1332618)'
  prefs: []
  type: TYPE_NORMAL
