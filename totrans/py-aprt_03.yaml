- en: Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This book comprises 10 chapters (not including this one). The chapters build
    on one another, so unless you’ve already had some exposure to Python you’ll need
    to follow them in order. We’ll start with getting Python installed into your system
    and orienting you a bit.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll then cover language elements, features, idioms, and libraries, all driven
    by working examples that you’ll be able to build along with the text. We’re firm
    believers that you’ll learn more by doing than by just reading, so we encourage
    you to run the examples yourself.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of the book you’ll know the fundamentals of the Python language.
    You’ll also know how to use third-party libraries, and you’ll know the basics
    of developing them yourself. We’ll even cover the basics of testing so that you
    can ensure and maintain the quality of the code you develop.
  prefs: []
  type: TYPE_NORMAL
- en: 'The chapters are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Getting started:** We go through installing Python, look at some of the basic
    Python tools, and cover the core elements of the language and syntax.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Strings and collections:** We look at some of the fundamental complex data
    types: strings, byte sequences, lists, and dictionaries.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Modularity:** We look at the tools Python has for structuring your code,
    such as functions and modules.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Built-in types and the object model:** We examine Python’s type system and
    object system in detail, and we develop a strong sense of Python’s reference semantics.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Collection types:** We go into more depth on some of the Python collection
    types, as well as introduce a few more.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Handling exceptions:** We learn about Python’s exception-handling system
    and the central role that exceptions play in the language.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Comprehensions, iterables, and generators:** We explore the elegant, pervasive,
    and powerful sequence-oriented parts of Python such as comprehensions and generator
    functions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Defining new types with classes:** We cover developing your own complex data
    types in Python using classes to support object-oriented programming.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Files and resource management:** We look at how to work with files in Python,
    and we cover the tools Python has for resource management.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Unit testing with the Python standard library:** We show you how to use Python’s
    `unittest` package to produce defect-free code that works as expected.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
