- en: Chapter 9. Some Additional Tricks and Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For daily Linux usage, most system administrators/users must master a few techniques
    to help them use their Linux machine to its full potential. It is like having
    a Swiss Army knife and using it to just cut vegetables. Linux hides many useful
    techniques for daily-life tasks, and CentOS 7 is one of the latest and most reliable
    OS that many users can use to solve tons of problems.
  prefs: []
  type: TYPE_NORMAL
- en: Through this chapter, we are going to show some of the most needed tools that
    we believe any system administrator should know how to use. We will be showing
    how to use these tricks and tools to better manage a CentOS 7 server infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: 'Within this chapter, we are going to present the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Connecting to multiple Linux machines using SSH
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Securing SSH and root login configurations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SSH key-based authentication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installation and configuration of SpamAssassin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the Clamav antivirus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration of Mytop for a MySQL database
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up Samba and NFS for file sharing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to some Linux system and network monitoring tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SSH for remote connection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we all know, SSH is the Secure Shell connection that we use to connect remotely
    to a Linux machine. It is the main tool used by system administrators for remote
    management of their infrastructure. It is one of the essential tools that we find
    in a basic installation of CentOS 7 and almost all Linux distributions by default.
  prefs: []
  type: TYPE_NORMAL
- en: Usually, SSH is only installed as a client, so you can only remotely connect
    to other machines; but this is not the case for a basic system installation. When
    installing the CentOS 7 server, it should already have the SSH server installed
    and running.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the SSH server, we can just rely on the default package repository
    without adding any extra third-party repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'After having the SSH server installed, we should start the service and enable
    it for default system startup services:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'For security, most machines have the default SSH port closed, so we need to
    open it from the default firewall manager:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: That's all we need to do to make a machine remotely accessible.
  prefs: []
  type: TYPE_NORMAL
- en: 'To access this machine, we only need to type `ssh` followed by the username
    and the IP address or the hostname (if the machine is stored at the DNS server
    or listed at the local `/etc/hosts` file) of the machine desired to connect to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Usually, if the server is running and the `sshd` service is listening, then
    there should be an exchange of public keys upon the first ever connection to that
    server using this machine. Otherwise, the server will just ask for the desired
    user password to allow the login.
  prefs: []
  type: TYPE_NORMAL
- en: 'When we connect to a remote machine using SSH, it is like us having an open
    window to that machine, and we are kind of stuck to that, which is a network-consuming
    way of connecting if we are using it for a long period, and especially if we are
    just connected without really typing any commands. So we need to close the terminal
    window to leave the remote connection session and free the resources reserved.
    SSH offers some useful options such as `–t`. Through this option, we can send
    a command to be executed on the remote machine and send back the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This command will only show the containment of the `/etc/hosts` file without
    keeping the windows open.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also use SSH to send files between two machines to or from a remote
    machine, using the `scp` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In the next section, we will show you how to secure SSH and manage a root login.
  prefs: []
  type: TYPE_NORMAL
- en: '![SSH for remote connection](img/B04674_09_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://www.allegrosoft.com/](https://www.allegrosoft.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: Securing SSH and the root login configuration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this section, we are going to show some basic and advanced ways to secure
    the SSH service to mitigate more threats. We will need to make some minor changes
    to the `/etc/ssh/sshd_config` file. We will explain every line as we change it
    gradually:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Uncomment the SSH version 2 line to use only the newer version of SSH, which
    is more secure and reliable. The line should look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'We can limit users'' access to restrict some users from accessing the server.
    We do this using SSH:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we can set up the time out for the SSH connection to always close the
    sessions that are not active for a defined period of time. We need to set the
    countdown to start from the moment the session became idle:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we can disable the root login using SSH:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'In addition, we can disable empty password usage, whereby users do not have
    the right to log in if they don''t have a password:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'In addition to that, we can do the same thing for password authentication.
    We can force all logins to happen via generated keys:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Then a warning banner is always useful. So, if we need to create one, we should
    edit `/etc/issues` and add any kind of banner:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we should restart the service so that it can take effect:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Some servers are publicly accessible, so they may need an extra reinforcement
    to their SSH service. For this task, we will be installing a tool called **Fail2Ban**,
    which is a very reliable tool that helps protect many services from brute-force
    attacks. It basically scans the log file for the specific service and looks for
    failed login attempts in order to block them. To have it installed, we need to
    install the EPEL repository first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we need to install it with **Rsyslog**, since it scans the log output
    taken from Rsyslog:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: To have it working fine, we can update it or update the SELinux policy.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then we go ahead to configure it in order to secure SSH. We need to create
    a file named `sshd.local` `in the jail` folder of `Fail2Ban`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we add the following code inside it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'This will ban attacks for 48 hours. Then we start the service and enable it
    for system startup services:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: We can now say that we are done with securing SSH. Let's try to manage root
    login access. We have already shown how we can disable root login using SSH. Let's
    manage the Sudoers file a little to have a user execute `superuser` commands without
    the need to type in a password.
  prefs: []
  type: TYPE_NORMAL
- en: First, we need to install `sudo` on the server. Usually, most CentOS 7 server
    installations have `sudo` installed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then we can just use the group wheel. If needed, we can create a new one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'And we go to the line describing the group wheel:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, we need to add a word to make the users under this group gain root access
    using `sudo`, and they don''t need to use passwords every time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Some system administrators do not advise this option, because if there is an
    error that gets typed, there is no turning back. It is always a choice to take
    for this option depending on the need.
  prefs: []
  type: TYPE_NORMAL
- en: SSH key-based authentication
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we have noticed by using SSH every time, we need to type the password, which
    is not something recommended in many security policies. This is where we will
    use the SSH feature to use authentication by using public/private keys.
  prefs: []
  type: TYPE_NORMAL
- en: 'SSH provides a tool for creating public/private keys to use for remote connection
    authentication, without the need to use a password. How do we do that? It''s simple.
    For this test example we are going to create a new RSA key, a little bit more
    secure than the usual (we can create different types of keys such as `dsa`, `ecdsa`,
    `ed25519`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Then we follow the steps presented by the command. For a default installation,
    we can just keep typing *Enter*. Otherwise, we can always add some kind of passphrase
    to make it more secure. We may need to specify the key file name so we can use
    it later.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then we need to copy the newly created keys file to the host that we want to
    connect to. There are two ways of doing this. The traditional way, which is to
    literally copy the key file into the server that we want to remote connect to
    without using a password. Where we need to put the file in the subfolder `.ssh`
    located at the current user folder. Or, we can simply use the `ssh-copy-id` command
    that does the same job without the pain:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Then we need to type the password for the last time.
  prefs: []
  type: TYPE_NORMAL
- en: After that, any SSH remote connection or file transfer can be done without the
    need for a password.
  prefs: []
  type: TYPE_NORMAL
- en: '![SSH key-based authentication](img/B04674_09_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://www.digitalocean.com/](https://www.digitalocean.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: Installing and configuring SpamAssassin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**SpamAssassin** is one of the most powerful spam filters that work with Postfix
    to filter all mails that may present a threat.'
  prefs: []
  type: TYPE_NORMAL
- en: We will use it to filter all Postfix mails on our mail server (as we described
    in [Chapter 4](ch04.html "Chapter 4. Mail Server with Postfix"), *Mail Server
    with Postfix,* about how to get one up and running).
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to install it using the default package manager:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Then it is installed. Now we move on to the configuration part:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'We have some lines that we need to make sure are in the file. So, we''d rather
    write them or uncomment them if they are commented:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we create a new user group and a user to manage the service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we have our service well configured. We move on to the Postfix part, where
    we should make some minor changes to its master configuration file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'We need to go to the line of the SMTPD configuration and add the following
    line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'Therefore, it should look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'After that, we add the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'We save the file and quit. Now we need to update the SpamAssassin rules by
    typing the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, to make the change in the `SpamAssassin` service and the Postfix server,
    we need to restart it and then we are done:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Setting up the Clamav antivirus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Clamav** is an open source antivirus tool. Its basic usage is for detecting
    viruses, malware, and malicious software on Linux-based machines.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Clamav, we need to install the EPEL repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we can install Clamav with all its useful tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'Before we start configuring, we need to make sure that SELinux will let Clamav
    work without issues:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'To check whether the option is active, we need to type this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we remove the example configuration, so we can make our own configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'After removing the example lines, we need to do some modifications to define
    the TCP server type and to define the user root to execute the antivirus:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'We uncomment the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'We add those two lines at the end of the file and save:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'To keep the Clamav database up to date, we need to enable a tool called **Freshclam**.
    Therefore, we need to create a backup file from its configuration file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'Again we remove the example lines:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'Otherwise, if needed, we can adjust the options for a more personalized solution.
    We need to run Freshclam to update the database manually and to check whether
    the configuration is successfully set:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'We need to create the file that will act as the service file to run the **Freshclam**
    daemon:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we put the following code inside the file and save it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we should check whether the service is well configured by running it
    and checking its status:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'If everything is running fine and there is no problem, we add it to the system
    startup service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we need to create the Clamav service file. We have an example service file
    that we need to copy into the system services folder. We need to change its name
    to something understandable. Then, we need to make some minor modifications to
    it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'Since we have changed the name, we need to change it at the file that uses
    this service as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'We change the first line by removing `@` to look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'At the same location, we need to change the Clamd service file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: 'We add the following lines at the end:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'And we remove `%i` from both the `Description` and `ExecStart` options. Then
    we change them to look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'Before running any service, we need to check whether we have any errors. We
    will run Clamd manually:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, if everything goes fine, we start the services and add them to the system
    startup services:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'For a final verification of the Clamav services, we check its status:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 'For a test scan of the current folder, we run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'This is the architecture how ClamAV should be located in our infrastructure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up the Clamav antivirus](img/B04674_09_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Source [https://wiki.jenkins-ci.org/display/JENKINS/Home](https://wiki.jenkins-ci.org/display/JENKINS/Home)
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a better description between the components of a
    mail server to explain how ClamAV help secure our mail service:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up the Clamav antivirus](img/B04674_09_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://aphyr.com/](https://aphyr.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Mytop for a MySQL database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mytop is an open source solution that helps monitor the MySQL database's activities
    and performance, or what we now know as MariaDB for CentOS 7\. It is a non-GUI
    monitoring tool. Therefore, it kind of provides an interphase through the shell
    command line.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Mytop, we should make sure that the installation is going to be
    at the same server where the MariaDB database server is installed. Then we add
    the EPEL repository, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we execute the installation using `yum`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'For the configuration, we only need to create a configuration file at the `root`
    folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we type the following text inside it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: This is a personalized configuration that will be used during the execution
    of the program.
  prefs: []
  type: TYPE_NORMAL
- en: 'To run it, we need to type in the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we need to type in the MariaDB root password. Otherwise, if we are accessing
    using a non-root user, we can always type this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: 'Or if we need one specific database, we have the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: 'To know that it is working fine, you should see the following interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring Mytop for a MySQL database](img/B04674_09_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'For more information on how to interact with the Mytop GUI, you can always
    check out its manual:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '![Configuring Mytop for a MySQL database](img/B04674_09_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [http://i.gzn.jp](http://i.gzn.jp)'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Samba and NFS for file sharing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Samba is an open source project with the goal of providing a secure and stable
    data and printer-sharing service across multiple operating systems (Windows, Linux,
    and Mac OS).
  prefs: []
  type: TYPE_NORMAL
- en: Samba works using the **Session Message Block** (**SMB**) protocol, which is
    a protocol supported by most Windows OS and Mac OS to serve those clients who
    have access to shared resources such as Linux storage media, printers, serial
    ports (hardware equipment).
  prefs: []
  type: TYPE_NORMAL
- en: For the tutorial, we are going to use a CentOS 7 Samba server and Mac OS machine
    to use the service to have access to a shared folder.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we will start by installing Samba on our CentOS 7 server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: 'Before starting the configuration, we need to make some backup, environment
    creation, and firewall setup. So first, we need to create a backup for the Samba
    configuration file to make sure not to mess up the original configuration (this
    is useful in case of having many updated configurations). We better keep a backup
    of each stage in the update process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we need to create the folder that we need to share, or prepare it to be
    shared if it is already there. We need to set the user permissions to grant everything
    to that folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we need to open the Samba service port at the server firewall:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we can start making the necessary configuration to the Samba configuration
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: 'We need to make sure that we set the appropriate workgroup (usually it is set
    as `WORKGROUP`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: And we define a shared folder.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: 'We save the file and create some Samba users:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: Then we type in a password and retry typing it to create a new one.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we want some folders to be shared with a specific user, we need to add the
    following line to the folder definition and we need to disable guest login by
    changing `guest` `ok = yes` to `guest` `ok = no`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: 'For the testing phase, we need to start the services:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we go to the client side and type this link at the server connection:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: '![Setting up Samba and NFS for file sharing](img/B04674_09_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'This test is used on a Mac machine. For a Windows machine, we type the following
    link at the Explorer address field:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we will have a login screen, where we need to type the Samba user ID and
    password, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up Samba and NFS for file sharing](img/B04674_09_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'After typing the correct user ID and password, there should be a screen showing
    the possible folder that this user can have access to, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up Samba and NFS for file sharing](img/B04674_09_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Then we will have our folder accessible with the rights as defined in the configuration
    folder. Since we have write permissions, we can create a folder and then check
    whether it did actually happen on the server.
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up Samba and NFS for file sharing](img/B04674_09_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We can run our server to verify whether the change made by the client has been
    applied.
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up Samba and NFS for file sharing](img/B04674_09_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If we ever need to change any of the folder-sharing configuration, we must
    restart the services to apply the change:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: Samba is good for multiple-environment file sharing, but we should not forget
    about Linux's most famous file-sharing solution—**Network File System** (**NFS**).
    NFS is a client-server tool used to share data between multiple Linux systems,
    via mounting many remote shared folders and drives across the network to directly
    access those files at the client side.
  prefs: []
  type: TYPE_NORMAL
- en: We are going to establish an NFS client-server test on CentOS 7 to show how
    it works.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to install the service at the server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we start the service responsible for ensuring the functionality of the
    service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: 'We prepare a folder to be shared:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, to export this folder and make it accessible to be mounted on the client,
    we go ahead and edit the `/etc/export` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: 'And we add the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: This line means that we are exporting this folder to all IP addresses in the
    network. The `rw` option gives write permissions to the folder, `sync` makes sure
    that the folder is always in synchronization, `no_root_squash` gives root privileges
    for the folder at the client side, and finally, `no_all_squash` enables the user's
    authority.
  prefs: []
  type: TYPE_NORMAL
- en: 'After every change to the export file, we need to restart the NFS server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we need to open the NFS services'' ports at the server firewall. Reload
    the firewall to apply the changes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: 'With this step, we can say that we are done configuring the server. Now we
    move to the client. Just like the server, we need to install the NFS utilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: 'Then start the appropriate services:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: 'Before mounting the network-shared folder, we need to make sure that there
    is a location to mount on:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: 'To test mount the folder, we can use the `mount` command or make the system
    mount it automatically by editing the `/etc/fstab` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: 'In addition, we insert the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: 'For a faster connection, we can always use the fourth version of NFS by typing
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: NFS4 has more to offer than NFS3\. We would recommend it for an environment
    that has Linux servers that do support NFS4.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, if we need to check what we have mounted on a specific NFS client,
    we use mount:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: Introducing the Linux system and network monitoring tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the final section of our chapter, we are going to present a number of very
    useful tools to monitor both systems and networks for our CentOS 7 server.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will start by showing some system monitoring tools. We believe that most
    of these tools need the EPEL repository installed, so we can just install it before
    trying to install any of those tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: 'The first tool that we are going to talk about is Htop. It is kind of the same
    as the old `top` command, but it has a very user-friendly interface, wherein it
    is much more interactive with many shortcuts, a graphical colored presentation
    of the process, and the CPU, Memory, and SWAP Memory in a bar shaped way, to show
    how much of those are used. To install Htop, we just need to use Yum:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: 'And to run it, we simply need to type `htop`. There is no configuration needed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: 'We should see this kind of interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introducing the Linux system and network monitoring tools](img/B04674_09_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The second system-monitoring tool on the list is Iotop. It does look like the
    old top command, but it specializes in showing the system available disk input
    and output access in real time. It shows each process activity, and how much it
    is using the hard disk (read/write speed and actual usage). To install it, we
    need to use YUM again, but usually it is installed on most CentOS 7 servers by
    default:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: 'To use it we need to type the name:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: 'We will have the following interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introducing the Linux system and network monitoring tools](img/B04674_09_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Just before going to the network monitoring tools, we should take a quick look
    at this tool that performs monitoring for both systems and networks. Monitorix
    is an open source, lightweight monitoring tool for systems and network monitoring.
    It collects system and network activities on a regular basis in order to show
    them in a well-presented graph through a web-based interface. It is very helpful
    for detecting bottlenecks and system failures for better management.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Monitorix, we need to install a few necessary packages first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we install Monitorix:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: 'It is kind of a service, so we need to start it and enable it for the login
    service startup:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: 'We may need to disable SELinux or set it to permissive to make our service
    work fine. In addition, since Monitorix serves at port 8080, we need to open that
    at the firewall, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we can start using it by using a browser. We type the following at the
    address section:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: 'Thus, we will have the following interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introducing the Linux system and network monitoring tools](img/B04674_09_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We will get to see a variety of graphs for multiple pieces of information,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introducing the Linux system and network monitoring tools](img/B04674_09_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'This was about system load average usage and the next one is about the network
    status:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introducing the Linux system and network monitoring tools](img/B04674_09_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let''s talk about some useful network monitoring tools. We will first
    talk about Netstat, which is one of the most common tools for monitoring a network''s
    incoming and outgoing traffic. It is very useful for network troubleshooting.
    It is usually installed on the system, so we only need to execute it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we will have this kind of output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introducing the Linux system and network monitoring tools](img/B04674_09_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'After this, we have IPTraf, which is a real-time network-monitoring tool. It
    gathers information about network traffic activity, such as TCP, UDP, IP, and
    ICMP statistics, and then presents them in its interface. To install it, we need
    to use YUM:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: Then we just type its name to run it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Introducing the Linux system and network monitoring tools](img/B04674_09_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, there is IfTop, which is an open source tool that reports network
    activities in real time. It is very useful for troubleshooting connections with
    outside servers, since it uses the `Pcap` library to capture incoming and outgoing
    packages on the desired network interface. To install it, we use yum again:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, to use it, we need to type the command with the desired interface to
    listen to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: '![Introducing the Linux system and network monitoring tools](img/B04674_09_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, let''s have a look at the references used throughout the chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'OpenSSH website: [http://www.openssh.com](http://www.openssh.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'SpamAssassin website: [http://spamassassin.apache.org/](http://spamassassin.apache.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Clamav website: [http://www.clamav.net/](http://www.clamav.net/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Mymap manual: [http://jeremy.zawodny.com/mysql/mytop/](http://jeremy.zawodny.com/mysql/mytop/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Samba website: [https://www.samba.org/](https://www.samba.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'NFS wiki: [http://nfs.sourceforge.net/nfs-howto/ar01s03.html](http://nfs.sourceforge.net/nfs-howto/ar01s03.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Trafshow wiki: [https://www.freshports.org/net/trafshow/](https://www.freshports.org/net/trafshow/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Monitorix home page: [http://www.monitorix.org/](http://www.monitorix.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter was a summary of topics that we believe should be mentioned to
    any system administrator willing to administrate CentOS 7\. We started by presenting
    a way to easily access multiple machines from one place. We saw how to protect
    services, and it is a kind of best practice to make sure that the server is configured
    and secured. Then we presented a way to share data across multiple servers, which
    is very useful for both the installation phase and daily usage. Finally, we covered
    how to monitor our services' activities on both the system and the network.
  prefs: []
  type: TYPE_NORMAL
- en: The job of a system administrator varies from time to time. Sometimes it gets
    easier and sometimes it gets harder, especially during a new installation. So,
    we have covered those tools that help soften the hard times and make them more
    manageable.
  prefs: []
  type: TYPE_NORMAL
- en: We believe that this book is equivalent to Mastering Red Hat or Scientific Linux,
    which are resources that are very much in demand in the field of Linux system
    administration. As system administrators and as open source users, we believe
    that mastering this field requires more than just reading the book. You need to
    explore the part that we talked about briefly on making your own scenarios of
    testing and try to make it more complex. After all, we always learn from the hard
    experiences in our careers and not from the easiest ones.
  prefs: []
  type: TYPE_NORMAL
