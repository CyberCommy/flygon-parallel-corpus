- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C# is a general-purpose, multi-paradigm programming language that combines object-oriented,
    imperative, generic, functional, declarative, and dynamic programming. Soon after
    its release, C# became one of the top choices for developers for writing a large
    variety of types of applications. Although it is not the only language targeting
    the CLI (the others include VB.NET and F#), it is the primary choice for writing
    .NET applications for desktop, web, cloud, and mobile platforms.
  prefs: []
  type: TYPE_NORMAL
- en: Over the years, the language has evolved gradually but steadily. Although initially
    it was an object-oriented programming language, new versions have opened up the
    language to new paradigms such as generic, functional, and dynamic programming.
    New language features and more concise syntax have also been added regularly.
    With its release as an open source project of the .NET Compiler Platform, also
    known as Roslyn, which is a set of compilers and code analysis APIs for C# and
    VB.NET, the language has entered a new open era with the community deeply involved
    in the development of the language.
  prefs: []
  type: TYPE_NORMAL
- en: The current version of the language is known as C# 8\. This was released in
    September 2019 for .NET Core 3.0 and requires Visual Studio 2019 16.3 or a newer
    version. C# 8 can also be used with .NET Framework, although not all features
    are available. That is because they required runtime changes, which was something
    Microsoft did not want to do due to its intent to no longer invest in .NET Framework
    (other than long-time support) and turn .NET Core into the one framework used
    to target all platforms and types of applications. This framework will be known
    simply as .NET.
  prefs: []
  type: TYPE_NORMAL
- en: 'This book is designed to help you learn the language from scratch and eventually
    master all its multi-paradigm programming aspects. We start with the very basics:
    data types, statements, and other building blocks. We then continue with object-oriented
    concepts such as classes, interfaces, inheritance, and polymorphism. We cover
    generics, functional programming and LINQ, reflection and dynamic programming,
    and more advanced topics, such as resource management, pattern matching, concurrency
    and asynchronous programming, error handling, and serialization. Toward the end
    of the book, we give special attention to the new features introduced in C# 8\.
    Last, but not least, we discuss unit testing and how you can write unit tests
    for your C# code. At the end of each chapter, we provide you with a set of questions
    to help you assess what you learned in that chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: The book contains many code snippets that are designed to help you easily understand
    and learn all the language features. All of them are available in the source code
    that accompanies the book. You will need either Visual Studio or Visual Studio
    Code to try them. Alternatively, you can use an online compiler, the primary choice
    in this case being [https://sharplab.io/](https://sharplab.io/).
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a passionate programmer and want to learn C#, this book is for you.
    If you want to start learning to program and want to do that with C# and .NET,
    you will also find the book valuable. However, we assume you have some basic knowledge
    of programming concepts, such as what a compiler is, what classes and methods
    are, and so on. On the other hand, if you are an experienced C# programmer but
    want to learn about the latest features of C# 8 or how to work with .NET Core
    and migrate from .NET Framework, this book will be handy for you, too.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B12346_01_Final_JC_ePub.xhtml#_idTextAnchor018), *Starting with
    the Building Blocks of C#*, gives an introduction to the language, its history,
    and its relationship with the Common Language Infrastructure and .NET Framework,
    as well as providing an introduction to the family of .NET frameworks used today.
    At the end, you learn about assemblies, how to create a project in Visual Studio,
    and how to write a Hello World program in C#.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B12346_02_Final_JC_ePub.xhtml#_idTextAnchor036), *Data Types
    and Operators*, walks you through the basic elements of the language, including
    the built-in data types, variables and constants, reference, and value types,
    nullable types, and array types, as well as type conversions and built-in operators.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B12346_03_Final_JC_ePub.xhtml#_idTextAnchor074), *Control Statements
    and Exceptions*, looks in depth at how to write selection statements and loops
    and briefly at working with exceptions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B12346_04_Final_JC_ePub.xhtml#_idTextAnchor083), *Understanding
    the Various User-Defined Types*, provides information about classes, fields, properties,
    methods, constructors, how to pass arguments to methods, what access modifiers
    are, and other aspects related to classes. Toward the end, you will learn about
    structures and how they compare to classes, as well as enumerations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B12346_05_Final_JC_ePub.xhtml#_idTextAnchor103), *Object-Oriented
    Programming in C#*, continues on the foundation built with the previous chapter
    and teaches you the core pillars of object-oriented programming and how you achieve
    them using C# language features such as interfaces, virtual members, method overloading,
    and others.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B12346_06_Final_JC_ePub.xhtml#_idTextAnchor121), *Generics*,
    covers all the aspects of generic programming in C# and teaches you how to write
    generic types and methods and use constraints for type parameters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B12346_07_Final_JC_ePub.xhtml#_idTextAnchor134), *Collections*,
    provides a walk-through of the generic collections from the .NET base class library
    that you typically use when writing C# programs. The chapter ends with an overview
    of the concurrent collections used in multithreading scenarios.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B12346_08_Final_JC_ePub.xhtml#_idTextAnchor154), *Advanced Topics*,
    contains a variety of more advanced features, such as delegates and events, tuples,
    extension methods, pattern matching, and regular expressions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B12346_09_Final_JC_ePub.xhtml#_idTextAnchor173), *Resource Management*,
    explains how the garbage collector works and how you should handle resources deterministically.
    Also, in this chapter, you learn how to make system or, in general, native API
    calls with Platform Invocation Services, as well as how to write unsafe code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B12346_10_Final_JC_ePub.xhtml#_idTextAnchor184), *Lambdas, LINQ,
    and Functional Programming*, provides an overview of functional programming concepts
    and details pertaining to lambda expressions in C#. You learn how to uniformly
    query various data sources using Language Integrated Query (or LINQ). At the end
    of the chapter, we cover several typical functional programming concepts: partial
    function application, currying, closures, monoids, and monads and how they work
    in C#.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B12346_11_Final_SK_ePub.xhtml#_idTextAnchor200), *Reflection
    and Dynamic Programming*, teaches you what reflection services are and how they
    can be used to write extensible applications, how to dynamically load assemblies
    and execute code, how to use attributes, and how to use the Dynamic Language Runtime
    and the dynamic type to interop with dynamic languages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B12346_12_Final_JC_ePub.xhtml#_idTextAnchor215), *Multithreading
    and Asynchronous Programming*, provides an in-depth look at threads, tasks, and
    synchronization mechanisms and uncovers the details of the async-await pattern
    for writing asynchronous programs in C#.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B12346_13_Final_JC_ePub.xhtml#_idTextAnchor238), *Files, Streams,
    and Serialization*, explains how to work with paths, files, and directories, and
    how to use streams for reading and writing data from and to a variety of storage
    options, such as files and memory. In the second part of the chapter, you will
    learn about data serialization with XML and JSON.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B12346_14_Final_JC_ePub.xhtml#_idTextAnchor253), *Error Handling*,
    builds on the concepts concerning exception handling introduced in [*Chapter 3*](B12346_03_Final_JC_ePub.xhtml#_idTextAnchor074)*,
    Control Statements and Exceptions,* and teaches you the inner workings of exceptions
    and how exception handling differs from error handling. You will learn valuable
    information about debugging and monitoring as well as best practices for working
    with exceptions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B12346_15_Final_JC_ePub.xhtml#_idTextAnchor271), *New Features
    of C# 8*, covers in detail all the new language features introduced in C# 8, including
    nullable reference types, async streams, ranges and indices, pattern matching,
    and default implementations of interface members.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 16*](B12346_16_Final_JC_ePub.xhtml#_idTextAnchor296), *C# in Action
    with .NET Core 3*, teaches you about using the .NET CLI for building .NET Core
    applications, how you can target and develop for Linux, what .NET Standard is
    and how it can help application design, how to consume NuGet packages, and how
    you can migrate .NET Framework applications to .NET Core.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 17*](B12346_17_Final_JC_ePub.xhtml#_idTextAnchor322), *Unit Testing*,
    covers unit testing, the Microsoft tools for unit testing your C# code, how to
    create unit testing projects using Visual Studio, and how to write unit tests
    and data-driven unit tests.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is a book that covers C#, from its building blocks to its most advanced
    features. This book is intended for people who want to learn C#. Therefore, we
    do not expect you to have any prior knowledge of the language. However, we do
    expect you to have some basic exposure to programming concepts, such as what a
    compiler is, the difference between compile time and runtime, the difference between
    stack and heap, and others.
  prefs: []
  type: TYPE_NORMAL
- en: All the code samples in this book have been written using C# 8 and a modern
    programming style (such as using expression-bodied members, interpolated strings,
    local functions, and so on). All these samples are available together with the
    book in projects targeting .NET Core 3.1.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table lists the software and platform requirements for running
    these samples:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Table.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In order to run the source code, you need Visual Studio 2019 16.3 or newer,
    any edition, or Visual Studio Code. Most of the samples can also be tested using
    an online compiler. Should you prefer this option, we recommend that you use [https://sharplab.io/](https://sharplab.io/).
  prefs: []
  type: TYPE_NORMAL
- en: If you are using the digital version of this book, we advise you to type the
    code yourself or access the code via the GitHub repository (link available in
    the next section). Doing so will help you avoid any potential errors related to
    the copying/pasting of code.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Support** tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Learn-C-Sharp-Programming](https://github.com/PacktPublishing/Learn-C-Sharp-Programming).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at https://github.com/PacktPublishing/. Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Code in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Code in Action videos for this book can be viewed at [https://bit.ly/2VaAls9](https://bit.ly/2VaAls9).
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: https://static.packt-cdn.com/downloads/9781789805864_ColorImages.pdf.'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "In this example, we are creating an `Employee` class
    with three fields to represent the ID, first name, and last name of an employee."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "When creating a new project, select **Console App (.NET Core)**."'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at customercare@packtpub.com'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit www.packtpub.com/support/errata,
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at copyright@packt.com with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in, and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  prefs: []
  type: TYPE_NORMAL
