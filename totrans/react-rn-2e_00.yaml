- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I never had any interest in developing mobile apps. I used to believe strongly
    that it was the web, or nothing, that there was no need for more yet more applications
    to install on devices that are already overflowing with apps. Then React Native
    happened. I was already writing React code for web applications and loving it.
    It turns out that I wasn’t the only developer that balked at the idea of maintaining
    several versions of the same app using different tooling, environments, and programming
    languages. React Native was created out of a natural desire to take what works
    well from a web development experience standpoint (React), and apply it to native
    app development. Native mobile apps offer better user experiences than web browsers.
    It turns out I was wrong, we do need mobile apps for the time being. But that’s
    okay, because React Native is a fantastic tool. This book is essentially my experience
    as a React developer for the web and as a less experienced mobile app developer.
    React Native is meant to be an easy transition for developers who already understand
    React for the Web. With this book, you’ll learn the subtleties of doing React
    development in both environments. You’ll also learn the conceptual theme of React,
    a simple rendering abstraction that can target anything. Today, it’s web browsers
    and mobile devices. Tomorrow, it could be anything.
  prefs: []
  type: TYPE_NORMAL
- en: The second edition of this book was written to address the rapidly evolving
    React project - including the state-of-the-art best practices for implementing
    React components as well as the ecosystem surrounding React. I think it's important
    for React developers to appreciate how React works and how the implementation
    of React changes to better support the people who rely on it. I've done my best
    to capture the essence of React as it is today and the direction it's moving,
    in this edition of React and React Native.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is written for any JavaScript developer—beginner or expert—who wants
    to start learning how to put both of Facebook’s UI libraries to work. No knowledge
    of React is needed, though a working knowledge of ES2017 will help you follow
    along better.
  prefs: []
  type: TYPE_NORMAL
- en: 'Part I: React'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](f59a106c-433f-455c-b465-440911d0d766.xhtml), *Why React?*, covers
    the basics of what React really is, and why you want to use it.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](f1299cab-582e-4b56-a609-0ed84eb39fa9.xhtml), *Rendering with JSX*,
    explains that JSX is the syntax used by React to render content. HTML is the most
    common output, but JSX can be used to render many things, such as native UI components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ccb77eea-0f79-469b-b427-124bc90c1267.xhtml), *Component Properties,
    State, and Context*, shows how properties are passed to components, how state
    re-renders components when it changes, and the role of context in components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](206c3137-1199-41c8-8472-252738f7600c.xhtml), *Event Handling—The
    React Way*, explains that events in React are specified in JSX. There are subtleties
    with how React processes events, and how your code should respond to them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](1e488811-5fba-4e61-a5b7-7b0a1da4ec0b.xhtml), *Crafting Reusable
    Components*, shows that components are often composed using smaller components.
    This means that you have to properly pass data and behavior to child components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](01d31b70-53c0-4d08-9bf7-93d0b513bced.xhtml), *The React Component
    Lifecycle*, explains how React components are created and destroyed all the time.
    There are several other lifecycle events that take place in between where you
    do things such as fetch data from the network.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](1a4593a0-5ce4-4b63-9c4c-0c61ad4e0e34.xhtml), *Validating Component
    Properties*, shows that React has a mechanism that allows you to validate the
    types of properties that are passed to components. This ensures that there are
    no unexpected values passed to your component.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](4389c62e-95a7-44a8-9323-671d16d1fbd4.xhtml), *Extending Components*,
    provides an introduction to the mechanisms used to extend React components. These
    include inheritance and higher-order components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](6a82e10e-6f5b-452f-80b2-3671f4ecd126.xhtml), *Handling Navigation
    with Routes*, explains that navigation is an essential part of any web application.
    React handles routes declaratively using the `react-router` package.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](a939aefb-5bf7-4758-af76-b21120a93404.xhtml), *Server-Side React
    Components*, discusses how React renders components to the DOM when rendered in
    the browser. It can also render components to strings, which is useful for rendering
    pages on the server and sending static content to the browser.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](1484668c-7625-4b3c-ba0d-4016cb6c3a46.xhtml), *Mobile-First React
    Components*, explains that mobile web applications are fundamentally different
    from web applications designed for desktop screen resolutions. The `react-bootstrap`
    package can be used to build UIs in a mobile-first fashion.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Part II: React Native'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 12](0bc71f8c-5d27-4e05-86af-5e55ef95eaef.xhtml), *Why React Native?*,
    shows that React Native is React for mobile apps. If you’ve already invested in
    React for web applications, then why not leverage the same technology to provide
    a better mobile experience?'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](4758a700-ed8b-4700-82ec-c3301be51215.xhtml), *Kickstarting React
    Native Projects*, discusses that nobody likes writing boilerplate code or setting
    up project directories. React Native has tools to automate these mundane tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](3244063c-c943-42c6-9f70-60a094b734a4.xhtml), *Building Responsive
    Layouts with Flexbox*, explains why the Flexbox layout model is popular with web
    UI layouts using CSS. React Native uses the same mechanism to layout screens.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](21cd5042-8e23-4c9d-b5d5-5e824554b242.xhtml), *Navigating Between
    Screens*, discusses the fact that while navigation is an important part of web
    applications, mobile applications also need tools to handle how a user moves from
    screen to screen.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 16](b3c9f32a-a9ad-4be5-b2c7-d8fa7c92ba4e.xhtml), *Rendering Item Lists*,
    shows that React Native has a list view component that’s perfect for rendering
    lists of items. You simply provide it with a data source, and it handles the rest.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 17](d9718f8c-d046-49db-889c-dacd1724d8ae.xhtml), *Showing Progress*,
    explains that progress bars are great for showing a determinate amount of progress.
    When you don’t know how long something will take, you use a progress indicator.
    React Native has both of these components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 18](1494bec6-0dc6-45fa-a91d-ceacdc125b0d.xhtml), *Geolocation and
    Maps*, shows that the `react-native-maps` package provides React Native with mapping
    capabilities. The Geolocation API that’s used in web applications is provided
    directly by React Native.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 19](ddc80ec3-3b9f-4478-90f0-04abfe484613.xhtml), *Collecting User
    Input*, shows that most applications need to collect input from the user. Mobile
    applications are no different, and React Native provides a variety of controls
    that are not unlike HTML form elements.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 20](996671dd-21bb-405e-8789-d088e1794ffb.xhtml), *Alerts, Notifications,
    and Confirmation,* explains that alerts are for interrupting the user to let them
    know something important has happened, notifications are unobtrusive updates,
    and confirmation is used for getting an immediate answer.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 21](7776a8b0-91d3-414c-a586-b05a6d483fa8.xhtml), *Responding to User
    Gestures*, discusses how gestures on mobile devices are something that’s difficult
    to get right in the browser. Native apps, on the other hand, provide a much better
    experience for swiping, touching, and so on. React Native handles a lot of the
    details for you.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 22](a9a626eb-b328-4c28-bb80-ef13a7a2312f.xhtml), *Controlling Image
    Display*, shows how images play a big role in most applications, either as icons,
    logos, or photographs of things. React Native has tools for loading images, scaling
    them, and placing them appropriately.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 23](d16a63a9-e5af-4e41-a7cc-48b83df504ca.xhtml), *Going Offline*,
    explains that mobile devices tend to have volatile network connectivity. Therefore,
    mobile apps need to be able to handle temporary offline conditions. For this,
    React Native has local storage APIs.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Part III: React Architecture'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 24](35d57fbb-8989-40c9-8f6c-1f9ee01bae4a.xhtml), *Handling Application
    State*, discusses how application state is important for any React application,
    web or mobile. This is why understanding libraries such as Redux and Immutable.js
    is important.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 25](98a8216c-d921-4710-a707-e19c37532dc4.xhtml), *Why Relay and GraphQL*?,
    explains that Relay and GraphQL, used together, is a novel approach to handling
    state at scale. It’s a query and mutation language, plus a library for wrapping
    React components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 26](69981831-f989-45ac-9b3c-9b11e2094489.xhtml), *Building a Relay
    React App*, shows that the real advantage of Relay and GraphQL is that your state
    schema is shared between web and native versions of your application.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Inform the reader of the things that they need to know before they start, and
    spell out what knowledge you are assuming.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Any additional installation instructions and information they need for getting
    set up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A code editor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A modern web browser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NodeJS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support) and
    register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/React-and-React-Native-Second-Edition](https://github.com/PacktPublishing/React-and-React-Native-Second-Edition). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
