- en: Chapter 7. Credit Derivatives with C++
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this last chapter, we focus on the application of C++ to the pricing of
    credit derivatives. We consider two examples: the use of the Merton model to price
    a defaultable firm''s equity plus the firm''s default probability (basic example)
    and the pricing of **Credit Default Swap** (**CDS**) (advanced example). The first
    example is based on the structural approach to credit risk, while the second is
    based on the intensity approach. We provide the full working C++ implementation
    for both the examples. A simpler C implementation (without the OO features) can
    be found in the accompanying book website.'
  prefs: []
  type: TYPE_NORMAL
- en: Basic example – bankruptcy (CR1)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The Monte Carlo simulation requires a random number generator to operate and
    therefore, the `random.cpp` file (studied in [Chapter 4](part0028_split_000.html#QMFO2-f9cfc61bea324a5db85ec5ea1673cdfd
    "Chapter 4. Equity Derivatives in C++"), *Equity Derivatives in C++*) is re-used.
  prefs: []
  type: TYPE_NORMAL
- en: We consider an example of a firm whose capital structure is composed of the
    total firm's assets at *t=0*, *V(0)=100* million EUR, and a debt composed of a
    single zero coupon bond with a face value of *D=70* million EUR. The volatility
    of the firm's assets is assumed to be 20 percent. The maturity is four years.
    The risk-free interest rate is 5 percent pa.
  prefs: []
  type: TYPE_NORMAL
- en: 'Running the C++ code snippets as shown in the following figure, with 500 steps
    and 10,000 simulations, we estimate the probability of default in the four year
    period to be 88.63 percent and the equity value to be *E(0)=43.95* million EUR:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Basic example – bankruptcy (CR1)](img/00209.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Bento Box template for firm's bankruptcy (CR1)
  prefs: []
  type: TYPE_NORMAL
- en: The upcoming code snippets implement the algorithm from the Bento Box template.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code 21 – CR1_main.cpp (Bankruptcy using Merton model)**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Code 22 – CR1_source.cpp (Bankruptcy using Merton model)**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'To compute the basic example (CR1), you need to compile and run code snippets
    21, 22, 23, 4, and 5 (which include a header and random functions); afterwards,
    you should obtain the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Basic example – bankruptcy (CR1)](img/00210.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Firm's bankruptcy (CR1) screenshot with results
  prefs: []
  type: TYPE_NORMAL
- en: Advanced example – CDS (CR2)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this second example, we consider the pricing of CDS. The details of the
    approach are shown in the following Bento Box template for the CDS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced example – CDS (CR2)](img/00211.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Bento Box template for CDS (CR2)
  prefs: []
  type: TYPE_NORMAL
- en: A CDS is a financial contract between two counterparties A and B, in which one
    party pays to the other party to buy credit protection against the possible default
    of an underlying C.
  prefs: []
  type: TYPE_NORMAL
- en: In structure, the CDS is similar to the plain vanilla IRS, as it is composed
    of an exchange of cash flows between the parties. In a typical CDS with duration
    of five years, counterparty A pays B a series of premium payments at regular intervals
    upon an agreed notional. These payments will be made as long as underlying C "survives"
    (that is, doesn't go in default).
  prefs: []
  type: TYPE_NORMAL
- en: 'Counterparty B pays A a single contingent payment at the time of default of
    underlying C. The amount paid is equal to the notional minus the recovery rate.
    In mathematical terms, it can be expressed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced example – CDS (CR2)](img/00212.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Like in an IRS, the "price" of the contract is obtained by computing the present
    value of each leg (the sum of the expected premium payments called **Premium Leg**
    (**PL**) and the sum of the expected default payment called **Default Leg** (**DL**)).
    In mathematical terms, PL and DL are expressed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced example – CDS (CR2)](img/00213.jpeg)![Advanced example – CDS (CR2)](img/00214.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'In the preceding equations, *P(T)* is the survival probability at time *t*,
    *N* is the notional, *R* is the recovery rate, and *DF(t)* is the discount factor
    at time *t*. For fair pricing, these legs must be equal and with this, we can
    determine what should be the fair value of the premium paid (also called CDS spread).
    The value of this spread, denoted by the Greek letter ![Advanced example – CDS
    (CR2)](img/00215.jpeg), is regarded as the price of the CDS contract, In mathematical
    terms, it can be expressed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced example – CDS (CR2)](img/00216.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The pricing algorithm we present in the Bento Box template for the CDS attempts
    to compute the premium from the preceding equation.
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, this calculation is deterministic and therefore no Monte Carlo
    simulation is required. The credit model we illustrate here is an example of "intensity
    models" based on the work of "Pricing Derivatives on Financial Securities Subject
    to Credit Risk".
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'In the following figure, we find the Bento Box framework applied to our CDS
    problem:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced example – CDS (CR2)](img/00211.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Bento Box template for CDS (CR2)
  prefs: []
  type: TYPE_NORMAL
- en: The upcoming code snippets implement the algorithm from the Bento Box template.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code 24 – CR2_main.cpp (CDS)**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '**Code 25 – CR2_source.cpp (CDS)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the code snippet for `CR2_source.cpp` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'To compute the advanced example (CR2), you will have to compile and run code
    snippets 24, 25, and 26; afterwards, you should obtain the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced example – CDS (CR2)](img/00217.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: CDS (CR2) screenshot with results
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have solved two pricing problems in credit derivatives.
    We have seen a basic example (using structural models) and a more advanced one
    (using intensity models). There are many possible variations and more complex
    contracts, but these two are the main families that will give you an idea of how
    to go forward in this fascinating asset class. This concludes our survey of examples
    implementing different types of financial derivatives in C++.
  prefs: []
  type: TYPE_NORMAL
