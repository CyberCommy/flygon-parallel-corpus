- en: Chapter 6. The Fun
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why gamify an application in the first place? What's the whole point of trying
    to make something more fun? Are we skirting the primary issue of manipulation?
    Should we manipulate anyone to do anything? They should do what they want to do.
    Isn't life and happiness all about "Free Will"? Maybe so, but science and a plethora
    of research suggest that how we behave and what we do is clearly more predictable
    and malleable than we might initially think.
  prefs: []
  type: TYPE_NORMAL
- en: Intrinsic versus extrinsic behavior
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The real question is, do we ever do something (target behavior) on our own accord,
    or will something or someone always need to push and prod us? Pushing and prodding
    a user to behave in accordance with our system is not sustainable over the long
    term. We need to make our target behaviors something our players will "want" to
    continue with without provocation. We do not want to continually pay them to execute
    our target behavior. We want them to act in accordance with the system, without
    us doing things and exerting an enormous amount of energy for them to do so. In
    actuality, we want them to do it on their own Free Will. We want our target behaviors
    to become something they enjoy doing.
  prefs: []
  type: TYPE_NORMAL
- en: So, what do people "like" to do? We know they like to do things that are fun.
    People do things they find enjoyable. They like to do things where there is an
    intrinsic benefit. The concept of rewards is a major focus in gamification. Some
    of the first things that come to one's mind when we think about rewards are points,
    money, achievements, and the like. Rewards in a gamified system are generally
    a good thing. We consider anything that motivates people to take our target actions
    a good thing. However, in the long term, we want to encourage the development
    of intrinsic motivation. Intrinsic motivation suggests that they will take our
    desired actions just for the sake of taking the action. The actor gets enough
    joy and happiness from taking the action, which means that he/she no longer needs
    an external reward.
  prefs: []
  type: TYPE_NORMAL
- en: For example, professional athletes generally do not play their particular sport
    just for financial compensation. They generally are not solely motivated to play
    by scoring points and winning. They play the game because they ultimately enjoy
    playing the sport. They would be playing this game, and have been doing so, for
    the majority of their lives without any type of major compensation or benefit.
    One can safely assume that winning motivates them. But even if they would lose,
    they would still continue to play.
  prefs: []
  type: TYPE_NORMAL
- en: We need to build mechanisms into our system that will increase a player's level
    of intrinsic motivation over time. That's the purpose of fun.
  prefs: []
  type: TYPE_NORMAL
- en: We need to make it fun for the user so that he/she gets a sense of enjoyment.
    So whenever they want enjoyment, not necessarily points, they will participate
    in our system. Whenever they want to relax, they will participate in our system.
    Whenever they want to accomplish something and feel good about themselves, they
    will participate in our system. This is what we refer to as intrinsic motivation.
  prefs: []
  type: TYPE_NORMAL
- en: When a person decides to develop a gamified system, extrinsically motivated
    mechanics are the first ones he/she looks at. He/she implements a point system,
    a reward system, and a leader board. These are all valuable but we also must include
    the element of fun. Otherwise, players will lose interest overtime in taking actions,
    and more importantly, in "playing our game." Ultimately, the system will fail.
  prefs: []
  type: TYPE_NORMAL
- en: Our first goal is to build intrinsic motivation into our system. A player participates
    in the system because they feel the need, the joy, and the appreciation simply
    from participating. This is ideal to us using our limited resources to make them
    do so. That's where we will focus and that's why it's so important to make our
    system, at the end of the day, all about fun.
  prefs: []
  type: TYPE_NORMAL
- en: What makes "fun" fun?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, what makes fun… fun? That's a very important question. If we don't know
    what fun is, how can we build it into our system? We need to understand that fun
    for one person is not fun for another person.
  prefs: []
  type: TYPE_NORMAL
- en: We need to define fun in the context of the person we are referring to. Fun
    is a different thing for different people. It depends on where they are in their
    lives. It depends on what is currently most important to them. We can, however,
    outline general ideas of what fun is. More importantly, we can capture the essence
    of those ideas. We then simply need to implement them where we can.
  prefs: []
  type: TYPE_NORMAL
- en: When we do things that force us to get outside of ourselves, we usually experience
    fun. When we stretch ourselves and go for it in an attempt to accomplish something,
    we experience a sense of joy. At the heart of this idea is accomplishment. Accomplishment
    is fun.
  prefs: []
  type: TYPE_NORMAL
- en: Many people find breaking their normal routine fun. When we escape our normal
    routine and surroundings, we generally find it enjoyable. An element of surprise
    and experiencing the unexpected tends to have an element of fun. Surprise and
    the unexpected is fun.
  prefs: []
  type: TYPE_NORMAL
- en: According to Bartle's Player Theory, adventure and exploration move many people.
    He refers to them as explorers. These are people who find enjoyment in getting
    out and having that sense of adventure.
  prefs: []
  type: TYPE_NORMAL
- en: Doing things with other people is fun. Interaction with others motivates socializers
    in a game environment. Any activity that has a social component is considered
    as fun.
  prefs: []
  type: TYPE_NORMAL
- en: Action is fun. It is very difficult to have fun and be passive. Engagement,
    interaction, and exchange tend to inspire a level of fun.
  prefs: []
  type: TYPE_NORMAL
- en: Many people enjoy expressing themselves. Emotional expression is fun. Emotional
    expression is different for different people. The idea that I am able to share
    something that's unique about me through this activity makes it fun. We find fun
    in taking an action and expressing something unique and special at an emotional
    level.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fun is definitely not a monolithic, one-size-fits-all concept. We can identify
    some of the components or things that make an activity fun and use them. Here
    are a few:'
  prefs: []
  type: TYPE_NORMAL
- en: Engagement
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social Interaction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adventure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Surprise
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uncertainty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Challenge
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are all things that add to fun. We can take these elements and build structures
    into our system, making the systems more fun.
  prefs: []
  type: TYPE_NORMAL
- en: The player's experience
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We need a process and method to outline this enjoyable experience that we create
    for players. *Scott Rigby* and *Richard Ryan* (2006) drafted a paper sharing their
    research on *The Player Experience*. They called it **The Player Experience of
    Needs Satisfaction** (**PENS**) model. They evaluated and proved that there needed
    to be at least three things in the player''s experience to make that experience
    more enjoyable: **competency**, **autonomy**, and **relatedness**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The player''s experience](graphics/8119_6_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Competency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Players need to feel like they are competent enough to play the game. However,
    they also expect some level of challenge throughout the game. The challenge and
    the player's level of competence should ideally match. As a player becomes more
    skilled (more competent) at playing the game, the game becomes more difficult.
    The author, *Mihaly Csikszentmihalyi*, refers to this as "flow." It is that ideal
    state where a task is not so difficult that a person gives up and quits. But it's
    not so easy that they get bored.
  prefs: []
  type: TYPE_NORMAL
- en: The goal is to keep the game's difficulty right in line with the player's ability
    to complete the task. This leads to the player reaching a level of satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: Autonomy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another component of the PENS model is autonomy. Although the players are inside
    a construct of game mechanics, they need to feel like they are always controlling
    the situation. They can decide what to do next. They can use strategy. They are
    free to take any action that they want.
  prefs: []
  type: TYPE_NORMAL
- en: Relatedness
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Lastly, the PENS model calls for relatedness and social interaction. Players
    need to feel a connection with other players. In the game *World of Warcraft*,
    for example, players belong to guilds. We also need to create this social interaction.
  prefs: []
  type: TYPE_NORMAL
- en: '*Daniel Pink*, the author of *Drive: The Surprising Truth about What Motivates
    Us*, supports the PENS model in his writing. In the book, Pink suggests that mastery
    motivates us. This is equivalent to competence. He also suggests that we long
    for autonomy in what we are doing. He wraps up by suggesting that we need to feel
    a sense of purpose from the actions we take. We like knowing that what we are
    doing has some relevance in the world.'
  prefs: []
  type: TYPE_NORMAL
- en: Although relatedness is not exactly the purpose, and comes from a different
    perspective, the two ideas overlap. Maybe relatedness is what brings purpose to
    an activity. When a user sees that what they're doing impacts more than just themselves,
    it impacts the social whole, then it becomes more enjoyable.
  prefs: []
  type: TYPE_NORMAL
- en: These are some things we need to build into our player's experience, making
    our gamified system more fun and more enjoyable for players. There are many ways
    in which we measure the success and/or failure of our system.
  prefs: []
  type: TYPE_NORMAL
- en: The Scoring module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First, we will take a look at the Scoring module. It consists of JavaScript
    with an Ajax call to actually get the score data from the database. Here is the
    code for the JavaScript method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: AjaxHandler.php
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the following code, the Ajax method calls `ajax_handler.php`, whose job
    is to accept the Ajax call and call the correct PHP function based on the action
    parameter passed to it by the Ajax call:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The ajax_handler, in this case, calls the `GetMyVuPoints` PHP function, which
    is in the vupoint.php file. It accepts a player's username or e-mail address and
    returns the players' points from the database.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The Achievement module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Achievement module has the same flow as other modules. We make another
    Ajax call to ajax_handler.php to build this module. Notice that in the callback
    function from the Ajax call, a data is written in **JavaScript Object Notation**
    (**JSON**). We need to loop this JSON object to actually access the achievement
    data. We also need to dynamically build an HTML table that will hold the achievement
    images. Finally, we append the HTML that we have constructed to the MyAchievements
    div:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The Leaderboard module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The flow is the same with the Leaderboard module as with the Achievements module.
    Here is the JavaScript:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is the associated PHP function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Players currently online
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's build out the code to get and show a list of players that are currently
    online. Here we write a JavaScript function that calls our PHP module to return
    a list of players that are logged in.
  prefs: []
  type: TYPE_NORMAL
- en: 'The JavaScript function is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The PHP code is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is a screenshot of what we should see at this point:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Players currently online](graphics/8119_6_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter we have covered the core reason for gamifying a process in the
    first place. We want a desired behavior. We can't force anyone to do anything.
    We can however, make behaving in a certain way more fun. Fun and pleasure is a
    strong motivator and takes advantage of our basic human need to attract pleasure
    and avoid pain. After we have put the code in place, we have the functionality
    to implement the gamified e-learning system that we had outlined in earlier chapters.
  prefs: []
  type: TYPE_NORMAL
