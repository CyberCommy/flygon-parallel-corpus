- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Node.js is a massively popular JavaScript library that lets you use JavaScript
    to easily program scalable network applications and web services. People approaching
    Node.js for the first time are often attracted by its efficiency, scalability,
    and the fact that it's based on JavaScript, the language of the Web. This means
    that developers can use the same language to write backend code. Also, it's increasingly
    being looked upon as a modern replacement for PHP in web development, which relies
    on fast-paced data exchange. This growing community and the large amount of available
    modules makes Node.js one of the most attractive development environments.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Setting Up Your Workspace"), *Setting Up
    Your Workspace*, explains how to set up your work environment to develop cross-platform
    applications by using the Ionic framework as the frontend tool, Node.js for the
    backend, and the integrated development environment, Atom.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Configuring Persistence with MongoDB"), *Configuring
    Persistence with MongoDB*, goes through the necessary configurations that are
    needed to make an instance of MongoDB work with Node.js. You will learn how to
    set up security and a database, install the relevant MongoDB driver for Node.js,
    and communicate with the database from a Node.js instance.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Creating an API"), *Creating an API*, looks
    at how we can set up a uniform interface for sending and receiving data and basic
    functionality on the Node.js server by building an **API** (**Application Programming
    Interface**) that exposes it. We will cover the basic REST topics and show you
    how to configure routes to perform simple read/write operations on our data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Securing Your Backend"), *Securing Your Backend*,
    shows that this type of remedies can be achieved by building a basic security
    mechanism in order to control user access. Specifically, we will deal with token-based
    authentication and show you how this makes it easy to limit access to your backend.
    In doing so, we will introduce the concept of roles and how they figure in our
    authentication scheme.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Real-Time Data and WebSockets"), *Real-Time
    Data and WebSockets*, shows you how to enable real-time data communication using
    WebSockets. This will allow your server to directly communicate with connected
    clients without having to perform polling on the client side.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Introducing Ionic"), *Introducing Ionic*,
    covers all the basic essentials that are needed to set up a working environment,
    which is required to efficiently create and share Ionic apps.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Building User Interfaces"), *Building User
    Interfaces*, takes the template project that we created in the past few chapters
    and modifies it to something closer to what we envisioned by altering the appearance
    of the user interface. In addition to this, we will also start experimenting with
    the Ionic project code to deeply understand what the project is made up of.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Making Our App Interactive"), *Making Our
    App Interactive*, covers a lot of ground, going into the details of AngularJS
    and learning more about the interaction of the model, view, and controller. We
    will also see how to use the Cordova plugins and ngCordova in order to access
    native features. Finally, we will also have a look at how to create services and
    use them in order to serve data to the users.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Accessing Native Phone Features"), *Accessing
    Native Phone Features*, discusses how to directly work with the Google Maps API
    in order to render and work with maps.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Working with APIs"), *Working with APIs*,
    explores how to access external APIs in order to send and retrieve data. You will
    learn how to encode/decode data to/from JSON in our app in order to provide a
    standard interface for processing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.html "Chapter 11. Working with Security"), *Working with
    Security*, introduces the concept of security in mobile apps in the context of
    authenticating and authorizing local users. We will have a look at how to implement
    a common login feature, which contacts a remote server (run by Node.js, of course!)
    in order to verify that a given pair of user credentials is correct. We then use
    this information in order to grant the user access to the rest of the application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.html "Chapter 12. Working with Real-Time Data"), *Working
    with Real-Time Data*, covers how to set up WebSocket communication through the
    mobile app in order to subscribe to dynamic notifications from a server. We will
    elaborate on how this helps us develop truly dynamic applications, such as chat
    apps. This chapter will further introduce the concept of push notifications, which
    will allow our app to get updates from a server on a dynamic basis.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](ch13.html "Chapter 13. Building an Advanced Chat App"), *Building
    an Advanced Chat App*, expands this mobile app and makes it more advanced by adding
    the features of chat rooms and notifications. In doing so, we will demonstrate
    how the concept of namespacing works on `socket.io`, which is one of the most
    important aspects of this library.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](ch14.html "Chapter 14. Creating an E-Commerce Application Using
    the Ionic Framework"), *Creating an E-Commerce Application Using the Ionic Framework*,
    brings together the knowledge that you have accumulated from this book and implements
    it in an easy-to-use Ionic framework that can be used in your very own projects.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You''ll need the following software:'
  prefs: []
  type: TYPE_NORMAL
- en: Android Studio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android Software Development Kit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Ionic framework
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MongoDB
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Atom
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: XCode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for web developers of all levels of expertise who want
    to deep dive into cross-platform mobile application development without going
    through the pain of understanding the languages and native frameworks that form
    an integral part of developing for different mobile platforms.
  prefs: []
  type: TYPE_NORMAL
- en: This book is also for developers who want to capitalize on the Mobile First
    strategy and who are going to use JavaScript for their complete stack.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Conclude this process by clicking on **Create Column**, and we are done!".'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
