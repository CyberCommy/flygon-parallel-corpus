- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: PHP 8 represents the culmination of the PHP core development team's work to
    maximize efficiency in the core language. Your application code will immediately
    see a boost in speed as well as having a smaller memory footprint just by migrating
    to PHP 8\. Further, in PHP 8, developers notice that a tremendous effort has gone
    into normalizing syntax and language usage. In short, programming in PHP 8 is
    a joy to developers who appreciate adherence to good coding practices.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, this inevitably leads to the question: where does the PHP language
    go from here? PHP 8 provides the answer to this question as well, in the form
    of the Just-In-Time compiler and support for fibers. The latter forms the foundation
    of asynchronous programming and has been announced for PHP 8.1\. PHP 8 gives you
    a glimpse of the future of the language, and that future is looking extremely
    bright!'
  prefs: []
  type: TYPE_NORMAL
- en: If you put all this together, it becomes clear that understanding and mastering
    the new features and stricter coding practices implemented in PHP 8 is vital to
    those who wish to pursue a serious career as a PHP developer. This book is exactly
    the tool you need to get up and running with PHP 8 quickly. Not only do we cover
    new features, but we also show you how to avoid traps that could lead to code
    failure after a PHP 8 migration. In addition, we give you a glimpse into the future
    of PHP via thorough coverage of the JIT compiler and PHP asynchronous programming.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for PHP developers at all levels who have experience in PHP 5 or
    above. If you're just getting started with PHP, you'll find the code examples
    useful for learning to use the language more effectively. Developers who have
    worked for a few months on one or more PHP projects will be able to apply the
    tips and techniques to the code at hand, while those with many years of PHP experience
    are sure to appreciate the concise coverage of new PHP 8 features.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B16992_01_Final_JC_ePub.xhtml#_idTextAnchor013), *Introducing
    New PHP 8 OOP Features*, introduces you to new PHP 8 features specific to Object-Oriented
    Programming (OOP). The chapter features plenty of short code examples that clearly
    illustrate the new features and concepts. This chapter is critical in helping
    you quickly take advantage of the power of PHP 8 and adapt the code examples to
    your own practice.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B16992_02_Final_JC_ePub.xhtml#_idTextAnchor039), *Learning about
    PHP 8''s Functional Additions*, covers important additions and enhancements introduced
    to PHP 8 at the procedural level. It includes plenty of code examples that show
    new PHP 8 features and techniques to facilitate procedural programming. This chapter
    teaches you how to write faster and cleaner application code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B16992_03_Final_JC_ePub.xhtml#_idTextAnchor065), *Taking Advantage
    of Error-Handling Enhancements*, explores one of the key improvements in PHP 8,
    its advanced error handling capabilities. In this chapter, you learn which Notices
    have been upgraded to Warnings, as well as which Warnings have now been promoted
    to Errors. This chapter will give you an excellent understanding of the background
    and intent of security enhancements allowing you to better control the use of
    your code. In addition, it''s critical to be aware of error conditions that formerly
    only generated Warnings, but now generate Errors, so that you take measures to
    prevent your applications from failing following an upgrade to PHP 8.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B16992_04_Final_JC_ePub.xhtml#_idTextAnchor085), *Making Direct
    C-Language Calls*, helps you to learn what the Foreign Function Interface (FFI)
    is all about, what it''s good for, and how to use it. The information in this
    chapter is important for developers interested in rapid custom prototyping using
    direct C language calls. This chapter shows you how to incorporate C language
    structures and functions directly into your code, opening the doors to an entire
    world of functionality hitherto unavailable to PHP.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B16992_05_Final_JC_ePub.xhtml#_idTextAnchor104), *Discovering
    Potential OOP Backward-Compatibility Breaks*, introduces you to new PHP 8 features
    specific to OOP. The chapter features plenty of short code examples that clearly
    illustrate the new features and concepts. This chapter is critical in helping
    you quickly take advantage of the power of PHP 8 by adapting the code examples
    into your own practice. In addition, this chapter highlights situations where
    object-oriented code might break after a PHP 8 migration.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B16992_06_Final_JC_ePub.xhtml#_idTextAnchor129), *Understanding
    PHP 8 Functional Differences*, covers potential backwards d-compatibility breaks
    at the PHP 8 command or functional level. This chapter presents important information
    that highlights potential pitfalls when migrating existing code to PHP 8\. The
    information presented in this chapter enables you to produce reliable PHP code.
    After working through the concepts in this chapter, you''ll be in a better position
    to write code that produces precise results and avoids inconsistencies.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B16992_07_Final_JC_ePub.xhtml#_idTextAnchor162), *Avoiding Traps
    When Using PHP 8 Extensions*, takes you through the major changes to extensions
    that have been made and how to avoid traps when updating an existing application
    to PHP 8\. Once you finish reviewing the sample code and topics presented, you''ll
    be able to prepare any existing PHP code for migration to PHP 8\. In addition
    to learning about the changes to the various extensions, you''ll also gain deep
    insight into their operation. This will allow you to make informed decisions when
    using extensions in PHP 8.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B16992_08_Final_JC_ePub.xhtml#_idTextAnchor195), *Learning about
    PHP 8''s Deprecated or Removed Functionality*, walks you through functionality
    that has been deprecated or removed in PHP 8\. After you have read the material
    in this chapter and followed the example application code, you will be able to
    detect and rewrite code that has been deprecated. You will also learn how to develop
    workarounds for functionality that has been removed as well as how to refactor
    code that uses removed functionality involving extensions. Another important skill
    you will learn in this chapter is how to improve application security by rewriting
    code depending on functions that have been entirely removed in PHP 8.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B16992_09_Final_JC_ePub.xhtml#_idTextAnchor217), *Mastering PHP
    8 Best Practices*, introduces you to best practices now enforced in PHP 8\. It
    covers a number of significant method signature changes and how their new usage
    continues the general PHP trend of helping you to produce better code. You will
    also learn about changes in the use of private methods, interfaces, traits, and
    anonymous classes, and how namespaces are now parsed. Mastering the best practices
    covered in this chapter will not only move you toward writing better code but
    will help you avoid the potential code breaks that might arise if you fail to
    grasp these new practices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B16992_10_Final_JC_ePub.xhtml#_idTextAnchor239), *Improving
    Performance*, introduces you to a number of new PHP 8 features that have a positive
    effect on performance, with a special focus on the new Just-In-Time compiler.
    This chapter also includes thorough coverage of weak references whose proper use
    results in applications that use far less memory. By carefully reviewing the material
    covered in this chapter and by studying the code examples, you will be able to
    write faster and more efficient code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B16992_11_Final_JC_ePub.xhtml#_idTextAnchor263), *Migrating
    Existing PHP Apps to PHP 8*, introduces a set of classes that form the basis of
    a PHP 8 backward-compatible break scanner. Throughout the book, you are shown
    potential code breaks that might follow a PHP 8 update. In addition, you will
    learn about the recommended process for migrating an existing customer PHP application
    to PHP 8\. This chapter will leave you much better equipped to handle a PHP 8
    migration, giving you the ability to perform PHP 8 migrations with greater confidence
    and a minimum number of problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B16992_12_Final__JC_ePub.xhtml#_idTextAnchor289), *Creating
    PHP 8 Applications Using Asynchronous Programming*, explains the difference between
    the traditional synchronous and asynchronous programming models. In recent years,
    an exciting new technology has taken the PHP community by storm: asynchronous
    programming, also known as PHP async. In addition, popular PHP async extensions
    and frameworks, including the Swoole extension and ReactPHP are covered, with
    plenty of examples to get you started. By the time you are done working through
    this chapter, you will be in a position to improve the performance of your applications,
    making them anywhere from 5 times up to a staggering 40 times faster!'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To get the most out of this book, you must have a basic understanding of PHP
    syntax, variables, control structures (for example, `if {} else {}`), looping
    structures (for example, `for () {}`), arrays, and functions. You must also have
    a basic idea of PHP OOP: classes, inheritance, and namespaces.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have not received formal PHP training, or are unsure that you have the
    necessary knowledge, please review these two sections of the online PHP reference
    manual:'
  prefs: []
  type: TYPE_NORMAL
- en: 'PHP language reference:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.php.net/manual/en/langref.php](https://www.php.net/manual/en/langref.php)'
  prefs: []
  type: TYPE_NORMAL
- en: 'PHP OOP:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.php.net/manual/en/language.oop5.php](https://www.php.net/manual/en/language.oop5.php)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a summary of the software covered in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image/B16992_Preface_Table1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you are using the digital version of this book, we advise you to type the
    code yourself or access the code from the book's GitHub repository (a link is
    available in the next section). Doing so will help you avoid any potential errors
    related to the copying and pasting of code.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/PHP-8-Programming-Tips-Tricks-and-Best-Practices](https://github.com/PacktPublishing/PHP-8-Programming-Tips-Tricks-and-Best-Practices).
    If there's an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781801071871_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781801071871_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "This chapter also taught you how the new `Attribute`
    class can be used as an eventual replacement for PHP DocBlocks."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
