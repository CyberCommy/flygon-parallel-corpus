- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is based on the modern way of developing a serverless Python-based
    web or microservices. Being serverless involves a serverless infrastructure provided
    by the cloud service provider. This book shows how to use Amazon Web Services
    to implement the serverless infrastructure. Also, it covers the deployment process
    using Zappa. Zappa eliminates manual intervention, gives you an automated way
    to proceed deployment, and helps you maintain multiple deployment stages.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for beginner to experienced Python developers who want to understand
    the way to develop Python web services or microservices on the serverless infrastructure.
    Experienced Python developers can enhance their skills by learning about the serverless
    technology and understanding serverless deployment.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0021.html#K0RQ0-8241a43bed654018b51365a570bcef1d), *Amazon
    Web Services for Serverless*, covers understanding the basics of AWS Lambda and
    API Gateway services. Also, the manual process of creating a serverless service
    by interacting with the AWS console and CLI tool is covered.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0047.html#1CQAE0-8241a43bed654018b51365a570bcef1d), *Getting
    Started with Zappa*, explains the concept of the Zappa tool and elaborates the
    benefits of using Zappa over the manual process of AWS services.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0071.html#23MNU0-8241a43bed654018b51365a570bcef1d), *Building
    a Flask Application with Zappa*, explores basic Flask application development
    and deployment using Zappa as a serverless application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0105.html#344B20-8241a43bed654018b51365a570bcef1d), *Building
    a Flask-Based REST API with Zappa*, presents the Flask-based RESTful API development
    and deployment process with Zappa.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0128.html#3Q2800-8241a43bed654018b51365a570bcef1d), *Building
    a Django Application with Zappa*, discusses Django core application development
    and deploying the application as a serverless over AWS Lambda using Zappa.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0151.html#4G04U0-8241a43bed654018b51365a570bcef1d), *Building
    a Django REST API with Zappa*, focuses on RESTful API implementation using the
    Django REST framework and the deployment process using Zappa.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0175.html#56SIE0-8241a43bed654018b51365a570bcef1d), *Building
    a Falcon Application with Zappa*, takes you through developing a RESTful API as
    a microservice using the Falcon framework and the deployment process using Zappa.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0203.html#61J260-8241a43bed654018b51365a570bcef1d), *Custom
    Domain with SSL*, explains how to configure a custom domain with Zappa and also
    covers SSL generation using AWS.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0219.html#6GRB60-8241a43bed654018b51365a570bcef1d), *Asynchronous
    Task Execution on AWS Lambda*, showcases the implementation of asynchronous operations
    for the time-consuming task of using Zappa.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](part0245.html#79KPQ0-8241a43bed654018b51365a570bcef1d), *Advanced
    Zappa Settings*, familiarizes you with the additional settings of the Zappa tool
    to enhance the application deployment process.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](part0256.html#7K4G00-8241a43bed654018b51365a570bcef1d), *Securing
    Serverless Applications with Zappa*, outlines the security aspect of a serverless
    application over AWS Lambda using Zappa.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](part0280.html#8B0TG0-8241a43bed654018b51365a570bcef1d), *Zappa
    with Docker*, presents application development with AWS Lambda context environment
    using Docker containerization.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before starting, there are some prerequisites that readers require. Readers
    should have the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Good understanding of the virtual environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding of Python package installation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Knowledge of traditional deployment using Apache or NGINX
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A basic knowledge of web services or microservices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Building-Serverless-Python-Web-Services-with-Zappa](https://github.com/PacktPublishing/Building-Serverless-Python-Web-Services-with-Zappa). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalogue of books and videos
    available at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the colour images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has colour images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/BuildingServerlessPythonWebServiceswithZappa_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/BuildingServerlessPythonWebServiceswithZappa_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in the text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "Zappa deployment requires the `zappa_settings.json` file,
    which generates the `zappa init` command."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialogue boxes appear in the text like this. Here
    is an example: "Click on the Create a function button."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
