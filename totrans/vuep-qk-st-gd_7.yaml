- en: Doing More with VuePress!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we learned how to set things up in VuePress and build
    a site using it. We are also aware of how to format our content in Markdown, and
    the ways in which we can customize the VuePress theme.
  prefs: []
  type: TYPE_NORMAL
- en: By and large, assuming you have followed the contents of the previous chapter,
    you should now be able to have a good deal of command over VuePress.
  prefs: []
  type: TYPE_NORMAL
- en: But with all that said and done, one key aspect of web development still remains.
    Nowadays, more and more people are turning toward the internet, and English is
    no longer the only language spoken on the web. So, naturally, this particular
    key aspect deals with internationalization of your website.
  prefs: []
  type: TYPE_NORMAL
- en: In VuePress, internationalization is not rocket science. In fact, it is fairly
    easy to add support for different locales and languages to your website content—so
    much so that it can be done within minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, you would still need to enter the correct content in the languages
    that you wish to add. If you are thinking of automatic translation, then you're
    mistaken—internationalization does not imply that content is translated of its
    own accord.
  prefs: []
  type: TYPE_NORMAL
- en: So, how should you go about adding new languages to VuePress? This chapter will
    explain it all.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will learn the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Internationalization basics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Internationalization for VuePress
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyzing the future growth of VuePress as a piece of software
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'VuePress: internationalization and doing more with it'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: But beyond that, what else should you know about VuePress? Well, bear in mind
    that it is under active development and is not as old as many other content management
    systems out there.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, we will also be devoting a good part of this chapter later on to discuss
    what the future holds for VuePress, and, now that you have learned how to use
    it, what you should consider using it for and when.
  prefs: []
  type: TYPE_NORMAL
- en: For now, let's start with internationalization.
  prefs: []
  type: TYPE_NORMAL
- en: What is internationalization?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before going any further, we first need to spend a moment to understand what
    is meant by internationalization.
  prefs: []
  type: TYPE_NORMAL
- en: At the very onset, it should be emphatically repeated that internationalization
    does not actually cover the machine-based translation of content.
  prefs: []
  type: TYPE_NORMAL
- en: Instead, it refers to the translation-enabling of content.
  prefs: []
  type: TYPE_NORMAL
- en: 'Internationalization, in itself, refers to the process by which support is
    added to software and products so that they can be easily be adapted and translated
    later into other languages. As a result, internationalization involves proper
    planning and strategy, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Comprehending the manner in which different languages are spoken and written
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the cultural aspects of multiple languages, as well as their differences
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both of these points are very important. For example, several languages, such
    as Arabic, are written from right to left, and not the other way round. Similarly,
    several other languages, such as Tamil and Hindi, have very complex scripts of
    their own that may seem daunting to an English speaker. Further, many languages,
    such as Japanese and Chinese, often contain characters that need special symbols
    and keyboard layouts.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, it is safe to say that internationalization is the manner and process
    by which content can be made ready for translation to local languages of the users.
    This very process of actually adapting content to suit the needs of various local
    languages and regions is called localization.
  prefs: []
  type: TYPE_NORMAL
- en: '**Internationalization** is also abbreviated as **i18n**, or **i-18-n**, which
    implies **i-eighteen-n**; that is, the eighteen letters from I to N.'
  prefs: []
  type: TYPE_NORMAL
- en: In terms of software, often the biggest concern is that it should properly be
    ensured that characters of languages that require a single piece of code (such
    as English) are easily convertible into corresponding characters of languages
    that require more than one piece of character code (say, Chinese).
  prefs: []
  type: TYPE_NORMAL
- en: Once this condition, and certain other minor ones, are met, we can safely say
    that the given piece of software supports internationalization or is localization-ready.
  prefs: []
  type: TYPE_NORMAL
- en: Internationalization in VuePress
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VuePress comes with support for internationalization by default. This means
    you can easily add locale settings for the languages of your choice, and then
    localize your site's content in the required languages. Thereafter, VuePress will
    automatically take care of mundane tasks, such as proper content structuring,
    menu switcher for other languages, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'In VuePress, internationalization itself is implemented at two levels:'
  prefs: []
  type: TYPE_NORMAL
- en: Config at the site level
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Config at the theme level
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will be covering both. For the sake of explanation, we will be using any
    second language in our code, such as French. However, in order to actually localize
    your site in a given language, you will need to enter details related to the concerned
    language properly.
  prefs: []
  type: TYPE_NORMAL
- en: i18n config in VuePress
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's first start with the theme level i18n config.
  prefs: []
  type: TYPE_NORMAL
- en: i18n config for the default theme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the default VuePress theme, there is native support for internationalization.
    This is made possible with the help of the `themeConfig.locales` option.
  prefs: []
  type: TYPE_NORMAL
- en: Each locale that you add should, ideally, have its own nav and sidebar options.
    Sidebar and navbar options have been discussed in [Chapter 6](905d5d93-1344-4d8c-aa47-5969daa6609f.xhtml), *Theme
    Development in VuePress*, already. Furthermore, you should also specify site-specific
    metadata and other fields for each locale separately.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at the following piece of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: What does the preceding code do?
  prefs: []
  type: TYPE_NORMAL
- en: Well, it sets up our theme for multiple locales—English, French, and Spanish.
  prefs: []
  type: TYPE_NORMAL
- en: It adds a drop-down in the menu for language selection. Then, it adds corresponding
    text for entries for GitHub, as well as Algolia Search and Service Worker Popup
    UI in different languages.
  prefs: []
  type: TYPE_NORMAL
- en: As a result, when the user is on the English version of our site, they will
    see Refresh as the button text. But when the user is on the French (located at
    `/fr` URL) version, they will see the Refresh word in French, and when the user
    is on the Spanish version of our site (located at `/es` URL), they will see Refresh
    word on the same button, but this time in Spanish, as specified by us.
  prefs: []
  type: TYPE_NORMAL
- en: Note that in the preceding code, you need to enter the actual corresponding
    values for French and Spanish locales. Refresh-text-in-spanish implies this is
    where you should specify the corresponding text, otherwise VuePress will actually
    (literally) show the phrase Refresh-text-in-spanish on the frontend.
  prefs: []
  type: TYPE_NORMAL
- en: You can repeat this process for as many languages as you like.
  prefs: []
  type: TYPE_NORMAL
- en: i18n config at the site level
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now we've seen how to add multiple language support at the theme level in VuePress.
    However, before actually doing this, we need to first implement this at the site
    level.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, before adding support for a given locale in the theme, we first need
    to specify the locale option in our `config.js` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the following site structure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/92e48ee8-b215-4d7e-b8d0-f5f3ed1588f4.png)'
  prefs: []
  type: TYPE_IMG
- en: Notice that we have create three identical copies of the same structure with
    same filenames. The `/` copy is, obviously, for the English site. But the `/fr/`
    and `/es/` copies are for the French and Spanish versions, respectively. The `fr/about.md`
    file contains the same content as the `/about.md` file, albeit in a different
    language.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, once we have structured our site the way we want to, we can then specify
    the locales option in our `config.js` file, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, we specify the title and description attributes for each locale
    separately, thereby enabling VuePress to add support for multiple locales and
    switch to the correct version of title, description, and other info, as per the
    language/locale selection.
  prefs: []
  type: TYPE_NORMAL
- en: If, by chance, a given locale does not have its own title or description values,
    VuePress will automatically fallback to the root values (in our case, English).
  prefs: []
  type: TYPE_NORMAL
- en: Once we are done implementing the preceding things on the site level, it is
    safe to implement the theme-level changes, as discussed earlier. Following that,
    VuePress will automatically add a language switcher entry to the menu at the navbar
    level.
  prefs: []
  type: TYPE_NORMAL
- en: A live example of this is the official VuePress site itself, which has been
    localized into English and Chinese languages. The language switcher is present
    in the menu, as are all the relevant tags in the required places.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/48afeec3-c6d7-4c0d-84b5-6ccac2e4b1ac.png)'
  prefs: []
  type: TYPE_IMG
- en: That covers the extent of the i18n discussion for us, as far as VuePress is
    concerned. Once you are certain you have added the right directory structure and
    also made the necessary arrangements for the theme-specific locale changes, you
    can safely take your site live.
  prefs: []
  type: TYPE_NORMAL
- en: Speaking of this, we will soon be turning to deployment in the next chapter.
    However, at this stage, it is wiser to quickly discuss the remaining tidbits concerning
    VuePress at large.
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing VuePress
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have covered almost everything related to VuePress development,
    let's focus on some practical aspects pertaining to this impressive static site
    generator.
  prefs: []
  type: TYPE_NORMAL
- en: 'The big question is: where does this knowledge of VuePress take us?'
  prefs: []
  type: TYPE_NORMAL
- en: 'Or to put it in different words: what can one expect from VuePress in near
    future, and just what does it feel like to maintain a VuePress site in the long
    run?'
  prefs: []
  type: TYPE_NORMAL
- en: What's next for VuePress?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this stage, this question is almost expected. Now that you have been introduced
    to a brand new static site generator tool, what lies ahead?
  prefs: []
  type: TYPE_NORMAL
- en: VuePress is definitely a solution that might gain a good deal of popularity
    with time. This is primarily because some of the features that it has to offer
    have long been desired by the developers’ community.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, the fact that it comes with internationalization support right
    out of the box is a big plus. You can create websites and projects on multiple
    locales with ease.
  prefs: []
  type: TYPE_NORMAL
- en: Another really impressive point about VuePress is that it comes with a fully
    functional default theme of its own. Not many static site generators can boast
    of this fact! Even more so, the default theme, as we have seen in the previous
    chapter, is not a mere starter or skeleton theme. It is a full-fledged piece of
    code with frontend display and amazing scope for customization.
  prefs: []
  type: TYPE_NORMAL
- en: Beyond that, VuePress supports Markdown editing, and owing to the sheer popularity
    of Markdown, this too is highly likely to work in favour of VuePress. In fact,
    even popular tools, such as WordPress, have added plugins for Markdown editing
    and formatting in recent times. Ghost, a common blogging platform based on Node.js,
    also supports Markdown natively.
  prefs: []
  type: TYPE_NORMAL
- en: Now that the topic of blogging has come up, it is worth mentioning that VuePress
    is unfortunately not fully ready for blogging yet. It is, indeed, possible to
    create a blog using VuePress, but such a blog will be highly lacking in terms
    of features and functionality. For example, there is hardly any support for tagging
    or categorization of blog posts, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: VuePress is still under active development. This means there are really good
    chances that blogging support might be added in near future, pretty much like
    Jekyll.
  prefs: []
  type: TYPE_NORMAL
- en: However, as of now, VuePress is more of a documentation generator software,
    and less of a blogging platform. It can create amazing static websites that can
    be served as single page apps on the fly. This very fact is the USP of VuePress!
  prefs: []
  type: TYPE_NORMAL
- en: Over the course of time, as VuePress gains more momentum, it'll also rise in
    popularity and usage. With Vue.js ever on the rise in the world of JavaScript
    frameworks, VuePress has a solid base and foundation of its own. It will not be
    surprising should VuePress continue to rise in popularity and start being counted
    among some of the top static site generators out there.
  prefs: []
  type: TYPE_NORMAL
- en: Working with VuePress in the long run
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you have learned how to set up and maintain a website with VuePress,
    should you consider using this tool for your projects in the long run?
  prefs: []
  type: TYPE_NORMAL
- en: There are very good chances you may already be using various other static site
    generators or similar such services. In that case, will turning toward VuePress
    be of extra benefit for you?
  prefs: []
  type: TYPE_NORMAL
- en: VuePress is definitely something you should seriously look at in the long run
    if you are looking to create documentation sites for your projects. Apparently,
    VuePress seems to be custom-made for the task of creating and maintaining documentation.
    It has native support for internationalization, multiple header link structure,
    a simple navigation mechanism, and the ability to integrate with GitHub or GitLab
    for easier pushing of updates.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, when you think of other such projects that are often used for the
    purpose of documentation, you will notice that VuePress has a very clear advantage
    over the others. Take up Nuxt.js for instance—while it can create impressive and
    stellar documentation sites, it is also meant for app-level development.
  prefs: []
  type: TYPE_NORMAL
- en: VuePress, on the other hand, is not the *jack of all trades and master of none*.
    You can build single page apps using it, but you can hardly pull an event or e-commerce
    registration system entirely based on VuePress. For documentation? Perfect!
  prefs: []
  type: TYPE_NORMAL
- en: Perhaps the fact that VuePress plays very well and integrates perfectly with
    Markdown is another factor to consider. If you are someone who prefers writing
    in Markdown (just like myself), VuePress might just be the static site generation
    CMS that you are looking for!
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, the only caveat at the moment is that the stripped-down VuePress
    software does not have superb blogging support. Often, it is not uncommon for
    developers to build their documentation sites along the lines of a blog, with
    comments, queries, tags, and categories of content. VuePress does none of that
    as of now. Of course, it might add such features in near future, but that is more
    of a prediction and less of a certainty.
  prefs: []
  type: TYPE_NORMAL
- en: 'When all is said and done, it is safe to assume that you can and should use
    VuePress if any of the following apply:'
  prefs: []
  type: TYPE_NORMAL
- en: You are looking for a simple static site generator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You prefer working with Vue.js
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You need something that has great internationalization abilities, comes with
    a superb default theme, and loves Markdown
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your primary purpose is to put together a streamlined series of content and
    Git integration might be of help for you
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'On the other side of the spectrum, you may not find VuePress to be worth your
    efforts if either of these apply to you:'
  prefs: []
  type: TYPE_NORMAL
- en: You need support for advanced features, such as blogging, magazine-style publishing,
    WYSIWYG editing, and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You do not prefer Markdown, nor do you feel the need to have a streamlined organization
    of content modeled like a documentation project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So there you have it!
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we have covered all that there is related to internationalization
    in VuePress. With the help of the right locale selection, you can easily localize
    your VuePress website into the languages of your choice.
  prefs: []
  type: TYPE_NORMAL
- en: Further, we have also discussed in brief what the future might hold for VuePress.
    Make no mistake about it, this particular product is being steadily developed
    and new features, as well as bug fixes, are being provided rather regularly. Of
    course, it may or may not fit within your workflow, but if you need something
    that operates on Markdown and is easy to use, VuePress is definitely worthy of
    a shot!
  prefs: []
  type: TYPE_NORMAL
- en: What lies ahead?
  prefs: []
  type: TYPE_NORMAL
- en: In the final and ultimate chapter of this book, we will be turning our attention
    toward VuePress deployment to the cloud so that we can take our website live.
    In [Chapter 4](553abde8-768a-4320-b9bd-01edcbe2c4d9.xhtml), *Creating a Site in
    VuePress*, we already put together a small VuePress site, and in the subsequent
    chapters, we learned about content editing with the help of Markdown and theme
    customization in VuePress.
  prefs: []
  type: TYPE_NORMAL
- en: Naturally, it makes sense to wind up this quick start guide by learning how
    to deploy our VuePress site. Thus, in the following chapter, we will learn about
    deployment of VuePress websites to services such as Heroku, Netlify, and many
    others!
  prefs: []
  type: TYPE_NORMAL
