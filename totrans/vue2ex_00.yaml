- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book will cover the use of Vue.js 2\. Vue can be used as both a frontend
    framework by including a JS file and also a backend framework with Node.js. The
    book was written using the frontend version of the framework—although it will
    be pointed out that it could easily be ported to using the node version if required,
    as the fundamentals of the framework remain the same in the two versions.
  prefs: []
  type: TYPE_NORMAL
- en: Vue is a framework that can be used for simple data display and creating full-blown
    web apps. This book will try and cover both ends of the spectrum while introducing
    plugins and add-ons to help with the creation of the bigger apps.
  prefs: []
  type: TYPE_NORMAL
- en: 'The use of Vue components will also be covered, including the benefits of using
    them over keeping all your data and methods contained within the main Vue instance.
    The book will also cover using the two most popular plugins for Vue: Vuex and
    Vue-Router. This book will not cover the process of styling the applications.'
  prefs: []
  type: TYPE_NORMAL
- en: Vuex is a centralized state management pattern and library for Vue. It makes
    storing, manipulating, and accessing data a lot more manageable and is great for
    use with an app that requires a lot of data to be displayed. Vue-Router is used
    to handle navigation through the app, allowing different components to load depending
    on the URL.
  prefs: []
  type: TYPE_NORMAL
- en: Starting with a JSON dataset, the first part of the book will cover Vue objects
    and how to utilize each one. This will be covered by exploring different ways
    of displaying data from a JSON dataset. We will then move on to manipulating the
    data with filters and search and creating dynamic values.
  prefs: []
  type: TYPE_NORMAL
- en: Once complete, we will look at loading your data dynamically through an API—the
    example being the Dropbox API. Once the data is loaded, the book will walk through
    navigating through the folders while updating the URL and creating a download
    link for the files. We will then load in Vuex, and look at storing the data of
    each folder moving onto pre-caching the folders, making navigating through the
    app a lot quicker.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, we will look at creating an e-commerce frontend using the skills learned
    during previous projects while introducing new ones. Firstly, the products will
    be displayed in a list; using filters and search, you will be able to click on
    a product to find out more information and to add it to your basket. When ready,
    the "customer" will be able to view their basket and update items and quantities
    and finally check out.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 1, *Getting Started with Vue.js*, shows how to get started with Vue
    by including the JavaScript file. We then move onto initializing your first Vue
    instance and looking at the data object along with examining computed functions
    and properties and finally learning about Vue methods.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 2, *Displaying, Looping, Searching, and Filtering Data*, describes how
    to display lists and more complex data with Vue using `v-if` , `v-else` and `v-for.`
    It then looks at how to filter the lists using form elements, followed by applying
    conditional CSS classes based on the data.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 3, *Optimizing Our App and Using Components to Display Data*, is about
    optimizing our Vue.js code by reducing the repetition and logically organizing
    our code. Once complete, it looks at how to create Vue components and use them
    with Vue, how to use props and slots with components, and utilizing events to
    transfer data between components.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 4, *Getting a List of Files Using the Dropbox API*, presents loading
    and querying the Dropbox API and listing the directories and files from your Dropbox
    account. It then looks at adding a load state to your app along with using Vue
    animations.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 5, *Navigating through the File Tree and Loading Folders from the URL*,
    explains how to create a component for both files and folders, and add links to
    the folder component to update the directory listing. it also covers how to add
    a download button to the file component and create a breadcrumb component so the
    user can easily navigate back up the tree and dynamically update the browser URL,
    so if a folder is bookmarked or a link is shared, the correct folder loads.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 6, *Caching the Current Folder Structure Using Vuex*, shows how to get
    started with Vuex along with storing and retrieving data from the Vuex Store.
    It then looks at how to integrate Vuex with our Dropbox app, how to cache the
    current Dropbox folder's contents, and loading data from the store if required.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 7, *Pre-Caching Other Folders and Files for Faster Navigation*, describes
    the process fof pre-caching folders, storing the parent folder's contents, and
    how to cache the download links for the files.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 8, *Introducing Vue-Router and Loading URL-Based Components*, explores
    Vue-Router initialization and its options and how to create links with Vue-Router.
    It then looks at how to make dynamic routes to update the View based on the URL.
    From there, it describes how to use props with URLs, nest and name routes,and
    navigate programmatically.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 9, *Using Vue-Router Dynamic Routes to Load Data*, is about outlining
    our components and routes, loading a product CSV file and creating an individual
    product page with images and product variations.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 10, *Building an E-Commerce Store, Browsing Products*, describes how
    to create a homepage listing page with specific products, create a category page
    with a reusable component, create an ordering mechanism, create filters dynamically,
    and allow the user to filter the products.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](part0216.html#6DVPG0-985bf4ae118d4f62b18ae64204cb251c), *Building
    an E-Commerce Store, Adding a Checkout*, is about building the functionality to
    allow the user to add and remove products to their basket, allow a user to check
    out and add an order confirmation page.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](part0235.html#703K60-985bf4ae118d4f62b18ae64204cb251c), *Using
    Vue Dev Tools and Testing Your SPA*, covers the usage of the Vue developer tools
    with the applications we''ve developed and has an overview of testing tools and
    applications.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this book, the reader will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A text editor or IDE to write code. It can be as simple as Notepad or TextEdit,
    but one with syntax highlighting such as Sublime Text, Atom, or Visual Studio
    Code is recommended.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A web browser.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Dropbox user account with files and folders.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for developers who are familiar with JavaScript but would like
    to explore the use of JavaScript MVVM frameworks for use with **Single Page Applications**
    (**SPA**s). They should be competent with HTML and familiar with CSS, so that
    they can to build and style the interfaces for the SPAs. This book takes the reader
    from initializing Vue and its basic functionality all the way to using advanced
    Vue plugins and techniques. The reader should be comfortable with JavaScript functions
    and variables and the use of ES6/ES2015 arrow functions.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "Just
    assign the names of the layers you want to activate to the `VK_INSTANCE_LAYERS`
    environment variable."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.Tips and tricks appear
    like this.
  prefs: []
  type: TYPE_NORMAL
