- en: Chapter 3. Local Filesystem Security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will discuss the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Viewing file and directory details using the ls command
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing the file permissions using the chmod command
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing access control list (ACL)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: File handling using the mv command (moving and renaming)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Install and configure a basic LDAP server on Ubuntu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Viewing file and directory details using the ls command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `ls` command is used to list files in a directory, and it is similar to
    the `dir` command in DOS. This command can be used with various parameters to
    give different results.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Since the `ls` command is a built-in command of Linux, we don't need to install
    anything else to use it.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, let''s take a look at how we can use `ls` in different ways to get a variety
    of results by just following these given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To take a look at the simple listing of files in a current directory, type `ls:`![How
    to do it…](img/B04234_03_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To get more information about the files and directories listed using the `ls`
    command, add a type identifier, as shown here:![How to do it…](img/B04234_03_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the preceding identifier is used, the executable files have an asterisk
    at the end of the name, while the directories have a slash, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: To check out details of files, such as the creation dates, owners, and permissions,
    run the command with the `l` identifier, as shown here:![How to do it…](img/B04234_03_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To find a listing of all the hidden files in the current directory, use the
    `a` identifier, as shown here:![How to do it…](img/B04234_03_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Files that begin with a period (also called **dot files**) are hidden files,
    which are not shown if the `-a` option is not used.
  prefs: []
  type: TYPE_NORMAL
- en: To print the file size in readable form, such as MB, GB, TB, and so on, instead
    of printing in terms of bytes, we can use the `-h` identifier along with `-l`
    identifier, as show here:![How to do it…](img/B04234_03_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you wish to exclude all the files and display only their subdirectories,
    then you can use the `-d` option, as follows:![How to do it…](img/B04234_03_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `ls` command when used with the `-R` option will display the contents of
    the subdirectories, too:![How to do it…](img/B04234_03_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When we use different options with the `ls` command, it gives us different results
    in terms of listing a directory. We can use any option as per our requirements.
  prefs: []
  type: TYPE_NORMAL
- en: It is recommended that you get into the habit of using `ls –lah` so that you
    can always find the listing in readable sizes.
  prefs: []
  type: TYPE_NORMAL
- en: Changing the file permissions using the chmod command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Change Mode** or **chmod** is a Linux command that is used to modify the
    access permissions of files and directories. Everybody wants to keep their data
    secure and properly organized. For this reason, Linux has a concept that associates
    owners and groups with every file and directory. These owners and groups have
    different permissions to access a particular file.'
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before we take a look at the different usages of the `chmod` command, we need
    to know the different types of users and the symbolic representation used:'
  prefs: []
  type: TYPE_NORMAL
- en: '`u` is used for user/owner'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`g` is used for a group'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`o` is used for others'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, create a file called `testfile.txt`, to try out the different commands
    of `chmod`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, we will take a look at how to use `chmod` in different ways in order to
    set different permissions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If we want to change a single permission for users (owners, groups, or others),
    we use the `+` symbol to add the permission, as shown in the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command will add the `execute` permission for the owner of the
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If we want to add multiple permissions, we can do this through a single command.
    We just need to separate different permissions using a comma, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command will add the `execute` permission for the group and other
    users of the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If we want to remove a permission, we just use the `-` symbol instead of `+`,
    as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This will remove the `execute` permission for the other users of the particular
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Suppose we wish to add or remove a permission for all the users (owner, group,
    and others); we can do this through a single command using the `a` option, which
    signifies all users, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To add the `read` permission for all the users, use this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'To remove the `read` permission for all the users, use this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, we suppose that we want to add a particular permission to all the files
    in a directory. Now, instead of running the command for all the files individually,
    we can use the `-R` option, which signifies that the given operation is recursive.
    So, to give `execute` permission for the other users and all the files in a directory,
    the command will be as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Have a look at the following screenshot showing
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To copy the permissions of a particular file to another file, we can use the
    `reference` option:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, we applying the permissions of `file1` to another file called `file2`.
    The same command can be used to apply the permissions of one directory to another
    directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When `chmod` is used with a symbolic representation, we already know the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`u` is used for a user/owner'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`g` is used for a group'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`o` is used for others'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Also, different permissions are referred to as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`r`: read'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`w`: write'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`x`: execute'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So, using the preceding commands, we change the permissions for the user, group,
    or others as per our requirements.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can set permissions with `chmod` using numbers as well, which is called
    the **Octal** representation. Using numbers, we can edit permissions for an owner,
    group, and others, all at the same time. The syntax of the command is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`chmod xxx file/directory`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Here, `xxx` refers to a three digit number ranging from `1`-`7`. The first digit
    refers to the owner's permission, while the group is represented by the second
    digit, and third digit refers to the permissions of others.
  prefs: []
  type: TYPE_NORMAL
- en: 'When we use the octal representation `r`, `w`, and `x` permissions have a specific
    number value, as mentioned here:'
  prefs: []
  type: TYPE_NORMAL
- en: '*r=4*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*w=2*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*x=1*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now, a `read` and `execute` permission is represented as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*r-x = 4+0+1 = 5*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Similarly, a `read`, `write`, and `execute` permission is calculated as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*rwx = 4+2+1 = 7*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If we wish to give only the `read` permission, it will be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*r-- = 4+0+0 = 4*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'So, now if we the run the following command, it gives the permission as calculated:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Here''s the screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/B04234_03_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Implementing access control list (ACL)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Implementing the basic file permissions using `chmod` is not enough, so we can
    use ACLs. In addition to providing permissions for the owner and group of a particular
    file, we can set permissions for any user, user group, or group of all the users
    who are not in a group of a particular user using ACLs.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before starting with the setting of permissions using ACLs, we need to confirm
    whether ACLs are enabled or not. We can do this by trying to view the ACLs for
    any file, as shown in this example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command will show an output similar to the following if the ACLs
    are enabled:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/B04234_03_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To understand more about ACLs, let''s perform these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: First, we will create three users and give them names—`user1`, `user2`, and
    `user3`:![How to do it…](img/B04234_03_25.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The preceding command is used to change the password information, which is optional.
    You can ignore it if you want to. However, in this case, you will need to log
    in with the password of a particular user as and when required.
  prefs: []
  type: TYPE_NORMAL
- en: Next, create a group with any name, such as `group1`. After creating the group,
    we will add the three users, created in the previous step, to this group:![How
    to do it…](img/B04234_03_26.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we will create the `/example` directory and change its ownership to `user1`:![How
    to do it…](img/B04234_03_27.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open a new terminal window and log in from `user1`. After this, change to the
    `/example` directory, which was created in the previous example, and inside it,
    create a directory with any name, such as `accounts`:![How to do it…](img/B04234_03_28.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, suppose `user1` wants to give `write` permission to `user2` only in the
    accounts directory. To do so, `user1` has to set `write` permission in groups.
    But doing so will give write permission to `user3` also, and we don't want this
    to happen. So, `user1` will grant write access to `user2` using ACLs, as shown
    here:![How to do it…](img/B04234_03_29.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we will check the permissions in the `accounts` directory:![How to do it…](img/B04234_03_30.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can see that in the preceding image, only `user1` and `user2` have `write`
    permission in the directory, and the others have no permissions.
  prefs: []
  type: TYPE_NORMAL
- en: Open a new terminal and log in from `user2`. Then, change to the `/example`
    directory:![How to do it…](img/B04234_03_31.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's try to make a directory in the `accounts` folder. Since `user2` has `write`
    permission, this should be successful:![How to do it…](img/B04234_03_32.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, open a new terminal and log in from `user3`. Then, change to the `/example`
    directory:![How to do it…](img/B04234_03_33.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Try to change to the `accounts` directory. Since `user3` does not have any permission
    over the directory, it will be denied:![How to do it…](img/B04234_03_34.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We might want to grant the `execute` permission for only two users from a group
    of users. If we do this by setting the permission using `chmod`, all the users
    from the group will get the execute permission. However, we do not want this.
    This kind of situation can be handled using ACLs.
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding steps, we have set permissions on a file individually for each
    user, thus avoiding the chance of allowing others to also have any permissions.
  prefs: []
  type: TYPE_NORMAL
- en: Whenever we deal with file permissions, it is better to take a backup of the
    permissions if your files are important.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we suppose that we have an `example` directory that contains a few important
    files. Then, back up the permissions using this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![There''s more…](img/B04234_03_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding command backs up the permissions and stores them in a file called
    `permissions.acl`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, if we want to restore the permissions, the command to do this is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'This shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more…](img/B04234_03_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This will restore and back up all the permissions to where they were while creating
    the backup.
  prefs: []
  type: TYPE_NORMAL
- en: File handling using the mv command (moving and renaming)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **mv** or **move** command is used when we wish to move files from one directory
    to another, and we don't want to create duplicates while doing this (something
    that happens when using the `cp` command).
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Since `mv` is a built-in command of Linux, we don't have to configure anything
    else to understand how it works.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'On every Linux system, this command is installed by default. Let''s take a
    look at how to use the `mv` command by taking different kinds of examples:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To move the `testfile1.txt` file from the current directory to any other directory,
    such as `home/practical`/`example`, the command is as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The preceding command will work only when the location of the source file is
    different from the destination.
  prefs: []
  type: TYPE_NORMAL
- en: 'When we move the file using the preceding command, the file will get deleted
    from the previous location:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works…](img/B04234_03_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To move multiple files using a single command, we can use this command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'When using the preceding command, all the files that we are moving should be
    in the same source location:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works…](img/B04234_03_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To move a directory, the command is the same as the one used to move a file.
    Suppose we have a `directory1` directory in the current directory and we want
    to move it to the `/home/practical/example` location, the command will be as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'This shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works…](img/B04234_03_39.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The `mv` command is also used to rename files and directories. Suppose that
    we have an `example_1.txt` file and wish to rename it `example_2.txt`, the command
    to do this will be as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command works when the destination location is the same as the
    source location:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works…](img/B04234_03_40.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Renaming a directory also works in the same way as renaming a file. Suppose
    we have a `test_directory_1` directory and we want to rename it `test_directory_2`,
    then the command will be as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'The execution of the preceding command can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works…](img/B04234_03_41.jpg)'
  prefs: []
  type: TYPE_IMG
- en: When we use the `mv` command to move or rename a large number of files or directories,
    we can check whether the command works successfully or not using the `-v` option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We may want to move all the text files from the current directory to the `/home/practical/example`
    folder and also check them. To do this, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'The execution of the preceding command can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works…](img/B04234_03_42.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This also works when moving or renaming a directory:![How it works…](img/B04234_03_43.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When we use the `mv` command to move a file to another location and a file
    already exists there with the same name, then the existing file gets overwritten
    when using the default command. However, if we wish to show a pop-up notification
    before overwriting the file, then we have to use the `-i` option, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'When the preceding command is run, it will notify us that a file with the same
    name already exists in the destination location. Only when we press *y* will the
    command complete; otherwise, it will get cancelled:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works…](img/B04234_03_44.jpg)'
  prefs: []
  type: TYPE_IMG
- en: When using the `mv` command to move a file to another location where a file
    with the same name already exists, using the `-u` option will update the file
    in the destination location only if the source file is newer than the destination
    file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We have two files, `file_1.txt` and `file_2.txt`, at the source location. First,
    check the details of the file using this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s check the details of the files at the destination location:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, move the files using this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '![How it works…](img/B04234_03_45.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We see that `file1.txt` and `file2.txt` have been moved to the destination location
    and have updated the earlier files because of the new time stamp of the source
    files.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose we move multiple files and in the destination location, a few files
    with the same name as the source already exist, which we don't want to update.
    In such a case, we can use the `-n` option, as shown in the following steps.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We have two files, `file_1.txt` and `file_2.txt`, at the source location. First,
    check the details of the files using this command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, move the files using this command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s check the details of the files in the destination location:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: The files with the same name have not been moved, which can be checked by observing
    their timestamp:![How it works…](img/B04234_03_46.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When moving file, if the destination location already has a file with the same
    name, then we can also create a backup of the destination file before it is overwritten
    by the new one. To do this, we use the `-b` option:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Now, let's check the details of the files in the destination location. In the
    details, we have files named `file1.txt~` and `file2.txt~`. These files are backup
    files that can be verified by the timestamp, which is older than those of `file1.txt`
    and `file2.txt`:![How it works…](img/B04234_03_47.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can learn more about the `mv` command by typing `man`, `mv`, or `mv --help`.
    This will display its manual page where we can explore more details about the
    command.
  prefs: []
  type: TYPE_NORMAL
- en: Install and configure a basic LDAP server on Ubuntu
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Lightweight Directory Access Protocol** or **LDAP** is a protocol used to
    manage access to a file and directory hierarchy from some centralized location.
    The directory is similar to a database; however, it is likely to contain more
    expressive, attribute-based information. LDAP is mainly used for centralized authentication.'
  prefs: []
  type: TYPE_NORMAL
- en: An LDAP server helps to control who has access to the read and update information
    in the directory.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To install and configure LDAP, we need to first create a Ubuntu server. The
    current version of the Ubuntu server installation media can be found at [http://www.ubuntu.com/download/server](http://www.ubuntu.com/download/server).
  prefs: []
  type: TYPE_NORMAL
- en: After downloading it, follow the steps given for the installation of the Ubuntu
    server.
  prefs: []
  type: TYPE_NORMAL
- en: We need a second system with the Desktop version of Ubuntu installed. This will
    be used to access your LDAP server through a web interface.
  prefs: []
  type: TYPE_NORMAL
- en: Once this is done, we can proceed with the installation of LDAP.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We shall now start with the process of installing and configuring LDAP on the
    Ubuntu server. The `slapd` package is required to install LDAP, and it is present
    in Ubuntu''s default repositories:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will first update the package list on the server from Ubuntu''s repositories
    to get information about the latest versions of all the packages and their dependencies:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, run the command to install the `slapd` package in order to to install
    LDAP:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output of this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_48.jpg)'
  prefs: []
  type: TYPE_IMG
- en: During the installation process, you will be prompted to enter and confirm an
    administrator password, which will be used for the administrator account of LDAP.
    Configure any password of your choice and complete the installation process:![How
    to do it…](img/B04234_03_49.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, we need to install some additional utilities that are required with LDAP:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the command can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_50.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the installation part is complete, we will start to reconfigure the LDAP
    package as per our requirements. Type this command to start the package configuration
    tool:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: This will start a series of questions regarding the configuration of the software.
    We need to choose the options one by one as per our requirements.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First, you will be asked **Omit OpenLDAP server configuration?** Select **No**
    and continue:![How to do it…](img/B04234_03_51.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, you need to enter the domain name. You can use an already existing domain
    name on the server or create anything of your choice. We have used `example.com`
    here:![How to do it…](img/B04234_03_52.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The next step will be to ask for the **Organization Name**, which can be anything
    of your choice:![How to do it…](img/B04234_03_53.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be asked to enter the administrator password for LDAP. We had already
    configured this during the installation of LDAP. Use the same password, or you
    change it to something else in this step:![How to do it…](img/B04234_03_54.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we need to select the **HDB** when prompted to choose **Database backend
    to use?** option:![How to do it…](img/B04234_03_55.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be asked whether you wish to remove the database when `slapd` is purged.
    Select **No** here:![How to do it…](img/B04234_03_56.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next step, select **Yes** to move the old database, and allow the configuration
    process to create a new database:![How to do it…](img/B04234_03_57.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, choose **No** when asked **Allow LDAPv2** **protocol?**.![How to do it…](img/B04234_03_58.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the configuration process is done, we will install the `phpldapadmin`
    package. This will help in administering LDAP through the web interface:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'The execution of this command can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_59.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the installation is completed, open the configuration file of phpldapadmin
    to configure a few values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'This is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_60.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Search for the given section, and modify it to reflect the domain name or the
    IP address of the Ubuntu server:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'This is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_61.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, edit the following entry and insert the domain name that we had given
    when we reconfigured `slapd`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Give the domain name in the form of values to the `dc` attribute in the preceding
    line. Since our domain name was `example.com`, the value in the preceding line
    will be entered as `dc=example, dc=com`.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_62.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Find the following line, and enter the domain name as the `dc` attribute again.
    For the `cn` attribute, the value will be `admin` only:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'This can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_63.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Search for the section that reads similarly to what is shown in the following
    code, and first uncomment the line and then set the value to `true`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'This can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it…](img/B04234_03_64.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After making all the changes, save and close the file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the configuration of `phpldapadmin` is complete, open a browser in the
    other system that has the desktop version of Ubuntu. In the address bar of the
    browser, type the domain name or the IP address of the server, followed by `/phpldapadmin`,
    as `domain_name_or_IP_address/phpldapadmin`:![How to do it…](img/B04234_03_65.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the `phpldapadmin` page opens, on the left-hand side we find the **login**
    link. Click on it and you will get a login prompt:![How to do it…](img/B04234_03_66.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The login screen has the correct **Login DN** details if `phpldapadmin` has
    been configured correctly so far. This is `cn=admin,dc=example,dc=com` in our
    case.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you enter the administrator password correctly, the admin interface will
    be shown:![How to do it…](img/B04234_03_67.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the admin interface on the left-hand side where you see the domain components
    (`dc=example,dc=co`), click on the *plus* sign next to it. It will show the admin
    login being used:![How to do it…](img/B04234_03_68.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Our basic LDAP server is now up and running.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We first create an Ubuntu server, and then on top of it, we install the `slapd`
    package to install LDAP. Once it is completely installed, we install the additional
    package that is required. Then, we reconfigure LDAP as per our requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Once reconfiguration is complete, we install the `phpldapadmin` package, which
    will help us in managing the LDAP server through the web interface using a browser.
  prefs: []
  type: TYPE_NORMAL
