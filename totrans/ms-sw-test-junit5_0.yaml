- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Humans are not perfect thinkers. At the time of this writing, software engineers
    are human beings. Most of them. For that reason, writing high-quality, useful
    software is a really difficult task. As we will discover in this book, software
    testing is one of the most important activities carried out by software engineers
    (that is, developers, programmers, or testers) to warranty a level of quality
    and confidence in a given piece of software.
  prefs: []
  type: TYPE_NORMAL
- en: JUnit is the most used testing framework for the Java language, and one of the
    most remarkable in software engineering in general. Nowadays, JUnit is much more
    than a unit testing framework for Java. As we will discover, it can be used to
    implement different types of tests (such as unit, integration, end-to-end, or
    acceptance tests) using different strategies (such as black-box or white-box).
  prefs: []
  type: TYPE_NORMAL
- en: On September 10, 2017, the JUnit team released JUnit 5.0.0\. This book is mainly
    focused on this new major release of JUnit. As we will discover, JUnit 5 has supposed
    a complete redesign of the JUnit framework, improving important features, such
    as modularization (JUnit 5 architecture is completely modular), composability
    (the extension model of JUnit 5 allows to integrate third-party frameworks in
    the JUnit 5 test lifecycle is an easy way), and compatibility (JUnit 5 supports
    the execution of JUnit 3 and 4 legacy tests in the brand-new JUnit Platform).
    All of it, following a modern programming model based on Java 8 and compliant
    with Java 9.
  prefs: []
  type: TYPE_NORMAL
- en: Software engineering involves a multidisciplinary body of knowledge with a strong
    impetus for the change. This book provides a comprehensive review of many different
    aspects related to software testing from, mainly following an open source point
    of view (JUnit is open source from its inception). In this book, in addition to
    JUnit, you learn how to use third-party frameworks and technologies in our development
    process, namely, Spring, Mockito, Selenium, Appium, Cucumber, Docker, Android,
    REST services, Hamcrest, Allure, Jenkins, Travis CI, Codecov, or SonarCube, among
    others.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0021.html#K0RQ0-ef8404ed083f459d860f84cc8198f8bb)*, Retrospective
    On Software Quality And Java Testing*, provides a detailed review of software
    quality and testing. The objective of this chapter is to clarify the terminology
    of this domain in an intelligible way. Moreover, this chapter provides a summary
    the history of JUnit (version 3 and 4) and also some JUnit enhancers (for example,
    libraries that can be used to extend JUnit).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0051.html#1GKCM0-ef8404ed083f459d860f84cc8198f8bb)*, What’s
    New In JUnit 5*, first introduces the motivation to create a version 5 of JUnit.
    Then, this chapter describes the main components of the JUnit 5 architecture,
    namely, Platform, Jupiter, and Vintage. Next, we discover how to run JUnit tests,
    for example, using different build tools such as Maven or Gradle. Finally, this
    chapter is the extension model of JUnit 5, which allows extending the core functionality
    of JUnit 5 by any third party.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0077.html#29DRA0-ef8404ed083f459d860f84cc8198f8bb)*, JUnit
    5 Standard Tests*, gives a detailed description of the basic features of the new
    JUnit 5 programming model. This programming model, together with the extension
    model, is called Jupiter. In this chapter, you learn about the basic test lifecycle,
    assertions, tagging and filtering tests, conditional test execution, nested and
    repeated tests, and finally how to migrate from JUnit 4.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0100.html#2VBO80-ef8404ed083f459d860f84cc8198f8bb)*, Simplifying
    Testing With Advanced JUnit Features*, provide a detailed description of the JUnit
    5 features, such as dependency injection, dynamic tests, test interfaces, test
    templates, parameterized tests, compatibility with Java 9, and planned features
    for the for JUnit 5.1 (not released yet at the time of this writing).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0122.html#3KB4K0-ef8404ed083f459d860f84cc8198f8bb)*, Integration
    Of JUnit 5 With External Frameworks*, talks about the integration of JUnit 5 with
    existing third-party software. This integration can be done in different ways.
    Typically, the Jupiter extension model should be used to interact with external
    frameworks. This is the case of Mockito (a popular mock framework), Spring (a
    Java framework aimed to created enterprise applications based on dependency injection),
    Docker (a container platform technology), or Selenium (test framework for web
    applications). In addition, developers can reuse to Jupiter test lifecycle to
    interact with other technologies, for example, Android or REST services.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0148.html#4D4J80-ef8404ed083f459d860f84cc8198f8bb)*, From Requirements
    To Test Cases*, provides a set of best practices aimed to help a software tester
    to write meaningful test cases. Considering the requirements as the basis of software
    testing, this chapter provides a comprehensive guide for coding tests avoiding
    typical mistakes (anti-patterns and code smell).'
  prefs: []
  type: TYPE_NORMAL
- en: '*[Chapter 7](part0160.html#4OIQ00-ef8404ed083f459d860f84cc8198f8bb), Testing
    Management*, is the final chapter of the book, and its objective is to guide the
    reader to understand how software testing activities are managed in a living software
    project. To that aim, this chapter reviews concepts such as **Continuous Integration**
    (**CI**), build servers (Jenkins, Travis), test reporting, or defect tracking
    systems. To conclude the book, a complete example application together with different
    types of tests (unit, integration, and end-to-end) is presented.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to understand the concepts presented in this book better, it is highly
    recommended to fork the GitHub repository, which contains the code examples presented
    in this book ([https://github.com/bonigarcia/mastering-junit5](https://github.com/bonigarcia/mastering-junit5)).
    In the author’s opinion, touching and playing with the code is essential to achieve
    a quick hands-on understanding of the JUnit 5 testing framework. As introduced
    before, the last chapter of this book provides a complete application example
    covering some of the most important topics of this book. This application (called
    *Rate my cat!*) is also available on GitHub, in the repository [https://github.com/bonigarcia/rate-my-cat](https://github.com/bonigarcia/rate-my-cat).
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to run these example, you will need JDK 8 or higher. You can download
    the Oracle JDK from its website: [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
    In addition, it is highly recommended to use an **Integrated Development Environment**
    (**IDE**) to ease the development and testing process. As we will discover in
    this book, at the time of this writing there are two IDEs fully compliant with
    JUnit 5, namely:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Eclipse 4.7+ (Oxygen): [https://eclipse.org/ide/](https://eclipse.org/ide/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'IntelliJ IDEA 2016.2+: [https://www.jetbrains.com/idea/](https://www.jetbrains.com/idea/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you prefer to run JUnit 5 from the command line, two possible build tools
    can be used:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Maven: [https://maven.apache.org/](https://maven.apache.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gradle: [https://gradle.org/](https://gradle.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is targeted for Java software engineers. For that reason, this piece
    of literature tries to speak the same language than the reader (that is, Java)
    and therefore it is driven by working code examples available on the aforementioned
    public open source GitHub repositories.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning. Code words in text, database table names, folder
    names, filenames, file extensions, path names, dummy URLs, user input, and Twitter
    handles are shown as follows: “The `@AfterAll` and `@BeforeAll` methods are executed
    only once”.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold like this: “**Compatibility**
    is the degree to which a product, system or component can exchange information
    with other products”.'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply email `feedback@packtpub.com`, and mention
    the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your email address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the SUPPORT tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Download.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/bonigarcia/mastering-junit5](https://github.com/bonigarcia/mastering-junit5).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the Errata section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `copyright@packtpub.com` with a link to the suspected pirated
    material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `questions@packtpub.com`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
