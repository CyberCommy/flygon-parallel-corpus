- en: Chapter 10. Scope for Android in VR Games
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: From a simple point of view, "virtual" and "reality" are two opposite words.
    So, a natural question is how they can mean something together. The phrase portrays
    an experience about an imaginary or real environment with a digital computing
    system.
  prefs: []
  type: TYPE_NORMAL
- en: Game environments are also imaginary or real time. However, the environments
    do not portray real time experience with touch, smell, sound, and sight. So, gaming
    has a new scope for exploration with the help of **virtual reality** (**VR**).
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s explore the concept and scope for VR in Android games through the following
    topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding VR
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VR in games
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Future of Android in VR
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Game development for VR devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to the Cardboard SDK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic guide to developing games with the Cardboard SDK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VR game development through Google VR
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android VR development best practices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Challenges with the Android VR game market
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Expanded VR gaming concepts and development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding VR
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the digital computing world, VR means a real-time environment created by
    digital computing. It means that the environment does not exist on Earth, but
    can be experienced with digital computing. However, it is not always necessary
    that VR always replicates a real environment. It has the ability to replicate
    an imaginary world or environment, which can be displayed on a computer screen
    or a VR headset (head-mounted display) device (image source: [https://lh3.ggpht.com/uv8mx61-jsrbcu-EPNw1wIi4BCXg7338alepVlr7xKbKJf7eZ9EXT2U3roA8SWx1RC8=h900-rw](https://lh3.ggpht.com/uv8mx61-jsrbcu-EPNw1wIi4BCXg7338alepVlr7xKbKJf7eZ9EXT2U3roA8SWx1RC8=h900-rw)):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding VR](img/B05069_10_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Actual screen display of the Shadowgun VR game
  prefs: []
  type: TYPE_NORMAL
- en: Evolution of VR
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The VR concept seems to represent modern technology, but the fact is that the
    VR concept was introduced around the second quarter of the twentieth century.
    In 1935, Stanley G. Weinbaum wrote a short science fiction story *Pygmalion's
    Spectacles* in which a description of a goggle is found. The goggle described
    a holographic recording of fictional experience with touch and smell. Technically,
    it defined virtual reality.
  prefs: []
  type: TYPE_NORMAL
- en: In the mid-twentieth century, the concept was improvised with sight, smell,
    touch, and sound virtualization. Eventually, in 1968, Ivan Sutherland and his
    student Bob Sproull created the world's first VR head-mounted display device.
  prefs: []
  type: TYPE_NORMAL
- en: Modern VR systems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Modern day VR devices evolved after 1990\. They were lighter, with better display
    and computing equipment. Sega developed Sega VR in 1991 for arcade games and consoles.
    This device was equipped with an LCD display, stereo headphones, and inertial
    sensors.
  prefs: []
  type: TYPE_NORMAL
- en: Later, after the year 2000, VR devices were improved in many ways. Many technical
    companies took a lot of interest in developing better VR systems. Nowadays, VR
    devices are commercially available in the market. VR is now integrated in the
    latest mobile devices with input controller systems.
  prefs: []
  type: TYPE_NORMAL
- en: There are many companies developing applications that run on VR devices for
    several purposes. Many more uses of VR technology are being introduced and improvised
    with each passing day.
  prefs: []
  type: TYPE_NORMAL
- en: Use of VR
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'VR is spreading each day in many sectors of the modern world. Let''s have a
    quick look at the fields of VR usability:'
  prefs: []
  type: TYPE_NORMAL
- en: Video games
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Education and learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Architectural design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fine arts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Urban design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Motion picture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Medical therapy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Video games
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Video games are technically composed of display, sound, and various types of
    interaction systems. VR devices have proved to have all the necessary components
    for running a game application. Gamification of VR started in the late twentieth
    century. Since then, VR has been used in the gaming industry.
  prefs: []
  type: TYPE_NORMAL
- en: A game is basically an interactive entertainment system. VR is just an environment
    to support the video gaming system. The VR system can take the user inside the
    game world to interact with the elements.
  prefs: []
  type: TYPE_NORMAL
- en: We will look into the details of the role of VR in gaming later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Education and learning
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Field trips and visualization of educational subjects have a great impact on
    the learning process. Many times, it is not possible to provide a practical lesson
    on each subject. VR helps create a virtual, practical, and visual impact on many
    educational topics. Many institutes and trainers use this method for better teaching.
  prefs: []
  type: TYPE_NORMAL
- en: Training is another major aspect of VR education. For example, VR is used to
    train pilots to fly fighter jets in developed countries. It reduces the chances
    of accidents, and trainee candidates can experience the real-time feel of flying
    a jet.
  prefs: []
  type: TYPE_NORMAL
- en: It is widely used in training medical students for various field treatments.
  prefs: []
  type: TYPE_NORMAL
- en: Architectural design
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: VR has been used widely in architectural design. It can navigate through a proposed
    design without implementing it in reality. Many architectural firms use VR to
    demonstrate a design.
  prefs: []
  type: TYPE_NORMAL
- en: There are many VR software that can build a VR application from a digital copy
    of the architectural design.
  prefs: []
  type: TYPE_NORMAL
- en: Fine arts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is a lesser known and lesser explored use of VR. However, many fine artists
    have used VR to create a navigable virtual world of art. A few art museums can
    be visited virtually through VR technology.
  prefs: []
  type: TYPE_NORMAL
- en: Urban design
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the modern world, urban design and planning use VR to simulate and validate
    a design. Urban design is also used to find loopholes and faults in a design.
    Urban design becomes easier with VR technology in the case of city/town rebuilding,
    transport planning, landscape design, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Motion pictures
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We can find some motion pictures that use the concept of VR technology. The
    motion picture *Avatar* is a great example of this. The whole concept lies within
    VR technology. The concept portrays a virtual life and activity with the help
    of technology so that the character can experience a virtual world without being
    present there in reality.
  prefs: []
  type: TYPE_NORMAL
- en: Motion pictures have gone multi-dimensional with the help of VR simulation.
    Today, spectator experience has been increased through VR.
  prefs: []
  type: TYPE_NORMAL
- en: Medical therapy
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Virtual reality therapy** (**VRT**) is quite popular in medical science,
    especially in psychological treatment. It is recorded that the success rate of
    VRT is greater than 90% worldwide.'
  prefs: []
  type: TYPE_NORMAL
- en: VRT is used mainly to treat people who fear height, flying, insects, motion,
    public talking, and so on, to create a controlled virtual environment.
  prefs: []
  type: TYPE_NORMAL
- en: VR in Android games
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before the latest release of Android N, there was no direct support for VR in
    Android. Google has realized that VR is the future of applications. Previously,
    Google released the Cardboard SDK to develop VR applications on Android. This
    SDK is still out there in the market and is being used widely.
  prefs: []
  type: TYPE_NORMAL
- en: There are already many games in the market targeting Android VR headsets. The
    number of VR headsets is increasing day by day. VR was not part of mainstream
    Android game development, but it is believed that it will become mainstream very
    soon as Android has now included a special setting for VR.
  prefs: []
  type: TYPE_NORMAL
- en: History of Android VR games
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the late 70s, the VR system started evolving at a rapid speed with better
    equipment. The result is the inclusion of VR in the mainstream Android SDK in
    2016\. The latest Android devices are VR capable. It is believed that most of
    the upcoming devices will support VR headsets.
  prefs: []
  type: TYPE_NORMAL
- en: Previously, a high-end PC or console was required to operate VR headsets. But
    now, VR headsets are being designed to support mobile devices. VR headsets are
    considered a part of Android wearable devices having a high configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Technical specifications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Technically, the VR system was lagging with a serious issue of latency. However,
    with improving technology, the latency is decreasing and the experience is getting
    better. Some famous VR headsets are Oculus Rift, HTC Vive, Samsung Gear VR, and
    so on.
  prefs: []
  type: TYPE_NORMAL
- en: Let's have a look at the VR devices that are directly compatible with Android
    devices. Previously, there was an integrated display in VR devices. However, now,
    Android devices can be directly associated with VR headsets with multiple input
    handlers. Here is a limitation that VR headsets are facing. Such VR headsets are
    only compatible with defined mobile handsets due to their own physical size and
    hardware specifications. VR headsets are designed to fit certain screen sizes.
    However, there are a few VR kits available in the market that support multiple
    screen sizes.
  prefs: []
  type: TYPE_NORMAL
- en: Current Android VR game industry
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Android VR game industry is growing big rapidly. Almost all the new handsets
    support VR applications. Many device manufacturers are providing external VR kits
    specially designed for a particular handset.
  prefs: []
  type: TYPE_NORMAL
- en: Previously, there used to be separate devices to experience VR, such as Oculus
    VR sets. However, with the help of Android VR development, most mobile devices
    are capable of running a VR application and they can be experienced with an external
    VR kit.
  prefs: []
  type: TYPE_NORMAL
- en: Future of Android in VR
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is a known fact that VR games are taking over the gaming market. Android
    is growing day by day. The latest release of Android N has a new dimension of
    VR support. This clearly shows that Android has an immense potential for VR games.
    Google is potentially working on a future VR-specific platform.
  prefs: []
  type: TYPE_NORMAL
- en: There are more devices coming to market that are VR compatible. So, there is
    a bright future for VR games on the Android platform.
  prefs: []
  type: TYPE_NORMAL
- en: Google Daydream
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Google Daydream is the next generation VR development platform. It is said to
    be the successor to Google Cardboard. The latest Android N will include support
    for Google Daydream, and it has been decided that the handsets will be announced
    as "Daydream-ready phones".
  prefs: []
  type: TYPE_NORMAL
- en: Google Daydream and Android N will take VR gaming on Android to new heights
    in the digital gaming world. The experience and the quality of the game is going
    to be better, smoother, and more realistic.
  prefs: []
  type: TYPE_NORMAL
- en: Game development for VR devices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is a large space for VR in the mobile game industry. Based on Android
    and Google VR platforms, developers are now targeting games for VR. VR gaming
    is different in nature than other games. It takes users into the game world. Certainly,
    game design and planning are also different from other mobile games.
  prefs: []
  type: TYPE_NORMAL
- en: VR game design
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: VR does not fulfil the criteria for every genre. Hence, VR game design needs
    to done accordingly. VR games are suitable when there is a character in the game,
    most preferably a first person shooter or in some RPG or racing games.
  prefs: []
  type: TYPE_NORMAL
- en: The designer needs to keep in mind that the whole game world must be experienced
    by users through the game. Hence, the game experience is the most important factor
    for any VR games.
  prefs: []
  type: TYPE_NORMAL
- en: Generally, a game designer starts designing a game from an idea. Then, corresponding
    controls, environment, and experience are thought of. However, in the case of
    VR games, the developer or designer already has a defined set of features on which
    they execute an idea through design.
  prefs: []
  type: TYPE_NORMAL
- en: VR target audience
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are several billions of handsets out in the world. However, very few of
    them are actually VR compatible and can run a VR game smoothly. As time passes
    by, more and more devices are being launched with VR capability.
  prefs: []
  type: TYPE_NORMAL
- en: It is not just a handset that is required to play a VR game on Android, it requires
    a supported VR headset too. Not every user will go and buy extra equipment to
    play VR games. That is why casual players are not the main target audience for
    VR games. Rather, typical gamers and game enthusiasts are the actual target audience
    for now.
  prefs: []
  type: TYPE_NORMAL
- en: The use of VR is vast. A major section of the use is simulation, which includes
    education. Gamification of the education process opens up a huge target audience
    of students. Another major target audience is youths who are energetic and curious
    about new things.
  prefs: []
  type: TYPE_NORMAL
- en: VR game development constraints
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'VR game development does not require extraordinary skills. The developer should
    be aware and well-versed in Android, and efficient enough to understand VR specifications
    and platform limitations. Here are a few constraints when developing games for
    VR on the Android platform:'
  prefs: []
  type: TYPE_NORMAL
- en: Limited handsets to support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limited and specific target audience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limited controls
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limited graphical quality with maximum experience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to the Cardboard SDK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Google Cardboard is a VR platform developed and released by Google in 2014 for
    use with a head-mounted device for a smartphone. This platform targets a low-cost
    project to encourage VR application development on a massive scale, which has
    proven to be fruitful till date. Google declared Daydream to be the next step
    for this platform on May 18, 2016.
  prefs: []
  type: TYPE_NORMAL
- en: The name "Cardboard" came from the concept of a VR device made with cardboard,
    which makes the device significantly cheaper. However, many third-party companies
    are following the same build architecture with various materials to increase its
    style and build quality.
  prefs: []
  type: TYPE_NORMAL
- en: 'Currently, Google Cardboard can be used to create VR applications only for
    Android and iOS. This has changed the VR development concept, which was limited
    to typical device and hardware specifications:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to the Cardboard SDK](img/B05069_10_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Cardboard headset components
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A typical Google Cardboard headset contains the following parts:'
  prefs: []
  type: TYPE_NORMAL
- en: A piece of cardboard cut into a precise shape
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 45 mm focal length lenses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Magnets or capacitive tape
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A hook and loop fastener
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A rubber band
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An optional near-field communication tag
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each part of the cardboard device is either pre-fitted or has a mechanical slot
    to fit in. It is easy and fast to assemble the full gear. The rubber band is fitted
    last to wear the headset. However, holding the assembled VR headset by any means
    serves the purpose of a VR experience.
  prefs: []
  type: TYPE_NORMAL
- en: After assembling the kit, a compatible smartphone is inserted into the device
    slot of the VR headset and held in place by the corresponding components.
  prefs: []
  type: TYPE_NORMAL
- en: Cardboard application working principle
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A Google Cardboard-compatible app splits the smartphone display image into two,
    one for each eye. The image can be seen through each 45mm lens. It applies barrel
    distortion to each display segment to counter pincushion distortion from the lenses.
    Thus, a complete wide 3D world is created.
  prefs: []
  type: TYPE_NORMAL
- en: Initial Cardboard headsets could fit phones with screens up to 5.7 inches (140
    mm) and used magnets as input buttons, which also required a compass sensor in
    the smartphone device. Later, the button was replaced by a conductive lever.
  prefs: []
  type: TYPE_NORMAL
- en: Upgrades and variations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Google updated the design and released the next Cardboard VR headset in 2016,
    which works with phones up to 6 inches (150 mm) display. It also updated the input
    button with a conductive lever that triggers a touch event on the smartphone's
    screen for better compatibility across devices.
  prefs: []
  type: TYPE_NORMAL
- en: Google allows several vendors and manufacturers to build Cardboard-compatible
    headsets with different materials and styles. Today, we can observe a lot of variants
    of this product.
  prefs: []
  type: TYPE_NORMAL
- en: Basic guide to develop games with the Cardboard SDK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Developing games for the Cardboard SDK or any other VR component is not similar
    to other Android games. Let''s have a quick look at the basics of Cardboard development
    styles and standards through these points:'
  prefs: []
  type: TYPE_NORMAL
- en: Launching and exiting the VR game
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VR device adaptation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Display properties
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In-game components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Game controls
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Game audio setup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User focus assistance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ultimate VR experience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching and exiting the VR game
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Normally, after launching an Android game, it performs a few automated tasks
    and takes the user to the menu to choose an action. In the case of VR games, it
    takes time to mount the Android device to a VR headset properly, so the developer
    does not perform any automated task just after launching the game. The game should
    wait for the user to start it after it is in the perfect situation for running.
  prefs: []
  type: TYPE_NORMAL
- en: For better and common experience, the game should prompt the user with a VR
    sign or button to start the VR game.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two possible exits for a standard VR game:'
  prefs: []
  type: TYPE_NORMAL
- en: Hitting the Back button
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hitting the Home button
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hitting the Back button
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If the VR has a 2D interface to show popups for exiting, then using the Back
    button is the best idea. While playing an Android VR game, there is no chance
    of hitting the back button accidentally as the device is mounted in the VR headset.
    It is very common to use a single hit on the back button to exit the game, because
    of the mentioned criteria. Otherwise, an exit popup can serve the purpose, similarly
    to a non-VR game.
  prefs: []
  type: TYPE_NORMAL
- en: Hitting the Home button
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Generally, hitting the Home button pushes the Android application to the background
    without killing the application, in the case of a VR game.
  prefs: []
  type: TYPE_NORMAL
- en: VR device adaptation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A VR game for Android using the Cardboard SDK should adapt the physical characteristics
    of the VR headset. The Google Cardboard SDK has a feature to carry out this job
    automatically. The developer can rely on the SDK to adjust application settings
    and configuration according to the VR headset. The Cardboard SDK itself contains
    adjustment settings for few specific Cardboard devices. The SDK can configure
    stereo settings and correct distortion for few specific lenses of a VR headset.
  prefs: []
  type: TYPE_NORMAL
- en: It is recommended that the developers use the Cardboard SDK feature to support
    the maximum possible VR headsets with a single game to provide users with the
    best possible VR experience without any hassle.
  prefs: []
  type: TYPE_NORMAL
- en: Display properties
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In many Android devices, there is a feature called Lights Out. In those devices,
    the Home, Menu, and Back controls are hidden under the Lights Out feature. VR
    games use a slip-screen technology to generate a 3D experience through VR headset
    lenses. That is why it is extremely necessary to run the VR games in full-screen
    mode. System controls or a status bar may actually appear in the user's peripheral
    vision, blocking or distracting them from the actual VR experience.
  prefs: []
  type: TYPE_NORMAL
- en: In-game components
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Normally, the VR game experience lies within the environment through the device
    screen. It is very unlikely to trigger any popups and other unwanted components
    on the screen during gameplay.
  prefs: []
  type: TYPE_NORMAL
- en: Developers must not call any API that will trigger any popup or any unwanted
    interruption during gameplay. Android currently does not support any 2D component
    rendering. Forcefully rendered 2D elements may cause disorientation of the VR
    display. Even if it does not, the user needs to take the device out from the VR
    headset and then perform the desired action to get rid of the popup, which is
    not at all convenient.
  prefs: []
  type: TYPE_NORMAL
- en: Game controls
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An Android VR headset contains only one button. That's why control design in
    VR games does not follow the conventional way. Let's take a look at the control
    scheme of VR games.
  prefs: []
  type: TYPE_NORMAL
- en: Control concepts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: UI controls generally appear at the launch of the game. Developers should place
    the UI controls in the initial field of view so that users can locate them to
    start the gameplay. If the controls are not in the visible range, then users might
    get confused. In that case, they might look around for the controls or simply
    leave the game. In both cases, users may lose interest in the game.
  prefs: []
  type: TYPE_NORMAL
- en: While playing the game, if there is any user interface, those controls need
    to move along with the field of view. Otherwise, users might have to go back to
    the place where the UI element was.
  prefs: []
  type: TYPE_NORMAL
- en: Types of controls
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Although the headset device has only one control unit, there might be several
    ways to use the button and a few other options as well. The most popular types
    of controls are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Fuse button
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visual countdown
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fuse button
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'A Cardboard VR headset has only one button on the side of the device. It can
    be used to click on targets. One of the uses of this button is to trigger a virtual
    button in the VR world which will fuse. This means a corresponding task will trigger
    after some time of focusing on the virtual fusing button. However, it may be frustrating,
    as the user needs to wait for that amount of time. To overcome this problem, the
    developer should give an option to click on that virtual button immediately wherever
    possible:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fuse button](img/B05069_10_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Visual countdown
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'While using a fuse button with a timer, there is a fair chance that the user
    might focus on the button unknowingly, and after a certain amount of time, it
    changes the game state. In this case, the user might get confused and not be able
    to continue the same game experience. The developer should indicate the countdown
    visually to show the user that something is going to happen within a certain amount
    of time:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Visual countdown](img/B05069_10_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Fuse button indication
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We already know that 2D UI buttons are not supported by VR games. So, developers
    use fuse buttons. A fuse button can be any element inside the gameplay. There
    must be an indication to direct the user to focus on a particular fuse button.
    Then, the action can be performed on countdown or by click.
  prefs: []
  type: TYPE_NORMAL
- en: For example, developers often use some glow, shine, shake, or other dynamic
    mechanism to make the object visible for clicking. The respective task or action
    is defined by the surroundings to indicate the task.
  prefs: []
  type: TYPE_NORMAL
- en: Control placement
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: It is always a good practice to activate the fuse button when the element is
    large enough to focus on. It can save the user a lot of confusion. Moreover, there
    should not be adjacent fuse buttons in the scene that are difficult to locate
    and might create confusion.
  prefs: []
  type: TYPE_NORMAL
- en: VR game development through Google VR
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Google has released a VR development kit for Android through Google VR, featuring
    both Android SDK and Android NDK. These SDKs supports both the Cardboard and Daydream
    VR platforms.
  prefs: []
  type: TYPE_NORMAL
- en: 'The developer can jump into VR game development through the following tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: Head-tracking system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spatial audio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dynamic rendering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UI handling
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3D calibration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lens distortion correction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stereo geometry configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s have a look at the Android SDKs for VR game development:'
  prefs: []
  type: TYPE_NORMAL
- en: Google VR using the Android SDK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google VR using the Android NDK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google VR using the Android SDK
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will have a look at VR development with the help of the Android SDK. A VR
    application build can be made with the help of Gradle. Gradle can be used independently
    or with Android Studio.
  prefs: []
  type: TYPE_NORMAL
- en: The developer can use other tools instead of Android Studio, but it is strongly
    recommended to use Android Studio for Android builds. It is the most convenient
    method for VR application development on the Android platform.
  prefs: []
  type: TYPE_NORMAL
- en: 'The developer is required to check the following factors in order to create
    a VR application build for Android:'
  prefs: []
  type: TYPE_NORMAL
- en: Android Studio version 1.0 or higher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android SDK version 23 or higher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gradle version 23.0.1 or higher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Android Studio can save users from configuring Gradle settings to build
    application packages. It also helps the developer identify and update Gradle if
    required.
  prefs: []
  type: TYPE_NORMAL
- en: The developer can choose Gradle to build an Android application project. In
    that case, the developer needs to manually edit each `build.gradle` file of every
    module to include `.AAR` declarations for the Gradle build.
  prefs: []
  type: TYPE_NORMAL
- en: 'The modification has to be done this way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Android Studio automatically makes these changes and declares dependencies for
    each module. This will tell Gradle to look in the `libs` subdirectory of the corresponding
    module for the three `.AAR` declarations. If there is no subdirectory called `libs`,
    then the developer needs to create a `libs` subdirectory inside the module's directory
    and copy the required `.AAR` files manually.
  prefs: []
  type: TYPE_NORMAL
- en: Google VR using Android NDK
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'VR application development using Android NDK is not very different to SDK development.
    It requires the following components:'
  prefs: []
  type: TYPE_NORMAL
- en: Android Studio version 1.0 or higher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android NDK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google VR SDK for Android
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is recommended that you use the Android NDK with the Daydream development
    platform. So, the developer needs to set up the development environment for the
    Daydream SDK.
  prefs: []
  type: TYPE_NORMAL
- en: The Google VR development kit started supporting NDK development from version
    v0.8.0 with beta release. From version v0.8.1, it included a native head-tracking
    system to power up the development.
  prefs: []
  type: TYPE_NORMAL
- en: Android SDK is sufficient to develop VR games with Cardboard, but a few developers
    like to use native languages such as C++ to develop games. Having a better understanding
    of technology, a few choose to develop VR games with C++ and OpenGL. In this way,
    the VR game can be portable to other VR platforms as well.
  prefs: []
  type: TYPE_NORMAL
- en: Android VR development best practices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Developers need to have experience of coding regular games for Android before
    they start building a VR experience with Cardboard. Here are a few areas that
    developers need to keep an eye on while developing VR games for Google Cardboard:'
  prefs: []
  type: TYPE_NORMAL
- en: Draw call limitations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Triangle count limitations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keeping a steady FPS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overcoming overheating problems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aiming for a better audio experience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up proper project settings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using a proper test environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Draw call limitations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: VR games are obviously 3D games with an extensive rendering process. It is always
    a good practice to minimize the draw calls to limit the rendering time and reduce
    GPU overhead.
  prefs: []
  type: TYPE_NORMAL
- en: In general terms, based on the list of currently available devices, the developer
    should keep a rendering call limitation of 100 per frame. In the current industry,
    most of the developers are trying to keep the draw calls between 50 and 100.
  prefs: []
  type: TYPE_NORMAL
- en: Triangle count limitations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have already discussed the functionality of a vertex and triangle in 3D games.
    The same logic applies to VR games. However, it is more difficult to maintain
    performance in VR games than normal 3D games. That is why VR games usually use
    triangle counts within 100k.
  prefs: []
  type: TYPE_NORMAL
- en: Currently, the average triangle count of a decently performing VR game is around
    50k to 80k. Developers need to simplify all of its 3D objects and optimize them
    in the minimum possible triangles and vertices to achieve a decent FPS at runtime.
  prefs: []
  type: TYPE_NORMAL
- en: Keeping a steady FPS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For any Android game, keeping a steady and decent FPS is necessary. VR games
    for Android are not an exception. Through the above mentioned limitations, the
    developer can reduce rendering time to gain performance.
  prefs: []
  type: TYPE_NORMAL
- en: VR games work with a split-screen technology, which is a heavy process. So,
    the developer should decide and use the minimum possible game objects or elements
    to keep the FPS steady.
  prefs: []
  type: TYPE_NORMAL
- en: It is a big challenge for VR game developers to provide better visuals with
    limited resources. Designing and creating art assets is a major part. Using low-poly
    models with minimum triangles produces poor visual quality. However, this quality
    can be improved with the help of excellent texturing support for the model and
    strategic light mapping in the virtual reality world.
  prefs: []
  type: TYPE_NORMAL
- en: Overcoming overheating problems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Overheating is a common problem for Android VR games. The device heats up while
    running a VR application due to the extensive use of CPU and GPU. There is not
    much a developer can do to overcome the problem completely. However, developers
    can optimize the VR game to reduce processor use. The game should have limited
    network use and other device components to minimize battery consumption.
  prefs: []
  type: TYPE_NORMAL
- en: Better audio experience
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Android VR games are played with the support of extra VR devices, such as Google
    Cardboard or similar. We have already discussed the devices in this chapter. Such
    devices do not have audio support; VR games use device speakers by default.
  prefs: []
  type: TYPE_NORMAL
- en: A virtual reality experience cannot be complete without proper audio experience.
    It is always good practice to use 3D environment audio in the game and suggest
    that users wear headsets while playing the VR game.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up proper project settings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Setting VR project settings right early on can save the developer from headaches
    in the future. To get better project performance in particular, it is very important
    to set the quality settings properly at the beginning of the project. The entire
    project and performance planning cannot be fruitful without a prior project configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Using a proper test environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Setting up your test environment is extremely important for the success of any
    game, especially for large-scale games such as VR. The developer must know the
    status of each development stage so that they can take future decisions to make
    the game better. In this way, the development process can run smoothly.
  prefs: []
  type: TYPE_NORMAL
- en: It is always recommended that you run the VR game for testing from outside the
    VR device. It is also recommended that you use the **adb** to check each debug
    condition and statement. It is very difficult to use a normal debug bridge for
    VR games as the game must be tested with a VR device. The developer needs to set
    up a wireless debug bridge to overcome this problem. The debug bridge can also
    be used to run and stop the game from outside the VR device. This way, the developer
    can save a lot of time, which can be used to improve the game.
  prefs: []
  type: TYPE_NORMAL
- en: Challenges with the Android VR game market
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have already understood the technical challenges for developing VR games
    on the Android platform. Now, let''s have a look at the other challenges that
    a developer might face while developing or monetizing VR games for Android:'
  prefs: []
  type: TYPE_NORMAL
- en: Low target audience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limited game genres
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Long game sessions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limited device support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Real-time constraints
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Low target audience
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are very few Android users who are familiar with the VR concept and technology.
    Mostly, users are the common handset holders who do not have VR headsets. So,
    there is already a major section of the audience who are out of scope of VR gaming.
    This is why the VR gaming market is limited to the audience with VR headsets.
  prefs: []
  type: TYPE_NORMAL
- en: Limited game genres
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have already looked at the possible game genres in VR gaming. VR games cannot
    support all the game genres released to date and possibly will not be able to
    do so in the near future. This limitation is a serious challenge for the Android
    VR gaming market in securing a profitable position and design monetization aspects.
  prefs: []
  type: TYPE_NORMAL
- en: Long game sessions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Android VR games must be played with a VR headset fitted with an Android handset.
    Usually, the game sessions are longer, and it takes time and effort to set up
    a playable environment.
  prefs: []
  type: TYPE_NORMAL
- en: Android game users are usually addicted to quick and flexible game sessions.
    Most of the games can be immediately paused and resumed for convenient gameplay.
    However, VR games cannot be paused or resumed immediately. Users prefer to play
    VR games when they have a long period of free time.
  prefs: []
  type: TYPE_NORMAL
- en: Limited device support
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Android VR games require high-level hardware configuration to run the game.
    The hardware platform must have enough power to process the game, and the rendering
    unit must render the game with the maximum possible quality in the minimum possible
    time.
  prefs: []
  type: TYPE_NORMAL
- en: There are many cheap and low-configuration handsets available in the market.
    Millions of Android users use those handsets. However, most of them are incapable
    of running a VR game with a steady and acceptable FPS. Developers of Android VR
    games are bound to exclude those devices. This limitation reduces the number of
    supported devices significantly.
  prefs: []
  type: TYPE_NORMAL
- en: Real-time constraints
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most of the VR game players are gamers or game enthusiasts. However, they also
    have some real-time constraints while playing VR games. Users or players must
    choose a gameplay situation where there is least chance of possible interruptions.
  prefs: []
  type: TYPE_NORMAL
- en: Gamers usually prefer to sit at a location or be in a spacious place to avoid
    any accidents while playing the game. Their eyes are covered with the VR headset,
    so users need to take these safety measures. These issues cannot be resolved and
    this affects the VR gaming market and leads to low session count and time.
  prefs: []
  type: TYPE_NORMAL
- en: Expanded VR gaming concepts and development
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have talked about only a few of the VR gaming aspects of Android. These ideas
    have been implemented or are currently being implemented. However, there is a
    broader concept of virtual gaming.
  prefs: []
  type: TYPE_NORMAL
- en: Game developers are now trying to produce real-time experiences with VR technology.
    There are a few real-time games that are similar to digital gaming, such as *Paint
    Ball*, *Laser Tag*, and so on. With the help of VR technology, these experiences
    can reach the next level. Using a VR headset in a predefined arena that is physically
    synced with the VR application environment can take the user into the game. This
    concept of gaming has already started taking shape. A few test arenas for VR games
    have already been created with the support of various other physical gears and
    sensors. These gears and sensors track the user's movement in real time and duplicate
    it within the virtual world through the VR headset display.
  prefs: []
  type: TYPE_NORMAL
- en: 'Simple actions such as walking, crouching, touching something in the virtual
    world, and shooting a virtual enemy have already been implemented. Developers
    and researchers are making it better day by day. However, the Android platform
    is yet to take a step into this kind of VR development for the following reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: Android is a mobile OS that works best on portable devices.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Most Android devices are mobile handsets or tablets.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is difficult to manage a dedicated hardware platform with a large physical
    setup through Android. **Real-time operating systems** (**RTOS**) can perform
    much better than Android for such systems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are low market prospects for such Android setups, and the costing may
    be huge.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In spite of having these issues in setting up Android VR gaming on a large scale,
    it is believed that Android will become part of such systems soon.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the era of technology. VR technology has taken the gaming experience
    to the next level. Android is now the most progressive platform for gaming. Joining
    two leading platforms can surely take the mobile gaming experience to the next
    level.
  prefs: []
  type: TYPE_NORMAL
- en: In VR games, the user gets the chance to be inside the game environment. However,
    there are a lot of limitations in developing games for Android with the VR feature.
    Google has already announced its upcoming VR development platform, Daydream, which
    includes extended controls with a separate controller.
  prefs: []
  type: TYPE_NORMAL
- en: The VR gaming industry is growing rapidly. It has its own set of advantages
    and disadvantages. However, there is no doubt that the gameplay experience is
    far better than the conventional gameplay system. So, it will not be a wrong assumption
    that the future of the Android VR gaming industry is bright.
  prefs: []
  type: TYPE_NORMAL
