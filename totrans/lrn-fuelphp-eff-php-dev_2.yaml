- en: Chapter 2. Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will run through some of the basics of installing FuelPHP.
    Even as an experienced PHP developer, some of the topics may be new. We will run
    through the basics of **Git** for source control and touch upon automated deployment
    using a Ruby tool called **Capistrano** in later chapters. Don't worry, although
    it's written in Ruby, it's really easy to use even if you have not used Ruby before.
  prefs: []
  type: TYPE_NORMAL
- en: Everyone has their own way of setting up their development environment—some
    prefer compiling Apache from source, while others prefer the simplicity of MAMP
    or WAMP. Whatever your environment of choice, FuelPHP is likely to be fairly quick
    and easy to set up.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the development environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Source control with Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing FuelPHP and setting up your project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with different environments and migrating database changes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preparing the development environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: FuelPHP should work with any web server, and has been tested to work on Apache,
    IIS, and Nginx. It has also been built to work on Windows and *nix (Unix, Linux,
    and Mac) operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: As far as this guide goes, the examples will be based on *nix and Mac, but the
    same steps will work on other operating systems such as Windows.
  prefs: []
  type: TYPE_NORMAL
- en: Apache
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Other web servers are available, but for the purpose of this book we assume
    the use of Apache.
  prefs: []
  type: TYPE_NORMAL
- en: For the use of clean URLs such as `http://example.com/welcome/hello`, Apache
    will need the `mod_rewrite` module installed and enabled.
  prefs: []
  type: TYPE_NORMAL
- en: PHP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You're likely to already have PHP installed, especially with an interest in
    FuelPHP.
  prefs: []
  type: TYPE_NORMAL
- en: 'FuelPHP requires PHP Version 5.3 or greater. It also uses several PHP extensions:'
  prefs: []
  type: TYPE_NORMAL
- en: '`fileinfo()`: This extension is used for uploading files and may require a
    manual installation on Windows'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mbstring()`: This is used throughout the framework'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mcrypt`: This is used for the core crypt functions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PHPSecLib`: This is used as an alternative should `mcrypt` not be found'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are many ways of setting up PHP, more information can be found at both
    `php.net` and [http://www.phptherightway.com](http://www.phptherightway.com).
  prefs: []
  type: TYPE_NORMAL
- en: Database interactions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Interactions with databases in FuelPHP are handled by drivers; as such, it's
    possible to support a multitude of databases. Out of the box, FuelPHP supports
    MySQL (via MySQL, MySQLi drivers), MongoDB, Redis, and any databases that have
    **PHP Data Objects** (**PDO**) drivers.
  prefs: []
  type: TYPE_NORMAL
- en: Applications and sites written in FuelPHP can work perfectly without either
    a relational database or no SQL data store like Mongol DB, but in this book we
    will be using one to demonstrate some awesome features of FuelPHP.
  prefs: []
  type: TYPE_NORMAL
- en: MySQL is well supported on most platforms and is one of the most widely used
    database systems. You can visit [http://dev.mysql.com/downloads/mysql](http://dev.mysql.com/downloads/mysql),
    which is a great place to start with instruction and installation programs.
  prefs: []
  type: TYPE_NORMAL
- en: Source control – introducing Git
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although not all projects will require the use of source control, it can certainly
    be handy to roll back to older versions of code, or work with a team of developers.
  prefs: []
  type: TYPE_NORMAL
- en: Git is an extremely powerful tool and is relatively easy to start using. Although
    not all projects require the use of source control systems such as Git or **Subversion**,
    they will all benefit from it. A key benefit is the ability to revert to a previous
    version of the code and think of it as a universal "undo" function. Instead of
    the "undo" function working on a single document, it works on the entire project.
    The core team, while developing and enhancing the FuelPHP framework, also uses
    them. If you're not comfortable with source control, the framework can be installed
    manually, but this book will assume you're using Git and source control.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you would like to have more information about using Git, there is an online
    version of the manual available at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://git-scm.com/book/](http://git-scm.com/book/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Git originates from the Linux world. So, compiling from source is the traditional
    way of installing it, but alternatives now exist. Ubuntu can install Git with
    the following `apt-get` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'OS X users have a multitude of options for installing Git, including **MacPorts**
    ([http://www.macports.org](http://www.macports.org)) and **Homebrew** ([http://github.com/mxcl/homebrew](http://github.com/mxcl/homebrew)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'While installing via MacPorts, we use the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'While using Homebrew, we use:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Windows users have the `msysGit` installer available at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://msysgit.github.io](http://msysgit.github.io)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once Git is installed, it''s recommended to configure it with your user details,
    as shown in the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'To make the output from Git more visual, it''s recommended to enable the colors
    in the command line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Further information about Git
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A great alternative for the Git client and available commands can be found
    at [http://git-scm.com](http://git-scm.com). GitHub also has a good guide for
    setting up Git, available at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://help.github.com/articles/set-up-git](http:// https://help.github.com/articles/set-up-git)'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Extra reading material**'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are familiar with source control, the core concepts of Git will be very
    familiar. It may take some time to get used to the syntax. Here are some links
    that will prove to be useful for learning more about Git:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://git-scm.com/book/en/](http://git-scm.com/book/en/): An online guide
    to Git'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://git-scm.com](http://git-scm.com): A great collection of resources'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://nvie.com/posts/a-successful-git-branching-model/](http://nvie.com/posts/a-successful-git-branching-model/):
    A great way of working with Git is by using a tool named **git-flow**, which helps
    to keep branching structured and in control'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting and installing FuelPHP with curl and Oil
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The easiest way of installing FuelPHP is through the use of `curl` (or `wget`)
    and a stripped down version of Oil, the FuelPHP command-line tool.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the quick installer, you can run the following command from the
    shell or a terminal window:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This will ask for your password to install the new files to the `/usr/bin` directory.
  prefs: []
  type: TYPE_NORMAL
- en: After this is over, you only need to use `oil` rather than `php oil`, but both
    will work for the command-line iterations.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have used a FuelPHP version older than 1.6 previously, you will need
    to reinstall FuelPHP to allow it to use the **Composer** tool.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new project, simply run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: In this, `<project>` is the name of your project. This will create a folder
    of the project name in the current directory. All of your application code and
    packages will be created in the project folder.
  prefs: []
  type: TYPE_NORMAL
- en: Clone from GitHub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you would prefer not to use curl, or would prefer to just clone the FuelPHP
    repository in the command line, navigate to the folder where you would like the
    files to sit. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: This will create a folder called `<project name>` in your web server root. It
    will contain all the necessary FuelPHP files, including all the core packages.
  prefs: []
  type: TYPE_NORMAL
- en: Continuing the installation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In addition to the single command, or cloning from GitHub, it is also possible
    to download the files manually and install that way. Further information on this
    method can be found at [http://fuelphp.com/docs/installation/instructions.html](http://fuelphp.com/docs/installation/instructions.html).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you're manually installing the files, for security reasons, it is recommended
    to move the fuel folder outside of the publicly accessible web folder directory.
    The default `.htaccess` file included with FuelPHP also stops the core files from
    being web-accessible.
  prefs: []
  type: TYPE_NORMAL
- en: 'While working on a project, the write permissions for certain application folders
    might get changed. These folders might include those for logs and caches causing
    the application to stop functioning. If this happens, Oil can be used to correct
    them. It can also be used to make them writable by the web server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Setting up your project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that you have installed FuelPHP, it''s really easy to set up a new project.
    First, you will need to navigate to the folder where you would like to work from,
    for example, the `Sites` folder on Mac OS X. After this, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Then again, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: This will install the core files and packages required to run FuelPHP. It will
    also set up Git submodules within the project. These can sometimes be tricky to
    work with, but FuelPHP uses them in an extremely versatile and powerful way. With
    submodules, you have fine-grained control over the versions of the packages you're
    using on the project. It also makes it really easy to upgrade or install security
    updates.
  prefs: []
  type: TYPE_NORMAL
- en: 'The structure created by FuelPHP is fairly straightforward:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Files like CSS and JavaScript are placed in the `assets` folder in the public
    directory. Once you have installed some packages, the majority of the changes
    you make for your project will take place in the `fuel/app` folder. We will run
    through these with examples in the next few chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Using submodules to easily update the FuelPHP core and packages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Submodules are a great way to work with multiple repositories in the project
    in a controlled manner. For example, it is possible to upgrade a version of the
    core FuelPHP framework while keeping other third-party packages on the old version.
    This makes it easier to test new functionality to ensure that it doesn't affect
    your project, or to highlight changes that you may need to make. In this section,
    we will run through some of the basics of using submodules, but if you would like
    to have more information I'd recommend looking at the *Submodules* section of
    the Git manual available at [http://git-scm.com/book/en/Git-Tools-Submodules](http://git-scm.com/book/en/Git-Tools-Submodules).
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to see which submodules are currently set for your project, navigate
    to the root of the project and then run the `git submodule` command, as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '![Using submodules to easily update the FuelPHP core and packages](graphics/0366OS_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, there are six submodules set up and used for each FuelPHP project.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you would like to check what other versions of submodules are available,
    navigate to the folder for the submodule and then run the `git branch -r` command,
    as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![Using submodules to easily update the FuelPHP core and packages](graphics/0366OS_02_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We can then copy the code from one of the other branches to test new features,
    or to roll back to a previous version of the code. For example, let''s see what
    happens when we use the development version of FuelPHP:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![Using submodules to easily update the FuelPHP core and packages](graphics/0366OS_02_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Each submodule acts like its own repository and doesn''t take into account
    the main project repository. If you want the main project to take into account
    the submodule changes, simply commit all the changes to the submodule, then navigate
    to the main project folder and commit the changes to the project repository, as
    shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`fuel/core` is not the same as `fuel/core/`.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using submodules to easily update the FuelPHP core and packages](graphics/0366OS_02_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Committing your code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When the project is set up, the Git settings will want to send the code to the
    FuelPHP repository. So, the first thing to do is to change this so that it goes
    to your project. We will be demonstrating this using GitHub, which is the same
    place where FuelPHP is stored.
  prefs: []
  type: TYPE_NORMAL
- en: First, create an account on GitHub ([https://github.com/new](https://github.com/new)),
    and then follow the instructions to create a repository. Once you have created
    the repository, copy the repository address, for example, `git@github.com:digitales/Chapter2.git`;
    you will need this shortly.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Bitbucket.org](http://Bitbucket.org) is a similar service, except it will
    allow you unlimited private repositories.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have created your repository and copied the repository address, it''s
    time to go back to your terminal. Navigate to your project directory in your terminal
    and then add a remote to the repository, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '![Committing your code](graphics/0366OS_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now that we've updated the origin, it's time to delve into a little about submodules,
    followed by configuration and some basics for the production environment configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Composer – the package manager
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With more recent versions of FuelPHP, the Composer package manager is used to
    dynamically pull dependencies from **Packagist**, Github, or from a custom defined
    location. It's controlled using the `composer.json` file, which you will find
    in the root folder of your project's FuelPHP installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Normally, you''d need to manually install Composer, but FuelPHP includes the
    `composer.phar` library so that you can run Composer directly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '![Composer – the package manager](graphics/0366OS_02_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you don't execute this step, FuelPHP will not start, as vital components
    of the framework are now being loaded by using Composer.
  prefs: []
  type: TYPE_NORMAL
- en: Configuration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: FuelPHP works on a configuration over convention method, with best practices
    and guidelines to follow. All application- or project-specific code is stored
    in the `app/config` folder with the main configuration file consisting of `config.php`.
    It is worth mentioning that you can pick and choose which configurations to override.
    Any unspecified keys or values will be loaded from the core configurations instead.
    This means that any changes to the default configurations will not be lost when
    upgrading versions of FuelPHP.
  prefs: []
  type: TYPE_NORMAL
- en: Running in the production environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you install FuelPHP, it defaults to thinking that it is in a development
    environment, but this can be changed quickly by setting the environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'This can either be done in the virtual host (or similar) for the domain, or
    it can be done via the `.htaccess` file in the public folder for the application,
    using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: By default, the environment will be set to a development environment in both
    the applications and in the command-line tasks. Running command-line tasks in
    the production environment will be covered in later chapters in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Performing migrations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Migrations are a great way of ensuring that the database is consistent in different
    environments, or between team members. It provides a systematic way of updating
    the datastore structure. Gone are the days of manually running SQL statements
    on a database and then wondering if the correct database structure has been updated.
    At any point of developing a site, the database can be changed moving forward
    or rolled back to an older version of the database structure.
  prefs: []
  type: TYPE_NORMAL
- en: Examples of migrations will form part of the project later in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter we have set up our development environment and have been introduced
    to the Git source control, along with some of its benefits. We have briefly examined
    tailoring a project to different environments and configuring the source control
    to take this into account with different branches. We have also installed FuelPHP.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will examine the FuelPHP architecture before building
    a demo application in [Chapter 4](ch04.html "Chapter 4. Demo Application"), *Demo
    Application*.
  prefs: []
  type: TYPE_NORMAL
