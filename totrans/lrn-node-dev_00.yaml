- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to *Learning Node.js Development*. This book is packed with a ton of
    content, projects, challenges and real-world examples, all designed to teach you
    Node by doing. This means you'll be getting your hands dirty early on in the upcoming
    chapters writing some code, and you'll be writing code for every project. You
    will be writing every line of code that powers our applications. Now, we would
    require a text editor for this book. We have various text editor options that
    you can use. I always recommend using **Atom**, which you can find at [atom.io](http://atom.io).
    It's free, open-source, and it's available for all operating systems, namely Linux,
    macOS, and Windows. It's created by the folks behind GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: All the projects in the book are fun to build and they were designed to teach
    you everything required to launch your own Node app, from planning to development
    and testing to deploying. Now, as you launch these different Node applications
    and move through the book, you will run into errors, which is bound to happen.
    Maybe something doesn't get installed as expected, or maybe you try to run an
    app and instead of getting the expected output, you get a really long obscure
    error message. Don't worry, I am there to help. I'll show you tips and tricks
    to get pass through those errors in the chapters. Let's go ahead and get to it.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book targets anyone looking to launch their own Node applications, switch
    careers, or freelance as a Node developer. You should have a basic understanding
    of JavaScript in order to follow this book.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](d07ed8de-e33a-4fd9-a980-8eade7cd15bf.xhtml), *Getting Set Up*,
    talks about what Node is and why you want to use it. In this chapter, you''ll
    learn Node installation and by the end of the chapter, you''ll be able to run
    your first Node application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](9e56dc82-3ad8-4376-81b7-27ba482bd4e2.xhtml), *Node Fundamentals
    - Part 1*, talks about building Node applications. The *Node Fundamentals* topic
    has been divided into 3 parts. Part 1 of this topic includes module basics, requiring
    own files, and third-party NPM modules.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](49575d61-4c77-46aa-89b2-6dc4a771e7a5.xhtml), *Node Fundamentals
    - Part 2*, continues our discussion on some more Node fundamentals. This chapter
    explores yargs, JSON, the addNote function, and refactor, moving functionality
    into individual  functions and testing the functionality.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](a2fb4fb0-f96b-4dc5-9980-4b177380e4a6.xhtml), *Node Fundamentals
    - Part 3*, includes things such as read and write from the file system. We''ll
    look into advanced yargs configuration, debugging broken apps, and some new ES6
    functions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](b34c7f1b-8ae4-4974-a24b-6051605af3c7.xhtml), *Basics of Asynchronous
    Programming in Node.js*, covers basic concepts, terms, and technologies related
    to the async programming, making it super-practical and using it in our weather
    application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](c68ff2e3-f646-41ff-a599-637bc56f752a.xhtml), *Callbacks in Asynchronous
    Programming*, is the second part of async programming in Node. We''ll look into
    callbacks, HTTPS requests, and error handling inside of our callback functions.
    We''ll also look into the forecast API and fetching real-time weather data for
    our address.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](dc41c19f-29fc-415a-9334-2bf527d98208.xhtml), *Promises in Asynchronous
    Programming*, is the third and last part of async programming in Node. This chapter
    focuses on Promises, how it works, why they are useful, and so on. At the end
    of this chapter, we''ll use Promises in our weather app.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](89ed1caf-87a3-4649-94cc-6b7aa704fd56.xhtml), *Web Servers in Node*,
    talks about Node web servers and integrating version control into Node applications.
    We''ll also introduce a framework called Express, one of the most important NPM
    libraries.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](746b40df-a2f0-47dd-ad46-f7a3ee03e193.xhtml), *Deploying Applications
    to Web*, talks about deploying the applications to the Web. We''ll be using Git,
    GitHub, and deploy our live app to the Web using these two services.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](66426b1c-30a2-40a3-8559-867c6417ed71.xhtml), *Testing the Node
    Applications- Part 1*, talks about how we can test our code to make sure it is
    working as expected. We''ll work on setting up for testing and then writing our
    test cases. We''ll look into the basic testing framework and asynchronous testing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](0ef9c5e7-91ed-44a6-a951-dee9dd82e85e.xhtml), *Testing the Node
    Application - Part 2*, continues our journey of testing Node applications. In
    this chapter, we''ll work on testing the Express applications and look into some
    advanced methods of testing.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A web browser, we''ll be using Chrome throughout the course book but any browser
    will do, and Terminal, sometimes known as the command line on Linux or the Command
    Prompt on Windows. Atom as the text editor. The following list of modules will
    be used throughout the course of this book:'
  prefs: []
  type: TYPE_NORMAL
- en: lodash
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nodemon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yargs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: request
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: axios
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: express
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hbs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: heroku
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rewire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Learning-Node.js-Development](https://github.com/PacktPublishing/Learning-Node.js-Development).
    We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
