- en: Introducing the Raspberry Pi Robot Car
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I would like to introduce you to T.A.R.A.S, the robot car. T.A.R.A.S is actually
    a backronym; I took the name from a business mentor of mine who helped me get
    started. After scratching my head trying to come up with something, I finally
    figured out how to turn my friend Taras into T.A.R.A.S, this Amazing Raspberry-Pi
    Automated Security agent. As you can probably tell from the name, T.A.R.A.S will
    monitor things for us and act as an automated security guard.
  prefs: []
  type: TYPE_NORMAL
- en: T.A.R.A.S will use Raspberry Pi for a brain and motor driver boards to control
    both the movement of its camera gimbal and wheels. T.A.R.A.S will also have sensory
    inputs as well as LED and buzzer outputs. T.A.R.A.S will be an aggregation of
    the skills we have acquired throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: We will spend this chapter building T.A.R.A.S and writing code to control it.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: The parts of the robot car
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building the robot car
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The parts of the robot car
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I designed T.A.R.A.S to be as simple to put together as possible. T.A.R.A.S
    consists of a laser cut hardboard chassis, 3D printed wheel, and camera mount
    parts (there is an option to use laser cut wheel mounts, too). In order for you
    to build T.A.R.A.S, I have provided SVG files for the chassis and STL files for
    the 3D printed parts. All other parts may be purchased online. The following is
    a photo of T.A.R.A.S. before assembly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/1a8a2578-d9ac-4388-9038-cfa92762062f.png)'
  prefs: []
  type: TYPE_IMG
- en: Servo camera mount (shown assembled)—search [www.aliexpress.com](http://www.aliexpress.com)
    for a camera platform anti-vibration camera mount
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 3D printed bracket (camera brace)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: DC motors for wheels (shown with motor wires and extension wires attached)—search
    [www.aliexpress.com](http://www.aliexpress.com) for a smart car robot plastic
    tire wheel
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wheel mounts (3D printed)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: LEDs
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: LED holders—search [www.aliexpress.com](http://www.aliexpress.com) for a lamp
    LED holder black clip
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Camera mount brace (laser cut)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Active buzzer—search [www.aliexpress.com](http://www.aliexpress.com) for a 5V
    active buzzer
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Distance sensor (HC-SR04)—search [www.aliexpress.com](http://www.aliexpress.com)
    for an HC-SR04
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Alternative wheel mounts (laser cut)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Raspberry Pi camera (long lens version, shown without cable)—search [www.aliexpress.com](http://www.aliexpress.com)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Motor driver plate (laser cut)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wheels—search [www.aliexpress.com](http://www.aliexpress.com) for a smart car
    robot plastic tire wheel
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Robot car chassis (laser cut)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Motor driver board—search [www.aliexpress.com](http://www.aliexpress.com) for
    an L298N motor driver board module
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: DC barrel jack (shown with wires attached)—[www.aliexpress.com](http://www.aliexpress.com)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adafruit 16-Channel PWM/Servo HAT—[https://www.adafruit.com/product/2327](https://www.adafruit.com/product/2327)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Raspberry Pi
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 40-pin single-row male pin header connector strip (not shown)—[www.aliexpress.com](http://www.aliexpress.com)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Various loose wires and breadboard jumper wires (not shown)—it's a good idea
    to buy many different wires and breadboard jumper wires; you can search [www.aliexpress.com](http://www.aliexpress.com)
    for breadboard jumper wires
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Heat shrink (not shown)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 7.4V rechargeable battery with DC jack (not shown)—search [www.aliexpress.com](http://www.aliexpress.com)
    for a 7.4V 18650 Li-ion lithium ion rechargeable battery pack (be sure to pick
    one that fits with the DC barrel jack in 16)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Alternatively to part 22, you may use an AA sized power battery storage case
    box instead of parts 16 and 22—[www.aliexpress.com](http://www.aliexpress.com)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Mini breadboard (not shown)—search [www.aliexpress.com](http://www.aliexpress.com)
    for an SYB-170 mini solderless prototype experiment test breadboard
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Various standoffs (not shown)—it should be able to have a standoff height of
    at least 40 mm; it's a good idea to have as many standoffs as you can as they
    always seem to come in handy, and you can search [www.aliexpress.com](http://www.aliexpress.com)
    for standoffs in electronics
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 330 and 470 Ohm resistors (not shown)—it's a good idea to buy many resistors
    as they do indeed come in handy; search [www.aliexpress.com](http://www.aliexpress.com)
    for a resistor pack
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Portable USB power pack (not shown)—this type is used to charge cell phones
    on the go; we will use this power pack to power the Raspberry Pi
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Building the robot car
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following are the steps to build T.A.R.A.S, our robot car. Your version
    of T.A.R.A.S may be built close to the one used in this book or you may make modifications
    as desired. For one thing, I am using a Raspberry Pi camera module with a longer
    lens (night-vision models have longer lenses). I am also using the Adafruit 16-Channel
    PWM/Servo HAT to drive the servos for the camera mount. You may choose to use
    another board or forgo the servos altogether and mount the camera in a fixed position.
  prefs: []
  type: TYPE_NORMAL
- en: One of my favorite robot backronyms is Vincent from the 1980s Disney movie *The
    Black Hole*. Vincent, or more accurately, V.I.N.CENT, stands for Vital Information
    Necessary Centralized. If you know the movie, you will know that V.I.N.CENT is
    quite clever and very polite. V.I.N.CENT is also a bit of a know-it-all and can
    be a little irritating at times.
  prefs: []
  type: TYPE_NORMAL
- en: 'I have included two different ways to mount the wheel motors: using a 3D printed
    wheel mount or using a laser cut wheel mount. I prefer the 3D printed brace as
    it allows for the screws to be countersunk, thereby providing more space between
    the chassis and the wheel.'
  prefs: []
  type: TYPE_NORMAL
- en: If you are 3D printing the wheel mounts and camera brace yourself, you may use
    whichever solid filament type you desire. Personally, I used PETG as I like the
    way it bends without breaking. PLA is fine as well. Be sure to 3D print the wheel
    mounts on their sides so that they print wide and not high. This will result in
    a print that may be a little messy around the holes (for PETG, at least), but
    it will be a much stronger part. I managed to print a single wheel mount in 30
    minutes and the camera brace in about 90 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Building the robot car should take an afternoon of your time.
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 – Adafruit 16-Channel PWM/Servo HAT for Raspberry Pi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you haven't heard of it, there is this amazing company in New York City that
    caters to electronics hobbyists around the world called Adafruit. Adafruit creates
    many **HATs** (**Hardware Added on Top**) for Raspberry Pi, including the one
    we will use for our robot, the Adafruit 16-Channel PWM/Servo HAT.
  prefs: []
  type: TYPE_NORMAL
- en: With this HAT, the repetitive time pulses needed to control servos are offloaded
    from Raspberry Pi and onto the HAT. With this HAT, you may control up to 16 servos.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a photo of the HAT and the headers that come with it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/ef44e937-759e-4d95-b942-8d35b5e04834.png)'
  prefs: []
  type: TYPE_IMG
- en: 'For our purposes, we need to solder headers onto the board:'
  prefs: []
  type: TYPE_NORMAL
- en: As we are only using two servos, solder two of the **3 pin servo headers** to
    the board.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Solder the **2 X 20 pin header**. A good way to hold the board and pins in
    place while soldering is to use some Play-Doh! (make sure you don''t go too close
    to the Play-Doh! with the hot soldering iron while soldering):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/274703ea-3d65-4fac-a024-5e0fede76158.png)'
  prefs: []
  type: TYPE_IMG
- en: As we will be using wires from our motor board to power the servo board, solder
    the power header onto the board.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We need to access GPIO pins from Raspberry Pi, so another pin row must be added.
    Break off 25 pins from a 40-pin pin header connector. Solder the pins onto the
    board:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/f578020c-805e-435f-94a1-393d2b501af3.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 2 – Wiring up the motors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We need to wire up the motors so that two always spin at the same time and
    in the same direction:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Cut eight equal pieces of wire and strip a little insulation off both ends
    of all pieces:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/11481a24-5dca-4873-936d-de7e12c8a928.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Solder an end to each terminal on the motors:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/c3081fa8-76c7-434b-97ce-f1b490d32dd6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Apply heat shrink to the terminal to insulate it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/50e0c531-01fd-4a60-91e7-0e3c9d9fac51.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Group and connect the wires from each motor so that the wire on the top of
    one motor connects to the wire on the bottom of the other motor (see photo for
    clarity):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/249bbb07-2500-4f65-ad99-5c26bab1f08e.png)'
  prefs: []
  type: TYPE_IMG
- en: For extra strength and protection, you may use heat shrink to keep the wires
    together (in the previous photo, a yellow heat shrink is used).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Extension wires may be added to the ends (I have chosen to do this for my build
    as the wire length was a little short). The blue labeling tape added to the ends
    will help out later one when wiring the motors up to the motor driver board:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/56bc16f2-2da7-41e4-a6ba-2a66d18f54a3.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 3 – Assembling the servo camera mount
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With our servo camera mount, T.A.R.A.S has the ability to move its head side
    to side and up and down. This will come in handy for our project in [Chapter 14](eff0f7cb-f99b-45d5-8781-42c841bd2fd9.xhtml),
    *Controlling the Robot Car Using Python*. When you pour the pieces of the servo
    camera mount onto the table, it may seem a little daunting as to how you are going
    to assemble it into something useful.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a photo of the parts of the servo camera mount,. Rather than
    try to name the parts, I''ll just put letters down and refer to the letters for
    assembly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/c0b0a161-8760-4f1a-a995-b24a37ca20bd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To assemble the servo camera mount do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Place part **E** inside of part **A** so that the protruding cylinder from
    part **E** is facing up:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/ee0163cd-7696-4b42-8b25-3032cd731a5e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Flip over and screw part **E** to part **A** by using the smallest screws in
    the pack:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/05d60291-48b3-4962-bb76-d95629bfa5cb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Screw a servo into part **D** using small screws (see the following photo):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/56361793-a726-4c89-9ea4-4990fe63dde9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Place part **B** over the servo and insert part **F** into the groove made
    for it. Screw part **F** into place. The servo should be able to move freely up
    and down while attached to parts **B** and **F**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/fc2f337b-1d27-4b11-a7da-0756e63cbb1a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Flip the assembled part over and insert the other servo into part **B**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/596a4f93-7534-4aef-a120-1ed776b46e64.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Place part **C** over the servo. You may have to bend part **D** a bit to get
    part **C** to fit:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/40c91b14-9ee6-447d-aba8-b8aa5d5296c2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Flip the assembled part over and screw parts **B** and **C** together:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/43f9b60d-e642-4861-86a8-cf20f0037b7a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Insert the assembled part into part **E**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/745d14a3-4613-4369-9438-a361241f02f5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Screw part **A** to the bottom of the assembled part:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/23bb8986-9f34-4c57-8251-3bb3dfc15b39.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 4 – Attaching the head
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's face it. A robot just isn't a robot unless it has a face of some sort
    (with apologies to R2D2). In this step, we will attach the parts to build the
    head and face of T.A.R.A.S.
  prefs: []
  type: TYPE_NORMAL
- en: According to Rodney Brooks, founder of Rethink Robotics, robots do not have
    faces just to make them friendly. Faces on robots are used as visual cues for
    humans to pick up on. For example, if a robot moves its head in a certain direction,
    we can safely assume that the robot is analyzing something in that direction.
    When we move the head of T.A.R.A.S, we are giving cues to those around us that
    T.A.R.A.S is looking that way.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a photo of the parts needed to complete the head:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/15c557ce-1c73-4395-813b-8619a0770596.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will now assemble the head of T.A.R.A.S. The following is a list of the
    parts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**: Raspberry Pi camera module'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**B**: Camera mount brace'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C**: Assembled camera mount with servos'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**D**: 3D printed bracket'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**E**: Distance sensor'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**F**: Screw'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To assemble the head, do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Apply small pieces of double-sided foam tape to the Raspberry Pi camera module
    and distance sensor:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/ba566c64-a12f-4435-9c5b-f978f980068c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Stick the Raspberry Pi camera module and distance sensor in place in the appropriate
    places on the 3D printed bracket (see the following photo for clarification):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/2db37d5e-c365-4453-9a65-748ab09d07b3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Slide the assembly into place on the assembled camera mount and screw it into
    place (see the following photo for clarification):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/ac938a4b-5a96-4efd-94e8-fce25cf85af5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Add female-to-female jumpers to the distance sensor''s pins. Here, I have used
    a four-pin connector to 4 individual pins. You may use separate jumpers instead:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/5a76c2d7-ff97-40ec-8bcd-17ec77c3d6f1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Turn the assembled piece around and apply the sticker for teeth:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/011f8ceb-3127-447a-b352-03e0498f3c54.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 5 – Assembling the DC motor plate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The DC motor plate is at the back of T.A.R.A.S and houses the DC motor driver
    that moves the wheels. The DC Barrel Jack and tail light LEDs also sit on the
    DC motor plate. We will start this step by creating the tail light LEDs.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following photo shows the parts that are needed to make the tail light
    LEDs:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/3bf3391b-fd10-451b-9a8e-f87b2e4c5c59.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following is a list of the parts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**: Red jumper wires (one end must be female)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**B**: Brown jumper wires (one end must be female)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C**: Red LED'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**D**: Green LED'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**E**: 330 Ohm resistors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**F**: Heat shrink'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following are the steps to create the LED tail lights:'
  prefs: []
  type: TYPE_NORMAL
- en: Solder a 330 Ohm resistor to the anode (longer leg) of the LED.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Apply heat shrink to the connection to provide strength and insulation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Strip one end of a red jumper wire (make sure that the other end is female)
    and solder it to the end of the resistor. This is the positive end of the assembly:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/90fb2cdb-e6f4-45c9-85de-732f8938f539.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Apply heat shrink over the entire resistor:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/4659ec3e-a64c-4481-be31-14f1d03bf841.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Solder a brown wire to the cathode and apply heat shrink (in this photo, we
    show a red LED with an extended brown wire). This is the negative end of the assembly:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/cc7440c0-7751-4ed8-8035-83d94a75cee4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have completed the assembly of the two tail lights, let''s put
    the DC motor board together. The following is a photo of the pieces we need to
    put the DC motor board together:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/9277defa-8ea8-4dd4-87a1-2de3937a3fd3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following is a list of the parts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**: Red tail light'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**B**: Green tail light'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C**: Short power wire'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**D**: Motor driver board'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**E**: DC motor plate (laser cut)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**F**: LED holders'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**G**: DC barrel jack'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**H**: 40 mm standoffs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eight M3X10 bolts (not shown)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Four M3 nuts (not shown)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zip ties (not shown)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s start putting it together:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Screw the 40 mm standoffs (**H**) to **E** using four 10 mm M3 bolts. Refer
    to the following photo for the proper orientation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/239e3c1c-63b2-43e1-acba-5829f74284a1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Screw the motor driver board (**D**) to **E** using four 10 mm M3 bolts and
    nuts. Refer to the following photo for the proper orientation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/60030ea6-e7e6-4eca-af03-6571d7c8beba.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here is the side view:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/973a1d78-3237-4bf6-892e-38b1a6364122.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Attach wire **C** to the DC barrel jack (**G**) ports. Make sure that the red
    wire goes to positive and that the black goes to negative. Attach the other end
    of wire **C** into the motor driver board (**D**). Make sure that the red wire
    goes to VCC and that the black wire goes to GND. Secure the DC barrel jack (**G**)
    to the DC motor plate (**E**) with zip ties. See the following photo for clarification:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/a705ff16-c7c6-4fe4-b4cf-3de6501d3438.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here is the wiring diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e4bfee31-dc2f-435d-87e2-0e76a59b343a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Alternatively, you may use an AA battery four-pack for power. Be sure to follow
    the same wiring with the red wire connected to VCC and the black wire connected
    to GND:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/0ef07af9-254e-42cb-8d80-09ee55760833.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Thread the tail light (**B**) through the LED holes and through an LED holder
    (**F**):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/d76c25ca-ffcf-47bd-b669-9ecaab88062e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Push the LED holder (**F**) into place. If the hole is too tight, use a small
    file to make the hole a little bigger (the LED holder should fit in tight). Repeat
    for the red tail light:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/38e3629f-3b4b-43d2-a5a7-fda32c26e074.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 6 – Attaching the motors and wheels
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this step, we will begin attaching parts to the chassis. We will start by
    securing the wheel mounts, followed by the motors. The wheel mounts we will use
    in this step are the 3D printed ones.
  prefs: []
  type: TYPE_NORMAL
- en: 'The parts needed for this step are shown in the following photo:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/5f890aae-169b-4f3e-9bb2-02b5be256ff2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following is a list of the parts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**: Wheels'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**B**: Motors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C**: Alternative wheel mounts (laser cut)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**D**: Wheel mounts (3D printed)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**E**: Robot car chassis (laser cut)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eight M3 10 mm bolts (not shown)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eight M3 30 mm bolts (not shown)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 16 M3 nuts (not shown)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s start putting it together:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the 10 mm M3 bolts and nuts, attach each wheel mount (**D**) to the chassis
    (**E**) so that the head of the bolt sinks flat into the wheel mount (**D**).
    Refer to the following photo for clarification:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/d8593bd5-ee03-4dd5-ad13-c7e8781d71c8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Using 30 mm M3 bolts and M3 nuts, mount the motors (**B**) onto the chassis
    (**E**) by using the wheel mount (**D**). Ensure that the head of the bolt is
    sunk flat. Refer to the following photo for clarification:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/d7114241-77a4-4119-ac53-e90921cdc459.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Alternatively, you may use part **C** instead of part **D** to mount the wheels.
    See the following photo for clarification:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/755bec60-4da7-45c5-89c6-34fe0c3ce9e4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Attach the wheels (**A**) to the motors (**B**):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/de1d6e9d-4ab8-4576-8698-1c3406982398.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 7 – Wiring up the motors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, we will attach the motor drive plate assembly and wire up the wheel motors:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Start by securing the DC motor plate assembly from step 5 to the top of the
    chassis using four M3 10 mm bolts. Be sure to thread the wires from the wheel
    motors through the central hole. The tail light LEDs should go to the back of
    the robot car. See the following photo for clarification:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/711e93ff-8aea-4af9-b220-4611a869bf80.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Install the wires from the wheel motors into terminal blocks OUT1, OUT2, OUT3,
    and OUT4 on the motor driver board. The right wires should be connected to OUT1
    and OUT2 and the left wires should be connected to OUT3 and OUT4\. At this point,
    it does not matter which of the right wires goes to OUT1 or OUT2 (or left wires
    regarding OUT3 and OUT4). See the following photo for clarification:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/2de9f44c-65e1-4aa4-bf57-dd7926e5270a.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 8 – Attaching the camera mount, Raspberry Pi, and Adafruit servo board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The robot car is starting to look like a robot car. In this step, we will attach
    the camera mount (or the head of T.A.R.A.S) and Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: We will start with Raspberry Pi. This is where we must be a little creative
    in how we mount Raspberry Pi and the Adafruit servo board to the chassis. The
    Adafruit servo board is an amazing little board, but the kit lacks the standoffs
    needed to keep part of the board from touching Raspberry Pi. I found it difficult
    to put an M3 bolt through the mounting holes on the board. My solution was to
    use 30 mm of female-to-male standoff to attach Raspberry Pi to the chassis and
    a 10 mm female-to-female standoff to separate Raspberry Pi from the Adafruit servo
    board.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a photo of Raspberry Pi with some standoffs I gathered:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/2cb70178-957b-470f-ae89-85e59daf2dd9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here are the components in the above image:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**: 15 mm female-to-male nylon standoff'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**B**: 10 mm female-to-female nylon standoff'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C**: Raspberry Pi'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To create this circuit do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Create four 30 mm female-to-male standoffs by screwing one end of **A** into
    another. Screw the **B** standoffs onto the **A** standoffs through Raspberry
    Pi (see the following photo for clarification):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/93c4d596-eaf6-4ab9-aaf4-71ae304f83d8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Secure Raspberry Pi to the chassis using four 10 mm M3 bolts:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/322079c1-7928-4f04-a05c-da1660fa0cfb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let''s attach the camera mount, hook up the camera, and install the Adafruit
    servo board:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Attach the camera mount to the front of the chassis using four 10 mm M3 screws
    and M3 nuts (see the following photo for clarification):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/86ac58d3-1cee-4450-ab02-51a4fdfafbb9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Insert the ribbon cable from the camera module through the appropriate opening
    of the Adafruit servo board (see the following photo for clarification):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/39566e38-0af6-4300-b297-977550b357a4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Secure the Adafruit servo board onto Raspberry Pi:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/c55672a9-c12e-463e-bb57-b6bf73c896f2.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 9 – Attaching the buzzer and voltage divider
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The final components to install on the chassis are the buzzer and voltage divider.
    We need the voltage divider so that we can supply 3.3V to the Raspberry Pi from
    the echo pin of the distance sensor. For the buzzer, we are using an active buzzer.
  prefs: []
  type: TYPE_NORMAL
- en: An active buzzer omits a sound when a DC voltage is applied to it. Passive buzzers
    require an AC voltage. More coding is required for a passive buzzer. Passive buzzers
    are more like little speakers and, as such, you can control the sound coming from
    them.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/0eb0829c-0678-4a30-8051-cdde32de77da.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following are the components that are needed to complete this step:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**: Mini breadboard'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**B**: Brown female-to female jumper wire'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C**: Red female-to-female jumper wire'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**D**: 470 Ohm resistor'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**E**: 330 Ohm resistor'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**F**: Active buzzer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Follow the below steps to complete the circuit :'
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a voltage divider, place the 330 Ohm (**E**) and 470 Ohm (**D**)
    resistors in series on the breadboard (**A**):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/8cf75624-efcb-480b-86bc-8aa674a3697a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Connect the red jumper (**C**) to the positive terminal of the buzzer and the
    brown jumper (**B**) to the other terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/47b068ea-37a5-4de1-91b5-35967c2f7122.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Install the buzzer (**F**) in the appropriate hole on the chassis. Using double-sided
    foam tape, attach the mini breadboard (**A**) to the front of the chassis (see
    the following photo for clarification):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/7c9e8d6d-393d-44c9-8efc-144dca4c80dd.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 10 – Wiring up T.A.R.A.S
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now for the part you have been waiting for: hooking up all the wires! OK, maybe
    sorting through a rat''s nest of wires to make sense of them is not your idea
    of a good time. However, with a little patience this step, will be over before
    you know it.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Referring to the following wiring diagram, connect all the wires to their appropriate
    places. The power and motor connections to the motor driver board are not included
    in our wiring diagram as we took care of that in step 7,Wiring up the motors.
    I have taken care to group wire colors by their uses. Please note that the wiring
    diagram is not to scale:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a5bb3926-7d5d-4659-8245-6c8bb35c1d92.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To wire up T.A.R.A.S, perform the following connections:'
  prefs: []
  type: TYPE_NORMAL
- en: Pin five from Servo HAT to In1 on the L298N (motor board)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pin six from Servo HAT to In2 on the L298N (motor board)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pin 27 from Servo HAT to In3 on the L298N (motor board)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pin 22 from Servo HAT to In4 on the L298N (motor board)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trig from HC-SR04 (distance sensor) to pin 17 on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Echo from HC-SR04 (distance sensor) to the left-hand side of the 330 Ohm resistor
    on the mini breadboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VCC from HC-SR04 (distance sensor) to 5 Volts on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Output from the voltage divider to pin 18 on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GND from HC-SR04 to the right-hand side of the 470 Ohm resistor on the mini
    breadboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GND from the mini breadboard to the GND on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: +5V from the Servo HAT power terminal (left of the HAT) to +5V on the motor
    driver board (use a thicker wire)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GND from the Servo HAT power terminal (left of the HAT) to the GND on the motor
    driver board (use a thicker wire)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Servo from the bottom of the camera mount (pan) to servo zero on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Servo from the middle of the camera mount (tilt) to servo one on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red wire from green tail light to pin 20 on the Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brown wire from green tail light to GND on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red wire from red tail light to pin 21 on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brown wire on red tail light to GND on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red wire from active buzzer to pin 12 on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brown wire from active buzzer to GND on Servo HAT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To power up T.A.R.A.S, we will use two portable power supplies. For Raspberry
    Pi, we will use a standard USB portable power pack. For the motor driver board
    and Servo HAT, we will use a rechargeable 7.4V battery. To install the batteries,
    do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the two batteries we will be using for our robot car. The
    one on the left is for Raspberry Pi and uses a USB-to-micro-USB connector. The
    one on the right is the motor driver board and uses a standard DC jack:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/c380fe13-1eb8-4068-86b0-3bfef697dbfa.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Apply peel-and-stick velcro strips to both batteries and to the chassis and
    put the batteries into place on the chassis:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/15fb0978-cab4-4754-89e6-6fd3b99ece93.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After some much-needed grooming (cleaning up the wires), T.A.R.A.S is ready
    to go:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/aad6712d-7d7c-4eec-8074-0cae03d5e2dd.png)'
  prefs: []
  type: TYPE_IMG
- en: Learning how to control the robot car
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 14](eff0f7cb-f99b-45d5-8781-42c841bd2fd9.xhtml), *Controlling the
    Robot Car Using Python*, we will start writing code to control T.A.R.A.S. Before
    we jump into the code, it's a good idea to look at how we may set up Raspberry
    Pi to access the interfaces that are needed. We should install the libraries we
    need to use to create the control code.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring our Raspberry Pi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To ensure that we have the inferences that we require enabled for the robot
    car, do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Application Menu | Preferences | Raspberry Pi Configuration
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Interfaces tab
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enable Camera, SSH, and I2C. You may need to restart your Raspberry Pi:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/2960257c-6d2e-4ecd-84d8-9e109d85b58a.png)'
  prefs: []
  type: TYPE_IMG
- en: If you haven't changed the default password for the `pi` user, you may get a
    warning about it after you enable SSH. It's a good idea to change the password
    from the default. You may change it under the System tab in the Raspberry Pi Configuration
    tool.
  prefs: []
  type: TYPE_NORMAL
- en: Python library for Adafruit Servo HAT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to access the Adafruit Servo HAT, you must download and install the
    library:'
  prefs: []
  type: TYPE_NORMAL
- en: '`git` is used to download the Adafruit Servo HAT library from the internet.
    Open up a Terminal in Raspbian and type the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If `git` is already installed, you will get a message indicating that. If not,
    proceed to install `git`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Type the following into the Terminal to download the library:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Type the following to change directories:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Install the library with the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The library has been installed successfully to Tools | Manage Packages in Thonny.
    You should see it listed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/7f1d3d07-ab79-461f-b682-777f4db5a4a8.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we built our robot car, T.A.R.A.S. We started by outlining
    the parts and then proceeded to put it all together. If you have never built a
    robot before, then congratulations! You've officially entered the world of robotics.
    Where you take it from here is up to you.
  prefs: []
  type: TYPE_NORMAL
- en: For the rest of this book, we will be programming T.A.R.A.S to perform tasks.
    In [Chapter 14](eff0f7cb-f99b-45d5-8781-42c841bd2fd9.xhtml), *Controlling the
    Robot Car Using Python*, T.A.R.A.S will be called upon to engage in a secret mission.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True or false? T.A.R.A.S stands for Technically Advanced Robots Are Superior.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the difference between an active buzzer and a passive one?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True or false? T.A.R.A.S has cameras for eyes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What does the motor driver board do?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the purpose of the Adafruit Servo HAT?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How long should it take to 3D print a wheel brace?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the purpose of a robot face?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True or false? Velcro strips are a great way to secure batteries onto the chassis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
