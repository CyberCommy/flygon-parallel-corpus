- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The book begins with an introduction to the new features of C# 7 and .NET Core
    2.0, and how they help improve the performance of your application. The book will
    then help you understand the core internals of .NET Core, which includes the compilation
    process, garbage collection, utilizing multiple cores of the CPU to develop highly-performant
    applications, and measuring performance using a powerful library for benchmarking
    applications named BenchmarkDotNet. We will learn about developing applications
    and programs using multithreading and asynchronous programming, and how to use
    those concepts to build efficient applications for faster execution. Next, you'll
    understand the importance of data structure optimization and how it can be used
    efficiently. We move on to the patterns and best practices to use when designing
    applications in .NET Core, along with how to utilize memory in an effective way
    and avoid memory leakage. After that, we'll talk about implementing security and
    resiliency in .NET Core applications, and we'll use the Polly framework to implement
    a circuit breaker, and retry and fallback patterns, along with certain middleware
    to harden the HTTP pipeline. We'll also implement security such as authorization
    and authentication using the Identity framework. Moving ahead, we will learn about
    the microservices architecture and see how we can use it to create applications
    that are modular, highly scalable, and independently deployable. We end with App
    Metrics, and will learn how to use it to monitor the performance of your application.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for .NET developers who want to improve the speed of their application's
    code or who simply want to take their skills to the next level, where they can
    develop and produce quality applications that are not only performant but also
    adhere to the industry best practices. Basic C# knowledge is assumed.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0020.html#J2B80-84c100e6bea3438e8844d99ae7f5dfa9), *What''s
    New in .NET Core 2 and C# 7?*, discusses the .NET Core Framework and covers some
    improvements that were introduced with .NET Core 2.0\. We will also look into
    the new features of C# 7 and see how we can write cleaner code and simplify syntactic
    expressions. Lastly, we cover the topic of writing quality code. We''ll see how
    we can leverage the Code analysis feature of Visual Studio 2017 to add analyzers
    to our project and improve code quality.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0059.html#1O8H60-84c100e6bea3438e8844d99ae7f5dfa9), *Understanding
    .NET Core Internals and Measuring Performance*, discusses the core concepts of
    .NET Core, including the compilation process, garbage collection, building highly-performant
    .NET Core applications utilizing multiple cores of the CPU, and publishing an
    application using a release build. We will also explore the benchmarking tool
    that is highly used for code optimization and provides results specific to in-memory
    objects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0078.html#2ACBS0-84c100e6bea3438e8844d99ae7f5dfa9), *Multithreading
    and Asynchronous Programming in .NET Core*, explores the core fundamentals of
    multithreaded and asynchronous programming. The chapter starts with the basic
    differences between multithreaded and asynchronous programming and walks you through
    the core concepts. It explores APIs and how to use them when writing a multithreaded
    application. We will learn how the Task Programming Library can be used to serve
    asynchronous operations, and how to implement the Task Asynchronous pattern. Lastly,
    we will explore parallel programming techniques and some of the best design patterns
    being used.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0107.html#361C60-84c100e6bea3438e8844d99ae7f5dfa9), *Data Structures
    and Writing Optimized Code in C#*, outlines the core concepts of data structures,
    the types of data structure, and their advantages and disadvantages, followed
    by the best possible scenarios to which each data structure is suited. We also
    learn about the Big O notation, which is one of the core topics to consider when
    writing code and helps developers check the quality of the code and performance.
    Lastly, we will look into some best practices and cover topics such as boxing
    and unboxing, string concatenation, exception handling, `for` and `foreach`, and
    delegates.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0129.html#3R0OI0-84c100e6bea3438e8844d99ae7f5dfa9), *Designing
    Guidelines for .NET Core Application Performance*, showcases some coding principles
    that make application code look clean and easy to understand. If the code is clean,
    it offers other developers a way to understand it completely and helps in many
    other ways. We will learn some basic design principles that are considered to
    be part of the core principles when designing applications. Principles such as
    KISS, YAGNI, DRY, Separation of Concerns, and SOLID are highly essential in software
    design, and caching and choosing the right data structure have a significant impact
    on performance, and can improve performance if they are properly used. Lastly,
    we will learn some best practices that should be considered when handling communication,
    resource management, and concurrency.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0161.html#4PHAI0-84c100e6bea3438e8844d99ae7f5dfa9), *Memory
    Management Techniques in .NET Core*, outlines the underlying process of how memory
    management is done in .NET. We will explore the debugging tool, which can be used
    by developers to investigate the object''s memory allocation on the heap. We will
    also learn about memory fragmentation, finalizers, and how to implement a dispose
    pattern to clean up resources by implementing the `IDisposable` interface.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0173.html#54VHA0-84c100e6bea3438e8844d99ae7f5dfa9), *Securing
    and Implementing Resilience in .NET Core Applications*, takes you through resiliency,
    which is a very important factor when developing highly-performant applications
    in .NET Core. We will learn different policies and use the Polly framework to
    use those policies in .NET Core. We will also learn about safe storage mechanisms
    and how to use them in the development environment in order to keep sensitive
    information separate from the project repository. At the end of this chapter,
    we will learn some security fundamentals, which include SSL, CSRF, CORS, security
    headers, and the ASP.NET Core Identity framework, in order to protect ASP.NET
    Core applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0205.html#63G3A0-84c100e6bea3438e8844d99ae7f5dfa9), *Microservices
    Architecture*, looks at the most quickly evolving software architecture for developing
    highly performant and scalable applications for the cloud based on microservices.
    We will learn some of the core fundamentals of the microservices architecture,
    its benefits, and patterns and practices used when designing the architecture.
    We will discuss certain challenges faced when decomposing enterprise applications
    into the microservices architecture style and learn patterns such as API composition
    and CQRS in order to address them. Later in the chapter, we will develop a basic
    application in .NET Core and discuss the solution''s structure and the components
    of microservices. Then we will develop identity and vendor services.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0247.html#7BHQU0-84c100e6bea3438e8844d99ae7f5dfa9), *Monitoring
    Application Performance Using Tools*, dives into key performance metrics that
    are essential for monitoring an application''s performance. We will explore and
    set up App Metrics, which is a free tool that is cross-platform and provides various
    extensions that can be used to achieve extensive reporting. We will go through
    a step-by-step guide on how to configure and set up App Metrics and related components,
    such as InfluxDb and Grafana, which is used to store and view telemetry in the
    Grafana web-based tool and integrate it with ASP.NET Core application.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The readers should be equipped with the following configurations of the environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Development Environment**: Visual Studio 2015/2017 Community Edition'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Execution Environment**: .NET Core'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**OS Environment**: Windows or Linux'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/C-Sharp-7-and-NET-Core-2-High-Performance/](https://github.com/PacktPublishing/C-Sharp-7-and-NET-Core-2-High-Performance/). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/CSharp7andNETCore2HighPerformance_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/CSharp7andNETCore2HighPerformance_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk on your system."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  prefs: []
  type: TYPE_NORMAL
