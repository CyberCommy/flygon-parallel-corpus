- en: Chapter 9. Customizing IPCop
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: IPCop is one of the most full-featured SOHO firewalls on the market and by now
    you should be familiar with most of the features, but you may have noticed some
    shortfalls. There may be areas where IPCop doesn't perform a function in exactly
    the right way or doesn't have a specific function we require. So what can we do?
    We can customize IPCop with some essential addons.
  prefs: []
  type: TYPE_NORMAL
- en: Addons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At its core IPCop is a collection of Linux-based tools held together with impressive
    script-based glue. So it's not surprising that we can modify, extend, and improve
    the system to suit our needs. This is where the community part of open-source
    software becomes important as we find that users of the system have developed
    a variety of addons that can be installed and used on IPCop.
  prefs: []
  type: TYPE_NORMAL
- en: Addons are generally developed by third parties, i.e. people other than the
    IPCop developers. They are usually developed in order to fill some gap that a
    user found with the software, and then released so that other users can benefit
    from the work and solve similar problems.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will take a look at some of the common addons, what they offer, and how
    we can use them. We can find links to the addons on the IPCop website: [http://ipcop.org/modules.php?op=modload&name=phpWiki&file=index&pagename=IPCopAddons](http://ipcop.org/modules.php?op=modload&name=phpWiki&file=index&pagename=IPCopAddons).'
  prefs: []
  type: TYPE_NORMAL
- en: Firewall Addons Server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Firewall addons server allows us a simple, user-friendly and web-based system
    for managing some addons to IPCop. It is necessary to install this in order to
    use the addons in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: We can download the firewall addons server package from [http://firewalladdons.sourceforge.net/](http://firewalladdons.sourceforge.net/).
  prefs: []
  type: TYPE_NORMAL
- en: 'At the time of writing we shall be using the file: [http://heanet.dl.sourceforge.net/sourceforge/firewalladdons/addons-2.3-CLI-b2.tar.gz](http://heanet.dl.sourceforge.net/sourceforge/firewalladdons/addons-2.3-CLI-b2.tar.gz)'
  prefs: []
  type: TYPE_NORMAL
- en: For later versions this location may change and the following commands relating
    to the filename should be altered to reflect the name of the file downloaded.
  prefs: []
  type: TYPE_NORMAL
- en: First we copy this file to the server using the `scp` command specifying port
    222, which is the IPCop default for SSH access, and specify the root user.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We will be prompted for the password for the root account, which is the password
    we set when installing the IPCop machine.
  prefs: []
  type: TYPE_NORMAL
- en: Now with the file in place we can log in to the IPCop machine and set it up.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**P versus p**'
  prefs: []
  type: TYPE_NORMAL
- en: Notice that a lowercase `-p` is used for the port with `ssh`, and an uppercase
    `-P` with `scp`. This discrepancy can become quite annoying and can lead to hard-to-spot
    typos. If you can't get a connection, check if you are using the correct case
    for the command.
  prefs: []
  type: TYPE_NORMAL
- en: 'After entering the root password we should see the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We now type the following commands to set up the addons server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: After the commands complete, we log in to the IPCop web interface and should
    see an addition to the menu along the top of the page.
  prefs: []
  type: TYPE_NORMAL
- en: '![Firewall Addons Server](img/1361_09_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We will take a look at the few new pages our web interface now has, and the
    added options they offer.
  prefs: []
  type: TYPE_NORMAL
- en: The **ADDONS-NEWS** page shows updates about the firewall addons server and
    the addons it provides. There are no configuration options here other than how
    much news we would like to see. It serves as a general information page using
    important news downloaded from the addons website.
  prefs: []
  type: TYPE_NORMAL
- en: '![Firewall Addons Server](img/1361_09_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The **ADDONS** page gives information about the addons installed and current
    addons available, and allows us to install or remove addons.
  prefs: []
  type: TYPE_NORMAL
- en: '![Firewall Addons Server](img/1361_09_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The **ADDONS-UPDATE** page gives us information on updates for addons in much
    the same way as the **ADDONS** page did about the addons themselves, showing what
    is available, and providing us with a method for installing updates.
  prefs: []
  type: TYPE_NORMAL
- en: '![Firewall Addons Server](img/1361_09_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Installing Addons
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we are familiar with the interface of the firewall addons server, we
    can start installing and using addons. We will begin with SquidGuard, which as
    you might have noticed was installed in the previous screenshots. To install an
    addon we go to the **ADDONS** page and scroll down until we see the addon we would
    like to install. We then click on the **Info** hyperlink on the right-hand side,
    which takes us to a detailed information and download page for the addon. In the
    case of SquidGuard this page is [http://firewalladdons.sourceforge.net/squidguard.html](http://firewalladdons.sourceforge.net/squidguard.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'On this page we get detailed information on the plug-in and are provided with
    download links to the current version; at the time of writing this was: [http://heanet.dl.sourceforge.net/sourceforge/firewalladdons/SquidGuard-1.2.0-GUI-b11.tar.gz](http://heanet.dl.sourceforge.net/sourceforge/firewalladdons/SquidGuard-1.2.0-GUI-b11.tar.gz).
    This may well be updated, and so check the earlier link first!'
  prefs: []
  type: TYPE_NORMAL
- en: We download the addon, which comes in a GZIPPED TAR archive. We then go back
    to the **ADDONS** page, click the **Browse** button, browse to the file we just
    downloaded, click **Upload**, and the addon is installed on the server.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Caution: Sometimes when uploading an addon, especially those such as SquidGuard
    that restart the web server, we don''t have the page being refreshed automatically
    and/or the connection might time out. Hitting **Refresh**, or **Stop** then **Refresh**
    in the browser should bring us back to the **ADDONS** page.'
  prefs: []
  type: TYPE_NORMAL
- en: The process is similar for all other addons that are installed with the firewall
    addons server, and so there is no need for us to repeat the steps later on, when
    we look at other addons and how they work.
  prefs: []
  type: TYPE_NORMAL
- en: Common Addons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will now have a look at the configuration of some of the more common addons
    and how they are used. Since we have SquidGuard installed already, we can begin
    with this addon. We won't cover all of the addons in this text as they are quite
    numerous. We will, however, cover the most common and substantial ones. It's recommended
    that we at least familiarize ourselves with the other addons available, as they
    may fill a requirement we might later come to recognize.
  prefs: []
  type: TYPE_NORMAL
- en: SquidGuard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SquidGuard is a content-filtering plug-in, which can be installed with Squid.
    It is used primarily to block unsuitable content from the Web and can be configured
    with a dynamic set of rules, which include blanket bans of various subjects and/or
    black- and white-listing of sites depending on their perceived suitability for
    the audience on our network.
  prefs: []
  type: TYPE_NORMAL
- en: 'The SquidGuard configuration screen looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![SquidGuard](img/1361_09_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As we can see, we can filter on a variety of subjects, which are pre-defined
    in the SquidGuard configuration.
  prefs: []
  type: TYPE_NORMAL
- en: In the screenshot above, we have chosen to filter advertisements, porn, violence,
    and gambling related sites from our network.
  prefs: []
  type: TYPE_NORMAL
- en: We have also configured a few other options to aid in controlling our network
    usage. We have determined that the machine at IP address **10.0.0.201** is a privileged
    machine (possibly our own or an administrator's machine), which is allowed to
    bypass the filters and access sites indiscriminately. **10.0.0.202** is in the
    **Banned IP range** and is a machine that isn't allowed to access any resources
    on the Internet through this web proxy. The **Network IP Range** denotes all other
    users on the network that will be subjected to the other rules configured earlier.
    Notice that the **Network IP Range** includes machines **200-250**; all the other
    ranges can be specified similarly allowing us to include more than one IP address
    in the rule if necessary.
  prefs: []
  type: TYPE_NORMAL
- en: 'We also have some other important and powerful configuration options here.
    If we allow white-listing and then click on the **Edit** box, we see the following
    screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![SquidGuard](img/1361_09_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: By entering a URL and clicking **Add** we allow access to this domain regardless
    of any other rules in place. In this case the URL [www.reboot-robot.net](http://www.reboot-robot.net)
    has been white-listed.
  prefs: []
  type: TYPE_NORMAL
- en: The blacklist configuration screen is exactly the same and any domains listed
    there are blocked by SquidGuard except the privileged IP addresses.
  prefs: []
  type: TYPE_NORMAL
- en: Other than the direct configuration of what to block and not to block, we have
    some other options that require some explanation.
  prefs: []
  type: TYPE_NORMAL
- en: '**Enable Logging:** Allows us to log connections allowed and denied by SquidGuard'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enable Ad Logging:** Allows more detailed logging of the advertisements blocked'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mail Logs:** Log information on mail passing through the firewall'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automatic Update:** Download automatic updates of URLs for blocking from
    the SquidGuard website'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mail Server:** Server to be used when sending mail to the administrator'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Administrator Email:** The email address to send logs to'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mail username:** Username to be used if mail server requires authentication'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mail Password:** Password to be used as earlier'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Mail Settings**'
  prefs: []
  type: TYPE_NORMAL
- en: You will notice these mail settings as part of any addon that offers communication
    with a network administrator. It's worth keeping this information handy and possibly
    creating an email account/address specifically for our IPCop machine.
  prefs: []
  type: TYPE_NORMAL
- en: The only boxes that are required on this page are our **Network IP Range** and
    our **Administrator Email**; everything else can be configured optionally (optional
    fields have a blue star beside them).
  prefs: []
  type: TYPE_NORMAL
- en: At the bottom of the page we have the **Start/Restart SquidGuard** button, which
    is (admittedly non-intuitively) to be used when we have configured the service
    to our needs, and want the configuration saved and used on the running machine.
    The **Update Blacklists** button allows us to download updated blacklists for
    the content-filtering options.
  prefs: []
  type: TYPE_NORMAL
- en: After configuring SquidGuard, we should now have an effective content filtering
    system to help ensure that users on the network don't access websites considered
    undesirable.
  prefs: []
  type: TYPE_NORMAL
- en: 'What if we want to monitor as well as control? The attentive reader might have
    realized while we enabled the logging options that there should be access to these
    logs, possibly in the web interface. If we move the mouse above **Logs**, sure
    enough we see **SquidGuard Logs**; clicking on this will give us:'
  prefs: []
  type: TYPE_NORMAL
- en: '![SquidGuard](img/1361_09_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This allows us to view the SquidGuard logs in an interface similar to the default
    logs on the system.
  prefs: []
  type: TYPE_NORMAL
- en: Enhanced Filtering
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Enhanced Filtering addon is one of the most useful addons and addresses
    what is one feature that IPCop is sorely lacking by default. A default installation
    of IPCop will allow all traffic outbound from the Green interface to the other
    interfaces without any filtering. It's often desirable to control the ports and
    IP addresses that a user can access from the Green interface. For example, we
    may want to block all outbound connections except those to the ports websites
    run on. This would allow for default blocking of peer-to-peer filesharing programs
    and instant messaging programs. This is the preferred default setup for a firewall,
    which we discussed in[Chapter 3](ch03.html "Chapter 3. Deploying IPCop and Designing
    a Network"). Enhanced Filtering also allows for MAC-based filtering of the wireless
    connection.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Port and IP-Based Blocks Aren''t Completely Effective**'
  prefs: []
  type: TYPE_NORMAL
- en: Be aware that blocking the port an application is using doesn't prevent users
    using that application on another port or through a proxy server located outside
    the IPCop protected network. Similarly IP-based blocks can be overcome by using
    proxies. Application-layer filtering adds to this protection, but without stringent
    control of the internal resources on the network, most network-level filtering
    mechanisms can be bypassed.
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information refer to the Enhanced Filtering web page: [http://firewalladdons.sourceforge.net/filtering.html](http://firewalladdons.sourceforge.net/filtering.html).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The version used at the time of writing was downloaded from the following URL
    and is installed in a manner similar to SquidGuard:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://heanet.dl.sourceforge.net/sourceforge/firewalladdons/EnhancedFiltering-1.0-GUI-b2.tar.gz](http://heanet.dl.sourceforge.net/sourceforge/firewalladdons/EnhancedFiltering-1.0-GUI-b2.tar.gz)'
  prefs: []
  type: TYPE_NORMAL
- en: The following figure shows the Enhanced Filtering configuration screen, which
    can be accessed by clicking on **Firewall | Enhanced Filtering:**
  prefs: []
  type: TYPE_NORMAL
- en: '![Enhanced Filtering](img/1361_09_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here we can **Enable enhanced filtering** or **Disable** it as well as **Set
    default deny on GREEN** network interface. We discussed default deny when we introduced
    firewalls, and why it's an easier-to-manage and more secure setup.
  prefs: []
  type: TYPE_NORMAL
- en: We can also add specific rules to the firewall for connections between networks.
    We have to provide the source and destination IP addresses, source netmask and
    destination netmask, network, and the destination port.
  prefs: []
  type: TYPE_NORMAL
- en: An example would be allowing only our mailserver to connect outwards to our
    ISP's mailserver in order to relay mail for the network. We would specify the
    **Source IP** address as that of our mail server and the **Destination IP** address
    as that of the ISP's mailserver, also setting the port to **25**. This means that
    our mail server can relay mail to the ISP but no other machines on the network
    can. This would help prevent our users using outside mail accounts, and prevent
    machines with malware sending copies of the malware or spam out, without passing
    through our mail server and potentially mail filtering software.
  prefs: []
  type: TYPE_NORMAL
- en: The main advantage as we can now see is that we can control very specifically
    which servers and services on those servers our local network machines can access,
    which is functionality that IPCop itself doesn't provide by default.
  prefs: []
  type: TYPE_NORMAL
- en: Blue Access
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another option provided by the Enhanced Filtering addon is the ability to filter
    the Blue (wireless) interface based on IP address and MAC address. This is a crude
    but fairly effective way of limiting access to the wireless interface to machines
    with a specific MAC address. A MAC address is unique to a Network Interface Card
    and is a fairly useful method for identifying a card. MAC address filtering is
    by no means an alternative to encrypting the wireless connection, but is a useful
    secondary measure.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**MAC Spoofing**'
  prefs: []
  type: TYPE_NORMAL
- en: MAC addresses are easily spoofed with tools existing for most common OSs to
    modify the MAC address of a NIC. The MAC address isn't modified in the device
    itself, but in the operating system. Linux, for example, can do this with its
    default network configuration tool `ifconfig`, and many tools exist for Windows
    to accomplish the same task. There is an addon for IPCop that provides MAC spoofing
    functionality in the GUI for the Red interface.
  prefs: []
  type: TYPE_NORMAL
- en: The **Blue Access** configuration screen can be accessed by clicking **Firewall
    | Blue Access:**
  prefs: []
  type: TYPE_NORMAL
- en: '![Blue Access](img/1361_09_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The **Source IP** and **Source MAC Address** are filled with the information
    of the machine being allowed to access the network from this interface, and when
    the **Enabled** checkbox is ticked, only the machines that match the list will
    be allowed to access any network resources. The machines in the **Devices on Blue**
    list are those that have been allowed access.
  prefs: []
  type: TYPE_NORMAL
- en: LogSend
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: LogSend is an addon that allows us to send logs from the IPCop machine to various
    administrators and/or to the DShield service. This is useful as it allows deeper
    analysis of our logs using external tools, without configuring a syslog server.
  prefs: []
  type: TYPE_NORMAL
- en: 'The LogSend web page is found at: [http://firewalladdons.sourceforge.net/logsend.html](http://firewalladdons.sourceforge.net/logsend.html).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The current version used at time of writing is: [http://heanet.dl.sourceforge.net/sourceforge/firewalladdons/Logsend-1.0-GUI-b3.tar.gz](http://heanet.dl.sourceforge.net/sourceforge/firewalladdons/Logsend-1.0-GUI-b3.tar.gz).'
  prefs: []
  type: TYPE_NORMAL
- en: The **LogSend Configuration** page is accessed by clicking **Logs | LogSend**.
  prefs: []
  type: TYPE_NORMAL
- en: '![LogSend](img/1361_09_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The configuration for **LogCheck** is relatively simple; we can choose to enable
    the service, enable mailing of **DansGuardian** (provided by the Cop+ addon) logs,
    **Proxy** logs, and **Snort** logs. Each of these could go to a different administrator
    but it's very common for the same email address to be used in each as shown in
    the figure above.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**DShield**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The **DShield** option may need some explanation. DShield ([http://www.dshield.org](http://www.dshield.org))
    is a service proved by SANS (System Administration, Networking, and Security Institute:
    [http://www.sans.org](http://www.sans.org)). It collates and analyses logs from
    thousands of systems around the world in order to get details on the most commonly
    attacked ports and the worst offending attacking IP addresses. This is in an effort
    to allow system administrators to be aware of the current state of the Internet
    at any point in time. Any logs sent to DShield will be added to this database,
    and if we sign up for a DShield account (not required for sending logs), we can
    also use its online analyzing tools to monitor the data from our own Intrusion
    Protection Systems.'
  prefs: []
  type: TYPE_NORMAL
- en: The DShield configuration function in LogSend enables easy use of the DShield
    service so that we can send our logs. All that is required is we enable DShield,
    and set a time zone and a return email address to use when sending the logs. If
    we also provide our user ID, we can ensure that the logs are attributed to our
    account and available to us on the DShield web interface. The **DShield Administrator**
    is the address to which any log information will be sent.
  prefs: []
  type: TYPE_NORMAL
- en: We also have the familiar mailserver options where we can provide the mailserver
    to use, the sender, and any authentication credentials required. We have seen
    these options in other areas of IPCop.
  prefs: []
  type: TYPE_NORMAL
- en: Copfilter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Copfilter extends IPCop from a firewall into a security appliance similar to
    those provided by Symantec and MacAfee, which attempt to protect our network from
    all manner of malware. Copfilter will monitor web, FTP, and email traffic in order
    to detect and block malware it finds within the data.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Copfilter web page is: [http://www.copfilter.org](http://www.copfilter.org).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The version used at time of writing was: [http://heanet.dl.sourceforge.net/sourceforge/copfilter/copfilter-0.82.tgz](http://heanet.dl.sourceforge.net/sourceforge/copfilter/copfilter-0.82.tgz).'
  prefs: []
  type: TYPE_NORMAL
- en: Copfilter installation is done directly and not via the addons interface. It
    is installed in much the same way that the firewall addons server was installed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'We should then see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: It gives us a warning that installing Copfilter reconfigures the firewall and
    may alter some of its functionality, possibly reducing security.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Complexity and Security**'
  prefs: []
  type: TYPE_NORMAL
- en: This brings in an important point we should consider when installing addons.
    The more code and features we add to a firewall, the more scope there is for something
    to go wrong. Software bugs lead to crashes and more importantly security compromises.
    It's important to weigh the value given by a feature against the potential risk
    of having additional code in the system before we fill the system up with a variety
    of addons.
  prefs: []
  type: TYPE_NORMAL
- en: 'Copfilter should now install, and we will see a few messages scroll by as it
    sets itself up. We should see the following message when Copfilter is completely
    installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: If we now log into the web interface, we should see new menu options added to
    the IPCop configuration site. We will have a look at them in the next few sections.
  prefs: []
  type: TYPE_NORMAL
- en: '![Copfilter](img/1361_09_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Status
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **Status** screen gives us information on the tools installed with Copfilter
    (yet another collection of powerful tools in a simple package!). You can start
    and stop all services here. By clicking on the **Virus Quarantine** and **Spam
    Quarantine** buttons, you can see the items that have been held there by the scanning
    software.
  prefs: []
  type: TYPE_NORMAL
- en: '![Status](img/1361_09_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**monit:** Allows us to monitor the system in more detail than the basic status
    information provided by IPCop, with management of services as an important addition
    ([http://www.tildeslash.com/monit/](http://www.tildeslash.com/monit/)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**p3Scan:** Proxy server for email (**POP3**) to scan email for malware ([http://p3scan.sourceforge.net/](http://p3scan.sourceforge.net/)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**ProxySMTP:** Similar to **p3scan** but used for scanning SMTP.'
  prefs: []
  type: TYPE_NORMAL
- en: '**HAVP:** Proxy for HTTP, which allows scanning of websites for malware ([http://www.server-side.de/](http://www.server-side.de/)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Privoxy:** Another HTTP proxy, which focuses more on privacy and advertisements
    ([http://www.privoxy.org](http://www.privoxy.org)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**frox:** Transparent FTP proxy, which allows features similar to **HAVP**
    and **Privoxy** against the FTP protocol ([http://frox.sourceforge.net](http://frox.sourceforge.net)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Spamassassin:** Extremely powerful and customizable anti-spam software. This
    is one of the most common anti-spam solutions used by ISPs ([http://spamassassin.apache.org/](http://spamassassin.apache.org/)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**ClamAV:** Antivirus software, used in conjunction with some of the other
    software to provide a virus scanning engine ([http://www.clamav.net/](http://www.clamav.net/)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Renattach:** Script that recognizes and renames dangerous email attachments
    such as `.exe, .bat`, and `.pif` so as to prevent users accidentally or unintentionally
    opening dangerous files ([http://freshmeat.net/projects/renattach/](http://freshmeat.net/projects/renattach/)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Rules Du Jour:** Used to keep the SpamAssassin rules up to date ([http://www.exit0.us/index.php?pagename=RulesDuJour](http://www.exit0.us/index.php?pagename=RulesDuJour)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**P3PMail:** Acts like p3Scan mentioned earlier; however it detects dangerous
    HTML within emails and removes it ([http://www.exit0.us/index.php?pagename=RulesDuJour](http://www.exit0.us/index.php?pagename=RulesDuJour)).'
  prefs: []
  type: TYPE_NORMAL
- en: Email
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We want to enable all services for the purpose of this book, but if we try to
    do so now, many of the services will fail because we haven't configured our email
    settings yet. If we click on **Copfilter | Email**, we will be presented with
    the familiar **Email** options screen, which we can fill accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: '![EmailCopfilterstatus](img/1361_09_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: With this filled in, we can start enabling and configuring services.
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**monit** is very easy to set up (in Copfilter) and quite a powerful and dependable
    tool. As the **Monitoring** screen (click **Copfilter | Monitoring**) shows, **monit**
    will constantly monitor running services and will restart any failed services
    within 60 seconds. Stopping a service manually will cause monitoring for that
    service to be switched off. To switch monitoring back on for all services, a restart
    of **monit** itself is required.'
  prefs: []
  type: TYPE_NORMAL
- en: We can switch on **monit** in this configuration window. We should switch it
    on just now so that it is available to monitor the other services, so select **On**
    in the drop-down box and click the **Save** button.
  prefs: []
  type: TYPE_NORMAL
- en: POP3 Filtering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: POP3 is a commonly used mail protocol, for receiving mail. If we have users
    pulling email down from an ISP's mail server, then we can configure this screen
    to filter any mail coming in via POP3 and tune it to our needs.
  prefs: []
  type: TYPE_NORMAL
- en: '![POP3 Filtering](img/1361_09_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We should be careful with quarantining email or attachments as this can very
    quickly start to fill space on our hard drive. If we have provisioned a low specification
    machine to use as the IPCop box, then we may have trouble with hard drive space.
    If this begins to cause problems, simply back up the IPCop configuration and reinstall
    on a bigger hard drive.
  prefs: []
  type: TYPE_NORMAL
- en: Configure this screen as shown in the previous figure and then push the **Save
    settings (and restart services)** button. This will enable POP3 scanning. Notifications
    will be sent to the email address we configured in the email screen earlier.
  prefs: []
  type: TYPE_NORMAL
- en: SMTP Filtering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This page at first glance appears the same as the POP3 page but with an SMTP
    slant (and it should be configured identically for our use here). However, as
    we scroll down we see:'
  prefs: []
  type: TYPE_NORMAL
- en: '![SMTP Filtering](img/1361_09_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This gives us some additional options mostly relating to the email server on
    our network. We discussed previously the use of a DMZ and IPCop using the Orange
    network for the DMZ. If we had our email server in a DMZ, we could configure port
    25 (or port 25 on a specific IP) to be forwarded to our email server. Since this
    is the SMTP filtering section and not the port forwarding section, we could also
    filter all email as it goes through the system before it gets near our server.
    This allows us to protect machines in our DMZ from attack and subsequently protects
    our users as the malware-ridden emails won't ever touch their inbox!
  prefs: []
  type: TYPE_NORMAL
- en: The configuration options shown are fairly reasonable levels, unless we require
    whitelisting or have specific quarantining requirements.
  prefs: []
  type: TYPE_NORMAL
- en: HTTP Filter (and FTP)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The HTTP filter is among the most resource-intensive features of Copfilter,
    mainly because HTTP traffic involves large files and quite detailed scanning,
    and because HTTP is one of the most popular protocols in use on most networks.
  prefs: []
  type: TYPE_NORMAL
- en: '![HTTP Filter (and FTP)](img/1361_09_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It's generally a good idea to configure the HTTP proxy as transparent as this
    won't require reconfiguration of the client machines. As noted on this screen,
    this can adversely affect applications passing through the firewall, if the firewall
    becomes very busy. It may not be a good idea to use HTTP filtering on a busy network
    unless the IPCop machine is quite powerful. If you are experiencing slowness when
    using the Internet, disable HTTP filtering as one of the initial troubleshooting
    steps.
  prefs: []
  type: TYPE_NORMAL
- en: The FTP filter is very simple to set up and requires merely a switch from off
    to on. It works in much the same way as the transparent HTTP filter. FTP filter
    is less commonly used as it is a much less popular protocol than HTTP and there
    are many other file transfer methods more popular than FTP now.
  prefs: []
  type: TYPE_NORMAL
- en: AntiSPAM
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In addition to fighting malware, we also have a constant battle against the
    deluge of spam landing in our mailbox daily. Luckily the Copfilter options for
    spam are relatively simple.
  prefs: []
  type: TYPE_NORMAL
- en: '![AntiSPAM](img/1361_09_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once enabled, we can configure the score at which to consider an email as spam.
    Each message is checked for various spam-like traits; the more traits it has,
    the higher the score it gets. If we set this threshold too high, then we will
    allow some spam through, and if we set it too low, we increase the chances of
    false positives. The default works remarkably well and should be used unless a
    large volume of spam is getting through. We can also configure Bayesian filtering
    on this page. However this can be very resource intensive and it's not recommended
    on a box that is also providing many other functions. Turning **on** German rules
    will prevent German language spam coming through the filter; this is provided
    due to a large increase of spam being sent out in German. The option for **Razor,
    DCC, DNSBL** enables blocking based on databases of known spamming sites, these
    can be fairly large and as noted on the configuration screen they may decrease
    performance.
  prefs: []
  type: TYPE_NORMAL
- en: AntiVirus
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ClamAV is very commonly used on Linux systems as a virus scanner. However, it
    covers viruses from a variety of operating systems and obviously its largest signature
    database relates to the Windows platform. So it is excellent for protecting Windows
    clients on the network from virus attacks. ClamAV is used as the scanning engine
    for the other tools in Copfilter, and so is already enabled by the time we get
    to it because the other services are using it.
  prefs: []
  type: TYPE_NORMAL
- en: '![AntiVirus](img/1361_09_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We may want to tweak when the automatic updates are applied as well as perform
    manual updates of ClamAV, especially shortly after installation. We can also add
    other file extensions to the `renattach` configuration file from this menu such
    as WMF. These files will be renamed so as to have an extension that won't execute
    automatically with a double-click.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**WMF and Media File Vulnerabilities**'
  prefs: []
  type: TYPE_NORMAL
- en: Recently there was a very serious and highly publicized vulnerability in Microsoft
    Windows, which could be exploited if the user viewed an image in WMF format. This
    highlighted the often-ignored fact that not just executable files can contain
    executable code.
  prefs: []
  type: TYPE_NORMAL
- en: Tests and Logs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Copfilter addon has its own area for logs, sadly choosing to shy away from
    adding options to the **Logs** menu as other addons do. In this area we can view
    and download a variety of logs in various formats; however, they are too numerous
    to warrant coverage in this text. The logs are relatively easy to read and understand,
    and the documentation on the websites of the projects mentioned earlier will give
    more information on these.
  prefs: []
  type: TYPE_NORMAL
- en: Three other important functions here are the test buttons.
  prefs: []
  type: TYPE_NORMAL
- en: '**Send Test Virus Email:** This button sends an email with the EICAR test virus.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**EICAR**'
  prefs: []
  type: TYPE_NORMAL
- en: EICAR is a test virus definition that all antivirus software recognizes. It's
    used as a calibration tool to ensure that our anti-virus solution is working without
    having to send a virus through our network.
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.eicar.org/anti_virus_test_file.htm](http://www.eicar.org/anti_virus_test_file.htm)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Send Test Spam Email:** Sends an email that should be picked up as Spam by
    the Spam filters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Send Test Email +dang. Attachment:** Sends a dangerous attachment through
    email to test the functionality of renattach.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It's important to run each of these tests and maybe a few manual runs at sending
    tests through the filters before trusting the setup with the protection of our
    network resources.
  prefs: []
  type: TYPE_NORMAL
- en: Up and Running!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If we now have a look at the status screen, we should see that all of the services
    have been started and are being monitored and controlled.
  prefs: []
  type: TYPE_NORMAL
- en: '![Up and Running!](img/1361_09_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have seen that IPCop can be more than just a simple NAT firewall. It can
    handle multiple network zones and treat each of these independently. We can have
    real control over how these network segments can communicate with each other.
    A firewall can do much more than just filter—it can control, monitor, and report
    on the network's status giving us a good overall view of how our network is functioning,
    and IPCop can fulfill these requirements.
  prefs: []
  type: TYPE_NORMAL
- en: We have also seen IPCop as a network appliance similar to the expensive commercial
    offerings from many vendors. In this respect IPCop can handle advanced firewalling
    with some application-level or layer-seven filtering. We discussed this earlier
    and IPCop's layer-seven shortcomings. We now see how we can address this and any
    other problems to create a truly useful and powerful perimeter device.
  prefs: []
  type: TYPE_NORMAL
- en: We looked at the various addons available for IPCop and had a fairly detailed
    look at some of the most commonly used ones and the useful options available.
    We have seen some of the direct benefits of using open source software such as
    IPCop in its simple extensibility or "*hackability*". We covered some advanced
    proxying options with SquidGuard and its use on IPCop. We also looked at Copfilter—one
    of the most popular IPCop addons—with it's filtering of many common protocols
    for malware and other undesirable traffic. We've only scratched the surface of
    IPCop addons, however, as there are many more out there. Everything from an installation
    of Nmap on IPCop to a SETI client! It's worth exploring the options available,
    as those presented here serve only to give an overview of the common applications.
  prefs: []
  type: TYPE_NORMAL
