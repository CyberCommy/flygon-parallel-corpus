- en: Chapter 1. HTML5 and the Mobile Web
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting your mobile device ready
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emulators and simulators
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the mobile development environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using HTML5 on mobile web
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making HTML5 render cross browser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Designing for mobile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determining your target mobile devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining a content adaptation strategy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Both HTML5 and mobile web are promising technologies. Both have relatively short
    histories. In this chapter, most topics we will be covering are relatively basic.
    This is to help you get started with mobile development quickly and with minimum
    effort.
  prefs: []
  type: TYPE_NORMAL
- en: Both mobile and HTML5 are still evolving in nature and there could be many questions
    in your mind. We will clear those doubts and set your mind focused on things that
    matter.
  prefs: []
  type: TYPE_NORMAL
- en: The mobile web is growing fast. We now have mobile Safari which is one of the
    most used apps on the iPhone, allowing developers to build high performance web
    applications and enhancing users' browsing experience. You do not need a developer
    account to host and run a mobile site, you don't need to get approval from any
    app market to launch a mobile website and you can make updates any time you like
    without the hassle of waiting for approval. All these are benefits of mobile web
    development, but at the same time, there are challenges such as inconsistencies
    among browsers, the lack of certain features compared to native apps, and security.
    We can't tackle them all, but we sure can solve some of them. And we will see,
    when developing a mobile site, how we can separate the common practices from the
    best practices.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are literally thousands of smartphones out there; you don''t need every
    single one of them to test your application on. In fact, you may need fewer than
    10\. If that''s still out of your budget, then two devices are good enough. For
    the rest, you can use simulators/emulators to do the job. This book focuses on
    six A-grade mobile devices, with focus specifically on iPhone, Android, and Windows
    Phone:'
  prefs: []
  type: TYPE_NORMAL
- en: iOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows Mobile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blackberry v6.0 and above
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Symbian 60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Palm webOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are two browsers that are device-independent that will also be covered
    in this book. They are:'
  prefs: []
  type: TYPE_NORMAL
- en: Opera Mobile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firefox Mobile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Just because other browsers are not in the list does not mean they won't be
    covered by the issues and techniques we discuss in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying your target mobile devices
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Target browser: all'
  prefs: []
  type: TYPE_NORMAL
- en: You can't possibly make a mobile site for every single mobile device. No one
    has the time or energy to do so.
  prefs: []
  type: TYPE_NORMAL
- en: 'Cross-browser mobile web development can be crazy. It''s hard to define the
    scope of the work, as *John Resig* (creator of jQuery Mobile) pointed out in his
    presentation slide describing his experience building jQuery Mobile ([http://www.slideshare.net/jeresig/testing-mobile-javascript](http://www.slideshare.net/jeresig/testing-mobile-javascript)),
    he asked three questions:'
  prefs: []
  type: TYPE_NORMAL
- en: Which platforms and browsers are popular?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which browsers are capable of supporting modern scripting?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What devices and simulators do I acquire to test with?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When you are building a mobile site, you have to ask yourself similar questions,
    but not the exact same questions, because remember your site should be specifically
    tailored to your target audience. So your questions should be:'
  prefs: []
  type: TYPE_NORMAL
- en: Which platforms and browsers are most commonly used by visitors on my website?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How many people access my website from a mobile device that is capable of supporting
    modern scripting?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which devices and simulators do I need for testing?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which platforms and browsers are most commonly used by visitors on my website?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now let''s answer the first question. Before building a mobile website, you
    must first find out who are your target audience, and what mobile devices they
    use when visiting your site. There are many analytics tools that can help you
    answer these questions. One of those is Google Analytics. You can sign up for
    a free Google Analytics account at: [http://www.google.com/analytics/](http://www.google.com/analytics/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The way to do it is fairly straightforward: most developers are no strangers
    to Google Analytics. All you have to do is to include the JavaScript snippet from
    the the Google Analytics site and embed it in your web pages.'
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript can be rendered in most modern smartphones, so there is really no
    difference between using it on a desktop site and on a mobile site.
  prefs: []
  type: TYPE_NORMAL
- en: How many people access my website from a mobile device that is capable of supporting
    modern scripting?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now let's answer the second question. One thing you may want to find out is
    the number of people using mobile browsers to surf your site. And you also want
    to find out how many people use a relic mobile browser that doesn't support JavaScript
    at all. This is because if the percentage of people using low-end smartphones
    is higher than that of people using high-end smartphones, it may not be worthwhile
    using HTML5 in the first place (although the chance of this is very low).
  prefs: []
  type: TYPE_NORMAL
- en: 'So if your goal is not just to know the number of people using smartphones,
    but also the number of people who use older versions of mobile phones, Google
    Analytics for mobile comes to the rescue. You can download the script from:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://code.google.com/mobile/analytics/download.html#Download_the_Google_Analytics_server_side_package](http://code.google.com/mobile/analytics/download.html#Download_the_Google_Analytics_server_side_package)'
  prefs: []
  type: TYPE_NORMAL
- en: Google Analytics for mobile server-side packages currently supports JSP, ASPX,
    Perl, and PHP. Let's take a look at one of the examples in PHP. All you have to
    do is to change the **ACCOUNT ID GOES HERE** with your GA account ID. But remember
    to **replace 'UA-xx' with 'MO-xx'**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Unfortunately, when you use the server-side version, you can''t use it on pages
    where you also use the standard JavaScript tracking code, `ga.js`. Using the server-side
    version means that you have to give up the JavaScript version. It can be annoying
    because the JavaScript version provides a lot of dynamic tracking mechanisms that
    are lacking in the server-side version:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Alternatives to Google Analytics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Google Analytics is not the only mobile analytics service in the market. There
    are other services providing more specialized services. For example, **PercentMobile**
    is a hosted mobile analytics service that makes your mobile audience and opportunities
    clear. You can find out more about this service at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://percentmobile.com/](http://percentmobile.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: Accuracy of Google Analytics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The location reported by mobile devices may not always be accurate; Google Analytics
    uses IP addresses to determine user location for Map Overlay reports. They are
    subject to possible inaccuracy, as mobile IPs originate from the wireless carrier
    gateway which is not necessarily co-located with mobile users.
  prefs: []
  type: TYPE_NORMAL
- en: Server loading speed concern
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Due to the server-side processing, some additional server load may be incurred.
    Google recommends you first test the snippet on a few of your pages to ensure
    all is well before rolling out to an entire site.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up mobile development tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browser: all'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now one question still remains unanswered from the previous recipe: *which
    devices and simulators do I need for testing?* We will find this out in this.'
  prefs: []
  type: TYPE_NORMAL
- en: If you have figured out what major mobile devices you are going to support,
    now is the time to see how to set them up. Mobile development can be costly if
    you test on various mobile devices. Although we have all these mobile simulators
    and emulators available for testing, it's not as good as testing on a real device.
    Now let's see how we can maximize the testing coverage and minimize the cost.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We are going to make some assumptions here. Each case is different, but the
    idea is the same. Let's assume you have a Windows operating system on your desktop,
    but the top visitors to your site surf using iOS, Android, and Blackberry.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your goal is to maximize the coverage and minimize the cost. All three devices
    have emulators, but not all support different platforms.
  prefs: []
  type: TYPE_NORMAL
- en: '| Name | Compatibility |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| iOS simulator | Mac |'
  prefs: []
  type: TYPE_TB
- en: '| Android emulator | Windows, Mac, Linux |'
  prefs: []
  type: TYPE_TB
- en: '| Blackberry simulator | Windows |'
  prefs: []
  type: TYPE_TB
- en: As you can see, since iOS simulator only works for Mac, and if you are running
    a Windows OS, the best and only choice is to purchase an iPhone for testing. For
    Android and Blackberry, because they both have emulators for Windows, to save
    budget, you can download the emulators.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: List the top mobile devices people use to surf your site.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Know the machine OS you are using for the development.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find out the compatibility of each of these device emulators to your development
    environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have the budget for more than one mobile device having a different OS,
    you can think further about screen sizes and the DPI of the mobile device. You
    may not need to buy two high-end devices. For instance, it's not necessary to
    own an iPhone4 and an Android Thunderbolt. You can buy a lower-end of Android
    just to test out how your site would look on a lower-end device. So the idea is
    to combine your OS, mobile devices, and emulators to maximize the scenarios to
    cover.
  prefs: []
  type: TYPE_NORMAL
- en: Device simulator/emulator download lookup table
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following table shows a list of popular mobile device emulators for mobile
    web design and development testing:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Name | Type | Compatibility | URL |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| iOS | Simulator | Mac | [https://developer.apple.com/devcenter/ios/index.action#downloads](http://developer.apple.com/devcenter/ios/index.action#downloads)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Android | Emulator | Mac, Win, Linux | [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)
    |'
  prefs: []
  type: TYPE_TB
- en: '| HP webOS | Virtual Machine | Mac, Win, Linux | [http://developer.palm.com/index.php?option=com_content&view=article&id=1788&Itemid=55](http://developer.palm.com/index.php?option=com_content&view=article&id=1788&Itemid=55)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Nokia Symbian | Emulator | Win | [http://www.forum.nokia.com/info/sw.nokia.com/id/ec866fab-4b76-49f6-b5a5-af0631419e9c/S60_All_in_One_SDKs.html](http://www.forum.nokia.com/info/sw.nokia.com/id/ec866fab-4b76-49f6-b5a5-af0631419e9c/S60_All_in_One_SDKs.html)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Blackberry | Emulator | Win | [http://us.blackberry.com/developers/resources/simulators.jsp](http://us.blackberry.com/developers/resources/simulators.jsp)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Windows Mobile 7 | Emulator | Win | [http://www.microsoft.com/downloads/en/details.aspx?FamilyID=04704acf-a63a-4f97-952c-8b51b34b00ce](http://www.microsoft.com/downloads/en/details.aspx?FamilyID=04704acf-a63a-4f97-952c-8b51b34b00ce)
    |'
  prefs: []
  type: TYPE_TB
- en: Browser simulator/emulator download lookup table
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Apart from device testing tools, we also have tools for platform-independent
    browsers, notably Opera and Firefox. These are shown in the table below:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Name | Type | Compatibility | URL |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Opera Mobile | Emulator | Mac, Win, Linux | [http://www.opera.com/developer/tools/](http://www.opera.com/developer/tools/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Opera Mini | Simulator | Mac, Win, Linux | [http://www.opera.com/developer/tools/http://www.opera.com/mobile/demo/](http://www.opera.com/developer/tools/http://www.opera.com/mobile/demo/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Firefox for Mobile | Simulator | Mac, Win, Linux | [http://www.mozilla.com/en-US/mobile/download/](http://www.mozilla.com/en-US/mobile/download/)
    |'
  prefs: []
  type: TYPE_TB
- en: Remote testing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Apart from emulators and simulators, there are also test frameworks that give
    you remote access to REAL devices. One of those tools is **DeviceAnywhere**; one
    problem is that it is not free.
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.deviceanywhere.com/](http://www.deviceanywhere.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: BlackBerry simulator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target Browser: BlackBerry'
  prefs: []
  type: TYPE_NORMAL
- en: Most mobile device simulators are easy to install and configure if you follow
    the instructions on their sites, but BlackBerry simulators work differently from
    other mobile device simulators. For Blackberry device simulators, to connect to
    Internet, besides downloading the simulators, you also need to download and install
    **BlackBerry Email and MDS Services Simulator**.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Make sure you have chosen a simulator to download from: [http://us.blackberry.com/developers/resources/simulators.jsp](http://us.blackberry.com/developers/resources/simulators.jsp)'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, go to the page: [https://swdownloads.blackberry.com/Downloads/entry.do?code=A8BAA56554F96369AB93E4F3BB068C22&CPID=OTC-SOFTWAREDOWNLOADS&cp=OTC-SOFTWAREDOWNLOADS](http://swdownloads.blackberry.com/Downloads/entry.do?code=A8BAA56554F96369AB93E4F3BB068C22&CPID=OTC-SOFTWAREDOWNLOADS&cp=OTC-SOFTWAREDOWNLOADS).
    There you will see a list of products similar to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it...](img/1963_01_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now select **BlackBerry Email and MDS Services Simulator Package** and then
    click on **Next**.
  prefs: []
  type: TYPE_NORMAL
- en: After downloading and installing the software, you must first launch the service
    simulator before the Blackberry simulator, in order to allow it to connect to
    the Internet.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a screenshot of a Blackberry simulator:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it...](img/1963_01_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Setting up the mobile development environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browser: all'
  prefs: []
  type: TYPE_NORMAL
- en: Before we start mobile web development, we have to first set up a development
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Set up localhost on your machine. For Windows, Mac, or Linux, the easiest way
    to set it up is to use the popular and free XAMPP software: ([http://www.apachefriends.org/en/index.html](http://www.apachefriends.org/en/index.html)).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure you have a wireless connection.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Also you should have a mobile device with you. Otherwise, use a mobile simulator/emulator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure your mobile device and your desktop are on the same wireless network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create an HTML file and name it `ch01e1.html` at the root directory of your
    localhost:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Inside `ch01r01.html`, type in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Now get your IP address. If you are using Windows, you can type the following
    line in your command prompt:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Downloading the example code for this book
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.PacktPub.com](http://www.PacktPub.com). If you
    purchased this book elsewhere, you can visit [http://www.PacktPub.com/support](http://www.PacktPub.com/support)
    and register to have the files e-mailed directly to you
  prefs: []
  type: TYPE_NORMAL
- en: Once you have got your IP address, (for example, `192.168.1.16.)`, enter it
    in your mobile browser URL address bar. Now you should see the page load with
    the text displayed:![How to do it...](img/1963_01_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Within the same network, your mobile device can access your desktop host through
    your desktop IP address.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you don't have a mobile device, you can use one of the simulators for testing.
    But it's recommended to have at least one or two real mobile devices for testing.
    A simulator could test most things, but not everything, accurately.
  prefs: []
  type: TYPE_NORMAL
- en: Testing on a Safari desktop
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If your main target audience is iPhone mobile Safari users, you can also do
    testing on a desktop to save time. To do so, open up Safari, go to **Preferences**,
    click on the **Advanced** tab, check **Show Develop menu bar** as shown next:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing on a Safari desktop](img/1963_01_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now click on the display menu for the current page, choose **Develop** | **User
    Agent** | **Mobile Safari 3.1.3 - iPhone:**
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing on a Safari desktop](img/1963_01_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: List of community-based collection of emulators/simulators
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There is a list of emulators and simulators available if you really don''t
    have a Smartphone at hand. You can find the list on a wiki on the Mobile Boilerplate
    project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/h5bp/mobile-boilerplate/wiki/Mobile-Emulators-&-Simulators](http://github.com/h5bp/mobile-boilerplate/wiki/Mobile-Emulators-&-Simulators)'
  prefs: []
  type: TYPE_NORMAL
- en: List of emulators/simulators collection by Firtman
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Maximiliano Firtman*, a mobile and web developer, also an author, maintains
    a list of emulators on his site at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.mobilexweb.com/emulators](http://www.mobilexweb.com/emulators)'
  prefs: []
  type: TYPE_NORMAL
- en: Using HTML5 on the mobile web
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browser: all'
  prefs: []
  type: TYPE_NORMAL
- en: Now we are going to create a simple HTML5 page for your mobile device. If you
    already have experience with older versions of HTML, HTML5 should be easy to understand.
    And if you have made a web page for desktop before, it won't be hard for you to
    make one for a mobile device.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new file `ch01e2.html`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Save the following code in the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Now render this in your mobile browser, and you should see the text render just
    as expected.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As you can see, the only difference between HTML5 and other HTML pages is the
    **Document Type Definition (DTD)** we used:`<!doctype html>`.
  prefs: []
  type: TYPE_NORMAL
- en: You might have seen the code`<meta name="viewport" content="width=device-width,
    initial-scale=1.0">` and are wondering what it does. It helps Mobile Safari to
    know that the page is as wide as the device. Setting `initial-scale=1` tells the
    browser not to zoom in or out.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here''s a little bit of history of HTML5: there are two versions of HTML5 draft,
    one created by W3C and the other by WHATWG. The W3C is run by a group that is
    democratic in nature, but super slow in practice. WHATWG is edited by one person,
    *Ian Hickson* (who is also working for Google), and a group of people who are
    not public. As *Ian* does most of the decision making, it makes WHATWG''s version
    progress faster.'
  prefs: []
  type: TYPE_NORMAL
- en: HTML5 and version number
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You might be wondering why HTML5 is being so ambiguous by using a declaration
    without even a version number. Well there are many reasons to justify this:'
  prefs: []
  type: TYPE_NORMAL
- en: Version support of HTML doesn't matter much to browsers. What matters is the
    feature support. In other words, if the browser supports the HTML5 feature you
    are using, even if you declare the document as HTML4, it will still render the
    HTML5 element as expected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It's easier to type!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Mobile doctypes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'One question you may ask is whether it is safe to use the HTML5 DTD`<!doctype
    html>`. The answer is DTDs were made for validation, not browser rendering. Your
    next question might be: what about quirks mode?`<!doctype html>` is the minimum
    information required to ensure that a browser renders in standards mode. So you
    are pretty safe to use`<!doctype html>`.'
  prefs: []
  type: TYPE_NORMAL
- en: You may have noticed that we use`<!doctype html>` instead of`<!DOCTYPE html>`.
    The reason is HTML5 is not case sensitive, but for consistency with other HTML
    tags, we will use lowercase throughout the book.
  prefs: []
  type: TYPE_NORMAL
- en: Free resources to learn HTML5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There are many excellent and free books, and articles about basic HTML5 tags.
    If you are unfamiliar with HTML5, you can check out one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'HTML5 Doctor: [http://html5doctor.com/](http://html5doctor.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dive Into HTML5: [http://diveintohtml5.org/](http://diveintohtml5.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'HTML5 Rocks: [http://www.html5rocks.com/](http://www.html5rocks.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are the kind of person who really wants to know every detail about something,
    you can read the official HTML5 specs.
  prefs: []
  type: TYPE_NORMAL
- en: 'The W3C version of the spec is at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://dev.w3.org/html5/spec/Overview.html](http://dev.w3.org/html5/spec/Overview.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The WHATWG version of HTML Living Standard is at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.whatwg.org/specs/web-apps/current-work/multipage/](http://www.whatwg.org/specs/web-apps/current-work/multipage/)'
  prefs: []
  type: TYPE_NORMAL
- en: Rendering HTML5 across different browsers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browser: all'
  prefs: []
  type: TYPE_NORMAL
- en: There are older mobile browsers that don't recognize HTML5 elements. The problem
    with this is that you can't style these elements if they are not recognized. There
    are many shims made to tackle this issue. One of those is Modernizr.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the mobile browsers that doesn't recognize HTML5 elements is Windows
    Mobile. If you don't have Windows Mobile, you can simply use IE7 to test this
    out, because they are based on the same engine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Download Modernizr from the site: [http://www.modernizr.com/](http://www.modernizr.com/).
    It was written by *Faruk Ateş, Paul Irish*, and *Alex Sexton*.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create an HTML file and name it `ch01e3.html`, and enter the following code
    in the file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now create another page with Modernizr included, and name it `ch01e4.html:`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![How to do it...](img/1963_01_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Remember that if you use Modernizr for your project, you should always include
    it at the head of the file before the end of the`<head>` tag. There are other
    polyfills used for similar purposes, and some are listed in the following section.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Modernizr is not the only script library helper out there; there are two other
    notable ones:'
  prefs: []
  type: TYPE_NORMAL
- en: '**html5shim** by *Remy Sharp, Jonathan Neal & community*, enabled for print
    use, as well as at:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://code.google.com/p/html5shim/](http://code.google.com/p/html5shim/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**innerShiv** by *Joe Bartlett*, enables elements for innerHTML use at:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://jdbartlett.github.com/innershiv/](http://jdbartlett.github.com/innershiv/)'
  prefs: []
  type: TYPE_NORMAL
- en: HTML5 CSS reset
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'You may want to reset the set of new CSS HTML5 elements in your stylesheet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Enable block-level HTML5 elements in older IE
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In your CSS, you might want to include the set of block-level HTML5 elements
    in your CSS reset. Do note that not all HTML5 elements have to be displayed as
    block elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a list of block-level HTML5 elements:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Modernizr
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Modernizr does more than just making HTML5 elements stylable in CSS. It also
    helps to detect HTML5 feature support in the browser used for rendering. With
    version 2.0, you will have the option to customize the download [http://www.modernizr.com/download/](http://www.modernizr.com/download/).
  prefs: []
  type: TYPE_NORMAL
- en: Designing for mobile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browser: all'
  prefs: []
  type: TYPE_NORMAL
- en: For desktop design, one tends to use either fixed or fluid layout. On the mobile
    devices, one should almost always use fluid layout. Fluid layout could make your
    site responsive to browser resize.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now create two empty HTML files in your text editor, name one of them `ch01r06_a.html`
    and the other `ch01r06_b.html`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In `ch01r06_a.html`, enter the following code and save the file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'In `ch01r06_b.html`, enter the following code and save the document:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When you view the two sites in portrait mode, they both look pretty much the
    same:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/1963_01_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now try rotating your screen and see what happens.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see now, in landscape mode, the first example renders with spaces
    at the left and right side, and the second example covers most of the space of
    the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/1963_01_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The second example shows a different result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/1963_01_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'This site page looks very awkward in a fixed layout, but looks normal in a
    fluid layout. So when you design for mobile, always remember that your site should
    be designed with this flexibility. The reasons are:'
  prefs: []
  type: TYPE_NORMAL
- en: Mobile has both portrait and landscape mode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile has very limited space, so you should use every pixel available on the
    screen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: CSS media queries is also an essential part of responsive design. It assists
    you with the flexibility of mobile design.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'When rendered in a narrower screen, the two sections will be laid out vertically,
    when rendered in a wider screen, the two sections will be laid out horizontally.
    The technique we used to make this happen is by using CSS media queries. As in
    this example, we used `@media screen and (min-width: 480px) {..}`, so what it
    means is that the page is rendered on a page that has a minimum width of `480px`,
    the styles within will be applied:'
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/1963_01_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now let's see it in orientation mode, as shown next. The two boxes are now next
    to each other.
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/1963_01_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Desktop-first site
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Apart from the idea of building a purely mobile or desktop site, there have
    also always been other ways. One of those is to build a desktop site first, and
    make it degrade gracefully in mobile.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile-first site
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Another approach is to build it 'mobile first' but make it render gracefully
    on the desktop.
  prefs: []
  type: TYPE_NORMAL
- en: 'One such approach uses the following in the CSS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: One web approach
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A third approach is to have a 'one web' version, by which, instead of focusing
    on mobile or desktop, you focus on both.
  prefs: []
  type: TYPE_NORMAL
- en: Defining a content strategy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Target browser: all'
  prefs: []
  type: TYPE_NORMAL
- en: With the data you gathered from the analytics tools, you can define a strategy
    towards what you want to build. This is particularly useful if you already have
    a desktop version of the website.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure you already have JavaScript embedded on your site.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Go to your analytics tool and click on **Visitors** | **Mobile** under the left
    navigation:![How to do it...](img/1963_01_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now if you click on **Mobile Devices**, you can see the most common devices
    that people use to surf your site:![How to do it...](img/1963_01_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Google Analytics can help in finding out the most commonly used mobile devices
    accessing your site, and also find out the most popular sections of your website.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can also determine what are the most useful pages on your mobile site. People
    treat mobile surfing differently from desktop surfing. For instance, if you are
    running a local store selling products, most people on a tend to surf pages like
    **Contact Us, Location**, and **Services** mobile device. Conversely, on a desktop,
    people tend to search for **Product Catalog, About**, and **Product Description**.
    Google Analytics can help you find out which are the most visited sections/pages
    on your site. Apart from Google Analytics, you can also use PercentMobile, as
    we saw earlier.
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/1963_01_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Browser grade
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using an analytics service is one way to decide which devices you want to support.
    Another way is to use browser grade to know what category you should be targeting.
    jQuery Mobile has an awesome grid support chart at [http://jquerymobile.com/gbs/.](http://jquerymobile.com/gbs/.)
    There is also a slide on jQuery Mobile that talks about the overall strategies
    regarding mobile browser web development at [http://www.slideshare.net/jeresig/testing-mobile-javascript](http://www.slideshare.net/jeresig/testing-mobile-javascript).
  prefs: []
  type: TYPE_NORMAL
- en: Mobile matrices
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'I have been collaborating with *Jonathan Neal*, and many others, on Smartphone
    frontend matrices. You can have a look at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/h5bp/mobile-boilerplate/wiki/Mobile-Matrices](http://github.com/h5bp/mobile-boilerplate/wiki/Mobile-Matrices)'
  prefs: []
  type: TYPE_NORMAL
- en: It contains information about most Smartphones in the market, their screen dimensions,
    DPI, and operating systems.
  prefs: []
  type: TYPE_NORMAL
