- en: 3\. Assessment and migration planning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter will focus on discussing useful methods for assessing your existing
    workloads in on-premises or hosted environments and provide some guidance on planning
    your migration project.
  prefs: []
  type: TYPE_NORMAL
- en: We will go into the technical details regarding a number of popular Linux workloads
    and explain why these specific workloads require extra careful planning prior
    to migration. Additionally, we will talk about various migration methodologies
    and tools, and will also show some practical examples of how to assess current
    workloads by using tools such as Azure Migrate.
  prefs: []
  type: TYPE_NORMAL
- en: Until now, we have been talking about the history of Linux and various Linux
    distributions that are available. We have not talked about migration or what happens
    prior to this. In this chapter, we are going to cover concepts related to pre-migration
    steps. You may be wondering why we need pre-migration steps and why cannot we
    move our workloads directly to the cloud. The answer is simply that migrating
    to the cloud requires a lot of planning and assessment. We need to make sure that
    our workloads are ready to be migrated to the cloud, otherwise the time and money
    spent investing in the migration will go to waste.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will also learn that pre-migration mainly comprises assessment
    and capacity planning. Assessment is the process of creating an inventory of workloads
    we have in the current environment. Using this inventory, we will be able to understand
    the current infrastructure topology, which can be used to generate the expense
    for moving to the cloud and to verify whether the workloads are cloud-optimized.
  prefs: []
  type: TYPE_NORMAL
- en: We will also cover a service called **Azure Migrate**, which can handle both
    the assessment and migration of our Linux workloads. As we progress, we will walk
    you through the assessment process and its relevance to migration.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the key takeaways from this chapter are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Learning some of the popular workloads on Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preparing for a migration project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assessing the current environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An introduction to assessment tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additionally, we have created a hands-on lab exercise for you that you can use
    to learn to assess an environment by doing it yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now get started with some of the popular workloads that are running on
    Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Popular workloads on Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In real-world scenarios, we only migrate servers with workloads running on
    them, as there is no point in migrating a VM with no services running to the cloud.
    Instead of doing that, you could deploy a new server in Azure directly and start
    developing on top of that. Let''s have a quick recap of the popular workloads
    on Linux. Some of these were already explained in *Chapter 1*, *Linux: History
    and future in the cloud*. Let''s recall the varieties of workloads, including
    application hosting (such as Java and LAMP), Search, and big data, and see how
    Azure supports these.'
  prefs: []
  type: TYPE_NORMAL
- en: LAMP
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The acronym LAMP stands for **Linux**, **Apache**, **MySQL**, **PHP/Perl/Python**.
    Typically, it is the first service stack that any Linux administrator would set
    up and is usually used to host dynamic and database-driven websites. In LAMP:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Linux** (**L**) refers to any Linux distribution; you can use Ubuntu or Fedora
    or CentOS or any other distribution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache** (**A**) is the web server that presents the data or web page to
    the user. In short, this is the front end that users will be interacting with.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MySQL** (**M**) is the data store that will be used to save data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PHP/Perl/Python** (**P**) is the programming language used to develop the
    dynamic websites.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Although we refer to it as a LAMP server installation, these are separate packages
    that you need to install individually, and it is not like installing CentOS on
    a computer. In certain cases, LAMP might not be the right choice; in other words,
    you may not require all the components of LAMP. Again, this entirely depends on
    what your application is. If you have a static website, which is created using
    HTML, CSS, and JS, then you do not need the MySQL or PHP functionality in your
    system. All you need is the Linux server and Apache web server running on top
    of that, which can deliver the static site to your clients.
  prefs: []
  type: TYPE_NORMAL
- en: 'Depending on what components of the LAMP server you are using, the migration
    needs to be planned accordingly. For the purpose of the hands-on lab in this chapter,
    we will be using a LAMP server for assessment and dependency analysis. *Figure
    3.1* shows the architecture of the server. This architecture could be deployed
    on a hypervisor such as Hyper-V, VMWare ESXi, or on a physical server. In our
    lab, we are going to use Hyper-V as the virtualization platform:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The architecture of the LAMP server, which includes 4 layers: web server
    (Apache), Scripting (Perl/PHP/Python), Database (MySQL), and OS (Linux)](img/B17160_03_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.1: LAMP server'
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3.1* shows the architecture to be used in the hands-on lab.'
  prefs: []
  type: TYPE_NORMAL
- en: Database servers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In LAMP, we saw how the Linux server hosts the MySQL database, which can act
    as a data store for the dynamic websites. MySQL is not the only database that
    can be deployed in Linux servers. There are a plethora of relational and non-relational
    databases that can be installed on Linux servers. Some of the open-source relational
    databases that can be deployed on Linux are listed below. Some of these are very
    popular and well known; others you may not have heard of before:'
  prefs: []
  type: TYPE_NORMAL
- en: MySQL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MariaDB
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PostgreSQL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SQLite
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LucidDB
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: H2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HSQLDB
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firebird
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Derby
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CUBRID
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are many other relational database products that are not open source,
    such as Microsoft SQL Server, Oracle Database 18c, MaxDB, and IBM's DB2.
  prefs: []
  type: TYPE_NORMAL
- en: Apart from the relational databases, Linux is also a popular platform for NoSQL
    databases. MongoDB, Couchbase, CouchDB, RavenDB, and OrientDB are examples of
    NoSQL databases.
  prefs: []
  type: TYPE_NORMAL
- en: Azure has Database Migration Service available to migrate data from on-premises
    to managed **Platform-as-a-service** (**PaaS**) solutions. Regardless of all the
    benefits that are offered by PaaS services, there is a subset of customers who
    prefer to deploy these on **Infrastructure-as-a-service** (**IaaS**) servers and
    manage the administration fully. The migration process and technical details depend
    on the technologies chosen.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to IaaS, Azure offers a set of open-source databases as PaaS solutions.
    The advantage of using PaaS is that most of the infrastructure-related tasks,
    such as updating and patching, will be taken care of by Microsoft Azure. These
    PaaS solutions include Azure Database for PostgreSQL, Azure Database for MySQL,
    Azure Database for MariaDB, and Azure Cache for Redis.
  prefs: []
  type: TYPE_NORMAL
- en: HPC, clustering, and SAP
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In *Chapter 1*, *Linux: History and future in the cloud*, we looked at SAP,
    clustering, and HPC scenarios in Linux. To recap, **High Performance Computing**
    (**HPC**) is a collection of hundreds or even thousands of servers that are networked
    together. Each of the servers in the cluster is called a **node** and they work
    in parallel with one another to deliver higher processing speeds. The high combined
    processing speed contributes to higher performance.'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Azure offers a variety of VM series that are specifically designed
    with HPC in mind and can be used to carry out compute-intensive tasks. These include
    VM series, H series, HC series, HB series, and HBv2 series.
  prefs: []
  type: TYPE_NORMAL
- en: The main rationale behind customers migrating HPC to the cloud is the larger
    resource requirements. As these workloads are performing compute-intensive tasks,
    the amount of compute power needed is large and the infrastructure should be able
    to supply more servers if necessary. On-premises infrastructure will not be able
    to provide this liberty of scalability as the cloud does. The reality is that
    on-premises infrastructure is only capable of handling HPC clusters. Any scaling
    outside this safe zone is impossible to achieve. This is where Azure comes in.
    All you need to do is set up the scaling policy and Azure will take care of the
    rest.
  prefs: []
  type: TYPE_NORMAL
- en: The interesting thing is that you can also implement hybrid HPC clusters where
    the head nodes will be placed on-premises and compute nodes are placed in Azure.
    As the compute nodes are in Azure, scaling can be executed based on requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Shared storage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By way of a recap from *Chapter 1*, *Linux: History and future in the cloud*,
    let''s review the shared storage use case again. Linux is commonly used as a storage
    server and clients connect to the server via SMB or the NFS protocol. These servers
    can be used to store shared files and can be accessed by clients for several purposes.
    For example, you can have a shared file server to store all necessary installation
    packages of your internal applications. Your clients will be able to download
    these files from the shared storage and consume them.'
  prefs: []
  type: TYPE_NORMAL
- en: Also, shared storage can be used to store files that require collaboration.
    Files uploaded to these drives can be used by collaborators depending on what
    level of permissions they have.
  prefs: []
  type: TYPE_NORMAL
- en: In Microsoft Azure, Azure Files can be used as shared storage and the advantage
    here is that this is a completely managed service. If you are planning to deploy
    a VM and host a shared storage on top of that, as a customer, you have to manage
    many things, starting with OS management, updates, patches, and so on. However,
    in the case of Azure Files, the service is managed by Microsoft and because of
    the various redundancy levels offered by Azure Storage, you do not have to worry
    about implementing high availability yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Data from on-premises can be moved using command-line tools such as AzCopy and
    robocopy. AzCopy is optimized for best throughput for the copy job and can copy
    data directly between storage accounts. On the other hand, robocopy is useful
    if you would like to move from your on-premises storage to Azure File Storage,
    which is already mounted on the same server.
  prefs: []
  type: TYPE_NORMAL
- en: The aforementioned are the common scenarios; however, this does not mean that
    the use case scenarios or workload types are confined to these. Even for the same
    workload type, different customers will be using different components. For example,
    if we think about a database server, some customers will be using MySQL, while
    others will be using PostgreSQL.
  prefs: []
  type: TYPE_NORMAL
- en: 'Microsoft has a collection of documents, best practices, implementation guides,
    and tooling that are designed to accelerate your cloud adoption. This framework
    is called the Microsoft **Cloud Adoption Framework** (**CAF**) for Azure. Organizations
    are recommended to adopt this framework so that they can incorporate the best
    practices and tools from the very beginning of their cloud journey. The complete
    framework can be reviewed here: [https://docs.microsoft.com/azure/cloud-adoption-framework/](https://docs.microsoft.com/azure/cloud-adoption-framework/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The action plan we are going to follow throughout this book is from the *Migrate*
    section of the CAF. In this book, we will focus on the main steps for migrating
    your Linux workloads to Azure. This roadmap consists of four main steps as shown
    in *Figure 3.2*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Linux migration roadmap and plan for migrating your workloads to Azure](img/B17160_03_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.2: Linux migration roadmap'
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding diagram, we will start our migration journey with
    the first phase—*Assess*.
  prefs: []
  type: TYPE_NORMAL
- en: Pre-project preparations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: All projects should start with proper planning, and the same applies to cloud
    migrations as well. At this point, we have already gathered all the necessary
    technical information, but how do we know what kind of project team we need? Let's
    take a closer look.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying relevant roles and responsibilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Quite often, the responsibilities of on-premises applications are distributed
    to many internal stakeholders within different teams, and sometimes even different
    departments or companies.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, a typical production environment for any business application
    requires several different roles in order to function:'
  prefs: []
  type: TYPE_NORMAL
- en: Hardware administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtualization administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storage administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linux administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Database administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Backup administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When you add the internal and external users, the list grows:'
  prefs: []
  type: TYPE_NORMAL
- en: Identity management administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connectivity administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application owners
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business owners
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application users
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now, let''s imagine you plan to move this system to Azure: Which of these people
    will you need to talk to in order to ensure that the work undertaken by the business
    users of this application is not disrupted? Let''s look at some of the key roles
    and why they are quite important in cloud migration projects.'
  prefs: []
  type: TYPE_NORMAL
- en: Network administrator
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Applications running only in one datacenter and serving users in a single country
    are quite easy to migrate to the cloud compared to distributed applications and
    users across the globe.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take an example (refer to *Figure 3.3*) company that has four offices
    in two continents and four countries. The European teams in Paris and London are
    using a datacenter in London, and the teams in Singapore and Bangkok are using
    a datacenter in Singapore:'
  prefs: []
  type: TYPE_NORMAL
- en: '![An example of a clustered application in two continents, that is, Europe
    and Asia to show global network connectivity](img/B17160_03_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.3: Clustered application in two continents'
  prefs: []
  type: TYPE_NORMAL
- en: 'This scenario adds one obvious aspect of complexity to the total architecture:
    **global network connectivity**. From a project planning point of view, this means
    that you will need to add at least one international network provider company
    to the list of roles involved in the project.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Typically, this kind of network structure can be moved to the cloud without
    any dramatic changes, but there is one special category of applications that will
    require lots of planning: financial applications. Traditionally, the financial
    industry has relied on dedicated internet connections with private links in their
    systems. This, in itself, is not an issue as Azure has various options for VPN
    and other private connections. The tricky part here is the use of the `Multicast`
    protocol in many trading applications used by the financial sector. Another industry
    that often uses the `Multicast` protocol is healthcare, especially hospitals.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If you would like to learn more about use cases of Multicast in enterprise
    environments, you could look at the book *Multicast Design Solutions*, published
    by *Cisco Press*: [https://www.ciscopress.com/articles/article.asp?p=2928192&seqNum=5](https://www.ciscopress.com/articles/article.asp?p=2928192&seqNum=5).'
  prefs: []
  type: TYPE_NORMAL
- en: What makes multicast worth mentioning in this section is the fact that public
    clouds do not support multicast networking. This makes it very challenging to
    migrate applications relying on multicast routing directly to Azure. Luckily,
    there are ways to work around the problem, for example, by using Multicast-to-Unicast
    gateways, but this approach will require re-architecting your network design and
    possibly applications.
  prefs: []
  type: TYPE_NORMAL
- en: Another networking detail that requires careful planning is VPN and ExpressRoute
    connections. It is good to remember that it is not guaranteed that you may be
    able to move your connections from your current locations to public clouds easily.
    As those existing connections may be owned or operated by a third-party company,
    you need to make sure to involve them in your network planning sessions.
  prefs: []
  type: TYPE_NORMAL
- en: The point to understand here is that things such as networking may sound easy
    and straightforward, but it is one of the most difficult technological areas in
    public cloud migration, not only from the technology point of view, but also from
    a staffing and planning perspective, as there are so many stakeholders involved.
  prefs: []
  type: TYPE_NORMAL
- en: If you could add just one networking person to your migration team, pick someone
    with experience of working with telecom providers and legacy networking technologies.
    This person is going to be more valuable than any cloud networking specialist.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now move on to the next key role.
  prefs: []
  type: TYPE_NORMAL
- en: Linux administrator
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In earlier chapters, we talked about the business aspects of Linux subscription
    management. It also has some technical details that need to be considered when
    planning to migrate to the public cloud. One of these details is update management:
    where will you get security patches and package updates when using Linux on Azure?'
  prefs: []
  type: TYPE_NORMAL
- en: Your Linux administrator is a key person here as they already know how the various
    package managers and subscription systems work in the current system. With some
    training, it is quite easy for them to understand what kind of changes need to
    be implemented when moving your systems to Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Does having a Linux administrator in your migration project team sound obvious?
    In real life, we have seen migration projects where the project manager did not
    think this was necessary and had a Windows administrator trying to figure out
    how to migrate Linux to Azure. You can probably make a guess as to whether those
    projects were successful.
  prefs: []
  type: TYPE_NORMAL
- en: By Linux administrator, in this context, we mean someone who understands things
    such as filesystems, disk performance, SELinux, and subscription management if
    you are using a commercial Linux distribution.
  prefs: []
  type: TYPE_NORMAL
- en: With a bit of luck, the system you are planning to migrate is well maintained,
    all security patches and updates are applied, and everything is well documented.
    In real life however, this is rarely the case. It really helps to have someone
    in the team who has extensive experience of working with various Linux services
    and application stacks as they often can find the information that is missing
    from your documentation.
  prefs: []
  type: TYPE_NORMAL
- en: Let's take an example of having an RHEL server with SELinux turned off. Your
    application documentation does not mention anything about SELinux, and your security
    team says that in the public cloud, you will need to have SELinux enabled or they
    will not approve the migration. What could possibly go wrong? Everything, especially
    if the security team turns on **Enforcing Mode** in SELinux without first checking
    how the application behaves.
  prefs: []
  type: TYPE_NORMAL
- en: We recommend that you familiarize yourself with all the relevant roles and personas
    related to the system you are planning to migrate to Azure and to investigate
    very carefully, following the pattern introduced here, to find out who you need
    to involve in your project team.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud governance and operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Microsoft has developed a CAF, a set of documentation, implementation guidance,
    best practices, and tools to help customers to start using Azure in the best way
    possible.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: CAF is available for free to everyone at [https://docs.microsoft.com/azure/cloud-adoption-framework/](https://docs.microsoft.com/azure/cloud-adoption-framework/).
  prefs: []
  type: TYPE_NORMAL
- en: Several sections from CAF are very important when learning about cloud migrations.
    For example, *Landing Zone* is a term you should be very familiar with going forward.
    In Azure, a landing zone means a set of pre-designed architecture or services
    where you can deploy your new or migrated resources, for example, VMs. An analogy
    in the software development world would be **Minimum Viable Product** (**MVP**).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Read more about Azure landing zones here: [https://docs.microsoft.com/azure/cloud-adoption-framework/ready/landing-zone/](https://docs.microsoft.com/azure/cloud-adoption-framework/ready/landing-zone/).'
  prefs: []
  type: TYPE_NORMAL
- en: Another very important topic worth mentioning at this point is cloud operations,
    or **CloudOps**. In most cases, the team who develops a software solution will
    not be the same team that operates the cloud infrastructure – or landing zone
    – after the solution is deployed. Typically, cloud operations are managed by the
    company's IT department, or this work is outsourced to a specialized cloud management
    service provider.
  prefs: []
  type: TYPE_NORMAL
- en: The worst thing you can do is to have no one take care of the application or
    the infrastructure it is using after it is deployed. Someone needs to monitor
    the application and infrastructure performance, react to system alerts, ensure
    that security patches are applied, and, most likely, also run cost optimization
    processes every now and then.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Microsoft CAF also covers these cloud management aspects, not only from
    a technology point of view, but also from the organization and business alignment
    angles. Read more about cloud management in the CAF here: [https://docs.microsoft.com/azure/cloud-adoption-framework/manage/](https://docs.microsoft.com/azure/cloud-adoption-framework/manage/).'
  prefs: []
  type: TYPE_NORMAL
- en: To apply all the theory that we have learned so far in relation to discovery
    and assessment, let's go through a hands-on assessment lab. In this lab, you will
    see how Hyper-V VMs are discovered and assessed in Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Migration assessment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The migration journey continues by getting to know your current infrastructure.
    Assess is the first step in migration and, in this phase, we will be creating
    an inventory of our source. When we say *source*, this is not necessarily always
    on-premises. It could be other cloud vendors or platforms as well. The assessment
    tools available in Azure can be used to assess infrastructure in AWS, GCP, virtualized
    platform, and on-premises physical servers. The reason we need to perform the
    assessment is because we need to make sure what the migration of our workloads
    will look like post-migration.
  prefs: []
  type: TYPE_NORMAL
- en: The assessment consists of four steps along with a set of tools. Let's proceed
    and learn about these steps.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing a cloud migration plan
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As Benjamin Franklin said, "By failing to prepare, you are preparing to fail."
    At first glance, migration may seem uncomplicated; however, if we start without
    planning and in the absence of a proper strategy, then migration will fail. A
    failed migration would be an utter waste of time, energy, and productivity. You
    should begin your planning by setting objectives and priorities. Not every migration
    happens in one go; it will be done in phases. Usually, servers that are part of
    the same solution are migrated together rather than migrating random servers.
    Assume that you have a registration application, payroll application, ticketing
    application, and so on in your environment. In this case, you need to set some
    priorities and project deadlines, as in the payroll application is the priority
    and should be handled before the end of Q1\. This approach ensures that you are
    taking one step at a time and following a discipline, thereby ensuring a successful
    migration.
  prefs: []
  type: TYPE_NORMAL
- en: The general rule of thumb is to prioritize applications with fewer dependencies;
    this will act as a catalyst for the migration. Once these are done, you can focus
    on the applications with a large number of dependencies. Moving those will give
    you more time to focus as the other applications were migrated earlier. This will
    also ensure more optimal use of your time. If you start with applications having
    a large number of dependencies, you may take longer to optimize and plan them.
    This will mean that the deadlines for other workloads will be extended further.
    Hence, it is better to complete the simple ones prior to handling the complex
    ones.
  prefs: []
  type: TYPE_NORMAL
- en: The next step is *Discovery and evaluation* this is where the full assessment
    takes place.
  prefs: []
  type: TYPE_NORMAL
- en: Discovery and evaluation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we have a plan in mind, we need to begin a full assessment of the environment.
    The outcome of these steps is to identify servers, applications, and services
    that are within the scope of migration.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will be producing a full inventory and dependency map of servers and
    services that are within the scope of migration. The inventory and map help us
    to understand how these dependency services talk to one another. It is strongly
    recommended that you thoroughly investigate each application and its dependencies.
    A failure to assess or account for one of the dependencies will result in major
    problems post-migration.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of your applications may not be suitable for lift and shift migration,
    so you need to consider other options as well. For each application, you need
    to evaluate the following migration options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Rehost**: This is what we normally call "lift and shift." Basically, you
    are recreating your infrastructure in Azure. This requires minimal changes to
    your applications and so will have the least impact. An example of this is the
    replication of VMs to the cloud and then recreating them in Azure with the replicated
    disk.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Refactor**: This is done when you are moving an IaaS server to a PaaS solution,
    for instance, from the VM to a PaaS solution such as Azure App Service. As we
    already know, moving to PaaS solutions reduces management tasks and, at the same
    time, helps to keep your costs low.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rearchitect**: In certain scenarios, you may need to re-architect some systems
    so that they can be successfully migrated. This architecture is mainly implemented
    to make the system cloud-native or to take advantage of newer paths such as containerization
    and microservices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rebuild**: If the cost, time, and manpower required to rearchitect the application
    is more than starting from scratch, then you may rebuild the application. This
    approach helps the software development team to develop applications that can
    get the most out of the cloud.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Replace**: Sometimes, when you review the overall expenditure for rebuilding
    or rearchitecting the solution, it could be higher than buying third-party software.
    Assuming that you have your own CRM solution, the cost of rearchitecting or rebuilding
    is higher than buying a license for a similar SaaS product such as Dynamics 365.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once we have discovered the entire infrastructure, the next step in the pipeline
    is to involve the key stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: Involving key stakeholders
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the discovery stage, we will have a complete picture of the infrastructure;
    however, the owners and superusers of the applications will also have a complete
    picture of the architecture of the application. These owners and other key stakeholders
    we mentioned earlier in this chapter will be able to share valuable suggestions
    and information regarding the architecture of the application, and incorporating
    these suggestions at this early stage of migration will enhance the probability
    of a successful migration.
  prefs: []
  type: TYPE_NORMAL
- en: It is better to involve the IT and business owners when it comes to filling
    any knowledge gaps. Also, these individuals will be useful in providing any guidance
    regarding the application architecture.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to migration, the CxO stakeholders, such as the CEO, CTO, and
    CIO, will always be interested in knowing the numbers, as in what the potential
    savings could be were we to move from on-premises to Azure. Let's see how we can
    estimate the cost.
  prefs: []
  type: TYPE_NORMAL
- en: Estimating the savings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Many organizations adopt the migration path to save infrastructure costs. The
    agility and scalability of the cloud are major driving factors here. For example,
    if you buy a new server and this server is not utilized as expected, then this
    constitutes a loss for the company. In the cloud, however, things are different;
    if you do not need it, you can deallocate the server in seconds. Once deallocated,
    you do not have to worry about the server, and you are no longer paying for it.
  prefs: []
  type: TYPE_NORMAL
- en: Before moving to the cloud, all organizations do the math and verify whether
    they are deriving any profit or savings as a result of this migration. Once you
    are done with the initial scoping, you can use the Azure **Total Cost of Ownership**
    (**TCO**) calculator to estimate the cost of running workloads in on-premises
    versus Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Starting with the assessment to savings calculation, there are different tools
    involved in the process. Let's identify the tools available at the assessment
    stage.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying tools
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Tools play a vital role in the migration assessment. Without tools, it will
    be a cumbersome task to go to each of the servers that you have on-premises and
    create an inventory. Hence, tools increase productivity and accelerate migration.
    *Table 3.1* shows the list of tools that can be leveraged at the Assess stage:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Assess tools for migrations with their purpose. It mainly includes tools
    like Azure Migrate, Service Map, and Azure TCO calculator.](img/B16170_Table_3.1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Table 3.1: Assessing tooling'
  prefs: []
  type: TYPE_NORMAL
- en: The aforementioned are the tools used at the Assess stage. Likewise, there are
    other tools leveraged at each stage (**Migrate**, **Optimize**, and **Secure &
    Manage**) in the adoption plan. Once we get to these stages, you will be acquainted
    with the tools used at each respective stage.
  prefs: []
  type: TYPE_NORMAL
- en: There are other third-party tools that can be used to perform an assessment.
    These are available in Azure Migrate and can be selected during project creation.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we are familiar with the steps that are part of the Assess stage, let's
    try to understand more about each of these tools and their usage.
  prefs: []
  type: TYPE_NORMAL
- en: Assessing tooling
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As explained in the preceding *Identifying tools* section, the inevitable roles
    played by these tools make the assessment, mapping, and savings calculation easier.
    Now we will evaluate each of these tools and see how they are used and what the
    use case scenarios are. We will start with Azure Migrate.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Migrate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The purpose of Azure Migrate is already evident from *Table 3.1*. With the help
    of Azure Migrate, we can run environment discovery without installing any agents
    on the servers. If we install agents, we can also perform dependency analysis,
    which can be used to generate service maps. The best part of the assessment is
    that all of this is natively integrated into the Azure portal and you do not have
    to be dependent on any other portals.
  prefs: []
  type: TYPE_NORMAL
- en: Following the assessment, Azure Migrate generates an assessment report with
    the estimated cost, recommendations, and size of the VM that you will need to
    provision to match your on-premises configuration. Azure Migrate can discover
    and assess VMs deployed on Hyper-V and VMWare virtualization environments, as
    well as physical machines, while extending the list to other cloud vendors, too.
  prefs: []
  type: TYPE_NORMAL
- en: To use Azure Migrate, we need to create an Azure Migrate project in the Azure
    portal. This project will be used to store the assessments that we perform. Also,
    the same project can be used when we are migrating our workload to Azure. Since
    we are in the assessment phase of the migration plan, this chapter will focus
    on the assessment tools available in the project. Once we reach the migration
    stage in *Chapter 4*, *Performing migration to Azure*, we will discuss the migration
    tools in the Azure Migrate project.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now familiarize ourselves with the next tool, *Service Map*.
  prefs: []
  type: TYPE_NORMAL
- en: Service Map
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Service Map is another great tool that is part of Azure Monitor for server
    assessment that performs the dependency analysis for us. There are several advantages
    to leveraging dependency analysis and this boosts the overall migration confidence
    and success rate. Some of the advantages are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have a large number of servers to migrate, you can group them based
    on solutions as we know which server hosts which dependency:'
  prefs: []
  type: TYPE_NORMAL
- en: It helps in identifying the right machines in a solution and migrating them
    together.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It helps in understanding the topology of the environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Makes sure that you migrate everything and that no server is excluded from
    migration due to human errors or negligence. There are two types of dependency
    analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: Agentless analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Agent-based analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's take a closer look at each of these.
  prefs: []
  type: TYPE_NORMAL
- en: Agentless analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As the name implies, no agents are installed on the VMs to perform the dependency
    analysis. The discovery or analysis is done by using the TCP connection data capture
    from machines. However, one thing to note here is that agentless analysis is in
    preview at the time of writing this book and is available for VMWare VMs only.
    Data polling and collection is accomplished with the help of vSphere APIs.
  prefs: []
  type: TYPE_NORMAL
- en: If we run a `netstat` command on our Linux or Windows computer, we will be able
    to see the connections, state of connections, source, destination, and ports of
    all the network connections made from our computer. As mentioned earlier, these
    TCP metrics are used for the logical grouping of servers.
  prefs: []
  type: TYPE_NORMAL
- en: Once they are grouped, you can visualize the service map to understand the dependencies
    or you can export this as a CSV for your reference. The assessment tools include
    an Azure Migrate appliance, which is a VM that you need to deploy in your environment
    for discovery. This appliance will constantly gather data and push it to Azure
    for assessment.
  prefs: []
  type: TYPE_NORMAL
- en: Agent-based analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As the name suggests, we need an agent to perform the dependency analysis in
    the case of agent-based analysis. This method of analysis utilizes the Service
    Map feature of Azure Monitor. We need to install the **Microsoft Monitoring Agent**
    (**MMA**), which is essentially for Windows machines, or OMS Agent (in the case
    of Linux machines), as well as the dependency agent. The data sent by these agents
    will be used to create the service map.
  prefs: []
  type: TYPE_NORMAL
- en: We need a Log Analytics workspace to ingest the logs and data pushed by these
    agents. One thing to note here is that the workspace should be deployed in a region
    where Service Map is supported.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike agentless analysis, since we have the data ingested to the workspace,
    we can use **Kusto Query Language** (**KQL**) to analyze this data.
  prefs: []
  type: TYPE_NORMAL
- en: When we move on to the hands-on exercise toward the end of this chapter, we
    will see how these agents are installed and are used for the dependency analysis.
    Dependency analysis can be very useful in the case of applications that have complex
    architectures. Next, we will talk about the Azure TCO calculator.
  prefs: []
  type: TYPE_NORMAL
- en: Azure TCO calculator
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Total Cost of Ownership** (**TCO**) is something every organization wishing
    to start their cloud adoption should consider. The **Return on Investment** (**ROI**)
    is evaluated using the TCO and the Azure TCO calculator helps in calculating the
    estimated cost of migration to Azure and forecasting your potential savings compared
    to your current costs.'
  prefs: []
  type: TYPE_NORMAL
- en: 'It is recommended that you perform a TCO calculation before migrating to the
    cloud, and there are some charges that you should consider while estimating the
    total cost of ownership. These costs include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Migration costs**: Migration is expensive and requires the utmost attention.
    Failures in migration can lead to potential loss. Hence, you should account for
    the costs incurred in terms of resources, technicians, and the other hardware
    procured for migration in your TCO.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Infrastructure costs**: You need to keep your on-premises infrastructure
    up and running until the migration is complete. At a certain stage during migration,
    you will be paying for the resources in the cloud as well as the on-premises datacenter.
    The changeover only happens once the migration is complete.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk factor**: Migration is not a simple task and there is always risk involved
    in this. If your application is not optimized for the cloud, or if you have not
    properly assessed your application prior to migration to the cloud, this could
    lead to potential failures. Examples include functionality and performance issues
    compared to the on-premises application. Once the resources are deployed in the
    cloud, you will be charged; if something goes wrong, you should have the budget
    to roll back the changes and perform a failover back to your on-premises application.
    As this is a calculated risk, we should include this in our TCO.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Azure TCO calculator can be accessed from any browser by navigating to
    the following link: [https://azure.microsoft.com/pricing/tco/calculator/](https://azure.microsoft.com/pricing/tco/calculator/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The TCO calculation involves a three-step process, starting with defining your
    workloads. In this first step, you will be inputting the details of your on-premises
    workloads and this will be plotted against the cloud cost to understand the savings.
    These workloads are categorized into servers, databases, storage, and networking
    components. For each category, there will be a set of information that you need
    to pass to the TCO calculator. As an example, if we take Servers, we will be asked
    to input the OS type, OS, license, processors, cores, and RAM, as shown in *Figure
    3.4*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Defining server workloads using Azure TCO calculator](img/B17160_03_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.4: Defining server workloads'
  prefs: []
  type: TYPE_NORMAL
- en: After defining your workloads, you will reach the Adjust assumptions step. Here,
    we are going to share details about whether you already have licenses for these
    machines, followed by storage costs, IT labor costs, electricity costs, and so
    on. You need to tune these assumptions as per your on-premises data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have stated the assumptions, the TCO calculator will give the potential
    savings based on the data you have shared. Here, for example, based on the workloads
    and assumptions, we are getting estimated cost savings of $18,472 over 1 year.
    *Figure 3.5* shows a sample output from the TCO calculator:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Savings calculated using Azure TCO calculator](img/B17160_03_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.5: Savings calculated using the Azure TCO calculator'
  prefs: []
  type: TYPE_NORMAL
- en: There are other graphs (category-wise breakdown) that are available in the TCO
    calculator and the best part is that you can download this report and it can be
    shared with stakeholders for review.
  prefs: []
  type: TYPE_NORMAL
- en: With that, we have covered the main tools that are used during the **Assess**
    phase shown in *Table 3.1*). As mentioned earlier, there are other tools that
    are used in other phases in the adoption plan. We will cover the **Migrate & Modernize**
    stage in *Chapter 4*, *Performing migration to Azure*, and the **Optimize** and
    **Secure & Manage** stages in *Chapter 5*, *Operating Linux on Azure*.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have gathered all the necessary details of our application and infrastructure,
    we are ready to create the migration project plan.
  prefs: []
  type: TYPE_NORMAL
- en: Hands-on assess lab
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'So far, we have discussed different planning strategies and assessment methodologies.
    In this hands-on lab, we are going to assess servers that are running in a Hyper-V
    environment. Here is the architecture of the environment that we are going to
    assess:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The architecture of the environment with Hyper-V host, and two VMs for assessment](img/B17160_03_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.6: Environment for assessment'
  prefs: []
  type: TYPE_NORMAL
- en: In *Figure 3.6*, we can have a Hyper-V host, and two VMs are deployed on it.
    One VM (VM - 01) runs Ubuntu and has a LAMP server set up on it. The second VM
    (VM - 02) is a CentOS VM that is running a static website using Apache Webserver.
  prefs: []
  type: TYPE_NORMAL
- en: Our goal is to assess this environment and create an assessment report along
    with a dependency analysis.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned earlier in *Assessing tooling* section, we need to create an Azure
    Migrate project to kick off the assessment process.
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some of the prerequisites for this hands-on lab are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: You should have at least contributor permission on your Azure subscription.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Users should have permissions to register Azure AD apps or else should have
    an application developer role in Azure AD.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the Azure Migrate project
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The first step in using Azure Migrate starts with the creation of the Azure
    Migrate project. This service is used to store the metadata that is captured during
    the assessment and migration phases. The Azure Migrate project provides a centralized
    platform to keep a tab of all your assessments and migrations to Azure. Let''s
    navigate to the Azure portal and create an Azure Migrate project:'
  prefs: []
  type: TYPE_NORMAL
- en: To create an Azure Migrate project, navigate to All services in the Azure portal
    and search for Azure Migrate, as shown in *Figure 3.7*:![Searching for Azure Migrate
    in the top-right search box](img/B17160_03_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.7: Searching for Azure Migrate'
  prefs: []
  type: TYPE_NORMAL
- en: Once you are in the Azure Migrate blade, you will see different migration options
    for servers, databases, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Since we are assessing servers, you need to choose Assess and migrate servers
    or you can click on Servers from the Azure Migrate blade, as shown in *Figure
    3.8*:![Starting an Azure Migrate project by clicking on the Assess and migrate
    servers button](img/B17160_03_08.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.8: Starting the Azure Migrate project'
  prefs: []
  type: TYPE_NORMAL
- en: In the next window, you will get the Create project option and, once selected,
    you need to input basic details such as Subscription, Resource group, Migrate
    project, and Geography, as shown in *Figure 3.9*:![Creating an Azure Migrate project](img/B17160_03_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.9: Creating an Azure Migrate project'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the project is created, we will be presented with the Assessment tools
    and Migration tools options for servers. Since we are currently in the Assess
    phase, we will explore Assessment tools, as shown in *Figure 3.10*:![Azure Migrate:
    Server assessment tools - Discover and Assess](img/B17160_03_10.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.10: Server Assessment tools'
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to initiate the discovery of servers in our Hyper-V environment
    so that we can create the assessment. We will be using the Discover option shown
    in *Figure 3.10* to start the discovery process.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we must select the platform where our servers are currently deployed. You
    will get an option to choose from VMWare vSphere Hypervisor, Hyper-V, and Physical
    or others (AWS, GCP, and so on). Since our VMs are deployed on Hyper-V, let's
    select this option, as shown in *Figure 3.11*.
  prefs: []
  type: TYPE_NORMAL
- en: To run the discovery against our on-premises infrastructure, we need to deploy
    a new VM to our on-premises environment. This VM is called the Azure Migrate appliance,
    which will discover servers and send that information to Azure Migrate.
  prefs: []
  type: TYPE_NORMAL
- en: We need to give a name to the migrate appliance and generate a key, as shown
    in *Figure 3.11*. This key is later used to set up the migrate appliance on our
    Hyper-V host. You need to copy this key and keep this handy:![Generating an Azure
    Migrate project key for an appliance](img/B17160_03_11.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.11: Generating the Azure Migrate project key'
  prefs: []
  type: TYPE_NORMAL
- en: After creating the key, we need to download the Azure Migrate appliance. Basically,
    there are two ways in which to deploy the appliance, as shown in *Figure 3.11*.
  prefs: []
  type: TYPE_NORMAL
- en: You can download the VHD file and deploy it as a new VM in your Hyper-V environment
    or you can download a zip file that will contain the PowerShell scripts that can
    convert an existing VM to an Azure Migrate appliance. If you prefer to use an
    existing server as Migrate Appliance, Microsoft recommends using Windows Server
    2016 with at least 8vCPUs and 16 GB of RAM.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this hands-on lab, we will be downloading the VHD directly to our Hyper-V
    Host and creating a new VM. Using the VHD file, we need to create a new VM in
    our Hyper-V server using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open Hyper-V Manager, on the right-hand side. From Actions, select Import Virtual
    Machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will get the Before you begin page with the set of instructions. Click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the Locate folder, browse the folder where you have extracted the VHD
    and hit Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Virtual Machine and then click on Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Copy the virtual machine (create a new unique ID) as Import type and
    then hit Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leave Destination and Storage as their default settings and then click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the appropriate virtual switch that the VM will be using to connect to
    the network and click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, in the Summary page, review the configuration we selected and click
    Finish to initiate the VM import.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After a period of time, you'll be able to see the new VM in your Hyper-V Manager.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We now have our VM deployed in our environment. Now, it is time to start the
    discovery and send the information to the Azure Migrate project. Let's set up
    the appliance to push the data to Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up and registering the Azure Migrate appliance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The VM is deployed to the Hyper-V environment and now must configure it and
    connect to our Azure Migration project. We need to provide the password for the
    Windows Server and after that, we need to log in just like we do for any Windows
    server.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can connect to the Migrate appliance by going to `https://appliance name`
    or `IP address:44368`. If you open the Edge browser on the desktop, you will be
    redirected to the Appliance Configuration Manager page. The next step is to register
    the appliance with the project, as outlined in the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: We must agree to the terms and conditions to start using the Azure Migrate appliance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The prerequisite check will be done automatically and if there is any new update,
    the system will install it automatically, as shown in *Figure 3.12*:![Prerequisite
    checks such as connectivity, time, and latest updates in the Migrate appliance](img/B17160_03_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.12: Prerequisite check in the Migrate appliance'
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to input the Migrate appliance key, which we generated from
    the Azure portal when we initiated the Discover process (*Figure 3.11*).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The key needs to the entered into the textbox in order for the system to validate
    the key and register the appliance. Once the validation is done, you will be prompted
    with a device code to log in to Azure. We need to use Copy code & Login to authenticate
    with Azure, as shown in *Figure 3.13*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Registering an Azure Migrate appliance](img/B17160_03_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.13: Registering an Azure Migrate appliance'
  prefs: []
  type: TYPE_NORMAL
- en: In the new tab, you can sign in using the credentials that you use to sign into
    the Azure portal, and if the authentication is successful, you will be asked to
    close the newly opened tab. Also, as shown in *Figure 3.14*, you will be able
    to confirm from the Azure Migrate appliance screen whether the appliance was successful:![Successful
    registration](img/B17160_03_14.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.14: Successful registration'
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to provide the credentials for the Hyper-V cluster to the Azure
    Migrate appliance so that it can run Discovery. You can use Add credentials and
    enter the credentials for your Hyper-V host as shown in *Figure 3.15* and save
    it:![Adding Hyper-V credentials](img/B17160_03_15.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.15: Adding Hyper-V credentials'
  prefs: []
  type: TYPE_NORMAL
- en: Since we have stored the credentials, we will be using the credentials to connect
    to our Hyper-V host. You can add multiple Hyper-V clusters in a single shot, or
    you can import the list as a CSV. In our case, we have a single server, and we
    need to provide the IP address for the server and select the credentials created
    in *Step 5*, as shown in *Figure 3.16*:![Adding Hyper-V cluster details](img/B17160_03_16.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.16: Adding Hyper-V cluster details'
  prefs: []
  type: TYPE_NORMAL
- en: The Migrate appliance will use the credentials against the IP address we have
    entered to perform validation. If the credentials are correct, you will be able
    to see the successful message, as shown in *Figure 3.17*:![Successful connection
    to the host](img/B17160_03_17.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.17: Successful connection to the host'
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have completed the configuration of the appliance, we can start
    the discovery using the Start Discovery option. The discovery process may take
    some time and the discovered number will be reflected on the Azure portal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Since the appliance uses the FQDN for connection, if the name of the host cannot
    be resolved by DNS, you will not be able to discover any VMs and the revalidation
    would fail. The workaround is to modify the host file and add the FQDN and IP
    address.
  prefs: []
  type: TYPE_NORMAL
- en: The next step in our process is to verify from the Azure portal whether the
    discovery was successful and the appliance was able to discover all the VMs. In
    the following section, we will see how the discovery can be verified from the
    portal.
  prefs: []
  type: TYPE_NORMAL
- en: Verifying discovered VMs in the portal
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Once the discovery process is complete, you will be able to see the confirmation
    from the Migrate appliance. Now, it is time to check in the portal to see whether
    the appliance was able to push the information to our Azure Migrate project. You
    can verify this using the steps mentioned here:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the Azure Migrate dashboard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In Azure Migrate | Servers | Azure Migrate: Server Assessment page, click the
    icon that displays the count for Discovered servers.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In *Figure 3.18*, you can see that discovery was successful and the Azure portal
    indicates that three VMs have been discovered:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Verifying discovered servers](img/B17160_03_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.18: Verifying discovered servers'
  prefs: []
  type: TYPE_NORMAL
- en: Here, we see three VMs because the discovery process included the Migrate appliance
    as well. The next process is to run the assessment on the discovered servers,
    and this can be done by clicking on the Assess option next to Discover.
  prefs: []
  type: TYPE_NORMAL
- en: Running an assessment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As mentioned in the *Migration Assessment* section, the assessment creates
    the inventory of your on-premises servers. Run an assessment as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the Assess option from Azure Migrate: Server Assessment, as shown in
    *Figure 3.19*:![Starting assessment](img/B17160_03_19.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.19: Starting an assessment'
  prefs: []
  type: TYPE_NORMAL
- en: In Assess servers | Assessment Type, select the type as `Azure VM` and, in Discovery
    source, select `Machines discovered from Azure Migrate appliance`. You also have
    the option to upload your inventory as a CSV file and perform an assessment on
    that. The Assessment properties section will be populated automatically, and you
    can edit them using the Edit button if required, as shown in *Figure 3.20*:![Setting
    up the basics](img/B17160_03_20.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.20: Setting up the basics'
  prefs: []
  type: TYPE_NORMAL
- en: In the Assessment properties edit window, you will have the option to customize
    TARGET PROPERTIES, VM SIZE, and PRICING. These factors are used to run the assessment
    and generate the report. Also, you can include the Azure Hybrid Benefit in your
    calculation to exclude the license cost if you already have licenses purchased.
    You can update each of these factors as per your requirements. A sample configuration
    has been shown in *Figure 3.21*:![Assessment properties](img/B17160_03_21.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.21: Assessment properties'
  prefs: []
  type: TYPE_NORMAL
- en: Next, you can provide a name for your assessment and a name for the group of
    servers. Grouping helps you to assess a set of servers together. Finally, we will
    select the servers that need to be assigned and add them to the group, as shown
    in *Figure 3.22*:![Selecting servers to assess](img/B17160_03_22.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.22: Selecting servers to assess'
  prefs: []
  type: TYPE_NORMAL
- en: The final step is to create the assessment, which will create the group and
    run the assessment on the grouped servers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you refresh Assessment tools, you can see that Groups and Assessments have
    the value of 1, as visible in *Figure 3.23*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Verifying assessment from the Azure portal](img/B17160_03_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.23: Verifying assessment from the Azure portal'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If the data is not visible, try using the **Refresh** button and wait for the
    system to refresh.
  prefs: []
  type: TYPE_NORMAL
- en: Now we have the assessment, and it is time to review it.
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing the assessment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'An assessment primarily talks about three main factors:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Azure readiness**: Whether the discovered machines are suitable to run on
    Azure – in other words, are they ready for Azure?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monthly cost estimate**: Provides the estimated cost required to run these
    VMs on Azure once they are migrated. The cost breakdown is also provided in terms
    of what the cost for compute and the cost for storage would be.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Storage - Monthly cost estimate**: Estimated disk storage costs following
    migration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These are the steps involved in viewing an assessment:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In Servers | Azure Migrate: Server Assessment, click the number next to Assessments
    visible in *Figure 3.23*.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In Assessments, select an assessment to open it. You will be able to see the
    assessment report as shown in *Figure 3.24*:![Reviewing assessment](img/B17160_03_24.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.24: Reviewing an assessment'
  prefs: []
  type: TYPE_NORMAL
- en: If you would like to recalculate based on another target region or any other
    properties, you can edit the properties (using the Edit properties option as shown
    in *Figure 3.24*) and re-run the assessment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Here, we have only discovered the VMs; however, we have not performed a dependency
    analysis. This assessment report can be exported to an Excel sheet and you can
    share it with the stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will see how to use the agents to set up the dependency
    analysis in Azure Migrate.
  prefs: []
  type: TYPE_NORMAL
- en: Dependency analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Dependency analysis is only supported for VMWare VMs and Hyper V VMs. VMs discovered
    from other platforms such as Xen, or even from other cloud providers such as AWS
    and GCP, do not support dependency analysis.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned in the *Service Map* section, we can only run the agent-based dependency
    analysis on the Hyper V environment. In the case of VMWare VMs, it supports both
    agentless and agent-based dependency analysis.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start with the analysis, we need to associate a Log Analytics workspace
    with our Azure Migrate project. The following steps can be performed to associate
    the workspace with Azure Migrate: Server Assessment:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have discovered the machines for assessment, in Servers | Azure Migrate:
    Server Assessment, click Overview.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In Azure Migrate: Server Assessment, click Essentials.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In OMS Workspace, click Requires configuration, as shown in *Figure 3.25*:![Setting
    up the OMS configuration](img/B17160_03_25.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.25: Setting up the OMS configuration'
  prefs: []
  type: TYPE_NORMAL
- en: Once you select Requires configuration, as shown in *Figure 3.25*, you will
    be prompted to create a new Log Analytics workspace or associate an existing one
    in your Azure subscription.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you do not have an existing workspace, create a new one as shown in *Figure 3.26*:![Creating
    a Log Analytics workspace](img/B17160_03_26.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.26: Creating a Log Analytics workspace'
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to download and install the agents for dependency visualization.
    For this, we need to navigate to Discovered servers and check the Dependencies
    (Agent-based) column. Sometimes, this column will be hidden, and you can enable
    it using the Columns option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will select Requires agent installation against our discovered VM, as shown
    in *Figure 3.27*, to install the agents. For ease of demonstration, let's install
    the agents on the LAMP server:![Selecting agent installation](img/B17160_03_27.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.27: Selecting agent installation'
  prefs: []
  type: TYPE_NORMAL
- en: The portal will give you the steps to install the agents on both Windows and
    Linux servers. We are interested in the Linux servers, and so will follow that
    process. Also, we need to make a note of Workspace ID and Workspace key, shown
    in *Figure 3.28*. This is required in order to configure the agent:![Workspace
    information](img/B17160_03_28.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.28: Workspace information'
  prefs: []
  type: TYPE_NORMAL
- en: You can either download it in Linux using the `wget` command, or download it
    to your computer and transfer it to a Linux machine using `SFTP/SCP`. Let's download
    it using `wget` and configure the agents on the Linux server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can copy the link for the agents from the portal and pass that to `wget`
    to download the file, as shown in *Figure 3.29*:![Downloading agents](img/B17160_03_29.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 3.29: Downloading agents'
  prefs: []
  type: TYPE_NORMAL
- en: 'The MMA agent can be installed using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '`workspace id` and `workspace key` can be obtained from the Azure portal, as
    shown in *Figure 3.28*. At the time of writing this book, the latest version for
    the MMA agent is `1.13.33-0` and we install this as shown in *Figure 3.30*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing the MMA agent](img/B17160_03_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.30: Installing the MMA agent'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we must download and install the dependency agent using the following
    commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the dependency agent is installed, we will be able to see the dependencies
    from Azure Migrate: Server Assessment. Click Discovered servers. In the Dependencies
    column, click View dependencies to view the dependencies for the server. It''s
    expected to take some time to load the dependencies.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also run Kusto queries against the Log Analytics workspace to review
    the connections and validate the data.
  prefs: []
  type: TYPE_NORMAL
- en: 'With that, we have successfully assessed the workloads that are deployed in
    the Hyper-V host and set up dependency analysis. We have used Hyper-V for a demo.
    However, in your environment, you may be using VMWare, so *Table 3.2* displays
    a list of links that can be used to assess other environments, along with the
    documentation for Hyper-V:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Platform** | **Discover** | **Assess** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| **Hyper-V** | [https://docs.microsoft.com/azure/migrate/tutorial-discover-hyper-v](https://docs.microsoft.com/azure/migrate/tutorial-discover-hyper-v)
    | [https://docs.microsoft.com/azure/migrate/tutorial-assess-hyper-v](https://docs.microsoft.com/azure/migrate/tutorial-assess-hyper-v)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **VMWare** | [https://docs.microsoft.com/azure/migrate/tutorial-discover-vmware](https://docs.microsoft.com/azure/migrate/tutorial-discover-vmware)
    | [https://docs.microsoft.com/azure/migrate/tutorial-assess-vmware-azure-vm](https://docs.microsoft.com/azure/migrate/tutorial-assess-vmware-azure-vm)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **Physical Servers** | [https://docs.microsoft.com/azure/migrate/tutorial-discover-physical](https://docs.microsoft.com/azure/migrate/tutorial-discover-physical)
    | [https://docs.microsoft.com/azure/migrate/tutorial-assess-physical](https://docs.microsoft.com/azure/migrate/tutorial-assess-physical)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **AWS** | [https://docs.microsoft.com/azure/migrate/tutorial-discover-aws](https://docs.microsoft.com/azure/migrate/tutorial-discover-aws)
    | [https://docs.microsoft.com/azure/migrate/tutorial-assess-aws](https://docs.microsoft.com/azure/migrate/tutorial-assess-aws)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **GCP** | [https://docs.microsoft.com/azure/migrate/tutorial-discover-gcp](https://docs.microsoft.com/azure/migrate/tutorial-discover-gcp)
    | [https://docs.microsoft.com/azure/migrate/tutorial-assess-gcp](https://docs.microsoft.com/azure/migrate/tutorial-assess-gcp)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **Import CSV** | N/A | [https://docs.microsoft.com/azure/migrate/tutorial-discover-import](https://docs.microsoft.com/azure/migrate/tutorial-discover-import)
    |'
  prefs: []
  type: TYPE_TB
- en: 'Table 3.2: Assessment documentation for other platforms'
  prefs: []
  type: TYPE_NORMAL
- en: The rationale behind this hands-on lab was to give you an idea of the steps
    and familiarize you with the process. Before we conclude this chapter, let's quickly
    go through a quick summary of the topics we have discussed so far.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Assessing the current architecture and workloads is a very important part of
    a migration project, as we learned in this chapter. For this, we used Azure Migrate
    to create a solid assessment report. We also discussed tools for calculating cost
    savings on Azure and went through a hands-on lab for a migration assessment.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we also discussed some of the popular workloads on Linux, including
    the LAMP stack and database servers. We also covered some of the more technically
    difficult scenarios regarding high-performance computing, clustering, shared storage,
    and SAP applications.
  prefs: []
  type: TYPE_NORMAL
- en: In the *Pre-project preparations* section, the importance of involving the right
    project team members was also covered as this ensures that you have all the necessary
    skills, including networking and Linux administration, for your migration project.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will focus on practical migration, and you will have the opportunity
    to use everything learned so far in a hands-on lab.
  prefs: []
  type: TYPE_NORMAL
