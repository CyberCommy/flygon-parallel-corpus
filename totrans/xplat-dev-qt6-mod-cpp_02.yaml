- en: '*Chapter 1*: Introduction to Qt 6'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Qt** (pronounced *cute*, not *que-tee*) is a cross-platform application development
    framework designed to create great software applications with uniform **user interfaces**
    (**UIs**) for desktop, embedded, and mobile platforms. It provides developers
    with a great set of tools to design and build great applications without worrying
    about platform dependency. In this chapter, you will learn the basics about the
    framework, its history, and how to install Qt on different platforms. You will
    learn what Qt is and why it is beneficial to use it. By the end of the chapter,
    you will be able to install Qt and get started on your platform of choice.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introducing Qt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reasons for using Qt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading and installing Qt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building Qt 6 from source
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get started, you should have a desktop or laptop running on Windows, Linux,
    or macOS. Please use the updated Windows 10 or Ubuntu 20.04 **long-term support**
    (**LTS**). Alternatively, use the latest version of macOS (newer than macOS 10.14),
    such as macOS Catalina.
  prefs: []
  type: TYPE_NORMAL
- en: For your **integrated development environment** (**IDE**) to run smoothly, your
    system should have at least an Intel Core i5 processor along with a minimum of
    4 **gigabytes** (**GB**) of **random-access memory** (**RAM**).
  prefs: []
  type: TYPE_NORMAL
- en: You will need an active internet connection to download and install Qt. As a
    prerequisite, you should also be familiar with C++ as Qt requires C++ programming
    knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing Qt
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Qt is a cross-platform software development framework for desktop, embedded,
    and mobile platforms. It follows the philosophy of *code less, create more, and
    deploy everywhere.* It supports platforms such as Windows, Linux, macOS, VxWorks,
    QNX, Android, iOS, and so on. The software also supports several **microcontroller
    units** (**MCUs**) from NXP, Renesas, and STMicroelectronics running on bare metal
    or FreeRTOS.
  prefs: []
  type: TYPE_NORMAL
- en: Qt was born as an attempt to provide a uniform **graphical user interface**
    (**GUI**) with the same look, feel, and functionality across different platforms.
    Qt accomplishes that by providing a framework to write code once and ensure that
    it runs on other platforms with minimal or no modifications. It is not a programming
    language, but rather a framework written in C++. The Qt framework and tools are
    dual-licensed under open source and commercial licenses.
  prefs: []
  type: TYPE_NORMAL
- en: Qt uses a modular approach to group related functionalities together. Qt Essentials
    are the foundation of Qt on all platforms. These modules are general and useful
    for most Qt-based applications. Essential modules are available for open source
    usage. Examples of Qt Essentials modules are Qt Core, Qt GUI, Qt QML, Qt Widgets,
    and so on. There are also special-purpose add-on modules that provide specific
    functionalities and come with certain license obligations. Examples of add-on
    modules are Qt 3D, Qt Bluetooth, Qt Charts, Qt Data Visualization, and more. As
    well as this, there are value-added modules such as Qt Automotive Suite, Qt for
    Device Creation, and Qt for MCUs, among others available under the commercial
    license.
  prefs: []
  type: TYPE_NORMAL
- en: To find out more about different Qt modules, visit [https://doc.qt.io/qt-6/qtmodules.html](https://doc.qt.io/qt-6/qtmodules.html).
  prefs: []
  type: TYPE_NORMAL
- en: Qt was released for public use in 1995\. Since then, there have been many improvements
    and major changes. Qt 6 is the new major version of Qt. Its main goals are to
    remain prepared for the requirements coming in 2020 and beyond, remove obsolete
    modules, and be more maintainable. With this focus, there are architectural changes
    in Qt 6 that may break some level of backward compatibility with earlier versions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some essential modifications in Qt 6 are outlined here:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction of strong typing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript as an optional feature of **Qt Modeling Language** (**QML**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of QML versioning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of the duplicate data structures between QObject and QML
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoidance of the creation of runtime data structures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compilation of QML into efficient C++ and native code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support for hiding implementation details
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better integration of tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we've covered the basics, let's look at the main reasons for using
    Qtâ€¦
  prefs: []
  type: TYPE_NORMAL
- en: Reasons for using Qt
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Qt is a modular, cross-platform application development framework. The biggest
    misunderstanding about Qt is that many people consider it as a GUI framework.
    However, Qt is much more than a GUI framework. It not only comprises a GUI module,
    but also a set of modules to make application development faster and easier to
    scale on various platforms. The biggest benefit of using Qt is its ability to
    provide portability to various platforms. Here are some advantages of using Qt
    for developers:'
  prefs: []
  type: TYPE_NORMAL
- en: You can create incredible user experiences for your customers and boost your
    company brand using Qt.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cross-platform development saves both time and money. You can target multiple
    platforms with the same code base.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Qt is known for making C++ easy and accessible. With Qt, developers can easily
    create high-performance, scalable applications with a fluid UI.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Due to the open source model, the framework is future-proof, along with a great
    ecosystem.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It further supports different programming languages and is a very flexible and
    reliable framework. Consequently, there are great companies such as Adobe, Microsoft,
    Samsung, AMD, HP, Philips, and MathWorks using Qt for their applications. Many
    open source projects such as VLC (previously known as VideoLAN Client), **Open
    Broadcaster Software** (**OBS**), and WPS Office (where **WPS** stands for **Writer,
    Presentation, and Spreadsheets**) are also built on Qt.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The core values of Qt are outlined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Cross-platform nature
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Highly scalable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Very easy to use
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Built-in with world-class **application programming interfaces** (**APIs**),
    tools, and documentation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintainable, stable, and compatible
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A large community of users
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Whether you are a hobbyist, a student, or working for a company, Qt provides
    great flexibility to use its modules as per your requirement. Many universities
    are using Qt as one of their coursework subjects. So, Qt is a great choice for
    programmers to start building new applications with ready-made features. Let's
    start by downloading and installing Qt 6 on your machine.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and installing Qt
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are different ways to install the Qt framework and tools on your system.
    You can download an online or offline installer from the Qt website, or you can
    build the source packages yourself. Qt recommends using the online installer for
    first-time installations and the **Qt Maintenance Tool** for modifying the installation
    later.
  prefs: []
  type: TYPE_NORMAL
- en: 'The installers allow you to download and install the following components:'
  prefs: []
  type: TYPE_NORMAL
- en: Qt libraries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Qt Creator IDE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Documentation and examples
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Qt source code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add-On modules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The online installer allows you to select open source or commercial versions
    of Qt, tools, and Add-On modules to install based on the chosen license. The online
    installer doesn't contain the Qt components, but it is a downloader client to
    download all the relevant files. You can install once the download is complete.
    You will require a Qt account to download and install Qt. An evaluation version
    for the commercial Qt gives you free trial-period access, with all commercial
    packages and access to official Qt support. The installer requires you to sign
    in with your Qt account. If you don't have a Qt account, you can sign up during
    the installation process. The installer fetches the license attached to the account
    from the Qt server and lists down modules according to your license. If you are
    new to Qt, then we recommend that you start with the open source version.
  prefs: []
  type: TYPE_NORMAL
- en: The offline installer is a platform-specific package that includes all Qt modules
    and add-ons relevant for the platform. Due to the official policy changes, open
    source offline installers are not available any more since Qt 5.15\. If you have
    a commercial license, then you can provide the credentials during the installation
    process. You can locate your license key in your **Qt account** web portal.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download them from the following links:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Open source**: [https://www.qt.io/download-open-source](https://www.qt.io/download-open-source)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Commercial**: [https://www.qt.io/download](https://www.qt.io/download)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Offline**: [https://www.qt.io/offline-installers](https://www.qt.io/offline-installers)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The Qt Company provides users with a dual-licensing option. As a beginner, you
    can get started with an open source license to explore Qt. If you are working
    for a company, then discuss with your manager or **Information Technology** (**IT**)
    or legal team to procure a commercial license or to understand legal obligations.
    You can learn more about Qt licensing at [https://www.qt.io/licensing/](https://www.qt.io/licensing/).
  prefs: []
  type: TYPE_NORMAL
- en: Downloading Qt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s start by downloading Qt onto your machine, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: To begin, visit the [https://www.qt.io/download](https://www.qt.io/download)
    download page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Download. Try. Buy****.** button in the top-right corner. You
    will see different download options here.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you want to try the commercial version, then click on **Try Qt** section.
    If you already have a Qt account, then you can log in into the account under the
    **Existing customers** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Considering that you are new to Qt, we will begin with the open source version.
    Click on the **Go open source** button, as shown in the following screenshot:![Figure
    1.1 â€“ Qt website download options
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.1_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.1 â€“ Qt website download options
  prefs: []
  type: TYPE_NORMAL
- en: On the next screen, you will find **Download the Qt Online Installer** button.
    Click on it to proceed to the download link.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The web page will automatically detect the underlying platform details from
    the browser and will show you the `download` folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, let's begin with the installation process on the Windows platform.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Qt on Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, let''s start the installation process on Windows! Proceed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: You will find a file with the name `qt-unified-windows-x86-%VERSION%-online.exe`
    inside your download folder. Double-click on the executable, and you will see
    a **Welcome** screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Next** button, and a credentials screen will appear, asking you
    to log in with your Qt account. If you don't have one, then you can sign up on
    the same page, as shown in the following screenshot:![Figure 1.2 â€“ Login screen
    of the installer
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.2_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.2 â€“ Login screen of the installer
  prefs: []
  type: TYPE_NORMAL
- en: In the next screen, you will be presented with the open source usage obligations
    agreement. You won't get this screen if you are installing using a commercial
    license. Click on the first checkbox, saying **I have read and approve the obligations
    of using Open Source Qt**, and acknowledge that you are not using Qt for commercial
    purposes. Make sure you read the terms and conditions mentioned in the agreement!
    Then, click on the **Next** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The next screen will provide you with options related to tracking and sharing
    pseudonymous data in Qt Creator. You may allow or disable these options based
    on your preferences. Then, click on the **Next** button to proceed to the next
    screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next screen, you can specify the installation path. You may continue
    with the default path, or you can change it to any other path if you don't have
    enough space on the default drive. You can also choose whether you want to associate
    common file types with Qt Creator by selecting the checkbox option at the bottom.
    Click on the **Next** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, you will be presented with a list where you can select the version(s)
    of Qt you need to install on your system. You may simply proceed with the default
    options. If you don't need some of the components, then you can unselect them
    to reduce the size of the download. You can update the Qt components using the
    **Maintenance Tool** anytime later. To complete the installation process, click
    on the **Next** button. The component selection screen can be seen here:![Figure
    1.3 â€“ Component selection screen of the installer
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.3_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.3 â€“ Component selection screen of the installer
  prefs: []
  type: TYPE_NORMAL
- en: In the next screen, you will be presented with the license agreement. Click
    on the first radio button, which says **I have read and agree to the terms contained
    in the license agreements**. Again, make sure you read the terms and conditions
    mentioned in the license agreement, and then click on the **Next** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, you can create **Start** menu shortcuts on Windows. This
    screen will not be available for other platforms. Once you have finished doing
    this, click on the **Next** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, Qt is ready to be installed in your system. Make sure you have a working
    internet connection and data balance. Click on the **Install** button to begin
    the installation. The download process will take time, depending on your internet
    speed. Once the required files are downloaded, the installer will automatically
    install them in the previously selected path.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the installation is finished, the installer will make an entry for the
    **Maintenance Tool**, which will help you later to make changes to the libraries.
    Click on the **Next** button to move to the last screen of the installer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In order to complete the installation process, click on the **Finish** button.
    If you have left the **Launch Qt Creator** checkbox checked, then Qt Creator will
    be launched. We will discuss this in more detail in the next chapter. Now, Qt
    is ready to be used on your Windows machine. Click on the **Finish** button to
    exit the wizard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Installing Qt on Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now, let's install the Qt framework on the latest **LTS version of Linux**,
    such as Ubuntu 20.04, CentOS 8.1, or openSUSE 15.1\. We will be focusing on the
    most popular Linux distribution, Ubuntu. You can follow the same steps as mentioned
    previously to download the online installer from the Qt website.
  prefs: []
  type: TYPE_NORMAL
- en: 'On Ubuntu, you will get an installer file such as `qt-unified-linux-x64-%VERSION%-online.run`,
    where `%VERSION%` is the latest versionâ€” for example: `qt-unified-linux-x86-4.0.1-1-online.run`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You may have to give write permissions to the downloaded file before executing
    it. To do that, open the terminal and run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You can start the install process by double-clicking the downloaded installer
    file. The installation requires superuser access. You may have to add a password
    in the authorization dialog during the installation. You can also run the installer
    from the terminal, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: You will see similar screens to those shown for the Windows platform. Apart
    from the **operating system** (**OS**)-specific title bar changes, all the screens
    remain the same for installation in Ubuntu or similar Linux flavors.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At the time of writing the book, there was no Ubuntu or Debian package available
    for Qt 6 as the respective maintainers have stepped down. Hence, you may not get
    the Qt 6 package from the terminal.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Qt on macOS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are a macOS user, then you can also install the same way as discussed
    for the earlier platforms. You can follow the same steps mentioned previously
    to download the online installer from the Qt website.
  prefs: []
  type: TYPE_NORMAL
- en: You will get an installer file such as `qt-unified-mac-x64-%VERSION%-online.dmg`,
    where `%VERSION%` is the latest version (such as `qt-unified-mac-x64-4.0.1-1-online.dmg`).
  prefs: []
  type: TYPE_NORMAL
- en: 'Qt has a dependency on Xcode. To install Qt on your Mac, you will need Xcode
    installed on your machine, otherwise, it will refuse to install. If you are an
    Apple developer, then your Mac may have Xcode installed. If you don''t have Xcode
    installed on your machine, then you may proceed to install Xcode''s **Command
    Line Tools** instead of Xcode. This will save time and storage space on your machine:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin, type the following command on the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If the terminal shows the following output, then your system is ready for the
    next steps:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The next step is to install the Qt framework. Double-click on the installer
    file to launch the installation interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the installer still complains that Xcode is not installed, then keep clicking
    **OK** until the message goes away permanently. Remember the installation path.
    Once the installation is finished, you are ready to use Qt on your machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Further instructions on Qt for macOS can be found at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://doc.qt.io/qt-6/macos.html](https://doc.qt.io/qt-6/macos.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Updating or removing Qt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once Qt is installed, you can modify the componentsâ€”including updating, adding,
    and removing componentsâ€”using the **Maintenance Tool** under the installation
    directory. The directory structure remains the same for all desktop platforms.
    The installation directory contains folders and files, as shown in the following
    screenshot (on Windows):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.4 â€“ The Maintenance Tool inside the installed folder'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.4_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.4 â€“ The Maintenance Tool inside the installed folder
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s begin with the maintenance process! You can add, remove, and update
    modules using the **Maintenance Tool**. Proceed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the `MaintenanceTool.exe` executable to launch the maintenance interface.
    Click on the **Next** button, and a credentials screen will appear, asking you
    to log in with your Qt account. The login details will be prefilled from your
    last login session. You can click **Next** to add or update components or select
    the **Uninstall only** checkbox to remove Qt from your system. The following screenshot
    shows what the credentials screen looks like:![Figure 1.5 â€“ Welcome screen of
    the Maintenance Tool
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.5_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.5 â€“ Welcome screen of the Maintenance Tool
  prefs: []
  type: TYPE_NORMAL
- en: Once you are logged in, the tool will present you with options to add or remove
    or update the components, as shown in the following screenshot. Click on the **Next**
    button to proceed further:![Figure 1.6 â€“ Setup screen of the Maintenance Tool
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.6_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.6 â€“ Setup screen of the Maintenance Tool
  prefs: []
  type: TYPE_NORMAL
- en: On the next screen, you can select new components from the latest releases or
    the archived version. You can click on the **Filter** button to filter versions
    as per your requirement. You can also add new platform-specific components such
    as Android from the component list. If the component is existing and you uncheck
    it, then it will be removed from your desktop during the update. Once you have
    selected the components, click on the **Next** button. The following screenshot
    shows what the component selection screen looks like:![Figure 1.7 â€“ Component
    selection screen
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.7_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.7 â€“ Component selection screen
  prefs: []
  type: TYPE_NORMAL
- en: You will then come across the update screen. This screen will tell you how much
    storage space is required for the installation. If you are running out of storage
    space, then you may go back and remove some existing components. Click on the
    **Update** button to begin the process, as illustrated in the following screenshot:![Figure
    1.8 â€“ The Ready to Update screen of the Maintenance Tool
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.8_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.8 â€“ The Ready to Update screen of the Maintenance Tool
  prefs: []
  type: TYPE_NORMAL
- en: You can abort the update installation process by clicking on the **Cancel**
    button. Qt will warn you and ask you for confirmation before aborting the installation
    process, as illustrated in the following screenshot. Once the process is aborted,
    click on the **Next** button to exit the wizard:![Figure 1.9 â€“ The cancel dialog
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.9_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.9 â€“ The cancel dialog
  prefs: []
  type: TYPE_NORMAL
- en: Launch the **Maintenance Tool** again to update existing components from the
    latest releases. You can click on the **Quit** button to exit the **Maintenance
    Tool**. Please wait while the installer fetches the meta-information from the
    remote repository. Click on the **Next** button to see the available components.
    The update option is illustrated in the following screenshot:![Figure 1.10 â€“ The
    Update option in the Maintenance Tool
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.10_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.10 â€“ The Update option in the Maintenance Tool
  prefs: []
  type: TYPE_NORMAL
- en: Next, you can select which components to update from the checkboxes. You can
    choose to update all or you can update selectively. The installer will show how
    much storage space will be required for the update, as illustrated in the following
    screenshot. You can click **Next** to go to the update screen and begin the update.
    Then, on the next screen, click on the **Update** button to download the update
    packages:![Figure 1.11 â€“ Components available for update
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.11_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.11 â€“ Components available for update
  prefs: []
  type: TYPE_NORMAL
- en: Once the installation is finished, the installer makes entries for the Maintenance
    Tool, which will help you make changes to the libraries later. This is illustrated
    in the following screenshot. Click on the **Next** button to move to the last
    screen of the installer:![Figure 1.12 â€“ The Update finished screen in the Maintenance
    Tool
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.12_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.12 â€“ The Update finished screen in the Maintenance Tool
  prefs: []
  type: TYPE_NORMAL
- en: In the last screen, you will see **Restart** and **Finish** buttons. Click on
    the **Finish** button to exit the Qt wizard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Similarly, you can restart or launch the **Maintenance Tool** and select the
    **Remove all components** radio button. Click on the **Next** button to begin
    the uninstallation process, as illustrated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.13 â€“ The Remove option in the Maintenance Tool'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.13_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.13 â€“ The Remove option in the Maintenance Tool
  prefs: []
  type: TYPE_NORMAL
- en: 'Please note that on clicking the **Uninstall** button, all the Qt components
    will be removed from your system; you will have to reinstall Qt if you want to
    use them again. Click on **Cancel** if you don''t intend to remove the Qt components
    from your system, as illustrated in the following screenshot. If you intend to
    remove the existing version and use a newer version of Qt, then select the **Add
    or remove components** option, as discussed earlier. This will remove older Qt
    modules and free up your disk space:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.14 â€“ The Uninstall screen in the Maintenance Tool'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.14_B16231.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.14 â€“ The Uninstall screen in the Maintenance Tool
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we learned about modifying an existing Qt installation through
    the Maintenance Tool. Now, let's learn how to build and install Qt from the source
    code.
  prefs: []
  type: TYPE_NORMAL
- en: Building Qt 6 from source
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you want to build the framework and tools yourself or experiment with the
    latest unreleased code, then you can **build Qt from the source code**. If you''re
    going to develop a specific Qt version from the source, then you can download
    the Qt 6 source code from the official releases link, as shown here: [https://download.qt.io/official_releases/qt/6.0/](https://download.qt.io/official_releases/qt/6.0/).'
  prefs: []
  type: TYPE_NORMAL
- en: If you are a commercial customer, then you can download the **Source Packages**
    from your Qt account portal. Platform-specific building instructions are discussed
    in the upcoming subsections.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also clone from the GitHub repository, and check out the desired branch.
    At the time of authoring this book, the Qt 6 branch remained inside the Qt 5 super
    module. You can clone the repository from the following link: `git://code.qt.io/qt/qt5.git`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `qt5.git` repository may get renamed to `qt.git` in the future for maintainability.
    Please refer to the `QTQAINFRA-4200` Qt ticket. Detailed instructions on how to
    build Qt from Git can be found at the following link: [https://wiki.qt.io/Building_Qt_6_from_Git](https://wiki.qt.io/Building_Qt_6_from_Git).'
  prefs: []
  type: TYPE_NORMAL
- en: Ensure that you install the latest versions of Git, Perl, and Python on your
    machine. Make sure there is a working C++ compiler before proceeding to the platform-specific
    instructions in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Qt on Windows from source
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To install Qt 6 on Windows from source code, follow these next steps:'
  prefs: []
  type: TYPE_NORMAL
- en: First of all, download the source code from Git or from the open source download
    link mentioned earlier. You will get a compressed file as `qt-everywhere-src--%VERSION%.zip`,
    where `%VERSION%` is the latest version (such as `qt-everywhere-src-6.0.3.zip`).
    Please note that suffixes such as `-everywhere-src-` may get removed in the future.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have downloaded the source archive, extract it to a desired directoryâ€”for
    example, `C:\Qt6\src`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next step, configure the build environment with a supported compiler
    and the required build tools.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, add the respective installation directories of `CMake`, `ninja`, `Perl`,
    and `Python` to your `PATH` environment variable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The next step is to build the Qt library. To configure the Qt library for your
    machine type, run the `configure.bat` script in the source directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In this step, build Qt by typing the following command in Command Prompt:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, enter the following command in Command Prompt to install Qt on your machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Your Windows machine is now ready to use Qt.
  prefs: []
  type: TYPE_NORMAL
- en: 'To understand more about the configure options, visit the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://doc.qt.io/qt-6/configure-options.html](https://doc.qt.io/qt-6/configure-options.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Detailed build instructions can be found at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://doc.qt.io/qt-6/windows-building.html](https://doc.qt.io/qt-6/windows-building.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Qt on Linux from source
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To build the source package on Linux distributions, run the following set of
    instructions on your terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: First of all, download the source code from Git or from the open source download
    link mentioned earlier. You will get a compressed file as `qt-everywhere-src--%VERSION%.tar.xz`,
    where `%VERSION%` is the latest version (such as `qt-everywhere-src-6.0.3.tar.xz`).
    Please note that suffixes such as `-everywhere-src-` may get removed in the future.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you have downloaded the source archive, uncompress the archive and unpack
    it to a desired directoryâ€”for example, `/qt6`, as illustrated in the following
    code snippet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'To configure the Qt library for your machine, run the `./configure` script
    in the source directory, as illustrated in the following code snippet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'To create the library and compile all the examples, tools, and tutorials, type
    the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The next step is to set the environment variables. In `.profile` (if your shell
    is `bash`, `ksh`, `zsh`, or `sh`), add the following lines of code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'In `.login` (if your shell is `csh` or `tcsh`), add the following line of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: If you use a different shell, modify your environment variables accordingly.
    Qt is now ready to be used on your Linux machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'Detailed building instructions for Linux/X11 can be found at the following
    link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://doc.qt.io/qt-6/linux-building.html](https://doc.qt.io/qt-6/linux-building.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Qt on macOS from source
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Qt has a dependency on **Xcode**. To install Qt on your Mac, you will need
    Xcode installed on your machine. If you don''t have Xcode installed on your machine,
    then you may proceed to install Xcode''s **Command Line Tools**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin, type the following command on the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'If the terminal shows the following output, then your system is ready for the
    next steps:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'To build the source package, run the following set of instructions on your
    terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'To configure the Qt library for your Mac, run the `./configure` script in the
    source directory, as illustrated in the following code snippet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'To create a library, run the `make` command, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'If `-prefix` is outside the build directory, then type the following lines
    to install the library:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'The next step is to set the environment variables. In `.profile` (if your shell
    is `bash`), add the following lines of code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'In `.login` (if your shell is `csh` or `tcsh`), add the following line of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Your machine is now ready for Qt programming.
  prefs: []
  type: TYPE_NORMAL
- en: 'Detailed building instructions for macOS can be found here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://doc.qt.io/qt-6/macos-building.html](https://doc.qt.io/qt-6/macos-building.html)'
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we learned how to install Qt from source on your favorite platform.
    Now, let's summarize our learning.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter explained the basics of the Qt framework and what it can be used
    for. Here, we discussed the history, different modules, and advantages of using
    Qt. We also learned about different methods of installation with license obligations,
    giving step-by-step installation procedures for Qt on different desktop platforms.
    Now, your machine is ready to explore Qt.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will discuss the Qt Creator IDE. You will learn about
    the UI of the IDE, different configurations, and how to use it for your Qt project.
  prefs: []
  type: TYPE_NORMAL
