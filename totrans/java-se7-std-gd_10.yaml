- en: Appendix A. Test Your Knowledge – Answers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Chapter 1: Getting Started with Java'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
- en: '| 1 | a | The second command line argument is displayed. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
- en: '| 2 | a, b, and d | Option c is incorrect because you cannot assign a double
    value to an integer variable. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
- en: 'Chapter 2: Java Data Types and Their Usage'
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
- en: '| 1 | c | You cannot access an instance variable from a static method. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
- en: '| 2 | c and e | Option a is incorrect because single quotes are used for character
    data. Option b requires a suffix of `f` as in `3.14159f`. A byte accepts only
    the values from -128 to +127. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
- en: '| 3 | b and d | Option a is incorrect because instance variables need to be
    used with an object. Option c is incorrect because instance variables cannot be
    used with a classname. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
- en: '| 4 | a, b, and d | There is no `StringBuilder` `toInteger` method. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
- en: '| 5 | b | The `lastIndexOf` method takes a single argument of char. The `charAt`
    method returns the letter at the position. The last use of `indexOf` does not
    take both a string and a char argument. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
- en: '| 6 | c | Option a only compares equality of objects. Option b is incorrect
    because there is no such method as `matchCase` In option d, the `equals` method
    uses the case which is different in the two strings. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
- en: 'Chapter 3: Decision Constructs'
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
- en: '| 1 | b | The `%` operator is the modulo operator and returns the remainder.
    |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
- en: '| 2 | a and c | Option b evaluates to -24\. Option d evaluates to 11. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
- en: '| 3 | b | The bit sequence 0001000 is shifted to the right 3 positions with
    a zero sign fill. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
- en: '| 4 | a and c | Option b results in a comparison between `i` and `j` which
    returns a Boolean value. This value cannot be compared against the integer `k`.
    Option d requires an operand before the expression, `>k`. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
- en: '| 5 | b | The default case can be positioned anywhere within the switch. As
    all of the cases, except the first one, are missing a break statement, flow falls
    through each of the last three cases. While it is not common, constants can be
    used for switch statements. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
- en: 'Chapter 4: Using Arrays and Collections'
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
- en: '| 1 | a and d | The number of elements in an array declaration is not used
    in the declaration. However, we can use the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '|'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '| 2 | b | At least the first dimension of a multidimensional array must be
    specified. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
- en: '| 3 | a and c | The `contains` method will return true if the object is found
    and `indexOf` takes an object reference and returns the index of the object if
    found, otherwise it returns a -1\. The `indexOf` method does not take an integer
    argument and the hasObject method does not exist. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
- en: 'Chapter 5: Looping Constructs'
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
- en: '| 1 | a and d | The other options will not work because the expression does
    not evaluate to a Boolean value. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
- en: '| 2 | b, c, and d | You cannot use `[]` in a for-each statement. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
- en: '| 3 | a and b | Option c needs parentheses around the expression, `i < 5`.
    Option d requires a block statement if more than one statement is used between
    the `do` and `while` keywords. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
- en: '| 4 | a, b, c, and d | They are all equivalent. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
- en: '| 5 | a | The continue statement skips values `3` for `j`. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
- en: 'Chapter 6: Classes, Constructors, and Methods'
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
- en: '| 1 | a, c, and d | Option b fails to initialize the array properly. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
- en: '| 2 | c | You cannot access an instance method from a static method. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
- en: '| 3 | a | The return value is not considered when overloading a method. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
- en: '| 4 | c and d | The last line is a method that happens to have the same name
    as the constructor. As there are constructors defined but no default constructor,
    the class has no default constructor. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
- en: '| 5 | a and b | Only the `private` and `public` keywords can be used when declaring
    a class and the `private` keyword can only be used with inner classes. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: 5 | a和b | 在声明类时只能使用`private`和`public`关键字，`private`关键字只能用于内部类。
- en: '| 6 | c | As the classes are on the same package and all of the methods are
    visible except for the private method. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 6 | c | 由于这些类在同一个包中，除了私有方法之外，所有方法都是可见的。|'
- en: '| 7 | d | The `i` variable in the main is not modified, as it is passed by
    value. While the string is passed by reference, the local variable `s` was modified
    in the third method, not the one in the `main` method. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| 7 | d | `main`中的`i`变量没有被修改，因为它是按值传递的。虽然字符串是按引用传递的，但是在第三个方法中修改的是局部变量`s`，而不是`main`方法中的变量。'
- en: 'Chapter 7: Inheritance and Polymorphism'
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章：继承和多态
- en: '| Question No. | Answer | Explanation |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 问题编号 | 答案 | 解释 |'
- en: '| --- | --- | --- |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 1 | a and d | This results in `ClassC` being the "grandchild" of `ClassA`.
    |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: 1 | a和d | 这导致`ClassC`成为`ClassA`的“孙子”。
- en: '| 2 | a and d | Overloading only occurs within the same class. It is not necessary
    to have a base class. A common implemented interface will also work for polymorphic
    behavior. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: 2 | a和d | 重载只会发生在同一个类内。不需要有一个基类。一个常见的实现接口也可以用于多态行为。
- en: '| 3 | d | The other methods do not exist. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: 3 | d | 其他方法不存在。
- en: '| 4 | b | The others will generate syntax errors. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 4 | b | 其他的会生成语法错误。'
- en: '| 5 | c | The first answer is used only as the first statement of a constructor.
    The second answer generates a syntax error. The fourth option results in unbounded
    recursion. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 5 | c | 第一个答案只用作构造函数的第一个语句。第二个答案会生成语法错误。第四个选项会导致无限递归。'
- en: '| 6 | a | An abstract class does not have to have abstract methods and can
    extend other classes, whether they are abstract or not. It is common to find abstract
    classes that implement an interface. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: 6 | a | 抽象类不一定要有抽象方法，可以扩展其他类，无论它们是否是抽象的。通常可以找到实现接口的抽象类。
- en: 'Chapter 8: Handling Exceptions in an Application'
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章：在应用程序中处理异常
- en: '| Question No. | Answer | Explanation |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 问题编号 | 答案 | 解释 |'
- en: '| --- | --- | --- |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '---'
- en: '| 1 | c and d | Checked exceptions are those classes that extend the `Exception`
    class but not the `RuntimeException` class. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 1 | c和d | 已检查的异常是那些扩展了`Exception`类但没有扩展`RuntimeException`类的类。'
- en: '| 2 | b and c | The derived most class should be caught first. The order of
    classes at the same hierarchy level is not important. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: 2 | b和c | 应该首先捕获派生最多的类。在同一层次结构的类的顺序并不重要。
- en: '| 3 | d | Checked exceptions should be handled. They may be handled using a
    try-catch block or may be re-thrown to another method in the call stack which
    is better suited to deal with the exception. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 3 | d | 应该处理已检查的异常。它们可以使用try-catch块处理，也可以重新抛出到调用堆栈中更适合处理异常的另一个方法中。'
- en: '| 4 | a and d | We can normally handle checked exceptions and they should be
    used. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: 4 | a和d | 我们通常可以处理已检查的异常，并且应该使用它们。
- en: '| 5 | a and d | `DivisionByZeroException` does not exist. No file operations
    are performed here. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: 5 | a和d | `DivisionByZeroException`不存在。这里不执行任何文件操作。
- en: 'Chapter 9: The Java Application'
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章：Java应用程序
- en: '| Question No. | Answer | Explanation |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 问题编号 | 答案 | 解释 |'
- en: '| --- | --- | --- |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 1 | a and c | The package declaration must come before any other code. However,
    comments may appear anywhere within the code. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: 1 | a和c | 包声明必须在任何其他代码之前。但是，注释可以出现在代码的任何位置。
- en: '| 2 | c | A string from a base resource bundle will be returned, if present.
    |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 2 | c | 如果存在的话，将返回来自基本资源包的字符串。'
- en: '| 3 | c | This exception does not exist. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: 3 | c | 这个异常不存在。
