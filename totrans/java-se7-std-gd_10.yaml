- en: Appendix A. Test Your Knowledge – Answers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Chapter 1: Getting Started with Java'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | a | The second command line argument is displayed. |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | a, b, and d | Option c is incorrect because you cannot assign a double
    value to an integer variable. |'
  prefs: []
  type: TYPE_TB
- en: 'Chapter 2: Java Data Types and Their Usage'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | c | You cannot access an instance variable from a static method. |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | c and e | Option a is incorrect because single quotes are used for character
    data. Option b requires a suffix of `f` as in `3.14159f`. A byte accepts only
    the values from -128 to +127. |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | b and d | Option a is incorrect because instance variables need to be
    used with an object. Option c is incorrect because instance variables cannot be
    used with a classname. |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | a, b, and d | There is no `StringBuilder` `toInteger` method. |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | b | The `lastIndexOf` method takes a single argument of char. The `charAt`
    method returns the letter at the position. The last use of `indexOf` does not
    take both a string and a char argument. |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | c | Option a only compares equality of objects. Option b is incorrect
    because there is no such method as `matchCase` In option d, the `equals` method
    uses the case which is different in the two strings. |'
  prefs: []
  type: TYPE_TB
- en: 'Chapter 3: Decision Constructs'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | b | The `%` operator is the modulo operator and returns the remainder.
    |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | a and c | Option b evaluates to -24\. Option d evaluates to 11. |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | b | The bit sequence 0001000 is shifted to the right 3 positions with
    a zero sign fill. |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | a and c | Option b results in a comparison between `i` and `j` which
    returns a Boolean value. This value cannot be compared against the integer `k`.
    Option d requires an operand before the expression, `>k`. |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | b | The default case can be positioned anywhere within the switch. As
    all of the cases, except the first one, are missing a break statement, flow falls
    through each of the last three cases. While it is not common, constants can be
    used for switch statements. |'
  prefs: []
  type: TYPE_TB
- en: 'Chapter 4: Using Arrays and Collections'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | a and d | The number of elements in an array declaration is not used
    in the declaration. However, we can use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| 2 | b | At least the first dimension of a multidimensional array must be
    specified. |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | a and c | The `contains` method will return true if the object is found
    and `indexOf` takes an object reference and returns the index of the object if
    found, otherwise it returns a -1\. The `indexOf` method does not take an integer
    argument and the hasObject method does not exist. |'
  prefs: []
  type: TYPE_TB
- en: 'Chapter 5: Looping Constructs'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | a and d | The other options will not work because the expression does
    not evaluate to a Boolean value. |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | b, c, and d | You cannot use `[]` in a for-each statement. |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | a and b | Option c needs parentheses around the expression, `i < 5`.
    Option d requires a block statement if more than one statement is used between
    the `do` and `while` keywords. |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | a, b, c, and d | They are all equivalent. |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | a | The continue statement skips values `3` for `j`. |'
  prefs: []
  type: TYPE_TB
- en: 'Chapter 6: Classes, Constructors, and Methods'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | a, c, and d | Option b fails to initialize the array properly. |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | c | You cannot access an instance method from a static method. |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | a | The return value is not considered when overloading a method. |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | c and d | The last line is a method that happens to have the same name
    as the constructor. As there are constructors defined but no default constructor,
    the class has no default constructor. |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | a and b | Only the `private` and `public` keywords can be used when declaring
    a class and the `private` keyword can only be used with inner classes. |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | c | As the classes are on the same package and all of the methods are
    visible except for the private method. |'
  prefs: []
  type: TYPE_TB
- en: '| 7 | d | The `i` variable in the main is not modified, as it is passed by
    value. While the string is passed by reference, the local variable `s` was modified
    in the third method, not the one in the `main` method. |'
  prefs: []
  type: TYPE_TB
- en: 'Chapter 7: Inheritance and Polymorphism'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | a and d | This results in `ClassC` being the "grandchild" of `ClassA`.
    |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | a and d | Overloading only occurs within the same class. It is not necessary
    to have a base class. A common implemented interface will also work for polymorphic
    behavior. |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | d | The other methods do not exist. |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | b | The others will generate syntax errors. |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | c | The first answer is used only as the first statement of a constructor.
    The second answer generates a syntax error. The fourth option results in unbounded
    recursion. |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | a | An abstract class does not have to have abstract methods and can
    extend other classes, whether they are abstract or not. It is common to find abstract
    classes that implement an interface. |'
  prefs: []
  type: TYPE_TB
- en: 'Chapter 8: Handling Exceptions in an Application'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | c and d | Checked exceptions are those classes that extend the `Exception`
    class but not the `RuntimeException` class. |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | b and c | The derived most class should be caught first. The order of
    classes at the same hierarchy level is not important. |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | d | Checked exceptions should be handled. They may be handled using a
    try-catch block or may be re-thrown to another method in the call stack which
    is better suited to deal with the exception. |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | a and d | We can normally handle checked exceptions and they should be
    used. |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | a and d | `DivisionByZeroException` does not exist. No file operations
    are performed here. |'
  prefs: []
  type: TYPE_TB
- en: 'Chapter 9: The Java Application'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| Question No. | Answer | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | a and c | The package declaration must come before any other code. However,
    comments may appear anywhere within the code. |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | c | A string from a base resource bundle will be returned, if present.
    |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | c | This exception does not exist. |'
  prefs: []
  type: TYPE_TB
