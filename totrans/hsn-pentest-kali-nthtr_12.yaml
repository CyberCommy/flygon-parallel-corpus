- en: Avoiding Detection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Over the course of this book, we've discussed a lot of topics covering the phases
    of penetration testing, from information gathering for exploitation to cover our
    tracks. To execute a successful penetration test without the target’s security
    team being aware, you must be stealthy like a hacker.
  prefs: []
  type: TYPE_NORMAL
- en: Apart from detecting and exploiting vulnerabilities during a penetration test,
    organizations also use this type of service to test their existing security controls
    and detection rate.
  prefs: []
  type: TYPE_NORMAL
- en: 'As mentioned in [Chapter 2](209bef8c-2e18-43ca-921c-6e551196d0fe.xhtml), *Understanding
    the Phases of the Pentesting Process*, the blue team is responsible for the monitoring,
    detection, and mitigation of any security threats within a parent organization.
    If the blue team should fail to detect the activities of a penetration tester,
    this would mean two things: the penetration tester was extremely stealthy and the
    organization''s security controls need some tweaking.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Stealth scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using decoys
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fragmentation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Idle scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encryption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s dive in!
  prefs: []
  type: TYPE_NORMAL
- en: Scanning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The second phase of hacking is the scanning phase. As discussed in [Chapter
    2](https://cdp.packtpub.com/hands_on_penetration_testing_with_kali_nethunter/wp-admin/post.php?post=35&action=edit#post_27),* Understanding
    the Phases of the Pentesting Process*, the scanning phase helps a penetration
    tester to obtain a lot of details about the target system and/or the network.
    Some of the information that may be acquired includes operating systems and build
    number, open and closed service ports, running applications and their service
    versions, and whether a particular vulnerability exists on a system or group of
    devices.
  prefs: []
  type: TYPE_NORMAL
- en: However, the process of scanning would involve our machine directly interacting
    with the target system or network. As an aspiring penetration tester, it's a good
    practice to be very stealthy and avoid being detected by the target’s security
    system as much as possible.
  prefs: []
  type: TYPE_NORMAL
- en: During a penetration test on a client’s network infrastructure, the client organization
    may have a blue team that is actively monitoring the security landscape. If you’re
    executing covert testing and you get detected during the early or later phases
    of penetration testing, it defeats of the purpose of simulating a real-world attack,
    as a black hat hacker would attempt to exfiltrate data and compromise systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'Within the phase of scanning, there are many techniques used by a penetration
    tester to avoid being detected. Here are a few of these techniques:'
  prefs: []
  type: TYPE_NORMAL
- en: Stealth scan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using decoys
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Idle scan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spoofing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fragmentation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stealth scanning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If a penetration tester attempts to scan a target, there is a high chance that
    a TCP three-way handshake will be established prior to the actual scanning of
    the target. A **TCP three-way handshake** is established initially for all TCP-based
    communication on the network; once established, the regular flow of data happens.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a diagram demonstrating the TCP three-way handshake between
    two devices. To further explain the TCP three-way handshake, let''s imagine there
    are two device on a network, A and B. Let''s say device A would like to communicate
    with device B; device A would send a TCP **SYN** packet to device B as a method
    of initiating a conversation. When device B receives a TCP **SYN** packet, it
    will respond with a **SYN/ACK** packet to device A. When device A having receive
    a **SYN/ACK** packet, it will then confirm by responding with an ACK packet. At
    this point, a TCP connection has been established by these two devices:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/98a7facc-d5f9-4b3b-9397-cd270aa0305e.jpg)'
  prefs: []
  type: TYPE_IMG
- en: During a TCP connection, for every packet received from either device, A or
    B, the receiver must confirm receipt by sending a TCP **ACK** packet back to the
    sender as an indication of a successful delivery. If we are to establish  a TCP
    session with a target device while performing a port scan, it would be obvious
    that we (the attacker) are attempting something intrusive in native. In other
    words, it's considered to be noisy.
  prefs: []
  type: TYPE_NORMAL
- en: To help us during the scanning phase in a penetration test, we have the Nmap
    (Network Mapper) tool. NMap is renowned as the king of network scanners as it’s
    not only one of those simple ping sweep scanners, but also can contain a lot of
    features that are very useful for both network and security professionals. One
    such feature is its ability to execute a *stealth scan* on a target system or
    network.
  prefs: []
  type: TYPE_NORMAL
- en: '*How does stealth scanning work?*: As mentioned in [Chapter 4](60fc5468-a49f-4a6b-9c56-84fb5503568a.xhtml),
    *Scanning and Enumeration Tools*, the attacker machine would partially attempt
    to create a full TCP three-way handshake with the victim machine by sending a
    SYN packet; the victim would respond with a **SYN/ACK** packet, however, the attacker
    would not complete the handshake and send an **RST** packet instead.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The victim, upon receiving an **RST** packet, will close the connection thinking
    the attacker machine no longer wants to communicate, but the attacker is actually
    provoking the victim into responding and providing a list of open ports. An open
    port is like a wide-open door in a house; by leaving a door open, a burglar can
    simply enter. This means that if a port is left open, the attacker can use this
    open port as their way into the system. The following diagram demonstrates how
    a stealth scan works:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/ef81d885-ed6f-42f7-9860-2df605e45ec2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Using Nmap, we can perform a stealth scan by typing the `nmap –sS <*victim
    IP address*>` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/b9b53036-5369-4504-9628-64a4921db7ac.png)'
  prefs: []
  type: TYPE_IMG
- en: The `–sS` parameter indicates we are performing a stealth scan. A stealth scan
    is sometimes referred to as a TCP **SYN** scan or a full open scan.
  prefs: []
  type: TYPE_NORMAL
- en: Decoys
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we have noticed, whenever a penetration tester performs a scan on a target
    device or network, the attacker’s IP address and MAC address would be recorded
    on the victim’s machine. This would make it quite easy to identify the attacker’s
    machine on the network. One of the techniques to camouflage yourself when scanning
    is using decoys, to throw off the victim when they are trying to identify the
    actual attacker machine.
  prefs: []
  type: TYPE_NORMAL
- en: Nmap, the king of network scanners, comes in to help us again. Nmap has the
    ability to insert multiple source IP addresses into the probes it sends to the
    target device. To elaborate further, let's imagine you are sending a bogus letter
    to someone, however, within the sender's address, you insert your address and
    a few others on the envelope. When the mail is delivered, the receiver won't be
    too sure of the actual sender as there are multiple source addresses. This makes
    it harder to actually determine to correct source of the probes. To use the decoy
    feature on Nmap, we can use the `nmap –D <decoy1, decoy2, decoy3…> <target IP
    address>` command.
  prefs: []
  type: TYPE_NORMAL
- en: '`-D` allows you to specify a number of source addresses as the decoys:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/b69bb98d-5960-42db-9947-0dad67f08555.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let’s use Wireshark to see the actual transactions that occur between the attacker
    machine and the victim. The attacker machine is 10.10.10.11 and the victim machine
    is 10.10.10.100 on the network. We used a filter to see only traffic destined
    to our target on Wireshark:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/74ccd9c9-7aec-4923-8fd6-14db6c591a66.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As we can see in the screenshot, there are multiple probes via the decoy addresses
    and the real IP addresses are sent to the target.
  prefs: []
  type: TYPE_NORMAL
- en: Idle scans
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An older but still usable method of scanning is using the idle scan technique.
    Within an idle scan, the attacker machines (device A) send a **SYN/ACK** packet
    to a zombie machine (device B) to obtain its fragmentation identification number.
  prefs: []
  type: TYPE_NORMAL
- en: '**IPID** is sometimes referred to as **IP fragmentation ID**. Within the TCP/IP
    stack, before a device sends a datagram (message) onto a network, it is broken
    up into smaller pieces and then each is sent on its way to the destination. An
    IPID is assigned to each of these smaller pieces of the message (bits) to indicate
    they are of the same datagram or message.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/0974b11f-06e9-4214-9f6d-542c1950f027.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Since the attacker machine did not initiate the connection using a **SYN**
    packet but rather a **SYN/ACK** packet, the zombie machine knows it has not received
    a formal initialization from a **SYN** packet and therefore sends an **RST** packet
    that contains the IPID of the zombie machine (device B):'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/0ca6ab2d-8e1c-4d45-84ef-82592cb3b203.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The IPID increases each time a device sends an IP packet.
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, the attacker machine got the IPID (1234) from the zombie machine
    on the network. Next, the attacker will send a **SYN** packet (checking for an
    open port) to the actual victim machine using the spoofed IP address of the zombie
    machine. The victim will respond with a **SYN/ACK** to the zombie. The zombie,
    knowing it had not previously received a SYN packet from the victim, will then
    respond with an **RST** packet to the IPID:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/ffaf1f38-f3f6-4aca-9004-710911e87f1c.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If the port on the victim is closed, the target will respond with an **RST**
    to the zombie instead of the **SYN/ACK** packet:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/99fce076-e35d-4edf-9c68-809c340e0ae0.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, the attacker would probe the zombie once more to obtain the zombie’s
    IPID. The attacker will send a **SYN/ACK** packet. If the zombie responds with
    an IPID of 1236, the port on the victim is opened:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/036c64ce-4ac0-4eae-b11e-59dc7e19df59.jpg)'
  prefs: []
  type: TYPE_IMG
- en: During the last phase, if the IPID of the zombie does not increment by 2 (1,234
    + 2 = 1,236), the port on the victim’s machine is closed. As packets are sent
    between the attacker, the zombie, and the victim's machine, the fragmentation
    ID will increase on the zombie and target as they are communicating. We can execute
    an Idle scan using Nmap, the syntax of the command is `nmap –Pn –sI <zombie IP
    addr> <target IP addr>`**.**
  prefs: []
  type: TYPE_NORMAL
- en: The zombie machine is ideal within this type of scanning method, as the target
    would think the probing is being done by the zombie machine and not the actual
    attacker machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will get the following screenshot by running the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/fd84f8f9-0f88-4d67-9a89-bcac000885fe.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can always view the manual page of Nmap using the `man nmap` command or
    simply typing `nmap` in the Terminal window and pressing *Enter*.
  prefs: []
  type: TYPE_NORMAL
- en: MAC spoofing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we have learned, spoofing is simply tricking the target into believing traffic
    or a request is originating from another device or a trusted source. Both IP and
    MAC addresses can be spoofed quite easily since the TCP/IP protocol suite was
    not designed for modern-day security threats.
  prefs: []
  type: TYPE_NORMAL
- en: To prevent MAC address spoofing within a network, network security professionals
    can implement **Dynamic ARP Inspection (DAI)** on Cisco IOS Switches.
  prefs: []
  type: TYPE_NORMAL
- en: 'To generate and assign a random MAC address to an interface, we must do the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Logically turn down the interface using the `ifconfig wlan0 down` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](img/3ba571c3-3613-40cf-a441-8a445d6668a6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Verify the current and permanent MAC addresses on the specified interface using
    the `macchanger –-show wlan0` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](img/9638673e-c896-4965-96f5-c36cd12029c2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Use the **`macchanger --random wlan0`** command to generate and assign the
    MAC to our `wlan0` interface:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](img/c97c8640-ba41-4d43-90d8-58f7d1dfe8c9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Re-enable the interface using the `ifconfig wlan0 up` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](img/a485d9a4-a450-4268-a369-3a6f27dd17f7.png)'
  prefs: []
  type: TYPE_IMG
- en: Additionally, you can use the **`macchanger –-help`** command to view all the
    options available.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will obtain the following screenshot by running **`macchanger –-help`**
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/96309cfe-c991-4aab-a921-fd0c705d81bc.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, the possibilities in terms of generating a random MAC address
    to cloak your identity is very easy.
  prefs: []
  type: TYPE_NORMAL
- en: Fragmentation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another method hackers and penetration testers use to avoid detection is **fragmentation**.
    Fragmentation breaks up a message (packet) into tiny pieces. Fragments are put
    into a network since, these tiny pieces of the messages usually are able to bypass
    almost any network for security appliance and monitoring tools that are proactively
    observing network traffic and activities for security threats.
  prefs: []
  type: TYPE_NORMAL
- en: In a fragmentation attack, the attacker can modify the **Time to Live** (**TTL**)
    or the timeout values between each bit sent through the firewall or **intrusion-prevention
    system** (**IPS**). This would cause the security appliance to not easily detect
    a threat and confuse the device during a reassembly process.
  prefs: []
  type: TYPE_NORMAL
- en: The attack can send fragments of a payload to the victim machine and have it
    reassemble to a payload without being detected at all.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nmap allows us to perform port scanning with packet fragmentation on a target
    device. We can use the `nmap –f <target IP address>` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/f8413471-feef-4770-a437-0107b90f3812.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Using Wireshark, we can see how each probe is broken up into smaller pieces
    as they are sent to the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/3e5df8af-4406-48e4-bec6-9adabd477673.png)'
  prefs: []
  type: TYPE_IMG
- en: This technique reduces chances of detection when a network has an IDS, IPS,
    or anti-virus software.
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit Payload Generator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this book, we have covered various topics and tools. Once particular tool
    within the Kali NetHunter platform is **Metasploit Payload Generator**. The name
    of this tools pretty much describes its function: to generate payloads using the
    Metasploit framework. Upon opening the app in Kali NetHunter, we are presented
    with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/90757476-f1c2-4cd4-8e34-5bef47d595cd.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As you can see, we can select the type of payload we would like to generate,
    the IP address and port number, and additional payload options. If we click on
    the drop-down menu for **Type**, we will be presented with the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/4c794b0f-60e7-448d-bde4-44fe0f01db66.jpg)'
  prefs: []
  type: TYPE_IMG
- en: There are many different types to choose from. An example of leveraging the
    benefits of this feature would be to select the Windows (.exe) type if you’re
    creating a payload for a Microsoft Windows system. This would convince the target/victim
    device – in this case a Windows operating system – that the `.exe` file can be
    trusted as it seems to be a native executable file.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the target operating system and objectives of a penetration test,
    penetration testers are provided with multiple options, are seen in the preceding
    screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: Encrypting traffic
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most organizations would deploy an **IPS** to proactively monitor inbound and
    outbound traffic, paying particular attention to any malicious traffic in native
    or other types of security threats.
  prefs: []
  type: TYPE_NORMAL
- en: One technique to evade IPS and anti malware systems is by using encryption.
    Most firewalls are unable to detect malware within an encrypted packet by default.
    However, the Next-Generations firewall, has a feature called Deep-packet Inspection
    (DPI), which usually unpackages the contents of each packet, and scans and analyzes
    it. If no threats are detected, it repackages and sends off the packet to its
    destination. If a threat is detected, the firewall will quarantine it and send
    an alert on its management console interface and any other logging system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, most IPSes do not have the capabilities to decrypt a message
    to view its contents. This would allow an attacker to encrypt the malicious payload
    and pass it through the IPS appliance without being detected. The following diagram
    shows the typical setup of a company''s network; if **DPI** is disabled on the
    firewall, it will allow the encrypted file (malicious payload) to pass through:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](img/a93f7ea6-e300-4ac0-896b-bb75f97967b0.jpg)'
  prefs: []
  type: TYPE_IMG
- en: A penetration tester can use the **VirusTotal** website ([www.virustotal.com](http://www.virustotal.com))
    to test their encrypted payloads for the level of detection by various anti-malware
    engines. The goal as the penetration tester is to ensure your payload is undetectable
    by all or most anti-malware programs. By modifying the encoding on payload, we
    can also reduce detection levels.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed some techniques that a penetration tester can
    use to avoid detection, such as spoofing MAC addresses and scanning targets while
    not revealing our true identity. However, a penetration tester should not limit
    themself to only using the techniques and methods mentioned in this chapter. The
    great thing about being a cybersecurity professional in the field of penetration
    testing is the limitless number of ways an attacker can attempt to be stealthy.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will cover hardening techniques and countermeasures.
    There, you will learn how to secure the Windows, Linux, and Mobile operating systems.
  prefs: []
  type: TYPE_NORMAL
