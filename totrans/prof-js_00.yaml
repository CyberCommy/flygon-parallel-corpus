- en: '*Preface*'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: About
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section briefly introduces the authors, the coverage of this book, the
    technical skills you'll need to get started, and the hardware and software requirements
    required to complete all of the included activities and exercises.
  prefs: []
  type: TYPE_NORMAL
- en: About the Book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In depth knowledge of JavaScript makes it easier to learn a variety of other
    frameworks, including React, Angular, and related tools and libraries. This book
    is designed to help you cover the core JavaScript concepts you need to build modern
    applications.
  prefs: []
  type: TYPE_NORMAL
- en: You'll start by learning how to represent an HTML document in the Document Object
    Model (DOM). Then, you'll combine your knowledge of the DOM and Node.js to create
    a web scraper for practical situations. As you read through further chapters,
    you'll create a Node.js-based RESTful API using the Express library for Node.js.
    You'll also understand how modular designs can be used for better reusability
    and collaboration with multiple developers on a single project. Later chapters
    will guide you through building unit tests, which ensure that the core functionality
    of your program is not affected over time. The book will also demonstrate how
    constructors, async/await, and events can load your applications quickly and efficiently.
    Finally, you'll gain useful insights into functional programming concepts such
    as immutability, pure functions, and higher-order functions.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you'll have the skills you need to tackle any real-world
    JavaScript development problem using a modern JavaScript approach, both for the
    client and server sides.
  prefs: []
  type: TYPE_NORMAL
- en: About the Authors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Hugo Di Francesco** is a software engineer who has worked extensively with
    JavaScript. He holds a MEng degree in mathematical computation from University
    College London (UCL). He has used JavaScript across the stack to create scalable
    and performant platforms at companies such as Canon and Elsevier. He is currently
    tackling problems in the retail operations space with Node.js, React, and Kubernetes
    while running the eponymous Code with Hugo website. Outside of work, he is an
    international fencer, in the pursuit of which he trains and competes across the
    globe.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Siyuan Gao** is a software engineer at Electronic Arts. He has a bachelor''s
    degree in computer science from Purdue University. He has worked with JavaScript
    and Node.js for over 4 years, mainly building efficient backend solutions for
    high-availability systems. He is also a contributor to the Node.js Core project
    and has had many npm modules published. In his spare time, he enjoys learning
    about video game design and machine learning.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Vinicius Isola** started programming back in 1999 using Macromedia Flash
    and ActionScript. In 2005, he took the Java Certification and specialized in building
    web and enterprise applications. Always working on all parts of the stack, JavaScript
    and web technologies have always been present in his many job roles and the companies
    he has worked for. In his free time, he likes to work on open-source projects
    and mentor new developers.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Philip Kirkbride** has over 5 years of experience with JavaScript and is
    based in Montreal. He graduated from a technical college in 2011 and since then
    he has been working with web technologies in various roles. He worked with 2Klic,
    an IoT company contracted by the major electrical heating company Convectair to
    create smart heaters powered by Z-Wave technology. His role consisted of writing
    microservices in Node.js and Bash. He has also had a chance to make some contributions
    to the open-source projects SteemIt (a blockchain-based blogging platform) and
    DuckDuckGo (a privacy-based search engine).'
  prefs: []
  type: TYPE_NORMAL
- en: Learning Objectives
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By the end of this book, you will be able to:'
  prefs: []
  type: TYPE_NORMAL
- en: Apply the core concepts of functional programming
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build a Node.js project that uses the Express.js library to host an API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create unit tests for a Node.js project to validate it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use the Cheerio library with Node.js to create a basic web scraper
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Develop a React interface to build processing flows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use callbacks as a basic way to bring control back
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audience
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to advance from being a frontend developer to a full-stack developer
    and learn how Node.js can be used for hosting full-stack applications, this is
    an ideal book for you. After reading this book, you'll be able to write better
    JavaScript code and learn about the latest trends in the language. To easily grasp
    the concepts explained here, you should know the basic syntax of JavaScript and
    should've worked with popular frontend libraries such as jQuery. You should have
    also used JavaScript with HTML and CSS but not necessarily Node.js.
  prefs: []
  type: TYPE_NORMAL
- en: Approach
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Each section of this book has been explicitly designed to engage and stimulate
    you so that you can retain and apply what you learn in a practical context with
    maximum impact. You'll learn how to tackle intellectually stimulating programming
    challenges that will prepare you for real-world topics through functional programming
    and test-driven development practices. Each chapter has been explicitly designed
    to build upon JavaScript as a core language.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the optimal experience, we recommend the following hardware configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Processor: Intel Core i5 or equivalent'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Memory: 4 GB of RAM'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Storage: 5 GB of available space'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We also recommend that you have the following software installed in advance:'
  prefs: []
  type: TYPE_NORMAL
- en: Git latest version
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Node.js 10.16.3 LTS ([https://nodejs.org/en/](https://nodejs.org/en/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Code words in the text, database table names, folder names, filenames, file
    extensions, pathnames, dummy URLs, user input, and Twitter handles are shown as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '"The ES6 `import` function also allows you to import a subsection of a module,
    rather than importing the whole thing. This is one capability ES6''s `import`
    has over the Node.js `require` function. SUSE"'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Installation and Setup
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Before we can do awesome things with data, we need to be prepared with the most
    productive environment. In this short section, we will see how to do that.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Node.js and npm
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Installations of Node.js come with npm (Node.js's default package manager) included.
  prefs: []
  type: TYPE_NORMAL
- en: '**Installing Node.js on Windows**:'
  prefs: []
  type: TYPE_NORMAL
- en: Find your desired version of Node.js on the official installation page at [https://nodejs.org/en/download/current/](https://nodejs.org/en/download/current/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure you select Node.js 12 (the current version).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure that you install the correct architecture for your computer system; that
    is, either 32-bit or 64-bit. You can find out this information in the **System
    Properties** window of your OS.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After you download the installer, simply double-click on the file and follow
    the user-friendly prompts on-screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Installing Node.js and npm on Linux**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Node.js on Linux, you have a few good options:'
  prefs: []
  type: TYPE_NORMAL
- en: To install Node.js through Linux package managers on systems not detailed below,
    see [https://nodejs.org/en/download/package-manager/](https://nodejs.org/en/download/package-manager/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To install Node.js on Ubuntu, run this (more information and manual installation
    instructions can be found at [https://github.com/nodesource/distributions/blob/master/README.md#installation-instructions](https://github.com/nodesource/distributions/blob/master/README.md#installation-instructions)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To install Node.js on Debian-based distributions (more information and manual
    installation instructions can be found at [https://github.com/nodesource/distributions/blob/master/README.md#installation-instructions](https://github.com/nodesource/distributions/blob/master/README.md#installation-instructions)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The official Node.js installation page has further installation options for
    some Linux systems: [https://nodejs.org/en/download/current/](https://nodejs.org/en/download/current/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Installing Node.js and npm on macOS**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Similar to Linux, you have a couple of methods for installing Node.js and npm
    on a Mac. To install Node.js and npm on macOS X, do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Open Terminal for Mac by pressing *cmd + Spacebar*, typing `terminal` in the
    open search box, and hitting *Enter*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install Xcode through the command line by running `xcode-select --install`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The easiest way to install Node.js and npm is using Homebrew, which is installed
    through the command line by running `ruby -e "$(curl -fsSL` ([https://raw.githubusercontent.com/Homebrew/install/master/install](https://raw.githubusercontent.com/Homebrew/install/master/install)).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The final step is to install Node.js and npm. On the command line, run `brew
    install node`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Again, you can also install Node.js and npm via the installer available at [https://nodejs.org/en/download/current/](https://nodejs.org/en/download/current/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Installing Git**'
  prefs: []
  type: TYPE_NORMAL
- en: To install git go to [https://git-scm.com/downloads](https://git-scm.com/downloads)
    and follow instructions specific to your platform.
  prefs: []
  type: TYPE_NORMAL
- en: Additional Resources
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The code bundle for this book is also hosted on GitHub at [https://github.com/TrainingByPackt/Professional-JavaScript](https://github.com/TrainingByPackt/Professional-JavaScript).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
