- en: Chapter 5. Identifying a Methodology
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will look at a number of different references with respect
    to a testing methodology. In [Chapter 1](ch01.html "Chapter 1. Introducing Penetration
    Testing"), *Introducing Penetration Testing*, we discussed an abstract methodology,
    but in this chapter, we will look into it in more detail. This is because now
    that we have set our initial target range environment for design, we want to look
    at a systematic process for our testing practice. Without a methodology in place,
    we fall into what is categorized as an **ad-hoc** testing group, and this is something
    a professional tester should avoid. We will discuss the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Open Source System Testing Methodology Manual** (**OSSTMM**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CHECK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NIST SP-800-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Offensive Security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other methodologies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This chapter will provide us with multiple testing methodologies so that we
    can make an intelligent and informed choice when we select or build one of our
    own testing methodologies.
  prefs: []
  type: TYPE_NORMAL
- en: The OSSTMM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **OSSTMM** was first created in 2001 by the **Institute for Security and
    Open Methodologies** (**ISECOM**). Many researchers from around the world participated
    in its creation. The ISECOM is a nonprofit organization that maintains offices
    in Barcelona, Spain, and New York.
  prefs: []
  type: TYPE_NORMAL
- en: The premise of the OSSTMM is that of verification. The OSSTMM is a peer-reviewed
    manual that provides a professional testing methodology and guidance. Also, as
    it is developed by a multitude of sources, the manual has an international flavor.
  prefs: []
  type: TYPE_NORMAL
- en: The OSSTMM is in constant development; you can download the latest release from
    [http://www.isecom.org/research/osstmm.html](http://www.isecom.org/research/osstmm.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'At the time of writing this book, the current version of the OSSTMM is Version
    3, but there is a draft Version 4 in review. It is a good idea to download both
    versions and review the differences and changes that are being made in the updated
    version. An example of the download page is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The OSSTMM](img/477-1_05_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As the previous screenshot shows, you have to be a part of the ISECOM Gold or
    Platinum team to download the draft version of the manual.
  prefs: []
  type: TYPE_NORMAL
- en: 'After you have downloaded the image, open the manual. We will look at some
    portions of the manual and more importantly, the testing methodology. The first
    thing you will note in the manual is the statement about what the manual provides.
    Part of this important statement is quoted here:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"This manual provides test cases that result in verified facts. These facts
    provide actionable information that can measurably improve your operational security.
    By using the OSSTMM you no longer have to rely on general best practices, anecdotal
    evidence, or superstitions because you will have verified information specific
    to your needs on which to base your security decisions."*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: As the statement says, this manual provides a methodology and solution that
    works for our testing challenges. For our purpose, we will not go through the
    entire manual. It is our intent to introduce some of the different methodologies
    that exist in this chapter, and then let you do your research and adopt one. Alternatively,
    you can follow the recommended approach, that is, create your own methodology
    based on the parts and components of these and other methodologies that you have
    researched.
  prefs: []
  type: TYPE_NORMAL
- en: 'The main item that is used when it comes to deploying a security test that
    follows the OSSTMM is the **Security Test Audit Report** (**STAR**). The sample
    of this is located at the end of the OSSTMM. Before we look at the report, we
    will discuss the components that the OSSTMM focuses on. One of the main things
    that the OSSTMM wants to make clear is that it is not a hacking book; it is a
    professional testing methodology that depends on the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Types of targets that you want to test
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How you are going to test them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The types of controls discovered
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you review the OSSTMM, you will see that the primary purpose of the manual
    is to provide a scientific methodology for the accurate characterization of operational
    security. The manual can provide us a reference for virtually all of our testing
    roles; moreover, the methodology can be applied across penetration testing, ethical
    hacking, security assessments, vulnerability assessments, red teaming, and others.
    In fact, the manual can be used to support any testing environment we may find
    ourselves participating in.
  prefs: []
  type: TYPE_NORMAL
- en: 'The manual also has a second purpose according to its creators, and this is
    to provide guidelines to complete a certified OSSTMM audit. The OSSTMM audit focuses
    on the following components:'
  prefs: []
  type: TYPE_NORMAL
- en: The test was conducted thoroughly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The test included all the necessary channels
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The posture for the test complied with law
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The results are measurable in a quantifiable way
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The results are consistent and repeatable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The results contain only facts derived from the tests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As expected, the manual focuses on this certification for the OSSTMM process.
    You are welcome to research this if it is something that you want to accomplish.
    For our purpose in the book, we will only look at a number of different components
    of the methodology. At a length of 213 pages, it can take some time to review
    all of the material contained within the methodology if you choose to do so. The
    main point from the list of the components, which we will discuss here, is the
    fact that the results are consistent and repeatable. This is what we want to achieve
    in our testing, that is, it should be a repeatable process and no matter which
    test we attempt, the systematic process remains the same.
  prefs: []
  type: TYPE_NORMAL
- en: The OSSTMM's focus on operational security is achieved by looking at the security
    across a number of channels, those being human, physical, wireless, telecommunications,
    and data networks that can be accessed across any vector.
  prefs: []
  type: TYPE_NORMAL
- en: Before we discuss the channels, we will look at the main points to take away
    from the OSSTMM process. As you may recall, the OSSTMM provides a measurement
    of operational security. As the manual states, this operational security is the
    concept of separation and controls. Moreover, for a threat to be effective, it
    has to interact with the asset that it is trying to attack.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you look at this, what the OSSTMM is saying is that we can have 100 percent
    security if we can achieve total separation between the threat and the asset!
    While this is something that we would love to achieve, it is not something that
    is possible with the majority of the networks and services that we have today.
    Therefore, we apply controls to mitigate and reduce the risk from providing access
    that could be leveraged with a threat. The OSSTMM breaks operational security
    into the following elements:'
  prefs: []
  type: TYPE_NORMAL
- en: Attack surface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vector
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pentest security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Attack surface** is the lack of specific separations and controls. The
    **vector** is the direction of the interaction with the weakness discovered on
    the target, and finally, the **pentest security** that balances security and controls
    with their operation and limitations. The manual goes on and defines a complete
    terminology, but this is beyond the scope of what we want to cover here.
  prefs: []
  type: TYPE_NORMAL
- en: 'Rather than looking at the details for each of these channels, we will review
    the details of one of them, and that is the wireless channel. We will discuss
    the components of spectrum security and define it as the security classification
    of **Electronic Security** (**ELSEC**), **Signal Security** (**SIGSEC**), and
    **Emanations Security** (**EMSEC**), which are defined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ELSEC**: This is the measure to deny unauthorized access to information derived
    from electromagnetic sources'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SIGSEC**: This is the protection of wireless communication from unauthorized
    access and jamming'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**EMSEC**: This is the measure to prevent interception of emanations of the
    machines and devices that are used in wireless communication'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When testing wireless devices, there are a number of factors to consider. One
    of the most important factors is the safety of the tester. There are numerous
    electromagnetic and microwave radiation sources that can cause harm to hearing
    and sight. Therefore, it might be required that the analyst wear protective equipment
    when in the range of any sources that are measured at -12dB and greater. Unfortunately,
    this is something that is often overlooked, but it is essential that the tester
    be protected within environments that could place them at risk. There are many
    potential dangers from close proximity to these types of sources. Consequently,
    when testing outside in locations with antennas, ensure both the frequencies and
    the strength of the signals that are in the vicinity of the test site have been
    evaluated. A discussion of these protective measures is covered in great detail
    in the OSSTMM. An example of some of the considerations from the manual is shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The OSSTMM](img/477-1_05_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now that the physical considerations have been briefly discussed, the next thing
    to discuss is the Posture Review.
  prefs: []
  type: TYPE_NORMAL
- en: The Posture Review
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Posture Review is defined by the following components:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Policy**: Review and document the policies, contracts, and **Service Level
    Agreements** (**SLAs**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Legislation**: Review and document the legislation for national and industry
    regulations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Culture**: Review and document the organizational security culture'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Age**: Review and document the age of the systems, software, and required
    services'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fragile artifacts**: Review and document system, software, and services that
    require special handling'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Logistics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The next thing we have is Logistics; this is defined as the preparation of
    the channel environment to help us prevent false positives and negatives that
    can cause inaccurate results. There are three things we will consider for our
    wireless testing, and they are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Communication equipment**: We want to ensure any emissions from all sources
    are charted prior to and during the testing. For reference, the attack on this
    is known as Van Eck phreaking. For a succinct explanation of this, refer to [http://www.techopedia.com/definition/16167/van-eck-phreaking](http://www.techopedia.com/definition/16167/van-eck-phreaking).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Communications**: This tests which protocols are being used throughout the
    transmission medium.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Time**: This is the time frame to carry out the testing. For example, we
    are allowed to test for 24 hours or else there are specific time frames for testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are now ready for the next step in the testing, which is active detection
    verification.
  prefs: []
  type: TYPE_NORMAL
- en: Active detection verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This is the process where we determine what controls are in place; again, this
    assists us in reducing the number of false positives with our testing. It is important
    to note here that as testers, we want to explain to our clients that the more
    information they can provide us, the more we can do with regard to the testing.
    We could research all of the information as part of the test, but it provides
    us with a deeper understanding of the environment at the start of the test. This
    affords us the luxury of concentrating more on the details of the weaknesses and
    not the discovery process. There are two main things we want to review, and they
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Channel monitoring**: This looks at the controls that are in place for intrusion
    monitoring and signal tampering'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Channel moderating**: This determines whether the controls that provide a
    potential block or jam of signals are in place and look for unauthorized activities'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visibility Audit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As we review the methodology, we next encounter a Visibility Audit step. This
    is the process of enumeration and verification tests for personnel visibility.
    There are three areas we address according to the OSSTMM, and they are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Interception**: Locate the access control and perimeter security and the
    ability to intercept or interfere with the wireless channels'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Passive signal detection**: Determine the frequencies and signals that can
    leak in or out of the tested area using a number of different antennas'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Active signal detection**: Examine the source trigger responses such as **Radio
    Frequency Identification** (**RFID**) within the target area'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The next thing we want to review is access verification. This is a test for
    the enumeration of access points to personnel within the scope. We examine the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Evaluate administrative access to wireless devices**: Determine if access
    points are turned off when not in use'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Evaluate device configuration**: Test and document using antenna analysis
    that the wireless devices are set to the lowest possible power setting to maintain
    sufficient operation that will keep transmissions within a defined boundary'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Evaluate configuration, authentication, and encryption of wireless networks**:
    Verify that the access point **Service Set Identifier** (**SSID**) has been changed
    from the default and the administration interface is not set with the default
    password'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authentication**: Enumerate and test for inadequacies in authentication and
    authorization methods'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Access control**: Evaluate access controls, perimeter security, and ability
    to intercept or interfere with communications'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trust verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will next discuss the trust verification; this step is the process of testing
    for the trust between personnel within the scope and access to information without
    the need for identification or authentication. This step of the testing refers
    to the following items:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Misrepresentation**: Test and document the authentication method of the clients'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fraud**: Test and document the number of requirement to access wireless devices
    with fraudulent credentials'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource abuse**: Test and document the number of requirements to send data
    outside of a known and trusted source without any established credentials'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blind trust**: Test and document connections to a false or compromised receiver'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Control verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have discussed the trust verification process, we will next look
    at the process of control verification. This consists of the following items:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Non-repudiation**: Enumerate and test to properly identify and log the access
    or interactions to specific properties as a challenge'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Confidentiality**: Enumerate and test the use of the dampening equipment
    to reduce the transmission of electromagnetic signals as well as the controls
    in place for the protection of wireless transmissions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Privacy**: Determine the level of physical access controls in place to protect
    devices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integrity**: Determine that data can only be access modified by authorized
    users and ensure that adequate encryption is in place'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Process verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Process verification is used to examine the maintenance of functional security
    awareness of personnel in established processes as defined in the Posture Review.
    The components of this step are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Baseline**: Examine and document the baseline configuration to ensure the
    security stance is in-line with the security policy'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Proper shielding**: Examine and determine that proper shielding is in place
    to block wireless signals'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Due diligence**: Map and verify the gaps between practice and requirements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Indemnification**: Document and enumerate that targets and services are insured
    for theft or damages'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Configuration verification is the step where we examine the ability to circumvent
    or disrupt functional security of assets. The items required for this step are
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Common configuration errors**: Perform brute force attacks against access
    points to determine the strength of passwords. Verify whether the passwords used
    are complex and consist of a number of different character types.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configuration controls**: Examine controls and validate configuration according
    to the security policy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Evaluate and test wiring and emissions**: Verify that all wiring feeds in
    and out of shielded facilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Property validation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Property validation examines the information and physical properties that may
    be illegal or unethical; this step consists of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sharing**: Verify the extent to which property is shared between personnel,
    be it intentionally or unintentionally through mismanagement of licenses, resources,
    or negligence'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rogue wireless transceivers**: Perform a complete inventory of all devices
    and verify that an organization has an adequate security policy that addresses
    the use of wireless technology'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Segregation review
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Segregation review is a test for appropriate separation of private and personal
    information from business information. The review consists of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Privacy containment mapping**: Map private information such as what, how,
    and where information is stored and over which channels it is communicated'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Disclosure**: Examine and document the types of disclosure of private information'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Limitations**: Examine and document the gateways and alternative channels
    to people with physical limitations with respect to that channel'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exposure verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Exposure verification is the process of uncovering information that can lead
    to authenticated access, or allows for access to multiple locations using the
    same authentication. The requirements for this step are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exposure mapping**: Enumerate and map personnel information regarding the
    organization as well as any information that is implicitly stored and classified
    as sensitive'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Profiling**: Examine and verify using a variety of antennas if wireless signals
    with device information are extending beyond the required boundaries'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Competitive intelligence scouting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The competitive intelligence scouting test is for the scavenging property that
    can be analyzed as business intelligence; it is a type of marketing field used
    to identify the competition for a business. The requirements for this consist
    of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Business Grinding**: Map targets from within the scope by analyzing the passive
    and active emanations as well as what, how, and where the information is stored
    and communicated'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Business Environment**: Explore and document business details to include
    the alliances, partners, major customers, vendors, and distributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Organizational Environment**: Examine and document the disclosures of business
    property on the operations process'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quarantine verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Quarantine verification is determination and measurement of the effective use
    of quarantine as it pertains to access to and within the target. The requirements
    for this are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Containment process identification**: Identify and examine quarantine methods
    and processes at the target in all channels for aggressive contacts'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Containment levels**: Verify the state of containment to include the length
    of time and all channels where interactions have quarantine methods'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Privileges audit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The privileges audit test will investigate where credentials are supplied to
    the user and whether permission is granted for testing with those credentials.
    The requirements for this are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Identification**: Examine and document the process to obtain identification
    through both legitimate and fraudulent means'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authorization**: Verify the use of fraudulent authorization to gain privileges'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Escalation**: Verify and map the access to information through the privileges
    of a normal user and attempt to gain higher privileges'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subjugation**: Enumerate and test for inadequacies from all channels it uses
    or from where it enables controls'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Survivability validation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Survivability validation is the process of determining and measuring the resilience
    of the target within the scope of attempts to cause service failure. The requirements
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Continuity**: Enumerate and test for access delays and service response times'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resilience**: Map and document the process of disconnecting channels from
    a security breach'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alert and log review
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Alert and log review is a gap analysis between the performed activities to
    include the true depth of these activities as recorded from third-party methods.
    The requirements for this are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Alarm**: Verify and enumerate the warning systems'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Storage and retrieval**: Document and verify unprivileged access to alarm,
    log, and storage locations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This concludes the wireless testing section of the OSSTMM. As you can see, this
    is quite an in-depth reference and one that is thorough and well recognized in
    the industry. While the OSSTMM is an excellent reference, most of us will use
    its components and not all of the required processes. The last thing we will cover
    from the OSSTMM is the STAR. The purpose of the STAR is to provide an executive
    summary of the information that states the attack surface of the targets with
    respect to the testing scope. You can find out more about this in [Chapter 13](ch13.html
    "Chapter 13. Building a Complete Cyber Range"), *Building a Complete Cyber Range*.
  prefs: []
  type: TYPE_NORMAL
- en: CHECK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have included information about **CHECK** because we have done many assessments
    in the United Kingdom over the years; therefore, it is an important part of doing
    assessments there, especially when you are doing security assessments for the
    government or Ministry of Defence.
  prefs: []
  type: TYPE_NORMAL
- en: So, you are probably wondering what CHECK is. Before we can define it, we will
    provide additional details on the group that was part of the establishment of
    CHECK. This group is the National Technical Authority for Information Assurance,
    or as they are often known the **Communication-Electronics Security Group** (**CESG**).
    CESG is a provider of IT health checks for the assessment of systems that handle
    marked information.
  prefs: []
  type: TYPE_NORMAL
- en: 'When a company belongs to CHECK, it provides clients the assurance that the
    company will provide a high level of quality service if the CHECK guidelines are
    adhered to. CHECK can be used with systems that contain confidential information,
    but with the secret information, additional permission is required from the CESG.
    One of the challenges of a company becoming a CHECK member is the requirement
    that to have access to protective marked information, the tester or team member
    has to hold at least a **Security Check** (**SC**) clearance. Additional information
    can be found at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.cesg.gov.uk/servicecatalogue/CHECK/Pages/WhatisCHECK.aspx](http://www.cesg.gov.uk/servicecatalogue/CHECK/Pages/WhatisCHECK.aspx)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, a team member can meet the requirements by successfully passing
    an examination. Details of the examinations will not be discussed here, but an
    example with additional reference information is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![CHECK](img/477-1_05_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now that we have briefly looked at what CHECK is, we can now look at what it
    provides for us when it comes to carrying out our pen testing or assessments.
    CHECK consists of fundamental principles that identify what the CHECK system's
    basic requirements are.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of the two components of membership and assignments is shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![CHECK](img/477-1_05_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The last thing we want to look at from CHECK is the reporting requirements.
    One of the most important things we do as professional security testers is developing
    a report. Unfortunately, it is one of the things that usually gets the least amount
    of attention. When it comes to testing, most classes will show you the showboat
    skills of exploitation and other things. However, the reality is that the more
    time you spend learning how to draft and create a report, the better you will
    be at delivering what the client wants, and that is a report on your findings
    and moreover, a complete list of your recommendations to improve their security
    posture based on these findings.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of information on the report requirements submission in CHECK is
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![CHECK](img/477-1_05_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In CHECK, we have information for the composition of the report. It is a high-level
    abstraction and consists of six main topics. For an additional explanation of
    each of the topics, refer to the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.cesg.gov.uk/servicecatalogue/CHECK/Pages/CHECKReportRequirements.aspx](http://www.cesg.gov.uk/servicecatalogue/CHECK/Pages/CHECKReportRequirements.aspx)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The six main topics are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Report authors should ensure that the report is readable and accessible by the
    customer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The report should provide details of the individuals involved in the health
    check
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The report should be marked as required for the information that the network
    contains
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The report should communicate the background, scope, and context of the health
    check
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerabilities should be accurately identified
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each identified vulnerability should be associated with a remedial solution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Again, this is a condensed explanation of the topics, but it does serve our
    purpose. As a reminder, CHECK is something you will want to be familiar with if
    engagements or even your contract bidding crosses into the scope and domain of
    the Ministry of Defence or the government of the United Kingdom. It is worth noting
    that Canada also participates in the CHECK requirements.
  prefs: []
  type: TYPE_NORMAL
- en: NIST SP-800-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The National Institute of Standards and Technology Special Publication (NIST-SP-800-115)
    is the Technical Guide to Information Security Testing and Assessment. The publication
    is produced by **Information Technology Laboratory** (**ITL**) at NIST.
  prefs: []
  type: TYPE_NORMAL
- en: 'The guide defines a security assessment as the process of determining how effectively
    an entity being assessed meets specific security requirements. As you review the
    guide, you will see it contains a great amount of information for testing. While
    the document tends to not get updated as often as we would like, it is a viable
    resource for us as a reference when building our methodology for testing. The
    document consists of the following main chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security testing and examination overview
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Review techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Target identification and analysis techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Target vulnerability validation techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security assessment planning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security assessment execution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Post-testing activities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As we did with the OSSTMM, we will look at only a small portion of the details
    of the document. The NIST site has a number of references that we should get familiar
    with. An example of the **Special Publications** home page is shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![NIST SP-800-115](img/477-1_05_7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The NIST site and references should be bookmarked in your favorite browser as
    they are constantly releasing publications for review. It is always a good idea
    to take some time and review these prerelease publications; it is another method
    of helping you stay updated with technology.
  prefs: []
  type: TYPE_NORMAL
- en: 'According to the NIST publication, the document provides us with a reference
    for processes and technical guidance for professional information security testing
    and assessment, and specific points for what this entails is shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![NIST SP-800-115](img/477-1_05_8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: For those of you who want to review NIST SP800-115 in more detail, you can download
    it as well as any of the other special publications documents from the NIST site
    [http://csrc.nist.gov/publications/PubsSPs.html](http://csrc.nist.gov/publications/PubsSPs.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'According to NIST, for an organization to get the maximum value from a security
    assessment, the following is recommended:'
  prefs: []
  type: TYPE_NORMAL
- en: Establishing an information security assessment policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing a repeatable and documented assessment methodology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determining the objectives of each security assessment and tailoring the approach
    accordingly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyzing findings and developing risk mitigation techniques to address weaknesses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As these recommendations indicate, this is a sound foundation that an organization
    needs to follow to help improve their security posture. Unfortunately, it is quite
    rare, especially in the assessments I have been involved with, to discover an
    organization that has these guidelines clearly defined and implemented. The first
    one on the list, the security policy, is one of the most important guidelines,
    but often gets the least amount of attention from organizations. It is essential
    that an organization not only have a well-defined policy, but that they follow
    it! We will not focus on these items as we are more interested in the process
    and methodology of the testing and assessment for the purpose of this book. However,
    it is important that we, as testers, know of the types of recommendations so that
    we can pass that information on to our clients, or at the very least, provide
    them with the reference information so that they can explore as they wish.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first part of the publication we need to look at is the security testing
    and examination overview; this part is subdivided into the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Information security assessment methodology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical assessment techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparing tests and assessments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testing viewpoints
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The information security assessment methodology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we progress through this book, we will continue to stress the importance
    of following a methodology, and this is what we will take and focus on from the
    NIST publication. Within the NIST guidance, they define the methodology as a repeatable
    and documented assessment process that can be beneficial; it provides consistency
    and structure to testing, provides for training of new assessment staff, and addresses
    resource constraints associated with security assessments. Virtually all assessments
    will have limitations of some type; these limitations can be time, staff, hardware,
    software, or a number of other challenges. To alleviate these types of challenges,
    the organization needs to understand what type of security tests and examinations
    they will execute.
  prefs: []
  type: TYPE_NORMAL
- en: By developing an appropriate methodology, taking the time to identify the required
    resources, and planning the structure of the assessment, an organization can mitigate
    the challenge of resource availability. A powerful benefit of this is that the
    organization can establish components that can be used on follow-on assessments.
    As the organization conducts more and more assessments, this process will continue
    to be refined and at the same time, improve the time required for the testing.
  prefs: []
  type: TYPE_NORMAL
- en: 'The NIST approach is to define phases, and the minimum phases are defined as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Planning**: This is the critical phase for a security assessment; it is used
    to gather essential information. As we have discussed before, the more time you
    take to plan the assessment, the better the assessment is likely to develop. Within
    the NIST planning phase, we determine the assets, the threats that exist against
    the defined assets, and the security controls that are in place to mitigate these
    defined threats.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Execution**: The primary goal of the execution phase is to identify the vulnerabilities
    and validate them when appropriate. The validation of vulnerabilities, as we have
    discussed before, is the actual exploitation of the vulnerability that has been
    identified. We have also discussed that this is not one of the things that most
    assessments contain within the scope of work, but if it is in the scope of work,
    this is where it would be located with respect to the guidance from NIST. It is
    worth noting here that there are no two assessments that will be the same. Therefore,
    the actual composition of this step will vary in accordance with the process and
    methodology that is being carried out.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Post-execution**: The post-execution phase focuses on analyzing identified
    vulnerabilities to determine root causes, establish mitigation recommendations,
    and develop a final report.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NIST also defines that there are other methodologies that exist and as such,
    it is important that professional security testers look at more than just one
    of the methodologies. This is something that we also agree with, and it is why
    we show the different methodologies that exist and also discuss an approach that
    combines them.
  prefs: []
  type: TYPE_NORMAL
- en: Technical assessment techniques
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are many different technical assessment techniques available, and rather
    than address them, we will look at the ones that are specifically discussed in
    this section of the NIST publication. The publication looks at the following assessment
    techniques:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Review techniques**: These are examination techniques that are used to evaluate
    systems, applications, networks, policies, and procedures to discover vulnerabilities.
    The review technique is generally conducted manually.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Target identification and analysis techniques**: These identify systems,
    ports, services, and potential vulnerabilities. These can be performed manually;
    however, it is more common to see these completed using automated tools.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Target vulnerability validation techniques**: In this process, we corroborate
    the vulnerabilities either manually or with tools. The techniques here, such as
    password cracking, penetration testing, social engineering, and application security
    testing, are the ones that emulate the attacker.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we have stated many times, no approach will show the complete picture, so
    the professional security tester will use a multitude of different techniques
    to achieve the information that is required.
  prefs: []
  type: TYPE_NORMAL
- en: The NIST publication makes it clear that it is not a reference that will provide
    you the answer to which technique you should use. Instead, the focus is more on
    examining how the different technical techniques can be performed.
  prefs: []
  type: TYPE_NORMAL
- en: Comparing tests and examinations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Examinations are defined by a review of the documentation of an organization.
    This is the sole function of examinations, this is where we verify that the organization
    has the policy defined and it is being followed. One of the areas that often are
    found to not be accurate is the architecture diagrams, and this is one of the
    areas we examine when we perform the examinations step.
  prefs: []
  type: TYPE_NORMAL
- en: For the most part, examinations have no impact on the systems or networks. There
    is a possibility of an impact, but such a case is extremely rare, and for our
    purpose, we will maintain that there is no impact on the system of the network
    being tested.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is true that testing using scanning and the other techniques can and more
    than likely will provide a more accurate picture of an organization''s security
    posture than what is gained through examinations. However, it is also true that
    this type of examination can impact systems and/or networks of the organization.
    Therefore, there are times when using the documentation that an examination will
    be used to limit the impact on the site being assessed. As NIST goes on to say:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"In many cases, combining testing and examination techniques can provide a
    more accurate view of security."*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is the approach we have followed and we will continue to follow it as the
    book progresses.
  prefs: []
  type: TYPE_NORMAL
- en: Testing viewpoints
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is well known that testing can be performed from a number of viewpoints.
    We will discuss some of these locations and how they can be a part of our assessment
    methodology. We have the external and internal viewpoints in accordance with the
    NIST publication that we will address. External testing is conducted outside an
    organization's perimeter and views the security posture from the outside; moreover,
    it is conducted from the point of view of the Internet and that of an external
    attacker. For internal testing, the assessors work from the inside and are emulated
    either as an insider or as an external attacker who has penetrated the perimeter
    defenses. This testing focuses on the system-level security and configuration
    as well as authentication, access control, and system hardening.
  prefs: []
  type: TYPE_NORMAL
- en: When both internal and external testing is to be performed, the external is
    usually conducted first. This is beneficial when the same tester is conducting
    the testing to prevent them from developing inside information that an external
    tester would not have and consequently invalidating or making the test less authentic.
    When the internal testing is being conducted, there should be no changes made
    by the client to the network architecture.
  prefs: []
  type: TYPE_NORMAL
- en: Overt and covert
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: According to NIST, overt or white hat testing involves performing external and/or
    internal testing with the knowledge of the IT staff. That is, the staff is in
    an alerted state and knows that an assessment is taking place. This can help,
    in some cases, limit the impact of the testing. Furthermore, it can serve as a
    training opportunity for the organization staff to learn more information about
    testing and in some cases, learn how they can perform self-assessment for their
    organization.
  prefs: []
  type: TYPE_NORMAL
- en: According to NIST, covert or black hat testing takes an adversarial approach
    to testing. That is, it performs the test without the knowledge of the organization's
    IT staff, but with permission of the upper staff and management. There are cases
    when an organization needs to designate a trusted third party to ensure that an
    incident response plan does not go into action as a result of the testing. The
    purpose of covert testing is to examine the damage an adversary can cause. Moreover,
    this testing does not focus on identifying vulnerabilities and does not test every
    security control. This testing is purely adversarial and usually involves finding
    a vulnerability and then exploiting it to gain access to the system and/or network.
  prefs: []
  type: TYPE_NORMAL
- en: Covert testing can be time consuming and expensive. It is the reason why most
    testing is carried out in an overt manner. This does not mean covert testing will
    never be asked for by a client. There is always a possibility that it might be,
    and this is why it is still an important component of the NIST methodology.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next part of the NIST publication that we want to look at is the section
    on target identification and analysis techniques. From this point forward, we
    will not review all of the topics within the section. We will highlight the important
    points to take away as we continue. In this section, we will refer to the skills
    of assessment team members. An example of this is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Overt and covert](img/477-1_05_9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As the previous screenshot shows, three of the four main techniques require
    TCP/IP knowledge as a baseline skill set. This is something that corresponds with
    what I have seen in industry, which is the importance of understanding protocols
    and being able to analyze them at the packet level. Many of you reading this are
    probably thinking that you need to have an extensive background and a high level
    of knowledge when it comes to TCP/IP, and this is a good thing. Unfortunately,
    the majority of the consultants or people who want to become consultants I meet
    do not have the required detailed knowledge of TCP/IP. This has led me to write
    a course on the foundations and core concepts of being in security. One of the
    main components of the course is TCP/IP. It is imperative that as a tester you
    understand all layers of the network model, and moreover, you interpret and analyze
    different events at the packet level across the corresponding layers.
  prefs: []
  type: TYPE_NORMAL
- en: The next thing we want to review from the NIST publication is the section on
    target vulnerability validation techniques. This step of professional security
    testing is called pen testing. As defined by NIST, this section of the publication
    addresses validation of vulnerabilities that have been discovered in the other
    steps of the methodology. The objective of this step is to prove that the vulnerability
    and that it not only exists but it also creates a security exposure that can be
    exploited. As we have mentioned before, the act of vulnerability validation, which
    is more often referred to exploitation, is not 100 percent. Therefore, it is crucial
    during the phases of testing that we have conducted the tests thoroughly and systematically
    so that we can identify those vulnerabilities that will provide us with the highest
    chance of a successful validation. It is important to note that this technique
    carries with it the greatest amount of risk. This is because these techniques
    have more potential to impact the targets. Moreover, this can and has on more
    than one occasion crashed the tested target. It is imperative that you proceed
    with caution anytime you are performing validation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Contained within this section is the penetration testing phases as defined
    by NIST. The penetration testing concept is defined by four phases in accordance
    with NIST. These four phases are **Planning**, **Discovery**, **Attack**, and
    **Reporting**. An example of this from the NIST publication is shown in the following
    diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Overt and covert](img/477-1_05_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In the planning phase, rules are identified and approval is finalized and documented.
    It is imperative that the approval be in writing from a qualified representative
    of the organization. Planning sets the groundwork for a successful penetration
    test.
  prefs: []
  type: TYPE_NORMAL
- en: 'The discovery phase consists of two parts; part one is the start of the actual
    testing and covers information gathering and scanning. Information that is gathered
    in the first part of the discovery phase is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Overt and covert](img/477-1_05_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The second part of the discovery phase is where vulnerability analysis comes
    into play. This involves taking the information that we have previously discovered
    and comparing this to a vulnerability database. Much like we did earlier in the
    book, the process looks for the information that we have identified and then finds
    vulnerabilities that we can potentially exploit as we progress to the next phase
    of attack. For the most part, this is initially carried out with automated scanners.
    Once the scanner has identified a potential vulnerability, we then move on to
    a deeper investigation of the finding to see if it in fact is a weakness and how
    we can leverage or validate the vulnerability with an exploit. Consequently, this
    process is manual and can be time consuming.
  prefs: []
  type: TYPE_NORMAL
- en: The attack phase is where we go about validating our identified potential vulnerabilities
    by attempting to exploit them. If we are successful in the validation, then it
    means the exploit worked and the vulnerability exists. Consequently, if the exploit
    is not successful, it does not mean that the vulnerability does not exist; it
    just means that we could not successfully exploit it when we attempted validation.
    There can be any number of reasons for this, and it is beyond the scope of this
    chapter to address them. Another point to consider is the fact that we might exploit
    the machine, but only have the access level of a low or non-privileged user. The
    tester may be able to escalate their privileges and gain access to additional
    resources. These are all components of what we do as testers when we discover
    information that we can potentially exploit.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of this is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Overt and covert](img/477-1_05_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The stages in the previous screenshot within the attack phase will be largely
    dependent on what the scope of work entails. Therefore, as we have mentioned,
    defining a clear and concise scope of work for the planning phase is critical
    for the follow-on components of professional security testing.
  prefs: []
  type: TYPE_NORMAL
- en: The last phase of penetration testing as defined in the NIST publication is
    the reporting phase. Again, as we have previously mentioned, it is in this phase
    where we produce the deliverable for the client. It is also a critical component
    that continues simultaneously with the other phases. Consequently, at the end
    of the test, we develop a report of the findings and provide it to the client.
    This is the showcase of the assessment; it shows the client what has been done
    and also provides them a detailed listing of the findings. Also, for each finding,
    it provides an analysis on it and a recommendation or procedure to either remove
    or mitigate the risk of the vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will conclude the discussion on the NIST publication by explaining as they
    do in the publication. There is risk associated with all techniques and combinations
    of techniques. Therefore, to ensure that each technique is executed as safely
    and accurately as possible, it is recommended that the testers have a certain
    level of skills. Some of these were shown in the previous screenshot, and in this
    section, we have another guideline with respect to skills, which is shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Overt and covert](img/477-1_05_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It is worth noting that the skills identified in the previous screenshot still
    have a reference to TCP/IP knowledge, but now we have progressed from the level
    of general knowledge to an extensive level of knowledge. Once again, the importance
    of understanding TCP/IP at the lowest level is critical as a professional security
    tester.
  prefs: []
  type: TYPE_NORMAL
- en: Offensive Security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The group at Offensive Security is responsible for a number of projects that
    we will explore as professional security testers. Examples of these are the Kali
    distribution, the metasploit unleashed guidance, Google Hacking Database, and
    Exploit Database. If you visit the website of Offensive Security at [http://www.offensive-security.com/](http://www.offensive-security.com/),
    you will not find a reference to an actual methodology, but as the Kali distribution
    is a project maintained by this group, we can look within it for a methodology.
    An example of the methodology that is present in Kali is shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Offensive Security](img/477-1_05_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As shown in the previous screenshot, the methodology that is contained within
    the Kali distribution follows similar steps that we have covered within other
    examples. As mentioned, the Offensive Security group also maintains the excellent
    reference of **metasploit unleashed**. There is a methodology we can practice
    contained in these steps, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Offensive Security](img/477-1_05_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The great thing about the **metasploit unleashed** reference is the fact that
    within the topics, there are detailed steps to use the metasploit framework in
    support of the different steps in the testing methodology. An example of the steps
    that you can find under **Meterpreter Scripting** is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Offensive Security](img/477-1_05_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We will stop here with the metasploit unleashed reference. Before you move on,
    it is recommended that you research the information given here if you want to
    become more proficient with the metasploit framework. It is one of the best references
    that we have to unleash the power of the tool.
  prefs: []
  type: TYPE_NORMAL
- en: Other methodologies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you search on the Internet, you will see that there are a number of references
    when it comes to methodologies of security testing, and if you expand to include
    risk assessment, then the numbers will increase even more. Many of the references
    you find have not been updated for some time. We have covered a few of them, and
    here, we will cover one more briefly.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have or ever do take the Certified Ethical Course that is offered by
    The International Council of Electronic Commerce Consultants, you will discover
    that at the end of each module of the course, there is a section that is dedicated
    to penetration testing. Contained within this, you will discover a flow chart
    that shows each item in the process, and it also provides an example of a tool
    to obtain the results for that step. An example of this is shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Other methodologies](img/477-1_05_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The previous example is a flow chart for the enumeration step of penetration
    testing; this is an excellent starting point for creating your penetration testing
    methodology documents. In fact, it is recommended that you build these flow charts
    and laminate them so that you can carry them on site with you and they can serve
    as a reference for the different types of testing that you encounter.
  prefs: []
  type: TYPE_NORMAL
- en: Customization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have discussed a number of methodologies, and the thing to take away from
    all of this is to review the different references that exist and then customize
    your own methodology based on your research. It is also important to emphasize
    that your methodology should be dynamic, and as you progress in testing, adjust
    and tailor it as required to meet the needs for you and your team.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s revisit the high-level abstract methodology that we covered in [Chapter
    1](ch01.html "Chapter 1. Introducing Penetration Testing"), *Introducing Penetration
    Testing*. The methodology consisted of the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Planning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Non-intrusive target search
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intrusive target search
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reporting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This methodology was adequate for our initial exposure to professional security
    testing, but now that we have reviewed a number of references, our methodology
    needs to be updated. What we want to do is to add two additional steps to our
    abstract methodology. These two steps are remote target and local target assessment.
    These will be placed into our methodology following the intrusive target search.
    An example of our methodology with these two additional steps is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Planning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Non-intrusive target search
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intrusive target search
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remote target assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Local target assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reporting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With the remote target assessment, this is the process of evaluating targets
    from an external position. Consequently, the next step, local target assessment,
    refers to the process of evaluating the targets from within the local machine.
    While these two steps are taken as separate components, it is important to realize
    that once access has been gained on a machine, the local assessment can be done
    as if the tester was located locally on the machine.
  prefs: []
  type: TYPE_NORMAL
- en: This is the methodology we will refer to as required throughout the book. It
    is a simple and easy-to-follow format that provides us with great flexibility
    when performing our testing. Additionally, it allows us to expand on it as required.
    Furthermore, this is a process that is proven and meets the needs of our testing
    when we build our lab environments.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have examined a number of the different process and methodology
    references that are available for us to use when it comes to practicing our professional
    security testing.
  prefs: []
  type: TYPE_NORMAL
- en: We started the chapter by looking at the comprehensive international reference
    of the OSSTMM. We looked at the process and steps within the reference of conducting
    a wireless assessment.
  prefs: []
  type: TYPE_NORMAL
- en: Following the OSSTMM, we took a brief look at CHECK that is a part of performing
    security assessments in the United Kingdom. We also discussed assessments of networks
    that contain data which is classified as marked.
  prefs: []
  type: TYPE_NORMAL
- en: The next reference that we reviewed was the NIST SP 800-115\. We investigated
    the format of the document and discussed a number of sections from the reference.
    We looked at examples of the required skills for both an assessment and a penetration
    test. One of the common items was the knowledge of TCP/IP.
  prefs: []
  type: TYPE_NORMAL
- en: We looked at an example flow chart from the CEH course material and ended the
    chapter with a customization example that used our abstract methodology from the
    [Chapter 1](ch01.html "Chapter 1. Introducing Penetration Testing"), *Introducing
    Penetration Testing*, along with two additional steps. We will establish an external
    testing architecture in the next chapter.
  prefs: []
  type: TYPE_NORMAL
