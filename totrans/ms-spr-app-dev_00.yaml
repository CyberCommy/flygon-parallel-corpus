- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Spring is an open source Java application development framework that is used
    to build and deploy systems and applications that run on a JVM. It makes efficiently
    built modular and testable web applications, by using a Model-View-Controller
    paradigm and dependency injection. It seamlessly integrates with numerous frameworks
    (such as Hibernate, MyBatis, Jersey, and so on), and reduces boilerplate code
    when using standard technologies, such as JDBC, JPA, and JMS.
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of this book is to teach intermediate-level Spring developers to
    master Java application development with Spring, applying advanced concepts and
    using additional modules to extend the core framework. This is done to develop
    more advanced, strongly integrated applications.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Spring Mongo Integration"), *Spring Mongo
    Integration*, demonstrates the integration of a Spring MVC with MongoDB along
    with installing MongoDB, to create database and collections.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Messaging with Spring JMS"), *Messaging with
    Spring JMS*, teaches you to install Apache ActiveMQ and different types of messaging.
    This chapter also demonstrates the creation of multiple queues and communicating
    with these queue using Spring templates with the help of screenshots.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Mailing with Spring Mail"), *Mailing with
    Spring Mail*, creates a mailing service and configures it using the Spring API,
    and demonstrates how to send mails with attachments using MIME messages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Jobs with Spring Batch"), *Jobs with Spring
    Batch*, illustrates how Spring Batch can be used to read an XML file,and also
    how to create Spring-based batch applications to read a CSV file. This chapter
    also demonstrates how to write simple test cases using Spring Batch.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Spring Integration with FTP"), *Spring Integration
    with FTP*, gives you an overviewof different types of adapters, such as inbound
    and outbound adapters, with an outbound gateway and its configurations. This chapter
    also looks into two important classes, FTPSessionFactory and FTPsSessionFactory,
    by using getter and setter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Spring Integration with HTTP"), *Spring Integration
    with HTTP*, takes you through theuse of a multivalue map to populate a request
    and put the map in the HTTP header. Also, it will provide you with information
    about HTTP and Spring integration support, which can be used to access HTTP methods
    and requests.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Spring with Hadoop"), *Spring with Hadoop*,
    shows how Spring integrates with Apache Hadoop and provides Map and Reduce processes
    to search and count data. The chapter also discussed installing a Hadoop instance
    on Unix machines and configuring Hadoop jobs in a Spring framework.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Spring with OSGI"), *Spring with OSGI*, develops
    a simple OSGI application, and also demonstrates how a Spring dynamic module supports
    OSGI development and reduces the creation of files, thereby making things easier
    with configuration.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Bootstrap your Application with Spring Boot"),
    *Bootstrap your Application with Spring Boot*, starts with setting up a simple
    Spring boot project, along with the process of using a Spring Boot to bootstrap
    applications. This chapter also gives information about how a Spring Boot supports
    a cloud foundry server and helps to deploy applications on cloud.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Spring Cache"), *Spring Cache*, implements
    our own caching algorithm and teaches you to make a generic algorithm. This chapter
    also discusses the classes and interface that support a caching mechanism in a
    Spring Framework.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.html "Chapter 11. Spring with Thymeleaf Integration"), *Spring
    with Thymeleaf Integration*, integrates the Thymeleaf templating engine into a
    Spring MVC application, and also uses a Spring Boot to start Spring with a Thymeleaf
    application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.html "Chapter 12. Spring with Web Service Integration"),
    *Spring with Web Service Integration*, integrates JAX_WS with Spring Web Service.
    It demonstrates how to create spring Web services and an endpoint class, accessing
    the web service by accessing the WSDL URL.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A computer with Mac OS, Ubuntu, or Windows is needed. To build Spring applications,
    you will need at least Java and Maven 3.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a Java developer with experience in developing applications with
    Spring, then this book is perfect for you. A good working knowledge of Spring
    programming conventions and applying dependency injection is recommended to make
    the most of this book.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    have used the `@Controller` annotation to indicate that the `ProductController.java`
    class is a controller class."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "The next step is to create a rest controller to send a mail; to do so,
    click on **Submit**."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
