- en: Getting Started with Vue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vue ([https://vuejs.org/](https://vuejs.org/)) is a JavaScript library focused
    on building web user interfaces. In this chapter, we will meet the library and
    after a brief introduction, we will start creating a web app, laying the ground
    for the different projects we will build together in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Why another frontend framework?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Vue is a relative newcomer in the JavaScript frontend landscape, but a very
    serious challenger to the current leading libraries. It is simple, flexible, and
    very fast, while still providing a lot of features and optional tools that can
    help you build a modern web app efficiently. Its creator, *Evan You*, calls it
    the **progressive framework**:'
  prefs: []
  type: TYPE_NORMAL
- en: Vue is incrementally adoptable, with a core library focused on user interfaces
    that you can use in existing projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can make small prototypes all the way up to large and sophisticated web
    applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vue is approachable--the beginners can pick up the library easily, and the confirmed
    developers can be productive very quickly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vue roughly follows a Model-View-ViewModel architecture, which means the View
    (the user interface) and the Model (the data) are separated, with the ViewModel
    (Vue) being a mediator between the two. It handles the updates automatically and
    has been already optimized for you. Therefore, you don't have to specify when
    a part of the View should update because Vue will choose the right way and time
    to do so.
  prefs: []
  type: TYPE_NORMAL
- en: 'The library also takes inspiration from other similar libraries such as React,
    Angular, and Polymer. The following is an overview of its core features:'
  prefs: []
  type: TYPE_NORMAL
- en: A reactive data system that can update your user interface automatically, with
    a lightweight virtual-DOM engine and minimal optimization efforts, is required
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flexible View declaration--artist-friendly HTML templates, JSX (HTML inside
    JavaScript), or hyperscript render functions (pure JavaScript)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Composable user interfaces with maintainable and reusable components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Official companion libraries that come with routing, state management, scaffolding,
    and more advanced features, making Vue a non-opinionated but fully fleshed out
    frontend framework
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A trending project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Evan You* started working on the first prototype of Vue in 2013, while working
    at Google, using Angular. The initial goal was to have all the cool features of
    Angular, such as data binding and data-driven DOM, but without the extra concepts
    that make this framework opinionated and heavy to learn and use.'
  prefs: []
  type: TYPE_NORMAL
- en: The first public release was published on February 2014 and had immediate success
    the very first day, with HackerNews frontpage, `/r/javascript` at the top spot
    and 10k unique visits on the official website.
  prefs: []
  type: TYPE_NORMAL
- en: The first major version 1.0 was reached in October 2015, and by the end of that
    year, the npm downloads rocketed to 382k ytd, the GitHub repository received 11k
    stars, the official website had 363k unique visitors, and the popular PHP framework
    Laravel had picked Vue as its official frontend library instead of React.
  prefs: []
  type: TYPE_NORMAL
- en: The second major version, 2.0, was released in September 2016, with a new virtual
    DOM-based renderer and many new features such as server-side rendering and performance
    improvements. This is the version we will use in this book. It is now one of the
    fastest frontend libraries, outperforming even React according to a comparison
    refined with the React team ([https://vuejs.org/v2/guide/comparison](https://vuejs.org/v2/guide/comparison)).
    At the time of writing this book, Vue was the second most popular frontend library
    on GitHub with 72k stars, just behind React and ahead of Angular 1 ([https://github.com/showcases/front-end-javascript-frameworks](https://github.com/showcases/front-end-javascript-frameworks)).
  prefs: []
  type: TYPE_NORMAL
- en: The next evolution of the library on the roadmap includes more integration with
    Vue-native libraries such as Weex and NativeScript to create native mobile apps
    with Vue, plus new features and improvements.
  prefs: []
  type: TYPE_NORMAL
- en: Today, Vue is used by many companies such as Microsoft, Adobe, Alibaba, Baidu,
    Xiaomi, Expedia, Nintendo, and GitLab.
  prefs: []
  type: TYPE_NORMAL
- en: Compatibility requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vue doesn't have any dependency and can be used in any ECMAScript 5 minimum-compliant
    browser. This means that it is not compatible with Internet Explorer 8 or less,
    because it needs relatively new JavaScript features such as `Object.defineProperty`,
    which can't be polyfilled on older browsers.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we are writing code in JavaScript version ES2015 (formerly ES6),
    so for the first few chapters, you will need a modern browser to run the examples
    (such as Edge, Firefox, or Chrome). At some point, we will introduce a compiler
    called *Babel* that will help us make our code compatible with older browsers.
  prefs: []
  type: TYPE_NORMAL
- en: One-minute setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Without further ado, let''s start creating our first Vue app with a very quick
    setup. Vue is flexible enough to be included in any web page with a simple `script`
    tag. Let''s create a very simple web page that includes the library, with a simple
    `div` element and another `script` tag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'In the browser console, we should have something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: As you can see in the preceding code, the library exposes a `Vue` object that
    contains all the features we need to use it. We are now ready to go.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an app
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For now, we don''t have any Vue app running on our web page. The whole library
    is based on **Vue instances**, which are the mediators between your View and your
    data. So, we need to create a new Vue instance to start our app:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The Vue constructor is called with the `new` keyword to create a new instance.
    It has one argument--the option object. It can have multiple attributes (called
    options), which we will discover progressively in the following chapters. For
    now, we are using only two of them.
  prefs: []
  type: TYPE_NORMAL
- en: 'With the `el` option, we tell Vue where to add (or "mount") the instance on
    our web page using a CSS selector. In the example, our instance will use the `<div
    id="root">` DOM element as its root element. We could also use the `$mount` method
    of the Vue instance instead of the `el` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Most of the special methods and attributes of a Vue instance start with a dollar
    character.
  prefs: []
  type: TYPE_NORMAL
- en: We will also initialize some data in the `data` option with a `message` property
    that contains a string. Now the Vue app is running, but it doesn't do much, yet.
  prefs: []
  type: TYPE_NORMAL
- en: You can add as many Vue apps as you like on a single web page. Just create a
    new Vue instance for each of them and mount them on different DOM elements. This
    comes in handy when you want to integrate Vue in an existing project.
  prefs: []
  type: TYPE_NORMAL
- en: Vue devtools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An official debugger tool for Vue is available on Chrome as an extension called
    Vue.js devtools. It can help you see how your app is running to help you debug
    your code. You can download it from the Chrome Web Store ([https://chrome.google.com/webstore/search/vue](https://chrome.google.com/webstore/search/vue))
    or from the Firefox addons registry ([https://addons.mozilla.org/en-US/firefox/addon/vue-js-devtools/?src=ss](https://addons.mozilla.org/en-US/firefox/addon/vue-js-devtools/?src=ss)).
  prefs: []
  type: TYPE_NORMAL
- en: 'For the Chrome version, you need to set an additional setting. In the extension
    settings, enable Allow access to file URLs so that it can detect Vue on a web
    page opened from your local drive:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/8e6ecee5-8be1-4e90-aa44-d5fb9661f379.png)'
  prefs: []
  type: TYPE_IMG
- en: 'On your web page, open the Chrome Dev Tools with the *F12* shortcut (or *Shift*
    + *command* + *c* on OS X) and search for the Vue tab (it may be hidden in the
    More tools... dropdown). Once it is opened, you can see a tree with our Vue instance
    named Root by convention. If you click on it, the sidebar displays the properties
    of the instance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/9d2b149a-ce2b-486e-aa66-413add014eaf.png)You can drag and drop the
    `devtools` tab to your liking. Don''t hesitate to place it among the first tabs,
    as it will be hidden in the page where Vue is not in development mode or is not
    running at all.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can change the name of your instance with the `name` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This will help you see where your instance in the devtools is when you will
    have many more:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/9a2be243-fc01-44c2-b0b3-ac9e5cb4f6b1.png)'
  prefs: []
  type: TYPE_IMG
- en: Templates make your DOM dynamic
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With Vue, we have several systems at our disposal to write our View. For now,
    we will start with templates. A template is the easiest way to describe a View
    because it looks like HTML a lot, but with some extra syntax to make the DOM dynamically
    update very easily.
  prefs: []
  type: TYPE_NORMAL
- en: Displaying text
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first template feature we will see is the **text interpolation**, which
    is used to display dynamic text inside our web page. The text interpolation syntax
    is a pair of double curly braces containing a JavaScript expression of any kind.
    Its result will replace the interpolation when Vue will process the template.
    Replace the `<div id="root">` element with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The template in this example has a `<p>` element whose content is the result
    of the `message` JavaScript expression. It will return the value of the message
    attribute of our instance. You should now have a new text displayed on your web
    page--Hello Vue.js!. It doesn't seem like much, but Vue has done a lot of work
    for us here--we now have the DOM wired with our data.
  prefs: []
  type: TYPE_NORMAL
- en: 'To demonstrate this, open your browser console and change the `app.message`
    value and press *Enter* on the keyboard:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The message has changed. This is called **data-binding**. It means that Vue
    is able to automatically update the DOM whenever your data changes without requiring
    anything from your part. The library includes a very powerful and efficient reactivity
    system that keeps track of all your data and is able to update what's needed when
    something changes. All of this is very fast indeed.
  prefs: []
  type: TYPE_NORMAL
- en: Adding basic interactivity with directives
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's add some interactivity to our otherwise quite static app, for example,
    a text input that will allow the user to change the message displayed. We can
    do that in templates with special HTML attributes called **directives**.
  prefs: []
  type: TYPE_NORMAL
- en: All the directives in Vue start with `v-` and follow the kebab-case syntax.
    That means you should separate the words with a dash. Remember that HTML attributes
    are case insensitive (whether they are uppercase or lowercase doesn't matter).
  prefs: []
  type: TYPE_NORMAL
- en: 'The directive we need here is `v-model`, which will bind the value of our `<input>`
    element with our `message` data property. Add a new `<input>` element with the
    `v-model="message"` attribute inside the template:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Vue will now update the `message` property automatically when the input value
    changes. You can play with the content of the input to verify that the text updates
    as you type and the value in the devtools changes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/fbc3442c-5df2-4b7c-a7ec-c96f05a10278.png)'
  prefs: []
  type: TYPE_IMG
- en: There are many more directives available in Vue, and you can even create your
    own. Don't worry, we will cover that in later chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we quickly set up a web page to get started using Vue and wrote
    a simple app. We created a Vue instance to mount the Vue app on the page and wrote
    a template to make the DOM dynamic. Inside this template, we used a JavaScript
    expression to display text, thanks to text interpolations. Finally, we added some
    interactivity with an input element that we bound to our data with the `v-model`
    directive.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will create our first real web app with Vue--a markdown
    notebook. We will need more Vue superpowers to turn the development of this app
    into a fun and swift experience.
  prefs: []
  type: TYPE_NORMAL
