- en: Create Your Own Commands
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, you may be having a hard time remembering one command. Other times,
    you will find yourself running a very long command over and over again, and that
    drives you insane. In this chapter, you will learn how you can make your *own*
    commands, because you are the real boss.
  prefs: []
  type: TYPE_NORMAL
- en: Your first alias
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s assume that you always forget that the command `free -h` displays the
    memory information of your system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You may be asking yourself: "Why can''t I just type `memory` to display the
    memory information instead of `free -h`?". Well, you certainly can do that by
    creating an `alias`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `alias` command instructs the shell to replace one string (word) with another.
    Well, how is this useful? Let me show you; if you run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Then every time you enter `memory`, your shell will replace it with `free -h`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Wow! So now you have achieved your dream! You can create an alias for any Linux
    command that you are having trouble remembering. Notice that the general format
    of the `alias` command is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: One alias for multiple commands
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can use a semicolon to run multiple commands on the same line. For example,
    to create a new directory named `newdir` and change to `newdir` all at once, you
    can run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'So you use a semicolon to separate each command. In general, the syntax for
    running multiple commands on the same line is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'We often like to check the calendar and the date at the same time, right? For
    that, we will create an alias named `date` so that every time we run `date`, it
    will run both the `date` and `calendar` commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s run `date` and see what''s up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2a649e7b-4342-4086-8a87-f9c53771b55f.png)'
  prefs: []
  type: TYPE_IMG
- en: Notice here that we used the alias name `date`, which is already the name of
    an existing command; this is completely fine with aliases.
  prefs: []
  type: TYPE_NORMAL
- en: Listing all aliases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You should also know that aliases are user-specific. So the aliases created
    by `elliot` will not work for user `smurf`; take a look:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see, `smurf` can''t use the aliases of user `elliot`. So every user
    has their own set of aliases. Now, let''s exit back to user `elliot`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'You can run the `alias` command to list all the aliases that can be used by
    the currently logged-in user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Creating a permanent alias
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far, we have been creating temporary aliases; that is, the two aliases of `memory`
    and `date` that we created are temporarily and only valid for the current Terminal
    session. These two aliases will vanish as soon as you close your Terminal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open a new Terminal session, then try and run the two aliases we have created:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see, they are gone! They are not even in your list of aliases anymore:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'To create a permanent alias for a user, you need to include it in the hidden `.bashrc` file
    in the user''s home directory. So to permanently add our two aliases back, you
    have to add the following two lines at the very end of the `/home/el- liot/.bashrc`
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'You can do it by running the following two `echo` commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'After you add both aliases to the `/home/elliot/.bashrc` file, you need to
    run the `source` command on the `/home/elliot/.bashrc` file for the change to
    take effect in the current session:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Now you can use your two aliases, `memory` and `date`, forever without worrying
    that they will disappear after you close your current Terminal session:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/905df331-38f0-4953-a3e8-378e979374b5.png)'
  prefs: []
  type: TYPE_IMG
- en: Removing an alias
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s create another temporary alias named `lastline` that will display the
    last line in a file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s try our new alias on the `/home/elliot/.bashrc` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Alright! It works well. Now, if you wish to delete the alias, then you can
    run the `unalias` command followed by the alias name:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'So now the `lastline` alias has been deleted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also use the `unalias` command to temporarily deactivate a permanent
    alias. For example, if you run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, the permanent alias `memory` will not work in the current Terminal session:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: However, the alias `memory` will come back in a new Terminal session. To remove
    a permanent alias, you need to remove it from the `.bashrc` file.
  prefs: []
  type: TYPE_NORMAL
- en: Some useful aliases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now let's create some useful aliases that will make our life much more enjoyable
    while working on the Linux command line.
  prefs: []
  type: TYPE_NORMAL
- en: 'A lot of people hate to remember all the `tar` command options, so let''s make
    it easy for these people then. We will create an alias named `extract` that will
    extract files from an archive:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: You can try the alias on any archive, and it will work like a charm.
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly, you can create an alias named `compress_gzip` that will create a
    gzip-compressed archive:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'You may also want to create an alias named `soft` that will create soft links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use the soft alias to create a soft link named `logfiles` that points
    to the `/var/logs` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s create an alias named `LISTEN` that will list all the listening
    ports on your system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s try and run the `LISTEN` alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'This is pretty cool! Let''s create one final alias, `sort_files`, that will
    list all the files in the current directory sorted by size (in descending order):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s try and run the `sort_files` alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, the files in the current directory are listed in descending
    order of size (that is, the biggest first). This will prove to be particularly
    useful when you are doing some cleaning on your system and you want to inspect
    which files are occupying the most space.
  prefs: []
  type: TYPE_NORMAL
- en: Adding safety nets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can also use aliases to protect against dumb mistakes. For example, to
    protect against removing important files by mistake, you can add the following
    alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'Now you will be asked to confirm each time you attempt to remove a file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Go crazy with aliases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can also have some fun with aliases and make users go crazy; take a look
    at this alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Now when user `elliot` tries to open the `nano` editor, the `vi` editor will
    open instead! User `elliot` can overcome this dilemma by typing in the full path
    of the `nano` editor. Here is another funny alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Now look what will happen when user `elliot` tries to exit the Terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: I will let you deal with this by yourself; I am evil like that! Haha.
  prefs: []
  type: TYPE_NORMAL
- en: Knowledge check
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the following exercises, open up your Terminal and try to solve the following
    tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a temporary alias called `ins` for the `apt-get install` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a temporary alias called `packages` for the `dpkg -l` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a permanent alias called `clean` that will remove all the files in the
    `/tmp`directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
