- en: Assessments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 1: Introduction to Design Methodology
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem Statement → Information Gathering → Solution Proposal → Implementation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Because it allows for the correct requirements to be established.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To allow room for the customer to choose the right solution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Explored in the section *Analyzing the problem and asking the right questions.*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Proof of Concept.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The actual solution is delivered and tested.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It allows us to explore the different concepts of the solution of an actual
    working environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 2: Defining GlusterFS Storage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 5](b140a44b-3594-4c0d-ad7c-03de29a31815.xhtml), *Analyzing Performance
    in a Gluster System* further analyzes this.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: File storage is better suited for how GlusterFS works.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Almost all cloud providers offer object storage these days.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: File storage, block storage (through iSCSI Initiator), and object storage (through
    a plugin).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No, but it does contribute to the project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: GlusterFS is free, open source software; simply download it from your favorite
    package manager.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It does through the Geo-replication function.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 3: Architecting a Storage Cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It depends on the volume type used, but 2 CPUs and 4+GB of RAM is a good starting
    point.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: GlusterFS would use the brick’s filesystem cache mechanism.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It is a fast storage layer where I/Os will be served instead of going to slower
    storage. Cache can be RAM or faster storage media, such as SSDs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As more concurrency is achieved, the software will require more CPU cycles to
    server the requests.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Distributed will aggregate space, Replicated will mirror data, hence “halving”
    space, Dispersed will aggregate space but will consume 1 node for parity. Think
    of it as a RAID5.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Depends on many variables such as retention periods, data ingress, etc...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The expected amount of data growth.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Throughput is a function of a given amount of data over a given amount of time,
    normally displayed as MB/s or Megabytes per second
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Input output operations per second** (**IOPS**) is a function of certain
    amount of operations per second'
  prefs: []
  type: TYPE_NORMAL
- en: '**I/O size** refers to the request size done by the appliance'
  prefs: []
  type: TYPE_NORMAL
- en: The layout of the storage locations used by GlusterFS.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: GlusterFS’s process of replicating data from a cluster to another, normally
    located in a different Geo-location..
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 4: Using GlusterFS on Cloud Infrastructure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The storage locations used by GlusterFS to store actual data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Z FileSytem, an advanced filesystem created by Sun Microsystems and later
    made open source.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A ZFS storage pool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A disk used for read request, typically faster and lower latency than the disks
    used in the zpool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Normally through the Operating System’s package manager, such as yum.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A pool of GlusterFS nodes that will participate in the same cluster.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Gluster volume creates <Volume name> <Volume Type> <Number of nodes> <node and
    brick paths>.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This setting controls how much memory will be used for caching.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adaptive Replacement Cache, this is ZFSs caching algorithm.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 5: Analyzing Performance in a Gluster System
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Megabytes per second, a throughput measurement.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Shows ZFS’s I/O statistics.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part of the sysstat package, used for block devices I/O statistics.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is the read latency, measured in milliseconds.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The amount of time the CPU is waiting for outstanding I/O to complete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Flexible I/O Tested, a tool used for I/O benchmarking.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Either through a configuration file or by passing the parameters to the command
    directly.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A file that tells FIO how to run a test.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By purposely killing one of the nodes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By increasing resources on the nodes or increasing disk size.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 6: Creating a Highly Available Self-Healing Architecture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The main Kubernetes components are divided into the control plane and the API
    objects.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The three of them are managed Kubernetes solutions, provided by the three mayor
    public Cloud providers, Google, Amazon, and Microsoft respectively.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Containers have a smaller attack surface, but that doesn't exempt them from
    exploits, but the mayor container runtime projects are well maintained and if
    an exploit is detected it is rapidly addressed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That will depend on the type of application you are trying to run and your familiarity
    with the technology. To migrate an application to containers is generally easy,
    but to do it in the most efficient way is what requires work.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No, you can find the Docker Engine for Windows and, at the time of writing,
    Kubernetes Windows Nodes are in beta.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 7: Understanding the Core Components of a Kubernetes Cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kubernetes, at the time of writing, is the mayor Container orchestrator in the
    market.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Kubernetes is composed of the binaries that make up the cluster, and the logical
     objects called API objects.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Kubernetes API objects are the logical objects managed by the orchestrator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can run orchestrated containarized workloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A container orchestrator is a tool in charge of managing our running containers
    and different tasks related to keeping our workloads highly available.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A Pod is the smallest logical object of Kubernetes that encapsulates one or
    more containers in shared namespaces.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A Deployment is a set of replicated Pods that are managed by the Kubernetes
    replication controllers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 8: Architecting Kubernetes on Azure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Due to the majority mechanisms of ETCD odd numbers are preferred in order to
    be able to reach a majority of votes all the times.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, but it can also run in a separate set of notes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lower latency is recommended because of the heartbeat and leader election frequencies.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The worker nodes or Nodes, are the cluster members in charge of running the
    container workloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Types of Workloads and the amount of containers that each is going to run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'All storage providers or provisionares can be found here: [https://kubernetes.io/docs/concepts/storage/storage-classes/#provisioner](https://kubernetes.io/docs/concepts/storage/storage-classes/#provisioner)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A load balancer is needed to send requests across all our replicated Pods.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Namespaces can be used to logically partition our cluster and assign roles and
    resources to each logical partition.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 9: Deploying and Configuring Kubernetes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are several ways to install Kubernetes, from auto provisioning tools
    like `kubeadm`  and `kubespray`, to a totally manual installation. You can find
    more about the installation methods going to the following link: [https://kubernetes.io/docs/setup/](https://kubernetes.io/docs/setup/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A `kubeconfig` file contains all the necessary information to communicate and
    authenticate  with the API server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can create SSL certificates with several tools, in this book we used `cffssl`.
    But you can also use `openssl` and `easyrsa`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Azure Kubernetes Services** (**AKS**) is the managed Kubernetes solution
    provided by Microsoft for their public cloud Azure.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure CLI can be used in either operating system as it is a Python-based command
    line interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can either create a resource group via Azure CLI, PowerShell, or the Azure
    GUI.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can find the different ways of installing etcd in the following link: [http://play.etcd.io/install](http://play.etcd.io/install)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 10: Monitoring with ELK stack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The process of actively gathering data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By knowing usage trends, decisions such as buying more resources can be made
    with actual data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By having data in a single place, events can be proactively detected before
    they can occur.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By knowing what is the normal behavior of a storage system, hence providing
    a baseline for performance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When spikes are seen where they’re not supposed to be, this can mean erratic
    behavior.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Instead of going through each of the hosts in an environment, they can be checked
    through a single centralized location.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A software for data indexing and analysis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Elasticsearch stores data in json format.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Logstash is a data processing parser that allows for data to be manipulated
    before being sent to Elasticsearch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Kibana provides the visualisation interface for Elasticsearch, allowing for
    data to be easily visualized.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 11: Designing an ELK Stack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At least 2 CPU cores are needed for optimal functionality on smaller deployments.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At least 2Ghz.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Slower or less than 2 CPUs impact mostly Elasticsearch startup time, indexing
    rate and latency.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The kernel uses available RAM for caching requests to the filesystem.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If swapping occurs, search latency will be greatly impacted.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Elasticsearch will fail to start if there’s not enough memory, once running
    if there’s not sufficient memory OOM will kill Elasticsearch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The minimum is 2.5GB but 4GB is recommended.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`/var/lib/elasticsearch`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lower latency helps with the indexing/ search latency.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 2GB RAM and 1 CPU.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is a storage location where logstash will persistently store queues in
    the scenario of a crash.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How many users will access concurrently the dashboard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 12: Using Elasticsearch, Logstash, and Kibana to Manage Logs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Elasticsearch can be installed through the package manager.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is done through parted.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adding the UUID of the disks to `/etc/fstab`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`/etc/elasticsearch/elasticsearch.yml`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This gives the name to the cluster, the name should be consistent across nodes
    so each join the same cluster.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The number is dictated by `(N/2)+1`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By using the same cluster.name setting, the second node will join to the same
    cluster.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add the repo, install through `yum`, partition the disk for logstash.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is a storage location where logstash will persistently store queues in
    the scenario of a crash.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A coordinating node is an Elasticsearch node that does not accept inputs, does
    not store data or takes part in master/slave elections.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Beats are the lightweight data shippers from Elastic.co.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Filebeat function is to collect logs from sources like `syslog`, apache and
    others to later ship it to Elasticsearch or Logstash.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 13:  Solving Management Problems with Salty Solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Is the task of maintaining existing IT infrastructure.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Centralize all infrastructure regardless of its operating system or architecture.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Puppet, Chef, Ansible, Spacewalk, SaltStack and many others.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Writing desired states on a specific language that can describe the state of
    an IT infrastructure.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Push and Pull.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Salt is an open source project/software that comes to solve many of the challenges
    of systems’ management.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Master and Minions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 14: Designing a Salt Solution and Installing the Software
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Any Linux distribution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One self-managed node is the minimum.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide High availability and Balancing to our SaltStack.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Manually installing the binaries, and through the bootstrap script.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Via their keys.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Through the `test.ping` function.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Grains contain minion specific information (metadata) or labels. Pillars contain
    configuration and sensitive information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 15: Design Best Practices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: HIPAA stands for Health Insurance Portability and Accountability Act which is
    a standard for handling health and medical data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type 1/ Type 2 Hypervisors (**Kernel-based Virtual Machine** (**KVM**), **Linux
    containers** (**LXC**), XEN)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Linux for SAP HANA
  prefs: []
  type: TYPE_NORMAL
- en: Apache Hadoop
  prefs: []
  type: TYPE_NORMAL
- en: Linux for Oracle DB
  prefs: []
  type: TYPE_NORMAL
- en: Large MongoDB  deployments for memory caching
  prefs: []
  type: TYPE_NORMAL
- en: '**High-performance computing** (**HPC**)'
  prefs: []
  type: TYPE_NORMAL
- en: Yes, ideally hypervisors need access to the resources to more effectively provide
    them to virtual machines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, CPU is the major resource being shared as the physical CPU has to serve
    cycles for all of the VMs in the same node.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Allowing for different network traffic to go through different NICs/ Subnets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is a method of migration which literally moves existing workloads from
    on-premises to the cloud.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is a method of migration which leverages some changes to the architecture
    to take advantage of solutions provided on the cloud.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is a method of migration which involves re-architecting the solution into
    the cloud.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
