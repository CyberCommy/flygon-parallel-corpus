- en: Exploitation on the Cloud using Kali Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the [Chapter 2](b4cd4086-a900-4c8a-b406-a55ee26745fb.xhtml), *Setting Up
    a Kali PentestBox on the Cloud*, we set up a penetration testing lab as well as
    the Kali Linux PentestBox configured with remote access. It is time to start performing
    some scanning and exploitation using the PentestBox on the vulnerable hosts in
    the lab.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will focus on the process of automated vulnerability scans using
    the free version of a commercial tool and then exploiting the found vulnerabilities
    using **Metasploit**. These vulnerabilities were baked into the lab environment earlier,
    on the vulnerable hosts that were configured in [Chapter 1](9c51c4e0-951d-4b49-95ed-c9220a9d3210.xhtml),
    *Setting up a Pentesting Lab on AWS*, and [Chapter 2](b4cd4086-a900-4c8a-b406-a55ee26745fb.xhtml),
    *Setting up a Kali PentestBox on the Cloud*.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Running automated scans with Nessus and verifying the vulnerabilities that are
    found
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploitation using Metasploit and Meterpreter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploiting vulnerable Linux and Windows **virtual** **machines** (**VMs**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following tools will be used in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Nessus (needs manual installation)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metasploit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring and running Nessus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nessus is a popular tool for automating vulnerability scans within a network,
    with some added functionality of scanning web applications as well. In the first
    section, we shall set up Nessus on our PentestBox on EC2\. Then we shall use it
    to run basic and advanced scans on the lab that we set up earlier.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Nessus on Kali
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first step to performing automated pentesting and vulnerability assessment
    using Nessus, is obviously to install it on Kali. To make things easy, Nessus
    comes in a `.deb` package that can be directly installed using `dpkg`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Nessus, the first step is to download the `.deb` package from the
    tenable website, on [https://www.tenable.com/downloads/nessus](https://www.tenable.com/downloads/nessus):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f5a8e164-a97f-409d-8d89-7bc89a5b5624.png)'
  prefs: []
  type: TYPE_IMG
- en: Once downloaded, we need to transfer this to our Kali PentestBox on AWS. We
    can do this file transfer using **WinSCP** on Windows. On Linux/macOS, the native
    SCP utility can be used. The setup is available at [https://winscp.net/eng/download.php](https://winscp.net/eng/download.php)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once WinSCP is installed, we need to set up a connection to our Kali PentestBox.
    First, we need to add a new site:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4060d84f-4f58-468f-8b6a-ffd1a6d4cb8e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we need to add the public key, downloaded from AWS, for authentication.
    To do this, we need to click on Advanced and set the path to the key on SSH | Authentication:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/922ed0c0-3710-410a-b026-04f9b3313fa0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once done, it''s a simple matter of saving the site and then connecting to
    it to see a folder listing on the remote host:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d57e4499-a3e6-4cb6-88bf-d81022775642.png)'
  prefs: []
  type: TYPE_IMG
- en: 'From here, it''s a simple matter of dragging the `.deb` package into the `root`
    folder that we just accessed in the previous step. Once done, we can get started
    with installing the package. This can be achieved using `dpkg` through an SSH
    shell to the AWS EC2 instance:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c66eef64-0a8b-4451-a9d3-f3e4abad9e27.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once done, we start the Nessus service and confirm that it is running:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If the `status` command returns a status of running, we have successfully started
    the service. Next, we need to set up SSH tunneling to forward port `8834` from
    the Kali PentestBox to our localhost over the SSH connection. On a Linux Terminal,
    the following syntax needs to be used:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'On Windows, if you''re using PuTTY, the SSH Tunnels can be configured here,
    by clicking on the Tunnels option after launching PuTTY:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/449c39b4-00f8-4821-a466-7009213a9553.png)'
  prefs: []
  type: TYPE_IMG
- en: Once done, reconnect to the instance and you can now access Nessus on your local
    machine on `https://127.0.0.1:8834`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuring Nessus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once Nessus has been installed and the SSH tunnel configured, we can access
    Nessus on the browser by pointing at `https://127.0.0.1:8834`. We will need to
    go through a set of first steps to set up Nessus now.
  prefs: []
  type: TYPE_NORMAL
- en: 'The very first screen prompts the user to Create an account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/684b5a17-b727-43f6-9e8c-1b8fe9c9ef7d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter suitable credentials and proceed to the next step. Now we need to activate
    a home license. We can grab one at [https://www.tenable.com/products/nessus-home](https://www.tenable.com/products/nessus-home)
    by filling in the following form:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/333e486c-8566-40e3-95d1-b4c648e40640.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you''ve received the activation code by email, enter it into the web interface
    and trigger the initialization process. Now Nessus goes through the process of
    downloading data that is needed for the scanning of network assets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/59b08e73-99da-49a3-8b55-a3872e24798e.png)'
  prefs: []
  type: TYPE_IMG
- en: This process usually takes a few minutes, so there's enough time to go grab
    a cup of coffee while this is happening.
  prefs: []
  type: TYPE_NORMAL
- en: Performing the first Nessus scan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once the initialization is complete, we're welcomed by the Nessus home screen.
    Here, we need to click on New Scan to start a new scan on the pentesting lab that
    we set up earlier.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once on the new scan tab, we need to start a Basic Network Scan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d2d914a2-f776-492b-9b29-deb05169fd2c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After clicking on Basic Network Scan, we need to give a scan name and enter
    the IPs of the two other hosts that we set up in the lab:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/302633ca-2b37-4469-8fef-301503eb1bfd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next up, we configure the DISCOVERY and ASSESSMENT options. For discovery,
    let''s request a scan of all services:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/52ebfaef-707e-4c14-b49e-9a28a95ffe93.png)'
  prefs: []
  type: TYPE_IMG
- en: This has the advantage of enumerating all services running on a host and discovers
    hosts if no traditional services are running on them.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s configure Nessus to scan web applications as well:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/42cfc52f-3427-4682-be08-920b213d987c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, we Launch the scan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ec3245c9-d518-4e2d-8985-2cb0f8d8c019.png)'
  prefs: []
  type: TYPE_IMG
- en: Once again, scanning is a time-consuming process, so this would take around
    15 to 20 minutes to complete on average, if not more.
  prefs: []
  type: TYPE_NORMAL
- en: Exploiting a vulnerable Linux VM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have finished scanning both the hosts in the vulnerable lab, it
    is time to start exploitation of these hosts. Our first target is the Ubuntu instance
    that we set up in our lab. Here, we shall go through the scan results for this
    host and try to gain unauthorized access to the host.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Nessus scan for Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We first start with the Nessus scan results for our Ubuntu server host:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/26a5f1a9-ebcb-483a-88d0-77dfccf230de.png)'
  prefs: []
  type: TYPE_IMG
- en: Unsurprisingly, we just find a bunch of information vulnerabilities, since there
    are just two services installed—**FTP** and **SSH**. The FTP server has a backdoor
    baked into it; however, it has not come out as a critical vulnerability. If you
    look at the last result in the Linux scan, it does detect that vsftpd 2.3.4 is
    installed, which comes with a backdoor.
  prefs: []
  type: TYPE_NORMAL
- en: 'To summarize the other results on this page, the Nessus SYN scanner simply
    lists a number of services enabled on the host:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a0193409-10bc-4dff-8042-bdec6bde3b09.png)'
  prefs: []
  type: TYPE_IMG
- en: There is a bunch of more useful information on this page that can be manually
    inspected. As of now, we shall focus on exploitation of the `vsftpd` service that
    we installed on the Ubuntu server.
  prefs: []
  type: TYPE_NORMAL
- en: Exploitation on Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the purpose of exploiting the `vsftpd` service, we shall use `Metasploit`,
    which comes with Kali Linux built in. This can be loaded up by simply entering `msfconsole` into
    the Terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/64f6cca1-ea4d-492c-963e-5e4f73787e54.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, we can simply search for the name of the service to see if there are
    any associated exploits. To do this, simply run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This will turn up a list of the exploits with that specific keyword. In this
    case, it is just one exploit:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e44c426b-3109-4681-bfd7-815f81bdd7a8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can use this exploit by running the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This changes the prompt to that of the exploit. Now all that needs to be done
    is to run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'And the confirmation is shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bec749ad-29cb-4123-a329-3c6508c93b5d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, just run `exploit`, and `vsftpd exploit` would be executed to provide
    an interactive reverse shell with `root` privileges:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a98aa71a-2885-43d3-b8a2-cb73442b6e4c.png)'
  prefs: []
  type: TYPE_IMG
- en: Using this reverse shell, you have full freedom to run whatever commands are
    supported on the OS. This is a good place to play around with auxiliary and post-exploitation
    modules on `Metasploit`.
  prefs: []
  type: TYPE_NORMAL
- en: Exploiting a vulnerable Windows VM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finally, let's go through the results of the Windows Nessus scan. This has more
    interesting scan results, since we used an EOL OS that receives no updates, as
    well as an older version of the web application server.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Nessus scan for Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Nessus scan for Windows throws up a massive number of issues thanks to
    the end-of-life OS being used, as well as the outdated server. Let''s focus on
    the most critical findings first:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/87078513-0a66-4add-a541-13a2b4ce937a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'There are a number of issues dealing with outdated OpenSSL and PHP installations,
    as well as a couple of findings pointing out that Windows Server 2003 is an unsupported
    OS. However, the most important issue here is the detection of multiple vulnerabilities
    in SMBv1\. The details of this vulnerability point out the **Common Vulnerabilities
    and Exposures** (**CVEs**) for the associated SMB vulnerabilities and the patches
    for these:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/06befeba-c9da-4ca4-97d2-4828a8a4766b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In addition to vulnerable and outdated services, the scan did pick up a number
    of web application issues as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a33ec4b0-86b5-4cdc-8cf8-bafd35258a63.png)'
  prefs: []
  type: TYPE_IMG
- en: Since we exploited a network service on the Linux host, we shall focus on exploiting
    one of the vulnerabilities on the web application to gain access to a shell.
  prefs: []
  type: TYPE_NORMAL
- en: Exploitation on Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The vulnerable web application has an **SQL injection** vulnerability. SQL
    injection allows an attacker to inject arbitrary SQL queries and execute them
    on the backend DBMS. This vulnerability is present on the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'An SQL injection on a web application that is potentially running with admin
    privileges means that there is a possibility of a complete takeover of the web
    application. For this purpose, we shall use `sqlmap`. To attack the URL with `sqlmap`,
    the syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'A `sqlmap` confirms that the injection vulnerability is present, as seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4218cacc-b63b-432e-8e6b-f5dc63e5339d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The next step is to use `sqlmap` to gain shell access on the remote server.
    `sqlmap` comes with a very handy feature, that uploads a stager for uploading
    further files into the webroot. Then it follows it up by uploading a web shell
    that executes commands and returns the output of the command, all with a single
    command. In order to trigger this, execute the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The `--os-shell` asks `sqlmap` to spawn a shell using the method described
    previously and the `--tmp-path` value specifies where to upload the PHP files
    for the purpose of spawning a shell. Once the command is executed, user input
    would be prompted twice. The first instance is to select the technology, which
    is PHP in this case. The second instance is to trigger full path disclosures,
    which can be enabled. If everything goes well, we should be presented with an
    interactive shell:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f0282943-7701-4a14-9fc8-11ea03180fef.png)'
  prefs: []
  type: TYPE_IMG
- en: As with the Linux exploitation, any commands can be executed through this interactive
    shell.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter walked through the process of setting up Nessus on the Kali PentestBox on
    EC2\. Following this, SSH tunneling was explained, within the context of accessing
    the Nessus service securely without exposing it to the internet. Once the Nessus
    instance was accessible, we were able to activate it and perform automated scans
    on the two hosts that were set up in the pentest lab. These automated scans came
    up with a number of results, which further helps us exploit both of them. Finally,
    the chapter covered exploiting and taking over the Linux box by exploiting a vulnerable
    network service, and the Windows box by exploiting a web application vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: This brings an end to this chapter, which is focused toward first-time pentesters
    who are looking to get into AWS pentesting but do not have a lab environment at
    hand. In the next chapter, we will take a deeper dive into setting up EC2 instances
    and performing automated and manual exploitation.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What advantage would the advanced scan provide in Nessus versus the basic scan?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the Metasploit `aux` and `post` modules?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is there any way to get a Bash shell by exploiting `vsftpd`?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is there any way to get VNC access on the Linux box by exploiting `vsftpd`?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why does the Windows box automatically give administrator privileges?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Mastering Metasploit: [https://www.packtpub.com/networking-and-servers/mastering-metasploit](https://www.packtpub.com/networking-and-servers/mastering-metasploit)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Nessus 8.2.x: [https://docs.tenable.com/nessus/](https://docs.tenable.com/nessus/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Metasploit Unleashed—Free Ethical Hacking Course: [https://www.offensive-security.com/metasploit-unleashed/](https://www.offensive-security.com/metasploit-unleashed/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
