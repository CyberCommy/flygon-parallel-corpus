- en: '*Chapter 9*: Securing Network Connectivity with firewalld'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A great mentor and technologist working with military restricted environments
    once told me that *"The only secure system is the one that is switched off, disconnected
    from any network, and buried in the middle of the desert."* He is right, of course,
    but we must provide a service to make the system useful. This means having it
    running and connected to a network.
  prefs: []
  type: TYPE_NORMAL
- en: One of the techniques that's used in security to reduce incidents, such as avoiding
    unexpected exposure to a vulnerability and enabling unauthorized remote access,
    is reducing the attack surface and applying defense in depth principles. When
    you do that in a network, step one is filtering connections using a `firewall-cmd`
    and a `systemd` service unit to simplify its management.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics to get a good understanding
    of how to manage the default firewall in RHEL:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to the RHEL firewall – firewalld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling firewalld on the system and reviewing the default zones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the different configuration items under firewalld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling and managing services and ports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating and using service definitions for firewalld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring firewalld with the web interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to the RHEL firewall – firewalld
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'RHEL comes with two low-level network traffic filtering mechanisms: `firewall-cmd`)
    instead. In this section, we will take a look at the firewall defaults in RHEL.'
  prefs: []
  type: TYPE_NORMAL
- en: 'firewalld is installed by default in the system, which we can check by using
    the `rpm` command, so there is no need to install it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If we have an installation that doesn't include firewalld for some reason, we
    can install it by running `dnf install firewalld`.
  prefs: []
  type: TYPE_NORMAL
- en: 'firewalld includes a service called `firewalld`, which is configured to run
    by default at startup. We can check this by using the `systemctl status firewalld`
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.1 – Output of "systemctl status firewalld"'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16799_09_001.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.1 – Output of "systemctl status firewalld"
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, the `firewalld` service is enabled and running. This is the default
    status in a RHEL system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The main way for a sysadmin to configure firewalld is by using the `firewall-cmd`
    command. However, you can also do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Add new files with service definitions in `/etc/firewalld/` (as explained in
    the *Creating and using service definitions for firewalld* section of this chapter)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use the web interface, called **cockpit**, to configure firewalls (as explained
    in the *Configuring firewalld with the web interface* section of this chapter)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use the `firewall-config` graphical interface in your desktop environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this chapter, we will review the main mechanism and the web interface.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know the defaults of the RHEL main firewall, let's learn how to
    enable it.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling firewalld in the system and reviewing the default zones
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have already seen that `systemctl`. Let''s stop the `firewalld` service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'In the previous output, as shown in bold the service is inactive. We can check
    this by using the `firewall-cmd --state` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: At the moment, the firewall service has stopped and all the rules have been
    dropped. The configuration for the service, however, has not changed, so if we
    reboot the system, firewalld will be running again.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: We can always see the underlying `netfilter` rules by running the `nft list
    table filter` command. You may want to run it before and after stopping the service
    to see the difference.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s try and start the service again:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s check that firewalld is running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'To fully disable the service, we will need to run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s see how the service is disabled but still running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: When you're managing services with `systemctl`, you need to understand that
    enabling and disabling the service only affects how it behaves during the startup
    sequence, while starting and stopping only affects the current status of the service.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: To disable and stop in one command, we can use the `--now` option; for example,
    `systemctl disable firewalld --now`. This option can also be used to enable and
    start; for example, `systemctl enable firewalld --now`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s reenable the service again and ensure it''s running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Now that we know how to start and stop, as well as enable and disable, the `firewalld`
    service, let's understand the configuration structure and learn how to interact
    with it by reviewing the default configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing the different configuration items under firewalld
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'firewalld manages three concepts in its configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Zones**: A firewalld zone is a group of rules that can be activated all together
    and assigned to a network interface. It includes different services and rules
    but also settings that alter the behavior of network traffic filtering.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Services**: A firewalld service is a port or group of ports that must be
    configured together for a specific system service (hence the name) to work properly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`80`) and a type of traffic (that is, TCP) and can be used to manually enable
    network traffic to a custom system service.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'firewalld manages two types of configurations:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Running**: The rules that have currently been applied to the system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Permanent**: The rules that have been saved and will be loaded when the service
    starts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: The concept behind running versus permanent is to try network filtering rules
    in a running system and, once ensured that they work well, save them as permanent
    ones. Remember to check that the rules you want in the system have been saved
    properly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s check out our system and see which zones are available:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s also check which zone is applied by default:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s review the zones that are available in firewalld by looking at the following
    table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16799_09_Table_9.1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: You can always access the information about these zones, and more, by accessing
    the `firewalld.zones` manual pages available in the system by running `man firewalld.zones`.
    A good exercise is to review the aforementioned manual page.
  prefs: []
  type: TYPE_NORMAL
- en: The aforementioned services will be reviewed in more detail in the next section.
    For now, let's learn how to manage zones.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s change the default zone to `home`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'We can establish a `public` zone as the default and assign a `home` zone to
    our local network:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: This configuration allows us to publish services to the local network only,
    which is defined as `192.168.122.0/24` and assigned to the `internal` zone. Any
    service or port that's assigned to the `internal` zone from now on will be only
    accessible if it's accessed from an IP address in the internal network. We avoid
    allowing access to these services from other networks.
  prefs: []
  type: TYPE_NORMAL
- en: Also, to enable services to be accessed from any other network, we only need
    to assign them to the `public` zone.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s review the main options that are used and a couple more that could be
    useful:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--get-zones`: Lists the zones that have been configured in the system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--get-default-zone`: Shows the zone that''s configured by default.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--set-default-zone=<zone>`: Sets the default zone. This is applied to the
    running and permanent configuration'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--get-active-zones`: Shows the zones being used what networks/interfaces they
    apply to.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--zone=<zone>`: Used to specify a zone for another option.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--permanent`: Used to apply the changes to the saved configuration. When you
    use this option, the changes will not be applied to the running configuration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--reload`: Loads the saved configuration as running.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--add-source=<network>`: Adds a source network, in CIDR format, to a specified
    zone. The default zone is used if one hasn''t been specified. Changes are applied
    to the running config; use `--permanent` to save them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--remove-source=<network>`: Removes a source network, in CIDR format, to a
    specified zone. The default zone is used if one hasn''t been specified. Changes
    are applied to the running config; use `--permanent` to save them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--add-interface=<interface>`: Routes traffic from an interface to a zone.
    The default zone is used if one hasn''t been specified.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--change-interface=<interface>`: Changes the traffic that''s being routed
    to an interface to a zone. The default zone used if one hasn''t been specified.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Although this list of options may be very helpful, the full list of options
    is available on the manual page for `firewall-cmd`. You should review this page
    as you will be using it often when you're reconfiguring your firewall options.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: To view the `firewall-cmd` manual page, simply run `man firewall-cmd`.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we are aware on what zones are and how they are selected, let's learn
    how to manage services and ports.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling and managing services and ports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As we mentioned in the previous section, a **firewalld service** is a port
    or group of ports that are configured together for a specific system service (hence
    the name) to work properly. There are a set of services that are enabled by default
    in one or many of the available **firewalld zones**. Let''s start by reviewing
    them:'
  prefs: []
  type: TYPE_NORMAL
- en: '`22` and is of the `TCP` type.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`224.0.0.251` (IPv4) or `ff02::fb` (IPv6), on port `5353`, and is of the `UDP`
    type.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`631` and uses the `UDP` protocol.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`137` and `138` and is of the `UDP` type.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fe80::/64`, its port is `546`, and it''s of the `UDP` type.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`9090` and it''s of the `TCP` type.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see, a firewalld service can specify more than one port, a target
    address, and even a target network.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s take a look at the services that have been configured in our firewall:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Please note that when you're not establishing a zone, the services that are
    displayed are the related to the default zone – in this case, `public`. However,
    consider that we have configured more than one zone.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s install a web server – in this case, the Apache `httpd` server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s enable and start the `httpd` service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s check that the service is listening on all the interfaces:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Optionally, we can check if the port is open by using an external machine (if
    we have one):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we can enable the `http` service on the firewall:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'With that, the service has been enabled and the port is open. We can verify
    this from an external machine, like so (this is optional):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'We can see the port `80` open now. We can also retrieve the main page from
    the web server and show the first line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: The definitions of the services in firewalld are kept in independent files in
    the `/usr/lib/firewalld/services` directory. If you need to out the details of
    a service, you can go there and inspect the file and its definition.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s try to remove the service from the public network, since this will
    be an internal service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s assume we didn''t have the service definition and we still wanted to
    open port `80` on `TCP` in the `public` interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'We can review the ports and services in one go, like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we can remove the port:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'With this, we know how to add and remove services and ports to/from a firewall
    and check their statuses. Let''s review the options that we can use for `firewall-cmd`
    to do so:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--zone=<zone>`: Used to specify a zone. When no zone is specified, the default
    one is used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--list-services`: Displays a list of services for the specified zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--add-service`: Adds a service to the specified zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--remove-service`: Removes a service from the specified zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--list-ports`: Lists the open ports in the specified zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--add-port`: Adds a port to the specified zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--remove-port`: Removes a port from the specified zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--list-all`: Lists the ports, services and all configuration items associated
    with the specified zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--permanent`: Rules will be applied to the saved configuration instead of
    the running one.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--reload`: Reloads the rules from the saved configuration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we know how to assign services and ports to different zones in the
    firewall, let's take a look at how they are defined.
  prefs: []
  type: TYPE_NORMAL
- en: Creating and using service definitions for firewalld
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Service definitions for firewalld are stored in the `/usr/lib/firewalld/services`
    directory. Let''s take a look at a simple service, such as the `ssh` service stored
    in the `ssh.xml` file, which has the following content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, we can see that we only need an XML file with three sections to describe
    a basic service:'
  prefs: []
  type: TYPE_NORMAL
- en: '`short`: The short name for the service'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`description`: A long description of what the service does'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`port`: The port to be opened for this service'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s say we want to install an Oracle database in our server. We must have
    the `1521` port open, and it must be of the `TCP` type. Let''s create the `/etc/firewalld/services/oracledb.xml`
    file with the following content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'We can enable it by using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, it''s ready to be used in the running configuration. We can add it to
    the permanent configuration like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: It would be infrequent to have to open more complex services. In any case, the
    manual page that describes how to create firewalld services is `firewalld.service`
    and can be opened by running `man firewalld.service`.
  prefs: []
  type: TYPE_NORMAL
- en: With this, we have an easy way to standardize the services to be opened in the
    firewalls of our systems. We can includes these files in our configuration repositories
    so that they can be shared with the whole team.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we can create a service, let's take a look at an easier way to configure
    the firewall in RHEL; that is, using the web interface.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring firewalld with the web interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To use the RHEL web administrative interface of RHEL8, we must install it.
    The package and service running it are both called `cockpit`. We can install it
    by running the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s enable it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Cockpit uses a clever trick to save resources. The interface is stopped but
    a socket is enabled to listen on port `9090`. When it receives a connection, cockpit
    is started. This way, it will only consume resources in your machine when it is
    in use.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's learn how to add the `DNS` service to the `public` zone.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s access cockpit by pointing a browser to the IP of the machine and port
    `9090` – in this case, `https://192.168.122.8:9090`. Let''s log in as `root` with
    the password that was provided during installation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.2 – Cockpit login screen'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16799_09_002.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.2 – Cockpit login screen
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we can access the cockpit dashboard, which contains information about
    the system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.3 – Cockpit initial screen and dashboard'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16799_09_003.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.3 – Cockpit initial screen and dashboard
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s go to **Networking** and then click on **Firewall**, as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.4 – Cockpit accessing the firewall configuration'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16799_09_004.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.4 – Cockpit accessing the firewall configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, we can click on **Add Services** in the **public zone** section
    to modify it and add one more service:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.5 – Cockpit firewall configuration interface'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16799_09_005.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.5 – Cockpit firewall configuration interface
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps to add the **dns** service to the **public zone** section of the
    firewall are simple:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Services**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Filter the services by typing `dns` into it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **dns** service with **TCP:53** and **UDP:53**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on **Add Services**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.6 – Cockpit firewall – adding a service to a public zone'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16799_09_006.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.6 – Cockpit firewall – adding a service to a public zone
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you''ve done this, the service will be added to the running and permanent
    configurations. It will be displayed on the **public zone** section of cockpit:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.7 – Cockpit firewall – the result of a service DNS being added to
    a public zone'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16799_09_007.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.7 – Cockpit firewall – the result of a service DNS being added to a
    public zone
  prefs: []
  type: TYPE_NORMAL
- en: With this, we know how to make modifications to the firewall in RHEL8 using
    a web interface. We'll leave it as an exercise for you to remove and redo the
    configuration we did with the command line at the beginning of this chapter, but
    with the web interface instead.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Security is a very important part of system administration. Disabling the security
    measures on a system just because it's in an isolated network goes against the
    defense in depth principle, so this is heavily discouraged.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we saw how simple and easy it is to configure a firewall using
    firewalld, in RHEL8, thus providing us with another tool to manage, filter, and
    secure the network connections in our system. We also worked with cockpit, a web
    administration tool that makes this task more visual and easier to perform.
  prefs: []
  type: TYPE_NORMAL
- en: We can now take control of the network connectivity of our systems, provide
    access to the services we want to provide, and add a layer of security to them.
    We also know how to manage zones and how to use them, depending on our system's
    use case. We are now ready to define our own custom services so that we can always
    filter network connectivity for them. We can now also deploy more secure systems
    by using the firewall included in RHEL.
  prefs: []
  type: TYPE_NORMAL
- en: Now, we are ready to learn more about security in RHEL, which is what we will
    do in the next chapter. Remember, security is a team sport, and the system administrators
    are key.
  prefs: []
  type: TYPE_NORMAL
