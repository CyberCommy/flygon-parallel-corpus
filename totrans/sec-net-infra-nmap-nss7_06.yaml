- en: Report Analysis and Confirmation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Nmap outputs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding Nessus outputs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to confirm Nessus vulnerabilities using Nmap and other tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will be going through various recipes regarding the reports
    that can be generated using Nmap and Nessus. We will also look at a recipe on
    using Nmap to confirm vulnerabilities that are reported by Nessus. It is always
    required to confirm the vulnerabilities reported by a scanner, as there are chances
    of the scanner reporting false positive vulnerabilities. Confirming these vulnerabilities
    will allow the administrative team to focus on the confirmed vulnerabilities instead
    of wasting resources on false positives that have been reported. Both Nmap and
    Nessus generate different formats of reports, allowing the user to make a choice
    as per their requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Nmap outputs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nmap displays results based on the responses it receives from the remote hosts.
    The more hosts that are scanned, the more complex the results are that are printed
    on the screen. Analyzing these results when printed in terminal or Command Prompt
    becomes impossible when the number of hosts increases. In order to solve this
    problem, Nmap supports various reporting formats which can be used as per the
    user's requirements. One of the simplest ways to store Nmap's output is to use
    a  `>>` operator followed by a text file name such as `output.txt`. This will
    allow Nmap to forward all the contents to that text file. Even the content of
    a text file becomes a nightmare to analyze for 10+ hosts. Nmap also gives a lot
    of verbose and debug information, along with a port scan, which can complicate
    this process even more. The operating system's detection and fingerprinting adds
    a lot more junk to this data.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following command is used to run a SYN scan on the IP address `192.168.75.128`
    and store the output displayed to the `output.txt` file. This file can be found
    in the `C:\Users\admin` folder since Command Prompt is running in the same folder.
    Furthermore, you can store this file anywhere by just mentioning the absolute
    path of the file in double quotes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s see how the result can be copied to a text file by going through the
    following screenshots:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3a70314e-1c1a-4a40-8cb7-5db9ef5ce80a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Navigate to the Nmap installation folder and locate the `output.txt` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/da88a502-c8df-4724-8f24-a18522e6bfb7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can open this file using any text editor. I personally recommend Notepad++
    as it allows you to perform complex analysis on text files and displays them in
    a segregated manner:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5d234020-0813-4438-b954-9d5f231dc44a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Nmap allows a user to define the output format using command-line flags. The
    following lists explains the different flags that are allowed by Nmap:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Interactive output**: This is the type of output that is directly displayed
    in terminal or Command Prompt. This does not require any special Command Prompt
    argument or flag as this is the basic and default output format. This result is
    not stored or saved in any location; one can only access this output as long as
    Command Prompt or Terminal is not closed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Normal output** (`-oN`): This output allows the user to save the interact
    output into a file selected by the user. This reporting option further trims down
    the output by omitting unnecessary verbose data from the interactive output scan
    based on the level of verbosity chosen by the user. This will allow the user to
    have a better look at the port scan results by omitting data that is not required.
    If a user needs performance data such as scan time and alerts, this is not the
    right format to choose. Furthermore, you can specify the file folder location
    by mentioning the absolute path or by launching Command Prompt with the same location
    as its path.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**XML output** (`-oX`): This type of output is required to upload Nmap data
    to various tools and websites. Once this format is uploaded to any tool, it is
    then parsed by a parser so that we can understand the various data types in the
    output and segregate the data accordingly. There are many XML parses available
    as open source which are custom-built by various tool OEMs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Grepable output** (`-oG`): This format allows users to perform simple operations
    such as `grep`, `awk`, `cut`, and `diff` on the output that''s generated. The
    format follows a structure of creating a single-line output for every host with
    appropriate delimiters so that the user can use simple existing tools in the OS
    to separate and analyse the results. The Notepad++ utility is one such example
    that allows delimiter-based separation, which can be used to create a more meaningful
    report.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Script kiddie** (`-oS`): This format prints the output in the script.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Save in all formats** (`-oA`): This flag allows the user to generate output
    in the three formats mentioned previously (`-oN`, `-oX`, and `–oG`). Instead of
    performing three different scans to obtain the output formats, one can simply
    use this flag to obtain all the three reported formats and save it in a file at
    a provided location.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Nmap also provides various other details as part of the scan results, some
    of which can be controlled by the verbosity options that are available. The following
    are the few extra pieces of data that are produced by the verbose option:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scan completion time estimates**: Nmap also provides performance data such
    as scan completion time in minutes to seconds, which allows the user to understand
    the time taken for Nmap to perform the scan. Nmap updates the user between intervals
    on the time taken and the task being performed, along with the percentage of completion.
    This allows the user to monitor network scans for larger networks and improve
    the script''s execution time occasionally.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open ports**: In a normal scan without verbose enabled, all of the open ports
    are displayed at the end of the scans. Instead, if verbose is enabled, each open
    port is displayed as soon as it is detected.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Additional warnings**: Nmap also displays any warnings or errors that have
    occurred during the scan, whether the port scan is taking additional time, or
    any variance from normal behavior of the scan. This will allow the user to check
    for any network restrictions and act accordingly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OS detection information**: OS detection in Nmap is performed using signature
    detection based on TCP ISN and IP ID prediction. If verbose is enabled and the
    OS detection option is selected, Nmap displays the prediction of these OSes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Host status**: Nmap also prints the status of the host as detected during
    runtime, stating whether the host is live or dead:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/e644259a-ed97-4e8c-bbde-944690164a8f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Some of the options that can be used along with the verbose ones to control
    the data displayed in the output are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Debug output**: Debug mode is an additional flag option provided by Nmap
    to help the user with further data to understand the port scanning process at
    the packet level. This can be enabled by appending the verbosity syntax with `–d`.
    Furthermore, you can also set the debug level you want to enable, which ranges
    up to 9, by appending `-d9` to the verbose syntax. This is the highest level of
    debugging and provides a lot of technical data about the port scan being performed:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/40095613-b813-43df-81b0-ac88d46b5078.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Packet trace**: This option allows the user to obtain the track of each packet
    that Nmap is sending. This will allow the user to gain a detailed understanding
    of the scan. This can be configured by appending `--packet-trace` to the verbose
    syntax:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/2d7612e5-ee64-431e-a436-cf8e1792cee2.png)'
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to complete this activity, you will have to satisfy the following
    prerequisites on your machine:'
  prefs: []
  type: TYPE_NORMAL
- en: You must have Nmap installed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You must have network access to the hosts on which the scans are to be performed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order to install Nmap, you can follow the instructions provided in [Chapter
    2](888a67bc-261d-466c-bd68-e1f498ac4213.xhtml), *Understanding Network Scanning
    Tools*. This will allow you to download a compatible version of Nmap and install
    all the required plugins. In order to check whether your machine has Nmap installed,
    open Command Prompt and type `Nmap`. If Nmap is installed, you will see a screen
    similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c7b49d51-14eb-4652-80bd-3dd2c34acfcb.png)'
  prefs: []
  type: TYPE_IMG
- en: If you do not see the preceding screen, retry the same step by moving the Command
    Prompt control into the folder where Nmap is installed (`C:\Program Files\Nmap`).
    If you do not see the screen after doing this, remove and reinstall Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: To populate the open ports on hosts where the scan is going to be performed,
    you are required to have network-level access to that host. A simple way to check
    whether you have access to the host is through ICMP by sending ping packets to
    the host. But this method only works if ICMP and ping are enabled in that network.
    In cases where ICMP is disabled, live host detection techniques vary. We will
    look at this in further sections of this book.
  prefs: []
  type: TYPE_NORMAL
- en: In order to obtain the preceding output, we need to install a virtual machine.
    In order to run a virtual machine, I would recommend using VMware's 30-day trial
    version, which can be downloaded and installed from [https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html](https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'For the test system, readers can download Metasploitable (a vulnerable virtual
    machine by Rapid 7) from [https://information.rapid7.com/download-metasploitable-2017.html](https://information.rapid7.com/download-metasploitable-2017.html).
    Perform the following steps to open Metasploitable. This provides various components
    such as the operating system, database, and a vulnerable application, which will
    help us test the recipes in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Unzip the downloaded Metasploitable package:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3386810f-b74e-4cb6-bddb-553bc6cf9265.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Open the `.vmx` file using the installed VMware Workstation or VMware Player:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1e6aa6bb-35a6-4bf4-994f-7ac81c473ac0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Log in using `msfadmin`/`msfadmin` as the username and password:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5f5b0990-5c5c-4b7e-b877-fa7234a9334b.png)'
  prefs: []
  type: TYPE_IMG
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open Nmap in Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the following syntax in Command Prompt to obtain the interactive output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/c768eace-d3cd-4c46-89f9-56f2160a8fec.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the following syntax in Command Prompt to obtain the normal output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/4b1aeb28-33b2-4591-ae84-c90e6b75f721.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can navigate to the `system32` folder to locate the output file and open
    it with text editing tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/525cbe28-55c1-4c60-a635-6d337cab2861.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the following syntax in Command Prompt to obtain the XML output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/0b3bc66a-3613-406d-a08e-2f2abe1e2fc3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can navigate to the `system32` folder to locate the output file and open
    it with text editing tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/448f4fb1-c55b-4dda-932a-2a5c7e097cb0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the following syntax in Command Prompt to obtain the script kiddie output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/a6ea532e-8151-4e14-b15c-eb2952e2f9a9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can navigate to the `system32` folder to locate the output file and open
    it with text editing tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/92de9919-2d00-4089-b78f-ec0fed19577a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the following syntax in Command Prompt to obtain the output in grepable
    format:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/77fc0b87-e02c-461a-993a-aef195d25014.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can navigate to the `Windows` folder to locate the output file and open
    it with text editing tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/54f8693a-27ee-48d1-ac09-359550f61f45.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the following syntax in Command Prompt to obtain the output in all the
    formats with verbose enabled:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/ad2aa4cf-ee5f-47a4-9779-e373d5794928.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can navigate to the `Windows` folder to locate the output file and open
    it with text editing tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/11e0bd24-44d9-4942-827c-abba222680ce.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These different formats help the user to utilize the reports for multiple operations
    and analyse the reports in different ways. The port scan results represent a critical
    phase of reconnaissance, which allows the users to further plan the vulnerability
    scan and detection activities. These reports are then uploaded to different tools
    and sites for further analysis and scanning. It is also worth mentioning that
    Nmap is a background utility for various vulnerability scanning software. Once
    these reports are generated, these tools use the same to perform further actions.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Nessus outputs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Nessus is more of an enterprise-aligned tool. The reporting is more comprehensive
    and user-friendly. Nessus provides document and structure-based reporting. These
    reports can be exported by selecting the format required in the Export drop-down
    in the top-right corner of the Scans result page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6ec6bfc4-c127-49e1-b0ce-520a3a6d8894.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, we will go over the reporting formats that are supported by Nessus.
  prefs: []
  type: TYPE_NORMAL
- en: Nessus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This format allows the user to import the results in `.nessus` format. This
    is a format that can only be parsed using Nessus. It allows users to download
    the scan results and later import the same into Nessus for any type of analysis
    to be performed.
  prefs: []
  type: TYPE_NORMAL
- en: HTML
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Nessus provides a good illustration of the scan reports in a HTML file format
    which is standalone and can be opened in any browser to view the results. This
    report also allows for the navigation between different sections so that users
    can easily read huge reports. These HTML reports can also be customized to download
    the following reports:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Executive Summary report:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/2ea39a0e-64eb-4ba3-a1c6-5a50e7e63b4f.png)'
  prefs: []
  type: TYPE_IMG
- en: Custom report with vulnerabilities and remediations grouped by host
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom report with vulnerabilities and remediations grouped by plugin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A HTML report contains the following sections:'
  prefs: []
  type: TYPE_NORMAL
- en: '**TABLE OF CONTENTS**: This lists the required navigation pane for vulnerabilities
    by host and recommendations. These contain further details in complex reports
    such as compliance audit:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/4182584a-9542-4be6-bec4-0b847d74b05b.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Vulnerabilities by host**: This section consists of the actual vulnerabilities
    by host. This follows the format of reporting all of the vulnerabilities per host
    and then moving on to the next host. This further starts with a simple summary
    of the number of vulnerabilities and their risk ratings per host. This includes **Scan
    Information** such as **Start time** and **End time**, along with **Host Information**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/4661874c-07ed-4079-9c40-37e51d1b2df4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Each vulnerability consists of the following sections, the details of which
    have been described in [Chapter 5](866b6b7b-03d2-43e4-95dd-d4f8b893fa9b.xhtml),
    *Configuration Audits*:'
  prefs: []
  type: TYPE_NORMAL
- en: Plugin ID
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Synopsis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Risk factor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Plugin information and output:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/9ba73cb0-1d4f-4829-b41a-0dd13abb6bfc.png)'
  prefs: []
  type: TYPE_IMG
- en: CSV
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'CSV is a simple format used to store data in tables, which can later be imported
    to databases and applications such as Excel. This allows the user to export the
    report into a `.csv` file, which can be opened using tools such as Excel. The
    following is a screenshot of a sample CSV report:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0c10d923-52cc-4b8a-bd22-c2d20318cdc6.png)'
  prefs: []
  type: TYPE_IMG
- en: It holds similar sections to the ones mentioned for the HTML format.
  prefs: []
  type: TYPE_NORMAL
- en: Nessus DB
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This is a custom database-like format proprietary to Nessus. It is an encrypted
    format that''s used to store the scan''s details:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a27da4a1-07bf-4e6f-9cd5-6b7780fb145c.png)'
  prefs: []
  type: TYPE_IMG
- en: It requires a password to be created and used every time it is imported into
    Nessus.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to perform this activity, you will have to satisfy the following prerequisites
    on your machine:'
  prefs: []
  type: TYPE_NORMAL
- en: You must have Nessus installed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You must have network access to the hosts on which the scans are to be performed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order to install Nesus, you can follow the instructions provided in [Chapter
    2](888a67bc-261d-466c-bd68-e1f498ac4213.xhtml), *Understanding Network Scanning
    Tools*. This will allow you to download a compatible version of Nessus and install
    all the required plugins. To check whether your machine has Nessus installed,
    open the search bar and search for `Nessus Web Client`. Once found and clicked,
    this will be opened in the default browser window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/296b1bae-d6e6-4ecc-bb14-9f115a61fc06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you are sure that Nessus has been installed correctly, you can use the `https://localhost:8834`
    URL directly from your browser to open the Nessus Web Client. If you are unable
    to locate the **Nessus Web Client**, you should remove and reinstall Nessus. For
    the removal of Nessus and installation instructions, refer to [Chapter 2](888a67bc-261d-466c-bd68-e1f498ac4213.xhtml),
    *Understanding Network Scanning Tools*. If you have located the **Nessus Web Client** and
    are unable to open it in the browser window, you need to check whether the Nessus
    service is running in the Windows Services utility:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e16bb391-a138-42bd-96f3-51d9238aec2e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can further start and stop Nessus by using the Services utility as per
    your requirements. In order to further confirm the installation using the command-line
    interface, you can navigate to the installation directory to see and access Nessus''
    command-line utilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dbeed0a4-3cb3-4d5a-a27f-b6a5369011a9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It is always recommended to have administrator-level or root-level credentials
    to provide the scanner with access to all the system files. This will allow the
    scanner to perform a deeper scan and populate better results compared to a non-credentialed
    scan, as without proper privileges, the system will not have access to all the
    files and folders. The policy compliance module is only available in the paid
    versions of Nessus, such as Nessus Professional or Nessus Manager. For this, you
    will have to purchase an activation key from tenable and update it in the settings
    page, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/90147f33-b14b-44d3-8224-3510ab2325b5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the edit button to open a window and enter a new activation code,
    which you will have purchased from tenable:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1034f750-69d3-42e0-beb1-4a8e7252fe81.png)'
  prefs: []
  type: TYPE_IMG
- en: In order to test the scans, we need to install a virtual machine. In order to
    run a virtual machine, I would recommend using VMware's 30-day trial version,
    which can be downloaded and installed from [https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html](https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html).
  prefs: []
  type: TYPE_NORMAL
- en: For the test system, readers can download Metasploitable by referring to the
    *Getting ready* section of the previous recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the Nessus web client.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in to the Nessus client with the user that you created during installation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Perform a simple network scan on the virtual machine and open the scan results:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/87245a45-d5e8-4f48-9590-1ddd53a82d56.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Navigate to the export functionality and select the Nessus format to download
    the `.nessus` version of the report:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/adff5c34-2e6e-46ee-be70-55c8fa512397.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Navigate to the export functionality and select the Nessus format to download
    the HTML version of the report by selecting the required options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3e53f918-4016-4844-ad6c-47b54201a12a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Navigate to the export functionality and select the Nessus format to download
    the CSV version of the report:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f49b7a21-6f82-4808-a6a7-1f8cb89f809b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Navigate to the export functionality and select the Nessus format to download
    the Nessus DB version of the report:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/02a7a670-0038-44ab-ae4c-447a65b21761.png)'
  prefs: []
  type: TYPE_IMG
- en: Enter a desired password and click on **Export** to download the Nessus DB file
    with the extension `.db`.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The supported report formats by Nessus allow a user to present the report in
    multiple ways. If the user wants to store the scan results in a secure manner,
    they can use the DB format, which is encrypted. If the user wants to share the
    report directly, they can use the HTML format of the report. For further analysis,
    they can use the CSV format to import the report results into tools or software.
    If the user requires to share scan results with other administrators, they can
    use the `.nessus` format, where the administrator can import the file into their
    own Nessus and perform further analysis.
  prefs: []
  type: TYPE_NORMAL
- en: For a CSV report, if there are multiple CSV reports and a user requires to merge
    all the reports in Windows, they can open Command Prompt from the folder where
    all the CSV files are located and use the `copy *.csv <name of the new file>.csv` command,
    thereby obtaining a merged CSV single file. Further filtering and removal of duplicates
    with sorting allows you to create a linear report.
  prefs: []
  type: TYPE_NORMAL
- en: How to confirm Nessus vulnerabilities using Nmap and other tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most of the vulnerabilities reported by Nessus are signature and value-based,
    which Nessus makes a decision on based on the code present in the plugins. It
    is required to confirm these vulnerabilities using manual techniques such as Nmap
    scripts or port-specific open source tools. This will allow the administration
    team to put their efforts into the mitigation of the actual vulnerabilities instead
    of false positives. Also, sometimes, Nessus reports vulnerabilities for which
    workarounds have already been applied as Nessus only checks with respect to the
    conditions mentioned in the plugin and cannot recognize any other deviations.
    In this recipe, we will look at sets to verify multiple vulnerabilities reported
    by Nessus using Nmap and other open source tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to create this recipe, we will perform a demo basic network scan on
    Metasploitable 2''s vulnerable virtual machine (look at the *Getting ready* section
    in order to download this). Once the scan is complete, a glance at the results
    will display a total of seven critical, five high, 18 medium, and seven low vulnerabilities.
    Out of the vulnerabilities reported by Nessus, we will try to manually confirm
    the following vulnerabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bind shell backdoor detection**: This is a critical-risk vulnerability that''s
    reported by Nessus. This vulnerability points out that a port on the remote host
    is allowing any user on the network to run a shell with root privileges on the
    vulnerable virtual machine. We will use the Windows Telnet utility to confirm
    this vulnerability:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/82e11413-d8ca-4787-978e-13de2a841d1d.png)'
  prefs: []
  type: TYPE_IMG
- en: '**SSL version 2 and 3 protocol detection**: This is a high-risk vulnerability
    that''s reported by Nessus. This vulnerability pertains to the usage of a legacy
    SSL protocol, such as SSL version 2 and version 3, which are known to cause multiple
    vulnerabilities. We will use Nmap script to confirm this vulnerability:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/e4808bc8-293b-4b13-b41c-acbad7d1520e.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Apache Tomcat default files**: This is a medium-risk vulnerability that''s
    reported by Nessus. This vulnerability mentions various default files which are
    created upon the installation of Apache tools. These are still available for any
    user on the network without authentication. We will use a web browser (Chrome,
    in this case) to confirm this vulnerability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to create a setup for this, you need to follow and perform all the
    steps mentioned in the *Getting ready* section of the previous recipes, *Understanding
    Nmap outputs* and *Understanding Nessus outputs*.
  prefs: []
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To confirm bind shell backdoor detection, open Command Prompt in Windows and
    type the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/6bb22868-f00a-41b7-ae86-9a47a3c8497b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Upon execution, the user directly gets logged in to the remote machine without
    providing any authentication:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fe9dd893-7b9f-4e4b-91d2-6c5bab9ddcea.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To confirm the privilege of the user, we will use the standard Linux command
    `id` to confirm the vulnerability:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fb2a317f-7068-4b5c-a47d-8f64200a416c.png)'
  prefs: []
  type: TYPE_IMG
- en: This command displays the UID and GID as `0`, which represents a root user,
    and so we can confirm that the vulnerability is critical as it allows any remote
    user to log in to the machine without any authentication. This means that the
    vulnerability can be confirmed.
  prefs: []
  type: TYPE_NORMAL
- en: For SSL v2 and SSL v3, we can identify the version running by using the Poodle
    confirmation script by Nmap, as only SSL v3 is vulnerable to Poodle. Open Nmap
    in  Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the following command to identify whether the remote server is vulnerable
    to an SSL Poodle attack:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '*![](img/3cea245b-5eaf-48af-ba88-86e03210f383.png) *'
  prefs: []
  type: TYPE_NORMAL
- en: 'As Nmap has not displayed any results, let''s check for the `ssl-enum-ciphers`
    script:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ddb99f1b-745d-429d-8b82-04b61288fbee.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Even the `enum-ciphers` script has not returned any result, so we can conclude
    that Nmap was unable to negotiate with the port using SSL ciphers. Hence, we can
    mark the vulnerability as a false positive. We can also confirm the same by using
    Telnet on port `25` if a similar response is received. This means that port `25`
    is running on a non-SSL clear text protocol and the plugin has reported a false
    positive for the same:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/74571dd0-0cec-4a24-942d-705134f4a20f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To confirm the Apache default files, access the URLs mentioned by Nessus in
    the vulnerability output section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8ea41469-d1a4-4a64-8c31-61eebd51406c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Open the browser and type `http://192.168.103.129:8180/tomcat-docs/index.html`
    into the address bar:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/47d46f0b-1571-4202-8fcf-4d4c71395a69.png)'
  prefs: []
  type: TYPE_IMG
- en: This displays the default documentation folder, confirming the existence of
    the default files on the server. This shows that the vulnerability can be confirmed.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These vulnerabilities can be identified based on their risk and then confirmed,
    allowing the analyst to prioritize their efforts on the vulnerability they are
    trying to confirm. Identifying these false positives requires effort as you have
    to actually exploit the vulnerability and check whether it is feasible. In order
    to do this, an analyst must decide to what extent they are willing to expend effort
    in order to fix the vulnerability. For example, if the vulnerability is that port
    `1406` with a SQL service running is open to everyone in the network, it is up
    to the analyst to decide whether to just check for the open port or try logging
    in to the SQL service using a default service account or a weak password.
  prefs: []
  type: TYPE_NORMAL
