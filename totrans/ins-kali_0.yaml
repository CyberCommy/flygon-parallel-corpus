- en: Chapter 1. Instant Kali Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to *Instant Kali Linux*. This book is written to provide you with all
    the information that you need to set up and get started with Kali Linux. You will
    learn the basics of Kali, its directory structure, how to work with its popular
    tools, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'The document contains the following sections:'
  prefs: []
  type: TYPE_NORMAL
- en: '*So what is Kali Linux?* introduces us to Kali, a Linux-based operating system
    specifically designed for penetration testing and computer forensics. It is a
    collection of a few open source software that are used by professionals and experts
    while dealing with real-life pen-testing scenarios.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Installation* helps us to learn how to download and install Kali Linux with
    minimal fuss and how to set up our own pen-testing lab.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Quick start – getting your tools right* shows us how to perform different
    tasks using the different software tools that are available in Kali. We will also
    cover some topics that are essential to start the journey of pen-testing using
    Kali Linux.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Top 5 features you''ll want to know about* will help you learn how to perform
    different tasks with the most important features of Kali Linux. By the end of
    this section, you will be able to use Kali''s tools to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Scanning and gathering information using Nmap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Breaking wireless networks using Aircrack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pen-testing web applications using Burp Suite
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting started with the Metasploit Exploitation Framework
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing automated SQL injection attacks using sqlmap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing digital forensics using Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*People and places you should get to know* provides you with many useful links
    to project pages and forums, as well as a number of helpful articles, tutorials,
    and blogs. It also gives links to the Twitter feeds of Kali Linux super contributors
    and open source hackers.'
  prefs: []
  type: TYPE_NORMAL
- en: So, what is Kali Linux?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we get into Kali Linux, we need to understand what penetration testing
    is. **Penetration testing** or **pen-testing** is the method of evaluating the
    security implementations of a computer system or a network of computers. The idea
    behind penetration testing is to target the computer(s) with a specific set of
    attack vectors to figure out whether it is able to withstand those attacks without
    malfunctioning. The different attack vectors in pen-testing can include identifying
    and exploiting the known vulnerabilities in various application software and operating
    systems, assessing the strength of connecting networks, providing assessment reports,
    and so on. Penetration testing has its own field of study within computer science.
  prefs: []
  type: TYPE_NORMAL
- en: 'When it comes to penetration testing, Kali Linux is the most preferred operating
    system for professionals. Kali is an advanced Linux-based operating system, a
    collection of open source software that is used to perform different tasks within
    penetration testing, computer forensics, and security audits. Some of its key
    features include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux contains over 300 penetration testing and assessment tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali supports a variety of additional hardware such as wireless receivers and
    PCI hardware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It provides a full-fledged development environment in C, Python, and Ruby
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is customizable and open source
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali comes as a downloadable ISO that can either be used as a live or a standalone
    operating system. Let us move ahead and see how we can set up your penetration
    testing lab using Kali.
  prefs: []
  type: TYPE_NORMAL
- en: Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To begin the installation, we need to download Kali Linux. Kali Linux is available
    in the following formats:'
  prefs: []
  type: TYPE_NORMAL
- en: ISO files based on system architecture (x86 and x64)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware images
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ARM images
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali can be either installed as a dual boot with your existing operating system,
    or it can be set up as a virtual machine. Let us begin the process of dual boot
    installation first. In three easy steps, you can install Kali Linux on your system
    as a dual boot option.
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 – download and boot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before you install Kali, you will need to check whether you have all of the
    following required elements:'
  prefs: []
  type: TYPE_NORMAL
- en: Minimum 12 GB of hardware space
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At least 1 GB RAM for optimum performance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bootable device such as an optical drive or USB
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you have checked the requirements, you can download a bootable ISO from
    its official website, [http://www.kali.org/downloads](http://www.kali.org/downloads).
  prefs: []
  type: TYPE_NORMAL
- en: You will optionally be asked to register with your name and e-mail. The download
    page will have a few options to select from, such as the window manager and system
    architecture. Choose the values as per your system requirements (architecture
    and so on).
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 1 – download and boot](img/5664OT_01_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the download is complete, we will have to burn it to a disk or USB. The
    disk/USB should be made bootable so that the system can load the setup from it.
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 – setting the dual boot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once our bootable media are ready, we are set to restart the system and boot
    from our disk/USB. We will be greeted with a screen similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 2 – setting the dual boot](img/5664OT_01_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We will begin by selecting the **Live boot** option. The operating system will
    start loading and, within a few minutes, we will have our first look at the Kali
    desktop.
  prefs: []
  type: TYPE_NORMAL
- en: Once the desktop is loaded, navigate to **Applications** | **System Tools**
    | **Administration** | **GParted Partition editor**.
  prefs: []
  type: TYPE_NORMAL
- en: This will present a GUI representation of the partition of your current operating
    system. Carefully resize it to leave enough space (12 GB minimum) for the Kali
    installation.
  prefs: []
  type: TYPE_NORMAL
- en: Once the partition has been resized on the hard disk, ensure you select the
    **Apply All Operations** option. Exit GParted and reboot Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Step 3 – beginning with the installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once we are back to the home screen, select **Graphical install**. The initial
    few screens of the installation will ask you for language selection, location
    selection, keyboard, and so on. We need to be careful while setting up the root
    password. The default root password for Kali is `toor`.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Dual boot only**'
  prefs: []
  type: TYPE_NORMAL
- en: Once we are through with this, the next important step is selecting the partition
    to install the operating system to. We will have to use the same unallocated space
    that we created moments ago using GParted.
  prefs: []
  type: TYPE_NORMAL
- en: Once the partition is selected, Kali will take over and install the operating
    system. The process will take some time to complete. After the installation is
    complete, the system startup screen will now give you the option to boot either
    in Kali Linux or another operating system, which is called a (dual boot) configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Kali as a virtual machine
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Setting up Kali over virtualization software is easy. Kali officially provides
    a VMware image that can be downloaded from its official website ([http://www.kali.org/downloads](http://www.kali.org/downloads)).
    It can be imported inside a VMware player, when it starts working.
  prefs: []
  type: TYPE_NORMAL
- en: To set up Kali Linux using Virtual Box, we will need the same ISO file downloaded
    earlier and a recent setup of the virtual box.
  prefs: []
  type: TYPE_NORMAL
- en: To begin installing, create a new virtual machine and set up the required hard
    disk space and RAM.
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Kali as a virtual machine](img/5664OT_01_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the machine is created, start it. The first start will prompt us to select
    a disk. Select Kali ISO and start the installation. The remaining steps are the
    same as the dual boot installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the installation is complete and desktop is loaded, we can install the
    VirtualBox guest additions. Follow these steps to install the guest additions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy the files to the following location:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Set the file permission as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Updating Kali Linux
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Once we are through with the installation process, the final step is to update
    the OS with the latest patches and releases. This will ensure that we are working
    with the latest package. To update the operating system, launch the terminal and
    pass the following command to it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: And that's it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By this point, you should have a working installation of Kali Linux and are
    free to play around and discover more about it.
  prefs: []
  type: TYPE_NORMAL
- en: Quick start – getting your tools right
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let us dive deep into the world of Kali Linux and understand the basic functionalities
    of some of its most popular tools. We will begin by looking at the directory structure
    used by Kali.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the memory layout
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Kali follows a directory structure that is similar to Ubuntu-based Linux. Some
    of the important locations to look for include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`/etc/`: Contains configuration files of the installed tools'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/opt/`: Contains Metasploit and its relevant modules'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/sys/`: Contains configuration files of external hardware and interfaces'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/root/`: It is the root user directory'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/lib/`: Contains libraries dependent on the operating system![Understanding
    the memory layout](img/5664OT_02_01.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Most of the tools and software used for penetration testing and assessment can
    be found from the **Applications** menu on the desktop. The list is logically
    arranged based on the usability of the tools. To access them, browse to **Applications**
    | **Kali Linux**.
  prefs: []
  type: TYPE_NORMAL
- en: Information gathering and sniffing with Kali Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Kali Linux contains an exclusive set of tools that can help in the process of
    information gathering. Nmap (the network port mapper), DNSmap, and Trace are some
    important tools included. Let us cover some of the tools from specific categories.
  prefs: []
  type: TYPE_NORMAL
- en: DNSmap analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Domain Name System** (**DNS**) is a hierarchically distributed naming system
    of servers/resources connected to the Internet. The domain names are used to access
    that particular service. For example, [www.packtpub.com](http://www.packtpub.com)
    is used to access the HTTP server hosted by Packt Publishing. Let us check out
    the DNSmap tool provided in Kali.'
  prefs: []
  type: TYPE_NORMAL
- en: 'DNSmap is a tool that is used to discover all the subdomains associated with
    a given domain. Passing the following command at the terminal will show complete
    DNS mapping for [www.rediff.com](http://www.rediff.com):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![DNSmap analysis](img/5664OT_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Network scanners
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Network scanners are used to enumerate a public or a private network and to
    gain information about it.
  prefs: []
  type: TYPE_NORMAL
- en: '**Nmap** is by far the most popular information-gathering tool. It is a powerful
    tool that is used to scan a computer or a complete network for open ports along
    with services running on those ports. This information can be useful for professional
    auditors and pen-testers in order to target certain services to compromise the
    target. Passing the following command will list the various scan options available:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'A simple UDP scan can be launched using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Detecting live hosts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Fping** is a popular tool used to identify whether a given host is connected
    to a network or not.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: SSL analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**SSLScan** is a fast SSL port scanner that connects to the SSL port, determines
    which ciphers and SSL protocols are supported, and returns the SSL certificate.'
  prefs: []
  type: TYPE_NORMAL
- en: Network sniffing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Dsniff** is a collection of tools that can perform a wide variety of sniffing
    tasks. These tools work by passively monitoring the network traffic for interesting
    data such as passwords, key transfers, and e-mails. Some of the tools in this
    suite include urlsnarf, WebSpy, mailsnarf, and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Netsniff** is a fast and robust networking toolkit specifically designed
    for Linux platforms. It can be used for network development analysis, debugging,
    auditing, and so on. netsniff-ng is a fast network analyzer based on packet mmap(2)
    mechanisms. It can record `.pcap` files to a disc, replay them, and also perform
    an offline and online analysis.'
  prefs: []
  type: TYPE_NORMAL
- en: Working with vulnerability assessment tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Vulnerability assessment tools play a very important role in penetration testing.
    These tools help a pen-tester in analyzing vulnerabilities and weaknesses in the
    current system. Vulnerability assessment can be performed over a variety of services
    and software based on the requirement. OpenVAS is an open source vulnerability-scanning
    framework specifically designed to dig out vulnerabilities under various scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: To start working with OpenVAS, browse to **Applications** | **Kali Linux** |
    **Vulnerability Analysis** | **OpenVAS**.
  prefs: []
  type: TYPE_NORMAL
- en: If you are starting it for the first time, run `openvas-setup` to update the
    software and start all of the required plugins and dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with vulnerability assessment tools](img/5664OT_02_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The next step will be to add a new user to OpenVAS. Pass on the following command
    to the terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'You can skip the **rule creation process** by pressing *Ctrl* + *D*. We can
    use the following command to regularly update the framework with new signatures
    and dependencies:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Now, we are all set to load the framework and begin our assessment task. Browse
    to **Applications** | **Kali Linux** | **Vulnerability Analysis** | **OpenVAS**
    | **openvas-gsd**. This will launch the GUI framework and prompt for the login
    details. Enter the credentials that you set up earlier and provide the local server
    address.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with vulnerability assessment tools](img/5664OT_02_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'After logging in, you can begin your scanning process. To get started with
    your first scan, navigate to **Task** | **New**. Fill in a task name and the required
    scan mode as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with vulnerability assessment tools](img/5664OT_02_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the task is created, you will notice that the task is listed at the bottom
    part of the interface. Click on the **Start** button to begin scanning.
  prefs: []
  type: TYPE_NORMAL
- en: Web app penetration testing in Kali
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Web apps are now a major part of today's World Wide Web. Keeping them safe and
    secure is the prime focus of webmasters. Building web apps from scratch can be
    a tedious task, and there can be small bugs in the code that can lead to a security
    breach. This is where web apps jump in and help you secure your application. Web
    app penetration testing can be implemented at various fronts such as the frontend
    interface, database, and web server. Let us leverage the power of some of the
    important tools of Kali that can be helpful during web app penetration testing.
  prefs: []
  type: TYPE_NORMAL
- en: WebScarab proxy
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**WebScarab** is an HTTP and HTTPS proxy interceptor framework that allows
    the user to review and modify the requests created by the browser before they
    are sent to the server. Similarly, the responses received from the server can
    be modified before they are reflected in the browser. The new version of WebScarab
    has many more advanced features such as XSS/CSRF detection, Session ID analysis,
    and Fuzzing. Follow these three steps to get started with WebScarab:'
  prefs: []
  type: TYPE_NORMAL
- en: To launch WebScarab, browse to **Applications** | **Kali Linux** | **Web applications**
    | **Web application proxies** | **WebScarab**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the application is loaded, you will have to change your browser's network
    settings. Set the proxy settings for IP as `127.0.0.1` and **Port** as **8008**:![WebScarab
    proxy](img/5664OT_02_11.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save the settings and go back to the WebScarab GUI. Click on the **Proxy** tab
    and check **Intercept requests**. Make sure that both **GET** and **POST** requests
    are highlighted on the left-hand side panel. To intercept the response, check
    **Intercept responses** to begin reviewing the responses coming from the server.![WebScarab
    proxy](img/5664OT_02_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Attacking the database using sqlninja
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: sqlninja is a popular tool used to test SQL injection vulnerabilities in Microsoft
    SQL servers. Databases are an integral part of web apps hence, even a single flaw
    in it can lead to mass compromising of information. Let us see how sqlninja can
    be used for database penetration testing.
  prefs: []
  type: TYPE_NORMAL
- en: To launch SQL ninja, browse to **Applications** | **Kali Linux** | **Web applications**
    | **Database Exploitation** | **sqlninja**.
  prefs: []
  type: TYPE_NORMAL
- en: 'This will launch the terminal window with sqlninja parameters. The important
    parameter to look for is either the `mode` parameter or the `–m` parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Attacking the database using sqlninja](img/5664OT_02_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The `–m` parameter specifies the type of operation we want to perform over
    the target database. Let us pass a basic command and analyze the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: This will prompt you to set up your configuration file (`sqlninja.conf`). You
    can pass the respective values and create the config file. Once you are through
    with it, you are ready to perform database penetration testing.
  prefs: []
  type: TYPE_NORMAL
- en: The Websploit framework
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Websploit is an open source framework designed for vulnerability analysis and
    penetration testing of web applications. It is very much similar to Metasploit
    and incorporates many of its plugins to add functionalities.
  prefs: []
  type: TYPE_NORMAL
- en: To launch Websploit, browse to **Applications** | **Kali Linux** | **Web Applications**
    | **Web Application Fuzzers** | **Websploit**.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Websploit framework](img/5664OT_02_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We can begin by updating the framework. Passing the update command at the terminal
    will begin the updating process as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the update is over, you can check out the available modules by passing
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Let us launch a simple directory scanner module against [www.target.com](http://www.target.com)
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![The Websploit framework](img/5664OT_02_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the run command is executed, Websploit will launch the attack module and
    display the result. Similarly, we can use other modules based on the requirements
    of our scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: Breaking passwords
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Passwords are the most common authentication technique implemented in computer
    systems. Breaking them can provide a direct entry into the system and can give
    you the desired privilege escalation. Kali comes with several tools that can be
    used to break passwords either offline or online. Let us look over some of the
    important password-cracking tools in Kali and discuss their mode of operations.
  prefs: []
  type: TYPE_NORMAL
- en: John the Ripper
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**John the Ripper** is a free and fast password cracker that can be effectively
    used to break weak Unix passwords, Windows LM Hashes, DES, Kerberos, and many
    more cryptic methodologies.'
  prefs: []
  type: TYPE_NORMAL
- en: Cracking passwords with John can be done by the Brute Force technique wherein
    the encrypted password can be provided inside a file. Alternatively, we can also
    provide a wordlist of passwords against which we can apply the Brute Force technique
    to match the password.
  prefs: []
  type: TYPE_NORMAL
- en: To launch John the Ripper, browse to **Applications** | **Kali Linux** | **Password
    Attacks** | **Offline Attacks** | **John**.
  prefs: []
  type: TYPE_NORMAL
- en: '![John the Ripper](img/5664OT_02_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To launch a brute force attack against a password file, you can pass the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Here `pwd` is the name of the password file.
  prefs: []
  type: TYPE_NORMAL
- en: 'To retrieve the cracked password, pass the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also provide a wordlist of stored passwords:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Working with RainbowCrack
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**RainbowCrack** is a faster password cracking tool than John. RainbowCrack
    is based on the concept of using rainbow tables, a huge collection of pregenerated
    hashes of nearly every possible password. The user input hash is given as the
    input for RainbowCrack, and it matches the hashes of the rainbow table unless
    a match is found. This technique is proven to be more effective and less time-consuming
    than brute force.'
  prefs: []
  type: TYPE_NORMAL
- en: To launch RainbowCrack, browse to **Applications** | **Kali Linux** | **Password
    Attacks** | **Offline Attacks** | **RainbowCrack**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with RainbowCrack](img/5664OT_02_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'An example command is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: This command launches RainbowCrack and looks for the rainbow table with the
    wildcard search (`*`); the hash to be cracked is picked from the `hash.txt` file.
  prefs: []
  type: TYPE_NORMAL
- en: Targeting wireless networks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Wireless network is one of the primary means of connecting computers in a network.
    This creates a wide scope for security testing in this domain. Penetration testing
    we perform on a wireless network is similar to wired networks. The only difference
    lies in the way in which devices and protocols are connected. Kali comes with
    many useful tools that can ease the process of testing and assessment of wireless
    networks. Let us have a quick look at some of them.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Kismet
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Kismet is a wireless network detector/sniffer that can be used to trace the
    data flowing over the wireless communication medium. Kismet identifies networks
    by passively collecting packets and detecting networks, which allows it to detect
    hidden networks and the presence of non-beaconing networks via data traffic.
  prefs: []
  type: TYPE_NORMAL
- en: Kismet can be launched from **Applications** | **Kali Linux** | **Wireless Attacks**
    | **Wireless tools** | **Kismet**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Kismet](img/5664OT_02_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the terminal is loaded, type `kismet` and press *Enter*. You will be greeted
    with an introductory screen. Answer the questions to launch the server. If you
    are running it for the first time, it will ask you to select an interface.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Kismet](img/5664OT_02_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Add your wireless interface (`wlan0` by default) and select **Add** as shown
    in the following screenshot:.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Kismet](img/5664OT_02_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the interface is added, Kismet will start reporting reachable wireless
    networks. You can select any of them to begin capturing the data flowing over
    it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with Kismet](img/5664OT_02_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This was a quick tutorial on how Kismet can be used to identify wireless networks
    and passively sniff the data over them.
  prefs: []
  type: TYPE_NORMAL
- en: Fern WIFI Cracker
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Fern is a Wi-Fi auditing GUI-based tool that is able to crack and recover WEP/WPA/WPS
    keys and also run other network-based attacks on wireless or Ethernet-based networks.
    This tool has been developed using the python language. To use Fern, you should
    have some preinstalled tools such as Aircrack, Python Scrapy, and Reaver. Kali
    has these tools preinstalled, so you need not worry about installing them. Some
    of the important features of Fern include:'
  prefs: []
  type: TYPE_NORMAL
- en: WEP Cracking with Fragmentation, Chop-Chop, Caffe-Latte, Hirte, ARP Request
    Replay, or WPS attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WPA/WPA2 Cracking with dictionary or WPS-based attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automatic saving of the key in the database upon a successful crack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automatic access point attack system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Session hijacking (passive and Ethernet modes)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access point MAC address for geolocation tracking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To launch fern, browse to **Applications** | **Kali Linux** | **Wireless Attacks**
    | **Wireless tools** | **Fern WIFI Cracker**.
  prefs: []
  type: TYPE_NORMAL
- en: Once the GUI is loaded, select your interface from the drop-down menu. After
    a few moments, the GUI will start reflecting nearby Wi-Fi networks categorized
    on their password security (WPA, WEP, and so on).
  prefs: []
  type: TYPE_NORMAL
- en: '![Fern WIFI Cracker](img/5664OT_02_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the scan setting pop up appears, click on **OK** to proceed. After few
    moments, the attack will be launched and any successful crack will be reported
    by Fern.
  prefs: []
  type: TYPE_NORMAL
- en: Bluetooth auditing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Kali also provides an option to audit Bluetooth network mode. Bluetooth is the
    most commonly used way of data transfer in mobile networks and in almost all modern
    day devices that support Bluetooth. Hence, auditing Bluetooth can be crucial for
    network administrators. We will give a brief introduction to BlueRanger.
  prefs: []
  type: TYPE_NORMAL
- en: BlueRanger
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**BlueRanger** is a simple Bash script that uses **link quality** to locate
    Bluetooth radio devices. It sends L2CAP (Bluetooth) pings to create a connection
    between Bluetooth interfaces since most devices allow pings without any authentication
    or authorization.'
  prefs: []
  type: TYPE_NORMAL
- en: To begin working with BlueRanger, browse to **Applications** | **Kali Linux**
    | **Wireless Attacks** | **Bluetooth tools** | **Blueranger**.
  prefs: []
  type: TYPE_NORMAL
- en: '![BlueRanger](img/5664OT_02_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To launch the enumeration of **Bluetooth network PAS** on the command at the
    terminal as shown in the `SYNOPSIS` of the preceding image. An example command
    can be:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Once the command is executed, the Bash script will start pinging the devices
    that are in range. The screen will refresh after each ping. It will report the
    nearby devices, ping count, proximity change, range, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Exploitation frameworks and tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Exploitation frames are the heart and soul of penetration testers. It gives
    them the power to manage their assessment easily using a single framework. Kali
    Linux integrates these frameworks right into its core to make sure they perform
    in the most optimal way. In this section, we will cover some of the important
    exploitation frameworks present in Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Browser Exploitation Framework
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Browser Exploitation Framework** (**BeEF**) is a popular open source framework
    that is particularly designed for auditing web browsers. Launch BeEF via **Applications**
    | **Kali Linux** | **Exploitation Tools** | **BeEF Exploitation Framework** |
    **BeEF**. This will launch the browser with the following location:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: In the next step, you will be asked for authentication. The default username
    and password is beef and beef respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'Initial versions of Kali do not have BeEF installed. In that case, use the
    following commands to get the latest copy of BeEF:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the install is finished, we can change to its directory and launch BeEF
    using the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Once the welcome page is loaded, you can start by clicking on the **demo** link
    to get official **get-started** tutorials.
  prefs: []
  type: TYPE_NORMAL
- en: '![Browser Exploitation Framework](img/5664OT_02_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The left panel of BeEF will reflect the browsers in which the plugin is hooked
    and ready. You will notice different tabs at the top. Let us take a quick look
    at them.
  prefs: []
  type: TYPE_NORMAL
- en: '**Getting Started**: It''s the same welcome page that we just read in the preceding
    paragraphs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Logs**: It shows the different browsers'' actions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Current Browser**: This is the main tab to look for. It contains details
    about the current working browser. It contains six different subtabs with additional
    information and actions.![Browser Exploitation Framework](img/5664OT_02_26.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These subtabs are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Details**: It represents every detail of the browser: its plugins, hooked
    pages, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Logs**: It represents the logs of the browser''s action.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Commands**: This contains different modules that we can execute against the
    browser.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rider**: This tab allows us to submit arbitrary HTTP requests on behalf of
    the hooked browser.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**XssRays**: This looks for any possibility of XSS attack on the hooked browser.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We just saw, in short, the basic information of BeEF. You can start playing
    with BeEF against your own web applications, or you can start with the demo lessons
    added with BeEF to gain more knowledge of the framework.
  prefs: []
  type: TYPE_NORMAL
- en: Social Engineer Toolkit
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Social Engineer Toolkit** (**SET**) is a popular command-line tool that can
    frame attack scenarios to target specific users. It builds up the scenario based
    on its custom set options and allows the attacker to leverage its power and build
    the attack vector. The success of the attack vector is completely dependent on
    the human element; hence, it is named as social engineer toolkit. To launch SET,
    navigate to **Applications** | **Kali Linux** | **Exploitation tools** | **Social
    Engineering Toolkit** | **se-toolkit**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Social Engineer Toolkit](img/5664OT_02_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can select your preferred attack mode from the option's menu to frame the
    attack. Let us select `1`.
  prefs: []
  type: TYPE_NORMAL
- en: Here you will find several attack options to select from. Let us select **Spear-Phishing
    Attack Vectors** and then select **Create Social Engineering Template**. This
    option enables you to build your own SET template to launch attacks.
  prefs: []
  type: TYPE_NORMAL
- en: '![Social Engineer Toolkit](img/5664OT_02_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Further, you can also launch website-based attack vectors, java applet attacks,
    and so on. SET is a very useful and friendly tool that can provide variety of
    options for penetration testing. SET also leverages the power of Metasploit Framework
    to build payloads, meterpreter connections, shells, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Working with forensics tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Kali has an exhaustive collection of free forensic tools that can be used to
    investigate an infected system. Forensics play a completely different role compared
    to penetration testing. In forensic analysis, we try to analyze the root cause
    of breakthrough whereas, in penetration testing, we perform the actual process
    of breaking. Let us go for a quick ride through some of the important forensic
    tools available in Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Autopsy Forensic Browser
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Autopsy is a very useful tool for forensic analysts. It is a GUI-based tool
    that generates a detailed report of events that occurred on an operating system
    in a timeline fashion. This makes it easier to relate one incidence to other.
    It is a fast and robust tool to investigate systems for any malicious behavior.
    Some of its common features include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Timeline analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filesystem analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extracting history, cookies, and bookmarks from various browsers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hash filtering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Autopsy can be launched by navigating to **Applications** | **Kali Linux** |
    **Forensics** | **Digital Forensics** | **Autopsy**.
  prefs: []
  type: TYPE_NORMAL
- en: You can launch the GUI from the browser by locating the `localhost:9999/autopsy/`
    URL.
  prefs: []
  type: TYPE_NORMAL
- en: '![Autopsy Forensic Browser](img/5664OT_02_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the GUI is loaded, you can build a new case by clicking on **New Case**.
    A new window, as shown in the following screenshot, opens:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Autopsy Forensic Browser](img/5664OT_02_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Fill in the initial details such as **Case Name**, **Description**, and **Investigator
    Names**. At the final stage, you will be asked to add an image. Provide the complete
    path of the image to be investigated along with the image type and the import
    method. Now you are all set to begin investigating your target.
  prefs: []
  type: TYPE_NORMAL
- en: Most of the properties of the image under investigation will be listed in the
    left-hand side pane of the GUI. The **Images** node reflects the directory structure.
    The **Views** node reflects the data from a file type. The **Results** node shows
    the output from the **Ingest** modules. The **Ingest** modules analyze multiple
    files in a prioritized order. This is how you can travel through the complete
    system to figure out the timeline changes in the system and identify any potential
    threat. Autopsy is a very handy tool in cases where the root of infection is not
    known to us.
  prefs: []
  type: TYPE_NORMAL
- en: The Sleuth Kit
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**The Sleuth Kit (TSK)** is a collection of libraries that can be used to investigate
    disk images for digital forensics. Libraries of The Sleuth Kit can be merged with
    other forensics tools so that they can work in conjunction to perform forensics.
    Autopsy is a graphical version of The Sleuth Kit. Some of the important tools
    of this kit are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`icat`: This tool will display the contents of a file from the image'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`blkls`: This tool is used to extract unallocated disk space'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fsstat`: This tool is used to determine the fragment location of information'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fls`: This tool is used to delete files from the image'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are some useful tools present in this kit that can be used under various
    situations to perform forensic investigations.
  prefs: []
  type: TYPE_NORMAL
- en: This was an overview of some of the important tools that can be used under various
    situations to perform different tasks ranging from information gathering to forensic
    investigation. Kali has a collection of over 300 tools. Covering all of them is
    beyond the scope of this book but a good understanding of the tools listed in
    this section can be of great help under any situation. In the next section of
    this book, we will cover some of the tools in a detailed and elaborate manner.
  prefs: []
  type: TYPE_NORMAL
- en: Top 5 features you need to know about
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you start to use Kali Linux, you will realize that there are a wide variety
    of things that you can do with it. This section will teach you all about the most
    commonly performed tasks and features used in Kali.
  prefs: []
  type: TYPE_NORMAL
- en: Information gathering with Nmap
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Information gathering is the first step towards penetration testing. In this
    phase, we try and collect as much information about our target as possible. Nmap
    is the most preferred tool for scanning and gathering information. Nmap can be
    launched by opening the console and passing the `nmap` command. This will display
    a list of different parameters and scopes that can be used with Nmap. Let us work
    with few of them.
  prefs: []
  type: TYPE_NORMAL
- en: 'To scan a single IP, use the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of this command is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Information gathering with Nmap](img/5664OT_03_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To scan a range of IP addresses in a network, use the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'To scan a particular port number over a target, use the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'To scan a range of ports over the entire subnet for a specific port range,
    use the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'To exclude a specific host or multiple hosts from the scan, use the following
    command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'To perform a speedy scan, use the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'To scan the information of the operating system and its version, use the following
    command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'To check if a firewall is in place at the target network/IP, use the following
    command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'In case of firewalls, Nmap has a specific parameter to scan the target, which
    can be done using the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'To increase the verbosity and see whether all the packets are sent/received,
    use the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'To detect different services running on the remote target, use the following
    command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'To scan a target using TCP ACK(PA) or TCP SYN(PS) packets, use the following
    command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'To launch a stealthy scan, we will use the TCP SYN scan using the following
    command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'To find out various TCP services running on the remote target, we use the TCP
    connect scan using the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'For a UDP scan, we use the following `nmap` command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'All these scan results can be saved directly to a text file using the following
    command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: These were some of the important commands that can be handy at the time of information
    gathering and scanning. Nmap provides the feature of linking these different scan
    parameters into a single scan so as to make the process more advanced and sophisticated.
  prefs: []
  type: TYPE_NORMAL
- en: Breaking wireless passwords using Aircrack
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section we will cover details of how to break wireless passwords using
    Kali Linux. We already covered the use of the Fern WIFI cracker in the *Fern WIFI
    Cracker* section; we saw that this is an automated tool to crack passwords but
    its scope is limited. Here we will perform each step manually to see how Wi-Fi
    passwords can be cracked. Before we begin, we have to ensure that our wireless
    card supports packet injection. You can search your Wi-Fi hardware on Google to
    see if it supports packet injection. Several USB-based wireless cards are available
    that can do this task.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to begin cracking Wi-Fi passwords:'
  prefs: []
  type: TYPE_NORMAL
- en: Identify the wireless network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will begin by checking our wireless network's interface using the `iwconfig`
    command.
  prefs: []
  type: TYPE_NORMAL
- en: '![Breaking wireless passwords using Aircrack](img/5664OT_03_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The wireless card will be listed by default as `wlan0`. If the wireless card
    is not enabled, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Begin scanning.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To scan the nearby in-range Wi-Fi networks, pass the following command and
    analyze the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: The output will list several details of in-range Wi-Fi networks, such as their
    ESSID name, MAC address, and encryption key status.
  prefs: []
  type: TYPE_NORMAL
- en: '![Breaking wireless passwords using Aircrack](img/5664OT_03_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can now select your target from the list and keep a note of its details,
    such as the channel number and MAC address that will be used in later steps.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the monitoring mode.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In this step we will configure our wireless card for its **monitoring** mode.
    This will enable the card to examine all data packets flowing in the air. To do
    this, we will use `airmon-ng`. It is a command-line tool that sets the wireless
    cards to the monitoring mode. We will pass the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '![Breaking wireless passwords using Aircrack](img/5664OT_03_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now, to verify whether the wireless card is active in the monitor mode or not,
    use the `ifconfig` command. You will notice a new interface with the name `mon0`.
    This is our monitoring interface.
  prefs: []
  type: TYPE_NORMAL
- en: Capturing packets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now we are all set to begin capturing the data packets flowing across our target
    network. We will be using `airodump-ng` for this. The command format will be as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Once you pass the command along with the respective parameter details, you will
    notice that the wireless card will begin capturing data packets from our target
    network.
  prefs: []
  type: TYPE_NORMAL
- en: '![Breaking wireless passwords using Aircrack](img/5664OT_03_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let it run for a few minutes unless it has captured over 10,000 beacons.
  prefs: []
  type: TYPE_NORMAL
- en: Cracking the password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have closed the packet capture process, you will notice that some new
    files will be created in your root directory. The important file is the `*.cap`
    file (`crack-01.cap`) that will be used in cracking the password. Next, we will
    use `aircrack-ng` along with a dictionary to begin cracking the password. A common
    dictionary that can be used is `dark0de.lst`; it can be downloaded from [http://www.filecrop.com/darkc0de.lst.html](http://www.filecrop.com/darkc0de.lst.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the dictionary is downloaded, you can pass the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '![Breaking wireless passwords using Aircrack](img/5664OT_03_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After several minutes, if a dictionary match is found, it will be reflected
    on the terminal. The success of this attack depends on the password strength and
    the dictionary used for the attack. It is always advisable to capture as many
    packets as possible before launching `aircrack-ng`.
  prefs: []
  type: TYPE_NORMAL
- en: Web app penetration testing with Burp Suite
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Burp Suite is another popular tool that is widely preferred for auditing web
    applications. It comes in both free and commercial versions with variations in
    features. Kali Linux comes preinstalled with the free version of Burp Suite. It
    can be launched from **Applications** | **Kali Linux** | **Web Applications**
    | **Web Application Fuzzers** | **Burp Suite**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the key features of Burp Suite include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: An intercepting proxy that can analyze different requests/responses through
    the browser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An application-aware spider to crawl the contents of the application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web app scanners for identifying weakness and vulnerability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating and saving the workspace
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extensibility of the tool by integrating custom plugins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Burp Suite is a combination of several tools under a single roof that work in
    conjunction with each other. Let us understand some of the common functionalities
    of Burp Suite.
  prefs: []
  type: TYPE_NORMAL
- en: Burp proxy
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Burp proxy is an intercepting proxy that reads all the requests/responses sent
    through a browser. It acts as a **man-in-the-middle** attack vector. To begin
    working with Burp proxy, we will have to change the browser's network settings
    to bypass the traffic through the proxy. Launch the network settings of the browser
    and give the proxy address as `localhost` and the port as **8000**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Burp proxy](img/5664OT_03_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now the browser is all set to communicate through HTTP via Burp proxy. You can
    view the proxy preferences by selecting the **Proxy** tab and choosing the **Options**
    subtab. The intercept will reflect any communication captured over HTTP via the
    browser. The **History** tab shows the timeline of captured communications.
  prefs: []
  type: TYPE_NORMAL
- en: '![Burp proxy](img/5664OT_03_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can change your proxy preferences from the **Options** tab. Let us now discuss
    the working of Burp spider.
  prefs: []
  type: TYPE_NORMAL
- en: Burp Spider
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Burp Spider is a crawling tool that finds every web page linked to a website.
    It begins with crawling from the home page, or whichever page is given as input,
    and crawls it by following the hyperlinks connected with that page. It finally
    represents the complete chain in a tree from. Burp Spider can be configured from
    the **Options** tab. You can select the maximum depth to be traversed by the crawler,
    HTML fields to crawl, application logins, thread count, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Burp Intruder
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Burp Intruder is a powerful tool to automate customized attacks to be launched
    against the web application. It allows the user to build up a template of an **attack**
    vector and perform the operations in an automated manner.
  prefs: []
  type: TYPE_NORMAL
- en: Burp Intruder has four important tabs namely **Target**, **Positions**, **Payloads**,
    and **Options**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Burp Intruder](img/5664OT_03_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The **Target** tab is used for selecting the target address of the application.
    For local testing, it can be set to `127.0.0.1`.
  prefs: []
  type: TYPE_NORMAL
- en: The **Positions** tab is used for selecting the positions where the attack template
    should be applied. It can be either a request, form field, parameter, and so on.
    There are various kinds of attack templates, such as sniper attack, battering
    ram attack, pitchfork attack, and cluster bomb.
  prefs: []
  type: TYPE_NORMAL
- en: The **Payloads** tab is used to set the attack vector that needs to be applied
    at the selected positions. For example, an SQL injection attack can be applied
    by selecting the positions as the login form and selecting the payload as the
    injection strings.
  prefs: []
  type: TYPE_NORMAL
- en: The **Options** tab can be used to apply additional settings such as the thread
    count, retries, and storing results.
  prefs: []
  type: TYPE_NORMAL
- en: This was a quick tutorial covering some of the basic features of Burp Suite.
    It is highly recommended to implement the tool in a practical way against any
    web application to further understand its functioning.
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit Exploitation Framework
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Metasploit is a free, open source penetration testing framework started by *H.
    D. Moore* in 2003 and was later acquired by Rapid7\. The current stable versions
    of the framework are written using the Ruby language. It has the world's largest
    database of tested exploits and receives more than a million downloads every year.
    It is also one of the most complex projects built in Ruby to date. It comes in
    both free and commercial license product forms.
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit is based on a modular architecture, and all its modules and scripts
    are integrated with the framework in the form of modules. This makes it fairly
    easy to integrate any new custom module with the framework and leverage its functionalists.
  prefs: []
  type: TYPE_NORMAL
- en: Features of Metasploit
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following are some of the features of Metasploit:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Framework base**: Metasploit has a rich base that provides loads of functionalists
    that are required during penetration testing. Some if its base functions include
    logging, configuring, database storage, meterpreter scripting, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Auxiliary modules**: This is one of the major features of Metasploit. Auxiliary
    modules are specific function modules that can perform a variety of tasks both
    pre and post exploitation. Some of its chief functionalities include scanning,
    information gathering, launching specific attacks, OS detection, service detection,
    and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Packaged tools**: Metasploit comes with several handy tools that can further
    enhance the penetration testing experience. These add-on packages can create standalone
    payloads and encrypt the payloads using different algorithms, database connectivity,
    the GUI interface, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Third-party plugins**: Metasploit can integrate with several third-party
    plugins and use its results to build its own attack structure. Results from various
    tools, such as Nmap, Nessus, and NeXpose, can be used directly within the framework.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open source**: The free version of Metasploit is open source, so it can be
    fully extended and modified as needed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metasploit can be launched by navigating to **Applications** | **Kali Linux**
    | **Top 10 security tools** | **Metasploit Framework**.
  prefs: []
  type: TYPE_NORMAL
- en: Once the console is loaded, you will notice the `msf>` prompt, which indicates
    that Metasploit is now ready to receive your commands.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start penetration testing using Metasploit, we need a target system. Let
    us launch a quick Nmap scan to figure out a live system in our network. We will
    use the following command to launch Nmap:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '![Features of Metasploit](img/5664OT_03_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding screenshot, you can see that Nmap has detected four different
    target systems. Let us target a Windows XP system with the IP 192.168.56.102\.
    Now that Nmap has figured out that our target system is using the Windows XP operating
    system, our next target will be to identify a remote exploit for Windows XP. Fortunately,
    we have few stable exploits. Let us search for the `netapi` vulnerability in the
    Metasploit repository.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '![Features of Metasploit](img/5664OT_03_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let us select the `ms08_067_netapi` module of the `exploit` module, which is
    ranked as `great`. To activate this module, pass the following command at the
    console:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: This will change the console prompt to the `exploit` module, indicating that
    your `exploit` module is all set to be executed.
  prefs: []
  type: TYPE_NORMAL
- en: Now our next step will be to pass the required parameter values to the `exploit`
    module. The `show options` command shows the required parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Here the `RHOST` value needs to be passed. `RHOST` is the remote host that we
    want to target.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the `exploit` modules are set, the next step is to select a `PAYLOAD`.
    Let us use the meterpreter payload as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Once the `meterpreter` payload is selected, we now need to pass the payload
    parameter values. Again, pass the `show options` command to view the required
    parameters. Pass on the LHOST IP, which is the IP of the attacking machine.
  prefs: []
  type: TYPE_NORMAL
- en: Now we are all set to launch exploit. Pass on the `exploit` command to send
    the `exploit` module to the target machine.
  prefs: []
  type: TYPE_NORMAL
- en: '![Features of Metasploit](img/5664OT_03_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: If the attack is successful, you will notice that the console prompt changes
    to `meterpreter` indicating that our payload is successfully executed on the remote
    machine, and we can now control it through our attacking machine. You might have
    noticed how easily Metasploit was able to take over a remote target completely
    by using `exploit` modules. Metasploit is a very powerful tool to perform penetration
    testing over remote targets. This was a quick introductory tutorial on Metasploit.
  prefs: []
  type: TYPE_NORMAL
- en: Let us move on to the next section, where we will read about various forensics
    tools present in Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Network forensics using Kali Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Network forensics** involves analyzing, reporting, and recovering network
    information from a computer system or any digital storage media. Forensics involves
    a detailed investigation of events along with gathering relevant information.
    Kali comes with a wide range of tools that can assist in effective forensic analysis.
    Forensic analysis usually involves investigating different aspects, which requires
    different tools. Unlike exploitation frameworks, forensics usually depends on
    multiple tools. Let us cover some of the major forensic tools in detail here.'
  prefs: []
  type: TYPE_NORMAL
- en: Network analysis with Wireshark
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Wireshark is an open source network packet analyzer tool similar to **tcpdump**
    that captures the data packets flowing over the wire (network) and presents them
    in an understandable form. Wireshark can be considered as a Swiss army knife as
    it can be used under different circumstances such as network troubleshooting,
    security operations, and learning protocol internals. This is one tool that does
    it all, and with ease.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the important benefits of working with Wireshark are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Multiple protocol support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A user-friendly interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Live traffic analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Open source
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To begin working with Wireshark in Kali Linux, navigate to **Applications**
    | **Kali Linux** | **Top 10 security tools** | **Wireshark**.
  prefs: []
  type: TYPE_NORMAL
- en: Once the GUI is loaded, you will have to select the interface you want to begin
    working with. The left-bottom panel shows the various available interfaces. Select
    an interface and click on **Start** to begin. You will notice that the GUI starts
    showing different packets captured on the selected interface.
  prefs: []
  type: TYPE_NORMAL
- en: '![Network analysis with Wireshark](img/5664OT_03_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You will notice that the Wireshark GUI is divided into three distinct sections.
    The **Capture** panel displays the live capture of packets. The **Packet details**
    panel displays information about the selected packet in the capture panel. The
    **Packet bytes** panel represents the information from the Packet details panel
    in a dump or actual format. It shows the byte sequences of the flow. You can select
    different actions from the menu option to maximize your capture performance.
  prefs: []
  type: TYPE_NORMAL
- en: Rootkit-scanning forensics with chkrootkit
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Rootkits are malicious programs that are designed to hide malicious processes
    from detection and allow continued, often remote, access to a computer system.
    Kali Linux provides a special rootkit forensics tool called `chkrootkit`. It can
    be launched by navigating to **Kali Linux** | **Forensics** | **Digital anti-forensics**
    | **chkrootkit**.
  prefs: []
  type: TYPE_NORMAL
- en: Once the terminal is loaded, change the directory to `/usr/sbin` and launch
    `chkrootkit`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Rootkit-scanning forensics with chkrootkit](img/5664OT_03_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once `chkrootkit` is launched, it will start scanning the system for any malicious
    program. `chkrootkit` is a very handy tool to quickly identify any suspicious
    program installed on the system.
  prefs: []
  type: TYPE_NORMAL
- en: File analysis using md5deep
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: md5deep is an open source tool that is used to compute hashes or message digests
    for any number of files. It can also recurse through the directory structure to
    generate the signature of each and every file inside the directory. Generating
    MD5 signatures of files helps forensics analysts in understanding whether the
    content of the file is changed or not. The MD5 of the original file is compared
    with the MD5 of the possibly modified file; if a mismatch is found, it concludes
    that the file has been modified.
  prefs: []
  type: TYPE_NORMAL
- en: The use of md5deep is fairly simple. It can be launched from **Applications**
    | **Kali Linux** | **Forensics** | **Forensic Hashing Tools** | **md5deep**.
  prefs: []
  type: TYPE_NORMAL
- en: '![File analysis using md5deep](img/5664OT_03_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To generate a list of file signatures for a directory, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'To match the file integrity, execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: In this way, we can analyze the file integrity to make sure whether any modifications
    have been made or not.
  prefs: []
  type: TYPE_NORMAL
- en: People and places you should get to know
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you need help with Kali Linux, here are some people and places that will
    prove invaluable.
  prefs: []
  type: TYPE_NORMAL
- en: Official sites
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are official sites that you should visit:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Homepage: [http://www.kali.org](http://www.kali.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Manual and documentation: [http://docs.kali.org](http://docs.kali.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Blog: [http://www.kali.org/blog/](http://www.kali.org/blog/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Source code: [http://git.kali.org/gitweb/](http://git.kali.org/gitweb/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Articles and tutorials
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are articles that you should read to gain more knowledge on Kali
    Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Backtrack is reborn - Kali: [www.offensive-security.com/offsec/backtrack-reborn-kali-linux/](http://www.offensive-security.com/offsec/backtrack-reborn-kali-linux/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Easily Accessing Wireless network with Kali linux: [https://community.rapid7.com/community/infosec/blog/2013/05/22/easily-assessing-wireless-networks-with-kali-linux](https://community.rapid7.com/community/infosec/blog/2013/05/22/%E2%80%A8easily-assessing-wireless-networks-with-kali-linux)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kali Linux cracks passwords on an enterprise level: [http://lifehacker.com/5990375/kali-linux-cracks-passwords-on-the-enterprise-level](http://lifehacker.com/5990375/kali-linux-cracks-passwords-on-the-enterprise-level)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Installing Vmware tools on Kali Linux: [http://www.drchaos.com/installing-vmware-tools-on-kali-linux/](http://www.drchaos.com/installing-vmware-tools-on-kali-linux/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Community
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can reach the Kali Linux community at:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Official mailing list: `<[info@kali.org](mailto:info@kali.org)>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Official forums: [http://forums.kali.org](http://forums.kali.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Unofficial forums: [http://www.kalilinux.net](http://www.kalilinux.net)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'IRC: `irc.freenode.net #kali-linux`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blogs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are a few blogs and video tutorials you should read through:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Learning security tips through interactive videos by *Vivek Ramachandran*:
    [http://www.securitytube.net](http://www.securitytube.net)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Metasploit unleashed, a project by founders of Kali: [http://www.offensive-security.com/metasploit-unleashed/Main_Page](http://www.offensive-security.com/metasploit-unleashed/Main_Page)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Video tutorials on Kali by Cyber arms: [http://cyberarms.wordpress.com/2013/07/01/video-training-kali-linux-assuring-security-by-penetration-testing/](http://cyberarms.wordpress.com/2013/07/01/video-training-kali-linux-assuring-security-by-penetration-testing/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cyber Attack management with Armitage: [http://www.fastandeasyhacking.com/](http://www.fastandeasyhacking.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Twitter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can follow:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali Linux on Twitter: [https://twitter.com/kalilinux](https://twitter.com/kalilinux)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'MalwareMustDie, NPO on Twitter: [https://twitter.com/malwaremustdie](https://twitter.com/malwaremustdie)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Follow *Devon Kearns* on Twitter: [https://twitter.com/dookie2000ca](https://twitter.com/dookie2000ca)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Follow *Abhinav Singh* on Twitter: [https://twitter.com/abhinavbom](https://twitter.com/abhinavbom)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Follow *Ken Soona* on Twitter: [https://twitter.com/attackvector#shamelessplug](https://twitter.com/attackvector#shamelessplug)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
