- en: Setting Up Kali - Part 1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As a future ethical hacker and/or penetration tester, it is quite important
    when testing payloads or practicing hacking skills that you do not disrupt or
    cause any sort of harm or damage to other people''s computers or network infrastructure,
    such as that of your organization. To elaborate further, we''ll use a simple analogy.
    Imagine you work for a company called ACME (a fictional organization) and you''re
    the network/system administrator. Your IT director has noticed you express an
    interest in cybersecurity and that you have significant potential in becoming
    a penetration tester or an ethical hacker. They, therefore, approve official training
    in penetration testing certification for you. Once the training has ended, access
    to the virtual labs through the **Authorized Training Centre** (**ATC**) is usually
    terminated, which poses a real challenge for you: how are you going to practice
    your hacking skills when the training course and lab access has ended? Another
    challenge is the fact that practicing hacking techniques on an organization''s
    network is intrusive and illegal.'
  prefs: []
  type: TYPE_NORMAL
- en: This brings us to the importance of building our own personal lab environment
    for practicing and improving our skill set. Furthermore, having our own penetration
    testing lab will allow us to try new attacks, tools, and techniques without worrying
    about being intrusive or creating a security breach in a company network. Most
    importantly, throughout this chapter, you will learn about the importance of building
    and designing a suitable penetration testing lab for practicing various hacking
    techniques on Windows and Linux operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Lab overview
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building our lab
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Nessus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up Android emulators
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Metasploitable 2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To follow along with the exercises in this chapter, please ensure that you
    have met the following hardware and software requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: Oracle VM VirtualBox
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware Workstation Pro
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali Linux 2019.2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nessus vulnerability scanner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android operating system (x86 version 4.4-r4)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metasploitable 2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lab overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we are going to discuss the methodology and components required
    for designing and setting up our own penetration testing lab. To build our lab,
    we are going to build a virtual lab infrastructure to ensure that we are able
    to save money, as opposed to having to buy physical computers and networking equipment.
  prefs: []
  type: TYPE_NORMAL
- en: In the following sections, we will begin our discussion on the importance of
    using virtualization in building our penetration testing lab environment, as virtualization
    plays an important role throughout this chapter and the remainder of the book.
    Afterward, we will dive into installing Kali Linux and creating a virtual network.
  prefs: []
  type: TYPE_NORMAL
- en: Virtualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In my experience as a student, instructor, and professional, when a person is
    embarking on their studies within the field of IT, that individual normally believes
    that a physical lab infrastructure is definitely required. To some extent, this
    is true, but there are many downsides associated with building a physical lab.
  prefs: []
  type: TYPE_NORMAL
- en: 'These downsides include, but are by no means limited to, the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The physical space required to store the many servers and networking appliances
    that are needed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The power consumption per device will result in an overall high rate of financial
    expenditure.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The cost of building/purchasing each physical device, whether it's a network
    appliance or a server.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are just some of the primary concerns of a student or beginner. In most
    cases, a person has a single computer, be it a desktop or laptop machine. The
    conception of **virtualization**, emerging as a response to these downsides, opened
    a multitude of doors in IT and enabled many people and organizations to optimize
    and manage their hardware resources efficiently.
  prefs: []
  type: TYPE_NORMAL
- en: '*What is virtualization and how is it helpful?* The concept of virtualization
    within the IT industry allows organizations to reduce the need for multiple items
    of physical equipment, such as servers and networking and security appliances.
    In the early days of IT, an operating system such as Microsoft Windows Server
    would need to be installed on a single physical device. Usually, a server-like
    device would consist of a high-end processor for the CPU, large amounts of RAM,
    and a lot of storage. However, there would be many times when the hardware resources
    (CPU and RAM) would be underutilized by the host operating system (Microsoft Windows
    Server). This wastage of resources is commonly known as **server sprawl**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows three physical servers, each with their own host
    operating system and hardware resources available:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1535eedf-9d43-410c-b3d3-0be704722be4.png)'
  prefs: []
  type: TYPE_IMG
- en: To quickly view the utilization of your resources on a Microsoft Windows operating
    system, simply open Task Manager and select the Performance tab. The following
    screenshot is a capture of my current device.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can see that CPU, Memory, and other resources are currently underutilized;
    looking closely at the **CPU** and **Memory** graphs, we can see that they are
    not over 80%-90%, and less than 50% of their capacity is being used:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2e27c71a-e62e-44c0-b5da-47827a6653a1.png)'
  prefs: []
  type: TYPE_IMG
- en: What if we were able to run multiple operating systems (such as Windows and
    Linux) on a single physical device? We could definitely utilize virtualization.
    This would enable us to better manage and efficiently maximize the resources available,
    using a component known as a **hypervisor**.
  prefs: []
  type: TYPE_NORMAL
- en: Hypervisors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The hypervisor is the most important component in virtualization. It is responsible
    for creating an emulated environment that a guest operating system uses to function.
    Each type of operating system, irrespective of whether it is designed for a desktop,
    server, network, or mobile device, requires particular hardware components to
    ensure optimal and seamless functioning. This is where the hypervisor works its
    magic to make the impossible happen, allowing you to run multiple different operating
    systems on a single computer.
  prefs: []
  type: TYPE_NORMAL
- en: 'A hypervisor can be installed in one of two ways on a hardware device, which
    will be explored in more detail later in the chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: It can be installed on top of a host operating system, such as Windows, Linux,
    or macOS.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can be installed directly on top of hardware in order to function as the
    native operating system.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A **host operating system** refers to the operating system that is installed
    directly on a device, such as a desktop or a laptop computer running Windows 10\.
    A **guest operating system** is an operating system that is installed within a
    hypervisor (considered to be virtualized).
  prefs: []
  type: TYPE_NORMAL
- en: 'Listed here are the types of hypervisors available:'
  prefs: []
  type: TYPE_NORMAL
- en: Type 1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type 2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next two sections, we will look at the two types of hypervisors and understand
    their similarities and differences.
  prefs: []
  type: TYPE_NORMAL
- en: Type 1 hypervisor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A type 1 hypervisor is sometimes referred to as a **bare-metal hypervisor**
    as it is typically deployed directly onto the hardware of the physical server.
    In this model, any operating system that is installed on the hypervisor has direct
    access to the hardware resources, such as the CPU, RAM, and **Network Interface
    Card** (**NIC**). This model allows each guest operating system to interact directly
    with any hardware component available on the physical device; therefore, rendering
    the deployment model more efficient than the type 2 model.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram illustrates how each guest operating system (virtual
    machine) interacts with the physical hardware components of a single physical
    server chassis through the hypervisor. For example, virtual machines have direct
    access to the physical hardware through the hypervisor:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a975ed87-2cfe-410b-b05d-a03b85ca8fb6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following is a list of both free and commercial type 1 hypervisors:'
  prefs: []
  type: TYPE_NORMAL
- en: VMware ESXi (free)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware ESX (commercial)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microsoft Hyper-V Server (free)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: XCP-ng (free/commercial)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now you have a better understanding of the type 1 hypervisor, let's learn about
    the type 2 hypervisor.
  prefs: []
  type: TYPE_NORMAL
- en: Type 2 hypervisor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In a type 2 hypervisor deployment model, the hypervisor application is installed
    on top of a host operating system rather than on the hardware components directly.
    Examples of host operating systems include Microsoft Windows, the Apple macOS,
    and various flavors of Linux. The hypervisor does not have direct access to the
    hardware resources on the local system, as it would in the type 1 deployment model.
    Instead, the hypervisor in a type 2 deployment interfaces with the host operating
    system to access whatever resources are available. The host operating system usually
    requires a certain amount of resources, such as CPU and RAM utilization, in order
    to function optimally, and the remainder is then provided to the type 2 hypervisor
    for the guest virtual machines.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a diagram illustrating how each component interfaces with
    the other on a single system, such as a desktop or laptop computer. Looking closely,
    each virtual machine has indirect access to the resources (CPU, memory, and so
    on). The operating system will have priority when it comes to hardware resources,
    and what is left is then made available to the running virtual machines:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3976ec0e-72c4-487a-bf9e-49d4b44cd72d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following is a brief list of type 2 hypervisors. Please note that some
    are free while others are commercial:'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Virtual PC (free)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oracle VM VirtualBox (free)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware Player (free)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware Workstation Pro (commercial)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware Fusion (commercial)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parallels Desktop for Mac (commercial)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You may be wondering which hypervisor is the better option—type 1 or type 2?
    Honestly, it really depends on your situation. Personally, I have a type 2 hypervisor
    installed on my laptop with a few virtual machines, which I use for training and
    other situations at remote locations. While at home, I have a type 1 hypervisor
    installed on an Intel NUC in my home lab, which has multiple virtual machines,
    each for a different purpose.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have a better idea of the concepts of hypervisors, let's learn
    about the features of a hypervisor, as that will help us to build a virtual network
    for creating our penetration testing lab.
  prefs: []
  type: TYPE_NORMAL
- en: Additional components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we outline the additional components needed to complete our
    lab, including looking at what virtual switches are and the different types of
    operating systems we are going to use in the lab.
  prefs: []
  type: TYPE_NORMAL
- en: Virtual switches
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You may be wondering, since we are going to create a virtualized lab environment,
    how we are going to create a network to ensure that all the various virtual machines
    have connectivity with one another. Do we need some network cables, a network
    switch, or even other network appliances? Most importantly, we need to ensure
    that our virtual environment is isolated from the rest of our existing network
    and from the internet, as we do not want to be launching an inadvertent attack
    on a public server, as this would be illegal and entail legal complications.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately for us, each hypervisor contains a virtual switch, which provides
    us with a basic layer 2 switching functionality. Some hypervisors provide **virtual
    LAN** (**VLAN**) assignments on their virtual switches, while others do not. Since
    we are proceeding to build an isolated virtual lab, we'll need a single virtual
    switch to connect our attacker machine with the other vulnerable machines.
  prefs: []
  type: TYPE_NORMAL
- en: Operating systems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As a future ethical hacker, penetration tester, or cybersecurity professional,
    it''s recommended that you test various techniques to simulate real-world attacks
    on different types of operating systems. At times, when you are conducting a penetration
    test or performing a vulnerability assessment on an organization''s network and
    servers, you will encounter many different operating systems. We will be using
    the following operating systems in our lab environment, and I''ll provide a download
    link for each operating system:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Windows 10**: [https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise](https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Windows Server 2016**: [https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2016](https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2016)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ubuntu Server**: [https://www.ubuntu.com/download/server](https://www.ubuntu.com/download/server)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kali Linux**: [https://www.kali.org/downloads/](https://www.kali.org/downloads/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Metasploitable**: [https://sourceforge.net/projects/metasploitable/files/Metasploitable2/](https://sourceforge.net/projects/metasploitable/files/Metasploitable2/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OWASPBWA**: [https://sourceforge.net/projects/owaspbwa/](https://sourceforge.net/projects/owaspbwa/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each operating system listed here has a unique purpose in our lab. In the remainder
    of this chapter, we will execute various types of attacks on each.
  prefs: []
  type: TYPE_NORMAL
- en: The Microsoft Evaluation Center ([https://www.microsoft.com/en-us/evalcenter/](https://www.microsoft.com/en-us/evalcenter/))
    allows users to download and test drive any application and operating system available
    on their platform for a period of 180 days while providing full functional support
    for the application of your choice.
  prefs: []
  type: TYPE_NORMAL
- en: The **Open Web Application Security Project** (**OWASP**) ([https://www.owasp.org](https://www.owasp.org))
    has created a virtual machine that allows cybersecurity professionals to execute
    various applications with known vulnerabilities; this is the **OWASP Broken Web
    Applications** (**OWASPBWA**) virtual machine. Metasploitable is a vulnerable
    Linux-based virtual machine created by Rapid7 ([https://www.rapid7.com](https://www.rapid7.com)).
    Its objective is to help people learn about, and practice, penetration testing
    in a safe environment.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we covered the essentials of virtualization—including the core
    component, the hypervisor—and we are now ready to build virtual lab environments
    to support many operating systems and use cases. In the next section, we will
    be looking at putting all the pieces together and building our lab.
  prefs: []
  type: TYPE_NORMAL
- en: Building our lab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now it's time to assemble all the components and configure our own penetration
    testing lab. We'll need to decide what resources are currently available to us
    before choosing a type of hypervisor. If you currently have a single laptop or
    desktop computer, we'll be using a type 2 hypervisor, such as Oracle VM VirtualBox
    or VMware Workstation Pro. As mentioned previously, a type 2 hypervisor deployment
    will allow us to use our existing resources, such as a single laptop or desktop
    computer, to build our virtual lab environment, without being concerned about
    purchasing additional hardware components such as servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin installing our hypervisor, let''s download and install Oracle VM VirtualBox:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to [www.virtualbox.org](http://www.virtualbox.org), then navigate to the
    Downloads section of the website, and choose your platform type based on your
    current operating system:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7dfede74-8f52-42c5-b0f7-c9594da818f3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the application has been downloaded, it''s time to install it. Be sure
    to use the default configurations presented during the installation wizard. Once
    completed, open VirtualBox to ensure that the installation was successful. You
    should be presented with something similar to the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/440f5bc3-85d4-4205-ab1a-067f2cd89c9f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Optionally, if you prefer using VMware Workstation for your lab, it is currently
    available at [https://www.vmware.com/products/workstation-pro.html](https://www.vmware.com/products/workstation-pro.html).
    Once downloaded, proceed to install the application using the default configuration
    during the installation process. Once completed, you should be presented with
    the user interface, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1579471e-2011-4254-9a6a-8fa197a34762.png)'
  prefs: []
  type: TYPE_IMG
- en: If you are using an older version of Oracle VM VirtualBox or VMware Workstation,
    you do not need to upgrade, as the previous editions already contain the features
    required to continue configuring our lab.
  prefs: []
  type: TYPE_NORMAL
- en: One of the most important things about designing a proper penetration testing
    lab is ensuring that we have the optimal network design for interconnecting our
    virtual machines. In the next section, we will cover in detail how to create a
    virtual network using both Oracle VM VirtualBox and VMware Workstation Pro.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a virtual network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following diagram shows the general network topology we are going to use
    in our virtual lab environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a30fc364-0ddf-4ce5-9c17-ea54dcec265d.png)'
  prefs: []
  type: TYPE_IMG
- en: In the upcoming section, we will assign an appropriate IP address to each virtual
    machine within our lab. Each virtual machine is interconnected using a virtual
    switch within the hypervisor. Routers are not required, as this is just a simple
    lab design.
  prefs: []
  type: TYPE_NORMAL
- en: A Windows Server 2008 machine is optional and is not required.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s see how to build a virtual network:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you''re using VirtualBox, click on the menu icon on the right-hand side
    of Tools | Network:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/441a68a2-3a76-44d3-af55-28d7c9391afb.png)'
  prefs: []
  type: TYPE_IMG
- en: A new window will open, giving you the option to Create, Remove, or modify the
    properties of a virtual network adapter. In this exercise, we are going to create
    a new virtual adapter, which will be used to connect each of our virtual machines
    within the hypervisor. This accomplishes the effect of a virtual switch.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on Create to add a new virtual adapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7b45f672-73bf-4783-aa89-384ed85ce319.png)'
  prefs: []
  type: TYPE_IMG
- en: Your host operating system will take a few minutes to create the new virtual
    network adapter on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Once the virtual network adapter has been created, the network manager component
    within VirtualBox will automatically assign an IP address to the interface. However,
    we are going to configure the IP addressing scheme as per our preferences. To
    begin, simply select the virtual network adapter, and then click on Properties
    to modify the configurations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Ensure that you choose the option to configure the adapter manually, using
    the IP address and subnet mask shown in the following screenshot. Click Apply
    to register the configurations on the network adapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d52e26e4-6750-4589-bfa1-a28309a5c367.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Optionally, we can configure the **Dynamic Host Configuration Protocol** (**DHCP**)
    server on the virtual network adapter to provide a range of IP addresses to each
    virtual machine that is connected to this virtual network. If you would like to
    enable the DHCP service, please use the following configurations:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f59b1002-9d54-4640-b227-29b0d2765d4b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'For those of you who prefer VMware Workstation, we''ve got you covered. Configuring
    a virtual network within VMware Workstation is quite simple. Open the VMware Workstation
    application and select Edit | Virtual Network Editor..., as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6d9918e4-9c9b-404a-969a-d3d99f47caf9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The **User Access Control** (**UAC**) on Windows will prompt you for administrator
    privileges. Upon providing the authorization, the Virtual Network Editor window
    will open. As you can see, there are three virtual network adapters present:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f15186bf-eedb-4607-a94d-8821fabc0e3e.png)'
  prefs: []
  type: TYPE_IMG
- en: We are going to modify the VMnet1 virtual adapter. The host-only adapter creates
    a virtual network for all connected virtual machines and the host computer. This
    type of configuration allows all virtual machines to communicate seamlessly while
    isolated and in the absence of an internet connection.
  prefs: []
  type: TYPE_NORMAL
- en: 'To modify the VMnet1 adapter, select the adapter and adjust your configurations,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a2c3a179-8e14-4fdf-b13c-c950113b660e.png)'
  prefs: []
  type: TYPE_IMG
- en: These configurations replicate those executed previously within Oracle VM VirtualBox.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have the knowledge required to build our virtual network using both
    Oracle VM VirtualBox and VMware Workstation Pro, let's begin installing virtual
    machines and setting up Kali Linux in our lab.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Kali Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s set up our first virtual machine, our attacker machine, Kali Linux.
    The Kali Linux operating system is a Debian-based Linux platform consisting of
    over 300 tools for both penetration testing and forensics. It''s one of the most
    popular platforms used by penetration testers as it contains many features and
    considerable functionality, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Full-disk encryption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support for **Linux Unified Key Setup** (**LUKS**) encryption with emergency
    self-destruction (Nuke)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessibility features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Forensics mode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Live USB with multiple persistence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To get started, Kali Linux can be found at the official website ([www.kali.org](http://www.kali.org))
    and at the Offensive Security domain ([https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/](https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/)).
    There are many methods when it comes to setting up Kali Linux, such as installing
    from an ISO file and importing a virtual preconfigured image into a hypervisor.
    For our setup procedure, we are going to use the latter approach. Importing the
    virtual appliance is seamless and takes very little time; it also avoids the chances
    of misconfiguration that come with installation using an ISO file.
  prefs: []
  type: TYPE_NORMAL
- en: 'In my personal experience, setting up Kali Linux using the preconfigured virtual
    image also works more efficiently in most situations. To get started, we can take
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to [https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/](https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/)
    and download either the 32-bit or 64-bit Kali Linux VMware image, based on your
    operating system architecture. Choose either the VMware or the VirtualBox image,
    based on the vendor of your hypervisor software:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4fce2d67-efca-4c58-9790-9a7160cf2f92.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Whether you''ve downloaded the VirtualBox or VMware image, ensure that you
    unzip the contents. If you''ve downloaded the VirtualBox image, within the folder
    there will be a file with a similar naming convention, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f2a47a81-80aa-433a-a21d-3eb3c7f6f393.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can right-click on File and choose Open with | VirtualBox Manager:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/034daf01-e49e-4d2f-8dff-5f7e7c02591a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, the **Import Virtual Appliance** wizard will appear. Simply click on
    Import. The importing process will take a few minutes to complete:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5577fb02-c687-4f72-bae1-35db653fed03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the importing process is complete, you''ll see your new virtual machine
    available on the VirtualBox dashboard:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d9d782b0-c874-4aed-a597-d48bd893fd8b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Import Kali Linux into VMware Workstation. Ensure that you''ve downloaded and
    unzipped the virtual image folder. The following are the contents of the extracted
    folder. Right-click on the highlighted file shown in the following screenshot,
    and choose Open with | VMware Workstation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0291999b-06ff-4139-848f-3ecb7ec08246.png)'
  prefs: []
  type: TYPE_IMG
- en: 'VMware Workstation will then open, providing the Import Virtual Machine window.
    Click on Import:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5ebd2e79-0f7b-4145-8c02-27018ac1a4a7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This process should take a few minutes to complete. Once complete, the new
    virtual machine will be available in your library on VMware Workstation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e7451c83-6dce-4560-932a-712d53a4f87c.png)'
  prefs: []
  type: TYPE_IMG
- en: The benefit of importing a virtual image over manually installing an operating
    system using an ISO image is that all the configuration is done automatically.
    Configuration would include creating a virtual hard drive for storage and the
    assignment of resources, such as a processor, RAM, and NIC. Importing a virtual
    image eliminates the chances of any misconfigurations during the installation
    phase. Once the importing phase is complete, the user can subsequently make adjustments
    to the individual virtual machine, such as increasing or reducing the resources
    per virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: Attaching the virtual network to a virtual machine
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this point, we have created our virtual network adapter and imported Kali
    Linux into our hypervisor. It's now time to attach our attacker machine, Kali
    Linux, to our virtual network (virtual switch).
  prefs: []
  type: TYPE_NORMAL
- en: 'Firstly, I''ll guide you through the steps to configuring the hardware resources
    through Oracle VM VirtualBox:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the Kali Linux virtual machine and click on Settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/071ef45e-7506-438b-82ef-1c73a8841ef5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the settings window has opened, select the Network option. Here, you''ll
    be able to enable/disable network adapters on the current virtual machine. Select
    the Host-only Adapter option, and the virtual network adapter will be automatically
    selected underneath:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a476e3b9-a38a-4222-b16c-afe3f76c2777.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we are going to make the same adjustments on VMware Workstation. Firstly,
    click on Edit virtual machine settings on the Kali Linux virtual machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1fb9fb58-0907-48d2-b7da-7498a0fd26df.png)'
  prefs: []
  type: TYPE_IMG
- en: The Virtual Machine Settings window will open. Here, you can customize the settings
    on any hardware component within the hypervisor menu.
  prefs: []
  type: TYPE_NORMAL
- en: 'Select Network Adapter, and then choose Custom: Specific virtual network |
    VMnet1 (Host-only):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0a161fdf-5df6-438e-bf9f-b611315fd184.png)'
  prefs: []
  type: TYPE_IMG
- en: Remember that the VMnet1 adapter has our custom IP scheme.
  prefs: []
  type: TYPE_NORMAL
- en: We can power on our Kali Linux virtual machine to ensure that it is working
    properly. The default username/password for Kali Linux is `root`/`toor`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you''ve successfully logged in, you''ll have access to the desktop:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/333fcc43-362c-42a2-8d58-f15216c94cd1.png)'
  prefs: []
  type: TYPE_IMG
- en: Now we have a clear understanding of how to set up a virtual machine within
    Oracle VM VirtualBox and VMware Workstation, and how to configure a virtual network
    within each hypervisor application. Let's move on to setting up additional applications
    and other types of virtual machines within our lab.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Nessus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you get into the field of penetration testing and vulnerability assessment,
    one tool you must be familiar with using is **Nessus**. Nessus is one of the most
    popular vulnerability assessment tools available on the market. The Nessus application
    is controlled using a web interface that allows its users to create customized
    scans. Additionally, Nessus contains prebuilt scanning templates for various types
    of industries, such as the **Payment Card Industry** (**PCI**) compliance scanner.
  prefs: []
  type: TYPE_NORMAL
- en: Tenable, the creator of Nessus, has indicated that Nessus is capable of detecting
    over 47,000 **common vulnerabilities and exposures** (**CVE**). As a future ethical
    hacker/penetration tester, using Nessus during your security auditing phase will
    aid you significantly in discovering security vulnerabilities quickly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nessus is supported on many platforms, such as Windows and Kali Linux. The
    **Nessus Home** edition is free for personal use, and is capable of scanning up
    to 16 IP addresses per scan. To get the Nessus Home edition, simply go to [https://www.tenable.com/products/nessus-home](https://www.tenable.com/products/nessus-home)
    and complete the registration form in order to obtain an activation license. After
    registration, you''ll be redirected to the download center, where you can choose
    a suitable version for your platform:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/484d38d9-45a0-4260-a68b-95012d35a646.png)'
  prefs: []
  type: TYPE_IMG
- en: If you're installing Nessus on a Windows operating system, the procedure is
    quite simple. Download the Windows executable file, and run it.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, to install Nessus on Kali Linux, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open Terminal and run the following commands to upgrade all currently installed
    applications on the platform:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Obtain an activation code from Tenable by completing the registration form at
    [https://www.tenable.com/products/nessus/nessus-essentials](https://www.tenable.com/products/nessus/nessus-essentials)[.](https://www.tenable.com/products/nessus/nessus-essentials)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Navigate to the Nessus Downloads page at [https://www.tenable.com/downloads/nessus](https://www.tenable.com/downloads/nessus)
    and download either the 32-bit or the 64-bit version, based on your operating
    system architecture:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cb5164ef-2eaa-45d8-8cfb-2ea500f43c1b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once Nessus has been downloaded on Kali Linux, open Terminal, change the directory
    to the `Downloads` folder, and begin installation using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of running the preceding command is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7211af98-3be5-4c1e-a901-2e42ea844f6a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the installation is complete, use the following command to start the Nessus
    service on Kali Linux:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Optionally, if you would like the Nessus service to start automatically during
    the Kali Linux boot process, the following command can be used to enable this
    feature:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the installation has been completed on Kali Linux, enter `https://localhost:8834/`
    into your web browser. At this point, you''ll be prompted to create a user account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/aa5898fc-715d-4eb0-8a84-4975080a242b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, you''ll be prompted to enter your Nessus license to activate the product.
    You''ll need the activation code from *step 2* to complete this stage:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b618d846-80cf-439f-9319-10abbdb829fa.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After completing the activation phase, Nessus will attempt to connect to the
    internet to download additional resources. This process should take a few minutes
    to complete:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ef680084-5db7-4edb-a89d-a52ec4ce3498.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you''re logged in, your user dashboard will be available. Here, you can
    create new scans and templates and modify existing resources as per your preferences:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/12df5508-3901-461a-84c4-e619b7aeb42e.png)'
  prefs: []
  type: TYPE_IMG
- en: During the course of this book, we'll be exploring the capabilities of Nessus
    during our penetration testing phases.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you are now able to install and set up the Nessus
    vulnerability scanner on Kali Linux. In the next section, you will learn how to
    install Android as a virtual machine within your lab environment.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Android emulators
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Being a penetration tester and/or ethical hacker, you'll encounter a lot of
    different types of targets and operating systems in the field. One type of operating
    system that has made its way into the field of cybersecurity is the mobile platform
    Android. In this section, we will discover how to set up the Android operating
    system version 4.4 as a virtual machine that will be part of your penetration
    testing lab environment.
  prefs: []
  type: TYPE_NORMAL
- en: Note that [www.osboxes.org](http://www.osboxes.org) has a repository of virtual
    images of almost every type of operating system, including desktop, server, and
    even mobile operating systems. This website allows you to download a virtual image
    of your choice and simply load it seamlessly into a hypervisor, such as Oracle
    VM VirtualBox or VMware Workstation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s learn how to create a virtual Android machine within your penetration
    testing lab:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, go to [https://www.osboxes.org/android-x86/](https://www.osboxes.org/android-x86/)
    to download the Android mobile operating system for your lab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Search for the Android-x86 4.4-r4 version and download either the VirtualBox
    or the VMware virtual image for your hypervisor:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a5e5d6eb-7f69-479e-a2b6-ec85611fec82.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the file has been downloaded onto your desktop computer, extract the zipped
    folder to view the contents.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, right-click on the `.ovf` file and choose the Open with option, then
    select the VMware or VirtualBox options, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/af785a1a-ad64-43a9-97cb-166d8ff92360.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The import wizard will appear. Select Import to begin the process:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d4bd2e82-30df-4dce-b666-c6e7c6e54d3e.png)'
  prefs: []
  type: TYPE_IMG
- en: The importing process takes a few minutes to complete and the new Android virtual
    machine will appear in your hypervisor library.
  prefs: []
  type: TYPE_NORMAL
- en: 'I have chosen to use the following configuration on my Android virtual machine.
    However, you have the option to either increase or decrease the resources on your
    virtual machine as you see fit. Ensure that the virtual network adapter is assigned
    to Custom (VMnet1), as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/68846193-dd69-4f5c-b7b3-4f3b69a20ae9.png)'
  prefs: []
  type: TYPE_IMG
- en: After booting your Android virtual machine, you'll be presented with an interface
    once it's fully loaded. The full functionality of Android 4.4 is available within
    your virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the Android virtual machine is powered on, it acts as a real, physical
    Android device on your lab network. This simulates an environment that not only
    has typical operating systems, such as Windows and Linux, but also mobile platforms,
    such as Android. Now that you have a virtual Android machine within your lab,
    let's take a look at setting up a vulnerable Linux-based virtual machine in the
    next section.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Metasploitable 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As mentioned previously, the Metasploitable virtual machine was created by
    the team at Rapid7 ([www.rapid7.com](http://www.rapid7.com)) for the purpose of
    cybersecurity awareness and training. In this section, I''ll walk you through
    the steps involved in setting up a Metasploitable virtual machine in your lab:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, you need to download the virtual image file from [https://sourceforge.net/projects/metasploitable/files/Metasploitable2/](https://sourceforge.net/projects/metasploitable/files/Metasploitable2/).
    Once downloaded to your computer, extract the ZIP folder to view the contents.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, right-click on the following highlighted file, and either choose the
    option to import or open with a hypervisor of your choice:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4d18d025-72a8-4b60-9734-855b775b22a3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the importing process has finished, the new virtual machine will appear
    in your library in the hypervisor (VirtualBox or VMware). Ensure that the network
    adapter is set to Custom (VMnet1), just like the virtual network for our lab is:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e3128c81-18a8-406a-a6fa-bf2ca3d2668c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To test the virtual machine, power it on, and let it boot. Once the boot process
    is complete, you''ll see that the login credentials (username/password) are part
    of the system banner, `msfadmin/msfadmin`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/eeec9d9d-8ccb-4b6f-9290-76a400216dc8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Log in to the virtual machine using the credentials, and use the `ifconfig`
    command to verify that it has a valid IP address:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/42a7c601-29a6-4e57-9e4f-8532023f1e40.png)'
  prefs: []
  type: TYPE_IMG
- en: For each virtual machine, ensure that you have taken a record of the IP addresses.
    The IP addresses I'll be using during the remaining chapters of the book may be
    a bit different to yours, but the operating systems and virtual machine configurations
    will be the same.
  prefs: []
  type: TYPE_NORMAL
- en: You now have a vulnerable Linux-based operating system in your lab. It's always
    recommended to have a mixture of various target operating systems in a lab when
    practicing penetration testing techniques and honing your skills. This method
    allows you to learn how to perform attacks on a variety of different targets,
    which is important since a corporate network usually has a blend of many different
    devices and operating systems. You don't want to be in a penetration test engagement
    where the target organization has mostly Linux devices but you're skills are geared
    toward only Windows-based systems; this would be a bad sign for you as a penetration
    tester! Therefore, emulating a corporate network in a lab as closely as possible
    will help you to improve your skills.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we opened with a discussion of the importance of having our
    own isolated lab environment for practicing offensive security training. We delved
    into the concepts of virtualization and looked at how it's going to help us now
    and in the future. Later in the chapter, we covered configuring a virtual network
    on both Oracle VM VirtualBox and VMware Workstation, as these networks will be
    used to interconnect all of our virtual machines (our attacker and victim machines).
    We then walked through deploying Kali Linux and Android to our penetration testing
    lab.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have a fundamental understanding of designing and building our lab
    environment, let's continue deploying both Windows and Linux-based operating systems
    in our next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which type of hypervisor is installed on top of a host operating system?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are some of the benefits of virtualization?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are some examples of free hypervisors?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How is an offline package/application installed in Kali Linux?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is an operating system within a hypervisor usually called?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following links are recommended for additional reading:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Kali Linux documentation**: [https://docs.kali.org/](https://docs.kali.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Nessus user guide**: [https://docs.tenable.com/Nessus.htm](https://docs.tenable.com/Nessus.htm)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtualization**: [https://www.networkworld.com/article/3234795/what-is-virtualization-definition-virtual-machine-hypervisor.html](https://www.networkworld.com/article/3234795/what-is-virtualization-definition-virtual-machine-hypervisor.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
