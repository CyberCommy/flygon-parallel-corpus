- en: Chapter 10. Looking Forward
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we have discussed various techniques that help in
    security testing with Python modules and frameworks. Other than that, there are
    many tools written in Python that may help in your day-to-day work. Here, we will
    discuss some of the tools that can be used in your work, or you can extend them
    to match your requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Pentestly
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Pentestly** is a union of many Python tools for penetration testing. Pentestly
    utilizes the power of Python and Powershell together to create a familiar user
    interface.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Tools incorporated in Pentestly are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Invoke-Mimikatz.ps1`: With this tool, we can easily implement Mimikatz (a
    great post-exploitation tool) in Powershell.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Invoke-Shellcode.ps1`: This tool deploys Meterpreter in Powershell'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wmiexec.py`: This tool help us to execute Powershell commands quickly via
    Windows Management Instrumentation (WMI).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`recon-ng`: For data manipulation, recon-ng (a backend database) is beautifully
    made and leveraged.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`smbmap.py`: This tool helps to enumerate SMB shares.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`powercat.ps1`: This tool provides Netcat-esque functionality in Powershell'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Read more on Pentestly at, [https://github.com/praetorian-inc/pentestly](https://github.com/praetorian-inc/pentestly).
  prefs: []
  type: TYPE_NORMAL
- en: Twisted
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Twisted** is an extensible framework in Python with a focus on event-driven
    network programming. Twisted has multiprotocol integration that includes HTTP,
    FTP, SMTP, POP3, IMAP4, DNS, IRC, MSN, OSCAR, XMPP/Jabber, telnet, SSH, SSL, NNTP,
    Finger, ident, and many more. Hence, it helps to quickly implement most of the
    custom server/services network applications.'
  prefs: []
  type: TYPE_NORMAL
- en: All the features in Twisted have a cooperating API. Also, none of the functionality
    is implemented by blocking the network, so we don't need to use threading. Twisted
    can handle thousands of connections in a single thread.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the modules included in Twisted are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`twisted.web`: Used for HTTP clients and servers, HTML templating, and a WSGI
    server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`twisted.conch`: Used for SSHv2 and Telnet clients and servers and to create
    terminal emulators.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`twisted.words`: Used to create IRC, XMPP, and other IM protocols, clients,
    and servers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`twisted.mail`: Used for IMAPv4, POP3, SMTP clients, and servers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`twisted.positioning`: Helps to create tools for communicating with NMEA-compatible
    GPS receivers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`twisted.names`: For DNS clients and tools for making DNS servers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`twisted.trial`: A unit testing framework that integrates well with Twisted-based
    code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Read more on Twisted at, [http://twistedmatrix.com/documents/current/index.html](http://twistedmatrix.com/documents/current/index.html).
  prefs: []
  type: TYPE_NORMAL
- en: Nscan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Nscan** is a fast network scanner optimized for Internet-wide scanning. Nscan
    uses Raw sockets to send TCP SYN probes and has its own tiny TCP/IP stack. Nscan
    helps to extend our scan by chaining the IP and port found to another script where
    they might check for vulnerabilities, exploit targets, proxies or VPNs, and more.
    Nscan is a port scanner in itself, which use `Connect()` method to find a list
    of host open ports.'
  prefs: []
  type: TYPE_NORMAL
- en: Nscan is different from other port scanners due to its flexibility and speed.
    The maximum speed of previous versions was around 500 ports per second. But the
    maximum speed of port scanning mainly depends upon the bandwidth of the network
    and the processing speed of the system.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Read more on Nscan at, [https://github.com/OffensivePython/Nscan](https://github.com/OffensivePython/Nscan).
  prefs: []
  type: TYPE_NORMAL
- en: sqlmap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**sqlmap** is one of the most popular and powerful SQL injection automation
    tools written in Python. It''s the most powerful hacking tool out there: an open
    source project that can detect and exploit SQL injection vulnerabilities with
    its powerful detection engine. With a given vulnerable `http request url`, sqlmap
    can do lot of hacking and exploit remote databases to extract various database
    elements.'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Read more on sqlmap at, [http://sqlmap.org](http://sqlmap.org).
  prefs: []
  type: TYPE_NORMAL
- en: CapTipper
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**CapTipper** is a Python tool used to analyze and discover malicious HTTP
    traffic. It can also help to analyze and revive captured sessions from PCAP files.
    CapTipper builds a web server that works exactly as the server in the PCAP file.
    It also includes internal tools with a powerful interactive console for the evaluation
    and inspection of the hosts, objects, and conversations found. Thus, the tool
    equips provides access to the files and the understanding of the network flow
    for the security tester. It is helpful when studying exploits. CapTipper allows the
    security tester to analyze the behavior of the attack, even after the original
    server is already dead.'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Read more on CapTipper at, [https://github.com/omriher/CapTipper](https://github.com/omriher/CapTipper).
  prefs: []
  type: TYPE_NORMAL
- en: Immunity Debugger
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Immunity Debugger** is a Python debugger for Windows with GUI and command-line
    interfaces. The command-line interface allows the user to type shortcuts as if
    they were in a typical text-based debugger, and it is available at the bottom
    of the GUI. Commands can be extended in Python.'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Read more on Immunity Debugger at, [https://www.immunityinc.com/products/debugger/](https://www.immunityinc.com/products/debugger/).
  prefs: []
  type: TYPE_NORMAL
- en: pytbull
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: pytbull is a Python-based flexible framework for testing **Intrusion Detection/Prevention
    Systems** (**IDS/IPS**). It is well equipped, with around 300 tests that are grouped
    into 9 modules mainly concentrated on Snort and Suricata. It covers large types
    of attack such as clientSideAttacks, testRules, badTraffic, fragmentedPackets,
    multipleFailedLogins, evasionTechniques, shellCodes, denialOfService and pcapReplay.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Read more on pytbull at, [http://pytbull.sourceforge.net/](http://pytbull.sourceforge.net/).
  prefs: []
  type: TYPE_NORMAL
- en: ghost.py
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**ghost.py** is scriptable web client written in Python for webkit.'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Read more on ghost.py at, [http://jeanphix.me/Ghost.py](http://jeanphix.me/Ghost.py).
  prefs: []
  type: TYPE_NORMAL
- en: peepdf
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: peepdf is a Python tool that analyzes PDF files to find out if the file is harmful
    or not. The goal of peepdf is to equip all the required components that a penetration
    tester needs in a PDF analysis. peepdf helps us to see all the objects in the
    document and shows the suspicious elements. It also supports the most commonly
    used filters and encodings. It can also parse different versions of a PDF file,
    object streams, and encrypted files. It also helps to create, modify, and obfuscate
    PDF files.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Read more on peepdf at, [http://eternal-todo.com/tools/peepdf-pdf-analysis-tool](http://eternal-todo.com/tools/peepdf-pdf-analysis-tool).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The preceding pages covered a variety of concepts and Python tools to acknowledge
    various situations, starting from basic Python. After finishing this book, return
    to the previous chapters and think how can you modify the scripts and integrate
    them with other tools and script them to suit your own needs. You can make them
    more effective and efficient for your security testing.
  prefs: []
  type: TYPE_NORMAL
- en: With this chapter, our journey of pentesting with Python has come to an end.
    In this book, we have gone through analyzing networks, debugging applications,
    and automating attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Learning is a never-ending process in this ever-changing IT world. We recommend
    to keep yourself updated about the advancements in the field of pen-testing and
    the tools related to it. Please go to the following link to keep up with the latest
    tools written in Python for pentesting: [https://github.com/dloss/python-pentest-tools](https://github.com/dloss/python-pentest-tools).
  prefs: []
  type: TYPE_NORMAL
- en: I hope this book helps you soar to new heights of excellence in pentesting.
  prefs: []
  type: TYPE_NORMAL
