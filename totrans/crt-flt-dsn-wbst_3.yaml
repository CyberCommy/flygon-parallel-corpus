- en: Chapter 3. Creating a Flat and Usable Interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter will cover web usability on flat design and how important this
    is for the functioning of every website and web application's design in flat design,
    since this style may create several usability problems given its simple look.
    We will cover this by understanding what web usability is and by learning to design
    a web form with usability in mind, learning which elements and what the designer
    needs to pay attention to, to successfully create a usable interface.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding web usability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Jakob Nielsen, a web usability consultant and usability expert, defines usability
    in the website, [http://www.nngroup.com/articles/usability-101-introduction-to-usability/](http://www.nngroup.com/articles/usability-101-introduction-to-usability/),
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"Usability is a quality attribute that assesses how easy user interfaces are
    to use. The word usability also refers to methods for improving ease-of-use during
    the design process."*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this case, web usability relates to the good functioning of a website and
    how easy and predictable it is for the user. We, as designers and developers,
    assume that for most people using a website is easy and a skill that is already
    considered natural, but this is not an assumption that you should make. On the
    contrary, when designing a website or an interface, you must assume that the user
    doesn't have prior experience in using them. An interface must be designed in
    such a way that it is intuitive and easy to use, even for a first-time user.
  prefs: []
  type: TYPE_NORMAL
- en: All elements must be visually identifiable. Elements such as links, forms, text
    fields, and buttons must be easily distinguishable. For instance, a link is historically
    and usually represented—as it was defined on the first version of HTML—by a blue
    underlined word in a block of text, but this is not always the case, mainly due
    to customization and color scheming created by web designers. This means that
    even without using this standard notation of a hyperlink, there should be a simple
    way for the user to identify this element in a block of text. It has to be natural,
    and the user must understand this by himself or herself, without the need for
    any explanation. Usually, this is done by keeping the underline in the word and
    changing the color to a color that contrasts with the text color. The underline
    can be replaced by bold text effect to clarify that this specific word is different
    from the regular reading text.
  prefs: []
  type: TYPE_NORMAL
- en: The rollover effect is also very important. When hovering the mouse cursor over
    the word, the user detects a difference in the word; sometimes, the underline
    disappears or there's a bold effect applied to the word. However, regardless of
    the effect or style chosen, there's a visual change in the link. This change is
    what's responsible for giving the user the feeling that this specific element,
    which responds to interaction, is considered an important element that will have
    more functions than just simple text, as is the case with a hyperlink, which will
    take the user to a different page.
  prefs: []
  type: TYPE_NORMAL
- en: This is the kind of thought that the user goes through when visiting a web page,
    and this is one example of how usability works in web design. Usability is even
    more important when talking about a web or mobile app, since in this case, there
    is a specific user journey that must exist to allow the user to accomplish certain
    tasks. This is because the app is a tool with a specific objective. However, in
    a website, the content is to be accessed depending on the interest of the visitors
    and their own objectives.
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, the importance of usability is often disregarded, but it should
    always be a part of your work in every web design project. It is especially important
    in flat given its look, but why is usability important?
  prefs: []
  type: TYPE_NORMAL
- en: The importance of web usability
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Usability is important for several reasons. The first and foremost reason being,
    usability guarantees that your website *just works*.
  prefs: []
  type: TYPE_NORMAL
- en: When creating any given project, there's always an objective. Usually the objective
    is to inform the visitor by showing images and text content, but it can also be
    to sell a product or service or even provide a service directly in the case of
    a web application. Regardless of what kind of objective it is, there is always
    one. Usability is the tool for you and the designer to make sure that everything
    works so that you achieve that objective. By making sure that the user understands
    the website navigation or by clarifying an action by pressing a button, you're
    making it easier and more probable that a user will follow the expected user journey.
  prefs: []
  type: TYPE_NORMAL
- en: If you're running a commercial website, this is especially important, because
    it will have a direct impact on your revenue and can be the difference between
    a successful or failed online business. In one case, a website made an additional
    300 million dollars in a year just by changing a simple button ([http://www.uie.com/articles/three_hund_million_button/](http://www.uie.com/articles/three_hund_million_button/)).
    This definitely makes a big case for usability.
  prefs: []
  type: TYPE_NORMAL
- en: Having usability in mind when designing a website is often the difference between
    keeping and losing a visitor. If the user doesn't understand the website or if
    they can't easily find what they're looking for, frustration kicks in, and the
    user will leave, to look for that piece of content elsewhere. You probably know
    this feeling, when you are looking for something that is incredibly hard to find
    in a confusing website. Try to imagine what your users will think when using a
    website and make sure that you avoid all the frustrations that might arise.
  prefs: []
  type: TYPE_NORMAL
- en: If you feel that you already had the basic usability problems and still believe
    that you could improve your work, you probably need to start testing. One of the
    the best tools to understand what is failing in your website is user testing,
    that is, sitting down with a user and going through the website with him or her
    and learning from his or her feedback.
  prefs: []
  type: TYPE_NORMAL
- en: There are a lot of different ways to test a website, and if you're interested
    in learning more about web usability, I definitely recommend Jakob Nielsen's book,
    *Designing Web Usability*, available on Amazon at [http://www.amazon.co.uk/Designing-Web-Usability-Practice-Simplicity/dp/156205810X](http://www.amazon.co.uk/Designing-Web-Usability-Practice-Simplicity/dp/156205810X).
  prefs: []
  type: TYPE_NORMAL
- en: Achieving a good balance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OK, so now that we covered what web usability is and you know how badly it can
    affect a website's visitor, I want you to take a step back, relax, and not panic.
    You're probably already avoiding most of the larger usability issues just by using
    common sense as any designer making decisions for a specific design should do.
    We don't want to make a website so clear and foolproof that it lacks style and
    color. After all, innovation comes from being bold and trying different things.
  prefs: []
  type: TYPE_NORMAL
- en: This being said, your ultimate objective is to achieve a good balance between
    a really great-looking website and a functional one. Most of the times, usability
    is just about organization and common sense, and this is a way of working rather
    than a technique to be applied. A more innovative interface will be harder to
    use in the beginning, but the designer can choose to take this risk to achieve
    a different experience. However, if you're looking at playing safe, try to focus
    on known and familiar types of layouts and simple designs.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, usability improvements are achieved by making really small and simple
    adjustments to a website's design.
  prefs: []
  type: TYPE_NORMAL
- en: There are several designers proposing redesigns of well-known websites, and
    most of them focus on simplifying the current layouts by reorganizing, simplifying,
    or even redesigning elements. Reorganization and simplification of elements is
    a great exercise, because it makes you understand which elements are really important
    on a design and which are merely decorative.
  prefs: []
  type: TYPE_NORMAL
- en: The Swedish agency Weare1910 ([http://weare1910.com/](http://weare1910.com/))
    created a redesign proposal for Wikipedia ([http://en.wikipedia.org](http://en.wikipedia.org)),
    where they redesign the website to focus more on the content while simplifying
    the design at the same time. This was done by vastly improving typography by making
    the text as well as the line height larger and improving the readability of the
    articles, while at the same time, simplifying the layout by removing the menu
    on the left-hand side. This created a simpler but identifiable version of the
    Wikipedia website. The following screenshot ([http://blog.weare1910.com/post/75576312730/a-readable-wikipedia](http://blog.weare1910.com/post/75576312730/a-readable-wikipedia))
    shows Wikipedia (at the top) and its redesign (at the bottom).
  prefs: []
  type: TYPE_NORMAL
- en: '![Achieving a good balance](img/0048OS_03_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Wikipedia (top) and redesign (bottom). Available at http://blog.weare1910.com
  prefs: []
  type: TYPE_NORMAL
- en: So, to have a clear look at this, let's do a small exercise of simplifying a
    design. I chose the homepage of the *Transport for London* website, since it's
    an older website, and its design is still very clunky and looks really cluttered.
    This is in no way a serious redesign but just a way of learning how some simplification
    on a design creates a lighter and more readable page.
  prefs: []
  type: TYPE_NORMAL
- en: First, let's get the original website on which we can work. You can open the
    `tfl-redesign.psd` file provided with this book and work on it.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at http://www.packtpub.com. If you purchased this book elsewhere,
    you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'With the file open, let''s identify which blocks to work on. Focus just on
    the content section and ignore the bar on the right-hand side. We will divide
    the website into three main sections: the main highlights section, the middle
    section with oyster charges and Barclays information, and the last section with
    other news and important information. These are the sections we will redesign.
    The following screenshot shows the old TFL website (www.tfl.gov.uk) on the left-hand
    side and the main content sections that are identified on the right-hand side:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Achieving a good balance](img/0048OS_03_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: TFL website [www.tfl.gov.uk](http://www.tfl.gov.uk) (left) and main content
    sections identified (right)
  prefs: []
  type: TYPE_NORMAL
- en: With our sections identified and highlighted, let's start replacing this with
    our content. For the first section, create similar titles and body texts and overlay
    the current design so that we can align the content in the same element.
  prefs: []
  type: TYPE_NORMAL
- en: So, rewrite the titles of the first section. You can use the Lato font to do
    this. Set the size of the text to 13 pt the weight of the titles to black, to
    set these apart from the description text. The first two blocks are disabled,
    so let's set the color of the text as gray (`#979797`). This will give the look
    of a faded black color and will visually hint that these blocks are disabled,
    in contrast to the enabled and active one. Since we are removing the blue background,
    we can't keep the text white. So set the active line title as blue; just pick
    the color of the background and set the bottom line as black.
  prefs: []
  type: TYPE_NORMAL
- en: 'You now have the content of the first section. Just select the image and delete
    it and paint that part white to match the background. To improve the division
    between these section content lines, let''s create some dividing lines. Create
    two lines of 1 px weight in between the texts and set it as gray (`#dcdcdc`).
    This will help define the blocks visually while still keeping them very simple
    and light, as is evident in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Achieving a good balance](img/0048OS_03_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Moving on to the next section, let''s do the same and replace the text by overlaying
    it. Copy the color of the same text and ignore the green triangle. Align the text
    to the left of the block and delete the image and text that were there before.
    The following screenshot shows how the page should look after doing all this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Achieving a good balance](img/0048OS_03_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Do the same for the final section, aligning the title with the top of the image
    and keeping the same colors. The final result will look similar to the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Achieving a good balance](img/0048OS_03_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have all the sections simplified, we can already tell that the
    page looks lighter and cleaner. However, without the lines and boxes, the content
    seems less congested. So, we need to give a larger spacing between the blocks,
    to make them visually separated. Just pull down some pixels of sections two and
    three, and it will be enough to give the feeling of different sections. The result
    of the simplified TFL website will look similar to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Achieving a good balance](img/0048OS_03_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can see a clear improvement in the result of these simple changes. In fact,
    the changes were no more that just removing the background images and nonessential
    images from the layout in a way that the content defines the block instead of
    boxes and lines. This led to the creation of more whitespace and made the website
    lighter. This is evident in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Achieving a good balance](img/0048OS_03_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Web forms usability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we said earlier, usability is extremely important in a flat design. The element
    that suffers more on the usability front from this style is usually the **web
    form**. It is usually so easy to match controls such as buttons and text fields
    to match the flat styles that they lose the effects and features that make them
    identifiable. A text field is usually represented by a rectangular box with a
    subtle inner shadow to show that it is expecting content. This shadow is often
    lost in flat design, and to avoid this, we need to make sure that a form is identifiable
    as a form. There are several ways of doing this. The best way to do this is by
    laying your hands on it, so let's do a simple exercise on web forms usability.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will create a simple sign-up form for a website. To do this, we will
    use the `ele_winvista_firefox_all.psd` file, which is available on the resource
    pack that accompanies this book. It is also available online at [http://designerstoolbox.com/designresources/elements/vista/firefox/](http://designerstoolbox.com/designresources/elements/vista/firefox/).
  prefs: []
  type: TYPE_NORMAL
- en: This file is a browser form template, with the elements that you'd find when
    creating a basic HTML form rendered in Firefox. So, let's begin.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a web form with regular browser styles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s execute the following steps to create a web form:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new file of size 350 x 350 px in Photoshop. We will create our form
    in this file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a text field with the text `Name`. This field will serve as the title
    template for the remaining fields. You can define the font as Arial and set the
    size to 14 pt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that you have the title, copy the **Input Field** folder from your template
    file into your new document. Align them side by side with the title on the left-hand
    side and the text field on the right-hand side, as shown in the following screenshot:![Creating
    a web form with regular browser styles](img/0048OS_03_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We need to organize our file and save the title and field in a folder with the
    name corresponding to the field. Duplicate the `name` folder and let's change
    it to `Age`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, let's create a `Gender` field. To do this, we are going to use the template
    for the pull-down list and assign it with a title of its own.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's assume that we're creating a form for a blog, so we will need an account
    type selector. We'll then create a field named `Account`, with radio buttons.
    Copy the `Selected Radio Button` and `Unselected Radio Button` folders and change
    the text to `Author` and `Reviewer`, respectively. These are the two different
    account statuses that the blog will have, with different permissions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To finish, copy the `Button` folder into your file and align it to the right.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Our standard form is completed! This is how a simple HTML form would look in
    a Firefox browser, and this is one of the standard looks. You should end up with
    a design like the following screenshot:![Creating a web form with regular browser
    styles](img/0048OS_03_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That's it, pretty simple right? However, it's a pretty standard, "not exciting"
    look. So, next let's try it out with some flat design style.
  prefs: []
  type: TYPE_NORMAL
- en: Recreating the form with flat style
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have our basic form, we need to recreate the elements to match
    the flat design look. To do this, let''s use the font we used earlier, Lato, and
    recreate the form using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Duplicate the file we created and name it `flat-form.psd`. We will use the file
    that we created earlier as our foundation to create this new form.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the font of the title to Lato and set its size to 15 pt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For the text field, create a 190 px wide and 35 px high white rectangle. This
    will be our new flat text field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a blending option such as stroke to this rectangle. The stroke should be
    of size 1 px and positioned inside the rectangle. We don't want the border to
    be very strong; we want it to be subtle and lighter than the text. So, let's define
    its color as `#aeaeae`. This light gray will work great on top of white and with
    black text.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, let's just create our filler text like we had earlier and change its size
    to 13 pt; we just made our first flat form element. It should look like the following
    screenshot:![Recreating the form with flat style](img/0048OS_03_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Duplicate the new field to use it for `Age` and `Gender`. On `Gender`, we can
    use the same rectangle, but we're going to add a small triangle to indicate that
    it's a pull-down list. To create this triangle, we will use the Polygon Tool (U)
    and create a shape with three sides. Set the triangle as black or the same gray
    of the border (`#aeaeae`), and the pull-down button is created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is a personal option and it depends on your taste. To create a greater
    focus on the button, we can use the inverted option of the button, make the triangle
    white, and create a rectangle with the same color as the rectangle border. To
    do this, duplicate the rectangle we're using for the text field, and change its
    width to 35 px. Delete the layer style that is defining the stroke, as we don't
    need it here, and define the color of this rectangle as `#aeaeae`. This will create
    a contrast on the field and further differentiate it from the other fields being
    used.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For the account form, we'll recreate the circular element with the Ellipse Tool.
    Create a 16 x 16 px white circle with the same stroke. Align it with the other
    fields. This will be our radio button. Duplicate this layer and shrink it to 9
    x 9 px; delete the stroke and define the main color as `#aeaeae`. This will be
    our selection. For the option text, let's use the same text field and just shift
    it to the right, so we can have the radio button on the left-hand side. Now, we
    just duplicate this line, pull it down, delete the selected layer, and we have
    the unselected radio button. It should look like the following screenshot:![Recreating
    the form with flat style](img/0048OS_03_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we're only missing the button. For that, we'll use the same rectangle we're
    using for the field, remove the stroke, set the background to `#aeaeae`, and change
    its width to 105 px. We can use the `title` text field with the text color set
    to white to create the label.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'So now, we have exactly the same form as the one we had earlier, but it is
    redesigned in a flat design style. As you can see, this is made up of very simple
    and basic elements and looks more minimalistic than the original version. We''re
    only using black, gray, and white. However, you can choose to use the main brand
    color on the rectangle stroke and backgrounds when working on a website that features
    more colors, to bring it more in line with the design created. The following screenshot
    shows the default style form (on the left-hand side) and the flat style form (on
    the right-hand side):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Recreating the form with flat style](img/0048OS_03_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Refining the form's usability
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As you can notice, our new form resembles the default version in terms of the
    positioning and the way the elements work, but we can still improve its usability
    to make sure that the user has the best experience possible. Now, let''s do a
    few of the following small adjustments that will greatly improve the form:'
  prefs: []
  type: TYPE_NORMAL
- en: First, let's change the text inside the fields. Currently, this text is set
    to black and reads **Enter Text**. This text is known as the placeholder text
    and should be used to indicate to the user the kind of content that the website
    is expecting. You can use actions or content example here to show the user which
    content he or she should input. Let's change the text to `Enter your name`, as
    this will help the user in filling this field. However, black is a color that
    we reserve for the content, so in order to make this look more discrete and less
    like content, we'll set the text to gray `(#aeaeae`). This way, the user has a
    visual hint, but without black text, the field still looks empty and ready for
    the user to fill it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Do the same for the **Age** field, but use the `Enter your age` text.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the text in **Gender** to `Select your gender`, thus making the reference
    to the selection box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, change the text of the button to the action of the form. In this case,
    since this is a registration form, change the text to register. This small change
    will define the main action of the form to the user, making sure that the user
    understands what action he or she is performing on the website. Colors can also
    be used in buttons to indicate certain actions. For example, a **Delete Account**
    button will provide the benefit of having a red background, to indicate a permanent
    and extreme action, such as the deletion of an account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'These changes are extremely simple but pretty effective in optimizing and improving
    the usability of this form. These are some of the bits you should focus on while
    designing forms to ensure performance and ease of use. Your screen should look
    similar to what is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Refining the form''s usability](img/0048OS_03_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Flat readability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Flat design usually features large sans-serif typefaces used for messaging and
    titles. These bits of text look great over photos and flat colors, but as with
    everyone, you always have to make sure that your typography is readable. In the
    case of flat, where you're not supposed to use drop shadows or gradients, you
    have to be extra careful about readability. For this, always look to achieve the
    best contrast between text and background.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s do a quick exercise using the following steps to try out the best ways
    to achieve good readability:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new document on Photoshop, where we will try the colors. We just want
    to overlay text on top of blocks, so create a small rectangle of size 160 x 175
    px. Set the color of this shape as black, and create a text field inside of it
    in white. This contrast, white on top of black, is extremely readable. The best
    contrast for readability is, of course, black on top of white, like every book
    and every newspaper. We just created the inverse of this contrast, which is also
    extremely easy to read and works well with titles. I wouldn't recommend that you
    should read white text on top of black as it's extremely tiring for the eyes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's now try with one of the flat colors from [http://flatuicolors.com/](http://flatuicolors.com/),
    which we talked about earlier, and define the color of the shape as `#4d9ad7`.
    This color looks really great, as it's subtle and vibrant at the same time, and
    the white text reads extremely well, as white contrasts well with this vivid shade
    of blue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat the previous steps with the `#65c378`, `#9166b2`, and `#374a5d` colors.
    All these will read great in white as they are vivid and darker colors.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now change one of the words in the text to black. You will notice that even
    though the text is still readable, the contrast doesn't feel quite right. Black
    is a color that is only very readable on top of very light colors, and in this
    case, it just loses a bit of the sharpness that white offers us. We're not able
    to see it clearly in the following screenshot, but you can test this yourself
    by following this exercise and checking the examples that are given with this
    book:![Flat readability](img/0048OS_03_08.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's now try some different weights. In a color tile, write `Flat Design Rules`
    in three lines. Change the weight of `Flat` to light, `Design` to regular, and
    `Rules` to black. This way, we can see how the typeface looks in different weights.
    Light looks really great and creates a more minimalistic and light look, while
    black creates a bigger contrast by creating a bigger and visually larger text
    block. This is good for titles and to create a more impactful messaging option.
    Be especially careful with light typefaces, as they can sometimes lack readability
    by being too thin. However, as always, we should test the light typeface, as we
    are doing right now.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With colored text, it's easier to have contrast problems. Try text with green
    (`#65c378`) on top of a blue block (`#4d9ad7`) and the inverse of it. This combination
    has poor readability, and you should avoid it. There are some complementary colors
    that you can use. These are colors that are opposite to one another in the color
    wheel and have a greater contrast. If you're looking at using colored text on
    top of a colored background, make sure they have a good contrast to ensure readability.
    Your screen should now look similar to what is shown in the following screenshot:![Flat
    readability](img/0048OS_03_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When using an image background, you have to be especially careful with the placement
    of your text, as images have different shapes and colors. Ideally, you'll want
    to position your text on top of the image with a flat color.![Flat readability](img/0048OS_03_10.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: These are the main problems relating to the readability of text on flat design
    that you can encounter, and these are some good tests that you can perform with
    your website color palette and typeface. Remember that each type has specific
    heights and shapes, and you have to be careful when choosing which weight to use.
    Try them out and look for inspiration; you'll know you found your perfect font
    when you see it applied on your website.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered the basic definition of web usability and how important
    it is, especially in flat design, to make sure that you create great and functional
    interfaces. We saw how usability can be achieved with small changes, remembering
    that the focus should be on making the interface as easy as possible for the user.
    We also covered web usability in web forms, one of the elements that usually has
    more usability problems in flat, and how to avoid them as well as convert the
    form to the flat style. We also went through flat types and learned how to test
    readability in several cases.
  prefs: []
  type: TYPE_NORMAL
