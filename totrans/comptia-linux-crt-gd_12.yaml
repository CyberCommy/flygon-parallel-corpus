- en: Managing User and Group Accounts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, display managers were covered. We touched on XDM, KDM,
    GDM, and Lightdm. Differences between a display manager and a desktop were identified.
    We began by working with XDM in a CentOS system. Next, we switched our attention
    to KDM. Following this, GDM was next on our agenda. Additionally, we also covered
    installing some desktops within the mix. Lastly, Lightdm was covered. The techniques
    to get Lightdm up and running were highlighted using a Fedora 28 distribution.
    The processes for installing various display managers and switching between display
    managers were the key focal points of the previous chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, the topic will be user and group accounts. Thus far, we've
    covered a number of key areas within a Linux environment. Our focus begins with
    the process of managing user accounts; things such as user creation and deletion,
    directory modifications, setting a password, permissions, and ownership will be
    the focus. Following this, the scope will be grouped; we will dive into the techniques
    used for managing groups. The process of creating and removing groups, assigning
    users to groups, permissions, and so on will be covered. I encourage you to join
    me once again in the upcoming chapter to be better equipped for managing users
    and groups.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Directory used when creating a new user
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing user accounts
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing groups
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Directory used when creating a new user
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Every time we create a new user using the `useradd` command in a system a number
    of events occur. To begin with, there is a structure that is in place in terms
    of the directories that will be generated for a new user. The structure is stored
    in the skeleton directory; this is located in the `/etc/skel` directory. The `/etc/skel`
    directory contains files and folders, which are copied in the new user''s home
    directory. We can take a look at the skeleton directory using our Ubuntu system:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Each new user pulls its structure from here. The dot (`.`) indicates a hidden
    file. Files such as `/etc/skel/.logout`, `/etc/.skel/.bashrc`, and the `/etc/skel/.profile`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: The .bash_logout
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Note that `.bash_history` is where commands executed during logout are stored.
    It simply clears the screen to ensure privacy upon logout. This can be seen in
    the following command:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The .bashrc
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `/etc/skel/.bashrc` is usually used for storing alias for various. This
    can be seen by looking at `/etc/skel/.bashrc`:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Some output has been omitted for brevity. Based on the preceding output, some
    aliases have been defined for us; one such example is `alias ll='ls -af'`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: The .profile
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s consider `/etc/skel/.profile` as it does a number of tasks; one of which
    is to check for the existence of `$Home/.bashrc`. This is evident by looking at `/etc/skel/.profile`:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Some output has been omitted for brevity. Based on the preceding output, we
    can see the `#if running bash` section. Another way to see that these directories
    are indeed copied over is by looking at an existing user. We will use the `ls`
    command in combination with the `egrep` command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Awesome job! Based on the preceding output, we can see `.bash_history`, `.bashrc` and
    `.profile`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: The .bash_history
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Every command executed at Command Prompt is stored in `.bash_history`. Furthermore,
    `.bash_history` is only created after we start running commands at Command Prompt.
    Here is a brief look at `/home/philip/.bash_history`:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Some output has been omitted for brevity.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, we can check another user for the existence for the various `.bash` files:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Great job! We can see `.bash_history`, `.bash_logout`, `.bashrc`, and `.profile`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'Another way to identify that the `/etc/skel` directory is being used when creating
    a new user with the `useradd` command is to call the `useradd` command and pass
    the `-D` option:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Based on the preceding output, we are given a wealth of information. Particularly, `SKEL=/etc/skel`
    indicates which directory to use when creating a new user.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Managing user accounts
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So far, we''ve used two user accounts throughout the previous chapters; a standard
    user and the root user. In Linux, we can create a user account via a GUI utility
    or via the command line. In the shell, we use the `useradd` command in order to
    create a new user account. In newer distributions, there is also the `adduser`
    command. In some distributions, such as CentOS, `adduser` is a symbolic link.
    This can be seen here:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'On Ubuntu, the `adduser` command is separate from the `useradd` command:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The basic syntax when using the `useradd` command is `useradd <option> username`.
    By default, a standard user cannot create a user account. This can be seen here:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Based on the preceding output, we are greeted with a `Permission denied` message.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: By default, standard users cannot create user accounts.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new user, we will continue as a root user. We will cover managing
    permissions with the `sudoers` file in[Chapter 17](part0210.html#688M40-43f6e611c18f4c7abc8a9e3790317ae8),
    *Perform Security Administration Tasks*. Here it is using the root user:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Based on the preceding output, we aren''t given any indication to verify whether
    the new user was created. Rest assured, we can confirm by looking at the `/home`
    directory:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Some output has been omitted for brevity. The last entry displays the new user
    information. The way we read this is as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'However, if we compare the entry for another user, we get this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Based on the preceding output, the last `:/bin/bash` part defines the shell
    for the user. The user that we created has no shell assigned. Also, we need to
    see a password for the user. In order to set a password, we will use the `passwd`
    command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Awesome job! Now, let''s log out and try to log in using the `tom` account:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00138.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
- en: 'Great job! We can see the new user appearing but when we try to log in, the
    system will keep bouncing us out because we have defined a shell for the user.
    Let''s fix this by removing the user and adding the user once again. We will use
    the `userdel` command to remove the user:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Great! Now, let''s create the user and pass the `-s` option. This will define
    the shell for the user to be used with the `useradd` command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Awesome job! Now we can see in the last entry the user `tom` has been assigned
    a `/bin/bash` shell. Another interesting part of `/etc/passwd` is the `x` in each
    of the accounts listed.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: 'We said it represents the password, but we have not set `x` as the password
    so what''s the deal with `x`? Well, `x` is simply saying that the password, is
    encrypted; it is actually stored in a separate location. The `/etc/shadow` directory
    stores the password. We can take a look at the `/etc/shadow` directory for reference:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Some output has been omitted for brevity. Based on the preceding output, we
    can see the actual encrypted password for each account.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: The chage command
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Another interesting aspect regarding user accounts involves the aging time
    for a password; the expiration for a password. We can view the expiration for
    a given user by using the `chage` command. Let''s create a password for the user `tom` and
    then check the password aging settings for the new user:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: You must have root privileges to change the password aging parameters.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](img/00139.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
- en: 'Excellent! Based on the preceding output, we used the `-l` option to display
    the expiration settings; we can see some valuable information, notably, `Last
    password change`, `Password expires`, and `Account expires`. We can change these
    values by passing various options. For instance, let''s change `Account expires`.
    We use the `-E` option:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Awesome job! Based on the preceding output, we''ve set the account to expire
    to the current time of this demo. Now, to see the effects of this change, we will
    open another Terminal and try to log in as the user `tom`:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00140.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: 'Great job! Based on the preceding output, we see the message that was returned
    while attempting to log in as the user `tom`. To remove this expiration for the
    user `tom`, we would use `-1` as the value:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now, we will be able to log in as the user `tom`:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00141.jpeg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
- en: 'Excellent! Based on the preceding, we can see the effectiveness of using the
    `chage` command. To see the available options that can be passed with the `chage`
    command, we can do:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](img/00142.jpeg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: The usermod command
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Earlier we saw that to make any changes we have to remove the user with the
    `useradd` command. This can be cumbersome every time we decide on a change; instead,
    we can leverage another powerful command: the `usermod` command. The basic syntax
    of the `usermod` command is as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Using our test user `tom`, we can change a number of parameters with the `usermod`
    command. For example, we can lock the account for the user `tom`, this will prevent
    the user `tom` from being able to log into the system. To lock an account, we
    would use the `-L` option:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![](img/00143.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
- en: 'Awesome job! Based on the preceding output, the user `tom` is unable to log
    in. An interesting point to note is the entry for the user `tom` inside `/etc/shadow`
    shows `!` in front of the password in the second field, which represents the password:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Based on the preceding, there is no `!` in front of the password for the user
    `philip`. Another way to verify whether an account has been locked is to use the
    `passwd` command. We pass the `--status` option:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Awesome job! Note `L` indicates that the user account is currently locked.
    We can unlock the user account by using the `usermod` command and passing the
    `-U` option:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Great job! Based on the preceding output, the `P` indicates that the user `tom` has
    a usable password; this implies that the account is unlocked:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00144.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
- en: 'Excellent! Now, when we look at `etc/shadow` once again, we will no longer
    see the `!` in front of the hashed password:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Awesome! We can also define a shell for a user if we added a user without specifying
    a shell; we pass the `-s` option with the `usermod` command:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Awesome job! Another method for locking an account is to use the `passwd` command;
    we pass the `-l` option. Let''s lock the user `tom`:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Once again, when we try to log in as the user `tom`, we will see this:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00145.jpeg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
- en: 'Great job! Also, we can unlock an account using the `passwd` command; we would
    pass the `-u` option:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Awesome! Note that the root user can still log in using the `tom` user, yes!
    We can illustrate this by locking the user `tom` once again:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Based on the preceding output, from all indication it seems that the user `tom` account
    has been disabled but check this out:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00146.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
- en: Awesome! Here's what happened, when someone tries to log in as the user `tom`,
    they will be prevented unless they first become the root user because the lock
    **does not** prevent the root from accessing the locked account.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: The root user can access any account.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: 'When we manage user accounts; some of their base information comes from a special
    configuration file: the `/etc/login.def` file. We can take a look at `/etc/login.def`:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Some output has been omitted for brevity. Based on the preceding output, we
    can see settings for the `su` and `chage` commands.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: The w command
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `w` command displays the currently logged-in users in the system. We can
    take a look at the `w` command:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Based on the preceding output, we have the fields starting from the user moving
    from left to right. Some interesting fields are the `FROM` field as it shows where
    the user logged in from (if it is over a network, it will show an IP address)
    and the `LOGIN@` field as it shows which date the user logged in. We can see the
    available options by passing the `--help` option:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The who command
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `who` command is another popular command used for displaying currently
    logged-in users. We simply do `who` without any options:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Awesome job! But wait, we can actually identify the date and time when the
    system booted up, yes! We pass the `-a` option:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The last command
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Another popular command for displaying the users who have recently logged in
    is the `last` command. We simply say `last`:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Based on the preceding output, the user `tom` has logged in over the network.
    We can see the available options by passing the `--help` option:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Awesome job!
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: The whoami command
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We can quickly view information about the current user by using the `whoami`
    command. The `whoami` command displays the owner of the current login session:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Great job! We can view the available options of the `whoami` command by passing
    the `--help` option:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Managing groups
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So far, we''ve been creating user accounts within our system; what about group
    accounts? Well, here''s the thing, when we create an account using the `useradd`
    command, we are also indirectly creating a group account using the same name as
    the user. To prove this, let''s take a look at the `/etc/login.def` file:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Based on the preceding output, the `USERGROUPS_ENAB yes` variable enables the
    creation of a group using the same name specified for the username. We can also
    take a look at the available groups by looking at `/etc/group`:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Some output has been omitted for brevity. Based on the preceding output, a
    group, `tom` was created when we created a username `tom`. However, we can also
    create a group using another powerful command, the `groupadd` command:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Awesome! Now we see our newly created `Hacki` group being displayed. Likewise,
    we can remove a group using the `groupdel` command:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Great! Now, let''s create recreate a `Hacki` group:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'It is possible to add a user to another group using the `usermod` command.
    Let''s use the `tom` user:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Now, we can see that the user `tom` is part of the `tom` and `Hacki` groups.
    Another way to group for a user is to use the `id` command:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Great job! Additionally, we can make a group as the primary group for a user
    by passing `-g` with the `usermod` command:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Excellent! Based on the preceding output, the only group that the user `tom` belongs
    to is the `Hacki` group. It is also possible to add a password to a group; we
    use the `gpasswd` command. Note that `/etc/gshadow` stores each group password.
    We can take a look at it:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Some output has been omitted for brevity. The `!` exclamation means that no
    password has been set for the respective groups. Let''s set a password for the
    `Hacki` group:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Awesome! Now we can see that the hashed version of the password has replaced
    the `!` exclamation.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: 'There is also another command that can be used to create or change a group''s
    password: the `groupmod` command. Let''s use the `groupmod` command to assign
    a password to the `tom` group:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Great job! Based on the preceding output, as opposed to the `gpasswd` command,
    when we use the `groupmod` command, it expects an encrypted password. We specified
    a plain password; hence, we see the password being exposed.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered a wide array of techniques for managing user and
    group accounts. First, we investigated the various directories from which the
    new users' home directories are populated. Next, we dealt with user account creation.
    We saw how we add or remove a user account. In addition, we saw how to set a password
    for a user account. Also, we looked at the various configuration files where the
    users' passwords are kept, particularly, focusing on the `/etc/passwd` and the
    `/etc/shadow` files. Following this, we dealt with modifying properties for a
    user account.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: We touched on locking and unlocking a user account. Also, we worked with password
    expiration settings using the `chage` command. Finally, our focus was on the groups.
    We covered the steps for creating a group and adding and removing groups. Moreover,
    we saw how we would assign a group to a user; likewise, we saw how to assign a
    primary group. Finishing, we looked at methods for setting a password for a group.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, our focus will be automating tasks. We will cover the utilities
    commonly used for executing tasks. Additionally, we will cover permissions for
    carrying out tasks within a Linux system. I hope you join me in the next chapter
    as it contains vital information regarding automation of tasks.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们的重点将是自动化任务。我们将介绍常用于执行任务的实用程序。此外，我们将介绍在Linux系统中执行任务的权限。我希望您加入我下一章，因为它包含了有关任务自动化的重要信息。
- en: Questions
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which configuration file usually stores alias inside the `/etc/skel` directory?
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个配置文件通常在 `/etc/skel` 目录中存储别名？
- en: A. `/etc/skel/bash`
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: A. `/etc/skel/bash`
- en: B. `/etc/skel/bash_rc`
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: B. `/etc/skel/bash_rc`
- en: C. `/etc/skel/.bash_rc`
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: C. `/etc/skel/.bash_rc`
- en: D. `/etc/skel/.bashrc`
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: D. `/etc/skel/.bashrc`
- en: Which configuration file clears the screen whenever the user signs out of the
    system?
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个配置文件在用户退出系统时清除屏幕？
- en: A. `/etc.skel/.bash_logout`
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: A. `/etc.skel/.bash_logout`
- en: B. `/etc/skel/bash_logout`
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: B. `/etc/skel/bash_logout`
- en: C. `/etc/skel/.logout`
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: C. `/etc/skel/.logout`
- en: D. `/etc/skel/.bashlogout`
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: D. `/etc/skel/.bashlogout`
- en: Which configuration file stores the commands executed?
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个配置文件存储执行的命令？
- en: A. `/etc/skel/.bash_history`
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: A. `/etc/skel/.bash_history`
- en: B. `~/.bash_history`
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: B. `~/.bash_history`
- en: C. `/etc/skel/bash_history`
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: C. `/etc/skel/bash_history`
- en: D. `~/.history`
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: D. `~/.history`
- en: Which option prints the defaults for a new user with the `useradd` command?
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项打印 `useradd` 命令的默认值？
- en: A. `-d`
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: A. `-d`
- en: B. `-b`
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: B. `-b`
- en: C. `-D`
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: C. `-D`
- en: D. `--defaults`
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: D. `--defaults`
- en: Which option allows to specify a shell when using `useradd` ?
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项允许在使用 `useradd` 时指定 shell？
- en: A. `-c`
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: A. `-c`
- en: B. `-d`
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: B. `-d`
- en: C. `-S`
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: C. `-S`
- en: D. `-s`
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: D. `-s`
- en: The `adduser` command is a symbolic link to which command in Fedora 28?
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`adduser` 命令在 Fedora 28 中是指向哪个命令的符号链接？'
- en: A. `adduser`
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: A. `adduser`
- en: B. `add-user`
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: B. `add-user`
- en: C. `user-mod`
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: C. `user-mod`
- en: D. `user-add`
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: D. `user-add`
- en: Which option with the `chage` command will print out the account expiration
    settings?
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项与 `chage` 命令一起将打印出帐户到期设置？
- en: A. `-a`
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: A. `-a`
- en: B. `-l`
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: B. `-l`
- en: C. `-c`
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: C. `-c`
- en: D. `-d`
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: D. `-d`
- en: Which code with the `passwd --status` command indicates that the account is
    locked?
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`passwd --status` 命令中的哪个代码表示帐户已锁定？'
- en: A. `P`
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: A. `P`
- en: B. `A`
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: B. `A`
- en: C. `L`
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: C. `L`
- en: D. `N`
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: D. `N`
- en: Which option with the `groupmod` command specifies a primary group for a user?
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项与 `groupmod` 命令一起指定用户的主要组？
- en: A. `-g`
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: A. `-g`
- en: B. `-G`
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: B. `-G`
- en: C. `-A`
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: C. `-A`
- en: D. `-b`
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: D. `-b`
- en: Which command is used to change a group's password?
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于更改组密码的命令是哪个？
- en: A. `adduser`
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: A. `adduser`
- en: B. `groupedit`
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: B. `groupedit`
- en: C. `groupmod`
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: C. `groupmod`
- en: D. `grouppasswd`
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: D. `grouppasswd`
- en: Further reading
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'This site gives useful information: `/etc/skel`: [https://unix.stackexchange.com](https://unix.stackexchange.com)'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该网站提供了有用信息：`/etc/skel`：[https://unix.stackexchange.com](https://unix.stackexchange.com)
- en: This site gives useful information about user account creation: [http://www.linfo.org](http://www.linfo.org)
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该网站提供了有关用户帐户创建的有用信息：[http://www.linfo.org](http://www.linfo.org)
- en: 'This site gives useful information about various groups: [http://www.linuxguide.it](http://www.linuxguide.it)'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该网站提供了有关各种组的有用信息：[http://www.linuxguide.it](http://www.linuxguide.it)
