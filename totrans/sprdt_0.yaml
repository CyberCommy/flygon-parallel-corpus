- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Spring Framework has always had good support for different data access technologies.
    However, one thing remained the same for a long period of time: developers had
    to implement their data access layer by using technology specific APIs, and often
    these APIs were not very concise. This led to a situation where one had to write
    a lot of boilerplate code in order to achieve the desired results. Sounds familiar,
    right?'
  prefs: []
  type: TYPE_NORMAL
- en: 'The Spring Data project was born as an answer to these problems. Its goal is
    to provide an easier way to create applications, which use either relational databases
    or newer data access technologies such as non-relational databases, map-reduce
    frameworks, or cloud based storage technologies, with the Spring framework. It
    is essentially a parent project that collects data storage specific subprojects
    under a single brand. A full list of its subprojects can be found from the homepage
    of the Spring Data Project: [http://www.springsource.org/spring-data/](http://www.springsource.org/spring-data/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'This book concentrates on two specific subprojects: Spring Data JPA and Spring
    Data Redis. You will learn an easier way to manage your entities and to create
    database queries with Spring Data JPA. This book also demonstrates how you can
    add custom functions to your repositories. You will also learn how you can use
    the Redis key-value store as data storage and to use its other features for the
    purpose of enhancing the performance of your applications.'
  prefs: []
  type: TYPE_NORMAL
- en: This practical guide proves that implementing JPA repositories can be fun and
    helps you to harness the performance of Redis in your applications.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Getting Started"), *Getting Started*, gives
    a brief introduction to the technologies described in this book. This chapter
    is divided in two parts: the first part describes the motivation behind the Java
    Persistence API, outlines its main concepts, and shows how you can use it for
    building database queries. The second part identifies the key features of the
    Redis key-value store.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Getting Started with Spring Data JPA"), *Getting
    Started with Spring Data JPA*, helps you to start building applications by using
    Spring Data JPA. You will learn to set up a project that uses Spring Data JPA
    and configure your application by using programmatic configuration. You will also
    learn an easy way to create repositories for your entities and implement a simple
    contact manager application by using Spring Data JPA.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Building Queries with Spring Data JPA"),
    *Building Queries with Spring Data JPA*, describes the techniques that you can
    use to build database queries. After reading this chapter, you will know how to
    build database queries by using query methods, JPA Criteria API, and Querydsl.
    You will also continue the implementation of your contact manager application
    by adding a search function to it.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Adding Custom Functionality to JPA Repositories"),
    *Adding Custom Functionality to JPA Repositories*, teaches you how you can customize
    your repositories. You will learn how you can add custom functionalities either
    to a single repository or to all repositories. The principles discussed in this
    chapter are demonstrated by customizing the repositories of your contact manager
    application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Getting Started with Spring Data Redis"),
    *Getting Started with Spring Data Redis*, will guide you through the installation
    and configuration phase that is required before you can use Spring Data Redis
    in your applications. It describes how you can install Redis to a computer running
    a Unix-like operating system. Then you can set up a project that uses Spring Data
    Redis. In the last part of this chapter, you will learn to configure the Redis
    connection and compare the features of the supported connector libraries.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Building Applications with Spring Data Redis"),
    *Building Applications with Spring Data Redis*, teaches you how you can use Redis
    in your Spring powered applications. It describes the key components of Spring
    Data Redis and teaches you how to use them. You will also see Spring Data Redis
    in action when you use Redis as data storage of your contact manager application.
    The last part of this chapter describes how you can use Spring Data Redis as an
    implementation of the Spring 3.1 cache abstraction. You will also see how to utilize
    Redis'' publish/subscribe messaging pattern implementation in this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to run the code examples of this book, you will need to install the
    following software:'
  prefs: []
  type: TYPE_NORMAL
- en: Java 1.6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maven 3.0.X
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Redis 2.6.0-rc6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A web browser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you want to experiment with the code examples, you will also need:'
  prefs: []
  type: TYPE_NORMAL
- en: An IDE such as Eclipse, Netbeans, or IntelliJ Idea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The full source code package for each chapter (See the following *Downloading
    the example code* section)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is great for developers who are working with Spring-powered applications,
    and are looking for an easier way to write data access code that uses relational
    databases. Also, if you are interested in learning how you can utilize Redis in
    your applications, this is the book for you. This book assumes that you have got
    some experience from the Spring Framework and the Java Persistence API. No previous
    experience from Redis is required.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text are shown as follows: "We can do this by using the `repositoryFactoryBeanClass`
    property of the `@EnableJpaRepositories` annotation."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
