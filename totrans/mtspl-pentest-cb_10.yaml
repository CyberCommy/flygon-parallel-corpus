- en: Chapter 10. Social Engineer Toolkit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with Social Engineer Toolkit (SET)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with the SET config file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spear-phishing attack vector
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Website attack vectors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multi-attack web method
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Infectious media generator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Social engineering is an act of manipulating people to perform actions that
    they don't intend to do. A cyber-based socially engineered scenario is designed
    to trap a user into performing activities that can lead to the theft of confidential
    information or some malicious activity. The reason for the rapid growth of social
    engineering amongst hackers is that it is difficult to break the security of a
    platform, but it is far easier to trick the user of that platform into performing
    unintentional malicious activity. For example, it is difficult to break the security
    of Gmail in order to steal someone's password, but it is easy to create a social
    engineered scenario where the victim can be tricked to reveal his/her login information
    by sending a fake login/phishing page.
  prefs: []
  type: TYPE_NORMAL
- en: The Social Engineer Toolkit is designed to perform such tricking activities.
    Just like we have exploits and vulnerabilities for existing software and operating
    systems, SET is a generic exploit of humans in order to break their own conscious
    security. It is an official toolkit available at [www.social-engineer.org](http://www.social-engineer.org)
    and it comes as a default installation with BackTrack 5\. In this chapter, we
    will analyze the aspect of this tool and how it adds more power to the Metasploit
    framework. We will mainly focus on creating attack vectors and managing the configuration
    file which is considered as the heart of SET. So let us dive deeper into the world
    of social engineering.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with Social Engineer Toolkit (SET)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let us start our introductory recipe about SET where we will be discussing SET
    on different platforms.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SET can be downloaded for different platforms from its official site, [www.social-engineer.com](http://www.social-engineer.com).
    It has both the GUI version, which runs through browser and the command-line version,
    which can be executed from the terminal. It comes pre-installed in BackTrack which
    will be our platform for discussion in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To launch SET on BackTrack, start the terminal window and pass the following
    path:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you are using SET for the first time, you can update the toolkit to get the
    latest modules and fix known bugs. To start the updating process, we will pass
    the `svn update` command. Once the toolkit is updated, it is ready for use.
  prefs: []
  type: TYPE_NORMAL
- en: The GUI version of SET can be accessed by navigating to **Applications** | **Backtrack**
    | **Exploitation tools** | **Social Engineering Toolkit** | **set-web**.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Social Engineering Toolkit is a Python-based automation tool that creates a
    menu-driven application for us. Faster execution and the versatility of Python
    makes it the preferred language for developing modular tools like SET. It also
    makes it easy to integrate the toolkit with web servers. Any open source HTTP
    server can be used to access the browser version of SET. Apache is considered
    as the preferable server while working with SET.
  prefs: []
  type: TYPE_NORMAL
- en: Working with the SET config file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will take a close look at the SET config file which contains
    default values for different parameters that are used by the toolkit. The default
    configuration works fine with most of the attacks, but there can be situations
    when you have to modify the settings according to the scenario and requirements.
    So let us see what configuration settings are available in the config file.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To launch the config file, move to config and open the `set_config` file.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The configuration file will be launched with some introductory statements,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting ready](img/7423_10_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let us see what configuration settings are available for us.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The first configuration setting is related to the Metasploit installation directory.
    Metasploit is required by SET for proper functioning as it picks up payloads and
    exploits from the framework.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The `sendmail` e-mail server is primarily used for e-mail spoofing. This attack
    will work only if the target's e-mail server does not implement reverse lookup.
    By default, its value is set to `OFF`.
  prefs: []
  type: TYPE_NORMAL
- en: The following setting shows one of the most widely used attack vectors of SET.
    This configuration will allow you to sign a malicious Java applet with your name
    or with any fake name, and then it can be used to perform a browser-based Java
    applet infection attack.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'We will discuss this attack vector in a detail in later recipe. This attack
    vector will also require JDK to be installed on your system. Let us set its value
    to `ON` as we will be discussing this attack in detail:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The `AUTO_DETECT` flag is used by SET to auto-discover the network settings.
    It will enable SET to detect your IP address if you are using a NAT/Port forwarding
    and allows you to connect to the external internet.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following setting is used to set up the Apache web server to perform web-based
    attack vectors. It is always preferred to set it to `ON` for better attack performance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The following setting is used to set up the SSL certificate while performing
    web attacks. Several bugs and issues have been reported for the `WEBATTACK_SSL`
    setting of SET. So, it is recommended to keep this flag `OFF:`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The following setting can be used to build a self-signed certificate for web
    attacks but there will be a warning message saying "Untrusted certificate". Hence,
    it is recommended to use this option wisely to avoid alerting the target user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The following setting is used to enable or disable the Metasploit listener
    once the attack is executed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: The following configuration will allow you to use SET as a standalone toolkit
    without using Metasploit functionalities, but it is always recommended to use
    Metasploit along with SET in order to increase the penetration testing performance.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: These are a few important configuration settings available for SET. Proper knowledge
    of the config file is essential to gain full control over the Social Engineer
    Toolkit.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The SET config file is the heart of the toolkit as it contains the default values
    that SET will pick while performing various attack vectors. A misconfigured SET
    file can lead to errors during the operation so it is essential to understand
    the details defined in the config file in order to get the best results. The *How
    to do it* section clearly reflects the ease with which we can understand and manage
    the config file.
  prefs: []
  type: TYPE_NORMAL
- en: Spear-phishing attack vector
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A spear-phishing attack vector is an e-mail attack scenario that is used to
    send malicious mails to target/specific user(s). In order to spoof your own e-mail
    address you will require a `sendmail` server. Change the config setting to `SENDMAIL=ON`.
    If you do not have `sendmail` installed on your machine then it can be downloaded
    by entering the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we move ahead with a phishing attack, it is imperative for us to know
    how the e-mail system works.
  prefs: []
  type: TYPE_NORMAL
- en: Recipient e-mail servers, in order to mitigate these types of attacks, deploy
    gray-listing, SPF records validation, RBL verification, and content verification.
    These verification processes ensure that a particular e-mail arrived from the
    same e-mail server as its domain. For example if a spoofed e-mail address, `<[richyrich@gmail.com](mailto:richyrich@gmail.com)>`arrives
    from IP `202.145.34.23` it will be marked as malicious as this IP address does
    not belong to Gmail. Hence, in order to bypass these, the attacker should ensure
    that the server IP is not present in the RBL/SURL list. As the spear-phishing
    attack relies heavily on user perception, the attacker should conduct a recon
    of the content that is being sent and should ensure that the content looks as
    legitimate as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Spear-phishing attacks are of two types—web-based content and payload based
    content.
  prefs: []
  type: TYPE_NORMAL
- en: In previous chapters we have already seen how to create a payload but as most
    of the e-mail systems do not allow executables, we should consider using different
    types of payloads embedded into the HTML content of the e-mail; for example, Java
    applet, Flash, PDF or MS Word/Excel, to name a few.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The spear-phishing module has three different attack vectors at our disposal.
    Let us analyze each of them.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Passing option `1` will start our mass-mailing attack. The attack vector starts
    with selecting a payload. You can select any vulnerability from the list of available
    Metasploit exploit modules. Then, we will be prompted to select a handler that
    can connect back to the attacker. The options will include setting the vnc server
    or executing the payload and starting the command line, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next few steps will be starting the `sendmail` server, setting a template
    for a malicious file format, and selecting a single or mass-mail attack:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to do it...](img/7423_10_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, you will be prompted to either choose a known mail service such as
    Gmail and Yahoo or use your own server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Setting up your own server cannot be very reliable as most of the mail services
    follow a reverse lookup to make sure that the e-mail has generated from the same
    domain name as the address name.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us analyze another attack vector of spear phishing. Creating a file format
    payload is another attack vector in which we can generate a file format with a
    known vulnerability and send it via e-mail to attack our target. It is preferred
    to use MS Word-based vulnerabilities as they are difficult to detect whether they
    are malicious or not, so they can be sent as an attachment via an e-mail:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: At last, we will be prompted whether we want to set up a listener or not. It
    will start the Metasploit listener and will wait for the user to open the malicious
    file and connect back to the attacking system.
  prefs: []
  type: TYPE_NORMAL
- en: The success of e-mail attacks depends on the e-mail client that we are targeting.
    So a proper analysis of this attack vector is essential.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As discussed earlier, the spear-phishing attack vector is a social engineering
    attack vector that targets specific users. An e-mail is sent from the attacking
    machine to the target user(s). The e-mail will contain a malicious attachment
    which will exploit a known vulnerability on the target machine and provide a shell
    connectivity to the attacker. SET automates the entire process. The major role
    that social engineering plays here is setting up a scenario that looks completely
    legitimate to the target, and fools the target into downloading the malicious
    file and executing it.
  prefs: []
  type: TYPE_NORMAL
- en: Website attack vectors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The SET "web attack" vector is a unique way of utilizing multiple web-based
    attacks in order to compromise the intended victim. It is by far the most popular
    attack vector of SET. It works similar to browser autopwn where several (or specific)
    attacks can be sent to the target browser. It has the following attack vectors:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Here in this recipe we will discuss the most popular attack vector, the Java
    applet attack method. Let us see how this attack is performed using SET.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To start with the Java applet attack method, we will have to select the first
    option. Then in the next step, we will be prompted to choose a webpage setup.
    We can either choose custom templates or clone a complete URL. Let us see how
    cloning will help us in performing the attack.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The target user will have to access the website that the pen-tester has decided
    to clone. Hence, the pen-tester should understand that the cloned site shouldn't
    digress from the actual sites functionality, vis-à-vis the phishing site.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start with the cloning option, we will have to decide on a URL we want to
    clone. Let us clone the Facebook login page and proceed further:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Once we are done with the cloning part, we will be prompted to choose a payload
    along with a backdoor that can be dropped onto the target machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once we're done with these steps, the SET web server will start along with msf.
    Msf will manage the handler that will receive the back connection once the payload
    is dropped into the target machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can find your cloned template along with jar at `/pentest/exploits/set/src/web_clone/site/template`.
    Now once the target user visits the cloned website (hosted on a fake domain),
    an applet message will pop up that will appear as a completely safe alert message:![How
    to do it...](img/7423_10_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now once the target user clicks on **Allow**, the malicious applet gets executed
    and it allows the execution of the payload. The Metasploit listener will receive
    a connection back from the target machine and, thus, we will have an active session:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, we can perform other attacks as well. You can see how easily SET
    creates attack vectors for us and provides us with complete control over our scenario.
    The best thing about SET is that it can give you the full opportunity to implement
    your own modifications and changes whenever you want.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Java applet infection is a popular Java applet vulnerability that allows
    the execution of applet outside the protected sandbox environment. Unsigned, or
    unsafe applets, are executed in a sandboxed environment with limited access to
    system resources. Once the malicious applet is allowed to execute after the warning
    message, it gains the privilege of full resource access on the target machine
    as now it is outside the sandboxed environment. This allows the applet to execute
    a Java vulnerability and allow remote code execution. Similarly other web-based
    attack vectors use a browser to transfer attacks to the target system. Social
    engineering again lies in the art of crafting a scenario which fools the user.
    The attacker can create a malicious link hidden under a `href` tag or the applet
    can be signed using fake signatures in order to make it look completely legitimate.
    SET templates are a good source of designing attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Multi-attack web method
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The multi-attack web method further takes web attack to the next level by combining
    several attacks into one. This attack method allows us to club several exploits
    and vulnerabilities under a single format. Once the file or URL is opened by the
    target user, then each attack is thrown one by one unless a successful attack
    is reported. SET automates the process of clubbing different attacks under a single
    web attack scenario. Let us move ahead and see how this is done.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The multi-attack web method starts similar to other web-based attacks. We start
    with selecting a template which can either be imported or can be cloned. The difference
    lies in the next step where we can select various exploits that can be added into
    the web attack.
  prefs: []
  type: TYPE_NORMAL
- en: 'Select which attacks you want to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: We can select different attacks and, once we are done, we can pass `8` and finally
    combine the selected attacks under a single vector. Finally, we will be prompted
    to select a payload and backdoor encoder.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once different attacks have been selected, SET clubs them with a payload and
    builds a single malicious link that needs to be social engineered now. We will
    have to build a template that looks completely legitimate to the target user and
    force him to visit the malicious link. Once the link is clicked by the victim,
    different attacks are tried one by one unless a successful attack is launched.
    Once a vulnerability is found and exploited, the payload provides a back connectivity
    to the Metasploit listener.
  prefs: []
  type: TYPE_NORMAL
- en: Infectious media generator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The infectious media generator is a relatively simple attack vector. SET will
    create a Metasploit-based payload, set up a listener for you, and generate a folder
    that needs to be burned or written to a DVD/USB drive. Once inserted, if auto-run
    is enabled, the code will automatically execute and take control of the machine.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This attack vector is based on a simple principle of generating a malicious
    executable, and then encoding it with available encoders so as to bypass antivirus
    protection.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After generating the encoded malicious file, the Metasploit listener starts
    waiting for back connections. The only limitation with this attack is that the
    removable media must have auto-run enabled, otherwise it will require a manual
    trigger.
  prefs: []
  type: TYPE_NORMAL
- en: This type of attack vector can be helpful in situations where the target user
    is behind a firewall. Most of the antivirus programes, now a days, disable auto-run,
    which in turn renders this type of attack useless. The pen-tester, along with
    auto-run based attacks should also ensure that a backdoor legitimate executable/PDF
    is provided along with the media. This would ensure that the victim would invariably
    execute one of the payload.
  prefs: []
  type: TYPE_NORMAL
