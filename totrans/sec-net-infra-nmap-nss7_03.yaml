- en: Port Scanning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: How to specify a target
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to perform host discovery
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to identify open ports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to manage specification and scan order
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to perform script and version scan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to detect operating system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to detect and bypass network protection systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to use Zenmap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will be going through various recipes that explain how to
    make use of Nmap to perform various port scanning techniques. Each recipe will
    contain practical insights into performing Nmap scans on a test virtual machine,
    allowing you to understand the functionalities of the various switches supported
    by Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: How to specify a target
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `nmap` command interprets any content appended without an associated switch
    as a target. The following is a basic syntax that specifies an IP address or a
    hostname to scan without any associated switches:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The hostname is resolved with the configured DNS server and the IP address
    is obtained to perform the scan. If multiple IP address are associated with one
    hostname, the first IP address will be scanned and the result will be displayed.
    The following syntax allows `nmap` to perform scans on all the IP addresses resolved
    with the hostname provided in the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Nmap also supports scanning the whole subnet, provided that you append the mask
    at the end of an IP address or hostname. Then, Nmap will consider all the resolved
    IP addresses in the range of the mask mentioned. For example, `10.0.0.1/24` would
    scan the `256` hosts between `10.0.0.1` and `10.0.0.255`, including `.1`, and
    `.255`. `10.0.0.21/24` would scan exactly the same targets.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nmap also allows you to resolve an entire subnet and then exclude certain hosts
    from scanning. For example, the following syntax allows you to scan all the hosts
    resolved for `10.0.0.1/24` except any IP addresses whose last network bits are
    `.1` or `.255`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This can be used in any of the four network bits, such as `10.0.1-254.1-254`,
    which will allow you to skip IP addresses  `10.0.0.0` , `10.0.0.255`,  `10.0.255.0`,
    and `10.0.255.255`. Nmap also supports fully qualified IPv6 addresses, but not
    octet range. For an IPv6 address with non-global scope, the zone suffix ID needs
    to be mentioned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nmap supports various input formats for a user to specify the targets. The
    following are the switches that can be used to mention the hosts on the specified
    format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This will allow the user to create a text file with a list of all the IP addresses/range
    to be scanned. This is a feasible option when you have many IP addresses to be
    scanned. For example, if you want to scan all the IP addresses from different
    subnets for a medium-scale organization with more than 10,000 assets, it is not
    feasible to enter these IP addresses on the command line. Instead, create a text
    file with a list of all the IP addresses to be scanned and mention the filename
    with the absolute path after `-iL`. `Nmap` then fetches the list of IP addresses
    from the file and performs the scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'For large organizations and internet-based scans, you may want to scan random
    targets or identify unknown targets. The `–iR` switch with the appended number
    of random hosts to be identified for scans will allow the user to perform these
    operations. For example, if you are trying to identify eight random hosts with
    the ftp port open, the following syntax can be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following syntax will help you to exclude servers when your input is a
    range of servers, a subnet, or a pre-existing large list of servers. The hosts
    mentioned along with this switch are omitted from scanning, thereby preventing
    the servers from being hit with any unwanted traffic:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The following command works similarly to the preceding syntax, except that
    the host exclusion list is fetched from a file instead of manually mentioning
    the server list. This is feasible when the list of hosts to be excluded from the
    scan is long:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to perform this activity, you will have to satisfy the following prerequisites
    on your machine:'
  prefs: []
  type: TYPE_NORMAL
- en: Install Nmap.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provide network access to the hosts on which the scans are to be performed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In order to install Nmap, you can follow the instructions provided in [Chapter
    2](888a67bc-261d-466c-bd68-e1f498ac4213.xhtml), *Understanding Network Scanning
    Tools*. This will allow you to download a compatible version of Nmap and install
    all the required plugins. In order to check whether your machine has Nmap installed,
    open Command Prompt and type Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: 'If Nmap is installed, you will see a screen similar to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/65a2b4fb-4366-49db-8617-6e497b40ff3e.png)'
  prefs: []
  type: TYPE_IMG
- en: If you do not see this screen, retry the step by moving the Command Prompt control
    into the folder where n`map` is installed (`C:\Program Files\nmap`). If you do
    not see the screen even after doing this, remove and reinstall n`map`.
  prefs: []
  type: TYPE_NORMAL
- en: To populate the open ports on hosts for which the scan is to be done, you are
    required to have network-level access to that particular host. A simple way to
    check whether you have access to the particular host is through ICMP by sending
    ping packets to the host. But this method works only if ICMP and ping is enabled
    in that network. If ICMP is disabled, live host detection technique varies, and
    we will see this in *How do it..* sections of this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: The prerequisites for this recipe are common to all the other recipes in this
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `nmap` in Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the following syntax in Command Prompt to scan the IP address `192.168.75.136`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/1ddfcd2c-a88c-4c5c-9563-23296a6873e1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the following syntax in  Command Prompt to scan the IP addresses present
    in the `ip.txt `file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/326ad2c9-90db-457c-8d44-13d890042edb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the following syntax in the Command Prompt to exclude the `192.168.75.136`
    IP address from the scan list:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/68ea50e6-a710-4318-9413-6a015e476b93.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter the following syntax in the Command Prompt to exclude the IP addresses
    mentioned in the `ip.txt` file from the scan list:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/b09f22f5-079c-4d5c-8500-ec659d5ed321.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The options mentioned in this recipe help users to select targets at their convenience,
    irrespective of the size of their network or the provided list of hosts. Nmap
    does not require users to enter the final list of host to be scanned. Instead,
    as shown in this recipe, it provides various options to dynamically allow Nmap
    to select the targets based on various filters. The file-based filters allow Nmap
    to input a readily available list of hosts to be scanned, thereby reducing the
    effort required for customizations or formatting the lists.
  prefs: []
  type: TYPE_NORMAL
- en: How to perform host discovery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the basic techniques of identifying a running host is by sending an ICMP
    ping packet and analyzing the response to draw a conclusion. What if the host
    or the network is blocking ICMP packets at the network level or the host level?
    As per the ICMP technique, the host or the network will not pop up in the live
    host list. Host discovery is one of the core components of a network penetration
    test or vulnerability scan. A half-done host discovery can ignore hosts or networks
    from the scope and perform any further operation, thus leaving the network vulnerable.
  prefs: []
  type: TYPE_NORMAL
- en: Nmap provides various options and techniques to identify the live host by sending
    customized packets to satisfy specific network conditions. If no such options
    are provided, Nmap by default sends an ICMP echo to identify the live hosts. The
    provided probe options can be combined to increase the odds of identifying further
    ports. Once Nmap probes for the live hosts and obtains a list of live hosts, it
    scans for the open ports by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following options are provided by Nmap to perform host discovery:'
  prefs: []
  type: TYPE_NORMAL
- en: '`–sL`: This option lists the IP addresses present in the provided subnet. It
    also tries to resolve the IP addresses to their hostnames. The hostnames can help
    an attacker or a penetration tester find out a great deal about the network. You
    will not be able to combine this with any other options, such as OS discovery,
    because the functionality is to just list the IP addresses.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-sn`: This option tells Nmap not to perform a port scan once the host discovery
    is performed. Instead it just lists out the live IP addresses found. This uses
    an ICMP echo to identify the available hosts, which will not work if there is
    a firewall present in the network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-Pn` (No ping): Generally, Nmap performs activities such as probing, port
    detection, service detection, and OS detection options only if the hosts are found
    live. This option allows Nmap to perform all the operations on the list of hosts
    provided to scan. For example, if a class `C` IP address with subnet `/28` is
    specified, then Nmap performs probing on all the `255` hosts instead of checking
    for live hosts and performing the activity on them. This is an extensive scan
    option and generates a lot of traffic.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-PS` (port list): This option sends an empty TCP packet with SYN flag set.
    This is also called a syn ping packet. Generally, for a full TCP connection to
    happen, an ACK is generated by the host on receiving the SYN packet. Once the
    ACK packet is received, the Nmap host generates a SYN/ACK packet, which then establishes
    a connection. Instead, Nmap sends an RST, which is a reset flag packet, to drop
    the connection and thus declare the port to be open. This will allow you to determine
    the open ports without actually creating a connection, because any connection
    made will be logged at the network and system levels. This option also allows
    attackers to not leave any tracks while performing the detection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is no space between `-PS` and the port number. You can specify a range
    of ports to perform the operation on as well.
  prefs: []
  type: TYPE_NORMAL
- en: '`-PA`(port list): This is similar to SYN scanning and is also known as the
    TCP ACK ping scan. Nmap generates TCP packets with ACK set. ACK basically acknowledges
    any data transferred over the connection, but there will be no existing connection
    from the Nmap machine to the host, thus it returns an RST-flag-enabled packet.
    This will allow Nmap to determine that the port is open and has a service functioning.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-PU` (port list): This is also similar to TCP scans, but this UDP ping scan
    is for UDP ports. For most ports the packet is empty, except for any service-specific
    ports, such as DNS and NTP. If a DNS ping packet reaches a closed port, the UDP
    probe should trigger an ICMP unreachable response from the host. If this response
    is not generated or the connection appears to be idle, it means that the port
    is functioning and a service is running on the port.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-PY` (port list): This switch generates an SCTP packet containing a part of
    INIT data. This means that you are trying to establish a connection. If the destination
    port is closed, an ABORT packet is sent back; otherwise, the connection moves
    on to the next step of a four-way handshake by replying with an INIT-ACK. Once
    the INIT-ACK is received, the Nmap machine sends an INIT-ACK and marks the port
    as open instead of creating a connection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-PO` (protocol list): This protocol list scan allows Nmap to configure the
    packet with a couple of protocols enabled in the packet header, such as ICMP and
    IGMP, to see whether there are any host unreachable responses to determine that
    the protocols are not supported by the destination port, thereby marking the port
    as closed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-PR` (ARP Ping): ARP scan allows Nmap to send ARP requests to the remote host.
    If there is any response then Nmap marks the host as live without examining any
    other results. This also supports IPv6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--disable-arp-ping`: This allows a user to obtain specific results when a
    network device or proxy responds to the ARP requests, creating a situation where
    all the hosts appear to be up.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--traceroute`: Traceroute is a post scan module that determines the best port
    to use to reach the remote host. This works by sending low TTL packets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-n`: This allows users to skip the DNS resolution process. This can be slow,
    and thus the scan takes a lot of time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-R`: This option is the counterpart to `-n`. It mandates that Nmap performs
    reverse DNS resolutions for all the live hosts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--system-dns`: This can be used to specify that the DNS servers used for resolution
    should be the DNS servers that are configured on the hosts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--dns-servers <server1>[,<server2>[,...]]`: This option can be used to define
    specific DNS addresses to be used for reverse DNS resolution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'These are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `nmap` in Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the following syntax in the Command Prompt to perform a live scan only,
    and not probe for a port scan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/62549eba-8225-4a6b-9aca-b060708d5f08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following syntax in the Command Prompt to perform a no ping scan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/58275939-ee6b-4420-8016-1a548a23f99b.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These options help the user to streamline their requirement to identify the
    live hosts and thus perform further probes. Using these different scan options,
    a user can target a specific port and protocol to obtain the current status of
    the host. Most of these options can be further configured with advanced probing
    techniques, such as arguments for service detection and operating system detection,
    to obtain further information about these instances.
  prefs: []
  type: TYPE_NORMAL
- en: How to identify open ports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are the six port states that are present in Nmap:'
  prefs: []
  type: TYPE_NORMAL
- en: '`open`: This means that the port is functioning and has a service running or
    accessing it. The service can thus accept any connections made as per the protocol
    and service in use on this port.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`closed`: A closed port is not being accessed by any service, there is no service
    running on it. Thus, no connections made externally will be successful on these
    ports.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`filtered`: This status is associated with ports from which no response was
    received due to the packet filtering mechanism present within the network.  This
    might be caused by an intermediate network protection device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`unfiltered`: This status is associated with the ports that Nmap was not able
    to determine whether they were open or closed. Mostly ACK scan labels ports to
    be in unfiltered state; moreover, scans such as SYN and FIN can help resolve such
    issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Open|filtered`: Nmap classifies ports with this type when no response is received
    from them. The UDP, IP protocol, FIN, NULL, and Xmas scans associate this status
    with the ports.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`closed|filtered`: This status is associated with ports that Nmap was not able
    to determine whether they were open or closed. Only idle scans use this status.
    Nmap provides various scan options for the user to craft a packet to obtain the
    desired result for Nmap to classify whether the port is open or closed. Most of
    these scan types are only allowed for administrative users because they have access
    to creating and sending raw packets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-sS (TCP SYN Scan)`: This is also called a half-open scan because TCP requires
    a three-way handshake to be completed before a connection is established. The
    Nmap machine generates a TCP SYN packet to which the remote port responds with
    TCP ACK, and then instead of sending a SYN/ACK packet, Nmap sends an RST flag
    to destroy the handshake, thereby preventing a connection. The port is considered
    if the Nmap SYN packet receives an ACK or SYN packet as a response.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-sT (TCP connect scan)`: If a user does not have the required privileges to
    send a raw packet, or when a SYN scan is not an option, a TCP connect scan is
    used. As the name suggests, Nmap performs a complete three-way handshake and creates
    a connection to consider a port to be open.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-sU (UDP scans)`: UDP scans send a packet to well-known ports, such as `53` and
    `61`, and it can then be performed on all ports. It sends protocol-specific packets
    to the famous ports and a generic UDP packet to the remaining ports. If the ports
    scanned return an ICMP unreachable error, then the port is closed. But if there
    is no response from a port it is marked as open filtered. In order to find out
    whether the port is actually running a service and is open, we can run a service
    detection scan.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '` -sY (SCTP INIT scan)`: The SCTP INIT scan has already been discussed in the
    *How to perform host discovery* section. In order to perform this scan, there
    should be a running SCTP module.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-sN; -sF; -sX (TCP NULL, FIN, and Xmas scans)`: In order to perform a deeper
    probe, Nmap provides an option to craft packets with different flags, such as
    FIN, PSH, and URG. If no flags are set, then it is called a Null scan. If FIN
    flags are set, then it is called a FIN scan, and if all three flags are set, then
    it is called an Xmas scan.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-sA (TCP ACK scan)`: The TCP ACK scan has already been discussed in the *How
    to perform host discovery* section.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '` -sW (TCP Window scan)`: The TCP Window scan works by the value of the TCP
    Window field of the RST packets received. Most systems have a window of zero for
    the RST packet of closed ports and a positive value for the open ports. This lists
    the port as closed instead of unfiltered once the RST packet is received.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--scanflags (Custom TCP scan)`: The `Custom TCP scan` allows a user to set
    various flags in the TCP packet, such as URG, SYN, ACK, FIN, PSH, URG, and RST,
    thereby allowing the user to create a custom packet for the probe.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-sO (IP protocol scan)`: This scan allows you to define the protocol for which
    the scan is being performed, such as TCP, UDP, ICMP, and IGMP, thus a specific
    packet is created for the probe.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-b <FTP relay host> (FTP bounce scan)`: This allows the user to connect to
    one FTP host and then relay the files to another FTP host, which is mentioned
    in the argument.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'These are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `nmap` in Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the following syntax in the Command Prompt to perform a TCP SYN scan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/b37cee37-1e84-4e96-ad93-5892e06904fc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following syntax in the Command Prompt to perform a TCP Connect scan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/c91515f1-dfbf-4c3e-bc00-40ad551d9dd7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following syntax in the Command Prompt to perform a TCP NULL scan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/ededddd1-4dae-4fe5-9992-2cf546b49dd9.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These options help the user to streamline their requirement to identify the
    open ports and thus perform further attacks. Using these different port scan options,
    a user can target a specific port and protocol to obtain the current status of
    the port. Further reconnaissance can be performed on the port by obtaining the
    exact service name and the version, which we will see in further sections of the
    book.
  prefs: []
  type: TYPE_NORMAL
- en: How to manage specification and scan order
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Nmap provides various options to specify ports to be scanned in a random or
    sequential order. All the Nmap scans, without any ports specified or any specific
    NSE script provided as an argument, by default scan only the top 1,000 ports:'
  prefs: []
  type: TYPE_NORMAL
- en: '`-p <port ranges>`: This option can be used to configure the ports to be scanned
    in multiple formats. It can be a range or a list. General representation of the
    syntax would be `–p1-65535` if you want to perform a full port scan or `–p1`,
    `2`, `3`, or `4` as a random list that can be non-serial in nature.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--exclude-ports <port ranges>`: It is a tedious task to prepare a list of
    ports to be scanned when the requirement is a full port with a few exclusions.
    In such cases, you can use the exclude ports flag to exclude the ports that are
    not to be scanned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-F (Fast (limited port) scan)`: The fast scan further reduces the default
    number of ports scanned from 1,000 to 100\. This will reduce the scan time immensely
    and thus provide quicker results, as the name suggests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-r (Don''t randomize ports)`: By default, Nmap randomizes the port order for
    the scan. This option allows the user to instruct Nmap to follow a strict order
    for the ports to be scanned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--port-ratio <ratio>`: This scans all ports in the Nmap-services file with
    a ratio greater than the one given. `<ratio>` must be between `0.0` and `1.0`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--top-ports <n>`: This scans the `<n>` highest-ratio ports found in the Nmap-services
    file after excluding all ports specified by `--exclude-ports`. `<n>` must be `1`
    or greater.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `nmap` in Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the following syntax in the Command Prompt to perform a scan between ports
    `0-100`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/e813fc01-460b-417c-b749-215d513d1695.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following syntax in the Command Prompt to perform a fast scan on the
    top `100` ports:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/81bd1db5-a73c-4394-a4db-721f5c0d8c20.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following syntax in the Command Prompt to perform a scan without any
    port specification:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/05d93e1f-d75c-449e-86cf-6766537a2ba4.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Providing options to specify the ports in both ranges and lists will allow the
    user to optimize their scans, thereby delivering quicker results, as a full port
    scan in general takes 10 times longer than a 1,000-port scan or a port-specified
    scan. This will also allow the user to find out hosts with specific ports open.
  prefs: []
  type: TYPE_NORMAL
- en: How to perform a script and version scan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While performing penetration tests, reconnaissance is really important for informing
    the next steps of testing. Even though Nmap provides the open ports and the version
    of the service running on the port, you will need to know the exact version or
    the name of the service that is running to prepare further exploits or to gain
    further knowledge of the system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Nmap-service-probes database contains specific packet construction techniques
    to probe specific services and analyze the responses received from them. Nmap
    provides information about the service protocol, the application name, the version
    number, the hostname, the device type, and the OS family. It also sometimes determines
    whether the service is open to connections or if any default logins are available
    for the service:'
  prefs: []
  type: TYPE_NORMAL
- en: '`-sV` (version detection): This flag enables Nmap to perform version detection
    on the particular host. This flag has options that can be used in conjunction
    with it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--allports`: Nmap skips some ports that have a default function enabled when
    a connection is made. This option will enable users to skip any such exclusions
    and perform an all-port scan as per the syntax provided.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--version-intensity <intensity>`: This defines the intensity with which the
    probes are configured to determine the version. The value of this flag has a range
    between `0-9`, the default being `7`. The higher the value, the better the chances
    of the service versions being accurate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--version-light`: This is used to configure lighter probes to reduce the scan
    time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--version-all`: This sets the probe intensity at `9`, thereby making the scan
    slower and the results having a chance of being more accurate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--version-trace`: This prints out a lot of information about the version scans
    that are being performed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `nmap` in Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the following syntax in the Command Prompt to perform a service scan on
    the port range `0-100`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/b4bf7bdf-b8f3-47cf-acef-814cbc833773.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following syntax in the Command Prompt to perform a service scan on
    the port range `0-100` and see debug info of the scan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/92f4cd54-57bb-4ba3-a496-33731f2d5b20.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works …
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A version scan helps the user obtain approximate version and name of the service
    running. For example, if a user identifies that a certain version of the FTP is
    running on the remote host, they can search for related exploits for that version
    as there will be version-dependent vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: How to detect operating system
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Nmap uses TCP/IP stack fingerprinting for OS detection.This is done by crafting
    custom TCP and UDP packets and analyzing their responses. After generating various
    such probes and comparing the results to the `Nmap-os-db` database of more than
    2,600 known OS fingerprints and provides the OS version. The fingerprint provides
    details such as the vendor name, OS name, OS generation, device type, and also
    their Common Platform Enumeration (CPE) representation. Nmap also provides an
    option for the user to submit the fingerprint obtained if it is not present in
    the Nmap database of operating signatures:'
  prefs: []
  type: TYPE_NORMAL
- en: '`-O` (Enable OS detection): This enables OS detection for an Nmap scan. This
    flag further has options that can be used in conjunction with it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--osscan-limit`: This option will reduce the scan time when a list of hosts
    is being scanned by skipping the hosts with no ports open for OS detection, thereby
    providing faster results for live hosts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--osscan-guess; --fuzzy`: If Nmap is not able to identify the OS, it tries
    to provide the closest signature, and the similarities between the signatures
    should be very high. The flags listed here will allow Nmap to guess more aggressively
    whether the exact OS has been found.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--max-os-tries`: Nmap by default retries five times if the operating system
    probe is not able to identify a perfect match. This will allow the users to limit
    these tries and thus save a lot of scan time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `nmap` in Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the following syntax in the Command Prompt to perform OS detection:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/aa75b831-7d28-4cdc-b8c2-36eec6403aa9.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Identifying the operating system running on a remote host could be of great
    use to any vulnerability scanning or penetration testing process, as this will
    allow you to differentiate between the applicable vulnerabilities and exploits.
  prefs: []
  type: TYPE_NORMAL
- en: How to detect and bypass network protection systems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The basic function of Nmap is to generate custom packets and analyze their
    response once they are sent to the remote hosts. This sometimes is not allowed
    by network protection systems such as firewalls and intrusion prevention and detection
    systems. In this recipe, we will discuss some of the methods that can be used
    to bypass these protections:'
  prefs: []
  type: TYPE_NORMAL
- en: '`-f` (Fragment packets): Most firewalls perform stateful and stateless packet
    inspection for which they examine the content of the packets and decide whether
    to allow the packet or drop it based on its contents. In order to bypass this,
    Nmap provides an option to fragment the packets so that the network device will
    not be able to construct the packet to read the correct contents, thereby bypassing
    the protection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--mtu` (Maximum transmission unit specification): This works similar to the
    preceding method of creating packets of different sizes. With MTU you can specify
    the packet size in multiples of `8`, such as `8`, `16`, `24`, `32`, and so on.
    This will allow Nmap to create packets of this size, thereby bypassing the protection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-D` (decoy address): This will allow Nmap to generate packets from a decoy
    address. This will generate similar traffic with multiple source IP addresses,
    thereby making it difficult for the network protection system to determine the
    source of traffic generation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--source-port` (Source port specification): If the network device is configured
    to disallow traffic generated by Nmap from a specific port, setting a random port
    number using this option will allow you to bypass this configuration on the network
    protection system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--data-length` (Random data append): Using this option, you can add data to
    the packet generated by Nmap and then create a packet with a lot of unnecessary
    random data, making it difficult for the network protection system to understand
    and block the traffic.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--randomize-hosts` (Randomizing hosts): This option will allow Nmap to scan
    the hosts randomly by generating pattern-less traffic, which could be ignored
    by the network protection system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '` --spoof-mac` (MAC address spoofing): This option will allow the user to bypass
    any MAC address restriction put in place by the network protection systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `nmap` in the Command Prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the following syntax in the Command Prompt to perform a scan to generate
    fragmented packets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/350cd5fe-72dc-4871-844f-2330a67c951d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following syntax in the Command Prompt to perform a scan to generate
    packets with the MTU specification:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/e659f63e-6b5f-416a-b4a7-c286f0d53c3f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following syntax in the Command Prompt to perform a decoy scan from
    the IP address mentioned:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/5c9c04b8-54da-419e-b1e2-3a3c40a090d5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following syntax in the Command Prompt to perform a scan to append
    random data to the packets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/7b1d3af8-1304-4dab-9c0b-cbf47456d059.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Network protection systems such as firewalls and intrusion prevention and detection
    systems can result in false positives by dropping packets that consist of probes
    generated by Nmap. The bypass techniques can be used to develop better results
    in reconnaissance.
  prefs: []
  type: TYPE_NORMAL
- en: How to use Zenmap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Zenmap is the graphical interface of Nmap. It is open source and comes in the
    same installation package as Nmap:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1f2ac6ca-72e3-41ef-8da1-aa154f300d95.png)'
  prefs: []
  type: TYPE_IMG
- en: Sometimes, working with command-line tools can be tedious for administrators,
    thus Zenmap acts as an alternate GUI option.
  prefs: []
  type: TYPE_NORMAL
- en: How do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open Zenmap from the list of programs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the target to be scanned in the text field provided, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b271c4f6-8610-426a-a632-f76dbca43b6c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select Quick scan from the Profile drop-down list, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6e0323d6-0cce-4fb8-a8d7-d734d33d1bd3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This will perform a fast scan with the `–F` option, thereby giving results
    for the top 100 ports along with a detailed analysis in different tabs, as shown
    in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/83b00147-8efa-46e6-abd7-72556080e940.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Ports/Hosts tab shows the various open ports along with the services and
    versions running on them based on the options selected in the scans:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5e3e61b5-38f2-4fe9-9b36-e8972439f75f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Topology tab shows the network topology detected. This will help an attacker
    to map the entire network in cases when entire subnets are scanned:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7ac4051a-edac-44ca-a17a-c4c518df6fbf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Host Details tab gives information about the MAC address, the state of
    the host, the number of open and filtered ports, and more:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/85878cf3-c8fe-464f-88ca-83ab64bae5c7.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once the user selects the type of scan and the various other options provided
    by Zenmap and proceeds to scan, the Zenmap interface will call the Nmap engine
    in the backend to perform similar operations to the command-line interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7aa2195e-9122-4948-8c3a-3091aa2f5262.png)'
  prefs: []
  type: TYPE_IMG
- en: Zenmap also provides various other options to filter the hosts, compare results,
    search scan results, save scan results, and more.
  prefs: []
  type: TYPE_NORMAL
